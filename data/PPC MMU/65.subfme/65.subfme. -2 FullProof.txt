
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,0,465}                       Premise(F2)
	S3= ICache[addr]={31,rT,rA,0,465}                           Premise(F3)
	S4= GPRegs[rA]=a                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)
	S6= XER[CA]=ca                                              Premise(F6)

IF	S7= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S8= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S9= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S10= PC.Out=addr                                            PC-Out(S1)
	S11= XER.SOOut=so                                           XER-SO-Out(S5)
	S12= XER.CAOut=ca                                           XER-CA-Out(S6)
	S13= PIDReg.Out=>IMMU.PID                                   Premise(F7)
	S14= IMMU.PID=pid                                           Path(S7,S13)
	S15= PC.Out=>IMMU.IEA                                       Premise(F8)
	S16= IMMU.IEA=addr                                          Path(S10,S15)
	S17= IMMU.Addr={pid,addr}                                   IMMU-Search(S14,S16)
	S18= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S14,S16)
	S19= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S20= IAddrReg.In={pid,addr}                                 Path(S17,S19)
	S21= IMMU.Hit=>IMMUHitReg.In                                Premise(F10)
	S22= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S18,S21)
	S23= PC.Out=>ICache.IEA                                     Premise(F11)
	S24= ICache.IEA=addr                                        Path(S10,S23)
	S25= ICache.Hit=ICacheHit(addr)                             ICache-Search(S24)
	S26= ICache.Out={31,rT,rA,0,465}                            ICache-Search(S24,S3)
	S27= ICache.Out=>ICacheReg.In                               Premise(F12)
	S28= ICacheReg.In={31,rT,rA,0,465}                          Path(S26,S27)
	S29= ICache.Hit=>ICacheHitReg.In                            Premise(F13)
	S30= ICacheHitReg.In=ICacheHit(addr)                        Path(S25,S29)
	S31= IMMUHitReg.Out=>CU.IMemHit                             Premise(F14)
	S32= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F15)
	S33= IAddrReg.Out=>IMem.RAddr                               Premise(F16)
	S34= IMem.Out=>IRMux.MemData                                Premise(F17)
	S35= ICacheReg.Out=>IRMux.CacheData                         Premise(F18)
	S36= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F19)
	S37= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F20)
	S38= IRMux.Out=>IR.In                                       Premise(F21)
	S39= IMem.MEM8WordOut=>ICache.WData                         Premise(F22)
	S40= PC.Out=>ICache.IEA                                     Premise(F23)
	S41= IR.Out0_5=>CU.Op                                       Premise(F24)
	S42= IR.Out11_15=>GPRegs.RReg1                              Premise(F25)
	S43= IR.Out21_31=>CU.IRFunc                                 Premise(F26)
	S44= GPRegs.Rdata1=>A.In                                    Premise(F27)
	S45= A.Out=>ALU.A                                           Premise(F28)
	S46= B.Out=>ALU.B                                           Premise(F29)
	S47= XER.CAOut=>ALU.CAIn                                    Premise(F30)
	S48= ALU.CAIn=ca                                            Path(S12,S47)
	S49= CU.Func=>ALU.Func                                      Premise(F31)
	S50= ALU.Out=>ALUOut.In                                     Premise(F32)
	S51= ALU.CA=>CAReg.In                                       Premise(F33)
	S52= ALU.CMP=>DataCmb.A                                     Premise(F34)
	S53= XER.SOOut=>DataCmb.B                                   Premise(F35)
	S54= DataCmb.B=so                                           Path(S11,S53)
	S55= DataCmb.Out=>DR4bit.In                                 Premise(F36)
	S56= IR.Out6_10=>GPRegs.WReg                                Premise(F37)
	S57= ALUOut.Out=>GPRegs.WData                               Premise(F38)
	S58= DR4bit.Out=>CRRegs.CR0In                               Premise(F39)
	S59= CAReg.Out=>XER.CAIn                                    Premise(F40)
	S60= CtrlPIDReg=0                                           Premise(F41)
	S61= [PIDReg]=pid                                           PIDReg-Hold(S0,S60)
	S62= CtrlIMMU=0                                             Premise(F42)
	S63= CtrlPC=0                                               Premise(F43)
	S64= CtrlPCInc=0                                            Premise(F44)
	S65= PC[Out]=addr                                           PC-Hold(S1,S63,S64)
	S66= CtrlIAddrReg=1                                         Premise(F45)
	S67= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S20,S66)
	S68= CtrlIMMUHitReg=1                                       Premise(F46)
	S69= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S22,S68)
	S70= CtrlICache=0                                           Premise(F47)
	S71= ICache[addr]={31,rT,rA,0,465}                          ICache-Hold(S3,S70)
	S72= CtrlICacheReg=1                                        Premise(F48)
	S73= [ICacheReg]={31,rT,rA,0,465}                           ICacheReg-Write(S28,S72)
	S74= CtrlICacheHitReg=1                                     Premise(F49)
	S75= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S30,S74)
	S76= CtrlIMem=0                                             Premise(F50)
	S77= IMem[{pid,addr}]={31,rT,rA,0,465}                      IMem-Hold(S2,S76)
	S78= CtrlIRMux=0                                            Premise(F51)
	S79= CtrlIR=0                                               Premise(F52)
	S80= CtrlGPRegs=0                                           Premise(F53)
	S81= GPRegs[rA]=a                                           GPRegs-Hold(S4,S80)
	S82= CtrlA=0                                                Premise(F54)
	S83= CtrlB=0                                                Premise(F55)
	S84= CtrlXERSO=0                                            Premise(F56)
	S85= XER[SO]=so                                             XER-SO-Hold(S5,S84)
	S86= CtrlXEROV=0                                            Premise(F57)
	S87= CtrlXERCA=0                                            Premise(F58)
	S88= XER[CA]=ca                                             XER-CA-Hold(S6,S87)
	S89= CtrlALUOut=0                                           Premise(F59)
	S90= CtrlCAReg=0                                            Premise(F60)
	S91= CtrlDR4bit=0                                           Premise(F61)
	S92= CtrlCRRegs=0                                           Premise(F62)
	S93= CtrlCRRegsCR0=0                                        Premise(F63)
	S94= CtrlCRRegsW4bitRegs=0                                  Premise(F64)
	S95= CtrlCRRegsW1bitRegs=0                                  Premise(F65)

IMMU	S96= PIDReg.Out=pid                                         PIDReg-Out(S61)
	S97= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S61)
	S98= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S61)
	S99= PC.Out=addr                                            PC-Out(S65)
	S100= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S67)
	S101= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S67)
	S102= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S67)
	S103= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S69)
	S104= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S69)
	S105= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S69)
	S106= ICacheReg.Out={31,rT,rA,0,465}                        ICacheReg-Out(S73)
	S107= ICacheReg.Out26_31={31,rT,rA,0,465}[26:31]            ICacheReg-Out(S73)
	S108= ICacheReg.Out30_31={31,rT,rA,0,465}[30:31]            ICacheReg-Out(S73)
	S109= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S75)
	S110= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S75)
	S111= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S75)
	S112= XER.SOOut=so                                          XER-SO-Out(S85)
	S113= XER.CAOut=ca                                          XER-CA-Out(S88)
	S114= PIDReg.Out=>IMMU.PID                                  Premise(F66)
	S115= IMMU.PID=pid                                          Path(S96,S114)
	S116= PC.Out=>IMMU.IEA                                      Premise(F67)
	S117= IMMU.IEA=addr                                         Path(S99,S116)
	S118= IMMU.Addr={pid,addr}                                  IMMU-Search(S115,S117)
	S119= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S115,S117)
	S120= IMMU.Addr=>IAddrReg.In                                Premise(F68)
	S121= IAddrReg.In={pid,addr}                                Path(S118,S120)
	S122= IMMU.Hit=>IMMUHitReg.In                               Premise(F69)
	S123= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S119,S122)
	S124= PC.Out=>ICache.IEA                                    Premise(F70)
	S125= ICache.IEA=addr                                       Path(S99,S124)
	S126= ICache.Hit=ICacheHit(addr)                            ICache-Search(S125)
	S127= ICache.Out={31,rT,rA,0,465}                           ICache-Search(S125,S71)
	S128= ICache.Out=>ICacheReg.In                              Premise(F71)
	S129= ICacheReg.In={31,rT,rA,0,465}                         Path(S127,S128)
	S130= ICache.Hit=>ICacheHitReg.In                           Premise(F72)
	S131= ICacheHitReg.In=ICacheHit(addr)                       Path(S126,S130)
	S132= IMMUHitReg.Out=>CU.IMemHit                            Premise(F73)
	S133= CU.IMemHit=IMMUHit(pid,addr)                          Path(S103,S132)
	S134= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F74)
	S135= CU.ICacheHit=ICacheHit(addr)                          Path(S109,S134)
	S136= IAddrReg.Out=>IMem.RAddr                              Premise(F75)
	S137= IMem.RAddr={pid,addr}                                 Path(S100,S136)
	S138= IMem.Out={31,rT,rA,0,465}                             IMem-Read(S137,S77)
	S139= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S137,S77)
	S140= IMem.Out=>IRMux.MemData                               Premise(F76)
	S141= IRMux.MemData={31,rT,rA,0,465}                        Path(S138,S140)
	S142= ICacheReg.Out=>IRMux.CacheData                        Premise(F77)
	S143= IRMux.CacheData={31,rT,rA,0,465}                      Path(S106,S142)
	S144= IRMux.Out={31,rT,rA,0,465}                            IRMux-Select(S141,S143)
	S145= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F78)
	S146= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S103,S145)
	S147= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F79)
	S148= IRMux.CacheSel=ICacheHit(addr)                        Path(S109,S147)
	S149= IRMux.Out=>IR.In                                      Premise(F80)
	S150= IR.In={31,rT,rA,0,465}                                Path(S144,S149)
	S151= IMem.MEM8WordOut=>ICache.WData                        Premise(F81)
	S152= ICache.WData=IMemGet8Word({pid,addr})                 Path(S139,S151)
	S153= PC.Out=>ICache.IEA                                    Premise(F82)
	S154= IR.Out0_5=>CU.Op                                      Premise(F83)
	S155= IR.Out11_15=>GPRegs.RReg1                             Premise(F84)
	S156= IR.Out21_31=>CU.IRFunc                                Premise(F85)
	S157= GPRegs.Rdata1=>A.In                                   Premise(F86)
	S158= A.Out=>ALU.A                                          Premise(F87)
	S159= B.Out=>ALU.B                                          Premise(F88)
	S160= XER.CAOut=>ALU.CAIn                                   Premise(F89)
	S161= ALU.CAIn=ca                                           Path(S113,S160)
	S162= CU.Func=>ALU.Func                                     Premise(F90)
	S163= ALU.Out=>ALUOut.In                                    Premise(F91)
	S164= ALU.CA=>CAReg.In                                      Premise(F92)
	S165= ALU.CMP=>DataCmb.A                                    Premise(F93)
	S166= XER.SOOut=>DataCmb.B                                  Premise(F94)
	S167= DataCmb.B=so                                          Path(S112,S166)
	S168= DataCmb.Out=>DR4bit.In                                Premise(F95)
	S169= IR.Out6_10=>GPRegs.WReg                               Premise(F96)
	S170= ALUOut.Out=>GPRegs.WData                              Premise(F97)
	S171= DR4bit.Out=>CRRegs.CR0In                              Premise(F98)
	S172= CAReg.Out=>XER.CAIn                                   Premise(F99)
	S173= CtrlPIDReg=0                                          Premise(F100)
	S174= [PIDReg]=pid                                          PIDReg-Hold(S61,S173)
	S175= CtrlIMMU=0                                            Premise(F101)
	S176= CtrlPC=0                                              Premise(F102)
	S177= CtrlPCInc=1                                           Premise(F103)
	S178= PC[Out]=addr+4                                        PC-Inc(S65,S176,S177)
	S179= PC[CIA]=addr                                          PC-Inc(S65,S176,S177)
	S180= CtrlIAddrReg=0                                        Premise(F104)
	S181= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S67,S180)
	S182= CtrlIMMUHitReg=0                                      Premise(F105)
	S183= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S69,S182)
	S184= CtrlICache=0                                          Premise(F106)
	S185= ICache[addr]={31,rT,rA,0,465}                         ICache-Hold(S71,S184)
	S186= CtrlICacheReg=0                                       Premise(F107)
	S187= [ICacheReg]={31,rT,rA,0,465}                          ICacheReg-Hold(S73,S186)
	S188= CtrlICacheHitReg=0                                    Premise(F108)
	S189= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S75,S188)
	S190= CtrlIMem=0                                            Premise(F109)
	S191= IMem[{pid,addr}]={31,rT,rA,0,465}                     IMem-Hold(S77,S190)
	S192= CtrlIRMux=0                                           Premise(F110)
	S193= CtrlIR=1                                              Premise(F111)
	S194= [IR]={31,rT,rA,0,465}                                 IR-Write(S150,S193)
	S195= CtrlGPRegs=0                                          Premise(F112)
	S196= GPRegs[rA]=a                                          GPRegs-Hold(S81,S195)
	S197= CtrlA=0                                               Premise(F113)
	S198= CtrlB=0                                               Premise(F114)
	S199= CtrlXERSO=0                                           Premise(F115)
	S200= XER[SO]=so                                            XER-SO-Hold(S85,S199)
	S201= CtrlXEROV=0                                           Premise(F116)
	S202= CtrlXERCA=0                                           Premise(F117)
	S203= XER[CA]=ca                                            XER-CA-Hold(S88,S202)
	S204= CtrlALUOut=0                                          Premise(F118)
	S205= CtrlCAReg=0                                           Premise(F119)
	S206= CtrlDR4bit=0                                          Premise(F120)
	S207= CtrlCRRegs=0                                          Premise(F121)
	S208= CtrlCRRegsCR0=0                                       Premise(F122)
	S209= CtrlCRRegsW4bitRegs=0                                 Premise(F123)
	S210= CtrlCRRegsW1bitRegs=0                                 Premise(F124)

ID	S211= PIDReg.Out=pid                                        PIDReg-Out(S174)
	S212= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S174)
	S213= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S174)
	S214= PC.Out=addr+4                                         PC-Out(S178)
	S215= PC.CIA=addr                                           PC-Out(S179)
	S216= PC.CIA31_28=addr[31:28]                               PC-Out(S179)
	S217= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S181)
	S218= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S181)
	S219= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S181)
	S220= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S183)
	S221= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S183)
	S222= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S183)
	S223= ICacheReg.Out={31,rT,rA,0,465}                        ICacheReg-Out(S187)
	S224= ICacheReg.Out26_31={31,rT,rA,0,465}[26:31]            ICacheReg-Out(S187)
	S225= ICacheReg.Out30_31={31,rT,rA,0,465}[30:31]            ICacheReg-Out(S187)
	S226= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S189)
	S227= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S189)
	S228= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S189)
	S229= IR.Out0_5=31                                          IR-Out(S194)
	S230= IR.Out6_10=rT                                         IR-Out(S194)
	S231= IR.Out11_15=rA                                        IR-Out(S194)
	S232= IR.Out16_20=0                                         IR-Out(S194)
	S233= IR.Out21_31=465                                       IR-Out(S194)
	S234= XER.SOOut=so                                          XER-SO-Out(S200)
	S235= XER.CAOut=ca                                          XER-CA-Out(S203)
	S236= PIDReg.Out=>IMMU.PID                                  Premise(F125)
	S237= IMMU.PID=pid                                          Path(S211,S236)
	S238= PC.Out=>IMMU.IEA                                      Premise(F126)
	S239= IMMU.IEA=addr+4                                       Path(S214,S238)
	S240= IMMU.Addr={pid,addr+4}                                IMMU-Search(S237,S239)
	S241= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S237,S239)
	S242= IMMU.Addr=>IAddrReg.In                                Premise(F127)
	S243= IAddrReg.In={pid,addr+4}                              Path(S240,S242)
	S244= IMMU.Hit=>IMMUHitReg.In                               Premise(F128)
	S245= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S241,S244)
	S246= PC.Out=>ICache.IEA                                    Premise(F129)
	S247= ICache.IEA=addr+4                                     Path(S214,S246)
	S248= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S247)
	S249= ICache.Out=>ICacheReg.In                              Premise(F130)
	S250= ICache.Hit=>ICacheHitReg.In                           Premise(F131)
	S251= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S248,S250)
	S252= IMMUHitReg.Out=>CU.IMemHit                            Premise(F132)
	S253= CU.IMemHit=IMMUHit(pid,addr)                          Path(S220,S252)
	S254= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F133)
	S255= CU.ICacheHit=ICacheHit(addr)                          Path(S226,S254)
	S256= IAddrReg.Out=>IMem.RAddr                              Premise(F134)
	S257= IMem.RAddr={pid,addr}                                 Path(S217,S256)
	S258= IMem.Out={31,rT,rA,0,465}                             IMem-Read(S257,S191)
	S259= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S257,S191)
	S260= IMem.Out=>IRMux.MemData                               Premise(F135)
	S261= IRMux.MemData={31,rT,rA,0,465}                        Path(S258,S260)
	S262= ICacheReg.Out=>IRMux.CacheData                        Premise(F136)
	S263= IRMux.CacheData={31,rT,rA,0,465}                      Path(S223,S262)
	S264= IRMux.Out={31,rT,rA,0,465}                            IRMux-Select(S261,S263)
	S265= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F137)
	S266= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S220,S265)
	S267= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F138)
	S268= IRMux.CacheSel=ICacheHit(addr)                        Path(S226,S267)
	S269= IRMux.Out=>IR.In                                      Premise(F139)
	S270= IR.In={31,rT,rA,0,465}                                Path(S264,S269)
	S271= IMem.MEM8WordOut=>ICache.WData                        Premise(F140)
	S272= ICache.WData=IMemGet8Word({pid,addr})                 Path(S259,S271)
	S273= PC.Out=>ICache.IEA                                    Premise(F141)
	S274= IR.Out0_5=>CU.Op                                      Premise(F142)
	S275= CU.Op=31                                              Path(S229,S274)
	S276= IR.Out11_15=>GPRegs.RReg1                             Premise(F143)
	S277= GPRegs.RReg1=rA                                       Path(S231,S276)
	S278= GPRegs.Rdata1=a                                       GPRegs-Read(S277,S196)
	S279= IR.Out21_31=>CU.IRFunc                                Premise(F144)
	S280= CU.IRFunc=465                                         Path(S233,S279)
	S281= CU.Func=alu_subfe                                     CU(S275,S280)
	S282= GPRegs.Rdata1=>A.In                                   Premise(F145)
	S283= A.In=a                                                Path(S278,S282)
	S284= B.In=32'hFFFFFFFF                                     Premise(F146)
	S285= A.Out=>ALU.A                                          Premise(F147)
	S286= B.Out=>ALU.B                                          Premise(F148)
	S287= XER.CAOut=>ALU.CAIn                                   Premise(F149)
	S288= ALU.CAIn=ca                                           Path(S235,S287)
	S289= CU.Func=>ALU.Func                                     Premise(F150)
	S290= ALU.Func=alu_subfe                                    Path(S281,S289)
	S291= ALU.Out=>ALUOut.In                                    Premise(F151)
	S292= ALU.CA=>CAReg.In                                      Premise(F152)
	S293= ALU.CMP=>DataCmb.A                                    Premise(F153)
	S294= XER.SOOut=>DataCmb.B                                  Premise(F154)
	S295= DataCmb.B=so                                          Path(S234,S294)
	S296= DataCmb.Out=>DR4bit.In                                Premise(F155)
	S297= IR.Out6_10=>GPRegs.WReg                               Premise(F156)
	S298= GPRegs.WReg=rT                                        Path(S230,S297)
	S299= ALUOut.Out=>GPRegs.WData                              Premise(F157)
	S300= DR4bit.Out=>CRRegs.CR0In                              Premise(F158)
	S301= CAReg.Out=>XER.CAIn                                   Premise(F159)
	S302= CtrlPIDReg=0                                          Premise(F160)
	S303= [PIDReg]=pid                                          PIDReg-Hold(S174,S302)
	S304= CtrlIMMU=0                                            Premise(F161)
	S305= CtrlPC=0                                              Premise(F162)
	S306= CtrlPCInc=0                                           Premise(F163)
	S307= PC[CIA]=addr                                          PC-Hold(S179,S306)
	S308= PC[Out]=addr+4                                        PC-Hold(S178,S305,S306)
	S309= CtrlIAddrReg=0                                        Premise(F164)
	S310= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S181,S309)
	S311= CtrlIMMUHitReg=0                                      Premise(F165)
	S312= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S183,S311)
	S313= CtrlICache=0                                          Premise(F166)
	S314= ICache[addr]={31,rT,rA,0,465}                         ICache-Hold(S185,S313)
	S315= CtrlICacheReg=0                                       Premise(F167)
	S316= [ICacheReg]={31,rT,rA,0,465}                          ICacheReg-Hold(S187,S315)
	S317= CtrlICacheHitReg=0                                    Premise(F168)
	S318= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S189,S317)
	S319= CtrlIMem=0                                            Premise(F169)
	S320= IMem[{pid,addr}]={31,rT,rA,0,465}                     IMem-Hold(S191,S319)
	S321= CtrlIRMux=0                                           Premise(F170)
	S322= CtrlIR=0                                              Premise(F171)
	S323= [IR]={31,rT,rA,0,465}                                 IR-Hold(S194,S322)
	S324= CtrlGPRegs=0                                          Premise(F172)
	S325= GPRegs[rA]=a                                          GPRegs-Hold(S196,S324)
	S326= CtrlA=1                                               Premise(F173)
	S327= [A]=a                                                 A-Write(S283,S326)
	S328= CtrlB=1                                               Premise(F174)
	S329= [B]=32'hFFFFFFFF                                      B-Write(S284,S328)
	S330= CtrlXERSO=0                                           Premise(F175)
	S331= XER[SO]=so                                            XER-SO-Hold(S200,S330)
	S332= CtrlXEROV=0                                           Premise(F176)
	S333= CtrlXERCA=0                                           Premise(F177)
	S334= XER[CA]=ca                                            XER-CA-Hold(S203,S333)
	S335= CtrlALUOut=0                                          Premise(F178)
	S336= CtrlCAReg=0                                           Premise(F179)
	S337= CtrlDR4bit=0                                          Premise(F180)
	S338= CtrlCRRegs=0                                          Premise(F181)
	S339= CtrlCRRegsCR0=0                                       Premise(F182)
	S340= CtrlCRRegsW4bitRegs=0                                 Premise(F183)
	S341= CtrlCRRegsW1bitRegs=0                                 Premise(F184)

EX	S342= PIDReg.Out=pid                                        PIDReg-Out(S303)
	S343= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S303)
	S344= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S303)
	S345= PC.CIA=addr                                           PC-Out(S307)
	S346= PC.CIA31_28=addr[31:28]                               PC-Out(S307)
	S347= PC.Out=addr+4                                         PC-Out(S308)
	S348= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S310)
	S349= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S310)
	S350= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S310)
	S351= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S312)
	S352= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S312)
	S353= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S312)
	S354= ICacheReg.Out={31,rT,rA,0,465}                        ICacheReg-Out(S316)
	S355= ICacheReg.Out26_31={31,rT,rA,0,465}[26:31]            ICacheReg-Out(S316)
	S356= ICacheReg.Out30_31={31,rT,rA,0,465}[30:31]            ICacheReg-Out(S316)
	S357= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S318)
	S358= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S318)
	S359= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S318)
	S360= IR.Out0_5=31                                          IR-Out(S323)
	S361= IR.Out6_10=rT                                         IR-Out(S323)
	S362= IR.Out11_15=rA                                        IR-Out(S323)
	S363= IR.Out16_20=0                                         IR-Out(S323)
	S364= IR.Out21_31=465                                       IR-Out(S323)
	S365= A.Out=a                                               A-Out(S327)
	S366= A.Out26_31=a[26:31]                                   A-Out(S327)
	S367= A.Out30_31=a[30:31]                                   A-Out(S327)
	S368= B.Out=32'hFFFFFFFF                                    B-Out(S329)
	S369= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S329)
	S370= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S329)
	S371= XER.SOOut=so                                          XER-SO-Out(S331)
	S372= XER.CAOut=ca                                          XER-CA-Out(S334)
	S373= PIDReg.Out=>IMMU.PID                                  Premise(F185)
	S374= IMMU.PID=pid                                          Path(S342,S373)
	S375= PC.Out=>IMMU.IEA                                      Premise(F186)
	S376= IMMU.IEA=addr+4                                       Path(S347,S375)
	S377= IMMU.Addr={pid,addr+4}                                IMMU-Search(S374,S376)
	S378= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S374,S376)
	S379= IMMU.Addr=>IAddrReg.In                                Premise(F187)
	S380= IAddrReg.In={pid,addr+4}                              Path(S377,S379)
	S381= IMMU.Hit=>IMMUHitReg.In                               Premise(F188)
	S382= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S378,S381)
	S383= PC.Out=>ICache.IEA                                    Premise(F189)
	S384= ICache.IEA=addr+4                                     Path(S347,S383)
	S385= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S384)
	S386= ICache.Out=>ICacheReg.In                              Premise(F190)
	S387= ICache.Hit=>ICacheHitReg.In                           Premise(F191)
	S388= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S385,S387)
	S389= IMMUHitReg.Out=>CU.IMemHit                            Premise(F192)
	S390= CU.IMemHit=IMMUHit(pid,addr)                          Path(S351,S389)
	S391= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F193)
	S392= CU.ICacheHit=ICacheHit(addr)                          Path(S357,S391)
	S393= IAddrReg.Out=>IMem.RAddr                              Premise(F194)
	S394= IMem.RAddr={pid,addr}                                 Path(S348,S393)
	S395= IMem.Out={31,rT,rA,0,465}                             IMem-Read(S394,S320)
	S396= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S394,S320)
	S397= IMem.Out=>IRMux.MemData                               Premise(F195)
	S398= IRMux.MemData={31,rT,rA,0,465}                        Path(S395,S397)
	S399= ICacheReg.Out=>IRMux.CacheData                        Premise(F196)
	S400= IRMux.CacheData={31,rT,rA,0,465}                      Path(S354,S399)
	S401= IRMux.Out={31,rT,rA,0,465}                            IRMux-Select(S398,S400)
	S402= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F197)
	S403= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S351,S402)
	S404= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F198)
	S405= IRMux.CacheSel=ICacheHit(addr)                        Path(S357,S404)
	S406= IRMux.Out=>IR.In                                      Premise(F199)
	S407= IR.In={31,rT,rA,0,465}                                Path(S401,S406)
	S408= IMem.MEM8WordOut=>ICache.WData                        Premise(F200)
	S409= ICache.WData=IMemGet8Word({pid,addr})                 Path(S396,S408)
	S410= PC.Out=>ICache.IEA                                    Premise(F201)
	S411= IR.Out0_5=>CU.Op                                      Premise(F202)
	S412= CU.Op=31                                              Path(S360,S411)
	S413= IR.Out11_15=>GPRegs.RReg1                             Premise(F203)
	S414= GPRegs.RReg1=rA                                       Path(S362,S413)
	S415= GPRegs.Rdata1=a                                       GPRegs-Read(S414,S325)
	S416= IR.Out21_31=>CU.IRFunc                                Premise(F204)
	S417= CU.IRFunc=465                                         Path(S364,S416)
	S418= CU.Func=alu_subfe                                     CU(S412,S417)
	S419= GPRegs.Rdata1=>A.In                                   Premise(F205)
	S420= A.In=a                                                Path(S415,S419)
	S421= A.Out=>ALU.A                                          Premise(F206)
	S422= ALU.A=a                                               Path(S365,S421)
	S423= B.Out=>ALU.B                                          Premise(F207)
	S424= ALU.B=32'hFFFFFFFF                                    Path(S368,S423)
	S425= XER.CAOut=>ALU.CAIn                                   Premise(F208)
	S426= ALU.CAIn=ca                                           Path(S372,S425)
	S427= CU.Func=>ALU.Func                                     Premise(F209)
	S428= ALU.Func=alu_subfe                                    Path(S418,S427)
	S429= ALU.Out=32'hFFFFFFFF-a+ca                             ALU(S422,S424,S426)
	S430= ALU.CMP=Compare0(32'hFFFFFFFF-a+ca)                   ALU(S422,S424,S426)
	S431= ALU.OV=OverFlow(32'hFFFFFFFF-a+ca)                    ALU(S422,S424,S426)
	S432= ALU.CA=Carry(32'hFFFFFFFF-a+ca)                       ALU(S422,S424,S426)
	S433= ALU.Out=>ALUOut.In                                    Premise(F210)
	S434= ALUOut.In=32'hFFFFFFFF-a+ca                           Path(S429,S433)
	S435= ALU.CA=>CAReg.In                                      Premise(F211)
	S436= CAReg.In=Carry(32'hFFFFFFFF-a+ca)                     Path(S432,S435)
	S437= ALU.CMP=>DataCmb.A                                    Premise(F212)
	S438= DataCmb.A=Compare0(32'hFFFFFFFF-a+ca)                 Path(S430,S437)
	S439= XER.SOOut=>DataCmb.B                                  Premise(F213)
	S440= DataCmb.B=so                                          Path(S371,S439)
	S441= DataCmb.Out={Compare0(32'hFFFFFFFF-a+ca),so}          DataCmb(S438,S440)
	S442= DataCmb.Out=>DR4bit.In                                Premise(F214)
	S443= DR4bit.In={Compare0(32'hFFFFFFFF-a+ca),so}            Path(S441,S442)
	S444= IR.Out6_10=>GPRegs.WReg                               Premise(F215)
	S445= GPRegs.WReg=rT                                        Path(S361,S444)
	S446= ALUOut.Out=>GPRegs.WData                              Premise(F216)
	S447= DR4bit.Out=>CRRegs.CR0In                              Premise(F217)
	S448= CAReg.Out=>XER.CAIn                                   Premise(F218)
	S449= CtrlPIDReg=0                                          Premise(F219)
	S450= [PIDReg]=pid                                          PIDReg-Hold(S303,S449)
	S451= CtrlIMMU=0                                            Premise(F220)
	S452= CtrlPC=0                                              Premise(F221)
	S453= CtrlPCInc=0                                           Premise(F222)
	S454= PC[CIA]=addr                                          PC-Hold(S307,S453)
	S455= PC[Out]=addr+4                                        PC-Hold(S308,S452,S453)
	S456= CtrlIAddrReg=0                                        Premise(F223)
	S457= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S310,S456)
	S458= CtrlIMMUHitReg=0                                      Premise(F224)
	S459= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S312,S458)
	S460= CtrlICache=0                                          Premise(F225)
	S461= ICache[addr]={31,rT,rA,0,465}                         ICache-Hold(S314,S460)
	S462= CtrlICacheReg=0                                       Premise(F226)
	S463= [ICacheReg]={31,rT,rA,0,465}                          ICacheReg-Hold(S316,S462)
	S464= CtrlICacheHitReg=0                                    Premise(F227)
	S465= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S318,S464)
	S466= CtrlIMem=0                                            Premise(F228)
	S467= IMem[{pid,addr}]={31,rT,rA,0,465}                     IMem-Hold(S320,S466)
	S468= CtrlIRMux=0                                           Premise(F229)
	S469= CtrlIR=0                                              Premise(F230)
	S470= [IR]={31,rT,rA,0,465}                                 IR-Hold(S323,S469)
	S471= CtrlGPRegs=0                                          Premise(F231)
	S472= GPRegs[rA]=a                                          GPRegs-Hold(S325,S471)
	S473= CtrlA=0                                               Premise(F232)
	S474= [A]=a                                                 A-Hold(S327,S473)
	S475= CtrlB=0                                               Premise(F233)
	S476= [B]=32'hFFFFFFFF                                      B-Hold(S329,S475)
	S477= CtrlXERSO=0                                           Premise(F234)
	S478= XER[SO]=so                                            XER-SO-Hold(S331,S477)
	S479= CtrlXEROV=0                                           Premise(F235)
	S480= CtrlXERCA=0                                           Premise(F236)
	S481= XER[CA]=ca                                            XER-CA-Hold(S334,S480)
	S482= CtrlALUOut=1                                          Premise(F237)
	S483= [ALUOut]=32'hFFFFFFFF-a+ca                            ALUOut-Write(S434,S482)
	S484= CtrlCAReg=1                                           Premise(F238)
	S485= [CAReg]=Carry(32'hFFFFFFFF-a+ca)                      CAReg-Write(S436,S484)
	S486= CtrlDR4bit=1                                          Premise(F239)
	S487= [DR4bit]={Compare0(32'hFFFFFFFF-a+ca),so}             DR4bit-Write(S443,S486)
	S488= CtrlCRRegs=0                                          Premise(F240)
	S489= CtrlCRRegsCR0=0                                       Premise(F241)
	S490= CtrlCRRegsW4bitRegs=0                                 Premise(F242)
	S491= CtrlCRRegsW1bitRegs=0                                 Premise(F243)

MEM	S492= PIDReg.Out=pid                                        PIDReg-Out(S450)
	S493= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S450)
	S494= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S450)
	S495= PC.CIA=addr                                           PC-Out(S454)
	S496= PC.CIA31_28=addr[31:28]                               PC-Out(S454)
	S497= PC.Out=addr+4                                         PC-Out(S455)
	S498= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S457)
	S499= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S457)
	S500= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S457)
	S501= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S459)
	S502= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S459)
	S503= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S459)
	S504= ICacheReg.Out={31,rT,rA,0,465}                        ICacheReg-Out(S463)
	S505= ICacheReg.Out26_31={31,rT,rA,0,465}[26:31]            ICacheReg-Out(S463)
	S506= ICacheReg.Out30_31={31,rT,rA,0,465}[30:31]            ICacheReg-Out(S463)
	S507= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S465)
	S508= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S465)
	S509= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S465)
	S510= IR.Out0_5=31                                          IR-Out(S470)
	S511= IR.Out6_10=rT                                         IR-Out(S470)
	S512= IR.Out11_15=rA                                        IR-Out(S470)
	S513= IR.Out16_20=0                                         IR-Out(S470)
	S514= IR.Out21_31=465                                       IR-Out(S470)
	S515= A.Out=a                                               A-Out(S474)
	S516= A.Out26_31=a[26:31]                                   A-Out(S474)
	S517= A.Out30_31=a[30:31]                                   A-Out(S474)
	S518= B.Out=32'hFFFFFFFF                                    B-Out(S476)
	S519= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S476)
	S520= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S476)
	S521= XER.SOOut=so                                          XER-SO-Out(S478)
	S522= XER.CAOut=ca                                          XER-CA-Out(S481)
	S523= ALUOut.Out=32'hFFFFFFFF-a+ca                          ALUOut-Out(S483)
	S524= ALUOut.Out26_31=32'hFFFFFFFF-a+ca[26:31]              ALUOut-Out(S483)
	S525= ALUOut.Out30_31=32'hFFFFFFFF-a+ca[30:31]              ALUOut-Out(S483)
	S526= CAReg.Out=Carry(32'hFFFFFFFF-a+ca)                    CAReg-Out(S485)
	S527= CAReg.Out26_31=Carry(32'hFFFFFFFF-a+ca)[26:31]        CAReg-Out(S485)
	S528= CAReg.Out30_31=Carry(32'hFFFFFFFF-a+ca)[30:31]        CAReg-Out(S485)
	S529= DR4bit.Out={Compare0(32'hFFFFFFFF-a+ca),so}           DR4bit-Out(S487)
	S530= DR4bit.Out26_31={Compare0(32'hFFFFFFFF-a+ca),so}[26:31]DR4bit-Out(S487)
	S531= DR4bit.Out30_31={Compare0(32'hFFFFFFFF-a+ca),so}[30:31]DR4bit-Out(S487)
	S532= PIDReg.Out=>IMMU.PID                                  Premise(F244)
	S533= IMMU.PID=pid                                          Path(S492,S532)
	S534= PC.Out=>IMMU.IEA                                      Premise(F245)
	S535= IMMU.IEA=addr+4                                       Path(S497,S534)
	S536= IMMU.Addr={pid,addr+4}                                IMMU-Search(S533,S535)
	S537= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S533,S535)
	S538= IMMU.Addr=>IAddrReg.In                                Premise(F246)
	S539= IAddrReg.In={pid,addr+4}                              Path(S536,S538)
	S540= IMMU.Hit=>IMMUHitReg.In                               Premise(F247)
	S541= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S537,S540)
	S542= PC.Out=>ICache.IEA                                    Premise(F248)
	S543= ICache.IEA=addr+4                                     Path(S497,S542)
	S544= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S543)
	S545= ICache.Out=>ICacheReg.In                              Premise(F249)
	S546= ICache.Hit=>ICacheHitReg.In                           Premise(F250)
	S547= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S544,S546)
	S548= IMMUHitReg.Out=>CU.IMemHit                            Premise(F251)
	S549= CU.IMemHit=IMMUHit(pid,addr)                          Path(S501,S548)
	S550= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F252)
	S551= CU.ICacheHit=ICacheHit(addr)                          Path(S507,S550)
	S552= IAddrReg.Out=>IMem.RAddr                              Premise(F253)
	S553= IMem.RAddr={pid,addr}                                 Path(S498,S552)
	S554= IMem.Out={31,rT,rA,0,465}                             IMem-Read(S553,S467)
	S555= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S553,S467)
	S556= IMem.Out=>IRMux.MemData                               Premise(F254)
	S557= IRMux.MemData={31,rT,rA,0,465}                        Path(S554,S556)
	S558= ICacheReg.Out=>IRMux.CacheData                        Premise(F255)
	S559= IRMux.CacheData={31,rT,rA,0,465}                      Path(S504,S558)
	S560= IRMux.Out={31,rT,rA,0,465}                            IRMux-Select(S557,S559)
	S561= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F256)
	S562= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S501,S561)
	S563= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F257)
	S564= IRMux.CacheSel=ICacheHit(addr)                        Path(S507,S563)
	S565= IRMux.Out=>IR.In                                      Premise(F258)
	S566= IR.In={31,rT,rA,0,465}                                Path(S560,S565)
	S567= IMem.MEM8WordOut=>ICache.WData                        Premise(F259)
	S568= ICache.WData=IMemGet8Word({pid,addr})                 Path(S555,S567)
	S569= PC.Out=>ICache.IEA                                    Premise(F260)
	S570= IR.Out0_5=>CU.Op                                      Premise(F261)
	S571= CU.Op=31                                              Path(S510,S570)
	S572= IR.Out11_15=>GPRegs.RReg1                             Premise(F262)
	S573= GPRegs.RReg1=rA                                       Path(S512,S572)
	S574= GPRegs.Rdata1=a                                       GPRegs-Read(S573,S472)
	S575= IR.Out21_31=>CU.IRFunc                                Premise(F263)
	S576= CU.IRFunc=465                                         Path(S514,S575)
	S577= CU.Func=alu_subfe                                     CU(S571,S576)
	S578= GPRegs.Rdata1=>A.In                                   Premise(F264)
	S579= A.In=a                                                Path(S574,S578)
	S580= A.Out=>ALU.A                                          Premise(F265)
	S581= ALU.A=a                                               Path(S515,S580)
	S582= B.Out=>ALU.B                                          Premise(F266)
	S583= ALU.B=32'hFFFFFFFF                                    Path(S518,S582)
	S584= XER.CAOut=>ALU.CAIn                                   Premise(F267)
	S585= ALU.CAIn=ca                                           Path(S522,S584)
	S586= CU.Func=>ALU.Func                                     Premise(F268)
	S587= ALU.Func=alu_subfe                                    Path(S577,S586)
	S588= ALU.Out=32'hFFFFFFFF-a+ca                             ALU(S581,S583,S585)
	S589= ALU.CMP=Compare0(32'hFFFFFFFF-a+ca)                   ALU(S581,S583,S585)
	S590= ALU.OV=OverFlow(32'hFFFFFFFF-a+ca)                    ALU(S581,S583,S585)
	S591= ALU.CA=Carry(32'hFFFFFFFF-a+ca)                       ALU(S581,S583,S585)
	S592= ALU.Out=>ALUOut.In                                    Premise(F269)
	S593= ALUOut.In=32'hFFFFFFFF-a+ca                           Path(S588,S592)
	S594= ALU.CA=>CAReg.In                                      Premise(F270)
	S595= CAReg.In=Carry(32'hFFFFFFFF-a+ca)                     Path(S591,S594)
	S596= ALU.CMP=>DataCmb.A                                    Premise(F271)
	S597= DataCmb.A=Compare0(32'hFFFFFFFF-a+ca)                 Path(S589,S596)
	S598= XER.SOOut=>DataCmb.B                                  Premise(F272)
	S599= DataCmb.B=so                                          Path(S521,S598)
	S600= DataCmb.Out={Compare0(32'hFFFFFFFF-a+ca),so}          DataCmb(S597,S599)
	S601= DataCmb.Out=>DR4bit.In                                Premise(F273)
	S602= DR4bit.In={Compare0(32'hFFFFFFFF-a+ca),so}            Path(S600,S601)
	S603= IR.Out6_10=>GPRegs.WReg                               Premise(F274)
	S604= GPRegs.WReg=rT                                        Path(S511,S603)
	S605= ALUOut.Out=>GPRegs.WData                              Premise(F275)
	S606= GPRegs.WData=32'hFFFFFFFF-a+ca                        Path(S523,S605)
	S607= DR4bit.Out=>CRRegs.CR0In                              Premise(F276)
	S608= CRRegs.CR0In={Compare0(32'hFFFFFFFF-a+ca),so}         Path(S529,S607)
	S609= CAReg.Out=>XER.CAIn                                   Premise(F277)
	S610= XER.CAIn=Carry(32'hFFFFFFFF-a+ca)                     Path(S526,S609)
	S611= CtrlPIDReg=0                                          Premise(F278)
	S612= [PIDReg]=pid                                          PIDReg-Hold(S450,S611)
	S613= CtrlIMMU=0                                            Premise(F279)
	S614= CtrlPC=0                                              Premise(F280)
	S615= CtrlPCInc=0                                           Premise(F281)
	S616= PC[CIA]=addr                                          PC-Hold(S454,S615)
	S617= PC[Out]=addr+4                                        PC-Hold(S455,S614,S615)
	S618= CtrlIAddrReg=0                                        Premise(F282)
	S619= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S457,S618)
	S620= CtrlIMMUHitReg=0                                      Premise(F283)
	S621= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S459,S620)
	S622= CtrlICache=0                                          Premise(F284)
	S623= ICache[addr]={31,rT,rA,0,465}                         ICache-Hold(S461,S622)
	S624= CtrlICacheReg=0                                       Premise(F285)
	S625= [ICacheReg]={31,rT,rA,0,465}                          ICacheReg-Hold(S463,S624)
	S626= CtrlICacheHitReg=0                                    Premise(F286)
	S627= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S465,S626)
	S628= CtrlIMem=0                                            Premise(F287)
	S629= IMem[{pid,addr}]={31,rT,rA,0,465}                     IMem-Hold(S467,S628)
	S630= CtrlIRMux=0                                           Premise(F288)
	S631= CtrlIR=0                                              Premise(F289)
	S632= [IR]={31,rT,rA,0,465}                                 IR-Hold(S470,S631)
	S633= CtrlGPRegs=0                                          Premise(F290)
	S634= GPRegs[rA]=a                                          GPRegs-Hold(S472,S633)
	S635= CtrlA=0                                               Premise(F291)
	S636= [A]=a                                                 A-Hold(S474,S635)
	S637= CtrlB=0                                               Premise(F292)
	S638= [B]=32'hFFFFFFFF                                      B-Hold(S476,S637)
	S639= CtrlXERSO=0                                           Premise(F293)
	S640= XER[SO]=so                                            XER-SO-Hold(S478,S639)
	S641= CtrlXEROV=0                                           Premise(F294)
	S642= CtrlXERCA=0                                           Premise(F295)
	S643= XER[CA]=ca                                            XER-CA-Hold(S481,S642)
	S644= CtrlALUOut=0                                          Premise(F296)
	S645= [ALUOut]=32'hFFFFFFFF-a+ca                            ALUOut-Hold(S483,S644)
	S646= CtrlCAReg=0                                           Premise(F297)
	S647= [CAReg]=Carry(32'hFFFFFFFF-a+ca)                      CAReg-Hold(S485,S646)
	S648= CtrlDR4bit=0                                          Premise(F298)
	S649= [DR4bit]={Compare0(32'hFFFFFFFF-a+ca),so}             DR4bit-Hold(S487,S648)
	S650= CtrlCRRegs=0                                          Premise(F299)
	S651= CtrlCRRegsCR0=0                                       Premise(F300)
	S652= CtrlCRRegsW4bitRegs=0                                 Premise(F301)
	S653= CtrlCRRegsW1bitRegs=0                                 Premise(F302)

DMMU1	S654= PIDReg.Out=pid                                        PIDReg-Out(S612)
	S655= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S612)
	S656= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S612)
	S657= PC.CIA=addr                                           PC-Out(S616)
	S658= PC.CIA31_28=addr[31:28]                               PC-Out(S616)
	S659= PC.Out=addr+4                                         PC-Out(S617)
	S660= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S619)
	S661= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S619)
	S662= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S619)
	S663= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S621)
	S664= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S621)
	S665= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S621)
	S666= ICacheReg.Out={31,rT,rA,0,465}                        ICacheReg-Out(S625)
	S667= ICacheReg.Out26_31={31,rT,rA,0,465}[26:31]            ICacheReg-Out(S625)
	S668= ICacheReg.Out30_31={31,rT,rA,0,465}[30:31]            ICacheReg-Out(S625)
	S669= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S627)
	S670= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S627)
	S671= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S627)
	S672= IR.Out0_5=31                                          IR-Out(S632)
	S673= IR.Out6_10=rT                                         IR-Out(S632)
	S674= IR.Out11_15=rA                                        IR-Out(S632)
	S675= IR.Out16_20=0                                         IR-Out(S632)
	S676= IR.Out21_31=465                                       IR-Out(S632)
	S677= A.Out=a                                               A-Out(S636)
	S678= A.Out26_31=a[26:31]                                   A-Out(S636)
	S679= A.Out30_31=a[30:31]                                   A-Out(S636)
	S680= B.Out=32'hFFFFFFFF                                    B-Out(S638)
	S681= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S638)
	S682= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S638)
	S683= XER.SOOut=so                                          XER-SO-Out(S640)
	S684= XER.CAOut=ca                                          XER-CA-Out(S643)
	S685= ALUOut.Out=32'hFFFFFFFF-a+ca                          ALUOut-Out(S645)
	S686= ALUOut.Out26_31=32'hFFFFFFFF-a+ca[26:31]              ALUOut-Out(S645)
	S687= ALUOut.Out30_31=32'hFFFFFFFF-a+ca[30:31]              ALUOut-Out(S645)
	S688= CAReg.Out=Carry(32'hFFFFFFFF-a+ca)                    CAReg-Out(S647)
	S689= CAReg.Out26_31=Carry(32'hFFFFFFFF-a+ca)[26:31]        CAReg-Out(S647)
	S690= CAReg.Out30_31=Carry(32'hFFFFFFFF-a+ca)[30:31]        CAReg-Out(S647)
	S691= DR4bit.Out={Compare0(32'hFFFFFFFF-a+ca),so}           DR4bit-Out(S649)
	S692= DR4bit.Out26_31={Compare0(32'hFFFFFFFF-a+ca),so}[26:31]DR4bit-Out(S649)
	S693= DR4bit.Out30_31={Compare0(32'hFFFFFFFF-a+ca),so}[30:31]DR4bit-Out(S649)
	S694= PIDReg.Out=>IMMU.PID                                  Premise(F303)
	S695= IMMU.PID=pid                                          Path(S654,S694)
	S696= PC.Out=>IMMU.IEA                                      Premise(F304)
	S697= IMMU.IEA=addr+4                                       Path(S659,S696)
	S698= IMMU.Addr={pid,addr+4}                                IMMU-Search(S695,S697)
	S699= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S695,S697)
	S700= IMMU.Addr=>IAddrReg.In                                Premise(F305)
	S701= IAddrReg.In={pid,addr+4}                              Path(S698,S700)
	S702= IMMU.Hit=>IMMUHitReg.In                               Premise(F306)
	S703= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S699,S702)
	S704= PC.Out=>ICache.IEA                                    Premise(F307)
	S705= ICache.IEA=addr+4                                     Path(S659,S704)
	S706= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S705)
	S707= ICache.Out=>ICacheReg.In                              Premise(F308)
	S708= ICache.Hit=>ICacheHitReg.In                           Premise(F309)
	S709= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S706,S708)
	S710= IMMUHitReg.Out=>CU.IMemHit                            Premise(F310)
	S711= CU.IMemHit=IMMUHit(pid,addr)                          Path(S663,S710)
	S712= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F311)
	S713= CU.ICacheHit=ICacheHit(addr)                          Path(S669,S712)
	S714= IAddrReg.Out=>IMem.RAddr                              Premise(F312)
	S715= IMem.RAddr={pid,addr}                                 Path(S660,S714)
	S716= IMem.Out={31,rT,rA,0,465}                             IMem-Read(S715,S629)
	S717= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S715,S629)
	S718= IMem.Out=>IRMux.MemData                               Premise(F313)
	S719= IRMux.MemData={31,rT,rA,0,465}                        Path(S716,S718)
	S720= ICacheReg.Out=>IRMux.CacheData                        Premise(F314)
	S721= IRMux.CacheData={31,rT,rA,0,465}                      Path(S666,S720)
	S722= IRMux.Out={31,rT,rA,0,465}                            IRMux-Select(S719,S721)
	S723= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F315)
	S724= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S663,S723)
	S725= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F316)
	S726= IRMux.CacheSel=ICacheHit(addr)                        Path(S669,S725)
	S727= IRMux.Out=>IR.In                                      Premise(F317)
	S728= IR.In={31,rT,rA,0,465}                                Path(S722,S727)
	S729= IMem.MEM8WordOut=>ICache.WData                        Premise(F318)
	S730= ICache.WData=IMemGet8Word({pid,addr})                 Path(S717,S729)
	S731= PC.Out=>ICache.IEA                                    Premise(F319)
	S732= IR.Out0_5=>CU.Op                                      Premise(F320)
	S733= CU.Op=31                                              Path(S672,S732)
	S734= IR.Out11_15=>GPRegs.RReg1                             Premise(F321)
	S735= GPRegs.RReg1=rA                                       Path(S674,S734)
	S736= GPRegs.Rdata1=a                                       GPRegs-Read(S735,S634)
	S737= IR.Out21_31=>CU.IRFunc                                Premise(F322)
	S738= CU.IRFunc=465                                         Path(S676,S737)
	S739= CU.Func=alu_subfe                                     CU(S733,S738)
	S740= GPRegs.Rdata1=>A.In                                   Premise(F323)
	S741= A.In=a                                                Path(S736,S740)
	S742= A.Out=>ALU.A                                          Premise(F324)
	S743= ALU.A=a                                               Path(S677,S742)
	S744= B.Out=>ALU.B                                          Premise(F325)
	S745= ALU.B=32'hFFFFFFFF                                    Path(S680,S744)
	S746= XER.CAOut=>ALU.CAIn                                   Premise(F326)
	S747= ALU.CAIn=ca                                           Path(S684,S746)
	S748= CU.Func=>ALU.Func                                     Premise(F327)
	S749= ALU.Func=alu_subfe                                    Path(S739,S748)
	S750= ALU.Out=32'hFFFFFFFF-a+ca                             ALU(S743,S745,S747)
	S751= ALU.CMP=Compare0(32'hFFFFFFFF-a+ca)                   ALU(S743,S745,S747)
	S752= ALU.OV=OverFlow(32'hFFFFFFFF-a+ca)                    ALU(S743,S745,S747)
	S753= ALU.CA=Carry(32'hFFFFFFFF-a+ca)                       ALU(S743,S745,S747)
	S754= ALU.Out=>ALUOut.In                                    Premise(F328)
	S755= ALUOut.In=32'hFFFFFFFF-a+ca                           Path(S750,S754)
	S756= ALU.CA=>CAReg.In                                      Premise(F329)
	S757= CAReg.In=Carry(32'hFFFFFFFF-a+ca)                     Path(S753,S756)
	S758= ALU.CMP=>DataCmb.A                                    Premise(F330)
	S759= DataCmb.A=Compare0(32'hFFFFFFFF-a+ca)                 Path(S751,S758)
	S760= XER.SOOut=>DataCmb.B                                  Premise(F331)
	S761= DataCmb.B=so                                          Path(S683,S760)
	S762= DataCmb.Out={Compare0(32'hFFFFFFFF-a+ca),so}          DataCmb(S759,S761)
	S763= DataCmb.Out=>DR4bit.In                                Premise(F332)
	S764= DR4bit.In={Compare0(32'hFFFFFFFF-a+ca),so}            Path(S762,S763)
	S765= IR.Out6_10=>GPRegs.WReg                               Premise(F333)
	S766= GPRegs.WReg=rT                                        Path(S673,S765)
	S767= ALUOut.Out=>GPRegs.WData                              Premise(F334)
	S768= GPRegs.WData=32'hFFFFFFFF-a+ca                        Path(S685,S767)
	S769= DR4bit.Out=>CRRegs.CR0In                              Premise(F335)
	S770= CRRegs.CR0In={Compare0(32'hFFFFFFFF-a+ca),so}         Path(S691,S769)
	S771= CAReg.Out=>XER.CAIn                                   Premise(F336)
	S772= XER.CAIn=Carry(32'hFFFFFFFF-a+ca)                     Path(S688,S771)
	S773= CtrlPIDReg=0                                          Premise(F337)
	S774= [PIDReg]=pid                                          PIDReg-Hold(S612,S773)
	S775= CtrlIMMU=0                                            Premise(F338)
	S776= CtrlPC=0                                              Premise(F339)
	S777= CtrlPCInc=0                                           Premise(F340)
	S778= PC[CIA]=addr                                          PC-Hold(S616,S777)
	S779= PC[Out]=addr+4                                        PC-Hold(S617,S776,S777)
	S780= CtrlIAddrReg=0                                        Premise(F341)
	S781= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S619,S780)
	S782= CtrlIMMUHitReg=0                                      Premise(F342)
	S783= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S621,S782)
	S784= CtrlICache=0                                          Premise(F343)
	S785= ICache[addr]={31,rT,rA,0,465}                         ICache-Hold(S623,S784)
	S786= CtrlICacheReg=0                                       Premise(F344)
	S787= [ICacheReg]={31,rT,rA,0,465}                          ICacheReg-Hold(S625,S786)
	S788= CtrlICacheHitReg=0                                    Premise(F345)
	S789= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S627,S788)
	S790= CtrlIMem=0                                            Premise(F346)
	S791= IMem[{pid,addr}]={31,rT,rA,0,465}                     IMem-Hold(S629,S790)
	S792= CtrlIRMux=0                                           Premise(F347)
	S793= CtrlIR=0                                              Premise(F348)
	S794= [IR]={31,rT,rA,0,465}                                 IR-Hold(S632,S793)
	S795= CtrlGPRegs=0                                          Premise(F349)
	S796= GPRegs[rA]=a                                          GPRegs-Hold(S634,S795)
	S797= CtrlA=0                                               Premise(F350)
	S798= [A]=a                                                 A-Hold(S636,S797)
	S799= CtrlB=0                                               Premise(F351)
	S800= [B]=32'hFFFFFFFF                                      B-Hold(S638,S799)
	S801= CtrlXERSO=0                                           Premise(F352)
	S802= XER[SO]=so                                            XER-SO-Hold(S640,S801)
	S803= CtrlXEROV=0                                           Premise(F353)
	S804= CtrlXERCA=0                                           Premise(F354)
	S805= XER[CA]=ca                                            XER-CA-Hold(S643,S804)
	S806= CtrlALUOut=0                                          Premise(F355)
	S807= [ALUOut]=32'hFFFFFFFF-a+ca                            ALUOut-Hold(S645,S806)
	S808= CtrlCAReg=0                                           Premise(F356)
	S809= [CAReg]=Carry(32'hFFFFFFFF-a+ca)                      CAReg-Hold(S647,S808)
	S810= CtrlDR4bit=0                                          Premise(F357)
	S811= [DR4bit]={Compare0(32'hFFFFFFFF-a+ca),so}             DR4bit-Hold(S649,S810)
	S812= CtrlCRRegs=0                                          Premise(F358)
	S813= CtrlCRRegsCR0=0                                       Premise(F359)
	S814= CtrlCRRegsW4bitRegs=0                                 Premise(F360)
	S815= CtrlCRRegsW1bitRegs=0                                 Premise(F361)

DMMU2	S816= PIDReg.Out=pid                                        PIDReg-Out(S774)
	S817= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S774)
	S818= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S774)
	S819= PC.CIA=addr                                           PC-Out(S778)
	S820= PC.CIA31_28=addr[31:28]                               PC-Out(S778)
	S821= PC.Out=addr+4                                         PC-Out(S779)
	S822= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S781)
	S823= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S781)
	S824= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S781)
	S825= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S783)
	S826= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S783)
	S827= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S783)
	S828= ICacheReg.Out={31,rT,rA,0,465}                        ICacheReg-Out(S787)
	S829= ICacheReg.Out26_31={31,rT,rA,0,465}[26:31]            ICacheReg-Out(S787)
	S830= ICacheReg.Out30_31={31,rT,rA,0,465}[30:31]            ICacheReg-Out(S787)
	S831= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S789)
	S832= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S789)
	S833= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S789)
	S834= IR.Out0_5=31                                          IR-Out(S794)
	S835= IR.Out6_10=rT                                         IR-Out(S794)
	S836= IR.Out11_15=rA                                        IR-Out(S794)
	S837= IR.Out16_20=0                                         IR-Out(S794)
	S838= IR.Out21_31=465                                       IR-Out(S794)
	S839= A.Out=a                                               A-Out(S798)
	S840= A.Out26_31=a[26:31]                                   A-Out(S798)
	S841= A.Out30_31=a[30:31]                                   A-Out(S798)
	S842= B.Out=32'hFFFFFFFF                                    B-Out(S800)
	S843= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S800)
	S844= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S800)
	S845= XER.SOOut=so                                          XER-SO-Out(S802)
	S846= XER.CAOut=ca                                          XER-CA-Out(S805)
	S847= ALUOut.Out=32'hFFFFFFFF-a+ca                          ALUOut-Out(S807)
	S848= ALUOut.Out26_31=32'hFFFFFFFF-a+ca[26:31]              ALUOut-Out(S807)
	S849= ALUOut.Out30_31=32'hFFFFFFFF-a+ca[30:31]              ALUOut-Out(S807)
	S850= CAReg.Out=Carry(32'hFFFFFFFF-a+ca)                    CAReg-Out(S809)
	S851= CAReg.Out26_31=Carry(32'hFFFFFFFF-a+ca)[26:31]        CAReg-Out(S809)
	S852= CAReg.Out30_31=Carry(32'hFFFFFFFF-a+ca)[30:31]        CAReg-Out(S809)
	S853= DR4bit.Out={Compare0(32'hFFFFFFFF-a+ca),so}           DR4bit-Out(S811)
	S854= DR4bit.Out26_31={Compare0(32'hFFFFFFFF-a+ca),so}[26:31]DR4bit-Out(S811)
	S855= DR4bit.Out30_31={Compare0(32'hFFFFFFFF-a+ca),so}[30:31]DR4bit-Out(S811)
	S856= PIDReg.Out=>IMMU.PID                                  Premise(F362)
	S857= IMMU.PID=pid                                          Path(S816,S856)
	S858= PC.Out=>IMMU.IEA                                      Premise(F363)
	S859= IMMU.IEA=addr+4                                       Path(S821,S858)
	S860= IMMU.Addr={pid,addr+4}                                IMMU-Search(S857,S859)
	S861= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S857,S859)
	S862= IMMU.Addr=>IAddrReg.In                                Premise(F364)
	S863= IAddrReg.In={pid,addr+4}                              Path(S860,S862)
	S864= IMMU.Hit=>IMMUHitReg.In                               Premise(F365)
	S865= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S861,S864)
	S866= PC.Out=>ICache.IEA                                    Premise(F366)
	S867= ICache.IEA=addr+4                                     Path(S821,S866)
	S868= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S867)
	S869= ICache.Out=>ICacheReg.In                              Premise(F367)
	S870= ICache.Hit=>ICacheHitReg.In                           Premise(F368)
	S871= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S868,S870)
	S872= IMMUHitReg.Out=>CU.IMemHit                            Premise(F369)
	S873= CU.IMemHit=IMMUHit(pid,addr)                          Path(S825,S872)
	S874= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F370)
	S875= CU.ICacheHit=ICacheHit(addr)                          Path(S831,S874)
	S876= IAddrReg.Out=>IMem.RAddr                              Premise(F371)
	S877= IMem.RAddr={pid,addr}                                 Path(S822,S876)
	S878= IMem.Out={31,rT,rA,0,465}                             IMem-Read(S877,S791)
	S879= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S877,S791)
	S880= IMem.Out=>IRMux.MemData                               Premise(F372)
	S881= IRMux.MemData={31,rT,rA,0,465}                        Path(S878,S880)
	S882= ICacheReg.Out=>IRMux.CacheData                        Premise(F373)
	S883= IRMux.CacheData={31,rT,rA,0,465}                      Path(S828,S882)
	S884= IRMux.Out={31,rT,rA,0,465}                            IRMux-Select(S881,S883)
	S885= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F374)
	S886= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S825,S885)
	S887= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F375)
	S888= IRMux.CacheSel=ICacheHit(addr)                        Path(S831,S887)
	S889= IRMux.Out=>IR.In                                      Premise(F376)
	S890= IR.In={31,rT,rA,0,465}                                Path(S884,S889)
	S891= IMem.MEM8WordOut=>ICache.WData                        Premise(F377)
	S892= ICache.WData=IMemGet8Word({pid,addr})                 Path(S879,S891)
	S893= PC.Out=>ICache.IEA                                    Premise(F378)
	S894= IR.Out0_5=>CU.Op                                      Premise(F379)
	S895= CU.Op=31                                              Path(S834,S894)
	S896= IR.Out11_15=>GPRegs.RReg1                             Premise(F380)
	S897= GPRegs.RReg1=rA                                       Path(S836,S896)
	S898= GPRegs.Rdata1=a                                       GPRegs-Read(S897,S796)
	S899= IR.Out21_31=>CU.IRFunc                                Premise(F381)
	S900= CU.IRFunc=465                                         Path(S838,S899)
	S901= CU.Func=alu_subfe                                     CU(S895,S900)
	S902= GPRegs.Rdata1=>A.In                                   Premise(F382)
	S903= A.In=a                                                Path(S898,S902)
	S904= A.Out=>ALU.A                                          Premise(F383)
	S905= ALU.A=a                                               Path(S839,S904)
	S906= B.Out=>ALU.B                                          Premise(F384)
	S907= ALU.B=32'hFFFFFFFF                                    Path(S842,S906)
	S908= XER.CAOut=>ALU.CAIn                                   Premise(F385)
	S909= ALU.CAIn=ca                                           Path(S846,S908)
	S910= CU.Func=>ALU.Func                                     Premise(F386)
	S911= ALU.Func=alu_subfe                                    Path(S901,S910)
	S912= ALU.Out=32'hFFFFFFFF-a+ca                             ALU(S905,S907,S909)
	S913= ALU.CMP=Compare0(32'hFFFFFFFF-a+ca)                   ALU(S905,S907,S909)
	S914= ALU.OV=OverFlow(32'hFFFFFFFF-a+ca)                    ALU(S905,S907,S909)
	S915= ALU.CA=Carry(32'hFFFFFFFF-a+ca)                       ALU(S905,S907,S909)
	S916= ALU.Out=>ALUOut.In                                    Premise(F387)
	S917= ALUOut.In=32'hFFFFFFFF-a+ca                           Path(S912,S916)
	S918= ALU.CA=>CAReg.In                                      Premise(F388)
	S919= CAReg.In=Carry(32'hFFFFFFFF-a+ca)                     Path(S915,S918)
	S920= ALU.CMP=>DataCmb.A                                    Premise(F389)
	S921= DataCmb.A=Compare0(32'hFFFFFFFF-a+ca)                 Path(S913,S920)
	S922= XER.SOOut=>DataCmb.B                                  Premise(F390)
	S923= DataCmb.B=so                                          Path(S845,S922)
	S924= DataCmb.Out={Compare0(32'hFFFFFFFF-a+ca),so}          DataCmb(S921,S923)
	S925= DataCmb.Out=>DR4bit.In                                Premise(F391)
	S926= DR4bit.In={Compare0(32'hFFFFFFFF-a+ca),so}            Path(S924,S925)
	S927= IR.Out6_10=>GPRegs.WReg                               Premise(F392)
	S928= GPRegs.WReg=rT                                        Path(S835,S927)
	S929= ALUOut.Out=>GPRegs.WData                              Premise(F393)
	S930= GPRegs.WData=32'hFFFFFFFF-a+ca                        Path(S847,S929)
	S931= DR4bit.Out=>CRRegs.CR0In                              Premise(F394)
	S932= CRRegs.CR0In={Compare0(32'hFFFFFFFF-a+ca),so}         Path(S853,S931)
	S933= CAReg.Out=>XER.CAIn                                   Premise(F395)
	S934= XER.CAIn=Carry(32'hFFFFFFFF-a+ca)                     Path(S850,S933)
	S935= CtrlPIDReg=0                                          Premise(F396)
	S936= [PIDReg]=pid                                          PIDReg-Hold(S774,S935)
	S937= CtrlIMMU=0                                            Premise(F397)
	S938= CtrlPC=0                                              Premise(F398)
	S939= CtrlPCInc=0                                           Premise(F399)
	S940= PC[CIA]=addr                                          PC-Hold(S778,S939)
	S941= PC[Out]=addr+4                                        PC-Hold(S779,S938,S939)
	S942= CtrlIAddrReg=0                                        Premise(F400)
	S943= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S781,S942)
	S944= CtrlIMMUHitReg=0                                      Premise(F401)
	S945= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S783,S944)
	S946= CtrlICache=0                                          Premise(F402)
	S947= ICache[addr]={31,rT,rA,0,465}                         ICache-Hold(S785,S946)
	S948= CtrlICacheReg=0                                       Premise(F403)
	S949= [ICacheReg]={31,rT,rA,0,465}                          ICacheReg-Hold(S787,S948)
	S950= CtrlICacheHitReg=0                                    Premise(F404)
	S951= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S789,S950)
	S952= CtrlIMem=0                                            Premise(F405)
	S953= IMem[{pid,addr}]={31,rT,rA,0,465}                     IMem-Hold(S791,S952)
	S954= CtrlIRMux=0                                           Premise(F406)
	S955= CtrlIR=0                                              Premise(F407)
	S956= [IR]={31,rT,rA,0,465}                                 IR-Hold(S794,S955)
	S957= CtrlGPRegs=0                                          Premise(F408)
	S958= GPRegs[rA]=a                                          GPRegs-Hold(S796,S957)
	S959= CtrlA=0                                               Premise(F409)
	S960= [A]=a                                                 A-Hold(S798,S959)
	S961= CtrlB=0                                               Premise(F410)
	S962= [B]=32'hFFFFFFFF                                      B-Hold(S800,S961)
	S963= CtrlXERSO=0                                           Premise(F411)
	S964= XER[SO]=so                                            XER-SO-Hold(S802,S963)
	S965= CtrlXEROV=0                                           Premise(F412)
	S966= CtrlXERCA=0                                           Premise(F413)
	S967= XER[CA]=ca                                            XER-CA-Hold(S805,S966)
	S968= CtrlALUOut=0                                          Premise(F414)
	S969= [ALUOut]=32'hFFFFFFFF-a+ca                            ALUOut-Hold(S807,S968)
	S970= CtrlCAReg=0                                           Premise(F415)
	S971= [CAReg]=Carry(32'hFFFFFFFF-a+ca)                      CAReg-Hold(S809,S970)
	S972= CtrlDR4bit=0                                          Premise(F416)
	S973= [DR4bit]={Compare0(32'hFFFFFFFF-a+ca),so}             DR4bit-Hold(S811,S972)
	S974= CtrlCRRegs=0                                          Premise(F417)
	S975= CtrlCRRegsCR0=0                                       Premise(F418)
	S976= CtrlCRRegsW4bitRegs=0                                 Premise(F419)
	S977= CtrlCRRegsW1bitRegs=0                                 Premise(F420)

WB	S978= PIDReg.Out=pid                                        PIDReg-Out(S936)
	S979= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S936)
	S980= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S936)
	S981= PC.CIA=addr                                           PC-Out(S940)
	S982= PC.CIA31_28=addr[31:28]                               PC-Out(S940)
	S983= PC.Out=addr+4                                         PC-Out(S941)
	S984= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S943)
	S985= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S943)
	S986= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S943)
	S987= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S945)
	S988= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S945)
	S989= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S945)
	S990= ICacheReg.Out={31,rT,rA,0,465}                        ICacheReg-Out(S949)
	S991= ICacheReg.Out26_31={31,rT,rA,0,465}[26:31]            ICacheReg-Out(S949)
	S992= ICacheReg.Out30_31={31,rT,rA,0,465}[30:31]            ICacheReg-Out(S949)
	S993= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S951)
	S994= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S951)
	S995= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S951)
	S996= IR.Out0_5=31                                          IR-Out(S956)
	S997= IR.Out6_10=rT                                         IR-Out(S956)
	S998= IR.Out11_15=rA                                        IR-Out(S956)
	S999= IR.Out16_20=0                                         IR-Out(S956)
	S1000= IR.Out21_31=465                                      IR-Out(S956)
	S1001= A.Out=a                                              A-Out(S960)
	S1002= A.Out26_31=a[26:31]                                  A-Out(S960)
	S1003= A.Out30_31=a[30:31]                                  A-Out(S960)
	S1004= B.Out=32'hFFFFFFFF                                   B-Out(S962)
	S1005= B.Out26_31=32'hFFFFFFFF[26:31]                       B-Out(S962)
	S1006= B.Out30_31=32'hFFFFFFFF[30:31]                       B-Out(S962)
	S1007= XER.SOOut=so                                         XER-SO-Out(S964)
	S1008= XER.CAOut=ca                                         XER-CA-Out(S967)
	S1009= ALUOut.Out=32'hFFFFFFFF-a+ca                         ALUOut-Out(S969)
	S1010= ALUOut.Out26_31=32'hFFFFFFFF-a+ca[26:31]             ALUOut-Out(S969)
	S1011= ALUOut.Out30_31=32'hFFFFFFFF-a+ca[30:31]             ALUOut-Out(S969)
	S1012= CAReg.Out=Carry(32'hFFFFFFFF-a+ca)                   CAReg-Out(S971)
	S1013= CAReg.Out26_31=Carry(32'hFFFFFFFF-a+ca)[26:31]       CAReg-Out(S971)
	S1014= CAReg.Out30_31=Carry(32'hFFFFFFFF-a+ca)[30:31]       CAReg-Out(S971)
	S1015= DR4bit.Out={Compare0(32'hFFFFFFFF-a+ca),so}          DR4bit-Out(S973)
	S1016= DR4bit.Out26_31={Compare0(32'hFFFFFFFF-a+ca),so}[26:31]DR4bit-Out(S973)
	S1017= DR4bit.Out30_31={Compare0(32'hFFFFFFFF-a+ca),so}[30:31]DR4bit-Out(S973)
	S1018= PIDReg.Out=>IMMU.PID                                 Premise(F421)
	S1019= IMMU.PID=pid                                         Path(S978,S1018)
	S1020= PC.Out=>IMMU.IEA                                     Premise(F422)
	S1021= IMMU.IEA=addr+4                                      Path(S983,S1020)
	S1022= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1019,S1021)
	S1023= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1019,S1021)
	S1024= IMMU.Addr=>IAddrReg.In                               Premise(F423)
	S1025= IAddrReg.In={pid,addr+4}                             Path(S1022,S1024)
	S1026= IMMU.Hit=>IMMUHitReg.In                              Premise(F424)
	S1027= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1023,S1026)
	S1028= PC.Out=>ICache.IEA                                   Premise(F425)
	S1029= ICache.IEA=addr+4                                    Path(S983,S1028)
	S1030= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1029)
	S1031= ICache.Out=>ICacheReg.In                             Premise(F426)
	S1032= ICache.Hit=>ICacheHitReg.In                          Premise(F427)
	S1033= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1030,S1032)
	S1034= IMMUHitReg.Out=>CU.IMemHit                           Premise(F428)
	S1035= CU.IMemHit=IMMUHit(pid,addr)                         Path(S987,S1034)
	S1036= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F429)
	S1037= CU.ICacheHit=ICacheHit(addr)                         Path(S993,S1036)
	S1038= IAddrReg.Out=>IMem.RAddr                             Premise(F430)
	S1039= IMem.RAddr={pid,addr}                                Path(S984,S1038)
	S1040= IMem.Out={31,rT,rA,0,465}                            IMem-Read(S1039,S953)
	S1041= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1039,S953)
	S1042= IMem.Out=>IRMux.MemData                              Premise(F431)
	S1043= IRMux.MemData={31,rT,rA,0,465}                       Path(S1040,S1042)
	S1044= ICacheReg.Out=>IRMux.CacheData                       Premise(F432)
	S1045= IRMux.CacheData={31,rT,rA,0,465}                     Path(S990,S1044)
	S1046= IRMux.Out={31,rT,rA,0,465}                           IRMux-Select(S1043,S1045)
	S1047= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F433)
	S1048= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S987,S1047)
	S1049= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F434)
	S1050= IRMux.CacheSel=ICacheHit(addr)                       Path(S993,S1049)
	S1051= IRMux.Out=>IR.In                                     Premise(F435)
	S1052= IR.In={31,rT,rA,0,465}                               Path(S1046,S1051)
	S1053= IMem.MEM8WordOut=>ICache.WData                       Premise(F436)
	S1054= ICache.WData=IMemGet8Word({pid,addr})                Path(S1041,S1053)
	S1055= PC.Out=>ICache.IEA                                   Premise(F437)
	S1056= IR.Out0_5=>CU.Op                                     Premise(F438)
	S1057= CU.Op=31                                             Path(S996,S1056)
	S1058= IR.Out11_15=>GPRegs.RReg1                            Premise(F439)
	S1059= GPRegs.RReg1=rA                                      Path(S998,S1058)
	S1060= GPRegs.Rdata1=a                                      GPRegs-Read(S1059,S958)
	S1061= IR.Out21_31=>CU.IRFunc                               Premise(F440)
	S1062= CU.IRFunc=465                                        Path(S1000,S1061)
	S1063= CU.Func=alu_subfe                                    CU(S1057,S1062)
	S1064= GPRegs.Rdata1=>A.In                                  Premise(F441)
	S1065= A.In=a                                               Path(S1060,S1064)
	S1066= A.Out=>ALU.A                                         Premise(F442)
	S1067= ALU.A=a                                              Path(S1001,S1066)
	S1068= B.Out=>ALU.B                                         Premise(F443)
	S1069= ALU.B=32'hFFFFFFFF                                   Path(S1004,S1068)
	S1070= XER.CAOut=>ALU.CAIn                                  Premise(F444)
	S1071= ALU.CAIn=ca                                          Path(S1008,S1070)
	S1072= CU.Func=>ALU.Func                                    Premise(F445)
	S1073= ALU.Func=alu_subfe                                   Path(S1063,S1072)
	S1074= ALU.Out=32'hFFFFFFFF-a+ca                            ALU(S1067,S1069,S1071)
	S1075= ALU.CMP=Compare0(32'hFFFFFFFF-a+ca)                  ALU(S1067,S1069,S1071)
	S1076= ALU.OV=OverFlow(32'hFFFFFFFF-a+ca)                   ALU(S1067,S1069,S1071)
	S1077= ALU.CA=Carry(32'hFFFFFFFF-a+ca)                      ALU(S1067,S1069,S1071)
	S1078= ALU.Out=>ALUOut.In                                   Premise(F446)
	S1079= ALUOut.In=32'hFFFFFFFF-a+ca                          Path(S1074,S1078)
	S1080= ALU.CA=>CAReg.In                                     Premise(F447)
	S1081= CAReg.In=Carry(32'hFFFFFFFF-a+ca)                    Path(S1077,S1080)
	S1082= ALU.CMP=>DataCmb.A                                   Premise(F448)
	S1083= DataCmb.A=Compare0(32'hFFFFFFFF-a+ca)                Path(S1075,S1082)
	S1084= XER.SOOut=>DataCmb.B                                 Premise(F449)
	S1085= DataCmb.B=so                                         Path(S1007,S1084)
	S1086= DataCmb.Out={Compare0(32'hFFFFFFFF-a+ca),so}         DataCmb(S1083,S1085)
	S1087= DataCmb.Out=>DR4bit.In                               Premise(F450)
	S1088= DR4bit.In={Compare0(32'hFFFFFFFF-a+ca),so}           Path(S1086,S1087)
	S1089= IR.Out6_10=>GPRegs.WReg                              Premise(F451)
	S1090= GPRegs.WReg=rT                                       Path(S997,S1089)
	S1091= ALUOut.Out=>GPRegs.WData                             Premise(F452)
	S1092= GPRegs.WData=32'hFFFFFFFF-a+ca                       Path(S1009,S1091)
	S1093= DR4bit.Out=>CRRegs.CR0In                             Premise(F453)
	S1094= CRRegs.CR0In={Compare0(32'hFFFFFFFF-a+ca),so}        Path(S1015,S1093)
	S1095= CAReg.Out=>XER.CAIn                                  Premise(F454)
	S1096= XER.CAIn=Carry(32'hFFFFFFFF-a+ca)                    Path(S1012,S1095)
	S1097= CtrlPIDReg=0                                         Premise(F455)
	S1098= [PIDReg]=pid                                         PIDReg-Hold(S936,S1097)
	S1099= CtrlIMMU=0                                           Premise(F456)
	S1100= CtrlPC=0                                             Premise(F457)
	S1101= CtrlPCInc=0                                          Premise(F458)
	S1102= PC[CIA]=addr                                         PC-Hold(S940,S1101)
	S1103= PC[Out]=addr+4                                       PC-Hold(S941,S1100,S1101)
	S1104= CtrlIAddrReg=0                                       Premise(F459)
	S1105= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S943,S1104)
	S1106= CtrlIMMUHitReg=0                                     Premise(F460)
	S1107= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S945,S1106)
	S1108= CtrlICache=0                                         Premise(F461)
	S1109= ICache[addr]={31,rT,rA,0,465}                        ICache-Hold(S947,S1108)
	S1110= CtrlICacheReg=0                                      Premise(F462)
	S1111= [ICacheReg]={31,rT,rA,0,465}                         ICacheReg-Hold(S949,S1110)
	S1112= CtrlICacheHitReg=0                                   Premise(F463)
	S1113= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S951,S1112)
	S1114= CtrlIMem=0                                           Premise(F464)
	S1115= IMem[{pid,addr}]={31,rT,rA,0,465}                    IMem-Hold(S953,S1114)
	S1116= CtrlIRMux=0                                          Premise(F465)
	S1117= CtrlIR=0                                             Premise(F466)
	S1118= [IR]={31,rT,rA,0,465}                                IR-Hold(S956,S1117)
	S1119= CtrlGPRegs=1                                         Premise(F467)
	S1120= GPRegs[rT]=32'hFFFFFFFF-a+ca                         GPRegs-Write(S1090,S1092,S1119)
	S1121= CtrlA=0                                              Premise(F468)
	S1122= [A]=a                                                A-Hold(S960,S1121)
	S1123= CtrlB=0                                              Premise(F469)
	S1124= [B]=32'hFFFFFFFF                                     B-Hold(S962,S1123)
	S1125= CtrlXERSO=0                                          Premise(F470)
	S1126= XER[SO]=so                                           XER-SO-Hold(S964,S1125)
	S1127= CtrlXEROV=0                                          Premise(F471)
	S1128= CtrlXERCA=1                                          Premise(F472)
	S1129= XER[CA]=Carry(32'hFFFFFFFF-a+ca)                     XER-CA-Write(S1096,S1128)
	S1130= CtrlALUOut=0                                         Premise(F473)
	S1131= [ALUOut]=32'hFFFFFFFF-a+ca                           ALUOut-Hold(S969,S1130)
	S1132= CtrlCAReg=0                                          Premise(F474)
	S1133= [CAReg]=Carry(32'hFFFFFFFF-a+ca)                     CAReg-Hold(S971,S1132)
	S1134= CtrlDR4bit=0                                         Premise(F475)
	S1135= [DR4bit]={Compare0(32'hFFFFFFFF-a+ca),so}            DR4bit-Hold(S973,S1134)
	S1136= CtrlCRRegs=0                                         Premise(F476)
	S1137= CtrlCRRegsCR0=1                                      Premise(F477)
	S1138= CRRegs[CR0]={Compare0(32'hFFFFFFFF-a+ca),so}         CRRegs-CR0-Write(S1094,S1137)
	S1139= CtrlCRRegsW4bitRegs=0                                Premise(F478)
	S1140= CtrlCRRegsW1bitRegs=0                                Premise(F479)

POST	S1098= [PIDReg]=pid                                         PIDReg-Hold(S936,S1097)
	S1102= PC[CIA]=addr                                         PC-Hold(S940,S1101)
	S1103= PC[Out]=addr+4                                       PC-Hold(S941,S1100,S1101)
	S1105= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S943,S1104)
	S1107= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S945,S1106)
	S1109= ICache[addr]={31,rT,rA,0,465}                        ICache-Hold(S947,S1108)
	S1111= [ICacheReg]={31,rT,rA,0,465}                         ICacheReg-Hold(S949,S1110)
	S1113= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S951,S1112)
	S1115= IMem[{pid,addr}]={31,rT,rA,0,465}                    IMem-Hold(S953,S1114)
	S1118= [IR]={31,rT,rA,0,465}                                IR-Hold(S956,S1117)
	S1120= GPRegs[rT]=32'hFFFFFFFF-a+ca                         GPRegs-Write(S1090,S1092,S1119)
	S1122= [A]=a                                                A-Hold(S960,S1121)
	S1124= [B]=32'hFFFFFFFF                                     B-Hold(S962,S1123)
	S1126= XER[SO]=so                                           XER-SO-Hold(S964,S1125)
	S1129= XER[CA]=Carry(32'hFFFFFFFF-a+ca)                     XER-CA-Write(S1096,S1128)
	S1131= [ALUOut]=32'hFFFFFFFF-a+ca                           ALUOut-Hold(S969,S1130)
	S1133= [CAReg]=Carry(32'hFFFFFFFF-a+ca)                     CAReg-Hold(S971,S1132)
	S1135= [DR4bit]={Compare0(32'hFFFFFFFF-a+ca),so}            DR4bit-Hold(S973,S1134)
	S1138= CRRegs[CR0]={Compare0(32'hFFFFFFFF-a+ca),so}         CRRegs-CR0-Write(S1094,S1137)

