
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={18,LI,0,0}                            Premise(F2)

IF	S3= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S4= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S5= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PIDReg.Out=>IMMU.PID                                    Premise(F3)
	S8= IMMU.PID=pid                                            Path(S3,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F4)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S8,S10)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F5)
	S14= IAddrReg.In={pid,addr}                                 Path(S11,S13)
	S15= IMMU.Hit=>IMMUHitReg.In                                Premise(F6)
	S16= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S12,S15)
	S17= PC.Out=>ICache.IEA                                     Premise(F7)
	S18= ICache.IEA=addr                                        Path(S6,S17)
	S19= ICache.Hit=ICacheHit(addr)                             ICache-Search(S18)
	S20= ICache.Out=>ICacheReg.In                               Premise(F8)
	S21= ICache.Hit=>ICacheHitReg.In                            Premise(F9)
	S22= ICacheHitReg.In=ICacheHit(addr)                        Path(S19,S21)
	S23= IMMUHitReg.Out=>CU.IMemHit                             Premise(F10)
	S24= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F11)
	S25= IAddrReg.Out=>IMem.RAddr                               Premise(F12)
	S26= IMem.Out=>IRMux.MemData                                Premise(F13)
	S27= ICacheReg.Out=>IRMux.CacheData                         Premise(F14)
	S28= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F15)
	S29= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F16)
	S30= IRMux.Out=>IR.In                                       Premise(F17)
	S31= IMem.MEM8WordOut=>ICache.WData                         Premise(F18)
	S32= PC.Out=>ICache.IEA                                     Premise(F19)
	S33= IR.Out0_5=>CU.Op                                       Premise(F20)
	S34= IR.Out31=>CU.LK                                        Premise(F21)
	S35= PC.Out=>LR.In                                          Premise(F22)
	S36= LR.In=addr                                             Path(S6,S35)
	S37= IR.Out6_29=>Addr24Ext.In                               Premise(F23)
	S38= Addr24Ext.Out=>A.In                                    Premise(F24)
	S39= IR.Out30=>BaseAddrSel.Sel                              Premise(F25)
	S40= PC.CIA=>BaseAddrSel.PC                                 Premise(F26)
	S41= BaseAddrSel.Out=>B.In                                  Premise(F27)
	S42= A.Out=>ALU.A                                           Premise(F28)
	S43= B.Out=>ALU.B                                           Premise(F29)
	S44= CU.Func=>ALU.Func                                      Premise(F30)
	S45= ALU.Out=>ALUOut.In                                     Premise(F31)
	S46= ALUOut.Out=>PC.In                                      Premise(F32)
	S47= CtrlPIDReg=0                                           Premise(F33)
	S48= [PIDReg]=pid                                           PIDReg-Hold(S0,S47)
	S49= CtrlIMMU=0                                             Premise(F34)
	S50= CtrlPC=0                                               Premise(F35)
	S51= CtrlPCInc=0                                            Premise(F36)
	S52= PC[Out]=addr                                           PC-Hold(S1,S50,S51)
	S53= CtrlIAddrReg=1                                         Premise(F37)
	S54= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S14,S53)
	S55= CtrlIMMUHitReg=1                                       Premise(F38)
	S56= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S16,S55)
	S57= CtrlICache=0                                           Premise(F39)
	S58= CtrlICacheReg=1                                        Premise(F40)
	S59= CtrlICacheHitReg=1                                     Premise(F41)
	S60= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S22,S59)
	S61= CtrlIMem=0                                             Premise(F42)
	S62= IMem[{pid,addr}]={18,LI,0,0}                           IMem-Hold(S2,S61)
	S63= CtrlIRMux=0                                            Premise(F43)
	S64= CtrlIR=0                                               Premise(F44)
	S65= CtrlLR=0                                               Premise(F45)
	S66= CtrlA=0                                                Premise(F46)
	S67= CtrlB=0                                                Premise(F47)
	S68= CtrlALUOut=0                                           Premise(F48)

IMMU	S69= PIDReg.Out=pid                                         PIDReg-Out(S48)
	S70= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S48)
	S71= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S48)
	S72= PC.Out=addr                                            PC-Out(S52)
	S73= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S54)
	S74= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S54)
	S75= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S54)
	S76= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S56)
	S77= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S56)
	S78= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]           IMMUHitReg-Out(S56)
	S79= ICacheHitReg.Out=ICacheHit(addr)                       ICacheHitReg-Out(S60)
	S80= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]           ICacheHitReg-Out(S60)
	S81= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]           ICacheHitReg-Out(S60)
	S82= PIDReg.Out=>IMMU.PID                                   Premise(F49)
	S83= IMMU.PID=pid                                           Path(S69,S82)
	S84= PC.Out=>IMMU.IEA                                       Premise(F50)
	S85= IMMU.IEA=addr                                          Path(S72,S84)
	S86= IMMU.Addr={pid,addr}                                   IMMU-Search(S83,S85)
	S87= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S83,S85)
	S88= IMMU.Addr=>IAddrReg.In                                 Premise(F51)
	S89= IAddrReg.In={pid,addr}                                 Path(S86,S88)
	S90= IMMU.Hit=>IMMUHitReg.In                                Premise(F52)
	S91= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S87,S90)
	S92= PC.Out=>ICache.IEA                                     Premise(F53)
	S93= ICache.IEA=addr                                        Path(S72,S92)
	S94= ICache.Hit=ICacheHit(addr)                             ICache-Search(S93)
	S95= ICache.Out=>ICacheReg.In                               Premise(F54)
	S96= ICache.Hit=>ICacheHitReg.In                            Premise(F55)
	S97= ICacheHitReg.In=ICacheHit(addr)                        Path(S94,S96)
	S98= IMMUHitReg.Out=>CU.IMemHit                             Premise(F56)
	S99= CU.IMemHit=IMMUHit(pid,addr)                           Path(S76,S98)
	S100= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F57)
	S101= CU.ICacheHit=ICacheHit(addr)                          Path(S79,S100)
	S102= IAddrReg.Out=>IMem.RAddr                              Premise(F58)
	S103= IMem.RAddr={pid,addr}                                 Path(S73,S102)
	S104= IMem.Out={18,LI,0,0}                                  IMem-Read(S103,S62)
	S105= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S103,S62)
	S106= IMem.Out=>IRMux.MemData                               Premise(F59)
	S107= IRMux.MemData={18,LI,0,0}                             Path(S104,S106)
	S108= IRMux.Out={18,LI,0,0}                                 IRMux-Select(S107)
	S109= ICacheReg.Out=>IRMux.CacheData                        Premise(F60)
	S110= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F61)
	S111= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S76,S110)
	S112= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F62)
	S113= IRMux.CacheSel=ICacheHit(addr)                        Path(S79,S112)
	S114= IRMux.Out=>IR.In                                      Premise(F63)
	S115= IR.In={18,LI,0,0}                                     Path(S108,S114)
	S116= IMem.MEM8WordOut=>ICache.WData                        Premise(F64)
	S117= ICache.WData=IMemGet8Word({pid,addr})                 Path(S105,S116)
	S118= PC.Out=>ICache.IEA                                    Premise(F65)
	S119= IR.Out0_5=>CU.Op                                      Premise(F66)
	S120= IR.Out31=>CU.LK                                       Premise(F67)
	S121= PC.Out=>LR.In                                         Premise(F68)
	S122= LR.In=addr                                            Path(S72,S121)
	S123= IR.Out6_29=>Addr24Ext.In                              Premise(F69)
	S124= Addr24Ext.Out=>A.In                                   Premise(F70)
	S125= IR.Out30=>BaseAddrSel.Sel                             Premise(F71)
	S126= PC.CIA=>BaseAddrSel.PC                                Premise(F72)
	S127= BaseAddrSel.Out=>B.In                                 Premise(F73)
	S128= A.Out=>ALU.A                                          Premise(F74)
	S129= B.Out=>ALU.B                                          Premise(F75)
	S130= CU.Func=>ALU.Func                                     Premise(F76)
	S131= ALU.Out=>ALUOut.In                                    Premise(F77)
	S132= ALUOut.Out=>PC.In                                     Premise(F78)
	S133= CtrlPIDReg=0                                          Premise(F79)
	S134= [PIDReg]=pid                                          PIDReg-Hold(S48,S133)
	S135= CtrlIMMU=0                                            Premise(F80)
	S136= CtrlPC=0                                              Premise(F81)
	S137= CtrlPCInc=1                                           Premise(F82)
	S138= PC[Out]=addr+4                                        PC-Inc(S52,S136,S137)
	S139= PC[CIA]=addr                                          PC-Inc(S52,S136,S137)
	S140= CtrlIAddrReg=0                                        Premise(F83)
	S141= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S54,S140)
	S142= CtrlIMMUHitReg=0                                      Premise(F84)
	S143= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S56,S142)
	S144= CtrlICache=1                                          Premise(F85)
	S145= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S93,S117,S144)
	S146= CtrlICacheReg=0                                       Premise(F86)
	S147= CtrlICacheHitReg=0                                    Premise(F87)
	S148= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S60,S147)
	S149= CtrlIMem=0                                            Premise(F88)
	S150= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S62,S149)
	S151= CtrlIRMux=0                                           Premise(F89)
	S152= CtrlIR=1                                              Premise(F90)
	S153= [IR]={18,LI,0,0}                                      IR-Write(S115,S152)
	S154= CtrlLR=0                                              Premise(F91)
	S155= CtrlA=0                                               Premise(F92)
	S156= CtrlB=0                                               Premise(F93)
	S157= CtrlALUOut=0                                          Premise(F94)

ID	S158= PIDReg.Out=pid                                        PIDReg-Out(S134)
	S159= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S134)
	S160= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S134)
	S161= PC.Out=addr+4                                         PC-Out(S138)
	S162= PC.CIA=addr                                           PC-Out(S139)
	S163= PC.CIA31_28=addr[31:28]                               PC-Out(S139)
	S164= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S141)
	S165= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S141)
	S166= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S141)
	S167= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S143)
	S168= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S143)
	S169= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S143)
	S170= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S148)
	S171= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S148)
	S172= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S148)
	S173= IR.Out0_5=18                                          IR-Out(S153)
	S174= IR.Out6_29=LI                                         IR-Out(S153)
	S175= IR.Out30=0                                            IR-Out(S153)
	S176= IR.Out31=0                                            IR-Out(S153)
	S177= PIDReg.Out=>IMMU.PID                                  Premise(F95)
	S178= IMMU.PID=pid                                          Path(S158,S177)
	S179= PC.Out=>IMMU.IEA                                      Premise(F96)
	S180= IMMU.IEA=addr+4                                       Path(S161,S179)
	S181= IMMU.Addr={pid,addr+4}                                IMMU-Search(S178,S180)
	S182= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S178,S180)
	S183= IMMU.Addr=>IAddrReg.In                                Premise(F97)
	S184= IAddrReg.In={pid,addr+4}                              Path(S181,S183)
	S185= IMMU.Hit=>IMMUHitReg.In                               Premise(F98)
	S186= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S182,S185)
	S187= PC.Out=>ICache.IEA                                    Premise(F99)
	S188= ICache.IEA=addr+4                                     Path(S161,S187)
	S189= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S188)
	S190= ICache.Out=>ICacheReg.In                              Premise(F100)
	S191= ICache.Hit=>ICacheHitReg.In                           Premise(F101)
	S192= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S189,S191)
	S193= IMMUHitReg.Out=>CU.IMemHit                            Premise(F102)
	S194= CU.IMemHit=IMMUHit(pid,addr)                          Path(S167,S193)
	S195= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F103)
	S196= CU.ICacheHit=ICacheHit(addr)                          Path(S170,S195)
	S197= IAddrReg.Out=>IMem.RAddr                              Premise(F104)
	S198= IMem.RAddr={pid,addr}                                 Path(S164,S197)
	S199= IMem.Out={18,LI,0,0}                                  IMem-Read(S198,S150)
	S200= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S198,S150)
	S201= IMem.Out=>IRMux.MemData                               Premise(F105)
	S202= IRMux.MemData={18,LI,0,0}                             Path(S199,S201)
	S203= IRMux.Out={18,LI,0,0}                                 IRMux-Select(S202)
	S204= ICacheReg.Out=>IRMux.CacheData                        Premise(F106)
	S205= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F107)
	S206= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S167,S205)
	S207= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F108)
	S208= IRMux.CacheSel=ICacheHit(addr)                        Path(S170,S207)
	S209= IRMux.Out=>IR.In                                      Premise(F109)
	S210= IR.In={18,LI,0,0}                                     Path(S203,S209)
	S211= IMem.MEM8WordOut=>ICache.WData                        Premise(F110)
	S212= ICache.WData=IMemGet8Word({pid,addr})                 Path(S200,S211)
	S213= PC.Out=>ICache.IEA                                    Premise(F111)
	S214= IR.Out0_5=>CU.Op                                      Premise(F112)
	S215= CU.Op=18                                              Path(S173,S214)
	S216= IR.Out31=>CU.LK                                       Premise(F113)
	S217= CU.LK=0                                               Path(S176,S216)
	S218= CU.Func=alu_add                                       CU(S215,S217)
	S219= PC.Out=>LR.In                                         Premise(F114)
	S220= LR.In=addr+4                                          Path(S161,S219)
	S221= IR.Out6_29=>Addr24Ext.In                              Premise(F115)
	S222= Addr24Ext.In=LI                                       Path(S174,S221)
	S223= Addr24Ext.Out={6{LI[0]},LI,2'b0}                      Addr24Ext-EXT(S222)
	S224= Addr24Ext.Out=>A.In                                   Premise(F116)
	S225= A.In={6{LI[0]},LI,2'b0}                               Path(S223,S224)
	S226= IR.Out30=>BaseAddrSel.Sel                             Premise(F117)
	S227= BaseAddrSel.Sel=0                                     Path(S175,S226)
	S228= PC.CIA=>BaseAddrSel.PC                                Premise(F118)
	S229= BaseAddrSel.PC=addr                                   Path(S162,S228)
	S230= BaseAddrSel.Out=addr                                  BaseAddrSel(S229)
	S231= BaseAddrSel.Out=>B.In                                 Premise(F119)
	S232= B.In=addr                                             Path(S230,S231)
	S233= A.Out=>ALU.A                                          Premise(F120)
	S234= B.Out=>ALU.B                                          Premise(F121)
	S235= CU.Func=>ALU.Func                                     Premise(F122)
	S236= ALU.Func=alu_add                                      Path(S218,S235)
	S237= ALU.Out=>ALUOut.In                                    Premise(F123)
	S238= ALUOut.Out=>PC.In                                     Premise(F124)
	S239= CtrlPIDReg=0                                          Premise(F125)
	S240= [PIDReg]=pid                                          PIDReg-Hold(S134,S239)
	S241= CtrlIMMU=0                                            Premise(F126)
	S242= CtrlPC=0                                              Premise(F127)
	S243= CtrlPCInc=0                                           Premise(F128)
	S244= PC[CIA]=addr                                          PC-Hold(S139,S243)
	S245= PC[Out]=addr+4                                        PC-Hold(S138,S242,S243)
	S246= CtrlIAddrReg=0                                        Premise(F129)
	S247= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S141,S246)
	S248= CtrlIMMUHitReg=0                                      Premise(F130)
	S249= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S143,S248)
	S250= CtrlICache=0                                          Premise(F131)
	S251= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S145,S250)
	S252= CtrlICacheReg=0                                       Premise(F132)
	S253= CtrlICacheHitReg=0                                    Premise(F133)
	S254= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S148,S253)
	S255= CtrlIMem=0                                            Premise(F134)
	S256= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S150,S255)
	S257= CtrlIRMux=0                                           Premise(F135)
	S258= CtrlIR=0                                              Premise(F136)
	S259= [IR]={18,LI,0,0}                                      IR-Hold(S153,S258)
	S260= CtrlLR=1                                              Premise(F137)
	S261= [LR]=addr+4                                           LR-Write(S220,S260)
	S262= CtrlA=1                                               Premise(F138)
	S263= [A]={6{LI[0]},LI,2'b0}                                A-Write(S225,S262)
	S264= CtrlB=1                                               Premise(F139)
	S265= [B]=addr                                              B-Write(S232,S264)
	S266= CtrlALUOut=0                                          Premise(F140)

EX	S267= PIDReg.Out=pid                                        PIDReg-Out(S240)
	S268= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S240)
	S269= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S240)
	S270= PC.CIA=addr                                           PC-Out(S244)
	S271= PC.CIA31_28=addr[31:28]                               PC-Out(S244)
	S272= PC.Out=addr+4                                         PC-Out(S245)
	S273= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S247)
	S274= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S247)
	S275= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S247)
	S276= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S249)
	S277= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S249)
	S278= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S249)
	S279= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S254)
	S280= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S254)
	S281= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S254)
	S282= IR.Out0_5=18                                          IR-Out(S259)
	S283= IR.Out6_29=LI                                         IR-Out(S259)
	S284= IR.Out30=0                                            IR-Out(S259)
	S285= IR.Out31=0                                            IR-Out(S259)
	S286= LR.Out=addr+4                                         LR-Out(S261)
	S287= LR.Out26_31=addr+4[26:31]                             LR-Out(S261)
	S288= LR.Out30_31=addr+4[30:31]                             LR-Out(S261)
	S289= A.Out={6{LI[0]},LI,2'b0}                              A-Out(S263)
	S290= A.Out26_31={6{LI[0]},LI,2'b0}[26:31]                  A-Out(S263)
	S291= A.Out30_31={6{LI[0]},LI,2'b0}[30:31]                  A-Out(S263)
	S292= B.Out=addr                                            B-Out(S265)
	S293= B.Out26_31=addr[26:31]                                B-Out(S265)
	S294= B.Out30_31=addr[30:31]                                B-Out(S265)
	S295= PIDReg.Out=>IMMU.PID                                  Premise(F141)
	S296= IMMU.PID=pid                                          Path(S267,S295)
	S297= PC.Out=>IMMU.IEA                                      Premise(F142)
	S298= IMMU.IEA=addr+4                                       Path(S272,S297)
	S299= IMMU.Addr={pid,addr+4}                                IMMU-Search(S296,S298)
	S300= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S296,S298)
	S301= IMMU.Addr=>IAddrReg.In                                Premise(F143)
	S302= IAddrReg.In={pid,addr+4}                              Path(S299,S301)
	S303= IMMU.Hit=>IMMUHitReg.In                               Premise(F144)
	S304= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S300,S303)
	S305= PC.Out=>ICache.IEA                                    Premise(F145)
	S306= ICache.IEA=addr+4                                     Path(S272,S305)
	S307= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S306)
	S308= ICache.Out=>ICacheReg.In                              Premise(F146)
	S309= ICache.Hit=>ICacheHitReg.In                           Premise(F147)
	S310= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S307,S309)
	S311= IMMUHitReg.Out=>CU.IMemHit                            Premise(F148)
	S312= CU.IMemHit=IMMUHit(pid,addr)                          Path(S276,S311)
	S313= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F149)
	S314= CU.ICacheHit=ICacheHit(addr)                          Path(S279,S313)
	S315= IAddrReg.Out=>IMem.RAddr                              Premise(F150)
	S316= IMem.RAddr={pid,addr}                                 Path(S273,S315)
	S317= IMem.Out={18,LI,0,0}                                  IMem-Read(S316,S256)
	S318= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S316,S256)
	S319= IMem.Out=>IRMux.MemData                               Premise(F151)
	S320= IRMux.MemData={18,LI,0,0}                             Path(S317,S319)
	S321= IRMux.Out={18,LI,0,0}                                 IRMux-Select(S320)
	S322= ICacheReg.Out=>IRMux.CacheData                        Premise(F152)
	S323= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F153)
	S324= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S276,S323)
	S325= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F154)
	S326= IRMux.CacheSel=ICacheHit(addr)                        Path(S279,S325)
	S327= IRMux.Out=>IR.In                                      Premise(F155)
	S328= IR.In={18,LI,0,0}                                     Path(S321,S327)
	S329= IMem.MEM8WordOut=>ICache.WData                        Premise(F156)
	S330= ICache.WData=IMemGet8Word({pid,addr})                 Path(S318,S329)
	S331= PC.Out=>ICache.IEA                                    Premise(F157)
	S332= IR.Out0_5=>CU.Op                                      Premise(F158)
	S333= CU.Op=18                                              Path(S282,S332)
	S334= IR.Out31=>CU.LK                                       Premise(F159)
	S335= CU.LK=0                                               Path(S285,S334)
	S336= CU.Func=alu_add                                       CU(S333,S335)
	S337= PC.Out=>LR.In                                         Premise(F160)
	S338= LR.In=addr+4                                          Path(S272,S337)
	S339= IR.Out6_29=>Addr24Ext.In                              Premise(F161)
	S340= Addr24Ext.In=LI                                       Path(S283,S339)
	S341= Addr24Ext.Out={6{LI[0]},LI,2'b0}                      Addr24Ext-EXT(S340)
	S342= Addr24Ext.Out=>A.In                                   Premise(F162)
	S343= A.In={6{LI[0]},LI,2'b0}                               Path(S341,S342)
	S344= IR.Out30=>BaseAddrSel.Sel                             Premise(F163)
	S345= BaseAddrSel.Sel=0                                     Path(S284,S344)
	S346= PC.CIA=>BaseAddrSel.PC                                Premise(F164)
	S347= BaseAddrSel.PC=addr                                   Path(S270,S346)
	S348= BaseAddrSel.Out=addr                                  BaseAddrSel(S347)
	S349= BaseAddrSel.Out=>B.In                                 Premise(F165)
	S350= B.In=addr                                             Path(S348,S349)
	S351= A.Out=>ALU.A                                          Premise(F166)
	S352= ALU.A={6{LI[0]},LI,2'b0}                              Path(S289,S351)
	S353= B.Out=>ALU.B                                          Premise(F167)
	S354= ALU.B=addr                                            Path(S292,S353)
	S355= CU.Func=>ALU.Func                                     Premise(F168)
	S356= ALU.Func=alu_add                                      Path(S336,S355)
	S357= ALU.Out={6{LI[0]},LI,2'b0}+addr                       ALU(S352,S354)
	S358= ALU.CMP=Compare0({6{LI[0]},LI,2'b0}+addr)             ALU(S352,S354)
	S359= ALU.OV=OverFlow({6{LI[0]},LI,2'b0}+addr)              ALU(S352,S354)
	S360= ALU.CA=Carry({6{LI[0]},LI,2'b0}+addr)                 ALU(S352,S354)
	S361= ALU.Out=>ALUOut.In                                    Premise(F169)
	S362= ALUOut.In={6{LI[0]},LI,2'b0}+addr                     Path(S357,S361)
	S363= ALUOut.Out=>PC.In                                     Premise(F170)
	S364= CtrlPIDReg=0                                          Premise(F171)
	S365= [PIDReg]=pid                                          PIDReg-Hold(S240,S364)
	S366= CtrlIMMU=0                                            Premise(F172)
	S367= CtrlPC=0                                              Premise(F173)
	S368= CtrlPCInc=0                                           Premise(F174)
	S369= PC[CIA]=addr                                          PC-Hold(S244,S368)
	S370= PC[Out]=addr+4                                        PC-Hold(S245,S367,S368)
	S371= CtrlIAddrReg=0                                        Premise(F175)
	S372= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S247,S371)
	S373= CtrlIMMUHitReg=0                                      Premise(F176)
	S374= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S249,S373)
	S375= CtrlICache=0                                          Premise(F177)
	S376= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S251,S375)
	S377= CtrlICacheReg=0                                       Premise(F178)
	S378= CtrlICacheHitReg=0                                    Premise(F179)
	S379= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S254,S378)
	S380= CtrlIMem=0                                            Premise(F180)
	S381= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S256,S380)
	S382= CtrlIRMux=0                                           Premise(F181)
	S383= CtrlIR=0                                              Premise(F182)
	S384= [IR]={18,LI,0,0}                                      IR-Hold(S259,S383)
	S385= CtrlLR=0                                              Premise(F183)
	S386= [LR]=addr+4                                           LR-Hold(S261,S385)
	S387= CtrlA=0                                               Premise(F184)
	S388= [A]={6{LI[0]},LI,2'b0}                                A-Hold(S263,S387)
	S389= CtrlB=0                                               Premise(F185)
	S390= [B]=addr                                              B-Hold(S265,S389)
	S391= CtrlALUOut=1                                          Premise(F186)
	S392= [ALUOut]={6{LI[0]},LI,2'b0}+addr                      ALUOut-Write(S362,S391)

MEM	S393= PIDReg.Out=pid                                        PIDReg-Out(S365)
	S394= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S365)
	S395= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S365)
	S396= PC.CIA=addr                                           PC-Out(S369)
	S397= PC.CIA31_28=addr[31:28]                               PC-Out(S369)
	S398= PC.Out=addr+4                                         PC-Out(S370)
	S399= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S372)
	S400= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S372)
	S401= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S372)
	S402= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S374)
	S403= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S374)
	S404= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S374)
	S405= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S379)
	S406= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S379)
	S407= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S379)
	S408= IR.Out0_5=18                                          IR-Out(S384)
	S409= IR.Out6_29=LI                                         IR-Out(S384)
	S410= IR.Out30=0                                            IR-Out(S384)
	S411= IR.Out31=0                                            IR-Out(S384)
	S412= LR.Out=addr+4                                         LR-Out(S386)
	S413= LR.Out26_31=addr+4[26:31]                             LR-Out(S386)
	S414= LR.Out30_31=addr+4[30:31]                             LR-Out(S386)
	S415= A.Out={6{LI[0]},LI,2'b0}                              A-Out(S388)
	S416= A.Out26_31={6{LI[0]},LI,2'b0}[26:31]                  A-Out(S388)
	S417= A.Out30_31={6{LI[0]},LI,2'b0}[30:31]                  A-Out(S388)
	S418= B.Out=addr                                            B-Out(S390)
	S419= B.Out26_31=addr[26:31]                                B-Out(S390)
	S420= B.Out30_31=addr[30:31]                                B-Out(S390)
	S421= ALUOut.Out={6{LI[0]},LI,2'b0}+addr                    ALUOut-Out(S392)
	S422= ALUOut.Out26_31={6{LI[0]},LI,2'b0}+addr[26:31]        ALUOut-Out(S392)
	S423= ALUOut.Out30_31={6{LI[0]},LI,2'b0}+addr[30:31]        ALUOut-Out(S392)
	S424= PIDReg.Out=>IMMU.PID                                  Premise(F187)
	S425= IMMU.PID=pid                                          Path(S393,S424)
	S426= PC.Out=>IMMU.IEA                                      Premise(F188)
	S427= IMMU.IEA=addr+4                                       Path(S398,S426)
	S428= IMMU.Addr={pid,addr+4}                                IMMU-Search(S425,S427)
	S429= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S425,S427)
	S430= IMMU.Addr=>IAddrReg.In                                Premise(F189)
	S431= IAddrReg.In={pid,addr+4}                              Path(S428,S430)
	S432= IMMU.Hit=>IMMUHitReg.In                               Premise(F190)
	S433= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S429,S432)
	S434= PC.Out=>ICache.IEA                                    Premise(F191)
	S435= ICache.IEA=addr+4                                     Path(S398,S434)
	S436= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S435)
	S437= ICache.Out=>ICacheReg.In                              Premise(F192)
	S438= ICache.Hit=>ICacheHitReg.In                           Premise(F193)
	S439= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S436,S438)
	S440= IMMUHitReg.Out=>CU.IMemHit                            Premise(F194)
	S441= CU.IMemHit=IMMUHit(pid,addr)                          Path(S402,S440)
	S442= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F195)
	S443= CU.ICacheHit=ICacheHit(addr)                          Path(S405,S442)
	S444= IAddrReg.Out=>IMem.RAddr                              Premise(F196)
	S445= IMem.RAddr={pid,addr}                                 Path(S399,S444)
	S446= IMem.Out={18,LI,0,0}                                  IMem-Read(S445,S381)
	S447= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S445,S381)
	S448= IMem.Out=>IRMux.MemData                               Premise(F197)
	S449= IRMux.MemData={18,LI,0,0}                             Path(S446,S448)
	S450= IRMux.Out={18,LI,0,0}                                 IRMux-Select(S449)
	S451= ICacheReg.Out=>IRMux.CacheData                        Premise(F198)
	S452= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F199)
	S453= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S402,S452)
	S454= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F200)
	S455= IRMux.CacheSel=ICacheHit(addr)                        Path(S405,S454)
	S456= IRMux.Out=>IR.In                                      Premise(F201)
	S457= IR.In={18,LI,0,0}                                     Path(S450,S456)
	S458= IMem.MEM8WordOut=>ICache.WData                        Premise(F202)
	S459= ICache.WData=IMemGet8Word({pid,addr})                 Path(S447,S458)
	S460= PC.Out=>ICache.IEA                                    Premise(F203)
	S461= IR.Out0_5=>CU.Op                                      Premise(F204)
	S462= CU.Op=18                                              Path(S408,S461)
	S463= IR.Out31=>CU.LK                                       Premise(F205)
	S464= CU.LK=0                                               Path(S411,S463)
	S465= CU.Func=alu_add                                       CU(S462,S464)
	S466= PC.Out=>LR.In                                         Premise(F206)
	S467= LR.In=addr+4                                          Path(S398,S466)
	S468= IR.Out6_29=>Addr24Ext.In                              Premise(F207)
	S469= Addr24Ext.In=LI                                       Path(S409,S468)
	S470= Addr24Ext.Out={6{LI[0]},LI,2'b0}                      Addr24Ext-EXT(S469)
	S471= Addr24Ext.Out=>A.In                                   Premise(F208)
	S472= A.In={6{LI[0]},LI,2'b0}                               Path(S470,S471)
	S473= IR.Out30=>BaseAddrSel.Sel                             Premise(F209)
	S474= BaseAddrSel.Sel=0                                     Path(S410,S473)
	S475= PC.CIA=>BaseAddrSel.PC                                Premise(F210)
	S476= BaseAddrSel.PC=addr                                   Path(S396,S475)
	S477= BaseAddrSel.Out=addr                                  BaseAddrSel(S476)
	S478= BaseAddrSel.Out=>B.In                                 Premise(F211)
	S479= B.In=addr                                             Path(S477,S478)
	S480= A.Out=>ALU.A                                          Premise(F212)
	S481= ALU.A={6{LI[0]},LI,2'b0}                              Path(S415,S480)
	S482= B.Out=>ALU.B                                          Premise(F213)
	S483= ALU.B=addr                                            Path(S418,S482)
	S484= CU.Func=>ALU.Func                                     Premise(F214)
	S485= ALU.Func=alu_add                                      Path(S465,S484)
	S486= ALU.Out={6{LI[0]},LI,2'b0}+addr                       ALU(S481,S483)
	S487= ALU.CMP=Compare0({6{LI[0]},LI,2'b0}+addr)             ALU(S481,S483)
	S488= ALU.OV=OverFlow({6{LI[0]},LI,2'b0}+addr)              ALU(S481,S483)
	S489= ALU.CA=Carry({6{LI[0]},LI,2'b0}+addr)                 ALU(S481,S483)
	S490= ALU.Out=>ALUOut.In                                    Premise(F215)
	S491= ALUOut.In={6{LI[0]},LI,2'b0}+addr                     Path(S486,S490)
	S492= ALUOut.Out=>PC.In                                     Premise(F216)
	S493= PC.In={6{LI[0]},LI,2'b0}+addr                         Path(S421,S492)
	S494= CtrlPIDReg=0                                          Premise(F217)
	S495= [PIDReg]=pid                                          PIDReg-Hold(S365,S494)
	S496= CtrlIMMU=0                                            Premise(F218)
	S497= CtrlPC=1                                              Premise(F219)
	S498= CtrlPCInc=0                                           Premise(F220)
	S499= PC[CIA]=addr                                          PC-Hold(S369,S498)
	S500= PC[Out]={6{LI[0]},LI,2'b0}+addr                       PC-Write(S493,S497,S498)
	S501= CtrlIAddrReg=0                                        Premise(F221)
	S502= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S372,S501)
	S503= CtrlIMMUHitReg=0                                      Premise(F222)
	S504= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S374,S503)
	S505= CtrlICache=0                                          Premise(F223)
	S506= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S376,S505)
	S507= CtrlICacheReg=0                                       Premise(F224)
	S508= CtrlICacheHitReg=0                                    Premise(F225)
	S509= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S379,S508)
	S510= CtrlIMem=0                                            Premise(F226)
	S511= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S381,S510)
	S512= CtrlIRMux=0                                           Premise(F227)
	S513= CtrlIR=0                                              Premise(F228)
	S514= [IR]={18,LI,0,0}                                      IR-Hold(S384,S513)
	S515= CtrlLR=0                                              Premise(F229)
	S516= [LR]=addr+4                                           LR-Hold(S386,S515)
	S517= CtrlA=0                                               Premise(F230)
	S518= [A]={6{LI[0]},LI,2'b0}                                A-Hold(S388,S517)
	S519= CtrlB=0                                               Premise(F231)
	S520= [B]=addr                                              B-Hold(S390,S519)
	S521= CtrlALUOut=0                                          Premise(F232)
	S522= [ALUOut]={6{LI[0]},LI,2'b0}+addr                      ALUOut-Hold(S392,S521)

DMMU1	S523= PIDReg.Out=pid                                        PIDReg-Out(S495)
	S524= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S495)
	S525= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S495)
	S526= PC.CIA=addr                                           PC-Out(S499)
	S527= PC.CIA31_28=addr[31:28]                               PC-Out(S499)
	S528= PC.Out={6{LI[0]},LI,2'b0}+addr                        PC-Out(S500)
	S529= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S502)
	S530= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S502)
	S531= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S502)
	S532= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S504)
	S533= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S504)
	S534= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S504)
	S535= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S509)
	S536= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S509)
	S537= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S509)
	S538= IR.Out0_5=18                                          IR-Out(S514)
	S539= IR.Out6_29=LI                                         IR-Out(S514)
	S540= IR.Out30=0                                            IR-Out(S514)
	S541= IR.Out31=0                                            IR-Out(S514)
	S542= LR.Out=addr+4                                         LR-Out(S516)
	S543= LR.Out26_31=addr+4[26:31]                             LR-Out(S516)
	S544= LR.Out30_31=addr+4[30:31]                             LR-Out(S516)
	S545= A.Out={6{LI[0]},LI,2'b0}                              A-Out(S518)
	S546= A.Out26_31={6{LI[0]},LI,2'b0}[26:31]                  A-Out(S518)
	S547= A.Out30_31={6{LI[0]},LI,2'b0}[30:31]                  A-Out(S518)
	S548= B.Out=addr                                            B-Out(S520)
	S549= B.Out26_31=addr[26:31]                                B-Out(S520)
	S550= B.Out30_31=addr[30:31]                                B-Out(S520)
	S551= ALUOut.Out={6{LI[0]},LI,2'b0}+addr                    ALUOut-Out(S522)
	S552= ALUOut.Out26_31={6{LI[0]},LI,2'b0}+addr[26:31]        ALUOut-Out(S522)
	S553= ALUOut.Out30_31={6{LI[0]},LI,2'b0}+addr[30:31]        ALUOut-Out(S522)
	S554= PIDReg.Out=>IMMU.PID                                  Premise(F233)
	S555= IMMU.PID=pid                                          Path(S523,S554)
	S556= PC.Out=>IMMU.IEA                                      Premise(F234)
	S557= IMMU.IEA={6{LI[0]},LI,2'b0}+addr                      Path(S528,S556)
	S558= IMMU.Addr={pid,{6{LI[0]},LI,2'b0}+addr}               IMMU-Search(S555,S557)
	S559= IMMU.Hit=IMMUHit(pid,{6{LI[0]},LI,2'b0}+addr)         IMMU-Search(S555,S557)
	S560= IMMU.Addr=>IAddrReg.In                                Premise(F235)
	S561= IAddrReg.In={pid,{6{LI[0]},LI,2'b0}+addr}             Path(S558,S560)
	S562= IMMU.Hit=>IMMUHitReg.In                               Premise(F236)
	S563= IMMUHitReg.In=IMMUHit(pid,{6{LI[0]},LI,2'b0}+addr)    Path(S559,S562)
	S564= PC.Out=>ICache.IEA                                    Premise(F237)
	S565= ICache.IEA={6{LI[0]},LI,2'b0}+addr                    Path(S528,S564)
	S566= ICache.Hit=ICacheHit({6{LI[0]},LI,2'b0}+addr)         ICache-Search(S565)
	S567= ICache.Out=>ICacheReg.In                              Premise(F238)
	S568= ICache.Hit=>ICacheHitReg.In                           Premise(F239)
	S569= ICacheHitReg.In=ICacheHit({6{LI[0]},LI,2'b0}+addr)    Path(S566,S568)
	S570= IMMUHitReg.Out=>CU.IMemHit                            Premise(F240)
	S571= CU.IMemHit=IMMUHit(pid,addr)                          Path(S532,S570)
	S572= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F241)
	S573= CU.ICacheHit=ICacheHit(addr)                          Path(S535,S572)
	S574= IAddrReg.Out=>IMem.RAddr                              Premise(F242)
	S575= IMem.RAddr={pid,addr}                                 Path(S529,S574)
	S576= IMem.Out={18,LI,0,0}                                  IMem-Read(S575,S511)
	S577= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S575,S511)
	S578= IMem.Out=>IRMux.MemData                               Premise(F243)
	S579= IRMux.MemData={18,LI,0,0}                             Path(S576,S578)
	S580= IRMux.Out={18,LI,0,0}                                 IRMux-Select(S579)
	S581= ICacheReg.Out=>IRMux.CacheData                        Premise(F244)
	S582= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F245)
	S583= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S532,S582)
	S584= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F246)
	S585= IRMux.CacheSel=ICacheHit(addr)                        Path(S535,S584)
	S586= IRMux.Out=>IR.In                                      Premise(F247)
	S587= IR.In={18,LI,0,0}                                     Path(S580,S586)
	S588= IMem.MEM8WordOut=>ICache.WData                        Premise(F248)
	S589= ICache.WData=IMemGet8Word({pid,addr})                 Path(S577,S588)
	S590= PC.Out=>ICache.IEA                                    Premise(F249)
	S591= IR.Out0_5=>CU.Op                                      Premise(F250)
	S592= CU.Op=18                                              Path(S538,S591)
	S593= IR.Out31=>CU.LK                                       Premise(F251)
	S594= CU.LK=0                                               Path(S541,S593)
	S595= CU.Func=alu_add                                       CU(S592,S594)
	S596= PC.Out=>LR.In                                         Premise(F252)
	S597= LR.In={6{LI[0]},LI,2'b0}+addr                         Path(S528,S596)
	S598= IR.Out6_29=>Addr24Ext.In                              Premise(F253)
	S599= Addr24Ext.In=LI                                       Path(S539,S598)
	S600= Addr24Ext.Out={6{LI[0]},LI,2'b0}                      Addr24Ext-EXT(S599)
	S601= Addr24Ext.Out=>A.In                                   Premise(F254)
	S602= A.In={6{LI[0]},LI,2'b0}                               Path(S600,S601)
	S603= IR.Out30=>BaseAddrSel.Sel                             Premise(F255)
	S604= BaseAddrSel.Sel=0                                     Path(S540,S603)
	S605= PC.CIA=>BaseAddrSel.PC                                Premise(F256)
	S606= BaseAddrSel.PC=addr                                   Path(S526,S605)
	S607= BaseAddrSel.Out=addr                                  BaseAddrSel(S606)
	S608= BaseAddrSel.Out=>B.In                                 Premise(F257)
	S609= B.In=addr                                             Path(S607,S608)
	S610= A.Out=>ALU.A                                          Premise(F258)
	S611= ALU.A={6{LI[0]},LI,2'b0}                              Path(S545,S610)
	S612= B.Out=>ALU.B                                          Premise(F259)
	S613= ALU.B=addr                                            Path(S548,S612)
	S614= CU.Func=>ALU.Func                                     Premise(F260)
	S615= ALU.Func=alu_add                                      Path(S595,S614)
	S616= ALU.Out={6{LI[0]},LI,2'b0}+addr                       ALU(S611,S613)
	S617= ALU.CMP=Compare0({6{LI[0]},LI,2'b0}+addr)             ALU(S611,S613)
	S618= ALU.OV=OverFlow({6{LI[0]},LI,2'b0}+addr)              ALU(S611,S613)
	S619= ALU.CA=Carry({6{LI[0]},LI,2'b0}+addr)                 ALU(S611,S613)
	S620= ALU.Out=>ALUOut.In                                    Premise(F261)
	S621= ALUOut.In={6{LI[0]},LI,2'b0}+addr                     Path(S616,S620)
	S622= ALUOut.Out=>PC.In                                     Premise(F262)
	S623= PC.In={6{LI[0]},LI,2'b0}+addr                         Path(S551,S622)
	S624= CtrlPIDReg=0                                          Premise(F263)
	S625= [PIDReg]=pid                                          PIDReg-Hold(S495,S624)
	S626= CtrlIMMU=0                                            Premise(F264)
	S627= CtrlPC=0                                              Premise(F265)
	S628= CtrlPCInc=0                                           Premise(F266)
	S629= PC[CIA]=addr                                          PC-Hold(S499,S628)
	S630= PC[Out]={6{LI[0]},LI,2'b0}+addr                       PC-Hold(S500,S627,S628)
	S631= CtrlIAddrReg=0                                        Premise(F267)
	S632= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S502,S631)
	S633= CtrlIMMUHitReg=0                                      Premise(F268)
	S634= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S504,S633)
	S635= CtrlICache=0                                          Premise(F269)
	S636= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S506,S635)
	S637= CtrlICacheReg=0                                       Premise(F270)
	S638= CtrlICacheHitReg=0                                    Premise(F271)
	S639= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S509,S638)
	S640= CtrlIMem=0                                            Premise(F272)
	S641= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S511,S640)
	S642= CtrlIRMux=0                                           Premise(F273)
	S643= CtrlIR=0                                              Premise(F274)
	S644= [IR]={18,LI,0,0}                                      IR-Hold(S514,S643)
	S645= CtrlLR=0                                              Premise(F275)
	S646= [LR]=addr+4                                           LR-Hold(S516,S645)
	S647= CtrlA=0                                               Premise(F276)
	S648= [A]={6{LI[0]},LI,2'b0}                                A-Hold(S518,S647)
	S649= CtrlB=0                                               Premise(F277)
	S650= [B]=addr                                              B-Hold(S520,S649)
	S651= CtrlALUOut=0                                          Premise(F278)
	S652= [ALUOut]={6{LI[0]},LI,2'b0}+addr                      ALUOut-Hold(S522,S651)

DMMU2	S653= PIDReg.Out=pid                                        PIDReg-Out(S625)
	S654= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S625)
	S655= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S625)
	S656= PC.CIA=addr                                           PC-Out(S629)
	S657= PC.CIA31_28=addr[31:28]                               PC-Out(S629)
	S658= PC.Out={6{LI[0]},LI,2'b0}+addr                        PC-Out(S630)
	S659= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S632)
	S660= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S632)
	S661= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S632)
	S662= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S634)
	S663= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S634)
	S664= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S634)
	S665= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S639)
	S666= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S639)
	S667= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S639)
	S668= IR.Out0_5=18                                          IR-Out(S644)
	S669= IR.Out6_29=LI                                         IR-Out(S644)
	S670= IR.Out30=0                                            IR-Out(S644)
	S671= IR.Out31=0                                            IR-Out(S644)
	S672= LR.Out=addr+4                                         LR-Out(S646)
	S673= LR.Out26_31=addr+4[26:31]                             LR-Out(S646)
	S674= LR.Out30_31=addr+4[30:31]                             LR-Out(S646)
	S675= A.Out={6{LI[0]},LI,2'b0}                              A-Out(S648)
	S676= A.Out26_31={6{LI[0]},LI,2'b0}[26:31]                  A-Out(S648)
	S677= A.Out30_31={6{LI[0]},LI,2'b0}[30:31]                  A-Out(S648)
	S678= B.Out=addr                                            B-Out(S650)
	S679= B.Out26_31=addr[26:31]                                B-Out(S650)
	S680= B.Out30_31=addr[30:31]                                B-Out(S650)
	S681= ALUOut.Out={6{LI[0]},LI,2'b0}+addr                    ALUOut-Out(S652)
	S682= ALUOut.Out26_31={6{LI[0]},LI,2'b0}+addr[26:31]        ALUOut-Out(S652)
	S683= ALUOut.Out30_31={6{LI[0]},LI,2'b0}+addr[30:31]        ALUOut-Out(S652)
	S684= PIDReg.Out=>IMMU.PID                                  Premise(F279)
	S685= IMMU.PID=pid                                          Path(S653,S684)
	S686= PC.Out=>IMMU.IEA                                      Premise(F280)
	S687= IMMU.IEA={6{LI[0]},LI,2'b0}+addr                      Path(S658,S686)
	S688= IMMU.Addr={pid,{6{LI[0]},LI,2'b0}+addr}               IMMU-Search(S685,S687)
	S689= IMMU.Hit=IMMUHit(pid,{6{LI[0]},LI,2'b0}+addr)         IMMU-Search(S685,S687)
	S690= IMMU.Addr=>IAddrReg.In                                Premise(F281)
	S691= IAddrReg.In={pid,{6{LI[0]},LI,2'b0}+addr}             Path(S688,S690)
	S692= IMMU.Hit=>IMMUHitReg.In                               Premise(F282)
	S693= IMMUHitReg.In=IMMUHit(pid,{6{LI[0]},LI,2'b0}+addr)    Path(S689,S692)
	S694= PC.Out=>ICache.IEA                                    Premise(F283)
	S695= ICache.IEA={6{LI[0]},LI,2'b0}+addr                    Path(S658,S694)
	S696= ICache.Hit=ICacheHit({6{LI[0]},LI,2'b0}+addr)         ICache-Search(S695)
	S697= ICache.Out=>ICacheReg.In                              Premise(F284)
	S698= ICache.Hit=>ICacheHitReg.In                           Premise(F285)
	S699= ICacheHitReg.In=ICacheHit({6{LI[0]},LI,2'b0}+addr)    Path(S696,S698)
	S700= IMMUHitReg.Out=>CU.IMemHit                            Premise(F286)
	S701= CU.IMemHit=IMMUHit(pid,addr)                          Path(S662,S700)
	S702= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F287)
	S703= CU.ICacheHit=ICacheHit(addr)                          Path(S665,S702)
	S704= IAddrReg.Out=>IMem.RAddr                              Premise(F288)
	S705= IMem.RAddr={pid,addr}                                 Path(S659,S704)
	S706= IMem.Out={18,LI,0,0}                                  IMem-Read(S705,S641)
	S707= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S705,S641)
	S708= IMem.Out=>IRMux.MemData                               Premise(F289)
	S709= IRMux.MemData={18,LI,0,0}                             Path(S706,S708)
	S710= IRMux.Out={18,LI,0,0}                                 IRMux-Select(S709)
	S711= ICacheReg.Out=>IRMux.CacheData                        Premise(F290)
	S712= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F291)
	S713= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S662,S712)
	S714= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F292)
	S715= IRMux.CacheSel=ICacheHit(addr)                        Path(S665,S714)
	S716= IRMux.Out=>IR.In                                      Premise(F293)
	S717= IR.In={18,LI,0,0}                                     Path(S710,S716)
	S718= IMem.MEM8WordOut=>ICache.WData                        Premise(F294)
	S719= ICache.WData=IMemGet8Word({pid,addr})                 Path(S707,S718)
	S720= PC.Out=>ICache.IEA                                    Premise(F295)
	S721= IR.Out0_5=>CU.Op                                      Premise(F296)
	S722= CU.Op=18                                              Path(S668,S721)
	S723= IR.Out31=>CU.LK                                       Premise(F297)
	S724= CU.LK=0                                               Path(S671,S723)
	S725= CU.Func=alu_add                                       CU(S722,S724)
	S726= PC.Out=>LR.In                                         Premise(F298)
	S727= LR.In={6{LI[0]},LI,2'b0}+addr                         Path(S658,S726)
	S728= IR.Out6_29=>Addr24Ext.In                              Premise(F299)
	S729= Addr24Ext.In=LI                                       Path(S669,S728)
	S730= Addr24Ext.Out={6{LI[0]},LI,2'b0}                      Addr24Ext-EXT(S729)
	S731= Addr24Ext.Out=>A.In                                   Premise(F300)
	S732= A.In={6{LI[0]},LI,2'b0}                               Path(S730,S731)
	S733= IR.Out30=>BaseAddrSel.Sel                             Premise(F301)
	S734= BaseAddrSel.Sel=0                                     Path(S670,S733)
	S735= PC.CIA=>BaseAddrSel.PC                                Premise(F302)
	S736= BaseAddrSel.PC=addr                                   Path(S656,S735)
	S737= BaseAddrSel.Out=addr                                  BaseAddrSel(S736)
	S738= BaseAddrSel.Out=>B.In                                 Premise(F303)
	S739= B.In=addr                                             Path(S737,S738)
	S740= A.Out=>ALU.A                                          Premise(F304)
	S741= ALU.A={6{LI[0]},LI,2'b0}                              Path(S675,S740)
	S742= B.Out=>ALU.B                                          Premise(F305)
	S743= ALU.B=addr                                            Path(S678,S742)
	S744= CU.Func=>ALU.Func                                     Premise(F306)
	S745= ALU.Func=alu_add                                      Path(S725,S744)
	S746= ALU.Out={6{LI[0]},LI,2'b0}+addr                       ALU(S741,S743)
	S747= ALU.CMP=Compare0({6{LI[0]},LI,2'b0}+addr)             ALU(S741,S743)
	S748= ALU.OV=OverFlow({6{LI[0]},LI,2'b0}+addr)              ALU(S741,S743)
	S749= ALU.CA=Carry({6{LI[0]},LI,2'b0}+addr)                 ALU(S741,S743)
	S750= ALU.Out=>ALUOut.In                                    Premise(F307)
	S751= ALUOut.In={6{LI[0]},LI,2'b0}+addr                     Path(S746,S750)
	S752= ALUOut.Out=>PC.In                                     Premise(F308)
	S753= PC.In={6{LI[0]},LI,2'b0}+addr                         Path(S681,S752)
	S754= CtrlPIDReg=0                                          Premise(F309)
	S755= [PIDReg]=pid                                          PIDReg-Hold(S625,S754)
	S756= CtrlIMMU=0                                            Premise(F310)
	S757= CtrlPC=0                                              Premise(F311)
	S758= CtrlPCInc=0                                           Premise(F312)
	S759= PC[CIA]=addr                                          PC-Hold(S629,S758)
	S760= PC[Out]={6{LI[0]},LI,2'b0}+addr                       PC-Hold(S630,S757,S758)
	S761= CtrlIAddrReg=0                                        Premise(F313)
	S762= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S632,S761)
	S763= CtrlIMMUHitReg=0                                      Premise(F314)
	S764= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S634,S763)
	S765= CtrlICache=0                                          Premise(F315)
	S766= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S636,S765)
	S767= CtrlICacheReg=0                                       Premise(F316)
	S768= CtrlICacheHitReg=0                                    Premise(F317)
	S769= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S639,S768)
	S770= CtrlIMem=0                                            Premise(F318)
	S771= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S641,S770)
	S772= CtrlIRMux=0                                           Premise(F319)
	S773= CtrlIR=0                                              Premise(F320)
	S774= [IR]={18,LI,0,0}                                      IR-Hold(S644,S773)
	S775= CtrlLR=0                                              Premise(F321)
	S776= [LR]=addr+4                                           LR-Hold(S646,S775)
	S777= CtrlA=0                                               Premise(F322)
	S778= [A]={6{LI[0]},LI,2'b0}                                A-Hold(S648,S777)
	S779= CtrlB=0                                               Premise(F323)
	S780= [B]=addr                                              B-Hold(S650,S779)
	S781= CtrlALUOut=0                                          Premise(F324)
	S782= [ALUOut]={6{LI[0]},LI,2'b0}+addr                      ALUOut-Hold(S652,S781)

WB	S783= PIDReg.Out=pid                                        PIDReg-Out(S755)
	S784= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S755)
	S785= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S755)
	S786= PC.CIA=addr                                           PC-Out(S759)
	S787= PC.CIA31_28=addr[31:28]                               PC-Out(S759)
	S788= PC.Out={6{LI[0]},LI,2'b0}+addr                        PC-Out(S760)
	S789= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S762)
	S790= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S762)
	S791= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S762)
	S792= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S764)
	S793= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S764)
	S794= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S764)
	S795= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S769)
	S796= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S769)
	S797= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S769)
	S798= IR.Out0_5=18                                          IR-Out(S774)
	S799= IR.Out6_29=LI                                         IR-Out(S774)
	S800= IR.Out30=0                                            IR-Out(S774)
	S801= IR.Out31=0                                            IR-Out(S774)
	S802= LR.Out=addr+4                                         LR-Out(S776)
	S803= LR.Out26_31=addr+4[26:31]                             LR-Out(S776)
	S804= LR.Out30_31=addr+4[30:31]                             LR-Out(S776)
	S805= A.Out={6{LI[0]},LI,2'b0}                              A-Out(S778)
	S806= A.Out26_31={6{LI[0]},LI,2'b0}[26:31]                  A-Out(S778)
	S807= A.Out30_31={6{LI[0]},LI,2'b0}[30:31]                  A-Out(S778)
	S808= B.Out=addr                                            B-Out(S780)
	S809= B.Out26_31=addr[26:31]                                B-Out(S780)
	S810= B.Out30_31=addr[30:31]                                B-Out(S780)
	S811= ALUOut.Out={6{LI[0]},LI,2'b0}+addr                    ALUOut-Out(S782)
	S812= ALUOut.Out26_31={6{LI[0]},LI,2'b0}+addr[26:31]        ALUOut-Out(S782)
	S813= ALUOut.Out30_31={6{LI[0]},LI,2'b0}+addr[30:31]        ALUOut-Out(S782)
	S814= PIDReg.Out=>IMMU.PID                                  Premise(F325)
	S815= IMMU.PID=pid                                          Path(S783,S814)
	S816= PC.Out=>IMMU.IEA                                      Premise(F326)
	S817= IMMU.IEA={6{LI[0]},LI,2'b0}+addr                      Path(S788,S816)
	S818= IMMU.Addr={pid,{6{LI[0]},LI,2'b0}+addr}               IMMU-Search(S815,S817)
	S819= IMMU.Hit=IMMUHit(pid,{6{LI[0]},LI,2'b0}+addr)         IMMU-Search(S815,S817)
	S820= IMMU.Addr=>IAddrReg.In                                Premise(F327)
	S821= IAddrReg.In={pid,{6{LI[0]},LI,2'b0}+addr}             Path(S818,S820)
	S822= IMMU.Hit=>IMMUHitReg.In                               Premise(F328)
	S823= IMMUHitReg.In=IMMUHit(pid,{6{LI[0]},LI,2'b0}+addr)    Path(S819,S822)
	S824= PC.Out=>ICache.IEA                                    Premise(F329)
	S825= ICache.IEA={6{LI[0]},LI,2'b0}+addr                    Path(S788,S824)
	S826= ICache.Hit=ICacheHit({6{LI[0]},LI,2'b0}+addr)         ICache-Search(S825)
	S827= ICache.Out=>ICacheReg.In                              Premise(F330)
	S828= ICache.Hit=>ICacheHitReg.In                           Premise(F331)
	S829= ICacheHitReg.In=ICacheHit({6{LI[0]},LI,2'b0}+addr)    Path(S826,S828)
	S830= IMMUHitReg.Out=>CU.IMemHit                            Premise(F332)
	S831= CU.IMemHit=IMMUHit(pid,addr)                          Path(S792,S830)
	S832= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F333)
	S833= CU.ICacheHit=ICacheHit(addr)                          Path(S795,S832)
	S834= IAddrReg.Out=>IMem.RAddr                              Premise(F334)
	S835= IMem.RAddr={pid,addr}                                 Path(S789,S834)
	S836= IMem.Out={18,LI,0,0}                                  IMem-Read(S835,S771)
	S837= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S835,S771)
	S838= IMem.Out=>IRMux.MemData                               Premise(F335)
	S839= IRMux.MemData={18,LI,0,0}                             Path(S836,S838)
	S840= IRMux.Out={18,LI,0,0}                                 IRMux-Select(S839)
	S841= ICacheReg.Out=>IRMux.CacheData                        Premise(F336)
	S842= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F337)
	S843= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S792,S842)
	S844= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F338)
	S845= IRMux.CacheSel=ICacheHit(addr)                        Path(S795,S844)
	S846= IRMux.Out=>IR.In                                      Premise(F339)
	S847= IR.In={18,LI,0,0}                                     Path(S840,S846)
	S848= IMem.MEM8WordOut=>ICache.WData                        Premise(F340)
	S849= ICache.WData=IMemGet8Word({pid,addr})                 Path(S837,S848)
	S850= PC.Out=>ICache.IEA                                    Premise(F341)
	S851= IR.Out0_5=>CU.Op                                      Premise(F342)
	S852= CU.Op=18                                              Path(S798,S851)
	S853= IR.Out31=>CU.LK                                       Premise(F343)
	S854= CU.LK=0                                               Path(S801,S853)
	S855= CU.Func=alu_add                                       CU(S852,S854)
	S856= PC.Out=>LR.In                                         Premise(F344)
	S857= LR.In={6{LI[0]},LI,2'b0}+addr                         Path(S788,S856)
	S858= IR.Out6_29=>Addr24Ext.In                              Premise(F345)
	S859= Addr24Ext.In=LI                                       Path(S799,S858)
	S860= Addr24Ext.Out={6{LI[0]},LI,2'b0}                      Addr24Ext-EXT(S859)
	S861= Addr24Ext.Out=>A.In                                   Premise(F346)
	S862= A.In={6{LI[0]},LI,2'b0}                               Path(S860,S861)
	S863= IR.Out30=>BaseAddrSel.Sel                             Premise(F347)
	S864= BaseAddrSel.Sel=0                                     Path(S800,S863)
	S865= PC.CIA=>BaseAddrSel.PC                                Premise(F348)
	S866= BaseAddrSel.PC=addr                                   Path(S786,S865)
	S867= BaseAddrSel.Out=addr                                  BaseAddrSel(S866)
	S868= BaseAddrSel.Out=>B.In                                 Premise(F349)
	S869= B.In=addr                                             Path(S867,S868)
	S870= A.Out=>ALU.A                                          Premise(F350)
	S871= ALU.A={6{LI[0]},LI,2'b0}                              Path(S805,S870)
	S872= B.Out=>ALU.B                                          Premise(F351)
	S873= ALU.B=addr                                            Path(S808,S872)
	S874= CU.Func=>ALU.Func                                     Premise(F352)
	S875= ALU.Func=alu_add                                      Path(S855,S874)
	S876= ALU.Out={6{LI[0]},LI,2'b0}+addr                       ALU(S871,S873)
	S877= ALU.CMP=Compare0({6{LI[0]},LI,2'b0}+addr)             ALU(S871,S873)
	S878= ALU.OV=OverFlow({6{LI[0]},LI,2'b0}+addr)              ALU(S871,S873)
	S879= ALU.CA=Carry({6{LI[0]},LI,2'b0}+addr)                 ALU(S871,S873)
	S880= ALU.Out=>ALUOut.In                                    Premise(F353)
	S881= ALUOut.In={6{LI[0]},LI,2'b0}+addr                     Path(S876,S880)
	S882= ALUOut.Out=>PC.In                                     Premise(F354)
	S883= PC.In={6{LI[0]},LI,2'b0}+addr                         Path(S811,S882)
	S884= CtrlPIDReg=0                                          Premise(F355)
	S885= [PIDReg]=pid                                          PIDReg-Hold(S755,S884)
	S886= CtrlIMMU=0                                            Premise(F356)
	S887= CtrlPC=0                                              Premise(F357)
	S888= CtrlPCInc=0                                           Premise(F358)
	S889= PC[CIA]=addr                                          PC-Hold(S759,S888)
	S890= PC[Out]={6{LI[0]},LI,2'b0}+addr                       PC-Hold(S760,S887,S888)
	S891= CtrlIAddrReg=0                                        Premise(F359)
	S892= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S762,S891)
	S893= CtrlIMMUHitReg=0                                      Premise(F360)
	S894= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S764,S893)
	S895= CtrlICache=0                                          Premise(F361)
	S896= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S766,S895)
	S897= CtrlICacheReg=0                                       Premise(F362)
	S898= CtrlICacheHitReg=0                                    Premise(F363)
	S899= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S769,S898)
	S900= CtrlIMem=0                                            Premise(F364)
	S901= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S771,S900)
	S902= CtrlIRMux=0                                           Premise(F365)
	S903= CtrlIR=0                                              Premise(F366)
	S904= [IR]={18,LI,0,0}                                      IR-Hold(S774,S903)
	S905= CtrlLR=0                                              Premise(F367)
	S906= [LR]=addr+4                                           LR-Hold(S776,S905)
	S907= CtrlA=0                                               Premise(F368)
	S908= [A]={6{LI[0]},LI,2'b0}                                A-Hold(S778,S907)
	S909= CtrlB=0                                               Premise(F369)
	S910= [B]=addr                                              B-Hold(S780,S909)
	S911= CtrlALUOut=0                                          Premise(F370)
	S912= [ALUOut]={6{LI[0]},LI,2'b0}+addr                      ALUOut-Hold(S782,S911)

POST	S885= [PIDReg]=pid                                          PIDReg-Hold(S755,S884)
	S889= PC[CIA]=addr                                          PC-Hold(S759,S888)
	S890= PC[Out]={6{LI[0]},LI,2'b0}+addr                       PC-Hold(S760,S887,S888)
	S892= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S762,S891)
	S894= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S764,S893)
	S896= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S766,S895)
	S899= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S769,S898)
	S901= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S771,S900)
	S904= [IR]={18,LI,0,0}                                      IR-Hold(S774,S903)
	S906= [LR]=addr+4                                           LR-Hold(S776,S905)
	S908= [A]={6{LI[0]},LI,2'b0}                                A-Hold(S778,S907)
	S910= [B]=addr                                              B-Hold(S780,S909)
	S912= [ALUOut]={6{LI[0]},LI,2'b0}+addr                      ALUOut-Hold(S782,S911)

