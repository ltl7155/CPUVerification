
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rs,rt,code,51}                      Premise(F2)
	S3= GPR[rs]=a                                               Premise(F3)
	S4= GPR[rt]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S8,S10)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S14= IAddrReg.In={pid,addr}                                 Path(S11,S13)
	S15= IMMU.Hit=>CU.IMMUHit                                   Premise(F8)
	S16= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S12,S15)
	S17= PC.Out=>ICache.IEA                                     Premise(F9)
	S18= ICache.IEA=addr                                        Path(S6,S17)
	S19= ICache.Hit=ICacheHit(addr)                             ICache-Search(S18)
	S20= ICache.Out=>IR.In                                      Premise(F10)
	S21= ICache.Out=>ICacheReg.In                               Premise(F11)
	S22= ICache.Hit=>CU.ICacheHit                               Premise(F12)
	S23= CU.ICacheHit=ICacheHit(addr)                           Path(S19,S22)
	S24= CtrlASIDIn=0                                           Premise(F13)
	S25= CtrlCP0=0                                              Premise(F14)
	S26= CP0[ASID]=pid                                          CP0-Hold(S0,S25)
	S27= CtrlEPCIn=0                                            Premise(F15)
	S28= CtrlExCodeIn=0                                         Premise(F16)
	S29= CtrlIMMU=0                                             Premise(F17)
	S30= CtrlPC=0                                               Premise(F18)
	S31= CtrlPCInc=0                                            Premise(F19)
	S32= PC[Out]=addr                                           PC-Hold(S1,S30,S31)
	S33= CtrlIAddrReg=1                                         Premise(F20)
	S34= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S14,S33)
	S35= CtrlICache=0                                           Premise(F21)
	S36= CtrlIR=0                                               Premise(F22)
	S37= CtrlICacheReg=1                                        Premise(F23)
	S38= CtrlIMem=0                                             Premise(F24)
	S39= IMem[{pid,addr}]={0,rs,rt,code,51}                     IMem-Hold(S2,S38)
	S40= CtrlIRMux=0                                            Premise(F25)
	S41= CtrlGPR=0                                              Premise(F26)
	S42= GPR[rs]=a                                              GPR-Hold(S3,S41)
	S43= GPR[rt]=b                                              GPR-Hold(S4,S41)
	S44= CtrlA=0                                                Premise(F27)
	S45= CtrlB=0                                                Premise(F28)
	S46= CtrlConditionReg=0                                     Premise(F29)
	S47= CtrlPIDReg=0                                           Premise(F30)

IF(IMMU)	S48= CP0.ASID=pid                                           CP0-Read-ASID(S26)
	S49= PC.Out=addr                                            PC-Out(S32)
	S50= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S34)
	S51= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S34)
	S52= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S34)
	S53= CU.IMMUHit=>CU.IMMUHit                                 Premise(F31)
	S54= CU.ICacheHit=>CU.ICacheHit                             Premise(F32)
	S55= IAddrReg.Out=>IMem.RAddr                               Premise(F33)
	S56= IMem.RAddr={pid,addr}                                  Path(S50,S55)
	S57= IMem.Out={0,rs,rt,code,51}                             IMem-Read(S56,S39)
	S58= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S56,S39)
	S59= IMem.Out=>IRMux.MemData                                Premise(F34)
	S60= IRMux.MemData={0,rs,rt,code,51}                        Path(S57,S59)
	S61= IRMux.Out={0,rs,rt,code,51}                            IRMux-Select2(S60)
	S62= ICacheReg.Out=>IRMux.CacheData                         Premise(F35)
	S63= CU.IMMUHit=>IRMux.MemSel                               Premise(F36)
	S64= CU.ICacheHit=>IRMux.CacheSel                           Premise(F37)
	S65= IRMux.Out=>IR.In                                       Premise(F38)
	S66= IR.In={0,rs,rt,code,51}                                Path(S61,S65)
	S67= IMem.MEM8WordOut=>ICache.WData                         Premise(F39)
	S68= ICache.WData=IMemGet8Word({pid,addr})                  Path(S58,S67)
	S69= PC.Out=>ICache.IEA                                     Premise(F40)
	S70= ICache.IEA=addr                                        Path(S49,S69)
	S71= ICache.Hit=ICacheHit(addr)                             ICache-Search(S70)
	S72= CtrlASIDIn=0                                           Premise(F41)
	S73= CtrlCP0=0                                              Premise(F42)
	S74= CP0[ASID]=pid                                          CP0-Hold(S26,S73)
	S75= CtrlEPCIn=0                                            Premise(F43)
	S76= CtrlExCodeIn=0                                         Premise(F44)
	S77= CtrlIMMU=0                                             Premise(F45)
	S78= CtrlPC=0                                               Premise(F46)
	S79= CtrlPCInc=1                                            Premise(F47)
	S80= PC[Out]=addr+4                                         PC-Inc(S32,S78,S79)
	S81= PC[CIA]=addr                                           PC-Inc(S32,S78,S79)
	S82= CtrlIAddrReg=0                                         Premise(F48)
	S83= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S34,S82)
	S84= CtrlICache=1                                           Premise(F49)
	S85= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S70,S68,S84)
	S86= CtrlIR=1                                               Premise(F50)
	S87= [IR]={0,rs,rt,code,51}                                 IR-Write(S66,S86)
	S88= CtrlICacheReg=0                                        Premise(F51)
	S89= CtrlIMem=0                                             Premise(F52)
	S90= IMem[{pid,addr}]={0,rs,rt,code,51}                     IMem-Hold(S39,S89)
	S91= CtrlIRMux=0                                            Premise(F53)
	S92= CtrlGPR=0                                              Premise(F54)
	S93= GPR[rs]=a                                              GPR-Hold(S42,S92)
	S94= GPR[rt]=b                                              GPR-Hold(S43,S92)
	S95= CtrlA=0                                                Premise(F55)
	S96= CtrlB=0                                                Premise(F56)
	S97= CtrlConditionReg=0                                     Premise(F57)
	S98= CtrlPIDReg=0                                           Premise(F58)

ID	S99= CP0.ASID=pid                                           CP0-Read-ASID(S74)
	S100= PC.Out=addr+4                                         PC-Out(S80)
	S101= PC.CIA=addr                                           PC-Out(S81)
	S102= PC.CIA31_28=addr[31:28]                               PC-Out(S81)
	S103= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S83)
	S104= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S83)
	S105= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S83)
	S106= IR.Out={0,rs,rt,code,51}                              IR-Out(S87)
	S107= IR.Out31_26=0                                         IR-Out(S87)
	S108= IR.Out25_21=rs                                        IR-Out(S87)
	S109= IR.Out20_16=rt                                        IR-Out(S87)
	S110= IR.Out15_6=code                                       IR-Out(S87)
	S111= IR.Out5_0=51                                          IR-Out(S87)
	S112= IR.Out31_26=>CU.Op                                    Premise(F59)
	S113= CU.Op=0                                               Path(S107,S112)
	S114= IR.Out25_21=>GPR.RReg1                                Premise(F60)
	S115= GPR.RReg1=rs                                          Path(S108,S114)
	S116= GPR.Rdata1=a                                          GPR-Read(S115,S93)
	S117= IR.Out20_16=>GPR.RReg2                                Premise(F61)
	S118= GPR.RReg2=rt                                          Path(S109,S117)
	S119= GPR.Rdata2=b                                          GPR-Read(S118,S94)
	S120= IR.Out5_0=>CU.IRFunc                                  Premise(F62)
	S121= CU.IRFunc=51                                          Path(S111,S120)
	S122= GPR.Rdata1=>A.In                                      Premise(F63)
	S123= A.In=a                                                Path(S116,S122)
	S124= GPR.Rdata2=>B.In                                      Premise(F64)
	S125= B.In=b                                                Path(S119,S124)
	S126= CtrlASIDIn=0                                          Premise(F65)
	S127= CtrlCP0=0                                             Premise(F66)
	S128= CP0[ASID]=pid                                         CP0-Hold(S74,S127)
	S129= CtrlEPCIn=0                                           Premise(F67)
	S130= CtrlExCodeIn=0                                        Premise(F68)
	S131= CtrlIMMU=0                                            Premise(F69)
	S132= CtrlPC=0                                              Premise(F70)
	S133= CtrlPCInc=0                                           Premise(F71)
	S134= PC[CIA]=addr                                          PC-Hold(S81,S133)
	S135= PC[Out]=addr+4                                        PC-Hold(S80,S132,S133)
	S136= CtrlIAddrReg=0                                        Premise(F72)
	S137= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S83,S136)
	S138= CtrlICache=0                                          Premise(F73)
	S139= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S85,S138)
	S140= CtrlIR=0                                              Premise(F74)
	S141= [IR]={0,rs,rt,code,51}                                IR-Hold(S87,S140)
	S142= CtrlICacheReg=0                                       Premise(F75)
	S143= CtrlIMem=0                                            Premise(F76)
	S144= IMem[{pid,addr}]={0,rs,rt,code,51}                    IMem-Hold(S90,S143)
	S145= CtrlIRMux=0                                           Premise(F77)
	S146= CtrlGPR=0                                             Premise(F78)
	S147= GPR[rs]=a                                             GPR-Hold(S93,S146)
	S148= GPR[rt]=b                                             GPR-Hold(S94,S146)
	S149= CtrlA=1                                               Premise(F79)
	S150= [A]=a                                                 A-Write(S123,S149)
	S151= CtrlB=1                                               Premise(F80)
	S152= [B]=b                                                 B-Write(S125,S151)
	S153= CtrlConditionReg=0                                    Premise(F81)
	S154= CtrlPIDReg=0                                          Premise(F82)

EX	S155= CP0.ASID=pid                                          CP0-Read-ASID(S128)
	S156= PC.CIA=addr                                           PC-Out(S134)
	S157= PC.CIA31_28=addr[31:28]                               PC-Out(S134)
	S158= PC.Out=addr+4                                         PC-Out(S135)
	S159= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S137)
	S160= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S137)
	S161= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S137)
	S162= IR.Out={0,rs,rt,code,51}                              IR-Out(S141)
	S163= IR.Out31_26=0                                         IR-Out(S141)
	S164= IR.Out25_21=rs                                        IR-Out(S141)
	S165= IR.Out20_16=rt                                        IR-Out(S141)
	S166= IR.Out15_6=code                                       IR-Out(S141)
	S167= IR.Out5_0=51                                          IR-Out(S141)
	S168= A.Out=a                                               A-Out(S150)
	S169= A.Out1_0={a}[1:0]                                     A-Out(S150)
	S170= A.Out4_0={a}[4:0]                                     A-Out(S150)
	S171= B.Out=b                                               B-Out(S152)
	S172= B.Out1_0={b}[1:0]                                     B-Out(S152)
	S173= B.Out4_0={b}[4:0]                                     B-Out(S152)
	S174= A.Out=>CMPU.A                                         Premise(F83)
	S175= CMPU.A=a                                              Path(S168,S174)
	S176= B.Out=>CMPU.B                                         Premise(F84)
	S177= CMPU.B=b                                              Path(S171,S176)
	S178= CMPU.Func=6'b000000                                   Premise(F85)
	S179= CMPU.Out=CompareU(a,b)                                CMPU-CMPU(S175,S177)
	S180= CMPU.zero=CompareU(a,b)                               CMPU-CMPU(S175,S177)
	S181= CMPU.gt=CompareU(a,b)                                 CMPU-CMPU(S175,S177)
	S182= CMPU.lt=CompareU(a,b)                                 CMPU-CMPU(S175,S177)
	S183= CMPU.lt=>ConditionReg.In                              Premise(F86)
	S184= ConditionReg.In=CompareU(a,b)                         Path(S182,S183)
	S185= CtrlASIDIn=0                                          Premise(F87)
	S186= CtrlCP0=0                                             Premise(F88)
	S187= CP0[ASID]=pid                                         CP0-Hold(S128,S186)
	S188= CtrlEPCIn=0                                           Premise(F89)
	S189= CtrlExCodeIn=0                                        Premise(F90)
	S190= CtrlIMMU=0                                            Premise(F91)
	S191= CtrlPC=0                                              Premise(F92)
	S192= CtrlPCInc=0                                           Premise(F93)
	S193= PC[CIA]=addr                                          PC-Hold(S134,S192)
	S194= PC[Out]=addr+4                                        PC-Hold(S135,S191,S192)
	S195= CtrlIAddrReg=0                                        Premise(F94)
	S196= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S137,S195)
	S197= CtrlICache=0                                          Premise(F95)
	S198= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S139,S197)
	S199= CtrlIR=0                                              Premise(F96)
	S200= [IR]={0,rs,rt,code,51}                                IR-Hold(S141,S199)
	S201= CtrlICacheReg=0                                       Premise(F97)
	S202= CtrlIMem=0                                            Premise(F98)
	S203= IMem[{pid,addr}]={0,rs,rt,code,51}                    IMem-Hold(S144,S202)
	S204= CtrlIRMux=0                                           Premise(F99)
	S205= CtrlGPR=0                                             Premise(F100)
	S206= GPR[rs]=a                                             GPR-Hold(S147,S205)
	S207= GPR[rt]=b                                             GPR-Hold(S148,S205)
	S208= CtrlA=0                                               Premise(F101)
	S209= [A]=a                                                 A-Hold(S150,S208)
	S210= CtrlB=0                                               Premise(F102)
	S211= [B]=b                                                 B-Hold(S152,S210)
	S212= CtrlConditionReg=1                                    Premise(F103)
	S213= [ConditionReg]=CompareU(a,b)                          ConditionReg-Write(S184,S212)
	S214= CtrlPIDReg=0                                          Premise(F104)

MEM	S215= CP0.ASID=pid                                          CP0-Read-ASID(S187)
	S216= PC.CIA=addr                                           PC-Out(S193)
	S217= PC.CIA31_28=addr[31:28]                               PC-Out(S193)
	S218= PC.Out=addr+4                                         PC-Out(S194)
	S219= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S196)
	S220= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S196)
	S221= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S196)
	S222= IR.Out={0,rs,rt,code,51}                              IR-Out(S200)
	S223= IR.Out31_26=0                                         IR-Out(S200)
	S224= IR.Out25_21=rs                                        IR-Out(S200)
	S225= IR.Out20_16=rt                                        IR-Out(S200)
	S226= IR.Out15_6=code                                       IR-Out(S200)
	S227= IR.Out5_0=51                                          IR-Out(S200)
	S228= A.Out=a                                               A-Out(S209)
	S229= A.Out1_0={a}[1:0]                                     A-Out(S209)
	S230= A.Out4_0={a}[4:0]                                     A-Out(S209)
	S231= B.Out=b                                               B-Out(S211)
	S232= B.Out1_0={b}[1:0]                                     B-Out(S211)
	S233= B.Out4_0={b}[4:0]                                     B-Out(S211)
	S234= ConditionReg.Out=CompareU(a,b)                        ConditionReg-Out(S213)
	S235= ConditionReg.Out1_0={CompareU(a,b)}[1:0]              ConditionReg-Out(S213)
	S236= ConditionReg.Out4_0={CompareU(a,b)}[4:0]              ConditionReg-Out(S213)
	S237= PC.Out=>CP0.EPCIn                                     Premise(F105)
	S238= CP0.EPCIn=addr+4                                      Path(S218,S237)
	S239= CP0.ExCodeIn=5'h0d                                    Premise(F106)
	S240= CU.TrapAddr=>PC.In                                    Premise(F107)
	S241= CP0.ASID=>PIDReg.In                                   Premise(F108)
	S242= PIDReg.In=pid                                         Path(S215,S241)
	S243= ConditionReg.Out=>CU.lt                               Premise(F109)
	S244= CU.lt=CompareU(a,b)                                   Path(S234,S243)
	S245= CtrlASIDIn=0                                          Premise(F110)
	S246= CtrlCP0=0                                             Premise(F111)
	S247= CP0[ASID]=pid                                         CP0-Hold(S187,S246)
	S248= CtrlEPCIn=0                                           Premise(F112)
	S249= CtrlExCodeIn=0                                        Premise(F113)
	S250= CtrlIMMU=0                                            Premise(F114)
	S251= CtrlPC=0                                              Premise(F115)
	S252= CtrlPCInc=0                                           Premise(F116)
	S253= PC[CIA]=addr                                          PC-Hold(S193,S252)
	S254= PC[Out]=addr+4                                        PC-Hold(S194,S251,S252)
	S255= CtrlIAddrReg=0                                        Premise(F117)
	S256= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S196,S255)
	S257= CtrlICache=0                                          Premise(F118)
	S258= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S198,S257)
	S259= CtrlIR=0                                              Premise(F119)
	S260= [IR]={0,rs,rt,code,51}                                IR-Hold(S200,S259)
	S261= CtrlICacheReg=0                                       Premise(F120)
	S262= CtrlIMem=0                                            Premise(F121)
	S263= IMem[{pid,addr}]={0,rs,rt,code,51}                    IMem-Hold(S203,S262)
	S264= CtrlIRMux=0                                           Premise(F122)
	S265= CtrlGPR=0                                             Premise(F123)
	S266= GPR[rs]=a                                             GPR-Hold(S206,S265)
	S267= GPR[rt]=b                                             GPR-Hold(S207,S265)
	S268= CtrlA=0                                               Premise(F124)
	S269= [A]=a                                                 A-Hold(S209,S268)
	S270= CtrlB=0                                               Premise(F125)
	S271= [B]=b                                                 B-Hold(S211,S270)
	S272= CtrlConditionReg=0                                    Premise(F126)
	S273= [ConditionReg]=CompareU(a,b)                          ConditionReg-Hold(S213,S272)
	S274= CtrlPIDReg=0                                          Premise(F127)

MEM(DMMU1)	S275= CP0.ASID=pid                                          CP0-Read-ASID(S247)
	S276= PC.CIA=addr                                           PC-Out(S253)
	S277= PC.CIA31_28=addr[31:28]                               PC-Out(S253)
	S278= PC.Out=addr+4                                         PC-Out(S254)
	S279= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S256)
	S280= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S256)
	S281= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S256)
	S282= IR.Out={0,rs,rt,code,51}                              IR-Out(S260)
	S283= IR.Out31_26=0                                         IR-Out(S260)
	S284= IR.Out25_21=rs                                        IR-Out(S260)
	S285= IR.Out20_16=rt                                        IR-Out(S260)
	S286= IR.Out15_6=code                                       IR-Out(S260)
	S287= IR.Out5_0=51                                          IR-Out(S260)
	S288= A.Out=a                                               A-Out(S269)
	S289= A.Out1_0={a}[1:0]                                     A-Out(S269)
	S290= A.Out4_0={a}[4:0]                                     A-Out(S269)
	S291= B.Out=b                                               B-Out(S271)
	S292= B.Out1_0={b}[1:0]                                     B-Out(S271)
	S293= B.Out4_0={b}[4:0]                                     B-Out(S271)
	S294= ConditionReg.Out=CompareU(a,b)                        ConditionReg-Out(S273)
	S295= ConditionReg.Out1_0={CompareU(a,b)}[1:0]              ConditionReg-Out(S273)
	S296= ConditionReg.Out4_0={CompareU(a,b)}[4:0]              ConditionReg-Out(S273)
	S297= CtrlASIDIn=0                                          Premise(F128)
	S298= CtrlCP0=0                                             Premise(F129)
	S299= CP0[ASID]=pid                                         CP0-Hold(S247,S298)
	S300= CtrlEPCIn=0                                           Premise(F130)
	S301= CtrlExCodeIn=0                                        Premise(F131)
	S302= CtrlIMMU=0                                            Premise(F132)
	S303= CtrlPC=0                                              Premise(F133)
	S304= CtrlPCInc=0                                           Premise(F134)
	S305= PC[CIA]=addr                                          PC-Hold(S253,S304)
	S306= PC[Out]=addr+4                                        PC-Hold(S254,S303,S304)
	S307= CtrlIAddrReg=0                                        Premise(F135)
	S308= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S256,S307)
	S309= CtrlICache=0                                          Premise(F136)
	S310= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S258,S309)
	S311= CtrlIR=0                                              Premise(F137)
	S312= [IR]={0,rs,rt,code,51}                                IR-Hold(S260,S311)
	S313= CtrlICacheReg=0                                       Premise(F138)
	S314= CtrlIMem=0                                            Premise(F139)
	S315= IMem[{pid,addr}]={0,rs,rt,code,51}                    IMem-Hold(S263,S314)
	S316= CtrlIRMux=0                                           Premise(F140)
	S317= CtrlGPR=0                                             Premise(F141)
	S318= GPR[rs]=a                                             GPR-Hold(S266,S317)
	S319= GPR[rt]=b                                             GPR-Hold(S267,S317)
	S320= CtrlA=0                                               Premise(F142)
	S321= [A]=a                                                 A-Hold(S269,S320)
	S322= CtrlB=0                                               Premise(F143)
	S323= [B]=b                                                 B-Hold(S271,S322)
	S324= CtrlConditionReg=0                                    Premise(F144)
	S325= [ConditionReg]=CompareU(a,b)                          ConditionReg-Hold(S273,S324)
	S326= CtrlPIDReg=0                                          Premise(F145)

MEM(DMMU2)	S327= CP0.ASID=pid                                          CP0-Read-ASID(S299)
	S328= PC.CIA=addr                                           PC-Out(S305)
	S329= PC.CIA31_28=addr[31:28]                               PC-Out(S305)
	S330= PC.Out=addr+4                                         PC-Out(S306)
	S331= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S308)
	S332= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S308)
	S333= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S308)
	S334= IR.Out={0,rs,rt,code,51}                              IR-Out(S312)
	S335= IR.Out31_26=0                                         IR-Out(S312)
	S336= IR.Out25_21=rs                                        IR-Out(S312)
	S337= IR.Out20_16=rt                                        IR-Out(S312)
	S338= IR.Out15_6=code                                       IR-Out(S312)
	S339= IR.Out5_0=51                                          IR-Out(S312)
	S340= A.Out=a                                               A-Out(S321)
	S341= A.Out1_0={a}[1:0]                                     A-Out(S321)
	S342= A.Out4_0={a}[4:0]                                     A-Out(S321)
	S343= B.Out=b                                               B-Out(S323)
	S344= B.Out1_0={b}[1:0]                                     B-Out(S323)
	S345= B.Out4_0={b}[4:0]                                     B-Out(S323)
	S346= ConditionReg.Out=CompareU(a,b)                        ConditionReg-Out(S325)
	S347= ConditionReg.Out1_0={CompareU(a,b)}[1:0]              ConditionReg-Out(S325)
	S348= ConditionReg.Out4_0={CompareU(a,b)}[4:0]              ConditionReg-Out(S325)
	S349= CtrlASIDIn=0                                          Premise(F146)
	S350= CtrlCP0=0                                             Premise(F147)
	S351= CP0[ASID]=pid                                         CP0-Hold(S299,S350)
	S352= CtrlEPCIn=0                                           Premise(F148)
	S353= CtrlExCodeIn=0                                        Premise(F149)
	S354= CtrlIMMU=0                                            Premise(F150)
	S355= CtrlPC=0                                              Premise(F151)
	S356= CtrlPCInc=0                                           Premise(F152)
	S357= PC[CIA]=addr                                          PC-Hold(S305,S356)
	S358= PC[Out]=addr+4                                        PC-Hold(S306,S355,S356)
	S359= CtrlIAddrReg=0                                        Premise(F153)
	S360= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S308,S359)
	S361= CtrlICache=0                                          Premise(F154)
	S362= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S310,S361)
	S363= CtrlIR=0                                              Premise(F155)
	S364= [IR]={0,rs,rt,code,51}                                IR-Hold(S312,S363)
	S365= CtrlICacheReg=0                                       Premise(F156)
	S366= CtrlIMem=0                                            Premise(F157)
	S367= IMem[{pid,addr}]={0,rs,rt,code,51}                    IMem-Hold(S315,S366)
	S368= CtrlIRMux=0                                           Premise(F158)
	S369= CtrlGPR=0                                             Premise(F159)
	S370= GPR[rs]=a                                             GPR-Hold(S318,S369)
	S371= GPR[rt]=b                                             GPR-Hold(S319,S369)
	S372= CtrlA=0                                               Premise(F160)
	S373= [A]=a                                                 A-Hold(S321,S372)
	S374= CtrlB=0                                               Premise(F161)
	S375= [B]=b                                                 B-Hold(S323,S374)
	S376= CtrlConditionReg=0                                    Premise(F162)
	S377= [ConditionReg]=CompareU(a,b)                          ConditionReg-Hold(S325,S376)
	S378= CtrlPIDReg=0                                          Premise(F163)

WB	S379= CP0.ASID=pid                                          CP0-Read-ASID(S351)
	S380= PC.CIA=addr                                           PC-Out(S357)
	S381= PC.CIA31_28=addr[31:28]                               PC-Out(S357)
	S382= PC.Out=addr+4                                         PC-Out(S358)
	S383= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S360)
	S384= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S360)
	S385= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S360)
	S386= IR.Out={0,rs,rt,code,51}                              IR-Out(S364)
	S387= IR.Out31_26=0                                         IR-Out(S364)
	S388= IR.Out25_21=rs                                        IR-Out(S364)
	S389= IR.Out20_16=rt                                        IR-Out(S364)
	S390= IR.Out15_6=code                                       IR-Out(S364)
	S391= IR.Out5_0=51                                          IR-Out(S364)
	S392= A.Out=a                                               A-Out(S373)
	S393= A.Out1_0={a}[1:0]                                     A-Out(S373)
	S394= A.Out4_0={a}[4:0]                                     A-Out(S373)
	S395= B.Out=b                                               B-Out(S375)
	S396= B.Out1_0={b}[1:0]                                     B-Out(S375)
	S397= B.Out4_0={b}[4:0]                                     B-Out(S375)
	S398= ConditionReg.Out=CompareU(a,b)                        ConditionReg-Out(S377)
	S399= ConditionReg.Out1_0={CompareU(a,b)}[1:0]              ConditionReg-Out(S377)
	S400= ConditionReg.Out4_0={CompareU(a,b)}[4:0]              ConditionReg-Out(S377)
	S401= CtrlASIDIn=0                                          Premise(F164)
	S402= CtrlCP0=0                                             Premise(F165)
	S403= CP0[ASID]=pid                                         CP0-Hold(S351,S402)
	S404= CtrlEPCIn=0                                           Premise(F166)
	S405= CtrlExCodeIn=0                                        Premise(F167)
	S406= CtrlIMMU=0                                            Premise(F168)
	S407= CtrlPC=0                                              Premise(F169)
	S408= CtrlPCInc=0                                           Premise(F170)
	S409= PC[CIA]=addr                                          PC-Hold(S357,S408)
	S410= PC[Out]=addr+4                                        PC-Hold(S358,S407,S408)
	S411= CtrlIAddrReg=0                                        Premise(F171)
	S412= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S360,S411)
	S413= CtrlICache=0                                          Premise(F172)
	S414= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S362,S413)
	S415= CtrlIR=0                                              Premise(F173)
	S416= [IR]={0,rs,rt,code,51}                                IR-Hold(S364,S415)
	S417= CtrlICacheReg=0                                       Premise(F174)
	S418= CtrlIMem=0                                            Premise(F175)
	S419= IMem[{pid,addr}]={0,rs,rt,code,51}                    IMem-Hold(S367,S418)
	S420= CtrlIRMux=0                                           Premise(F176)
	S421= CtrlGPR=0                                             Premise(F177)
	S422= GPR[rs]=a                                             GPR-Hold(S370,S421)
	S423= GPR[rt]=b                                             GPR-Hold(S371,S421)
	S424= CtrlA=0                                               Premise(F178)
	S425= [A]=a                                                 A-Hold(S373,S424)
	S426= CtrlB=0                                               Premise(F179)
	S427= [B]=b                                                 B-Hold(S375,S426)
	S428= CtrlConditionReg=0                                    Premise(F180)
	S429= [ConditionReg]=CompareU(a,b)                          ConditionReg-Hold(S377,S428)
	S430= CtrlPIDReg=0                                          Premise(F181)

POST	S403= CP0[ASID]=pid                                         CP0-Hold(S351,S402)
	S409= PC[CIA]=addr                                          PC-Hold(S357,S408)
	S410= PC[Out]=addr+4                                        PC-Hold(S358,S407,S408)
	S412= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S360,S411)
	S414= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S362,S413)
	S416= [IR]={0,rs,rt,code,51}                                IR-Hold(S364,S415)
	S419= IMem[{pid,addr}]={0,rs,rt,code,51}                    IMem-Hold(S367,S418)
	S422= GPR[rs]=a                                             GPR-Hold(S370,S421)
	S423= GPR[rt]=b                                             GPR-Hold(S371,S421)
	S425= [A]=a                                                 A-Hold(S373,S424)
	S427= [B]=b                                                 B-Hold(S375,S426)
	S429= [ConditionReg]=CompareU(a,b)                          ConditionReg-Hold(S377,S428)

