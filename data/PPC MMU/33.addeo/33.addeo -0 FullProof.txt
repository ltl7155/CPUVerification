
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,1300}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[CA]=ca                                              Premise(F5)
	S6= XER[SO]=so                                              Premise(F6)

IF	S7= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S8= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S9= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S10= PC.Out=addr                                            PC-Out(S1)
	S11= XER.CAOut=ca                                           XER-CA-Out(S5)
	S12= XER.SOOut=so                                           XER-SO-Out(S6)
	S13= PIDReg.Out=>IMMU.PID                                   Premise(F7)
	S14= IMMU.PID=pid                                           Path(S7,S13)
	S15= PC.Out=>IMMU.IEA                                       Premise(F8)
	S16= IMMU.IEA=addr                                          Path(S10,S15)
	S17= IMMU.Addr={pid,addr}                                   IMMU-Search(S14,S16)
	S18= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S14,S16)
	S19= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S20= IAddrReg.In={pid,addr}                                 Path(S17,S19)
	S21= IMMU.Hit=>IMMUHitReg.In                                Premise(F10)
	S22= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S18,S21)
	S23= PC.Out=>ICache.IEA                                     Premise(F11)
	S24= ICache.IEA=addr                                        Path(S10,S23)
	S25= ICache.Hit=ICacheHit(addr)                             ICache-Search(S24)
	S26= ICache.Out=>ICacheReg.In                               Premise(F12)
	S27= ICache.Hit=>ICacheHitReg.In                            Premise(F13)
	S28= ICacheHitReg.In=ICacheHit(addr)                        Path(S25,S27)
	S29= IMMUHitReg.Out=>CU.IMemHit                             Premise(F14)
	S30= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F15)
	S31= IAddrReg.Out=>IMem.RAddr                               Premise(F16)
	S32= IMem.Out=>IRMux.MemData                                Premise(F17)
	S33= ICacheReg.Out=>IRMux.CacheData                         Premise(F18)
	S34= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F19)
	S35= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F20)
	S36= IRMux.Out=>IR.In                                       Premise(F21)
	S37= IMem.MEM8WordOut=>ICache.WData                         Premise(F22)
	S38= PC.Out=>ICache.IEA                                     Premise(F23)
	S39= IR.Out0_5=>CU.Op                                       Premise(F24)
	S40= IR.Out11_15=>GPRegs.RReg1                              Premise(F25)
	S41= IR.Out16_20=>GPRegs.RReg2                              Premise(F26)
	S42= IR.Out21_31=>CU.IRFunc                                 Premise(F27)
	S43= GPRegs.Rdata1=>A.In                                    Premise(F28)
	S44= GPRegs.Rdata2=>B.In                                    Premise(F29)
	S45= A.Out=>ALU.A                                           Premise(F30)
	S46= B.Out=>ALU.B                                           Premise(F31)
	S47= XER.CAOut=>ALU.CAIn                                    Premise(F32)
	S48= ALU.CAIn=ca                                            Path(S11,S47)
	S49= CU.Func=>ALU.Func                                      Premise(F33)
	S50= ALU.Out=>ALUOut.In                                     Premise(F34)
	S51= ALU.CA=>CAReg.In                                       Premise(F35)
	S52= ALU.OV=>OVReg.In                                       Premise(F36)
	S53= XER.SOOut=>ORGate.A                                    Premise(F37)
	S54= ORGate.A=so                                            Path(S12,S53)
	S55= ALU.OV=>ORGate.B                                       Premise(F38)
	S56= ORGate.Out=>DR1bit.In                                  Premise(F39)
	S57= IR.Out6_10=>GPRegs.WReg                                Premise(F40)
	S58= ALUOut.Out=>GPRegs.WData                               Premise(F41)
	S59= DR1bit.Out=>XER.SOIn                                   Premise(F42)
	S60= CAReg.Out=>XER.CAIn                                    Premise(F43)
	S61= OVReg.Out=>XER.OVIn                                    Premise(F44)
	S62= CtrlPIDReg=0                                           Premise(F45)
	S63= [PIDReg]=pid                                           PIDReg-Hold(S0,S62)
	S64= CtrlIMMU=0                                             Premise(F46)
	S65= CtrlPC=0                                               Premise(F47)
	S66= CtrlPCInc=0                                            Premise(F48)
	S67= PC[Out]=addr                                           PC-Hold(S1,S65,S66)
	S68= CtrlIAddrReg=1                                         Premise(F49)
	S69= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S20,S68)
	S70= CtrlIMMUHitReg=1                                       Premise(F50)
	S71= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S22,S70)
	S72= CtrlICache=0                                           Premise(F51)
	S73= CtrlICacheReg=1                                        Premise(F52)
	S74= CtrlICacheHitReg=1                                     Premise(F53)
	S75= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S28,S74)
	S76= CtrlIMem=0                                             Premise(F54)
	S77= IMem[{pid,addr}]={31,rT,rA,rB,1300}                    IMem-Hold(S2,S76)
	S78= CtrlIRMux=0                                            Premise(F55)
	S79= CtrlIR=0                                               Premise(F56)
	S80= CtrlGPRegs=0                                           Premise(F57)
	S81= GPRegs[rA]=a                                           GPRegs-Hold(S3,S80)
	S82= GPRegs[rB]=b                                           GPRegs-Hold(S4,S80)
	S83= CtrlA=0                                                Premise(F58)
	S84= CtrlB=0                                                Premise(F59)
	S85= CtrlXERSO=0                                            Premise(F60)
	S86= XER[SO]=so                                             XER-SO-Hold(S6,S85)
	S87= CtrlXEROV=0                                            Premise(F61)
	S88= CtrlXERCA=0                                            Premise(F62)
	S89= XER[CA]=ca                                             XER-CA-Hold(S5,S88)
	S90= CtrlALUOut=0                                           Premise(F63)
	S91= CtrlCAReg=0                                            Premise(F64)
	S92= CtrlOVReg=0                                            Premise(F65)
	S93= CtrlDR1bit=0                                           Premise(F66)

IMMU	S94= PIDReg.Out=pid                                         PIDReg-Out(S63)
	S95= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S63)
	S96= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S63)
	S97= PC.Out=addr                                            PC-Out(S67)
	S98= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S69)
	S99= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S69)
	S100= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S69)
	S101= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S71)
	S102= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S71)
	S103= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S71)
	S104= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S75)
	S105= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S75)
	S106= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S75)
	S107= XER.SOOut=so                                          XER-SO-Out(S86)
	S108= XER.CAOut=ca                                          XER-CA-Out(S89)
	S109= PIDReg.Out=>IMMU.PID                                  Premise(F67)
	S110= IMMU.PID=pid                                          Path(S94,S109)
	S111= PC.Out=>IMMU.IEA                                      Premise(F68)
	S112= IMMU.IEA=addr                                         Path(S97,S111)
	S113= IMMU.Addr={pid,addr}                                  IMMU-Search(S110,S112)
	S114= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S110,S112)
	S115= IMMU.Addr=>IAddrReg.In                                Premise(F69)
	S116= IAddrReg.In={pid,addr}                                Path(S113,S115)
	S117= IMMU.Hit=>IMMUHitReg.In                               Premise(F70)
	S118= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S114,S117)
	S119= PC.Out=>ICache.IEA                                    Premise(F71)
	S120= ICache.IEA=addr                                       Path(S97,S119)
	S121= ICache.Hit=ICacheHit(addr)                            ICache-Search(S120)
	S122= ICache.Out=>ICacheReg.In                              Premise(F72)
	S123= ICache.Hit=>ICacheHitReg.In                           Premise(F73)
	S124= ICacheHitReg.In=ICacheHit(addr)                       Path(S121,S123)
	S125= IMMUHitReg.Out=>CU.IMemHit                            Premise(F74)
	S126= CU.IMemHit=IMMUHit(pid,addr)                          Path(S101,S125)
	S127= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F75)
	S128= CU.ICacheHit=ICacheHit(addr)                          Path(S104,S127)
	S129= IAddrReg.Out=>IMem.RAddr                              Premise(F76)
	S130= IMem.RAddr={pid,addr}                                 Path(S98,S129)
	S131= IMem.Out={31,rT,rA,rB,1300}                           IMem-Read(S130,S77)
	S132= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S130,S77)
	S133= IMem.Out=>IRMux.MemData                               Premise(F77)
	S134= IRMux.MemData={31,rT,rA,rB,1300}                      Path(S131,S133)
	S135= IRMux.Out={31,rT,rA,rB,1300}                          IRMux-Select(S134)
	S136= ICacheReg.Out=>IRMux.CacheData                        Premise(F78)
	S137= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F79)
	S138= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S101,S137)
	S139= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F80)
	S140= IRMux.CacheSel=ICacheHit(addr)                        Path(S104,S139)
	S141= IRMux.Out=>IR.In                                      Premise(F81)
	S142= IR.In={31,rT,rA,rB,1300}                              Path(S135,S141)
	S143= IMem.MEM8WordOut=>ICache.WData                        Premise(F82)
	S144= ICache.WData=IMemGet8Word({pid,addr})                 Path(S132,S143)
	S145= PC.Out=>ICache.IEA                                    Premise(F83)
	S146= IR.Out0_5=>CU.Op                                      Premise(F84)
	S147= IR.Out11_15=>GPRegs.RReg1                             Premise(F85)
	S148= IR.Out16_20=>GPRegs.RReg2                             Premise(F86)
	S149= IR.Out21_31=>CU.IRFunc                                Premise(F87)
	S150= GPRegs.Rdata1=>A.In                                   Premise(F88)
	S151= GPRegs.Rdata2=>B.In                                   Premise(F89)
	S152= A.Out=>ALU.A                                          Premise(F90)
	S153= B.Out=>ALU.B                                          Premise(F91)
	S154= XER.CAOut=>ALU.CAIn                                   Premise(F92)
	S155= ALU.CAIn=ca                                           Path(S108,S154)
	S156= CU.Func=>ALU.Func                                     Premise(F93)
	S157= ALU.Out=>ALUOut.In                                    Premise(F94)
	S158= ALU.CA=>CAReg.In                                      Premise(F95)
	S159= ALU.OV=>OVReg.In                                      Premise(F96)
	S160= XER.SOOut=>ORGate.A                                   Premise(F97)
	S161= ORGate.A=so                                           Path(S107,S160)
	S162= ALU.OV=>ORGate.B                                      Premise(F98)
	S163= ORGate.Out=>DR1bit.In                                 Premise(F99)
	S164= IR.Out6_10=>GPRegs.WReg                               Premise(F100)
	S165= ALUOut.Out=>GPRegs.WData                              Premise(F101)
	S166= DR1bit.Out=>XER.SOIn                                  Premise(F102)
	S167= CAReg.Out=>XER.CAIn                                   Premise(F103)
	S168= OVReg.Out=>XER.OVIn                                   Premise(F104)
	S169= CtrlPIDReg=0                                          Premise(F105)
	S170= [PIDReg]=pid                                          PIDReg-Hold(S63,S169)
	S171= CtrlIMMU=0                                            Premise(F106)
	S172= CtrlPC=0                                              Premise(F107)
	S173= CtrlPCInc=1                                           Premise(F108)
	S174= PC[Out]=addr+4                                        PC-Inc(S67,S172,S173)
	S175= PC[CIA]=addr                                          PC-Inc(S67,S172,S173)
	S176= CtrlIAddrReg=0                                        Premise(F109)
	S177= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S69,S176)
	S178= CtrlIMMUHitReg=0                                      Premise(F110)
	S179= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S71,S178)
	S180= CtrlICache=1                                          Premise(F111)
	S181= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S120,S144,S180)
	S182= CtrlICacheReg=0                                       Premise(F112)
	S183= CtrlICacheHitReg=0                                    Premise(F113)
	S184= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S75,S183)
	S185= CtrlIMem=0                                            Premise(F114)
	S186= IMem[{pid,addr}]={31,rT,rA,rB,1300}                   IMem-Hold(S77,S185)
	S187= CtrlIRMux=0                                           Premise(F115)
	S188= CtrlIR=1                                              Premise(F116)
	S189= [IR]={31,rT,rA,rB,1300}                               IR-Write(S142,S188)
	S190= CtrlGPRegs=0                                          Premise(F117)
	S191= GPRegs[rA]=a                                          GPRegs-Hold(S81,S190)
	S192= GPRegs[rB]=b                                          GPRegs-Hold(S82,S190)
	S193= CtrlA=0                                               Premise(F118)
	S194= CtrlB=0                                               Premise(F119)
	S195= CtrlXERSO=0                                           Premise(F120)
	S196= XER[SO]=so                                            XER-SO-Hold(S86,S195)
	S197= CtrlXEROV=0                                           Premise(F121)
	S198= CtrlXERCA=0                                           Premise(F122)
	S199= XER[CA]=ca                                            XER-CA-Hold(S89,S198)
	S200= CtrlALUOut=0                                          Premise(F123)
	S201= CtrlCAReg=0                                           Premise(F124)
	S202= CtrlOVReg=0                                           Premise(F125)
	S203= CtrlDR1bit=0                                          Premise(F126)

ID	S204= PIDReg.Out=pid                                        PIDReg-Out(S170)
	S205= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S170)
	S206= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S170)
	S207= PC.Out=addr+4                                         PC-Out(S174)
	S208= PC.CIA=addr                                           PC-Out(S175)
	S209= PC.CIA31_28=addr[31:28]                               PC-Out(S175)
	S210= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S177)
	S211= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S177)
	S212= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S177)
	S213= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S179)
	S214= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S179)
	S215= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S179)
	S216= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S184)
	S217= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S184)
	S218= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S184)
	S219= IR.Out0_5=31                                          IR-Out(S189)
	S220= IR.Out6_10=rT                                         IR-Out(S189)
	S221= IR.Out11_15=rA                                        IR-Out(S189)
	S222= IR.Out16_20=rB                                        IR-Out(S189)
	S223= IR.Out21_31=1300                                      IR-Out(S189)
	S224= XER.SOOut=so                                          XER-SO-Out(S196)
	S225= XER.CAOut=ca                                          XER-CA-Out(S199)
	S226= PIDReg.Out=>IMMU.PID                                  Premise(F127)
	S227= IMMU.PID=pid                                          Path(S204,S226)
	S228= PC.Out=>IMMU.IEA                                      Premise(F128)
	S229= IMMU.IEA=addr+4                                       Path(S207,S228)
	S230= IMMU.Addr={pid,addr+4}                                IMMU-Search(S227,S229)
	S231= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S227,S229)
	S232= IMMU.Addr=>IAddrReg.In                                Premise(F129)
	S233= IAddrReg.In={pid,addr+4}                              Path(S230,S232)
	S234= IMMU.Hit=>IMMUHitReg.In                               Premise(F130)
	S235= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S231,S234)
	S236= PC.Out=>ICache.IEA                                    Premise(F131)
	S237= ICache.IEA=addr+4                                     Path(S207,S236)
	S238= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S237)
	S239= ICache.Out=>ICacheReg.In                              Premise(F132)
	S240= ICache.Hit=>ICacheHitReg.In                           Premise(F133)
	S241= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S238,S240)
	S242= IMMUHitReg.Out=>CU.IMemHit                            Premise(F134)
	S243= CU.IMemHit=IMMUHit(pid,addr)                          Path(S213,S242)
	S244= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F135)
	S245= CU.ICacheHit=ICacheHit(addr)                          Path(S216,S244)
	S246= IAddrReg.Out=>IMem.RAddr                              Premise(F136)
	S247= IMem.RAddr={pid,addr}                                 Path(S210,S246)
	S248= IMem.Out={31,rT,rA,rB,1300}                           IMem-Read(S247,S186)
	S249= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S247,S186)
	S250= IMem.Out=>IRMux.MemData                               Premise(F137)
	S251= IRMux.MemData={31,rT,rA,rB,1300}                      Path(S248,S250)
	S252= IRMux.Out={31,rT,rA,rB,1300}                          IRMux-Select(S251)
	S253= ICacheReg.Out=>IRMux.CacheData                        Premise(F138)
	S254= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F139)
	S255= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S213,S254)
	S256= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F140)
	S257= IRMux.CacheSel=ICacheHit(addr)                        Path(S216,S256)
	S258= IRMux.Out=>IR.In                                      Premise(F141)
	S259= IR.In={31,rT,rA,rB,1300}                              Path(S252,S258)
	S260= IMem.MEM8WordOut=>ICache.WData                        Premise(F142)
	S261= ICache.WData=IMemGet8Word({pid,addr})                 Path(S249,S260)
	S262= PC.Out=>ICache.IEA                                    Premise(F143)
	S263= IR.Out0_5=>CU.Op                                      Premise(F144)
	S264= CU.Op=31                                              Path(S219,S263)
	S265= IR.Out11_15=>GPRegs.RReg1                             Premise(F145)
	S266= GPRegs.RReg1=rA                                       Path(S221,S265)
	S267= GPRegs.Rdata1=a                                       GPRegs-Read(S266,S191)
	S268= IR.Out16_20=>GPRegs.RReg2                             Premise(F146)
	S269= GPRegs.RReg2=rB                                       Path(S222,S268)
	S270= GPRegs.Rdata2=b                                       GPRegs-Read(S269,S192)
	S271= IR.Out21_31=>CU.IRFunc                                Premise(F147)
	S272= CU.IRFunc=1300                                        Path(S223,S271)
	S273= CU.Func=alu_adde                                      CU(S264,S272)
	S274= GPRegs.Rdata1=>A.In                                   Premise(F148)
	S275= A.In=a                                                Path(S267,S274)
	S276= GPRegs.Rdata2=>B.In                                   Premise(F149)
	S277= B.In=b                                                Path(S270,S276)
	S278= A.Out=>ALU.A                                          Premise(F150)
	S279= B.Out=>ALU.B                                          Premise(F151)
	S280= XER.CAOut=>ALU.CAIn                                   Premise(F152)
	S281= ALU.CAIn=ca                                           Path(S225,S280)
	S282= CU.Func=>ALU.Func                                     Premise(F153)
	S283= ALU.Func=alu_adde                                     Path(S273,S282)
	S284= ALU.Out=>ALUOut.In                                    Premise(F154)
	S285= ALU.CA=>CAReg.In                                      Premise(F155)
	S286= ALU.OV=>OVReg.In                                      Premise(F156)
	S287= XER.SOOut=>ORGate.A                                   Premise(F157)
	S288= ORGate.A=so                                           Path(S224,S287)
	S289= ALU.OV=>ORGate.B                                      Premise(F158)
	S290= ORGate.Out=>DR1bit.In                                 Premise(F159)
	S291= IR.Out6_10=>GPRegs.WReg                               Premise(F160)
	S292= GPRegs.WReg=rT                                        Path(S220,S291)
	S293= ALUOut.Out=>GPRegs.WData                              Premise(F161)
	S294= DR1bit.Out=>XER.SOIn                                  Premise(F162)
	S295= CAReg.Out=>XER.CAIn                                   Premise(F163)
	S296= OVReg.Out=>XER.OVIn                                   Premise(F164)
	S297= CtrlPIDReg=0                                          Premise(F165)
	S298= [PIDReg]=pid                                          PIDReg-Hold(S170,S297)
	S299= CtrlIMMU=0                                            Premise(F166)
	S300= CtrlPC=0                                              Premise(F167)
	S301= CtrlPCInc=0                                           Premise(F168)
	S302= PC[CIA]=addr                                          PC-Hold(S175,S301)
	S303= PC[Out]=addr+4                                        PC-Hold(S174,S300,S301)
	S304= CtrlIAddrReg=0                                        Premise(F169)
	S305= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S177,S304)
	S306= CtrlIMMUHitReg=0                                      Premise(F170)
	S307= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S179,S306)
	S308= CtrlICache=0                                          Premise(F171)
	S309= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S181,S308)
	S310= CtrlICacheReg=0                                       Premise(F172)
	S311= CtrlICacheHitReg=0                                    Premise(F173)
	S312= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S184,S311)
	S313= CtrlIMem=0                                            Premise(F174)
	S314= IMem[{pid,addr}]={31,rT,rA,rB,1300}                   IMem-Hold(S186,S313)
	S315= CtrlIRMux=0                                           Premise(F175)
	S316= CtrlIR=0                                              Premise(F176)
	S317= [IR]={31,rT,rA,rB,1300}                               IR-Hold(S189,S316)
	S318= CtrlGPRegs=0                                          Premise(F177)
	S319= GPRegs[rA]=a                                          GPRegs-Hold(S191,S318)
	S320= GPRegs[rB]=b                                          GPRegs-Hold(S192,S318)
	S321= CtrlA=1                                               Premise(F178)
	S322= [A]=a                                                 A-Write(S275,S321)
	S323= CtrlB=1                                               Premise(F179)
	S324= [B]=b                                                 B-Write(S277,S323)
	S325= CtrlXERSO=0                                           Premise(F180)
	S326= XER[SO]=so                                            XER-SO-Hold(S196,S325)
	S327= CtrlXEROV=0                                           Premise(F181)
	S328= CtrlXERCA=0                                           Premise(F182)
	S329= XER[CA]=ca                                            XER-CA-Hold(S199,S328)
	S330= CtrlALUOut=0                                          Premise(F183)
	S331= CtrlCAReg=0                                           Premise(F184)
	S332= CtrlOVReg=0                                           Premise(F185)
	S333= CtrlDR1bit=0                                          Premise(F186)

EX	S334= PIDReg.Out=pid                                        PIDReg-Out(S298)
	S335= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S298)
	S336= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S298)
	S337= PC.CIA=addr                                           PC-Out(S302)
	S338= PC.CIA31_28=addr[31:28]                               PC-Out(S302)
	S339= PC.Out=addr+4                                         PC-Out(S303)
	S340= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S305)
	S341= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S305)
	S342= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S305)
	S343= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S307)
	S344= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S307)
	S345= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S307)
	S346= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S312)
	S347= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S312)
	S348= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S312)
	S349= IR.Out0_5=31                                          IR-Out(S317)
	S350= IR.Out6_10=rT                                         IR-Out(S317)
	S351= IR.Out11_15=rA                                        IR-Out(S317)
	S352= IR.Out16_20=rB                                        IR-Out(S317)
	S353= IR.Out21_31=1300                                      IR-Out(S317)
	S354= A.Out=a                                               A-Out(S322)
	S355= A.Out26_31=a[26:31]                                   A-Out(S322)
	S356= A.Out30_31=a[30:31]                                   A-Out(S322)
	S357= B.Out=b                                               B-Out(S324)
	S358= B.Out26_31=b[26:31]                                   B-Out(S324)
	S359= B.Out30_31=b[30:31]                                   B-Out(S324)
	S360= XER.SOOut=so                                          XER-SO-Out(S326)
	S361= XER.CAOut=ca                                          XER-CA-Out(S329)
	S362= PIDReg.Out=>IMMU.PID                                  Premise(F187)
	S363= IMMU.PID=pid                                          Path(S334,S362)
	S364= PC.Out=>IMMU.IEA                                      Premise(F188)
	S365= IMMU.IEA=addr+4                                       Path(S339,S364)
	S366= IMMU.Addr={pid,addr+4}                                IMMU-Search(S363,S365)
	S367= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S363,S365)
	S368= IMMU.Addr=>IAddrReg.In                                Premise(F189)
	S369= IAddrReg.In={pid,addr+4}                              Path(S366,S368)
	S370= IMMU.Hit=>IMMUHitReg.In                               Premise(F190)
	S371= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S367,S370)
	S372= PC.Out=>ICache.IEA                                    Premise(F191)
	S373= ICache.IEA=addr+4                                     Path(S339,S372)
	S374= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S373)
	S375= ICache.Out=>ICacheReg.In                              Premise(F192)
	S376= ICache.Hit=>ICacheHitReg.In                           Premise(F193)
	S377= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S374,S376)
	S378= IMMUHitReg.Out=>CU.IMemHit                            Premise(F194)
	S379= CU.IMemHit=IMMUHit(pid,addr)                          Path(S343,S378)
	S380= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F195)
	S381= CU.ICacheHit=ICacheHit(addr)                          Path(S346,S380)
	S382= IAddrReg.Out=>IMem.RAddr                              Premise(F196)
	S383= IMem.RAddr={pid,addr}                                 Path(S340,S382)
	S384= IMem.Out={31,rT,rA,rB,1300}                           IMem-Read(S383,S314)
	S385= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S383,S314)
	S386= IMem.Out=>IRMux.MemData                               Premise(F197)
	S387= IRMux.MemData={31,rT,rA,rB,1300}                      Path(S384,S386)
	S388= IRMux.Out={31,rT,rA,rB,1300}                          IRMux-Select(S387)
	S389= ICacheReg.Out=>IRMux.CacheData                        Premise(F198)
	S390= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F199)
	S391= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S343,S390)
	S392= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F200)
	S393= IRMux.CacheSel=ICacheHit(addr)                        Path(S346,S392)
	S394= IRMux.Out=>IR.In                                      Premise(F201)
	S395= IR.In={31,rT,rA,rB,1300}                              Path(S388,S394)
	S396= IMem.MEM8WordOut=>ICache.WData                        Premise(F202)
	S397= ICache.WData=IMemGet8Word({pid,addr})                 Path(S385,S396)
	S398= PC.Out=>ICache.IEA                                    Premise(F203)
	S399= IR.Out0_5=>CU.Op                                      Premise(F204)
	S400= CU.Op=31                                              Path(S349,S399)
	S401= IR.Out11_15=>GPRegs.RReg1                             Premise(F205)
	S402= GPRegs.RReg1=rA                                       Path(S351,S401)
	S403= GPRegs.Rdata1=a                                       GPRegs-Read(S402,S319)
	S404= IR.Out16_20=>GPRegs.RReg2                             Premise(F206)
	S405= GPRegs.RReg2=rB                                       Path(S352,S404)
	S406= GPRegs.Rdata2=b                                       GPRegs-Read(S405,S320)
	S407= IR.Out21_31=>CU.IRFunc                                Premise(F207)
	S408= CU.IRFunc=1300                                        Path(S353,S407)
	S409= CU.Func=alu_adde                                      CU(S400,S408)
	S410= GPRegs.Rdata1=>A.In                                   Premise(F208)
	S411= A.In=a                                                Path(S403,S410)
	S412= GPRegs.Rdata2=>B.In                                   Premise(F209)
	S413= B.In=b                                                Path(S406,S412)
	S414= A.Out=>ALU.A                                          Premise(F210)
	S415= ALU.A=a                                               Path(S354,S414)
	S416= B.Out=>ALU.B                                          Premise(F211)
	S417= ALU.B=b                                               Path(S357,S416)
	S418= XER.CAOut=>ALU.CAIn                                   Premise(F212)
	S419= ALU.CAIn=ca                                           Path(S361,S418)
	S420= CU.Func=>ALU.Func                                     Premise(F213)
	S421= ALU.Func=alu_adde                                     Path(S409,S420)
	S422= ALU.Out=a+b+ca                                        ALU(S415,S417,S419)
	S423= ALU.CMP=Compare0(a+b+ca)                              ALU(S415,S417,S419)
	S424= ALU.OV=OverFlow(a+b+ca)                               ALU(S415,S417,S419)
	S425= ALU.CA=Carry(a+b+ca)                                  ALU(S415,S417,S419)
	S426= ALU.Out=>ALUOut.In                                    Premise(F214)
	S427= ALUOut.In=a+b+ca                                      Path(S422,S426)
	S428= ALU.CA=>CAReg.In                                      Premise(F215)
	S429= CAReg.In=Carry(a+b+ca)                                Path(S425,S428)
	S430= ALU.OV=>OVReg.In                                      Premise(F216)
	S431= OVReg.In=OverFlow(a+b+ca)                             Path(S424,S430)
	S432= XER.SOOut=>ORGate.A                                   Premise(F217)
	S433= ORGate.A=so                                           Path(S360,S432)
	S434= ALU.OV=>ORGate.B                                      Premise(F218)
	S435= ORGate.B=OverFlow(a+b+ca)                             Path(S424,S434)
	S436= ORGate.Out=so|OverFlow(a+b+ca)                        ORGate(S433,S435)
	S437= ORGate.Out=>DR1bit.In                                 Premise(F219)
	S438= DR1bit.In=so|OverFlow(a+b+ca)                         Path(S436,S437)
	S439= IR.Out6_10=>GPRegs.WReg                               Premise(F220)
	S440= GPRegs.WReg=rT                                        Path(S350,S439)
	S441= ALUOut.Out=>GPRegs.WData                              Premise(F221)
	S442= DR1bit.Out=>XER.SOIn                                  Premise(F222)
	S443= CAReg.Out=>XER.CAIn                                   Premise(F223)
	S444= OVReg.Out=>XER.OVIn                                   Premise(F224)
	S445= CtrlPIDReg=0                                          Premise(F225)
	S446= [PIDReg]=pid                                          PIDReg-Hold(S298,S445)
	S447= CtrlIMMU=0                                            Premise(F226)
	S448= CtrlPC=0                                              Premise(F227)
	S449= CtrlPCInc=0                                           Premise(F228)
	S450= PC[CIA]=addr                                          PC-Hold(S302,S449)
	S451= PC[Out]=addr+4                                        PC-Hold(S303,S448,S449)
	S452= CtrlIAddrReg=0                                        Premise(F229)
	S453= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S305,S452)
	S454= CtrlIMMUHitReg=0                                      Premise(F230)
	S455= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S307,S454)
	S456= CtrlICache=0                                          Premise(F231)
	S457= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S309,S456)
	S458= CtrlICacheReg=0                                       Premise(F232)
	S459= CtrlICacheHitReg=0                                    Premise(F233)
	S460= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S312,S459)
	S461= CtrlIMem=0                                            Premise(F234)
	S462= IMem[{pid,addr}]={31,rT,rA,rB,1300}                   IMem-Hold(S314,S461)
	S463= CtrlIRMux=0                                           Premise(F235)
	S464= CtrlIR=0                                              Premise(F236)
	S465= [IR]={31,rT,rA,rB,1300}                               IR-Hold(S317,S464)
	S466= CtrlGPRegs=0                                          Premise(F237)
	S467= GPRegs[rA]=a                                          GPRegs-Hold(S319,S466)
	S468= GPRegs[rB]=b                                          GPRegs-Hold(S320,S466)
	S469= CtrlA=0                                               Premise(F238)
	S470= [A]=a                                                 A-Hold(S322,S469)
	S471= CtrlB=0                                               Premise(F239)
	S472= [B]=b                                                 B-Hold(S324,S471)
	S473= CtrlXERSO=0                                           Premise(F240)
	S474= XER[SO]=so                                            XER-SO-Hold(S326,S473)
	S475= CtrlXEROV=0                                           Premise(F241)
	S476= CtrlXERCA=0                                           Premise(F242)
	S477= XER[CA]=ca                                            XER-CA-Hold(S329,S476)
	S478= CtrlALUOut=1                                          Premise(F243)
	S479= [ALUOut]=a+b+ca                                       ALUOut-Write(S427,S478)
	S480= CtrlCAReg=1                                           Premise(F244)
	S481= [CAReg]=Carry(a+b+ca)                                 CAReg-Write(S429,S480)
	S482= CtrlOVReg=1                                           Premise(F245)
	S483= [OVReg]=OverFlow(a+b+ca)                              OVReg-Write(S431,S482)
	S484= CtrlDR1bit=1                                          Premise(F246)
	S485= [DR1bit]=so|OverFlow(a+b+ca)                          DR1bit-Write(S438,S484)

MEM	S486= PIDReg.Out=pid                                        PIDReg-Out(S446)
	S487= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S446)
	S488= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S446)
	S489= PC.CIA=addr                                           PC-Out(S450)
	S490= PC.CIA31_28=addr[31:28]                               PC-Out(S450)
	S491= PC.Out=addr+4                                         PC-Out(S451)
	S492= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S453)
	S493= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S453)
	S494= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S453)
	S495= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S455)
	S496= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S455)
	S497= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S455)
	S498= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S460)
	S499= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S460)
	S500= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S460)
	S501= IR.Out0_5=31                                          IR-Out(S465)
	S502= IR.Out6_10=rT                                         IR-Out(S465)
	S503= IR.Out11_15=rA                                        IR-Out(S465)
	S504= IR.Out16_20=rB                                        IR-Out(S465)
	S505= IR.Out21_31=1300                                      IR-Out(S465)
	S506= A.Out=a                                               A-Out(S470)
	S507= A.Out26_31=a[26:31]                                   A-Out(S470)
	S508= A.Out30_31=a[30:31]                                   A-Out(S470)
	S509= B.Out=b                                               B-Out(S472)
	S510= B.Out26_31=b[26:31]                                   B-Out(S472)
	S511= B.Out30_31=b[30:31]                                   B-Out(S472)
	S512= XER.SOOut=so                                          XER-SO-Out(S474)
	S513= XER.CAOut=ca                                          XER-CA-Out(S477)
	S514= ALUOut.Out=a+b+ca                                     ALUOut-Out(S479)
	S515= ALUOut.Out26_31=a+b+ca[26:31]                         ALUOut-Out(S479)
	S516= ALUOut.Out30_31=a+b+ca[30:31]                         ALUOut-Out(S479)
	S517= CAReg.Out=Carry(a+b+ca)                               CAReg-Out(S481)
	S518= CAReg.Out26_31=Carry(a+b+ca)[26:31]                   CAReg-Out(S481)
	S519= CAReg.Out30_31=Carry(a+b+ca)[30:31]                   CAReg-Out(S481)
	S520= OVReg.Out=OverFlow(a+b+ca)                            OVReg-Out(S483)
	S521= OVReg.Out26_31=OverFlow(a+b+ca)[26:31]                OVReg-Out(S483)
	S522= OVReg.Out30_31=OverFlow(a+b+ca)[30:31]                OVReg-Out(S483)
	S523= DR1bit.Out=so|OverFlow(a+b+ca)                        DR1bit-Out(S485)
	S524= DR1bit.Out26_31=so|OverFlow(a+b+ca)[26:31]            DR1bit-Out(S485)
	S525= DR1bit.Out30_31=so|OverFlow(a+b+ca)[30:31]            DR1bit-Out(S485)
	S526= PIDReg.Out=>IMMU.PID                                  Premise(F247)
	S527= IMMU.PID=pid                                          Path(S486,S526)
	S528= PC.Out=>IMMU.IEA                                      Premise(F248)
	S529= IMMU.IEA=addr+4                                       Path(S491,S528)
	S530= IMMU.Addr={pid,addr+4}                                IMMU-Search(S527,S529)
	S531= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S527,S529)
	S532= IMMU.Addr=>IAddrReg.In                                Premise(F249)
	S533= IAddrReg.In={pid,addr+4}                              Path(S530,S532)
	S534= IMMU.Hit=>IMMUHitReg.In                               Premise(F250)
	S535= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S531,S534)
	S536= PC.Out=>ICache.IEA                                    Premise(F251)
	S537= ICache.IEA=addr+4                                     Path(S491,S536)
	S538= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S537)
	S539= ICache.Out=>ICacheReg.In                              Premise(F252)
	S540= ICache.Hit=>ICacheHitReg.In                           Premise(F253)
	S541= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S538,S540)
	S542= IMMUHitReg.Out=>CU.IMemHit                            Premise(F254)
	S543= CU.IMemHit=IMMUHit(pid,addr)                          Path(S495,S542)
	S544= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F255)
	S545= CU.ICacheHit=ICacheHit(addr)                          Path(S498,S544)
	S546= IAddrReg.Out=>IMem.RAddr                              Premise(F256)
	S547= IMem.RAddr={pid,addr}                                 Path(S492,S546)
	S548= IMem.Out={31,rT,rA,rB,1300}                           IMem-Read(S547,S462)
	S549= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S547,S462)
	S550= IMem.Out=>IRMux.MemData                               Premise(F257)
	S551= IRMux.MemData={31,rT,rA,rB,1300}                      Path(S548,S550)
	S552= IRMux.Out={31,rT,rA,rB,1300}                          IRMux-Select(S551)
	S553= ICacheReg.Out=>IRMux.CacheData                        Premise(F258)
	S554= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F259)
	S555= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S495,S554)
	S556= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F260)
	S557= IRMux.CacheSel=ICacheHit(addr)                        Path(S498,S556)
	S558= IRMux.Out=>IR.In                                      Premise(F261)
	S559= IR.In={31,rT,rA,rB,1300}                              Path(S552,S558)
	S560= IMem.MEM8WordOut=>ICache.WData                        Premise(F262)
	S561= ICache.WData=IMemGet8Word({pid,addr})                 Path(S549,S560)
	S562= PC.Out=>ICache.IEA                                    Premise(F263)
	S563= IR.Out0_5=>CU.Op                                      Premise(F264)
	S564= CU.Op=31                                              Path(S501,S563)
	S565= IR.Out11_15=>GPRegs.RReg1                             Premise(F265)
	S566= GPRegs.RReg1=rA                                       Path(S503,S565)
	S567= GPRegs.Rdata1=a                                       GPRegs-Read(S566,S467)
	S568= IR.Out16_20=>GPRegs.RReg2                             Premise(F266)
	S569= GPRegs.RReg2=rB                                       Path(S504,S568)
	S570= GPRegs.Rdata2=b                                       GPRegs-Read(S569,S468)
	S571= IR.Out21_31=>CU.IRFunc                                Premise(F267)
	S572= CU.IRFunc=1300                                        Path(S505,S571)
	S573= CU.Func=alu_adde                                      CU(S564,S572)
	S574= GPRegs.Rdata1=>A.In                                   Premise(F268)
	S575= A.In=a                                                Path(S567,S574)
	S576= GPRegs.Rdata2=>B.In                                   Premise(F269)
	S577= B.In=b                                                Path(S570,S576)
	S578= A.Out=>ALU.A                                          Premise(F270)
	S579= ALU.A=a                                               Path(S506,S578)
	S580= B.Out=>ALU.B                                          Premise(F271)
	S581= ALU.B=b                                               Path(S509,S580)
	S582= XER.CAOut=>ALU.CAIn                                   Premise(F272)
	S583= ALU.CAIn=ca                                           Path(S513,S582)
	S584= CU.Func=>ALU.Func                                     Premise(F273)
	S585= ALU.Func=alu_adde                                     Path(S573,S584)
	S586= ALU.Out=a+b+ca                                        ALU(S579,S581,S583)
	S587= ALU.CMP=Compare0(a+b+ca)                              ALU(S579,S581,S583)
	S588= ALU.OV=OverFlow(a+b+ca)                               ALU(S579,S581,S583)
	S589= ALU.CA=Carry(a+b+ca)                                  ALU(S579,S581,S583)
	S590= ALU.Out=>ALUOut.In                                    Premise(F274)
	S591= ALUOut.In=a+b+ca                                      Path(S586,S590)
	S592= ALU.CA=>CAReg.In                                      Premise(F275)
	S593= CAReg.In=Carry(a+b+ca)                                Path(S589,S592)
	S594= ALU.OV=>OVReg.In                                      Premise(F276)
	S595= OVReg.In=OverFlow(a+b+ca)                             Path(S588,S594)
	S596= XER.SOOut=>ORGate.A                                   Premise(F277)
	S597= ORGate.A=so                                           Path(S512,S596)
	S598= ALU.OV=>ORGate.B                                      Premise(F278)
	S599= ORGate.B=OverFlow(a+b+ca)                             Path(S588,S598)
	S600= ORGate.Out=so|OverFlow(a+b+ca)                        ORGate(S597,S599)
	S601= ORGate.Out=>DR1bit.In                                 Premise(F279)
	S602= DR1bit.In=so|OverFlow(a+b+ca)                         Path(S600,S601)
	S603= IR.Out6_10=>GPRegs.WReg                               Premise(F280)
	S604= GPRegs.WReg=rT                                        Path(S502,S603)
	S605= ALUOut.Out=>GPRegs.WData                              Premise(F281)
	S606= GPRegs.WData=a+b+ca                                   Path(S514,S605)
	S607= DR1bit.Out=>XER.SOIn                                  Premise(F282)
	S608= XER.SOIn=so|OverFlow(a+b+ca)                          Path(S523,S607)
	S609= CAReg.Out=>XER.CAIn                                   Premise(F283)
	S610= XER.CAIn=Carry(a+b+ca)                                Path(S517,S609)
	S611= OVReg.Out=>XER.OVIn                                   Premise(F284)
	S612= XER.OVIn=OverFlow(a+b+ca)                             Path(S520,S611)
	S613= CtrlPIDReg=0                                          Premise(F285)
	S614= [PIDReg]=pid                                          PIDReg-Hold(S446,S613)
	S615= CtrlIMMU=0                                            Premise(F286)
	S616= CtrlPC=0                                              Premise(F287)
	S617= CtrlPCInc=0                                           Premise(F288)
	S618= PC[CIA]=addr                                          PC-Hold(S450,S617)
	S619= PC[Out]=addr+4                                        PC-Hold(S451,S616,S617)
	S620= CtrlIAddrReg=0                                        Premise(F289)
	S621= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S453,S620)
	S622= CtrlIMMUHitReg=0                                      Premise(F290)
	S623= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S455,S622)
	S624= CtrlICache=0                                          Premise(F291)
	S625= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S457,S624)
	S626= CtrlICacheReg=0                                       Premise(F292)
	S627= CtrlICacheHitReg=0                                    Premise(F293)
	S628= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S460,S627)
	S629= CtrlIMem=0                                            Premise(F294)
	S630= IMem[{pid,addr}]={31,rT,rA,rB,1300}                   IMem-Hold(S462,S629)
	S631= CtrlIRMux=0                                           Premise(F295)
	S632= CtrlIR=0                                              Premise(F296)
	S633= [IR]={31,rT,rA,rB,1300}                               IR-Hold(S465,S632)
	S634= CtrlGPRegs=0                                          Premise(F297)
	S635= GPRegs[rA]=a                                          GPRegs-Hold(S467,S634)
	S636= GPRegs[rB]=b                                          GPRegs-Hold(S468,S634)
	S637= CtrlA=0                                               Premise(F298)
	S638= [A]=a                                                 A-Hold(S470,S637)
	S639= CtrlB=0                                               Premise(F299)
	S640= [B]=b                                                 B-Hold(S472,S639)
	S641= CtrlXERSO=0                                           Premise(F300)
	S642= XER[SO]=so                                            XER-SO-Hold(S474,S641)
	S643= CtrlXEROV=0                                           Premise(F301)
	S644= CtrlXERCA=0                                           Premise(F302)
	S645= XER[CA]=ca                                            XER-CA-Hold(S477,S644)
	S646= CtrlALUOut=0                                          Premise(F303)
	S647= [ALUOut]=a+b+ca                                       ALUOut-Hold(S479,S646)
	S648= CtrlCAReg=0                                           Premise(F304)
	S649= [CAReg]=Carry(a+b+ca)                                 CAReg-Hold(S481,S648)
	S650= CtrlOVReg=0                                           Premise(F305)
	S651= [OVReg]=OverFlow(a+b+ca)                              OVReg-Hold(S483,S650)
	S652= CtrlDR1bit=0                                          Premise(F306)
	S653= [DR1bit]=so|OverFlow(a+b+ca)                          DR1bit-Hold(S485,S652)

DMMU1	S654= PIDReg.Out=pid                                        PIDReg-Out(S614)
	S655= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S614)
	S656= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S614)
	S657= PC.CIA=addr                                           PC-Out(S618)
	S658= PC.CIA31_28=addr[31:28]                               PC-Out(S618)
	S659= PC.Out=addr+4                                         PC-Out(S619)
	S660= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S621)
	S661= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S621)
	S662= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S621)
	S663= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S623)
	S664= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S623)
	S665= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S623)
	S666= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S628)
	S667= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S628)
	S668= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S628)
	S669= IR.Out0_5=31                                          IR-Out(S633)
	S670= IR.Out6_10=rT                                         IR-Out(S633)
	S671= IR.Out11_15=rA                                        IR-Out(S633)
	S672= IR.Out16_20=rB                                        IR-Out(S633)
	S673= IR.Out21_31=1300                                      IR-Out(S633)
	S674= A.Out=a                                               A-Out(S638)
	S675= A.Out26_31=a[26:31]                                   A-Out(S638)
	S676= A.Out30_31=a[30:31]                                   A-Out(S638)
	S677= B.Out=b                                               B-Out(S640)
	S678= B.Out26_31=b[26:31]                                   B-Out(S640)
	S679= B.Out30_31=b[30:31]                                   B-Out(S640)
	S680= XER.SOOut=so                                          XER-SO-Out(S642)
	S681= XER.CAOut=ca                                          XER-CA-Out(S645)
	S682= ALUOut.Out=a+b+ca                                     ALUOut-Out(S647)
	S683= ALUOut.Out26_31=a+b+ca[26:31]                         ALUOut-Out(S647)
	S684= ALUOut.Out30_31=a+b+ca[30:31]                         ALUOut-Out(S647)
	S685= CAReg.Out=Carry(a+b+ca)                               CAReg-Out(S649)
	S686= CAReg.Out26_31=Carry(a+b+ca)[26:31]                   CAReg-Out(S649)
	S687= CAReg.Out30_31=Carry(a+b+ca)[30:31]                   CAReg-Out(S649)
	S688= OVReg.Out=OverFlow(a+b+ca)                            OVReg-Out(S651)
	S689= OVReg.Out26_31=OverFlow(a+b+ca)[26:31]                OVReg-Out(S651)
	S690= OVReg.Out30_31=OverFlow(a+b+ca)[30:31]                OVReg-Out(S651)
	S691= DR1bit.Out=so|OverFlow(a+b+ca)                        DR1bit-Out(S653)
	S692= DR1bit.Out26_31=so|OverFlow(a+b+ca)[26:31]            DR1bit-Out(S653)
	S693= DR1bit.Out30_31=so|OverFlow(a+b+ca)[30:31]            DR1bit-Out(S653)
	S694= PIDReg.Out=>IMMU.PID                                  Premise(F307)
	S695= IMMU.PID=pid                                          Path(S654,S694)
	S696= PC.Out=>IMMU.IEA                                      Premise(F308)
	S697= IMMU.IEA=addr+4                                       Path(S659,S696)
	S698= IMMU.Addr={pid,addr+4}                                IMMU-Search(S695,S697)
	S699= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S695,S697)
	S700= IMMU.Addr=>IAddrReg.In                                Premise(F309)
	S701= IAddrReg.In={pid,addr+4}                              Path(S698,S700)
	S702= IMMU.Hit=>IMMUHitReg.In                               Premise(F310)
	S703= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S699,S702)
	S704= PC.Out=>ICache.IEA                                    Premise(F311)
	S705= ICache.IEA=addr+4                                     Path(S659,S704)
	S706= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S705)
	S707= ICache.Out=>ICacheReg.In                              Premise(F312)
	S708= ICache.Hit=>ICacheHitReg.In                           Premise(F313)
	S709= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S706,S708)
	S710= IMMUHitReg.Out=>CU.IMemHit                            Premise(F314)
	S711= CU.IMemHit=IMMUHit(pid,addr)                          Path(S663,S710)
	S712= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F315)
	S713= CU.ICacheHit=ICacheHit(addr)                          Path(S666,S712)
	S714= IAddrReg.Out=>IMem.RAddr                              Premise(F316)
	S715= IMem.RAddr={pid,addr}                                 Path(S660,S714)
	S716= IMem.Out={31,rT,rA,rB,1300}                           IMem-Read(S715,S630)
	S717= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S715,S630)
	S718= IMem.Out=>IRMux.MemData                               Premise(F317)
	S719= IRMux.MemData={31,rT,rA,rB,1300}                      Path(S716,S718)
	S720= IRMux.Out={31,rT,rA,rB,1300}                          IRMux-Select(S719)
	S721= ICacheReg.Out=>IRMux.CacheData                        Premise(F318)
	S722= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F319)
	S723= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S663,S722)
	S724= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F320)
	S725= IRMux.CacheSel=ICacheHit(addr)                        Path(S666,S724)
	S726= IRMux.Out=>IR.In                                      Premise(F321)
	S727= IR.In={31,rT,rA,rB,1300}                              Path(S720,S726)
	S728= IMem.MEM8WordOut=>ICache.WData                        Premise(F322)
	S729= ICache.WData=IMemGet8Word({pid,addr})                 Path(S717,S728)
	S730= PC.Out=>ICache.IEA                                    Premise(F323)
	S731= IR.Out0_5=>CU.Op                                      Premise(F324)
	S732= CU.Op=31                                              Path(S669,S731)
	S733= IR.Out11_15=>GPRegs.RReg1                             Premise(F325)
	S734= GPRegs.RReg1=rA                                       Path(S671,S733)
	S735= GPRegs.Rdata1=a                                       GPRegs-Read(S734,S635)
	S736= IR.Out16_20=>GPRegs.RReg2                             Premise(F326)
	S737= GPRegs.RReg2=rB                                       Path(S672,S736)
	S738= GPRegs.Rdata2=b                                       GPRegs-Read(S737,S636)
	S739= IR.Out21_31=>CU.IRFunc                                Premise(F327)
	S740= CU.IRFunc=1300                                        Path(S673,S739)
	S741= CU.Func=alu_adde                                      CU(S732,S740)
	S742= GPRegs.Rdata1=>A.In                                   Premise(F328)
	S743= A.In=a                                                Path(S735,S742)
	S744= GPRegs.Rdata2=>B.In                                   Premise(F329)
	S745= B.In=b                                                Path(S738,S744)
	S746= A.Out=>ALU.A                                          Premise(F330)
	S747= ALU.A=a                                               Path(S674,S746)
	S748= B.Out=>ALU.B                                          Premise(F331)
	S749= ALU.B=b                                               Path(S677,S748)
	S750= XER.CAOut=>ALU.CAIn                                   Premise(F332)
	S751= ALU.CAIn=ca                                           Path(S681,S750)
	S752= CU.Func=>ALU.Func                                     Premise(F333)
	S753= ALU.Func=alu_adde                                     Path(S741,S752)
	S754= ALU.Out=a+b+ca                                        ALU(S747,S749,S751)
	S755= ALU.CMP=Compare0(a+b+ca)                              ALU(S747,S749,S751)
	S756= ALU.OV=OverFlow(a+b+ca)                               ALU(S747,S749,S751)
	S757= ALU.CA=Carry(a+b+ca)                                  ALU(S747,S749,S751)
	S758= ALU.Out=>ALUOut.In                                    Premise(F334)
	S759= ALUOut.In=a+b+ca                                      Path(S754,S758)
	S760= ALU.CA=>CAReg.In                                      Premise(F335)
	S761= CAReg.In=Carry(a+b+ca)                                Path(S757,S760)
	S762= ALU.OV=>OVReg.In                                      Premise(F336)
	S763= OVReg.In=OverFlow(a+b+ca)                             Path(S756,S762)
	S764= XER.SOOut=>ORGate.A                                   Premise(F337)
	S765= ORGate.A=so                                           Path(S680,S764)
	S766= ALU.OV=>ORGate.B                                      Premise(F338)
	S767= ORGate.B=OverFlow(a+b+ca)                             Path(S756,S766)
	S768= ORGate.Out=so|OverFlow(a+b+ca)                        ORGate(S765,S767)
	S769= ORGate.Out=>DR1bit.In                                 Premise(F339)
	S770= DR1bit.In=so|OverFlow(a+b+ca)                         Path(S768,S769)
	S771= IR.Out6_10=>GPRegs.WReg                               Premise(F340)
	S772= GPRegs.WReg=rT                                        Path(S670,S771)
	S773= ALUOut.Out=>GPRegs.WData                              Premise(F341)
	S774= GPRegs.WData=a+b+ca                                   Path(S682,S773)
	S775= DR1bit.Out=>XER.SOIn                                  Premise(F342)
	S776= XER.SOIn=so|OverFlow(a+b+ca)                          Path(S691,S775)
	S777= CAReg.Out=>XER.CAIn                                   Premise(F343)
	S778= XER.CAIn=Carry(a+b+ca)                                Path(S685,S777)
	S779= OVReg.Out=>XER.OVIn                                   Premise(F344)
	S780= XER.OVIn=OverFlow(a+b+ca)                             Path(S688,S779)
	S781= CtrlPIDReg=0                                          Premise(F345)
	S782= [PIDReg]=pid                                          PIDReg-Hold(S614,S781)
	S783= CtrlIMMU=0                                            Premise(F346)
	S784= CtrlPC=0                                              Premise(F347)
	S785= CtrlPCInc=0                                           Premise(F348)
	S786= PC[CIA]=addr                                          PC-Hold(S618,S785)
	S787= PC[Out]=addr+4                                        PC-Hold(S619,S784,S785)
	S788= CtrlIAddrReg=0                                        Premise(F349)
	S789= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S621,S788)
	S790= CtrlIMMUHitReg=0                                      Premise(F350)
	S791= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S623,S790)
	S792= CtrlICache=0                                          Premise(F351)
	S793= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S625,S792)
	S794= CtrlICacheReg=0                                       Premise(F352)
	S795= CtrlICacheHitReg=0                                    Premise(F353)
	S796= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S628,S795)
	S797= CtrlIMem=0                                            Premise(F354)
	S798= IMem[{pid,addr}]={31,rT,rA,rB,1300}                   IMem-Hold(S630,S797)
	S799= CtrlIRMux=0                                           Premise(F355)
	S800= CtrlIR=0                                              Premise(F356)
	S801= [IR]={31,rT,rA,rB,1300}                               IR-Hold(S633,S800)
	S802= CtrlGPRegs=0                                          Premise(F357)
	S803= GPRegs[rA]=a                                          GPRegs-Hold(S635,S802)
	S804= GPRegs[rB]=b                                          GPRegs-Hold(S636,S802)
	S805= CtrlA=0                                               Premise(F358)
	S806= [A]=a                                                 A-Hold(S638,S805)
	S807= CtrlB=0                                               Premise(F359)
	S808= [B]=b                                                 B-Hold(S640,S807)
	S809= CtrlXERSO=0                                           Premise(F360)
	S810= XER[SO]=so                                            XER-SO-Hold(S642,S809)
	S811= CtrlXEROV=0                                           Premise(F361)
	S812= CtrlXERCA=0                                           Premise(F362)
	S813= XER[CA]=ca                                            XER-CA-Hold(S645,S812)
	S814= CtrlALUOut=0                                          Premise(F363)
	S815= [ALUOut]=a+b+ca                                       ALUOut-Hold(S647,S814)
	S816= CtrlCAReg=0                                           Premise(F364)
	S817= [CAReg]=Carry(a+b+ca)                                 CAReg-Hold(S649,S816)
	S818= CtrlOVReg=0                                           Premise(F365)
	S819= [OVReg]=OverFlow(a+b+ca)                              OVReg-Hold(S651,S818)
	S820= CtrlDR1bit=0                                          Premise(F366)
	S821= [DR1bit]=so|OverFlow(a+b+ca)                          DR1bit-Hold(S653,S820)

DMMU2	S822= PIDReg.Out=pid                                        PIDReg-Out(S782)
	S823= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S782)
	S824= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S782)
	S825= PC.CIA=addr                                           PC-Out(S786)
	S826= PC.CIA31_28=addr[31:28]                               PC-Out(S786)
	S827= PC.Out=addr+4                                         PC-Out(S787)
	S828= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S789)
	S829= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S789)
	S830= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S789)
	S831= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S791)
	S832= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S791)
	S833= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S791)
	S834= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S796)
	S835= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S796)
	S836= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S796)
	S837= IR.Out0_5=31                                          IR-Out(S801)
	S838= IR.Out6_10=rT                                         IR-Out(S801)
	S839= IR.Out11_15=rA                                        IR-Out(S801)
	S840= IR.Out16_20=rB                                        IR-Out(S801)
	S841= IR.Out21_31=1300                                      IR-Out(S801)
	S842= A.Out=a                                               A-Out(S806)
	S843= A.Out26_31=a[26:31]                                   A-Out(S806)
	S844= A.Out30_31=a[30:31]                                   A-Out(S806)
	S845= B.Out=b                                               B-Out(S808)
	S846= B.Out26_31=b[26:31]                                   B-Out(S808)
	S847= B.Out30_31=b[30:31]                                   B-Out(S808)
	S848= XER.SOOut=so                                          XER-SO-Out(S810)
	S849= XER.CAOut=ca                                          XER-CA-Out(S813)
	S850= ALUOut.Out=a+b+ca                                     ALUOut-Out(S815)
	S851= ALUOut.Out26_31=a+b+ca[26:31]                         ALUOut-Out(S815)
	S852= ALUOut.Out30_31=a+b+ca[30:31]                         ALUOut-Out(S815)
	S853= CAReg.Out=Carry(a+b+ca)                               CAReg-Out(S817)
	S854= CAReg.Out26_31=Carry(a+b+ca)[26:31]                   CAReg-Out(S817)
	S855= CAReg.Out30_31=Carry(a+b+ca)[30:31]                   CAReg-Out(S817)
	S856= OVReg.Out=OverFlow(a+b+ca)                            OVReg-Out(S819)
	S857= OVReg.Out26_31=OverFlow(a+b+ca)[26:31]                OVReg-Out(S819)
	S858= OVReg.Out30_31=OverFlow(a+b+ca)[30:31]                OVReg-Out(S819)
	S859= DR1bit.Out=so|OverFlow(a+b+ca)                        DR1bit-Out(S821)
	S860= DR1bit.Out26_31=so|OverFlow(a+b+ca)[26:31]            DR1bit-Out(S821)
	S861= DR1bit.Out30_31=so|OverFlow(a+b+ca)[30:31]            DR1bit-Out(S821)
	S862= PIDReg.Out=>IMMU.PID                                  Premise(F367)
	S863= IMMU.PID=pid                                          Path(S822,S862)
	S864= PC.Out=>IMMU.IEA                                      Premise(F368)
	S865= IMMU.IEA=addr+4                                       Path(S827,S864)
	S866= IMMU.Addr={pid,addr+4}                                IMMU-Search(S863,S865)
	S867= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S863,S865)
	S868= IMMU.Addr=>IAddrReg.In                                Premise(F369)
	S869= IAddrReg.In={pid,addr+4}                              Path(S866,S868)
	S870= IMMU.Hit=>IMMUHitReg.In                               Premise(F370)
	S871= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S867,S870)
	S872= PC.Out=>ICache.IEA                                    Premise(F371)
	S873= ICache.IEA=addr+4                                     Path(S827,S872)
	S874= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S873)
	S875= ICache.Out=>ICacheReg.In                              Premise(F372)
	S876= ICache.Hit=>ICacheHitReg.In                           Premise(F373)
	S877= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S874,S876)
	S878= IMMUHitReg.Out=>CU.IMemHit                            Premise(F374)
	S879= CU.IMemHit=IMMUHit(pid,addr)                          Path(S831,S878)
	S880= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F375)
	S881= CU.ICacheHit=ICacheHit(addr)                          Path(S834,S880)
	S882= IAddrReg.Out=>IMem.RAddr                              Premise(F376)
	S883= IMem.RAddr={pid,addr}                                 Path(S828,S882)
	S884= IMem.Out={31,rT,rA,rB,1300}                           IMem-Read(S883,S798)
	S885= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S883,S798)
	S886= IMem.Out=>IRMux.MemData                               Premise(F377)
	S887= IRMux.MemData={31,rT,rA,rB,1300}                      Path(S884,S886)
	S888= IRMux.Out={31,rT,rA,rB,1300}                          IRMux-Select(S887)
	S889= ICacheReg.Out=>IRMux.CacheData                        Premise(F378)
	S890= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F379)
	S891= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S831,S890)
	S892= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F380)
	S893= IRMux.CacheSel=ICacheHit(addr)                        Path(S834,S892)
	S894= IRMux.Out=>IR.In                                      Premise(F381)
	S895= IR.In={31,rT,rA,rB,1300}                              Path(S888,S894)
	S896= IMem.MEM8WordOut=>ICache.WData                        Premise(F382)
	S897= ICache.WData=IMemGet8Word({pid,addr})                 Path(S885,S896)
	S898= PC.Out=>ICache.IEA                                    Premise(F383)
	S899= IR.Out0_5=>CU.Op                                      Premise(F384)
	S900= CU.Op=31                                              Path(S837,S899)
	S901= IR.Out11_15=>GPRegs.RReg1                             Premise(F385)
	S902= GPRegs.RReg1=rA                                       Path(S839,S901)
	S903= GPRegs.Rdata1=a                                       GPRegs-Read(S902,S803)
	S904= IR.Out16_20=>GPRegs.RReg2                             Premise(F386)
	S905= GPRegs.RReg2=rB                                       Path(S840,S904)
	S906= GPRegs.Rdata2=b                                       GPRegs-Read(S905,S804)
	S907= IR.Out21_31=>CU.IRFunc                                Premise(F387)
	S908= CU.IRFunc=1300                                        Path(S841,S907)
	S909= CU.Func=alu_adde                                      CU(S900,S908)
	S910= GPRegs.Rdata1=>A.In                                   Premise(F388)
	S911= A.In=a                                                Path(S903,S910)
	S912= GPRegs.Rdata2=>B.In                                   Premise(F389)
	S913= B.In=b                                                Path(S906,S912)
	S914= A.Out=>ALU.A                                          Premise(F390)
	S915= ALU.A=a                                               Path(S842,S914)
	S916= B.Out=>ALU.B                                          Premise(F391)
	S917= ALU.B=b                                               Path(S845,S916)
	S918= XER.CAOut=>ALU.CAIn                                   Premise(F392)
	S919= ALU.CAIn=ca                                           Path(S849,S918)
	S920= CU.Func=>ALU.Func                                     Premise(F393)
	S921= ALU.Func=alu_adde                                     Path(S909,S920)
	S922= ALU.Out=a+b+ca                                        ALU(S915,S917,S919)
	S923= ALU.CMP=Compare0(a+b+ca)                              ALU(S915,S917,S919)
	S924= ALU.OV=OverFlow(a+b+ca)                               ALU(S915,S917,S919)
	S925= ALU.CA=Carry(a+b+ca)                                  ALU(S915,S917,S919)
	S926= ALU.Out=>ALUOut.In                                    Premise(F394)
	S927= ALUOut.In=a+b+ca                                      Path(S922,S926)
	S928= ALU.CA=>CAReg.In                                      Premise(F395)
	S929= CAReg.In=Carry(a+b+ca)                                Path(S925,S928)
	S930= ALU.OV=>OVReg.In                                      Premise(F396)
	S931= OVReg.In=OverFlow(a+b+ca)                             Path(S924,S930)
	S932= XER.SOOut=>ORGate.A                                   Premise(F397)
	S933= ORGate.A=so                                           Path(S848,S932)
	S934= ALU.OV=>ORGate.B                                      Premise(F398)
	S935= ORGate.B=OverFlow(a+b+ca)                             Path(S924,S934)
	S936= ORGate.Out=so|OverFlow(a+b+ca)                        ORGate(S933,S935)
	S937= ORGate.Out=>DR1bit.In                                 Premise(F399)
	S938= DR1bit.In=so|OverFlow(a+b+ca)                         Path(S936,S937)
	S939= IR.Out6_10=>GPRegs.WReg                               Premise(F400)
	S940= GPRegs.WReg=rT                                        Path(S838,S939)
	S941= ALUOut.Out=>GPRegs.WData                              Premise(F401)
	S942= GPRegs.WData=a+b+ca                                   Path(S850,S941)
	S943= DR1bit.Out=>XER.SOIn                                  Premise(F402)
	S944= XER.SOIn=so|OverFlow(a+b+ca)                          Path(S859,S943)
	S945= CAReg.Out=>XER.CAIn                                   Premise(F403)
	S946= XER.CAIn=Carry(a+b+ca)                                Path(S853,S945)
	S947= OVReg.Out=>XER.OVIn                                   Premise(F404)
	S948= XER.OVIn=OverFlow(a+b+ca)                             Path(S856,S947)
	S949= CtrlPIDReg=0                                          Premise(F405)
	S950= [PIDReg]=pid                                          PIDReg-Hold(S782,S949)
	S951= CtrlIMMU=0                                            Premise(F406)
	S952= CtrlPC=0                                              Premise(F407)
	S953= CtrlPCInc=0                                           Premise(F408)
	S954= PC[CIA]=addr                                          PC-Hold(S786,S953)
	S955= PC[Out]=addr+4                                        PC-Hold(S787,S952,S953)
	S956= CtrlIAddrReg=0                                        Premise(F409)
	S957= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S789,S956)
	S958= CtrlIMMUHitReg=0                                      Premise(F410)
	S959= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S791,S958)
	S960= CtrlICache=0                                          Premise(F411)
	S961= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S793,S960)
	S962= CtrlICacheReg=0                                       Premise(F412)
	S963= CtrlICacheHitReg=0                                    Premise(F413)
	S964= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S796,S963)
	S965= CtrlIMem=0                                            Premise(F414)
	S966= IMem[{pid,addr}]={31,rT,rA,rB,1300}                   IMem-Hold(S798,S965)
	S967= CtrlIRMux=0                                           Premise(F415)
	S968= CtrlIR=0                                              Premise(F416)
	S969= [IR]={31,rT,rA,rB,1300}                               IR-Hold(S801,S968)
	S970= CtrlGPRegs=0                                          Premise(F417)
	S971= GPRegs[rA]=a                                          GPRegs-Hold(S803,S970)
	S972= GPRegs[rB]=b                                          GPRegs-Hold(S804,S970)
	S973= CtrlA=0                                               Premise(F418)
	S974= [A]=a                                                 A-Hold(S806,S973)
	S975= CtrlB=0                                               Premise(F419)
	S976= [B]=b                                                 B-Hold(S808,S975)
	S977= CtrlXERSO=0                                           Premise(F420)
	S978= XER[SO]=so                                            XER-SO-Hold(S810,S977)
	S979= CtrlXEROV=0                                           Premise(F421)
	S980= CtrlXERCA=0                                           Premise(F422)
	S981= XER[CA]=ca                                            XER-CA-Hold(S813,S980)
	S982= CtrlALUOut=0                                          Premise(F423)
	S983= [ALUOut]=a+b+ca                                       ALUOut-Hold(S815,S982)
	S984= CtrlCAReg=0                                           Premise(F424)
	S985= [CAReg]=Carry(a+b+ca)                                 CAReg-Hold(S817,S984)
	S986= CtrlOVReg=0                                           Premise(F425)
	S987= [OVReg]=OverFlow(a+b+ca)                              OVReg-Hold(S819,S986)
	S988= CtrlDR1bit=0                                          Premise(F426)
	S989= [DR1bit]=so|OverFlow(a+b+ca)                          DR1bit-Hold(S821,S988)

WB	S990= PIDReg.Out=pid                                        PIDReg-Out(S950)
	S991= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S950)
	S992= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S950)
	S993= PC.CIA=addr                                           PC-Out(S954)
	S994= PC.CIA31_28=addr[31:28]                               PC-Out(S954)
	S995= PC.Out=addr+4                                         PC-Out(S955)
	S996= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S957)
	S997= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S957)
	S998= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S957)
	S999= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S959)
	S1000= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S959)
	S1001= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S959)
	S1002= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S964)
	S1003= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S964)
	S1004= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S964)
	S1005= IR.Out0_5=31                                         IR-Out(S969)
	S1006= IR.Out6_10=rT                                        IR-Out(S969)
	S1007= IR.Out11_15=rA                                       IR-Out(S969)
	S1008= IR.Out16_20=rB                                       IR-Out(S969)
	S1009= IR.Out21_31=1300                                     IR-Out(S969)
	S1010= A.Out=a                                              A-Out(S974)
	S1011= A.Out26_31=a[26:31]                                  A-Out(S974)
	S1012= A.Out30_31=a[30:31]                                  A-Out(S974)
	S1013= B.Out=b                                              B-Out(S976)
	S1014= B.Out26_31=b[26:31]                                  B-Out(S976)
	S1015= B.Out30_31=b[30:31]                                  B-Out(S976)
	S1016= XER.SOOut=so                                         XER-SO-Out(S978)
	S1017= XER.CAOut=ca                                         XER-CA-Out(S981)
	S1018= ALUOut.Out=a+b+ca                                    ALUOut-Out(S983)
	S1019= ALUOut.Out26_31=a+b+ca[26:31]                        ALUOut-Out(S983)
	S1020= ALUOut.Out30_31=a+b+ca[30:31]                        ALUOut-Out(S983)
	S1021= CAReg.Out=Carry(a+b+ca)                              CAReg-Out(S985)
	S1022= CAReg.Out26_31=Carry(a+b+ca)[26:31]                  CAReg-Out(S985)
	S1023= CAReg.Out30_31=Carry(a+b+ca)[30:31]                  CAReg-Out(S985)
	S1024= OVReg.Out=OverFlow(a+b+ca)                           OVReg-Out(S987)
	S1025= OVReg.Out26_31=OverFlow(a+b+ca)[26:31]               OVReg-Out(S987)
	S1026= OVReg.Out30_31=OverFlow(a+b+ca)[30:31]               OVReg-Out(S987)
	S1027= DR1bit.Out=so|OverFlow(a+b+ca)                       DR1bit-Out(S989)
	S1028= DR1bit.Out26_31=so|OverFlow(a+b+ca)[26:31]           DR1bit-Out(S989)
	S1029= DR1bit.Out30_31=so|OverFlow(a+b+ca)[30:31]           DR1bit-Out(S989)
	S1030= PIDReg.Out=>IMMU.PID                                 Premise(F427)
	S1031= IMMU.PID=pid                                         Path(S990,S1030)
	S1032= PC.Out=>IMMU.IEA                                     Premise(F428)
	S1033= IMMU.IEA=addr+4                                      Path(S995,S1032)
	S1034= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1031,S1033)
	S1035= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1031,S1033)
	S1036= IMMU.Addr=>IAddrReg.In                               Premise(F429)
	S1037= IAddrReg.In={pid,addr+4}                             Path(S1034,S1036)
	S1038= IMMU.Hit=>IMMUHitReg.In                              Premise(F430)
	S1039= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1035,S1038)
	S1040= PC.Out=>ICache.IEA                                   Premise(F431)
	S1041= ICache.IEA=addr+4                                    Path(S995,S1040)
	S1042= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1041)
	S1043= ICache.Out=>ICacheReg.In                             Premise(F432)
	S1044= ICache.Hit=>ICacheHitReg.In                          Premise(F433)
	S1045= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1042,S1044)
	S1046= IMMUHitReg.Out=>CU.IMemHit                           Premise(F434)
	S1047= CU.IMemHit=IMMUHit(pid,addr)                         Path(S999,S1046)
	S1048= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F435)
	S1049= CU.ICacheHit=ICacheHit(addr)                         Path(S1002,S1048)
	S1050= IAddrReg.Out=>IMem.RAddr                             Premise(F436)
	S1051= IMem.RAddr={pid,addr}                                Path(S996,S1050)
	S1052= IMem.Out={31,rT,rA,rB,1300}                          IMem-Read(S1051,S966)
	S1053= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1051,S966)
	S1054= IMem.Out=>IRMux.MemData                              Premise(F437)
	S1055= IRMux.MemData={31,rT,rA,rB,1300}                     Path(S1052,S1054)
	S1056= IRMux.Out={31,rT,rA,rB,1300}                         IRMux-Select(S1055)
	S1057= ICacheReg.Out=>IRMux.CacheData                       Premise(F438)
	S1058= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F439)
	S1059= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S999,S1058)
	S1060= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F440)
	S1061= IRMux.CacheSel=ICacheHit(addr)                       Path(S1002,S1060)
	S1062= IRMux.Out=>IR.In                                     Premise(F441)
	S1063= IR.In={31,rT,rA,rB,1300}                             Path(S1056,S1062)
	S1064= IMem.MEM8WordOut=>ICache.WData                       Premise(F442)
	S1065= ICache.WData=IMemGet8Word({pid,addr})                Path(S1053,S1064)
	S1066= PC.Out=>ICache.IEA                                   Premise(F443)
	S1067= IR.Out0_5=>CU.Op                                     Premise(F444)
	S1068= CU.Op=31                                             Path(S1005,S1067)
	S1069= IR.Out11_15=>GPRegs.RReg1                            Premise(F445)
	S1070= GPRegs.RReg1=rA                                      Path(S1007,S1069)
	S1071= GPRegs.Rdata1=a                                      GPRegs-Read(S1070,S971)
	S1072= IR.Out16_20=>GPRegs.RReg2                            Premise(F446)
	S1073= GPRegs.RReg2=rB                                      Path(S1008,S1072)
	S1074= GPRegs.Rdata2=b                                      GPRegs-Read(S1073,S972)
	S1075= IR.Out21_31=>CU.IRFunc                               Premise(F447)
	S1076= CU.IRFunc=1300                                       Path(S1009,S1075)
	S1077= CU.Func=alu_adde                                     CU(S1068,S1076)
	S1078= GPRegs.Rdata1=>A.In                                  Premise(F448)
	S1079= A.In=a                                               Path(S1071,S1078)
	S1080= GPRegs.Rdata2=>B.In                                  Premise(F449)
	S1081= B.In=b                                               Path(S1074,S1080)
	S1082= A.Out=>ALU.A                                         Premise(F450)
	S1083= ALU.A=a                                              Path(S1010,S1082)
	S1084= B.Out=>ALU.B                                         Premise(F451)
	S1085= ALU.B=b                                              Path(S1013,S1084)
	S1086= XER.CAOut=>ALU.CAIn                                  Premise(F452)
	S1087= ALU.CAIn=ca                                          Path(S1017,S1086)
	S1088= CU.Func=>ALU.Func                                    Premise(F453)
	S1089= ALU.Func=alu_adde                                    Path(S1077,S1088)
	S1090= ALU.Out=a+b+ca                                       ALU(S1083,S1085,S1087)
	S1091= ALU.CMP=Compare0(a+b+ca)                             ALU(S1083,S1085,S1087)
	S1092= ALU.OV=OverFlow(a+b+ca)                              ALU(S1083,S1085,S1087)
	S1093= ALU.CA=Carry(a+b+ca)                                 ALU(S1083,S1085,S1087)
	S1094= ALU.Out=>ALUOut.In                                   Premise(F454)
	S1095= ALUOut.In=a+b+ca                                     Path(S1090,S1094)
	S1096= ALU.CA=>CAReg.In                                     Premise(F455)
	S1097= CAReg.In=Carry(a+b+ca)                               Path(S1093,S1096)
	S1098= ALU.OV=>OVReg.In                                     Premise(F456)
	S1099= OVReg.In=OverFlow(a+b+ca)                            Path(S1092,S1098)
	S1100= XER.SOOut=>ORGate.A                                  Premise(F457)
	S1101= ORGate.A=so                                          Path(S1016,S1100)
	S1102= ALU.OV=>ORGate.B                                     Premise(F458)
	S1103= ORGate.B=OverFlow(a+b+ca)                            Path(S1092,S1102)
	S1104= ORGate.Out=so|OverFlow(a+b+ca)                       ORGate(S1101,S1103)
	S1105= ORGate.Out=>DR1bit.In                                Premise(F459)
	S1106= DR1bit.In=so|OverFlow(a+b+ca)                        Path(S1104,S1105)
	S1107= IR.Out6_10=>GPRegs.WReg                              Premise(F460)
	S1108= GPRegs.WReg=rT                                       Path(S1006,S1107)
	S1109= ALUOut.Out=>GPRegs.WData                             Premise(F461)
	S1110= GPRegs.WData=a+b+ca                                  Path(S1018,S1109)
	S1111= DR1bit.Out=>XER.SOIn                                 Premise(F462)
	S1112= XER.SOIn=so|OverFlow(a+b+ca)                         Path(S1027,S1111)
	S1113= CAReg.Out=>XER.CAIn                                  Premise(F463)
	S1114= XER.CAIn=Carry(a+b+ca)                               Path(S1021,S1113)
	S1115= OVReg.Out=>XER.OVIn                                  Premise(F464)
	S1116= XER.OVIn=OverFlow(a+b+ca)                            Path(S1024,S1115)
	S1117= CtrlPIDReg=0                                         Premise(F465)
	S1118= [PIDReg]=pid                                         PIDReg-Hold(S950,S1117)
	S1119= CtrlIMMU=0                                           Premise(F466)
	S1120= CtrlPC=0                                             Premise(F467)
	S1121= CtrlPCInc=0                                          Premise(F468)
	S1122= PC[CIA]=addr                                         PC-Hold(S954,S1121)
	S1123= PC[Out]=addr+4                                       PC-Hold(S955,S1120,S1121)
	S1124= CtrlIAddrReg=0                                       Premise(F469)
	S1125= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S957,S1124)
	S1126= CtrlIMMUHitReg=0                                     Premise(F470)
	S1127= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S959,S1126)
	S1128= CtrlICache=0                                         Premise(F471)
	S1129= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S961,S1128)
	S1130= CtrlICacheReg=0                                      Premise(F472)
	S1131= CtrlICacheHitReg=0                                   Premise(F473)
	S1132= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S964,S1131)
	S1133= CtrlIMem=0                                           Premise(F474)
	S1134= IMem[{pid,addr}]={31,rT,rA,rB,1300}                  IMem-Hold(S966,S1133)
	S1135= CtrlIRMux=0                                          Premise(F475)
	S1136= CtrlIR=0                                             Premise(F476)
	S1137= [IR]={31,rT,rA,rB,1300}                              IR-Hold(S969,S1136)
	S1138= CtrlGPRegs=1                                         Premise(F477)
	S1139= GPRegs[rT]=a+b+ca                                    GPRegs-Write(S1108,S1110,S1138)
	S1140= CtrlA=0                                              Premise(F478)
	S1141= [A]=a                                                A-Hold(S974,S1140)
	S1142= CtrlB=0                                              Premise(F479)
	S1143= [B]=b                                                B-Hold(S976,S1142)
	S1144= CtrlXERSO=1                                          Premise(F480)
	S1145= XER[SO]=so|OverFlow(a+b+ca)                          XER-SO-Write(S1112,S1144)
	S1146= CtrlXEROV=1                                          Premise(F481)
	S1147= XER[OV]=OverFlow(a+b+ca)                             XER-OV-Write(S1116,S1146)
	S1148= CtrlXERCA=1                                          Premise(F482)
	S1149= XER[CA]=Carry(a+b+ca)                                XER-CA-Write(S1114,S1148)
	S1150= CtrlALUOut=0                                         Premise(F483)
	S1151= [ALUOut]=a+b+ca                                      ALUOut-Hold(S983,S1150)
	S1152= CtrlCAReg=0                                          Premise(F484)
	S1153= [CAReg]=Carry(a+b+ca)                                CAReg-Hold(S985,S1152)
	S1154= CtrlOVReg=0                                          Premise(F485)
	S1155= [OVReg]=OverFlow(a+b+ca)                             OVReg-Hold(S987,S1154)
	S1156= CtrlDR1bit=0                                         Premise(F486)
	S1157= [DR1bit]=so|OverFlow(a+b+ca)                         DR1bit-Hold(S989,S1156)

POST	S1118= [PIDReg]=pid                                         PIDReg-Hold(S950,S1117)
	S1122= PC[CIA]=addr                                         PC-Hold(S954,S1121)
	S1123= PC[Out]=addr+4                                       PC-Hold(S955,S1120,S1121)
	S1125= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S957,S1124)
	S1127= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S959,S1126)
	S1129= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S961,S1128)
	S1132= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S964,S1131)
	S1134= IMem[{pid,addr}]={31,rT,rA,rB,1300}                  IMem-Hold(S966,S1133)
	S1137= [IR]={31,rT,rA,rB,1300}                              IR-Hold(S969,S1136)
	S1139= GPRegs[rT]=a+b+ca                                    GPRegs-Write(S1108,S1110,S1138)
	S1141= [A]=a                                                A-Hold(S974,S1140)
	S1143= [B]=b                                                B-Hold(S976,S1142)
	S1145= XER[SO]=so|OverFlow(a+b+ca)                          XER-SO-Write(S1112,S1144)
	S1147= XER[OV]=OverFlow(a+b+ca)                             XER-OV-Write(S1116,S1146)
	S1149= XER[CA]=Carry(a+b+ca)                                XER-CA-Write(S1114,S1148)
	S1151= [ALUOut]=a+b+ca                                      ALUOut-Hold(S983,S1150)
	S1153= [CAReg]=Carry(a+b+ca)                                CAReg-Hold(S985,S1152)
	S1155= [OVReg]=OverFlow(a+b+ca)                             OVReg-Hold(S987,S1154)
	S1157= [DR1bit]=so|OverFlow(a+b+ca)                         DR1bit-Hold(S989,S1156)

