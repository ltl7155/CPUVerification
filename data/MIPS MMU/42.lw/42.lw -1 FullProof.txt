
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={35,rS,rT,offset}                      Premise(F2)
	S3= GPR[rS]=base                                            Premise(F3)
	S4= DMem[{pid,base+{16{offset[15]},offset}}]=a              Premise(F4)
	S5= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataPremise(F5)

IF	S6= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S7= PC.Out=addr                                             PC-Out(S1)
	S8= DCache.RLineEA=DCacheRLineEA()                          DCache-WriteBack()
	S9= DCache.RLineData=DCacheRLineData()                      DCache-WriteBack()
	S10= DCache.RLineDirty=DCacheRLineDirty()                   DCache-WriteBack()
	S11= CP0.ASID=>IMMU.PID                                     Premise(F6)
	S12= IMMU.PID=pid                                           Path(S6,S11)
	S13= PC.Out=>IMMU.IEA                                       Premise(F7)
	S14= IMMU.IEA=addr                                          Path(S7,S13)
	S15= IMMU.Addr={pid,addr}                                   IMMU-Search(S12,S14)
	S16= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S12,S14)
	S17= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S18= IAddrReg.In={pid,addr}                                 Path(S15,S17)
	S19= IMMU.Hit=>CU.IMMUHit                                   Premise(F9)
	S20= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S16,S19)
	S21= PC.Out=>ICache.IEA                                     Premise(F10)
	S22= ICache.IEA=addr                                        Path(S7,S21)
	S23= ICache.Hit=ICacheHit(addr)                             ICache-Search(S22)
	S24= ICache.Out=>IR.In                                      Premise(F11)
	S25= ICache.Out=>ICacheReg.In                               Premise(F12)
	S26= ICache.Hit=>CU.ICacheHit                               Premise(F13)
	S27= CU.ICacheHit=ICacheHit(addr)                           Path(S23,S26)
	S28= CtrlASIDIn=0                                           Premise(F14)
	S29= CtrlCP0=0                                              Premise(F15)
	S30= CP0[ASID]=pid                                          CP0-Hold(S0,S29)
	S31= CtrlEPCIn=0                                            Premise(F16)
	S32= CtrlExCodeIn=0                                         Premise(F17)
	S33= CtrlIMMU=0                                             Premise(F18)
	S34= CtrlPC=0                                               Premise(F19)
	S35= CtrlPCInc=0                                            Premise(F20)
	S36= PC[Out]=addr                                           PC-Hold(S1,S34,S35)
	S37= CtrlIAddrReg=1                                         Premise(F21)
	S38= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S18,S37)
	S39= CtrlICache=0                                           Premise(F22)
	S40= CtrlIR=0                                               Premise(F23)
	S41= CtrlICacheReg=1                                        Premise(F24)
	S42= CtrlIMem=0                                             Premise(F25)
	S43= IMem[{pid,addr}]={35,rS,rT,offset}                     IMem-Hold(S2,S42)
	S44= CtrlIRMux=0                                            Premise(F26)
	S45= CtrlGPR=0                                              Premise(F27)
	S46= GPR[rS]=base                                           GPR-Hold(S3,S45)
	S47= CtrlA=0                                                Premise(F28)
	S48= CtrlB=0                                                Premise(F29)
	S49= CtrlALUOut=0                                           Premise(F30)
	S50= CtrlDMMU=0                                             Premise(F31)
	S51= CtrlDAddrReg=0                                         Premise(F32)
	S52= CtrlDCache=0                                           Premise(F33)
	S53= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S5,S52)
	S54= CtrlDR=0                                               Premise(F34)
	S55= CtrlDCacheReg=0                                        Premise(F35)
	S56= CtrlDMem=0                                             Premise(F36)
	S57= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S4,S56)
	S58= CtrlDMem8Word=0                                        Premise(F37)

IF(IMMU)	S59= CP0.ASID=pid                                           CP0-Read-ASID(S30)
	S60= PC.Out=addr                                            PC-Out(S36)
	S61= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S38)
	S62= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S38)
	S63= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S38)
	S64= DCache.RLineEA=DCacheRLineEA()                         DCache-WriteBack()
	S65= DCache.RLineData=DCacheRLineData()                     DCache-WriteBack()
	S66= DCache.RLineDirty=DCacheRLineDirty()                   DCache-WriteBack()
	S67= CU.IMMUHit=>CU.IMMUHit                                 Premise(F38)
	S68= CU.ICacheHit=>CU.ICacheHit                             Premise(F39)
	S69= IAddrReg.Out=>IMem.RAddr                               Premise(F40)
	S70= IMem.RAddr={pid,addr}                                  Path(S61,S69)
	S71= IMem.Out={35,rS,rT,offset}                             IMem-Read(S70,S43)
	S72= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S70,S43)
	S73= IMem.Out=>IRMux.MemData                                Premise(F41)
	S74= IRMux.MemData={35,rS,rT,offset}                        Path(S71,S73)
	S75= IRMux.Out={35,rS,rT,offset}                            IRMux-Select2(S74)
	S76= ICacheReg.Out=>IRMux.CacheData                         Premise(F42)
	S77= CU.IMMUHit=>IRMux.MemSel                               Premise(F43)
	S78= CU.ICacheHit=>IRMux.CacheSel                           Premise(F44)
	S79= IRMux.Out=>IR.In                                       Premise(F45)
	S80= IR.In={35,rS,rT,offset}                                Path(S75,S79)
	S81= IMem.MEM8WordOut=>ICache.WData                         Premise(F46)
	S82= ICache.WData=IMemGet8Word({pid,addr})                  Path(S72,S81)
	S83= PC.Out=>ICache.IEA                                     Premise(F47)
	S84= ICache.IEA=addr                                        Path(S60,S83)
	S85= ICache.Hit=ICacheHit(addr)                             ICache-Search(S84)
	S86= CtrlASIDIn=0                                           Premise(F48)
	S87= CtrlCP0=0                                              Premise(F49)
	S88= CP0[ASID]=pid                                          CP0-Hold(S30,S87)
	S89= CtrlEPCIn=0                                            Premise(F50)
	S90= CtrlExCodeIn=0                                         Premise(F51)
	S91= CtrlIMMU=0                                             Premise(F52)
	S92= CtrlPC=0                                               Premise(F53)
	S93= CtrlPCInc=1                                            Premise(F54)
	S94= PC[Out]=addr+4                                         PC-Inc(S36,S92,S93)
	S95= PC[CIA]=addr                                           PC-Inc(S36,S92,S93)
	S96= CtrlIAddrReg=0                                         Premise(F55)
	S97= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S38,S96)
	S98= CtrlICache=1                                           Premise(F56)
	S99= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S84,S82,S98)
	S100= CtrlIR=1                                              Premise(F57)
	S101= [IR]={35,rS,rT,offset}                                IR-Write(S80,S100)
	S102= CtrlICacheReg=0                                       Premise(F58)
	S103= CtrlIMem=0                                            Premise(F59)
	S104= IMem[{pid,addr}]={35,rS,rT,offset}                    IMem-Hold(S43,S103)
	S105= CtrlIRMux=0                                           Premise(F60)
	S106= CtrlGPR=0                                             Premise(F61)
	S107= GPR[rS]=base                                          GPR-Hold(S46,S106)
	S108= CtrlA=0                                               Premise(F62)
	S109= CtrlB=0                                               Premise(F63)
	S110= CtrlALUOut=0                                          Premise(F64)
	S111= CtrlDMMU=0                                            Premise(F65)
	S112= CtrlDAddrReg=0                                        Premise(F66)
	S113= CtrlDCache=0                                          Premise(F67)
	S114= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S53,S113)
	S115= CtrlDR=0                                              Premise(F68)
	S116= CtrlDCacheReg=0                                       Premise(F69)
	S117= CtrlDMem=0                                            Premise(F70)
	S118= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S57,S117)
	S119= CtrlDMem8Word=0                                       Premise(F71)

ID	S120= CP0.ASID=pid                                          CP0-Read-ASID(S88)
	S121= PC.Out=addr+4                                         PC-Out(S94)
	S122= PC.CIA=addr                                           PC-Out(S95)
	S123= PC.CIA31_28=addr[31:28]                               PC-Out(S95)
	S124= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S97)
	S125= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S97)
	S126= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S97)
	S127= IR.Out={35,rS,rT,offset}                              IR-Out(S101)
	S128= IR.Out31_26=35                                        IR-Out(S101)
	S129= IR.Out25_21=rS                                        IR-Out(S101)
	S130= IR.Out20_16=rT                                        IR-Out(S101)
	S131= IR.Out15_0=offset                                     IR-Out(S101)
	S132= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S133= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S134= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S135= IR.Out31_26=>CU.Op                                    Premise(F72)
	S136= CU.Op=35                                              Path(S128,S135)
	S137= CU.Func=alu_add                                       CU(S136)
	S138= CU.MemDataSelFunc=mds_lbz                             CU(S136)
	S139= IR.Out25_21=>GPR.RReg1                                Premise(F73)
	S140= GPR.RReg1=rS                                          Path(S129,S139)
	S141= GPR.Rdata1=base                                       GPR-Read(S140,S107)
	S142= IR.Out15_0=>IMMEXT.In                                 Premise(F74)
	S143= IMMEXT.In=offset                                      Path(S131,S142)
	S144= IMMEXT.Out={16{offset[15]},offset}                    IMMEXT(S143)
	S145= GPR.Rdata1=>A.In                                      Premise(F75)
	S146= A.In=base                                             Path(S141,S145)
	S147= IMMEXT.Out=>B.In                                      Premise(F76)
	S148= B.In={16{offset[15]},offset}                          Path(S144,S147)
	S149= CtrlASIDIn=0                                          Premise(F77)
	S150= CtrlCP0=0                                             Premise(F78)
	S151= CP0[ASID]=pid                                         CP0-Hold(S88,S150)
	S152= CtrlEPCIn=0                                           Premise(F79)
	S153= CtrlExCodeIn=0                                        Premise(F80)
	S154= CtrlIMMU=0                                            Premise(F81)
	S155= CtrlPC=0                                              Premise(F82)
	S156= CtrlPCInc=0                                           Premise(F83)
	S157= PC[CIA]=addr                                          PC-Hold(S95,S156)
	S158= PC[Out]=addr+4                                        PC-Hold(S94,S155,S156)
	S159= CtrlIAddrReg=0                                        Premise(F84)
	S160= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S97,S159)
	S161= CtrlICache=0                                          Premise(F85)
	S162= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S99,S161)
	S163= CtrlIR=0                                              Premise(F86)
	S164= [IR]={35,rS,rT,offset}                                IR-Hold(S101,S163)
	S165= CtrlICacheReg=0                                       Premise(F87)
	S166= CtrlIMem=0                                            Premise(F88)
	S167= IMem[{pid,addr}]={35,rS,rT,offset}                    IMem-Hold(S104,S166)
	S168= CtrlIRMux=0                                           Premise(F89)
	S169= CtrlGPR=0                                             Premise(F90)
	S170= GPR[rS]=base                                          GPR-Hold(S107,S169)
	S171= CtrlA=1                                               Premise(F91)
	S172= [A]=base                                              A-Write(S146,S171)
	S173= CtrlB=1                                               Premise(F92)
	S174= [B]={16{offset[15]},offset}                           B-Write(S148,S173)
	S175= CtrlALUOut=0                                          Premise(F93)
	S176= CtrlDMMU=0                                            Premise(F94)
	S177= CtrlDAddrReg=0                                        Premise(F95)
	S178= CtrlDCache=0                                          Premise(F96)
	S179= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S114,S178)
	S180= CtrlDR=0                                              Premise(F97)
	S181= CtrlDCacheReg=0                                       Premise(F98)
	S182= CtrlDMem=0                                            Premise(F99)
	S183= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S118,S182)
	S184= CtrlDMem8Word=0                                       Premise(F100)

EX	S185= CP0.ASID=pid                                          CP0-Read-ASID(S151)
	S186= PC.CIA=addr                                           PC-Out(S157)
	S187= PC.CIA31_28=addr[31:28]                               PC-Out(S157)
	S188= PC.Out=addr+4                                         PC-Out(S158)
	S189= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S160)
	S190= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S160)
	S191= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S160)
	S192= IR.Out={35,rS,rT,offset}                              IR-Out(S164)
	S193= IR.Out31_26=35                                        IR-Out(S164)
	S194= IR.Out25_21=rS                                        IR-Out(S164)
	S195= IR.Out20_16=rT                                        IR-Out(S164)
	S196= IR.Out15_0=offset                                     IR-Out(S164)
	S197= A.Out=base                                            A-Out(S172)
	S198= A.Out1_0={base}[1:0]                                  A-Out(S172)
	S199= A.Out4_0={base}[4:0]                                  A-Out(S172)
	S200= B.Out={16{offset[15]},offset}                         B-Out(S174)
	S201= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S174)
	S202= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S174)
	S203= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S204= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S205= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S206= A.Out=>ALU.A                                          Premise(F101)
	S207= ALU.A=base                                            Path(S197,S206)
	S208= B.Out=>ALU.B                                          Premise(F102)
	S209= ALU.B={16{offset[15]},offset}                         Path(S200,S208)
	S210= ALU.Func=6'b010010                                    Premise(F103)
	S211= ALU.Out=base+{16{offset[15]},offset}                  ALU(S207,S209)
	S212= ALU.Out1_0={base+{16{offset[15]},offset}}[1:0]        ALU(S207,S209)
	S213= ALU.CMP=Compare0(base+{16{offset[15]},offset})        ALU(S207,S209)
	S214= ALU.OV=OverFlow(base+{16{offset[15]},offset})         ALU(S207,S209)
	S215= ALU.CA=Carry(base+{16{offset[15]},offset})            ALU(S207,S209)
	S216= ALU.Out=>ALUOut.In                                    Premise(F104)
	S217= ALUOut.In=base+{16{offset[15]},offset}                Path(S211,S216)
	S218= CtrlASIDIn=0                                          Premise(F105)
	S219= CtrlCP0=0                                             Premise(F106)
	S220= CP0[ASID]=pid                                         CP0-Hold(S151,S219)
	S221= CtrlEPCIn=0                                           Premise(F107)
	S222= CtrlExCodeIn=0                                        Premise(F108)
	S223= CtrlIMMU=0                                            Premise(F109)
	S224= CtrlPC=0                                              Premise(F110)
	S225= CtrlPCInc=0                                           Premise(F111)
	S226= PC[CIA]=addr                                          PC-Hold(S157,S225)
	S227= PC[Out]=addr+4                                        PC-Hold(S158,S224,S225)
	S228= CtrlIAddrReg=0                                        Premise(F112)
	S229= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S160,S228)
	S230= CtrlICache=0                                          Premise(F113)
	S231= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S162,S230)
	S232= CtrlIR=0                                              Premise(F114)
	S233= [IR]={35,rS,rT,offset}                                IR-Hold(S164,S232)
	S234= CtrlICacheReg=0                                       Premise(F115)
	S235= CtrlIMem=0                                            Premise(F116)
	S236= IMem[{pid,addr}]={35,rS,rT,offset}                    IMem-Hold(S167,S235)
	S237= CtrlIRMux=0                                           Premise(F117)
	S238= CtrlGPR=0                                             Premise(F118)
	S239= GPR[rS]=base                                          GPR-Hold(S170,S238)
	S240= CtrlA=0                                               Premise(F119)
	S241= [A]=base                                              A-Hold(S172,S240)
	S242= CtrlB=0                                               Premise(F120)
	S243= [B]={16{offset[15]},offset}                           B-Hold(S174,S242)
	S244= CtrlALUOut=1                                          Premise(F121)
	S245= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Write(S217,S244)
	S246= CtrlDMMU=0                                            Premise(F122)
	S247= CtrlDAddrReg=0                                        Premise(F123)
	S248= CtrlDCache=0                                          Premise(F124)
	S249= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S179,S248)
	S250= CtrlDR=0                                              Premise(F125)
	S251= CtrlDCacheReg=0                                       Premise(F126)
	S252= CtrlDMem=0                                            Premise(F127)
	S253= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S183,S252)
	S254= CtrlDMem8Word=0                                       Premise(F128)

MEM	S255= CP0.ASID=pid                                          CP0-Read-ASID(S220)
	S256= PC.CIA=addr                                           PC-Out(S226)
	S257= PC.CIA31_28=addr[31:28]                               PC-Out(S226)
	S258= PC.Out=addr+4                                         PC-Out(S227)
	S259= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S229)
	S260= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S229)
	S261= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S229)
	S262= IR.Out={35,rS,rT,offset}                              IR-Out(S233)
	S263= IR.Out31_26=35                                        IR-Out(S233)
	S264= IR.Out25_21=rS                                        IR-Out(S233)
	S265= IR.Out20_16=rT                                        IR-Out(S233)
	S266= IR.Out15_0=offset                                     IR-Out(S233)
	S267= A.Out=base                                            A-Out(S241)
	S268= A.Out1_0={base}[1:0]                                  A-Out(S241)
	S269= A.Out4_0={base}[4:0]                                  A-Out(S241)
	S270= B.Out={16{offset[15]},offset}                         B-Out(S243)
	S271= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S243)
	S272= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S243)
	S273= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S245)
	S274= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S245)
	S275= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S245)
	S276= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S277= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S278= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S279= CP0.ASID=>DMMU.PID                                    Premise(F129)
	S280= DMMU.PID=pid                                          Path(S255,S279)
	S281= ALUOut.Out=>DMMU.IEA                                  Premise(F130)
	S282= DMMU.IEA=base+{16{offset[15]},offset}                 Path(S273,S281)
	S283= DMMU.Addr={pid,base+{16{offset[15]},offset}}          DMMU-Search(S280,S282)
	S284= DMMU.Hit=DMMUHit(pid,base+{16{offset[15]},offset})    DMMU-Search(S280,S282)
	S285= DMMU.Addr=>DAddrReg.In                                Premise(F131)
	S286= DAddrReg.In={pid,base+{16{offset[15]},offset}}        Path(S283,S285)
	S287= DMMU.Hit=>CU.DMMUHit                                  Premise(F132)
	S288= CU.DMMUHit=DMMUHit(pid,base+{16{offset[15]},offset})  Path(S284,S287)
	S289= ALUOut.Out=>DCache.IEA                                Premise(F133)
	S290= DCache.IEA=base+{16{offset[15]},offset}               Path(S273,S289)
	S291= DCache.Hit=DCacheHit(base+{16{offset[15]},offset})    DCache-Search(S290)
	S292= DCache.Out=>DR.In                                     Premise(F134)
	S293= DCache.Out=>DCacheReg.In                              Premise(F135)
	S294= DCache.Hit=>CU.DCacheHit                              Premise(F136)
	S295= CU.DCacheHit=DCacheHit(base+{16{offset[15]},offset})  Path(S291,S294)
	S296= CtrlASIDIn=0                                          Premise(F137)
	S297= CtrlCP0=0                                             Premise(F138)
	S298= CP0[ASID]=pid                                         CP0-Hold(S220,S297)
	S299= CtrlEPCIn=0                                           Premise(F139)
	S300= CtrlExCodeIn=0                                        Premise(F140)
	S301= CtrlIMMU=0                                            Premise(F141)
	S302= CtrlPC=0                                              Premise(F142)
	S303= CtrlPCInc=0                                           Premise(F143)
	S304= PC[CIA]=addr                                          PC-Hold(S226,S303)
	S305= PC[Out]=addr+4                                        PC-Hold(S227,S302,S303)
	S306= CtrlIAddrReg=0                                        Premise(F144)
	S307= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S229,S306)
	S308= CtrlICache=0                                          Premise(F145)
	S309= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S231,S308)
	S310= CtrlIR=0                                              Premise(F146)
	S311= [IR]={35,rS,rT,offset}                                IR-Hold(S233,S310)
	S312= CtrlICacheReg=0                                       Premise(F147)
	S313= CtrlIMem=0                                            Premise(F148)
	S314= IMem[{pid,addr}]={35,rS,rT,offset}                    IMem-Hold(S236,S313)
	S315= CtrlIRMux=0                                           Premise(F149)
	S316= CtrlGPR=0                                             Premise(F150)
	S317= GPR[rS]=base                                          GPR-Hold(S239,S316)
	S318= CtrlA=0                                               Premise(F151)
	S319= [A]=base                                              A-Hold(S241,S318)
	S320= CtrlB=0                                               Premise(F152)
	S321= [B]={16{offset[15]},offset}                           B-Hold(S243,S320)
	S322= CtrlALUOut=0                                          Premise(F153)
	S323= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S245,S322)
	S324= CtrlDMMU=0                                            Premise(F154)
	S325= CtrlDAddrReg=1                                        Premise(F155)
	S326= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Write(S286,S325)
	S327= CtrlDCache=0                                          Premise(F156)
	S328= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S249,S327)
	S329= CtrlDR=0                                              Premise(F157)
	S330= CtrlDCacheReg=1                                       Premise(F158)
	S331= CtrlDMem=0                                            Premise(F159)
	S332= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S253,S331)
	S333= CtrlDMem8Word=0                                       Premise(F160)

MEM(DMMU1)	S334= CP0.ASID=pid                                          CP0-Read-ASID(S298)
	S335= PC.CIA=addr                                           PC-Out(S304)
	S336= PC.CIA31_28=addr[31:28]                               PC-Out(S304)
	S337= PC.Out=addr+4                                         PC-Out(S305)
	S338= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S307)
	S339= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S307)
	S340= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S307)
	S341= IR.Out={35,rS,rT,offset}                              IR-Out(S311)
	S342= IR.Out31_26=35                                        IR-Out(S311)
	S343= IR.Out25_21=rS                                        IR-Out(S311)
	S344= IR.Out20_16=rT                                        IR-Out(S311)
	S345= IR.Out15_0=offset                                     IR-Out(S311)
	S346= A.Out=base                                            A-Out(S319)
	S347= A.Out1_0={base}[1:0]                                  A-Out(S319)
	S348= A.Out4_0={base}[4:0]                                  A-Out(S319)
	S349= B.Out={16{offset[15]},offset}                         B-Out(S321)
	S350= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S321)
	S351= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S321)
	S352= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S323)
	S353= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S323)
	S354= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S323)
	S355= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S326)
	S356= DAddrReg.Out1_0={{pid,base+{16{offset[15]},offset}}}[1:0]DAddrReg-Out(S326)
	S357= DAddrReg.Out4_0={{pid,base+{16{offset[15]},offset}}}[4:0]DAddrReg-Out(S326)
	S358= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S359= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S360= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S361= CU.DMMUHit=>CU.DMMUHit                                Premise(F161)
	S362= CU.DCacheHit=>CU.DCacheHit                            Premise(F162)
	S363= DCacheReg.Out=>DR.In                                  Premise(F163)
	S364= DCache.RLineDirty=>CU.DCacheWriteBack                 Premise(F164)
	S365= CU.DCacheWriteBack=DCacheRLineDirty()                 Path(S360,S364)
	S366= CP0.ASID=>DMMU.PID                                    Premise(F165)
	S367= DMMU.PID=pid                                          Path(S334,S366)
	S368= DCache.RLineEA=>DMMU.IEAR                             Premise(F166)
	S369= DMMU.IEAR=DCacheRLineEA()                             Path(S358,S368)
	S370= DMMU.AddrR={pid,DCacheRLineEA()}                      DMMU-RSearch(S367,S369)
	S371= DMMU.AddrR=>DMem.MEM8WordWAddr                        Premise(F167)
	S372= DMem.MEM8WordWAddr={pid,DCacheRLineEA()}              Path(S370,S371)
	S373= DCache.RLineData=>DMem.MEM8WordWData                  Premise(F168)
	S374= DMem.MEM8WordWData=DCacheRLineData()                  Path(S359,S373)
	S375= CtrlASIDIn=0                                          Premise(F169)
	S376= CtrlCP0=0                                             Premise(F170)
	S377= CP0[ASID]=pid                                         CP0-Hold(S298,S376)
	S378= CtrlEPCIn=0                                           Premise(F171)
	S379= CtrlExCodeIn=0                                        Premise(F172)
	S380= CtrlIMMU=0                                            Premise(F173)
	S381= CtrlPC=0                                              Premise(F174)
	S382= CtrlPCInc=0                                           Premise(F175)
	S383= PC[CIA]=addr                                          PC-Hold(S304,S382)
	S384= PC[Out]=addr+4                                        PC-Hold(S305,S381,S382)
	S385= CtrlIAddrReg=0                                        Premise(F176)
	S386= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S307,S385)
	S387= CtrlICache=0                                          Premise(F177)
	S388= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S309,S387)
	S389= CtrlIR=0                                              Premise(F178)
	S390= [IR]={35,rS,rT,offset}                                IR-Hold(S311,S389)
	S391= CtrlICacheReg=0                                       Premise(F179)
	S392= CtrlIMem=0                                            Premise(F180)
	S393= IMem[{pid,addr}]={35,rS,rT,offset}                    IMem-Hold(S314,S392)
	S394= CtrlIRMux=0                                           Premise(F181)
	S395= CtrlGPR=0                                             Premise(F182)
	S396= GPR[rS]=base                                          GPR-Hold(S317,S395)
	S397= CtrlA=0                                               Premise(F183)
	S398= [A]=base                                              A-Hold(S319,S397)
	S399= CtrlB=0                                               Premise(F184)
	S400= [B]={16{offset[15]},offset}                           B-Hold(S321,S399)
	S401= CtrlALUOut=0                                          Premise(F185)
	S402= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S323,S401)
	S403= CtrlDMMU=0                                            Premise(F186)
	S404= CtrlDAddrReg=0                                        Premise(F187)
	S405= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S326,S404)
	S406= CtrlDCache=0                                          Premise(F188)
	S407= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S328,S406)
	S408= CtrlDR=1                                              Premise(F189)
	S409= CtrlDCacheReg=0                                       Premise(F190)
	S410= CtrlDMem=0                                            Premise(F191)
	S411= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S332,S410)
	S412= CtrlDMem8Word=0                                       Premise(F192)

MEM(DMMU2)	S413= CP0.ASID=pid                                          CP0-Read-ASID(S377)
	S414= PC.CIA=addr                                           PC-Out(S383)
	S415= PC.CIA31_28=addr[31:28]                               PC-Out(S383)
	S416= PC.Out=addr+4                                         PC-Out(S384)
	S417= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S386)
	S418= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S386)
	S419= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S386)
	S420= IR.Out={35,rS,rT,offset}                              IR-Out(S390)
	S421= IR.Out31_26=35                                        IR-Out(S390)
	S422= IR.Out25_21=rS                                        IR-Out(S390)
	S423= IR.Out20_16=rT                                        IR-Out(S390)
	S424= IR.Out15_0=offset                                     IR-Out(S390)
	S425= A.Out=base                                            A-Out(S398)
	S426= A.Out1_0={base}[1:0]                                  A-Out(S398)
	S427= A.Out4_0={base}[4:0]                                  A-Out(S398)
	S428= B.Out={16{offset[15]},offset}                         B-Out(S400)
	S429= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S400)
	S430= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S400)
	S431= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S402)
	S432= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S402)
	S433= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S402)
	S434= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S405)
	S435= DAddrReg.Out1_0={{pid,base+{16{offset[15]},offset}}}[1:0]DAddrReg-Out(S405)
	S436= DAddrReg.Out4_0={{pid,base+{16{offset[15]},offset}}}[4:0]DAddrReg-Out(S405)
	S437= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S438= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S439= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S440= ALUOut.Out=>DCache.IEA                                Premise(F193)
	S441= DCache.IEA=base+{16{offset[15]},offset}               Path(S431,S440)
	S442= DCache.Hit=DCacheHit(base+{16{offset[15]},offset})    DCache-Search(S441)
	S443= DAddrReg.Out=>DMem.RAddr                              Premise(F194)
	S444= DMem.RAddr={pid,base+{16{offset[15]},offset}}         Path(S434,S443)
	S445= DMem.MEM8WordOut=>DCache.WData                        Premise(F195)
	S446= DMem.Out=>DR.In                                       Premise(F196)
	S447= CtrlASIDIn=0                                          Premise(F197)
	S448= CtrlCP0=0                                             Premise(F198)
	S449= CP0[ASID]=pid                                         CP0-Hold(S377,S448)
	S450= CtrlEPCIn=0                                           Premise(F199)
	S451= CtrlExCodeIn=0                                        Premise(F200)
	S452= CtrlIMMU=0                                            Premise(F201)
	S453= CtrlPC=0                                              Premise(F202)
	S454= CtrlPCInc=0                                           Premise(F203)
	S455= PC[CIA]=addr                                          PC-Hold(S383,S454)
	S456= PC[Out]=addr+4                                        PC-Hold(S384,S453,S454)
	S457= CtrlIAddrReg=0                                        Premise(F204)
	S458= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S386,S457)
	S459= CtrlICache=0                                          Premise(F205)
	S460= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S388,S459)
	S461= CtrlIR=0                                              Premise(F206)
	S462= [IR]={35,rS,rT,offset}                                IR-Hold(S390,S461)
	S463= CtrlICacheReg=0                                       Premise(F207)
	S464= CtrlIMem=0                                            Premise(F208)
	S465= IMem[{pid,addr}]={35,rS,rT,offset}                    IMem-Hold(S393,S464)
	S466= CtrlIRMux=0                                           Premise(F209)
	S467= CtrlGPR=0                                             Premise(F210)
	S468= GPR[rS]=base                                          GPR-Hold(S396,S467)
	S469= CtrlA=0                                               Premise(F211)
	S470= [A]=base                                              A-Hold(S398,S469)
	S471= CtrlB=0                                               Premise(F212)
	S472= [B]={16{offset[15]},offset}                           B-Hold(S400,S471)
	S473= CtrlALUOut=0                                          Premise(F213)
	S474= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S402,S473)
	S475= CtrlDMMU=0                                            Premise(F214)
	S476= CtrlDAddrReg=0                                        Premise(F215)
	S477= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S405,S476)
	S478= CtrlDCache=1                                          Premise(F216)
	S479= CtrlDR=1                                              Premise(F217)
	S480= CtrlDCacheReg=0                                       Premise(F218)
	S481= CtrlDMem=0                                            Premise(F219)
	S482= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S411,S481)
	S483= CtrlDMem8Word=0                                       Premise(F220)
	S484= DMem.Out=a                                            DMem-Read(S444,S411,S481,S483)
	S485= DR.In=a                                               Path(S484,S446)
	S486= [DR]=a                                                DR-Write(S485,S479)
	S487= DMem.MEM8WordOut=DMemGet8Word({pid,base+{16{offset[15]},offset}})DMem-Read(S444,S411,S481,S483)
	S488= DCache.WData=DMemGet8Word({pid,base+{16{offset[15]},offset}})Path(S487,S445)
	S489= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Write8Word(S441,S488,S478)

WB	S490= CP0.ASID=pid                                          CP0-Read-ASID(S449)
	S491= PC.CIA=addr                                           PC-Out(S455)
	S492= PC.CIA31_28=addr[31:28]                               PC-Out(S455)
	S493= PC.Out=addr+4                                         PC-Out(S456)
	S494= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S458)
	S495= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S458)
	S496= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S458)
	S497= IR.Out={35,rS,rT,offset}                              IR-Out(S462)
	S498= IR.Out31_26=35                                        IR-Out(S462)
	S499= IR.Out25_21=rS                                        IR-Out(S462)
	S500= IR.Out20_16=rT                                        IR-Out(S462)
	S501= IR.Out15_0=offset                                     IR-Out(S462)
	S502= A.Out=base                                            A-Out(S470)
	S503= A.Out1_0={base}[1:0]                                  A-Out(S470)
	S504= A.Out4_0={base}[4:0]                                  A-Out(S470)
	S505= B.Out={16{offset[15]},offset}                         B-Out(S472)
	S506= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S472)
	S507= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S472)
	S508= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S474)
	S509= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S474)
	S510= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S474)
	S511= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S477)
	S512= DAddrReg.Out1_0={{pid,base+{16{offset[15]},offset}}}[1:0]DAddrReg-Out(S477)
	S513= DAddrReg.Out4_0={{pid,base+{16{offset[15]},offset}}}[4:0]DAddrReg-Out(S477)
	S514= DR.Out=a                                              DR-Out(S486)
	S515= DR.Out1_0={a}[1:0]                                    DR-Out(S486)
	S516= DR.Out4_0={a}[4:0]                                    DR-Out(S486)
	S517= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S518= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S519= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S520= IR.Out20_16=>GPR.WReg                                 Premise(F221)
	S521= GPR.WReg=rT                                           Path(S500,S520)
	S522= DR.Out=>MemDataSelL.In                                Premise(F222)
	S523= MemDataSelL.In=a                                      Path(S514,S522)
	S524= ALUOut.Out1_0=>MemDataSelL.Addr                       Premise(F223)
	S525= MemDataSelL.Addr={base+{16{offset[15]},offset}}[1:0]  Path(S509,S524)
	S526= MemDataSelL.Func=6'b000101                            Premise(F224)
	S527= MemDataSelL.Out=a                                     MemDataSelL(S523,S525)
	S528= MemDataSelL.Out=>GPR.WData                            Premise(F225)
	S529= GPR.WData=a                                           Path(S527,S528)
	S530= CtrlASIDIn=0                                          Premise(F226)
	S531= CtrlCP0=0                                             Premise(F227)
	S532= CP0[ASID]=pid                                         CP0-Hold(S449,S531)
	S533= CtrlEPCIn=0                                           Premise(F228)
	S534= CtrlExCodeIn=0                                        Premise(F229)
	S535= CtrlIMMU=0                                            Premise(F230)
	S536= CtrlPC=0                                              Premise(F231)
	S537= CtrlPCInc=0                                           Premise(F232)
	S538= PC[CIA]=addr                                          PC-Hold(S455,S537)
	S539= PC[Out]=addr+4                                        PC-Hold(S456,S536,S537)
	S540= CtrlIAddrReg=0                                        Premise(F233)
	S541= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S458,S540)
	S542= CtrlICache=0                                          Premise(F234)
	S543= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S460,S542)
	S544= CtrlIR=0                                              Premise(F235)
	S545= [IR]={35,rS,rT,offset}                                IR-Hold(S462,S544)
	S546= CtrlICacheReg=0                                       Premise(F236)
	S547= CtrlIMem=0                                            Premise(F237)
	S548= IMem[{pid,addr}]={35,rS,rT,offset}                    IMem-Hold(S465,S547)
	S549= CtrlIRMux=0                                           Premise(F238)
	S550= CtrlGPR=1                                             Premise(F239)
	S551= GPR[rT]=a                                             GPR-Write(S521,S529,S550)
	S552= CtrlA=0                                               Premise(F240)
	S553= [A]=base                                              A-Hold(S470,S552)
	S554= CtrlB=0                                               Premise(F241)
	S555= [B]={16{offset[15]},offset}                           B-Hold(S472,S554)
	S556= CtrlALUOut=0                                          Premise(F242)
	S557= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S474,S556)
	S558= CtrlDMMU=0                                            Premise(F243)
	S559= CtrlDAddrReg=0                                        Premise(F244)
	S560= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S477,S559)
	S561= CtrlDCache=0                                          Premise(F245)
	S562= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Hold(S489,S561)
	S563= CtrlDR=0                                              Premise(F246)
	S564= [DR]=a                                                DR-Hold(S486,S563)
	S565= CtrlDCacheReg=0                                       Premise(F247)
	S566= CtrlDMem=0                                            Premise(F248)
	S567= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S482,S566)
	S568= CtrlDMem8Word=0                                       Premise(F249)

POST	S532= CP0[ASID]=pid                                         CP0-Hold(S449,S531)
	S538= PC[CIA]=addr                                          PC-Hold(S455,S537)
	S539= PC[Out]=addr+4                                        PC-Hold(S456,S536,S537)
	S541= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S458,S540)
	S543= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S460,S542)
	S545= [IR]={35,rS,rT,offset}                                IR-Hold(S462,S544)
	S548= IMem[{pid,addr}]={35,rS,rT,offset}                    IMem-Hold(S465,S547)
	S551= GPR[rT]=a                                             GPR-Write(S521,S529,S550)
	S553= [A]=base                                              A-Hold(S470,S552)
	S555= [B]={16{offset[15]},offset}                           B-Hold(S472,S554)
	S557= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S474,S556)
	S560= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S477,S559)
	S562= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Hold(S489,S561)
	S564= [DR]=a                                                DR-Hold(S486,S563)
	S567= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S482,S566)

