
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,0,19}                            Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={0,rS,0,19}                                   IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR_ID.In                                     Premise(F7)
	S12= IR_ID.In={0,rS,0,19}                                   Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F32)
	S14= CtrlPCInc=1                                            Premise(F33)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR_ID=1                                            Premise(F39)
	S17= [IR_ID]={0,rS,0,19}                                    IR_ID-Write(S12,S16)
	S18= CtrlGPR=0                                              Premise(F40)
	S19= GPR[rS]=a                                              GPR-Hold(S3,S18)

ID	S20= IR_ID.Out25_21=rS                                      IR-Out(S17)
	S21= IR_ID.Out25_21=>GPR.RReg1                              Premise(F54)
	S22= GPR.RReg1=rS                                           Path(S20,S21)
	S23= GPR.Rdata1=a                                           GPR-Read(S22,S19)
	S24= GPR.Rdata1=>FU.InID1                                   Premise(F56)
	S25= FU.InID1=a                                             Path(S23,S24)
	S26= FU.OutID1=FU(a)                                        FU-Forward(S25)
	S27= FU.OutID1=>A_EX.In                                     Premise(F58)
	S28= A_EX.In=FU(a)                                          Path(S26,S27)
	S29= CtrlPC=0                                               Premise(F75)
	S30= CtrlPCInc=0                                            Premise(F76)
	S31= PC[Out]=addr+4                                         PC-Hold(S15,S29,S30)
	S32= CtrlA_EX=1                                             Premise(F84)
	S33= [A_EX]=FU(a)                                           A_EX-Write(S28,S32)

EX	S34= A_EX.Out=FU(a)                                         A_EX-Out(S33)
	S35= A_EX.Out=>Lo.In                                        Premise(F108)
	S36= Lo.In=FU(a)                                            Path(S34,S35)
	S37= CtrlPC=0                                               Premise(F118)
	S38= CtrlPCInc=0                                            Premise(F119)
	S39= PC[Out]=addr+4                                         PC-Hold(S31,S37,S38)
	S40= CtrlLo=1                                               Premise(F129)
	S41= [Lo]=FU(a)                                             Lo-Write(S36,S40)

MEM	S42= CtrlPC=0                                               Premise(F161)
	S43= CtrlPCInc=0                                            Premise(F162)
	S44= PC[Out]=addr+4                                         PC-Hold(S39,S42,S43)
	S45= CtrlLo=0                                               Premise(F172)
	S46= [Lo]=FU(a)                                             Lo-Hold(S41,S45)

WB	S47= CtrlPC=0                                               Premise(F204)
	S48= CtrlPCInc=0                                            Premise(F205)
	S49= PC[Out]=addr+4                                         PC-Hold(S44,S47,S48)
	S50= CtrlLo=0                                               Premise(F215)
	S51= [Lo]=FU(a)                                             Lo-Hold(S46,S50)

POST	S49= PC[Out]=addr+4                                         PC-Hold(S44,S47,S48)
	S51= [Lo]=FU(a)                                             Lo-Hold(S46,S50)

