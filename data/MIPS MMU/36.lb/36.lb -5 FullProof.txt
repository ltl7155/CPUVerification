
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={32,rS,rT,offset}                      Premise(F2)
	S3= ICache[addr]={32,rS,rT,offset}                          Premise(F3)
	S4= GPR[rS]=base                                            Premise(F4)
	S5= DMem[{pid,base+{16{offset[15]},offset}}]=a              Premise(F5)
	S6= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataPremise(F6)

IF	S7= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S8= PC.Out=addr                                             PC-Out(S1)
	S9= DCache.RLineEA=DCacheRLineEA()                          DCache-WriteBack()
	S10= DCache.RLineData=DCacheRLineData()                     DCache-WriteBack()
	S11= DCache.RLineDirty=DCacheRLineDirty()                   DCache-WriteBack()
	S12= CP0.ASID=>IMMU.PID                                     Premise(F7)
	S13= IMMU.PID=pid                                           Path(S7,S12)
	S14= PC.Out=>IMMU.IEA                                       Premise(F8)
	S15= IMMU.IEA=addr                                          Path(S8,S14)
	S16= IMMU.Addr={pid,addr}                                   IMMU-Search(S13,S15)
	S17= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S13,S15)
	S18= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S19= IAddrReg.In={pid,addr}                                 Path(S16,S18)
	S20= IMMU.Hit=>CU.IMMUHit                                   Premise(F10)
	S21= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S17,S20)
	S22= PC.Out=>ICache.IEA                                     Premise(F11)
	S23= ICache.IEA=addr                                        Path(S8,S22)
	S24= ICache.Hit=ICacheHit(addr)                             ICache-Search(S23)
	S25= ICache.Out={32,rS,rT,offset}                           ICache-Search(S23,S3)
	S26= ICache.Out=>IR.In                                      Premise(F12)
	S27= IR.In={32,rS,rT,offset}                                Path(S25,S26)
	S28= ICache.Out=>ICacheReg.In                               Premise(F13)
	S29= ICacheReg.In={32,rS,rT,offset}                         Path(S25,S28)
	S30= ICache.Hit=>CU.ICacheHit                               Premise(F14)
	S31= CU.ICacheHit=ICacheHit(addr)                           Path(S24,S30)
	S32= CtrlASIDIn=0                                           Premise(F15)
	S33= CtrlCP0=0                                              Premise(F16)
	S34= CP0[ASID]=pid                                          CP0-Hold(S0,S33)
	S35= CtrlEPCIn=0                                            Premise(F17)
	S36= CtrlExCodeIn=0                                         Premise(F18)
	S37= CtrlIMMU=0                                             Premise(F19)
	S38= CtrlPC=0                                               Premise(F20)
	S39= CtrlPCInc=1                                            Premise(F21)
	S40= PC[Out]=addr+4                                         PC-Inc(S1,S38,S39)
	S41= PC[CIA]=addr                                           PC-Inc(S1,S38,S39)
	S42= CtrlIAddrReg=0                                         Premise(F22)
	S43= CtrlICache=0                                           Premise(F23)
	S44= ICache[addr]={32,rS,rT,offset}                         ICache-Hold(S3,S43)
	S45= CtrlIR=1                                               Premise(F24)
	S46= [IR]={32,rS,rT,offset}                                 IR-Write(S27,S45)
	S47= CtrlICacheReg=0                                        Premise(F25)
	S48= CtrlIMem=0                                             Premise(F26)
	S49= IMem[{pid,addr}]={32,rS,rT,offset}                     IMem-Hold(S2,S48)
	S50= CtrlIRMux=0                                            Premise(F27)
	S51= CtrlGPR=0                                              Premise(F28)
	S52= GPR[rS]=base                                           GPR-Hold(S4,S51)
	S53= CtrlA=0                                                Premise(F29)
	S54= CtrlB=0                                                Premise(F30)
	S55= CtrlALUOut=0                                           Premise(F31)
	S56= CtrlDMMU=0                                             Premise(F32)
	S57= CtrlDAddrReg=0                                         Premise(F33)
	S58= CtrlDCache=0                                           Premise(F34)
	S59= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S6,S58)
	S60= CtrlDCacheReg=0                                        Premise(F35)
	S61= CtrlDR=0                                               Premise(F36)
	S62= CtrlDMem=0                                             Premise(F37)
	S63= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S5,S62)
	S64= CtrlDMem8Word=0                                        Premise(F38)

ID	S65= CP0.ASID=pid                                           CP0-Read-ASID(S34)
	S66= PC.Out=addr+4                                          PC-Out(S40)
	S67= PC.CIA=addr                                            PC-Out(S41)
	S68= PC.CIA31_28=addr[31:28]                                PC-Out(S41)
	S69= IR.Out={32,rS,rT,offset}                               IR-Out(S46)
	S70= IR.Out31_26=32                                         IR-Out(S46)
	S71= IR.Out25_21=rS                                         IR-Out(S46)
	S72= IR.Out20_16=rT                                         IR-Out(S46)
	S73= IR.Out15_0=offset                                      IR-Out(S46)
	S74= DCache.RLineEA=DCacheRLineEA()                         DCache-WriteBack()
	S75= DCache.RLineData=DCacheRLineData()                     DCache-WriteBack()
	S76= DCache.RLineDirty=DCacheRLineDirty()                   DCache-WriteBack()
	S77= IR.Out31_26=>CU.Op                                     Premise(F63)
	S78= CU.Op=32                                               Path(S70,S77)
	S79= CU.Func=alu_add                                        CU(S78)
	S80= CU.MemDataSelFunc=mds_lwz                              CU(S78)
	S81= IR.Out25_21=>GPR.RReg1                                 Premise(F64)
	S82= GPR.RReg1=rS                                           Path(S71,S81)
	S83= GPR.Rdata1=base                                        GPR-Read(S82,S52)
	S84= IR.Out15_0=>IMMEXT.In                                  Premise(F65)
	S85= IMMEXT.In=offset                                       Path(S73,S84)
	S86= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S85)
	S87= GPR.Rdata1=>A.In                                       Premise(F66)
	S88= A.In=base                                              Path(S83,S87)
	S89= IMMEXT.Out=>B.In                                       Premise(F67)
	S90= B.In={16{offset[15]},offset}                           Path(S86,S89)
	S91= CtrlASIDIn=0                                           Premise(F68)
	S92= CtrlCP0=0                                              Premise(F69)
	S93= CP0[ASID]=pid                                          CP0-Hold(S34,S92)
	S94= CtrlEPCIn=0                                            Premise(F70)
	S95= CtrlExCodeIn=0                                         Premise(F71)
	S96= CtrlIMMU=0                                             Premise(F72)
	S97= CtrlPC=0                                               Premise(F73)
	S98= CtrlPCInc=0                                            Premise(F74)
	S99= PC[CIA]=addr                                           PC-Hold(S41,S98)
	S100= PC[Out]=addr+4                                        PC-Hold(S40,S97,S98)
	S101= CtrlIAddrReg=0                                        Premise(F75)
	S102= CtrlICache=0                                          Premise(F76)
	S103= ICache[addr]={32,rS,rT,offset}                        ICache-Hold(S44,S102)
	S104= CtrlIR=0                                              Premise(F77)
	S105= [IR]={32,rS,rT,offset}                                IR-Hold(S46,S104)
	S106= CtrlICacheReg=0                                       Premise(F78)
	S107= CtrlIMem=0                                            Premise(F79)
	S108= IMem[{pid,addr}]={32,rS,rT,offset}                    IMem-Hold(S49,S107)
	S109= CtrlIRMux=0                                           Premise(F80)
	S110= CtrlGPR=0                                             Premise(F81)
	S111= GPR[rS]=base                                          GPR-Hold(S52,S110)
	S112= CtrlA=1                                               Premise(F82)
	S113= [A]=base                                              A-Write(S88,S112)
	S114= CtrlB=1                                               Premise(F83)
	S115= [B]={16{offset[15]},offset}                           B-Write(S90,S114)
	S116= CtrlALUOut=0                                          Premise(F84)
	S117= CtrlDMMU=0                                            Premise(F85)
	S118= CtrlDAddrReg=0                                        Premise(F86)
	S119= CtrlDCache=0                                          Premise(F87)
	S120= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S59,S119)
	S121= CtrlDCacheReg=0                                       Premise(F88)
	S122= CtrlDR=0                                              Premise(F89)
	S123= CtrlDMem=0                                            Premise(F90)
	S124= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S63,S123)
	S125= CtrlDMem8Word=0                                       Premise(F91)

EX	S126= CP0.ASID=pid                                          CP0-Read-ASID(S93)
	S127= PC.CIA=addr                                           PC-Out(S99)
	S128= PC.CIA31_28=addr[31:28]                               PC-Out(S99)
	S129= PC.Out=addr+4                                         PC-Out(S100)
	S130= IR.Out={32,rS,rT,offset}                              IR-Out(S105)
	S131= IR.Out31_26=32                                        IR-Out(S105)
	S132= IR.Out25_21=rS                                        IR-Out(S105)
	S133= IR.Out20_16=rT                                        IR-Out(S105)
	S134= IR.Out15_0=offset                                     IR-Out(S105)
	S135= A.Out=base                                            A-Out(S113)
	S136= A.Out1_0={base}[1:0]                                  A-Out(S113)
	S137= A.Out4_0={base}[4:0]                                  A-Out(S113)
	S138= B.Out={16{offset[15]},offset}                         B-Out(S115)
	S139= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S115)
	S140= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S115)
	S141= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S142= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S143= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S144= A.Out=>ALU.A                                          Premise(F92)
	S145= ALU.A=base                                            Path(S135,S144)
	S146= B.Out=>ALU.B                                          Premise(F93)
	S147= ALU.B={16{offset[15]},offset}                         Path(S138,S146)
	S148= ALU.Func=6'b010010                                    Premise(F94)
	S149= ALU.Out=base+{16{offset[15]},offset}                  ALU(S145,S147)
	S150= ALU.Out1_0={base+{16{offset[15]},offset}}[1:0]        ALU(S145,S147)
	S151= ALU.CMP=Compare0(base+{16{offset[15]},offset})        ALU(S145,S147)
	S152= ALU.OV=OverFlow(base+{16{offset[15]},offset})         ALU(S145,S147)
	S153= ALU.CA=Carry(base+{16{offset[15]},offset})            ALU(S145,S147)
	S154= ALU.Out=>ALUOut.In                                    Premise(F95)
	S155= ALUOut.In=base+{16{offset[15]},offset}                Path(S149,S154)
	S156= CtrlASIDIn=0                                          Premise(F96)
	S157= CtrlCP0=0                                             Premise(F97)
	S158= CP0[ASID]=pid                                         CP0-Hold(S93,S157)
	S159= CtrlEPCIn=0                                           Premise(F98)
	S160= CtrlExCodeIn=0                                        Premise(F99)
	S161= CtrlIMMU=0                                            Premise(F100)
	S162= CtrlPC=0                                              Premise(F101)
	S163= CtrlPCInc=0                                           Premise(F102)
	S164= PC[CIA]=addr                                          PC-Hold(S99,S163)
	S165= PC[Out]=addr+4                                        PC-Hold(S100,S162,S163)
	S166= CtrlIAddrReg=0                                        Premise(F103)
	S167= CtrlICache=0                                          Premise(F104)
	S168= ICache[addr]={32,rS,rT,offset}                        ICache-Hold(S103,S167)
	S169= CtrlIR=0                                              Premise(F105)
	S170= [IR]={32,rS,rT,offset}                                IR-Hold(S105,S169)
	S171= CtrlICacheReg=0                                       Premise(F106)
	S172= CtrlIMem=0                                            Premise(F107)
	S173= IMem[{pid,addr}]={32,rS,rT,offset}                    IMem-Hold(S108,S172)
	S174= CtrlIRMux=0                                           Premise(F108)
	S175= CtrlGPR=0                                             Premise(F109)
	S176= GPR[rS]=base                                          GPR-Hold(S111,S175)
	S177= CtrlA=0                                               Premise(F110)
	S178= [A]=base                                              A-Hold(S113,S177)
	S179= CtrlB=0                                               Premise(F111)
	S180= [B]={16{offset[15]},offset}                           B-Hold(S115,S179)
	S181= CtrlALUOut=1                                          Premise(F112)
	S182= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Write(S155,S181)
	S183= CtrlDMMU=0                                            Premise(F113)
	S184= CtrlDAddrReg=0                                        Premise(F114)
	S185= CtrlDCache=0                                          Premise(F115)
	S186= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S120,S185)
	S187= CtrlDCacheReg=0                                       Premise(F116)
	S188= CtrlDR=0                                              Premise(F117)
	S189= CtrlDMem=0                                            Premise(F118)
	S190= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S124,S189)
	S191= CtrlDMem8Word=0                                       Premise(F119)

MEM	S192= CP0.ASID=pid                                          CP0-Read-ASID(S158)
	S193= PC.CIA=addr                                           PC-Out(S164)
	S194= PC.CIA31_28=addr[31:28]                               PC-Out(S164)
	S195= PC.Out=addr+4                                         PC-Out(S165)
	S196= IR.Out={32,rS,rT,offset}                              IR-Out(S170)
	S197= IR.Out31_26=32                                        IR-Out(S170)
	S198= IR.Out25_21=rS                                        IR-Out(S170)
	S199= IR.Out20_16=rT                                        IR-Out(S170)
	S200= IR.Out15_0=offset                                     IR-Out(S170)
	S201= A.Out=base                                            A-Out(S178)
	S202= A.Out1_0={base}[1:0]                                  A-Out(S178)
	S203= A.Out4_0={base}[4:0]                                  A-Out(S178)
	S204= B.Out={16{offset[15]},offset}                         B-Out(S180)
	S205= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S180)
	S206= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S180)
	S207= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S182)
	S208= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S182)
	S209= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S182)
	S210= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S211= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S212= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S213= CP0.ASID=>DMMU.PID                                    Premise(F120)
	S214= DMMU.PID=pid                                          Path(S192,S213)
	S215= ALUOut.Out=>DMMU.IEA                                  Premise(F121)
	S216= DMMU.IEA=base+{16{offset[15]},offset}                 Path(S207,S215)
	S217= DMMU.Addr={pid,base+{16{offset[15]},offset}}          DMMU-Search(S214,S216)
	S218= DMMU.Hit=DMMUHit(pid,base+{16{offset[15]},offset})    DMMU-Search(S214,S216)
	S219= DMMU.Addr=>DAddrReg.In                                Premise(F122)
	S220= DAddrReg.In={pid,base+{16{offset[15]},offset}}        Path(S217,S219)
	S221= DMMU.Hit=>CU.DMMUHit                                  Premise(F123)
	S222= CU.DMMUHit=DMMUHit(pid,base+{16{offset[15]},offset})  Path(S218,S221)
	S223= ALUOut.Out=>DCache.IEA                                Premise(F124)
	S224= DCache.IEA=base+{16{offset[15]},offset}               Path(S207,S223)
	S225= DCache.Hit=DCacheHit(base+{16{offset[15]},offset})    DCache-Search(S224)
	S226= DCache.Out=>DCacheReg.In                              Premise(F125)
	S227= DCache.Out=>DR.In                                     Premise(F126)
	S228= DCache.Hit=>CU.DCacheHit                              Premise(F127)
	S229= CU.DCacheHit=DCacheHit(base+{16{offset[15]},offset})  Path(S225,S228)
	S230= CtrlASIDIn=0                                          Premise(F128)
	S231= CtrlCP0=0                                             Premise(F129)
	S232= CP0[ASID]=pid                                         CP0-Hold(S158,S231)
	S233= CtrlEPCIn=0                                           Premise(F130)
	S234= CtrlExCodeIn=0                                        Premise(F131)
	S235= CtrlIMMU=0                                            Premise(F132)
	S236= CtrlPC=0                                              Premise(F133)
	S237= CtrlPCInc=0                                           Premise(F134)
	S238= PC[CIA]=addr                                          PC-Hold(S164,S237)
	S239= PC[Out]=addr+4                                        PC-Hold(S165,S236,S237)
	S240= CtrlIAddrReg=0                                        Premise(F135)
	S241= CtrlICache=0                                          Premise(F136)
	S242= ICache[addr]={32,rS,rT,offset}                        ICache-Hold(S168,S241)
	S243= CtrlIR=0                                              Premise(F137)
	S244= [IR]={32,rS,rT,offset}                                IR-Hold(S170,S243)
	S245= CtrlICacheReg=0                                       Premise(F138)
	S246= CtrlIMem=0                                            Premise(F139)
	S247= IMem[{pid,addr}]={32,rS,rT,offset}                    IMem-Hold(S173,S246)
	S248= CtrlIRMux=0                                           Premise(F140)
	S249= CtrlGPR=0                                             Premise(F141)
	S250= GPR[rS]=base                                          GPR-Hold(S176,S249)
	S251= CtrlA=0                                               Premise(F142)
	S252= [A]=base                                              A-Hold(S178,S251)
	S253= CtrlB=0                                               Premise(F143)
	S254= [B]={16{offset[15]},offset}                           B-Hold(S180,S253)
	S255= CtrlALUOut=0                                          Premise(F144)
	S256= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S182,S255)
	S257= CtrlDMMU=0                                            Premise(F145)
	S258= CtrlDAddrReg=1                                        Premise(F146)
	S259= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Write(S220,S258)
	S260= CtrlDCache=0                                          Premise(F147)
	S261= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S186,S260)
	S262= CtrlDCacheReg=1                                       Premise(F148)
	S263= CtrlDR=0                                              Premise(F149)
	S264= CtrlDMem=0                                            Premise(F150)
	S265= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S190,S264)
	S266= CtrlDMem8Word=0                                       Premise(F151)

MEM(DMMU1)	S267= CP0.ASID=pid                                          CP0-Read-ASID(S232)
	S268= PC.CIA=addr                                           PC-Out(S238)
	S269= PC.CIA31_28=addr[31:28]                               PC-Out(S238)
	S270= PC.Out=addr+4                                         PC-Out(S239)
	S271= IR.Out={32,rS,rT,offset}                              IR-Out(S244)
	S272= IR.Out31_26=32                                        IR-Out(S244)
	S273= IR.Out25_21=rS                                        IR-Out(S244)
	S274= IR.Out20_16=rT                                        IR-Out(S244)
	S275= IR.Out15_0=offset                                     IR-Out(S244)
	S276= A.Out=base                                            A-Out(S252)
	S277= A.Out1_0={base}[1:0]                                  A-Out(S252)
	S278= A.Out4_0={base}[4:0]                                  A-Out(S252)
	S279= B.Out={16{offset[15]},offset}                         B-Out(S254)
	S280= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S254)
	S281= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S254)
	S282= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S256)
	S283= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S256)
	S284= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S256)
	S285= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S259)
	S286= DAddrReg.Out1_0={{pid,base+{16{offset[15]},offset}}}[1:0]DAddrReg-Out(S259)
	S287= DAddrReg.Out4_0={{pid,base+{16{offset[15]},offset}}}[4:0]DAddrReg-Out(S259)
	S288= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S289= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S290= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S291= CU.DMMUHit=>CU.DMMUHit                                Premise(F152)
	S292= CU.DCacheHit=>CU.DCacheHit                            Premise(F153)
	S293= DCacheReg.Out=>DR.In                                  Premise(F154)
	S294= DCache.RLineDirty=>CU.DCacheWriteBack                 Premise(F155)
	S295= CU.DCacheWriteBack=DCacheRLineDirty()                 Path(S290,S294)
	S296= CP0.ASID=>DMMU.PID                                    Premise(F156)
	S297= DMMU.PID=pid                                          Path(S267,S296)
	S298= DCache.RLineEA=>DMMU.IEAR                             Premise(F157)
	S299= DMMU.IEAR=DCacheRLineEA()                             Path(S288,S298)
	S300= DMMU.AddrR={pid,DCacheRLineEA()}                      DMMU-RSearch(S297,S299)
	S301= DMMU.AddrR=>DMem.MEM8WordWAddr                        Premise(F158)
	S302= DMem.MEM8WordWAddr={pid,DCacheRLineEA()}              Path(S300,S301)
	S303= DCache.RLineData=>DMem.MEM8WordWData                  Premise(F159)
	S304= DMem.MEM8WordWData=DCacheRLineData()                  Path(S289,S303)
	S305= CtrlASIDIn=0                                          Premise(F160)
	S306= CtrlCP0=0                                             Premise(F161)
	S307= CP0[ASID]=pid                                         CP0-Hold(S232,S306)
	S308= CtrlEPCIn=0                                           Premise(F162)
	S309= CtrlExCodeIn=0                                        Premise(F163)
	S310= CtrlIMMU=0                                            Premise(F164)
	S311= CtrlPC=0                                              Premise(F165)
	S312= CtrlPCInc=0                                           Premise(F166)
	S313= PC[CIA]=addr                                          PC-Hold(S238,S312)
	S314= PC[Out]=addr+4                                        PC-Hold(S239,S311,S312)
	S315= CtrlIAddrReg=0                                        Premise(F167)
	S316= CtrlICache=0                                          Premise(F168)
	S317= ICache[addr]={32,rS,rT,offset}                        ICache-Hold(S242,S316)
	S318= CtrlIR=0                                              Premise(F169)
	S319= [IR]={32,rS,rT,offset}                                IR-Hold(S244,S318)
	S320= CtrlICacheReg=0                                       Premise(F170)
	S321= CtrlIMem=0                                            Premise(F171)
	S322= IMem[{pid,addr}]={32,rS,rT,offset}                    IMem-Hold(S247,S321)
	S323= CtrlIRMux=0                                           Premise(F172)
	S324= CtrlGPR=0                                             Premise(F173)
	S325= GPR[rS]=base                                          GPR-Hold(S250,S324)
	S326= CtrlA=0                                               Premise(F174)
	S327= [A]=base                                              A-Hold(S252,S326)
	S328= CtrlB=0                                               Premise(F175)
	S329= [B]={16{offset[15]},offset}                           B-Hold(S254,S328)
	S330= CtrlALUOut=0                                          Premise(F176)
	S331= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S256,S330)
	S332= CtrlDMMU=0                                            Premise(F177)
	S333= CtrlDAddrReg=0                                        Premise(F178)
	S334= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S259,S333)
	S335= CtrlDCache=0                                          Premise(F179)
	S336= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S261,S335)
	S337= CtrlDCacheReg=0                                       Premise(F180)
	S338= CtrlDR=1                                              Premise(F181)
	S339= CtrlDMem=0                                            Premise(F182)
	S340= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S265,S339)
	S341= CtrlDMem8Word=0                                       Premise(F183)

MEM(DMMU2)	S342= CP0.ASID=pid                                          CP0-Read-ASID(S307)
	S343= PC.CIA=addr                                           PC-Out(S313)
	S344= PC.CIA31_28=addr[31:28]                               PC-Out(S313)
	S345= PC.Out=addr+4                                         PC-Out(S314)
	S346= IR.Out={32,rS,rT,offset}                              IR-Out(S319)
	S347= IR.Out31_26=32                                        IR-Out(S319)
	S348= IR.Out25_21=rS                                        IR-Out(S319)
	S349= IR.Out20_16=rT                                        IR-Out(S319)
	S350= IR.Out15_0=offset                                     IR-Out(S319)
	S351= A.Out=base                                            A-Out(S327)
	S352= A.Out1_0={base}[1:0]                                  A-Out(S327)
	S353= A.Out4_0={base}[4:0]                                  A-Out(S327)
	S354= B.Out={16{offset[15]},offset}                         B-Out(S329)
	S355= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S329)
	S356= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S329)
	S357= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S331)
	S358= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S331)
	S359= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S331)
	S360= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S334)
	S361= DAddrReg.Out1_0={{pid,base+{16{offset[15]},offset}}}[1:0]DAddrReg-Out(S334)
	S362= DAddrReg.Out4_0={{pid,base+{16{offset[15]},offset}}}[4:0]DAddrReg-Out(S334)
	S363= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S364= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S365= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S366= ALUOut.Out=>DCache.IEA                                Premise(F184)
	S367= DCache.IEA=base+{16{offset[15]},offset}               Path(S357,S366)
	S368= DCache.Hit=DCacheHit(base+{16{offset[15]},offset})    DCache-Search(S367)
	S369= DAddrReg.Out=>DMem.RAddr                              Premise(F185)
	S370= DMem.RAddr={pid,base+{16{offset[15]},offset}}         Path(S360,S369)
	S371= DMem.MEM8WordOut=>DCache.WData                        Premise(F186)
	S372= DMem.Out=>DR.In                                       Premise(F187)
	S373= CtrlASIDIn=0                                          Premise(F188)
	S374= CtrlCP0=0                                             Premise(F189)
	S375= CP0[ASID]=pid                                         CP0-Hold(S307,S374)
	S376= CtrlEPCIn=0                                           Premise(F190)
	S377= CtrlExCodeIn=0                                        Premise(F191)
	S378= CtrlIMMU=0                                            Premise(F192)
	S379= CtrlPC=0                                              Premise(F193)
	S380= CtrlPCInc=0                                           Premise(F194)
	S381= PC[CIA]=addr                                          PC-Hold(S313,S380)
	S382= PC[Out]=addr+4                                        PC-Hold(S314,S379,S380)
	S383= CtrlIAddrReg=0                                        Premise(F195)
	S384= CtrlICache=0                                          Premise(F196)
	S385= ICache[addr]={32,rS,rT,offset}                        ICache-Hold(S317,S384)
	S386= CtrlIR=0                                              Premise(F197)
	S387= [IR]={32,rS,rT,offset}                                IR-Hold(S319,S386)
	S388= CtrlICacheReg=0                                       Premise(F198)
	S389= CtrlIMem=0                                            Premise(F199)
	S390= IMem[{pid,addr}]={32,rS,rT,offset}                    IMem-Hold(S322,S389)
	S391= CtrlIRMux=0                                           Premise(F200)
	S392= CtrlGPR=0                                             Premise(F201)
	S393= GPR[rS]=base                                          GPR-Hold(S325,S392)
	S394= CtrlA=0                                               Premise(F202)
	S395= [A]=base                                              A-Hold(S327,S394)
	S396= CtrlB=0                                               Premise(F203)
	S397= [B]={16{offset[15]},offset}                           B-Hold(S329,S396)
	S398= CtrlALUOut=0                                          Premise(F204)
	S399= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S331,S398)
	S400= CtrlDMMU=0                                            Premise(F205)
	S401= CtrlDAddrReg=0                                        Premise(F206)
	S402= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S334,S401)
	S403= CtrlDCache=1                                          Premise(F207)
	S404= CtrlDCacheReg=0                                       Premise(F208)
	S405= CtrlDR=1                                              Premise(F209)
	S406= CtrlDMem=0                                            Premise(F210)
	S407= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S340,S406)
	S408= CtrlDMem8Word=0                                       Premise(F211)
	S409= DMem.Out=a                                            DMem-Read(S370,S340,S406,S408)
	S410= DR.In=a                                               Path(S409,S372)
	S411= [DR]=a                                                DR-Write(S410,S405)
	S412= DMem.MEM8WordOut=DMemGet8Word({pid,base+{16{offset[15]},offset}})DMem-Read(S370,S340,S406,S408)
	S413= DCache.WData=DMemGet8Word({pid,base+{16{offset[15]},offset}})Path(S412,S371)
	S414= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Write8Word(S367,S413,S403)

WB	S415= CP0.ASID=pid                                          CP0-Read-ASID(S375)
	S416= PC.CIA=addr                                           PC-Out(S381)
	S417= PC.CIA31_28=addr[31:28]                               PC-Out(S381)
	S418= PC.Out=addr+4                                         PC-Out(S382)
	S419= IR.Out={32,rS,rT,offset}                              IR-Out(S387)
	S420= IR.Out31_26=32                                        IR-Out(S387)
	S421= IR.Out25_21=rS                                        IR-Out(S387)
	S422= IR.Out20_16=rT                                        IR-Out(S387)
	S423= IR.Out15_0=offset                                     IR-Out(S387)
	S424= A.Out=base                                            A-Out(S395)
	S425= A.Out1_0={base}[1:0]                                  A-Out(S395)
	S426= A.Out4_0={base}[4:0]                                  A-Out(S395)
	S427= B.Out={16{offset[15]},offset}                         B-Out(S397)
	S428= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S397)
	S429= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S397)
	S430= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S399)
	S431= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S399)
	S432= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S399)
	S433= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S402)
	S434= DAddrReg.Out1_0={{pid,base+{16{offset[15]},offset}}}[1:0]DAddrReg-Out(S402)
	S435= DAddrReg.Out4_0={{pid,base+{16{offset[15]},offset}}}[4:0]DAddrReg-Out(S402)
	S436= DR.Out=a                                              DR-Out(S411)
	S437= DR.Out1_0={a}[1:0]                                    DR-Out(S411)
	S438= DR.Out4_0={a}[4:0]                                    DR-Out(S411)
	S439= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S440= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S441= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S442= IR.Out20_16=>GPR.WReg                                 Premise(F212)
	S443= GPR.WReg=rT                                           Path(S422,S442)
	S444= DR.Out=>MemDataSelL.In                                Premise(F213)
	S445= MemDataSelL.In=a                                      Path(S436,S444)
	S446= ALUOut.Out1_0=>MemDataSelL.Addr                       Premise(F214)
	S447= MemDataSelL.Addr={base+{16{offset[15]},offset}}[1:0]  Path(S431,S446)
	S448= MemDataSelL.Func=6'b001001                            Premise(F215)
	S449= MemDataSelL.Out={24{a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8][7]},a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8]}MemDataSelL(S445,S447)
	S450= MemDataSelL.Out=>GPR.WData                            Premise(F216)
	S451= GPR.WData={24{a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8][7]},a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8]}Path(S449,S450)
	S452= CtrlASIDIn=0                                          Premise(F217)
	S453= CtrlCP0=0                                             Premise(F218)
	S454= CP0[ASID]=pid                                         CP0-Hold(S375,S453)
	S455= CtrlEPCIn=0                                           Premise(F219)
	S456= CtrlExCodeIn=0                                        Premise(F220)
	S457= CtrlIMMU=0                                            Premise(F221)
	S458= CtrlPC=0                                              Premise(F222)
	S459= CtrlPCInc=0                                           Premise(F223)
	S460= PC[CIA]=addr                                          PC-Hold(S381,S459)
	S461= PC[Out]=addr+4                                        PC-Hold(S382,S458,S459)
	S462= CtrlIAddrReg=0                                        Premise(F224)
	S463= CtrlICache=0                                          Premise(F225)
	S464= ICache[addr]={32,rS,rT,offset}                        ICache-Hold(S385,S463)
	S465= CtrlIR=0                                              Premise(F226)
	S466= [IR]={32,rS,rT,offset}                                IR-Hold(S387,S465)
	S467= CtrlICacheReg=0                                       Premise(F227)
	S468= CtrlIMem=0                                            Premise(F228)
	S469= IMem[{pid,addr}]={32,rS,rT,offset}                    IMem-Hold(S390,S468)
	S470= CtrlIRMux=0                                           Premise(F229)
	S471= CtrlGPR=1                                             Premise(F230)
	S472= GPR[rT]={24{a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8][7]},a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S443,S451,S471)
	S473= CtrlA=0                                               Premise(F231)
	S474= [A]=base                                              A-Hold(S395,S473)
	S475= CtrlB=0                                               Premise(F232)
	S476= [B]={16{offset[15]},offset}                           B-Hold(S397,S475)
	S477= CtrlALUOut=0                                          Premise(F233)
	S478= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S399,S477)
	S479= CtrlDMMU=0                                            Premise(F234)
	S480= CtrlDAddrReg=0                                        Premise(F235)
	S481= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S402,S480)
	S482= CtrlDCache=0                                          Premise(F236)
	S483= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Hold(S414,S482)
	S484= CtrlDCacheReg=0                                       Premise(F237)
	S485= CtrlDR=0                                              Premise(F238)
	S486= [DR]=a                                                DR-Hold(S411,S485)
	S487= CtrlDMem=0                                            Premise(F239)
	S488= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S407,S487)
	S489= CtrlDMem8Word=0                                       Premise(F240)

POST	S454= CP0[ASID]=pid                                         CP0-Hold(S375,S453)
	S460= PC[CIA]=addr                                          PC-Hold(S381,S459)
	S461= PC[Out]=addr+4                                        PC-Hold(S382,S458,S459)
	S464= ICache[addr]={32,rS,rT,offset}                        ICache-Hold(S385,S463)
	S466= [IR]={32,rS,rT,offset}                                IR-Hold(S387,S465)
	S469= IMem[{pid,addr}]={32,rS,rT,offset}                    IMem-Hold(S390,S468)
	S472= GPR[rT]={24{a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8][7]},a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S443,S451,S471)
	S474= [A]=base                                              A-Hold(S395,S473)
	S476= [B]={16{offset[15]},offset}                           B-Hold(S397,S475)
	S478= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S399,S477)
	S481= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S402,S480)
	S483= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Hold(S414,S482)
	S486= [DR]=a                                                DR-Hold(S411,S485)
	S488= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S407,S487)

