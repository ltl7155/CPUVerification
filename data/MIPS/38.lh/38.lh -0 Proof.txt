
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={33,rS,rT,offset}                      Premise(F2)
	S3= GPR[rS]=base                                            Premise(F3)
	S4= DMem[{pid,base+{16{offset[15]},offset}}]=a              Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PC.Out=>IMem.RAddr                                      Premise(F5)
	S8= IMem.RAddr=addr                                         Path(S6,S7)
	S9= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S10= IMem.ASID=pid                                          Path(S5,S9)
	S11= IMem.Out={33,rS,rT,offset}                             IMem-Read(S10,S8,S2)
	S12= IMem.Out=>IR.In                                        Premise(F7)
	S13= IR.In={33,rS,rT,offset}                                Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F8)
	S15= CtrlPCInc=1                                            Premise(F9)
	S16= PC[Out]=addr+4                                         PC-Inc(S1,S14,S15)
	S17= CtrlCP0=0                                              Premise(F12)
	S18= CP0[ASID]=pid                                          CP0-Hold(S0,S17)
	S19= CtrlIR=1                                               Premise(F15)
	S20= [IR]={33,rS,rT,offset}                                 IR-Write(S13,S19)
	S21= CtrlGPR=0                                              Premise(F16)
	S22= GPR[rS]=base                                           GPR-Hold(S3,S21)
	S23= CtrlDMem=0                                             Premise(F20)
	S24= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S4,S23)

ID	S25= IR.Out25_21=rS                                         IR-Out(S20)
	S26= IR.Out15_0=offset                                      IR-Out(S20)
	S27= IR.Out25_21=>GPR.RReg1                                 Premise(F24)
	S28= GPR.RReg1=rS                                           Path(S25,S27)
	S29= GPR.Rdata1=base                                        GPR-Read(S28,S22)
	S30= IR.Out15_0=>IMMEXT.In                                  Premise(F25)
	S31= IMMEXT.In=offset                                       Path(S26,S30)
	S32= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S31)
	S33= GPR.Rdata1=>A.In                                       Premise(F26)
	S34= A.In=base                                              Path(S29,S33)
	S35= IMMEXT.Out=>B.In                                       Premise(F27)
	S36= B.In={16{offset[15]},offset}                           Path(S32,S35)
	S37= CtrlPC=0                                               Premise(F28)
	S38= CtrlPCInc=0                                            Premise(F29)
	S39= PC[Out]=addr+4                                         PC-Hold(S16,S37,S38)
	S40= CtrlCP0=0                                              Premise(F32)
	S41= CP0[ASID]=pid                                          CP0-Hold(S18,S40)
	S42= CtrlIR=0                                               Premise(F35)
	S43= [IR]={33,rS,rT,offset}                                 IR-Hold(S20,S42)
	S44= CtrlA=1                                                Premise(F37)
	S45= [A]=base                                               A-Write(S34,S44)
	S46= CtrlB=1                                                Premise(F38)
	S47= [B]={16{offset[15]},offset}                            B-Write(S36,S46)
	S48= CtrlDMem=0                                             Premise(F40)
	S49= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S24,S48)

EX	S50= A.Out=base                                             A-Out(S45)
	S51= B.Out={16{offset[15]},offset}                          B-Out(S47)
	S52= A.Out=>ALU.A                                           Premise(F43)
	S53= ALU.A=base                                             Path(S50,S52)
	S54= B.Out=>ALU.B                                           Premise(F44)
	S55= ALU.B={16{offset[15]},offset}                          Path(S51,S54)
	S56= ALU.Out=base+{16{offset[15]},offset}                   ALU(S53,S55)
	S57= ALU.Out=>ALUOut.In                                     Premise(F46)
	S58= ALUOut.In=base+{16{offset[15]},offset}                 Path(S56,S57)
	S59= CtrlPC=0                                               Premise(F47)
	S60= CtrlPCInc=0                                            Premise(F48)
	S61= PC[Out]=addr+4                                         PC-Hold(S39,S59,S60)
	S62= CtrlCP0=0                                              Premise(F51)
	S63= CP0[ASID]=pid                                          CP0-Hold(S41,S62)
	S64= CtrlIR=0                                               Premise(F54)
	S65= [IR]={33,rS,rT,offset}                                 IR-Hold(S43,S64)
	S66= CtrlALUOut=1                                           Premise(F58)
	S67= [ALUOut]=base+{16{offset[15]},offset}                  ALUOut-Write(S58,S66)
	S68= CtrlDMem=0                                             Premise(F59)
	S69= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S49,S68)

MEM	S70= CP0.ASID=pid                                           CP0-Read-ASID(S63)
	S71= ALUOut.Out=base+{16{offset[15]},offset}                ALUOut-Out(S67)
	S72= ALUOut.Out=>DMem.RAddr                                 Premise(F62)
	S73= DMem.RAddr=base+{16{offset[15]},offset}                Path(S71,S72)
	S74= CP0.ASID=>DMem.ASID                                    Premise(F63)
	S75= DMem.ASID=pid                                          Path(S70,S74)
	S76= DMem.Out=>DR.In                                        Premise(F64)
	S77= CtrlPC=0                                               Premise(F65)
	S78= CtrlPCInc=0                                            Premise(F66)
	S79= PC[Out]=addr+4                                         PC-Hold(S61,S77,S78)
	S80= CtrlIR=0                                               Premise(F72)
	S81= [IR]={33,rS,rT,offset}                                 IR-Hold(S65,S80)
	S82= CtrlALUOut=0                                           Premise(F76)
	S83= [ALUOut]=base+{16{offset[15]},offset}                  ALUOut-Hold(S67,S82)
	S84= CtrlDMem=0                                             Premise(F77)
	S85= DMem.Out=a                                             DMem-Read(S75,S73,S69,S84)
	S86= DR.In=a                                                Path(S85,S76)
	S87= CtrlDR=1                                               Premise(F79)
	S88= [DR]=a                                                 DR-Write(S86,S87)

WB	S89= IR.Out20_16=rT                                         IR-Out(S81)
	S90= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]      ALUOut-Out(S83)
	S91= DR.Out=a                                               DR-Out(S88)
	S92= IR.Out20_16=>GPR.WReg                                  Premise(F80)
	S93= GPR.WReg=rT                                            Path(S89,S92)
	S94= DR.Out=>MemDataSel.In                                  Premise(F81)
	S95= MemDataSel.In=a                                        Path(S91,S94)
	S96= ALUOut.Out1_0=>MemDataSel.Addr                         Premise(F82)
	S97= MemDataSel.Addr={base+{16{offset[15]},offset}}[1:0]    Path(S90,S96)
	S98= MemDataSel.Out={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}MemDataSel(S95,S97)
	S99= MemDataSel.Out=>GPR.WData                              Premise(F84)
	S100= GPR.WData={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}Path(S98,S99)
	S101= CtrlPC=0                                              Premise(F85)
	S102= CtrlPCInc=0                                           Premise(F86)
	S103= PC[Out]=addr+4                                        PC-Hold(S79,S101,S102)
	S104= CtrlGPR=1                                             Premise(F93)
	S105= GPR[rT]={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S93,S100,S104)

POST	S103= PC[Out]=addr+4                                        PC-Hold(S79,S101,S102)
	S105= GPR[rT]={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S93,S100,S104)

