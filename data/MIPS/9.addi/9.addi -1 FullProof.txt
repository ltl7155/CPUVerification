
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={8,rS,rT,SIMM}                         Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={8,rS,rT,SIMM}                                IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR.In                                        Premise(F6)
	S12= IR.In={8,rS,rT,SIMM}                                   Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F7)
	S14= CtrlPCInc=1                                            Premise(F8)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= PC[CIA]=addr                                           PC-Inc(S1,S13,S14)
	S17= CtrlIMem=0                                             Premise(F9)
	S18= IMem[{pid,addr}]={8,rS,rT,SIMM}                        IMem-Hold(S2,S17)
	S19= CtrlASIDIn=0                                           Premise(F10)
	S20= CtrlCP0=0                                              Premise(F11)
	S21= CP0[ASID]=pid                                          CP0-Hold(S0,S20)
	S22= CtrlEPCIn=0                                            Premise(F12)
	S23= CtrlExCodeIn=0                                         Premise(F13)
	S24= CtrlIR=1                                               Premise(F14)
	S25= [IR]={8,rS,rT,SIMM}                                    IR-Write(S12,S24)
	S26= CtrlGPR=0                                              Premise(F15)
	S27= GPR[rS]=a                                              GPR-Hold(S3,S26)
	S28= CtrlA=0                                                Premise(F16)
	S29= CtrlB=0                                                Premise(F17)
	S30= CtrlALUOut=0                                           Premise(F18)
	S31= CtrlOVReg=0                                            Premise(F19)

ID	S32= PC.Out=addr+4                                          PC-Out(S15)
	S33= PC.CIA=addr                                            PC-Out(S16)
	S34= PC.CIA31_28=addr[31:28]                                PC-Out(S16)
	S35= CP0.ASID=pid                                           CP0-Read-ASID(S21)
	S36= IR.Out={8,rS,rT,SIMM}                                  IR-Out(S25)
	S37= IR.Out31_26=8                                          IR-Out(S25)
	S38= IR.Out25_21=rS                                         IR-Out(S25)
	S39= IR.Out20_16=rT                                         IR-Out(S25)
	S40= IR.Out15_0=SIMM                                        IR-Out(S25)
	S41= IR.Out31_26=>CU.Op                                     Premise(F20)
	S42= CU.Op=8                                                Path(S37,S41)
	S43= CU.Func=alu_subf                                       CU(S42)
	S44= IR.Out25_21=>GPR.RReg1                                 Premise(F21)
	S45= GPR.RReg1=rS                                           Path(S38,S44)
	S46= GPR.Rdata1=a                                           GPR-Read(S45,S27)
	S47= IR.Out15_0=>IMMEXT.In                                  Premise(F22)
	S48= IMMEXT.In=SIMM                                         Path(S40,S47)
	S49= IMMEXT.Out={16{SIMM[15]},SIMM}                         IMMEXT(S48)
	S50= GPR.Rdata1=>A.In                                       Premise(F23)
	S51= A.In=a                                                 Path(S46,S50)
	S52= IMMEXT.Out=>B.In                                       Premise(F24)
	S53= B.In={16{SIMM[15]},SIMM}                               Path(S49,S52)
	S54= CtrlPC=0                                               Premise(F25)
	S55= CtrlPCInc=0                                            Premise(F26)
	S56= PC[CIA]=addr                                           PC-Hold(S16,S55)
	S57= PC[Out]=addr+4                                         PC-Hold(S15,S54,S55)
	S58= CtrlIMem=0                                             Premise(F27)
	S59= IMem[{pid,addr}]={8,rS,rT,SIMM}                        IMem-Hold(S18,S58)
	S60= CtrlASIDIn=0                                           Premise(F28)
	S61= CtrlCP0=0                                              Premise(F29)
	S62= CP0[ASID]=pid                                          CP0-Hold(S21,S61)
	S63= CtrlEPCIn=0                                            Premise(F30)
	S64= CtrlExCodeIn=0                                         Premise(F31)
	S65= CtrlIR=0                                               Premise(F32)
	S66= [IR]={8,rS,rT,SIMM}                                    IR-Hold(S25,S65)
	S67= CtrlGPR=0                                              Premise(F33)
	S68= GPR[rS]=a                                              GPR-Hold(S27,S67)
	S69= CtrlA=1                                                Premise(F34)
	S70= [A]=a                                                  A-Write(S51,S69)
	S71= CtrlB=1                                                Premise(F35)
	S72= [B]={16{SIMM[15]},SIMM}                                B-Write(S53,S71)
	S73= CtrlALUOut=0                                           Premise(F36)
	S74= CtrlOVReg=0                                            Premise(F37)

EX	S75= PC.CIA=addr                                            PC-Out(S56)
	S76= PC.CIA31_28=addr[31:28]                                PC-Out(S56)
	S77= PC.Out=addr+4                                          PC-Out(S57)
	S78= CP0.ASID=pid                                           CP0-Read-ASID(S62)
	S79= IR.Out={8,rS,rT,SIMM}                                  IR-Out(S66)
	S80= IR.Out31_26=8                                          IR-Out(S66)
	S81= IR.Out25_21=rS                                         IR-Out(S66)
	S82= IR.Out20_16=rT                                         IR-Out(S66)
	S83= IR.Out15_0=SIMM                                        IR-Out(S66)
	S84= A.Out=a                                                A-Out(S70)
	S85= A.Out1_0={a}[1:0]                                      A-Out(S70)
	S86= A.Out4_0={a}[4:0]                                      A-Out(S70)
	S87= B.Out={16{SIMM[15]},SIMM}                              B-Out(S72)
	S88= B.Out1_0={{16{SIMM[15]},SIMM}}[1:0]                    B-Out(S72)
	S89= B.Out4_0={{16{SIMM[15]},SIMM}}[4:0]                    B-Out(S72)
	S90= A.Out=>ALU.A                                           Premise(F38)
	S91= ALU.A=a                                                Path(S84,S90)
	S92= B.Out=>ALU.B                                           Premise(F39)
	S93= ALU.B={16{SIMM[15]},SIMM}                              Path(S87,S92)
	S94= ALU.Func=6'b000010                                     Premise(F40)
	S95= ALU.Out=a+{16{SIMM[15]},SIMM}                          ALU(S91,S93)
	S96= ALU.Out1_0={a+{16{SIMM[15]},SIMM}}[1:0]                ALU(S91,S93)
	S97= ALU.CMP=Compare0(a+{16{SIMM[15]},SIMM})                ALU(S91,S93)
	S98= ALU.OV=OverFlow(a+{16{SIMM[15]},SIMM})                 ALU(S91,S93)
	S99= ALU.CA=Carry(a+{16{SIMM[15]},SIMM})                    ALU(S91,S93)
	S100= ALU.Out=>ALUOut.In                                    Premise(F41)
	S101= ALUOut.In=a+{16{SIMM[15]},SIMM}                       Path(S95,S100)
	S102= ALU.OV=>OVReg.In                                      Premise(F42)
	S103= OVReg.In=OverFlow(a+{16{SIMM[15]},SIMM})              Path(S98,S102)
	S104= CtrlPC=0                                              Premise(F43)
	S105= CtrlPCInc=0                                           Premise(F44)
	S106= PC[CIA]=addr                                          PC-Hold(S56,S105)
	S107= PC[Out]=addr+4                                        PC-Hold(S57,S104,S105)
	S108= CtrlIMem=0                                            Premise(F45)
	S109= IMem[{pid,addr}]={8,rS,rT,SIMM}                       IMem-Hold(S59,S108)
	S110= CtrlASIDIn=0                                          Premise(F46)
	S111= CtrlCP0=0                                             Premise(F47)
	S112= CP0[ASID]=pid                                         CP0-Hold(S62,S111)
	S113= CtrlEPCIn=0                                           Premise(F48)
	S114= CtrlExCodeIn=0                                        Premise(F49)
	S115= CtrlIR=0                                              Premise(F50)
	S116= [IR]={8,rS,rT,SIMM}                                   IR-Hold(S66,S115)
	S117= CtrlGPR=0                                             Premise(F51)
	S118= GPR[rS]=a                                             GPR-Hold(S68,S117)
	S119= CtrlA=0                                               Premise(F52)
	S120= [A]=a                                                 A-Hold(S70,S119)
	S121= CtrlB=0                                               Premise(F53)
	S122= [B]={16{SIMM[15]},SIMM}                               B-Hold(S72,S121)
	S123= CtrlALUOut=1                                          Premise(F54)
	S124= [ALUOut]=a+{16{SIMM[15]},SIMM}                        ALUOut-Write(S101,S123)
	S125= CtrlOVReg=1                                           Premise(F55)
	S126= [OVReg]=OverFlow(a+{16{SIMM[15]},SIMM})               OVReg-Write(S103,S125)

MEM	S127= PC.CIA=addr                                           PC-Out(S106)
	S128= PC.CIA31_28=addr[31:28]                               PC-Out(S106)
	S129= PC.Out=addr+4                                         PC-Out(S107)
	S130= CP0.ASID=pid                                          CP0-Read-ASID(S112)
	S131= IR.Out={8,rS,rT,SIMM}                                 IR-Out(S116)
	S132= IR.Out31_26=8                                         IR-Out(S116)
	S133= IR.Out25_21=rS                                        IR-Out(S116)
	S134= IR.Out20_16=rT                                        IR-Out(S116)
	S135= IR.Out15_0=SIMM                                       IR-Out(S116)
	S136= A.Out=a                                               A-Out(S120)
	S137= A.Out1_0={a}[1:0]                                     A-Out(S120)
	S138= A.Out4_0={a}[4:0]                                     A-Out(S120)
	S139= B.Out={16{SIMM[15]},SIMM}                             B-Out(S122)
	S140= B.Out1_0={{16{SIMM[15]},SIMM}}[1:0]                   B-Out(S122)
	S141= B.Out4_0={{16{SIMM[15]},SIMM}}[4:0]                   B-Out(S122)
	S142= ALUOut.Out=a+{16{SIMM[15]},SIMM}                      ALUOut-Out(S124)
	S143= ALUOut.Out1_0={a+{16{SIMM[15]},SIMM}}[1:0]            ALUOut-Out(S124)
	S144= ALUOut.Out4_0={a+{16{SIMM[15]},SIMM}}[4:0]            ALUOut-Out(S124)
	S145= OVReg.Out=OverFlow(a+{16{SIMM[15]},SIMM})             OVReg-Out(S126)
	S146= OVReg.Out1_0={OverFlow(a+{16{SIMM[15]},SIMM})}[1:0]   OVReg-Out(S126)
	S147= OVReg.Out4_0={OverFlow(a+{16{SIMM[15]},SIMM})}[4:0]   OVReg-Out(S126)
	S148= CtrlPC=0                                              Premise(F56)
	S149= CtrlPCInc=0                                           Premise(F57)
	S150= PC[CIA]=addr                                          PC-Hold(S106,S149)
	S151= PC[Out]=addr+4                                        PC-Hold(S107,S148,S149)
	S152= CtrlIMem=0                                            Premise(F58)
	S153= IMem[{pid,addr}]={8,rS,rT,SIMM}                       IMem-Hold(S109,S152)
	S154= CtrlASIDIn=0                                          Premise(F59)
	S155= CtrlCP0=0                                             Premise(F60)
	S156= CP0[ASID]=pid                                         CP0-Hold(S112,S155)
	S157= CtrlEPCIn=0                                           Premise(F61)
	S158= CtrlExCodeIn=0                                        Premise(F62)
	S159= CtrlIR=0                                              Premise(F63)
	S160= [IR]={8,rS,rT,SIMM}                                   IR-Hold(S116,S159)
	S161= CtrlGPR=0                                             Premise(F64)
	S162= GPR[rS]=a                                             GPR-Hold(S118,S161)
	S163= CtrlA=0                                               Premise(F65)
	S164= [A]=a                                                 A-Hold(S120,S163)
	S165= CtrlB=0                                               Premise(F66)
	S166= [B]={16{SIMM[15]},SIMM}                               B-Hold(S122,S165)
	S167= CtrlALUOut=0                                          Premise(F67)
	S168= [ALUOut]=a+{16{SIMM[15]},SIMM}                        ALUOut-Hold(S124,S167)
	S169= CtrlOVReg=0                                           Premise(F68)
	S170= [OVReg]=OverFlow(a+{16{SIMM[15]},SIMM})               OVReg-Hold(S126,S169)

WB	S171= PC.CIA=addr                                           PC-Out(S150)
	S172= PC.CIA31_28=addr[31:28]                               PC-Out(S150)
	S173= PC.Out=addr+4                                         PC-Out(S151)
	S174= CP0.ASID=pid                                          CP0-Read-ASID(S156)
	S175= IR.Out={8,rS,rT,SIMM}                                 IR-Out(S160)
	S176= IR.Out31_26=8                                         IR-Out(S160)
	S177= IR.Out25_21=rS                                        IR-Out(S160)
	S178= IR.Out20_16=rT                                        IR-Out(S160)
	S179= IR.Out15_0=SIMM                                       IR-Out(S160)
	S180= A.Out=a                                               A-Out(S164)
	S181= A.Out1_0={a}[1:0]                                     A-Out(S164)
	S182= A.Out4_0={a}[4:0]                                     A-Out(S164)
	S183= B.Out={16{SIMM[15]},SIMM}                             B-Out(S166)
	S184= B.Out1_0={{16{SIMM[15]},SIMM}}[1:0]                   B-Out(S166)
	S185= B.Out4_0={{16{SIMM[15]},SIMM}}[4:0]                   B-Out(S166)
	S186= ALUOut.Out=a+{16{SIMM[15]},SIMM}                      ALUOut-Out(S168)
	S187= ALUOut.Out1_0={a+{16{SIMM[15]},SIMM}}[1:0]            ALUOut-Out(S168)
	S188= ALUOut.Out4_0={a+{16{SIMM[15]},SIMM}}[4:0]            ALUOut-Out(S168)
	S189= OVReg.Out=OverFlow(a+{16{SIMM[15]},SIMM})             OVReg-Out(S170)
	S190= OVReg.Out1_0={OverFlow(a+{16{SIMM[15]},SIMM})}[1:0]   OVReg-Out(S170)
	S191= OVReg.Out4_0={OverFlow(a+{16{SIMM[15]},SIMM})}[4:0]   OVReg-Out(S170)
	S192= IR.Out20_16=>GPR.WReg                                 Premise(F69)
	S193= GPR.WReg=rT                                           Path(S178,S192)
	S194= ALUOut.Out=>GPR.WData                                 Premise(F70)
	S195= GPR.WData=a+{16{SIMM[15]},SIMM}                       Path(S186,S194)
	S196= OVReg.Out=>CU.OV                                      Premise(F71)
	S197= CU.OV=OverFlow(a+{16{SIMM[15]},SIMM})                 Path(S189,S196)
	S198= CtrlPC=0                                              Premise(F72)
	S199= CtrlPCInc=0                                           Premise(F73)
	S200= PC[CIA]=addr                                          PC-Hold(S150,S199)
	S201= PC[Out]=addr+4                                        PC-Hold(S151,S198,S199)
	S202= CtrlIMem=0                                            Premise(F74)
	S203= IMem[{pid,addr}]={8,rS,rT,SIMM}                       IMem-Hold(S153,S202)
	S204= CtrlASIDIn=0                                          Premise(F75)
	S205= CtrlCP0=0                                             Premise(F76)
	S206= CP0[ASID]=pid                                         CP0-Hold(S156,S205)
	S207= CtrlEPCIn=0                                           Premise(F77)
	S208= CtrlExCodeIn=0                                        Premise(F78)
	S209= CtrlIR=0                                              Premise(F79)
	S210= [IR]={8,rS,rT,SIMM}                                   IR-Hold(S160,S209)
	S211= CtrlGPR=1                                             Premise(F80)
	S212= GPR[rT]=a+{16{SIMM[15]},SIMM}                         GPR-Write(S193,S195,S211)
	S213= CtrlA=0                                               Premise(F81)
	S214= [A]=a                                                 A-Hold(S164,S213)
	S215= CtrlB=0                                               Premise(F82)
	S216= [B]={16{SIMM[15]},SIMM}                               B-Hold(S166,S215)
	S217= CtrlALUOut=0                                          Premise(F83)
	S218= [ALUOut]=a+{16{SIMM[15]},SIMM}                        ALUOut-Hold(S168,S217)
	S219= CtrlOVReg=0                                           Premise(F84)
	S220= [OVReg]=OverFlow(a+{16{SIMM[15]},SIMM})               OVReg-Hold(S170,S219)

POST	S200= PC[CIA]=addr                                          PC-Hold(S150,S199)
	S201= PC[Out]=addr+4                                        PC-Hold(S151,S198,S199)
	S203= IMem[{pid,addr}]={8,rS,rT,SIMM}                       IMem-Hold(S153,S202)
	S206= CP0[ASID]=pid                                         CP0-Hold(S156,S205)
	S210= [IR]={8,rS,rT,SIMM}                                   IR-Hold(S160,S209)
	S212= GPR[rT]=a+{16{SIMM[15]},SIMM}                         GPR-Write(S193,S195,S211)
	S214= [A]=a                                                 A-Hold(S164,S213)
	S216= [B]={16{SIMM[15]},SIMM}                               B-Hold(S166,S215)
	S218= [ALUOut]=a+{16{SIMM[15]},SIMM}                        ALUOut-Hold(S168,S217)
	S220= [OVReg]=OverFlow(a+{16{SIMM[15]},SIMM})               OVReg-Hold(S170,S219)

