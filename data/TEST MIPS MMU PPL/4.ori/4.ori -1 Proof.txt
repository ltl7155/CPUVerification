
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={13,rS,rT,UIMM}                            Premise(F3)

IF	S2= PC.Out=addr                                             PC-Out(S0)
	S3= PC.Out=>ICache.IEA                                      Premise(F8)
	S4= ICache.IEA=addr                                         Path(S2,S3)
	S5= ICache.Out={13,rS,rT,UIMM}                              ICache-Search(S4,S1)
	S6= ICache.Out=>IR_ID.In                                    Premise(F12)
	S7= IR_ID.In={13,rS,rT,UIMM}                                Path(S5,S6)
	S8= CtrlPC=0                                                Premise(F25)
	S9= CtrlPCInc=1                                             Premise(F26)
	S10= PC[Out]=addr+4                                         PC-Inc(S0,S8,S9)
	S11= CtrlIR_ID=1                                            Premise(F31)
	S12= [IR_ID]={13,rS,rT,UIMM}                                IR_ID-Write(S7,S11)
	S13= GPR[rS]=a                                              Premise(F50)

ID	S14= IR_ID.Out={13,rS,rT,UIMM}                              IR-Out(S12)
	S15= IR_ID.Out25_21=rS                                      IR-Out(S12)
	S16= IR_ID.Out15_0=UIMM                                     IR-Out(S12)
	S17= IR_ID.Out25_21=>GPR.RReg1                              Premise(F85)
	S18= GPR.RReg1=rS                                           Path(S15,S17)
	S19= GPR.Rdata1=a                                           GPR-Read(S18,S13)
	S20= IR_ID.Out15_0=>LIMMEXT.In                              Premise(F86)
	S21= LIMMEXT.In=UIMM                                        Path(S16,S20)
	S22= LIMMEXT.Out={16{0},UIMM}                               LIMMEXT(S21)
	S23= GPR.Rdata1=>FU.InID1                                   Premise(F87)
	S24= FU.InID1=a                                             Path(S19,S23)
	S25= FU.OutID1=FU(a)                                        FU-Forward(S24)
	S26= FU.OutID1=>A_EX.In                                     Premise(F89)
	S27= A_EX.In=FU(a)                                          Path(S25,S26)
	S28= LIMMEXT.Out=>B_EX.In                                   Premise(F90)
	S29= B_EX.In={16{0},UIMM}                                   Path(S22,S28)
	S30= IR_ID.Out=>IR_EX.In                                    Premise(F91)
	S31= IR_EX.In={13,rS,rT,UIMM}                               Path(S14,S30)
	S32= CtrlPC=0                                               Premise(F100)
	S33= CtrlPCInc=0                                            Premise(F101)
	S34= PC[Out]=addr+4                                         PC-Hold(S10,S32,S33)
	S35= CtrlA_EX=1                                             Premise(F110)
	S36= [A_EX]=FU(a)                                           A_EX-Write(S27,S35)
	S37= CtrlB_EX=1                                             Premise(F111)
	S38= [B_EX]={16{0},UIMM}                                    B_EX-Write(S29,S37)
	S39= CtrlIR_EX=1                                            Premise(F112)
	S40= [IR_EX]={13,rS,rT,UIMM}                                IR_EX-Write(S31,S39)

EX	S41= A_EX.Out=FU(a)                                         A_EX-Out(S36)
	S42= B_EX.Out={16{0},UIMM}                                  B_EX-Out(S38)
	S43= IR_EX.Out={13,rS,rT,UIMM}                              IR_EX-Out(S40)
	S44= A_EX.Out=>ALU.A                                        Premise(F129)
	S45= ALU.A=FU(a)                                            Path(S41,S44)
	S46= B_EX.Out=>ALU.B                                        Premise(F130)
	S47= ALU.B={16{0},UIMM}                                     Path(S42,S46)
	S48= ALU.Out=FU(a)|{16{0},UIMM}                             ALU(S45,S47)
	S49= ALU.Out=>ALUOut_MEM.In                                 Premise(F132)
	S50= ALUOut_MEM.In=FU(a)|{16{0},UIMM}                       Path(S48,S49)
	S51= IR_EX.Out=>IR_MEM.In                                   Premise(F135)
	S52= IR_MEM.In={13,rS,rT,UIMM}                              Path(S43,S51)
	S53= CtrlPC=0                                               Premise(F141)
	S54= CtrlPCInc=0                                            Premise(F142)
	S55= PC[Out]=addr+4                                         PC-Hold(S34,S53,S54)
	S56= CtrlALUOut_MEM=1                                       Premise(F154)
	S57= [ALUOut_MEM]=FU(a)|{16{0},UIMM}                        ALUOut_MEM-Write(S50,S56)
	S58= CtrlIR_MEM=1                                           Premise(F155)
	S59= [IR_MEM]={13,rS,rT,UIMM}                               IR_MEM-Write(S52,S58)

MEM	S60= ALUOut_MEM.Out=FU(a)|{16{0},UIMM}                      ALUOut_MEM-Out(S57)
	S61= IR_MEM.Out={13,rS,rT,UIMM}                             IR_MEM-Out(S59)
	S62= IR_MEM.Out=>IR_WB.In                                   Premise(F173)
	S63= IR_WB.In={13,rS,rT,UIMM}                               Path(S61,S62)
	S64= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F179)
	S65= ALUOut_WB.In=FU(a)|{16{0},UIMM}                        Path(S60,S64)
	S66= CtrlPC=0                                               Premise(F187)
	S67= CtrlPCInc=0                                            Premise(F188)
	S68= PC[Out]=addr+4                                         PC-Hold(S55,S66,S67)
	S69= CtrlIR_WB=1                                            Premise(F203)
	S70= [IR_WB]={13,rS,rT,UIMM}                                IR_WB-Write(S63,S69)
	S71= CtrlALUOut_WB=1                                        Premise(F209)
	S72= [ALUOut_WB]=FU(a)|{16{0},UIMM}                         ALUOut_WB-Write(S65,S71)

WB	S73= IR_WB.Out20_16=rT                                      IR-Out(S70)
	S74= ALUOut_WB.Out=FU(a)|{16{0},UIMM}                       ALUOut_WB-Out(S72)
	S75= IR_WB.Out20_16=>GPR.WReg                               Premise(F293)
	S76= GPR.WReg=rT                                            Path(S73,S75)
	S77= ALUOut_WB.Out=>GPR.WData                               Premise(F294)
	S78= GPR.WData=FU(a)|{16{0},UIMM}                           Path(S74,S77)
	S79= CtrlPC=0                                               Premise(F302)
	S80= CtrlPCInc=0                                            Premise(F303)
	S81= PC[Out]=addr+4                                         PC-Hold(S68,S79,S80)
	S82= CtrlGPR=1                                              Premise(F311)
	S83= GPR[rT]=FU(a)|{16{0},UIMM}                             GPR-Write(S76,S78,S82)

POST	S81= PC[Out]=addr+4                                         PC-Hold(S68,S79,S80)
	S83= GPR[rT]=FU(a)|{16{0},UIMM}                             GPR-Write(S76,S78,S82)

