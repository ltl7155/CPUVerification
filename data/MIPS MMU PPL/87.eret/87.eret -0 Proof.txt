
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={16,1,0,24}                            Premise(F2)
	S3= CP0[EPC]=epc                                            Premise(F3)
	S4= [PIDReg]=a                                              Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S13= IAddrReg.In={pid,addr}                                 Path(S11,S12)
	S14= CtrlCP0=0                                              Premise(F22)
	S15= CP0[EPC]=epc                                           CP0-Hold(S3,S14)
	S16= CtrlPC=0                                               Premise(F26)
	S17= CtrlPCInc=0                                            Premise(F27)
	S18= PC[Out]=addr                                           PC-Hold(S1,S16,S17)
	S19= CtrlIAddrReg=1                                         Premise(F28)
	S20= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S19)
	S21= CtrlIMem=0                                             Premise(F33)
	S22= IMem[{pid,addr}]={16,1,0,24}                           IMem-Hold(S2,S21)
	S23= CtrlPIDReg=0                                           Premise(F35)
	S24= [PIDReg]=a                                             PIDReg-Hold(S4,S23)

IF(IMMU)	S25= PC.Out=addr                                            PC-Out(S18)
	S26= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S20)
	S27= IAddrReg.Out=>IMem.RAddr                               Premise(F44)
	S28= IMem.RAddr={pid,addr}                                  Path(S26,S27)
	S29= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S28,S22)
	S30= IMem.MEM8WordOut=>ICache.WData                         Premise(F50)
	S31= ICache.WData=IMemGet8Word({pid,addr})                  Path(S29,S30)
	S32= PC.Out=>ICache.IEA                                     Premise(F51)
	S33= ICache.IEA=addr                                        Path(S25,S32)
	S34= CtrlCP0=0                                              Premise(F55)
	S35= CP0[EPC]=epc                                           CP0-Hold(S15,S34)
	S36= CtrlICache=1                                           Premise(F62)
	S37= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S33,S31,S36)
	S38= CtrlPIDReg=0                                           Premise(F68)
	S39= [PIDReg]=a                                             PIDReg-Hold(S24,S38)

ID	S40= CP0.EPC=epc                                            CP0-Read-EPC(S35)
	S41= PIDReg.Out=a                                           PIDReg-Out(S39)
	S42= PIDReg.Out=>CP0.ASIDIn                                 Premise(F79)
	S43= CP0.ASIDIn=a                                           Path(S41,S42)
	S44= CP0.EPC=>PC.In                                         Premise(F80)
	S45= PC.In=epc                                              Path(S40,S44)
	S46= CtrlASIDIn=1                                           Premise(F86)
	S47= CP0[ASID]=a                                            CP0-Write-ASID(S43,S46)
	S48= CtrlPC=1                                               Premise(F91)
	S49= CtrlPCInc=0                                            Premise(F92)
	S50= PC[Out]=epc                                            PC-Write(S45,S48,S49)
	S51= CtrlICache=0                                           Premise(F94)
	S52= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S37,S51)

EX	S53= CtrlCP0=0                                              Premise(F114)
	S54= CP0[ASID]=a                                            CP0-Hold(S47,S53)
	S55= CtrlPC=0                                               Premise(F118)
	S56= CtrlPCInc=0                                            Premise(F119)
	S57= PC[Out]=epc                                            PC-Hold(S50,S55,S56)
	S58= CtrlICache=0                                           Premise(F121)
	S59= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S52,S58)

MEM	S60= CtrlCP0=0                                              Premise(F146)
	S61= CP0[ASID]=a                                            CP0-Hold(S54,S60)
	S62= CtrlPC=0                                               Premise(F150)
	S63= CtrlPCInc=0                                            Premise(F151)
	S64= PC[Out]=epc                                            PC-Hold(S57,S62,S63)
	S65= CtrlICache=0                                           Premise(F153)
	S66= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S59,S65)

MEM(DMMU1)	S67= CtrlCP0=0                                              Premise(F176)
	S68= CP0[ASID]=a                                            CP0-Hold(S61,S67)
	S69= CtrlPC=0                                               Premise(F180)
	S70= CtrlPCInc=0                                            Premise(F181)
	S71= PC[Out]=epc                                            PC-Hold(S64,S69,S70)
	S72= CtrlICache=0                                           Premise(F183)
	S73= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S66,S72)

MEM(DMMU2)	S74= CtrlCP0=0                                              Premise(F203)
	S75= CP0[ASID]=a                                            CP0-Hold(S68,S74)
	S76= CtrlPC=0                                               Premise(F207)
	S77= CtrlPCInc=0                                            Premise(F208)
	S78= PC[Out]=epc                                            PC-Hold(S71,S76,S77)
	S79= CtrlICache=0                                           Premise(F210)
	S80= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S73,S79)

WB	S81= CtrlCP0=0                                              Premise(F227)
	S82= CP0[ASID]=a                                            CP0-Hold(S75,S81)
	S83= CtrlPC=0                                               Premise(F231)
	S84= CtrlPCInc=0                                            Premise(F232)
	S85= PC[Out]=epc                                            PC-Hold(S78,S83,S84)
	S86= CtrlICache=0                                           Premise(F234)
	S87= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S80,S86)

POST	S82= CP0[ASID]=a                                            CP0-Hold(S75,S81)
	S85= PC[Out]=epc                                            PC-Hold(S78,S83,S84)
	S87= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S80,S86)

