
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={32,rS,rT,offset}                      Premise(F2)
	S3= ICache[addr]={32,rS,rT,offset}                          Premise(F3)
	S4= GPR[rS]=base                                            Premise(F4)
	S5= DMem[{pid,base+{16{offset[15]},offset}}]=a              Premise(F5)
	S6= DCache[base+{16{offset[15]},offset}]=a                  Premise(F6)
	S7= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataPremise(F7)

IF	S8= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S9= PC.Out=addr                                             PC-Out(S1)
	S10= CP0.ASID=>IMMU.PID                                     Premise(F8)
	S11= IMMU.PID=pid                                           Path(S8,S10)
	S12= PC.Out=>IMMU.IEA                                       Premise(F9)
	S13= IMMU.IEA=addr                                          Path(S9,S12)
	S14= IMMU.Addr={pid,addr}                                   IMMU-Search(S11,S13)
	S15= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S11,S13)
	S16= IMMU.Addr=>IAddrReg.In                                 Premise(F10)
	S17= IAddrReg.In={pid,addr}                                 Path(S14,S16)
	S18= IMMU.Hit=>CU.IMMUHit                                   Premise(F11)
	S19= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S15,S18)
	S20= PC.Out=>ICache.IEA                                     Premise(F12)
	S21= ICache.IEA=addr                                        Path(S9,S20)
	S22= ICache.Hit=ICacheHit(addr)                             ICache-Search(S21)
	S23= ICache.Out={32,rS,rT,offset}                           ICache-Search(S21,S3)
	S24= ICache.Out=>IR.In                                      Premise(F13)
	S25= IR.In={32,rS,rT,offset}                                Path(S23,S24)
	S26= ICache.Out=>ICacheReg.In                               Premise(F14)
	S27= ICacheReg.In={32,rS,rT,offset}                         Path(S23,S26)
	S28= ICache.Hit=>CU.ICacheHit                               Premise(F15)
	S29= CU.ICacheHit=ICacheHit(addr)                           Path(S22,S28)
	S30= CtrlASIDIn=0                                           Premise(F16)
	S31= CtrlCP0=0                                              Premise(F17)
	S32= CP0[ASID]=pid                                          CP0-Hold(S0,S31)
	S33= CtrlEPCIn=0                                            Premise(F18)
	S34= CtrlExCodeIn=0                                         Premise(F19)
	S35= CtrlIMMU=0                                             Premise(F20)
	S36= CtrlPC=0                                               Premise(F21)
	S37= CtrlPCInc=1                                            Premise(F22)
	S38= PC[Out]=addr+4                                         PC-Inc(S1,S36,S37)
	S39= PC[CIA]=addr                                           PC-Inc(S1,S36,S37)
	S40= CtrlIAddrReg=0                                         Premise(F23)
	S41= CtrlICache=0                                           Premise(F24)
	S42= ICache[addr]={32,rS,rT,offset}                         ICache-Hold(S3,S41)
	S43= CtrlIR=1                                               Premise(F25)
	S44= [IR]={32,rS,rT,offset}                                 IR-Write(S25,S43)
	S45= CtrlICacheReg=0                                        Premise(F26)
	S46= CtrlIMem=0                                             Premise(F27)
	S47= IMem[{pid,addr}]={32,rS,rT,offset}                     IMem-Hold(S2,S46)
	S48= CtrlIRMux=0                                            Premise(F28)
	S49= CtrlGPR=0                                              Premise(F29)
	S50= GPR[rS]=base                                           GPR-Hold(S4,S49)
	S51= CtrlA=0                                                Premise(F30)
	S52= CtrlB=0                                                Premise(F31)
	S53= CtrlALUOut=0                                           Premise(F32)
	S54= CtrlDMMU=0                                             Premise(F33)
	S55= CtrlDAddrReg=0                                         Premise(F34)
	S56= CtrlDCache=0                                           Premise(F35)
	S57= DCache[base+{16{offset[15]},offset}]=a                 DCache-Hold(S6,S56)
	S58= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S7,S56)
	S59= CtrlDCacheReg=0                                        Premise(F36)
	S60= CtrlDR=0                                               Premise(F37)
	S61= CtrlDMem=0                                             Premise(F38)
	S62= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S5,S61)
	S63= CtrlDMem8Word=0                                        Premise(F39)

ID	S64= CP0.ASID=pid                                           CP0-Read-ASID(S32)
	S65= PC.Out=addr+4                                          PC-Out(S38)
	S66= PC.CIA=addr                                            PC-Out(S39)
	S67= PC.CIA31_28=addr[31:28]                                PC-Out(S39)
	S68= IR.Out={32,rS,rT,offset}                               IR-Out(S44)
	S69= IR.Out31_26=32                                         IR-Out(S44)
	S70= IR.Out25_21=rS                                         IR-Out(S44)
	S71= IR.Out20_16=rT                                         IR-Out(S44)
	S72= IR.Out15_0=offset                                      IR-Out(S44)
	S73= IR.Out31_26=>CU.Op                                     Premise(F64)
	S74= CU.Op=32                                               Path(S69,S73)
	S75= CU.Func=alu_add                                        CU(S74)
	S76= CU.MemDataSelFunc=mds_lwz                              CU(S74)
	S77= IR.Out25_21=>GPR.RReg1                                 Premise(F65)
	S78= GPR.RReg1=rS                                           Path(S70,S77)
	S79= GPR.Rdata1=base                                        GPR-Read(S78,S50)
	S80= IR.Out15_0=>IMMEXT.In                                  Premise(F66)
	S81= IMMEXT.In=offset                                       Path(S72,S80)
	S82= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S81)
	S83= GPR.Rdata1=>A.In                                       Premise(F67)
	S84= A.In=base                                              Path(S79,S83)
	S85= IMMEXT.Out=>B.In                                       Premise(F68)
	S86= B.In={16{offset[15]},offset}                           Path(S82,S85)
	S87= CtrlASIDIn=0                                           Premise(F69)
	S88= CtrlCP0=0                                              Premise(F70)
	S89= CP0[ASID]=pid                                          CP0-Hold(S32,S88)
	S90= CtrlEPCIn=0                                            Premise(F71)
	S91= CtrlExCodeIn=0                                         Premise(F72)
	S92= CtrlIMMU=0                                             Premise(F73)
	S93= CtrlPC=0                                               Premise(F74)
	S94= CtrlPCInc=0                                            Premise(F75)
	S95= PC[CIA]=addr                                           PC-Hold(S39,S94)
	S96= PC[Out]=addr+4                                         PC-Hold(S38,S93,S94)
	S97= CtrlIAddrReg=0                                         Premise(F76)
	S98= CtrlICache=0                                           Premise(F77)
	S99= ICache[addr]={32,rS,rT,offset}                         ICache-Hold(S42,S98)
	S100= CtrlIR=0                                              Premise(F78)
	S101= [IR]={32,rS,rT,offset}                                IR-Hold(S44,S100)
	S102= CtrlICacheReg=0                                       Premise(F79)
	S103= CtrlIMem=0                                            Premise(F80)
	S104= IMem[{pid,addr}]={32,rS,rT,offset}                    IMem-Hold(S47,S103)
	S105= CtrlIRMux=0                                           Premise(F81)
	S106= CtrlGPR=0                                             Premise(F82)
	S107= GPR[rS]=base                                          GPR-Hold(S50,S106)
	S108= CtrlA=1                                               Premise(F83)
	S109= [A]=base                                              A-Write(S84,S108)
	S110= CtrlB=1                                               Premise(F84)
	S111= [B]={16{offset[15]},offset}                           B-Write(S86,S110)
	S112= CtrlALUOut=0                                          Premise(F85)
	S113= CtrlDMMU=0                                            Premise(F86)
	S114= CtrlDAddrReg=0                                        Premise(F87)
	S115= CtrlDCache=0                                          Premise(F88)
	S116= DCache[base+{16{offset[15]},offset}]=a                DCache-Hold(S57,S115)
	S117= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S58,S115)
	S118= CtrlDCacheReg=0                                       Premise(F89)
	S119= CtrlDR=0                                              Premise(F90)
	S120= CtrlDMem=0                                            Premise(F91)
	S121= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S62,S120)
	S122= CtrlDMem8Word=0                                       Premise(F92)

EX	S123= CP0.ASID=pid                                          CP0-Read-ASID(S89)
	S124= PC.CIA=addr                                           PC-Out(S95)
	S125= PC.CIA31_28=addr[31:28]                               PC-Out(S95)
	S126= PC.Out=addr+4                                         PC-Out(S96)
	S127= IR.Out={32,rS,rT,offset}                              IR-Out(S101)
	S128= IR.Out31_26=32                                        IR-Out(S101)
	S129= IR.Out25_21=rS                                        IR-Out(S101)
	S130= IR.Out20_16=rT                                        IR-Out(S101)
	S131= IR.Out15_0=offset                                     IR-Out(S101)
	S132= A.Out=base                                            A-Out(S109)
	S133= A.Out1_0={base}[1:0]                                  A-Out(S109)
	S134= A.Out4_0={base}[4:0]                                  A-Out(S109)
	S135= B.Out={16{offset[15]},offset}                         B-Out(S111)
	S136= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S111)
	S137= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S111)
	S138= A.Out=>ALU.A                                          Premise(F93)
	S139= ALU.A=base                                            Path(S132,S138)
	S140= B.Out=>ALU.B                                          Premise(F94)
	S141= ALU.B={16{offset[15]},offset}                         Path(S135,S140)
	S142= ALU.Func=6'b010010                                    Premise(F95)
	S143= ALU.Out=base+{16{offset[15]},offset}                  ALU(S139,S141)
	S144= ALU.Out1_0={base+{16{offset[15]},offset}}[1:0]        ALU(S139,S141)
	S145= ALU.CMP=Compare0(base+{16{offset[15]},offset})        ALU(S139,S141)
	S146= ALU.OV=OverFlow(base+{16{offset[15]},offset})         ALU(S139,S141)
	S147= ALU.CA=Carry(base+{16{offset[15]},offset})            ALU(S139,S141)
	S148= ALU.Out=>ALUOut.In                                    Premise(F96)
	S149= ALUOut.In=base+{16{offset[15]},offset}                Path(S143,S148)
	S150= CtrlASIDIn=0                                          Premise(F97)
	S151= CtrlCP0=0                                             Premise(F98)
	S152= CP0[ASID]=pid                                         CP0-Hold(S89,S151)
	S153= CtrlEPCIn=0                                           Premise(F99)
	S154= CtrlExCodeIn=0                                        Premise(F100)
	S155= CtrlIMMU=0                                            Premise(F101)
	S156= CtrlPC=0                                              Premise(F102)
	S157= CtrlPCInc=0                                           Premise(F103)
	S158= PC[CIA]=addr                                          PC-Hold(S95,S157)
	S159= PC[Out]=addr+4                                        PC-Hold(S96,S156,S157)
	S160= CtrlIAddrReg=0                                        Premise(F104)
	S161= CtrlICache=0                                          Premise(F105)
	S162= ICache[addr]={32,rS,rT,offset}                        ICache-Hold(S99,S161)
	S163= CtrlIR=0                                              Premise(F106)
	S164= [IR]={32,rS,rT,offset}                                IR-Hold(S101,S163)
	S165= CtrlICacheReg=0                                       Premise(F107)
	S166= CtrlIMem=0                                            Premise(F108)
	S167= IMem[{pid,addr}]={32,rS,rT,offset}                    IMem-Hold(S104,S166)
	S168= CtrlIRMux=0                                           Premise(F109)
	S169= CtrlGPR=0                                             Premise(F110)
	S170= GPR[rS]=base                                          GPR-Hold(S107,S169)
	S171= CtrlA=0                                               Premise(F111)
	S172= [A]=base                                              A-Hold(S109,S171)
	S173= CtrlB=0                                               Premise(F112)
	S174= [B]={16{offset[15]},offset}                           B-Hold(S111,S173)
	S175= CtrlALUOut=1                                          Premise(F113)
	S176= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Write(S149,S175)
	S177= CtrlDMMU=0                                            Premise(F114)
	S178= CtrlDAddrReg=0                                        Premise(F115)
	S179= CtrlDCache=0                                          Premise(F116)
	S180= DCache[base+{16{offset[15]},offset}]=a                DCache-Hold(S116,S179)
	S181= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S117,S179)
	S182= CtrlDCacheReg=0                                       Premise(F117)
	S183= CtrlDR=0                                              Premise(F118)
	S184= CtrlDMem=0                                            Premise(F119)
	S185= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S121,S184)
	S186= CtrlDMem8Word=0                                       Premise(F120)

MEM	S187= CP0.ASID=pid                                          CP0-Read-ASID(S152)
	S188= PC.CIA=addr                                           PC-Out(S158)
	S189= PC.CIA31_28=addr[31:28]                               PC-Out(S158)
	S190= PC.Out=addr+4                                         PC-Out(S159)
	S191= IR.Out={32,rS,rT,offset}                              IR-Out(S164)
	S192= IR.Out31_26=32                                        IR-Out(S164)
	S193= IR.Out25_21=rS                                        IR-Out(S164)
	S194= IR.Out20_16=rT                                        IR-Out(S164)
	S195= IR.Out15_0=offset                                     IR-Out(S164)
	S196= A.Out=base                                            A-Out(S172)
	S197= A.Out1_0={base}[1:0]                                  A-Out(S172)
	S198= A.Out4_0={base}[4:0]                                  A-Out(S172)
	S199= B.Out={16{offset[15]},offset}                         B-Out(S174)
	S200= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S174)
	S201= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S174)
	S202= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S176)
	S203= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S176)
	S204= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S176)
	S205= CP0.ASID=>DMMU.PID                                    Premise(F121)
	S206= DMMU.PID=pid                                          Path(S187,S205)
	S207= ALUOut.Out=>DMMU.IEA                                  Premise(F122)
	S208= DMMU.IEA=base+{16{offset[15]},offset}                 Path(S202,S207)
	S209= DMMU.Addr={pid,base+{16{offset[15]},offset}}          DMMU-Search(S206,S208)
	S210= DMMU.Hit=DMMUHit(pid,base+{16{offset[15]},offset})    DMMU-Search(S206,S208)
	S211= DMMU.Addr=>DAddrReg.In                                Premise(F123)
	S212= DAddrReg.In={pid,base+{16{offset[15]},offset}}        Path(S209,S211)
	S213= DMMU.Hit=>CU.DMMUHit                                  Premise(F124)
	S214= CU.DMMUHit=DMMUHit(pid,base+{16{offset[15]},offset})  Path(S210,S213)
	S215= ALUOut.Out=>DCache.IEA                                Premise(F125)
	S216= DCache.IEA=base+{16{offset[15]},offset}               Path(S202,S215)
	S217= DCache.Hit=DCacheHit(base+{16{offset[15]},offset})    DCache-Search(S216)
	S218= DCache.Out=a                                          DCache-Search(S216,S180)
	S219= DCache.Out=>DCacheReg.In                              Premise(F126)
	S220= DCacheReg.In=a                                        Path(S218,S219)
	S221= DCache.Out=>DR.In                                     Premise(F127)
	S222= DR.In=a                                               Path(S218,S221)
	S223= DCache.Hit=>CU.DCacheHit                              Premise(F128)
	S224= CU.DCacheHit=DCacheHit(base+{16{offset[15]},offset})  Path(S217,S223)
	S225= CtrlASIDIn=0                                          Premise(F129)
	S226= CtrlCP0=0                                             Premise(F130)
	S227= CP0[ASID]=pid                                         CP0-Hold(S152,S226)
	S228= CtrlEPCIn=0                                           Premise(F131)
	S229= CtrlExCodeIn=0                                        Premise(F132)
	S230= CtrlIMMU=0                                            Premise(F133)
	S231= CtrlPC=0                                              Premise(F134)
	S232= CtrlPCInc=0                                           Premise(F135)
	S233= PC[CIA]=addr                                          PC-Hold(S158,S232)
	S234= PC[Out]=addr+4                                        PC-Hold(S159,S231,S232)
	S235= CtrlIAddrReg=0                                        Premise(F136)
	S236= CtrlICache=0                                          Premise(F137)
	S237= ICache[addr]={32,rS,rT,offset}                        ICache-Hold(S162,S236)
	S238= CtrlIR=0                                              Premise(F138)
	S239= [IR]={32,rS,rT,offset}                                IR-Hold(S164,S238)
	S240= CtrlICacheReg=0                                       Premise(F139)
	S241= CtrlIMem=0                                            Premise(F140)
	S242= IMem[{pid,addr}]={32,rS,rT,offset}                    IMem-Hold(S167,S241)
	S243= CtrlIRMux=0                                           Premise(F141)
	S244= CtrlGPR=0                                             Premise(F142)
	S245= GPR[rS]=base                                          GPR-Hold(S170,S244)
	S246= CtrlA=0                                               Premise(F143)
	S247= [A]=base                                              A-Hold(S172,S246)
	S248= CtrlB=0                                               Premise(F144)
	S249= [B]={16{offset[15]},offset}                           B-Hold(S174,S248)
	S250= CtrlALUOut=0                                          Premise(F145)
	S251= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S176,S250)
	S252= CtrlDMMU=0                                            Premise(F146)
	S253= CtrlDAddrReg=0                                        Premise(F147)
	S254= CtrlDCache=0                                          Premise(F148)
	S255= DCache[base+{16{offset[15]},offset}]=a                DCache-Hold(S180,S254)
	S256= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S181,S254)
	S257= CtrlDCacheReg=0                                       Premise(F149)
	S258= CtrlDR=1                                              Premise(F150)
	S259= [DR]=a                                                DR-Write(S222,S258)
	S260= CtrlDMem=0                                            Premise(F151)
	S261= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S185,S260)
	S262= CtrlDMem8Word=0                                       Premise(F152)

WB	S263= CP0.ASID=pid                                          CP0-Read-ASID(S227)
	S264= PC.CIA=addr                                           PC-Out(S233)
	S265= PC.CIA31_28=addr[31:28]                               PC-Out(S233)
	S266= PC.Out=addr+4                                         PC-Out(S234)
	S267= IR.Out={32,rS,rT,offset}                              IR-Out(S239)
	S268= IR.Out31_26=32                                        IR-Out(S239)
	S269= IR.Out25_21=rS                                        IR-Out(S239)
	S270= IR.Out20_16=rT                                        IR-Out(S239)
	S271= IR.Out15_0=offset                                     IR-Out(S239)
	S272= A.Out=base                                            A-Out(S247)
	S273= A.Out1_0={base}[1:0]                                  A-Out(S247)
	S274= A.Out4_0={base}[4:0]                                  A-Out(S247)
	S275= B.Out={16{offset[15]},offset}                         B-Out(S249)
	S276= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S249)
	S277= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S249)
	S278= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S251)
	S279= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S251)
	S280= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S251)
	S281= DR.Out=a                                              DR-Out(S259)
	S282= DR.Out1_0={a}[1:0]                                    DR-Out(S259)
	S283= DR.Out4_0={a}[4:0]                                    DR-Out(S259)
	S284= IR.Out20_16=>GPR.WReg                                 Premise(F201)
	S285= GPR.WReg=rT                                           Path(S270,S284)
	S286= DR.Out=>MemDataSelL.In                                Premise(F202)
	S287= MemDataSelL.In=a                                      Path(S281,S286)
	S288= ALUOut.Out1_0=>MemDataSelL.Addr                       Premise(F203)
	S289= MemDataSelL.Addr={base+{16{offset[15]},offset}}[1:0]  Path(S279,S288)
	S290= MemDataSelL.Func=6'b001001                            Premise(F204)
	S291= MemDataSelL.Out={24{a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8][7]},a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8]}MemDataSelL(S287,S289)
	S292= MemDataSelL.Out=>GPR.WData                            Premise(F205)
	S293= GPR.WData={24{a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8][7]},a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8]}Path(S291,S292)
	S294= CtrlASIDIn=0                                          Premise(F206)
	S295= CtrlCP0=0                                             Premise(F207)
	S296= CP0[ASID]=pid                                         CP0-Hold(S227,S295)
	S297= CtrlEPCIn=0                                           Premise(F208)
	S298= CtrlExCodeIn=0                                        Premise(F209)
	S299= CtrlIMMU=0                                            Premise(F210)
	S300= CtrlPC=0                                              Premise(F211)
	S301= CtrlPCInc=0                                           Premise(F212)
	S302= PC[CIA]=addr                                          PC-Hold(S233,S301)
	S303= PC[Out]=addr+4                                        PC-Hold(S234,S300,S301)
	S304= CtrlIAddrReg=0                                        Premise(F213)
	S305= CtrlICache=0                                          Premise(F214)
	S306= ICache[addr]={32,rS,rT,offset}                        ICache-Hold(S237,S305)
	S307= CtrlIR=0                                              Premise(F215)
	S308= [IR]={32,rS,rT,offset}                                IR-Hold(S239,S307)
	S309= CtrlICacheReg=0                                       Premise(F216)
	S310= CtrlIMem=0                                            Premise(F217)
	S311= IMem[{pid,addr}]={32,rS,rT,offset}                    IMem-Hold(S242,S310)
	S312= CtrlIRMux=0                                           Premise(F218)
	S313= CtrlGPR=1                                             Premise(F219)
	S314= GPR[rT]={24{a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8][7]},a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S285,S293,S313)
	S315= CtrlA=0                                               Premise(F220)
	S316= [A]=base                                              A-Hold(S247,S315)
	S317= CtrlB=0                                               Premise(F221)
	S318= [B]={16{offset[15]},offset}                           B-Hold(S249,S317)
	S319= CtrlALUOut=0                                          Premise(F222)
	S320= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S251,S319)
	S321= CtrlDMMU=0                                            Premise(F223)
	S322= CtrlDAddrReg=0                                        Premise(F224)
	S323= CtrlDCache=0                                          Premise(F225)
	S324= DCache[base+{16{offset[15]},offset}]=a                DCache-Hold(S255,S323)
	S325= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S256,S323)
	S326= CtrlDCacheReg=0                                       Premise(F226)
	S327= CtrlDR=0                                              Premise(F227)
	S328= [DR]=a                                                DR-Hold(S259,S327)
	S329= CtrlDMem=0                                            Premise(F228)
	S330= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S261,S329)
	S331= CtrlDMem8Word=0                                       Premise(F229)

POST	S296= CP0[ASID]=pid                                         CP0-Hold(S227,S295)
	S302= PC[CIA]=addr                                          PC-Hold(S233,S301)
	S303= PC[Out]=addr+4                                        PC-Hold(S234,S300,S301)
	S306= ICache[addr]={32,rS,rT,offset}                        ICache-Hold(S237,S305)
	S308= [IR]={32,rS,rT,offset}                                IR-Hold(S239,S307)
	S311= IMem[{pid,addr}]={32,rS,rT,offset}                    IMem-Hold(S242,S310)
	S314= GPR[rT]={24{a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8][7]},a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S285,S293,S313)
	S316= [A]=base                                              A-Hold(S247,S315)
	S318= [B]={16{offset[15]},offset}                           B-Hold(S249,S317)
	S320= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S251,S319)
	S324= DCache[base+{16{offset[15]},offset}]=a                DCache-Hold(S255,S323)
	S325= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S256,S323)
	S328= [DR]=a                                                DR-Hold(S259,S327)
	S330= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S261,S329)

