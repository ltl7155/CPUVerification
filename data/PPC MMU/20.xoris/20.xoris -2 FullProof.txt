
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={27,rS,rA,UIMM}                        Premise(F2)
	S3= ICache[addr]={27,rS,rA,UIMM}                            Premise(F3)
	S4= GPRegs[rS]=a                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S8= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S9= PC.Out=addr                                             PC-Out(S1)
	S10= XER.SOOut=so                                           XER-SO-Out(S5)
	S11= PIDReg.Out=>IMMU.PID                                   Premise(F6)
	S12= IMMU.PID=pid                                           Path(S6,S11)
	S13= PC.Out=>IMMU.IEA                                       Premise(F7)
	S14= IMMU.IEA=addr                                          Path(S9,S13)
	S15= IMMU.Addr={pid,addr}                                   IMMU-Search(S12,S14)
	S16= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S12,S14)
	S17= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S18= IAddrReg.In={pid,addr}                                 Path(S15,S17)
	S19= IMMU.Hit=>IMMUHitReg.In                                Premise(F9)
	S20= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S16,S19)
	S21= PC.Out=>ICache.IEA                                     Premise(F10)
	S22= ICache.IEA=addr                                        Path(S9,S21)
	S23= ICache.Hit=ICacheHit(addr)                             ICache-Search(S22)
	S24= ICache.Out={27,rS,rA,UIMM}                             ICache-Search(S22,S3)
	S25= ICache.Out=>ICacheReg.In                               Premise(F11)
	S26= ICacheReg.In={27,rS,rA,UIMM}                           Path(S24,S25)
	S27= ICache.Hit=>ICacheHitReg.In                            Premise(F12)
	S28= ICacheHitReg.In=ICacheHit(addr)                        Path(S23,S27)
	S29= IMMUHitReg.Out=>CU.IMemHit                             Premise(F13)
	S30= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F14)
	S31= IAddrReg.Out=>IMem.RAddr                               Premise(F15)
	S32= IMem.Out=>IRMux.MemData                                Premise(F16)
	S33= ICacheReg.Out=>IRMux.CacheData                         Premise(F17)
	S34= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F18)
	S35= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F19)
	S36= IRMux.Out=>IR.In                                       Premise(F20)
	S37= IMem.MEM8WordOut=>ICache.WData                         Premise(F21)
	S38= PC.Out=>ICache.IEA                                     Premise(F22)
	S39= IR.Out0_5=>CU.Op                                       Premise(F23)
	S40= IR.Out6_10=>GPRegs.RReg1                               Premise(F24)
	S41= IR.Out16_31=>IMMSEXT.In                                Premise(F25)
	S42= GPRegs.Rdata1=>A.In                                    Premise(F26)
	S43= IMMSEXT.Out=>B.In                                      Premise(F27)
	S44= A.Out=>ALU.A                                           Premise(F28)
	S45= B.Out=>ALU.B                                           Premise(F29)
	S46= CU.Func=>ALU.Func                                      Premise(F30)
	S47= ALU.Out=>ALUOut.In                                     Premise(F31)
	S48= ALU.CMP=>DataCmb.A                                     Premise(F32)
	S49= XER.SOOut=>DataCmb.B                                   Premise(F33)
	S50= DataCmb.B=so                                           Path(S10,S49)
	S51= DataCmb.Out=>DR4bit.In                                 Premise(F34)
	S52= IR.Out11_15=>GPRegs.WReg                               Premise(F35)
	S53= ALUOut.Out=>GPRegs.WData                               Premise(F36)
	S54= DR4bit.Out=>CRRegs.CR0In                               Premise(F37)
	S55= CtrlPIDReg=0                                           Premise(F38)
	S56= [PIDReg]=pid                                           PIDReg-Hold(S0,S55)
	S57= CtrlIMMU=0                                             Premise(F39)
	S58= CtrlPC=0                                               Premise(F40)
	S59= CtrlPCInc=0                                            Premise(F41)
	S60= PC[Out]=addr                                           PC-Hold(S1,S58,S59)
	S61= CtrlIAddrReg=1                                         Premise(F42)
	S62= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S18,S61)
	S63= CtrlIMMUHitReg=1                                       Premise(F43)
	S64= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S20,S63)
	S65= CtrlICache=0                                           Premise(F44)
	S66= ICache[addr]={27,rS,rA,UIMM}                           ICache-Hold(S3,S65)
	S67= CtrlICacheReg=1                                        Premise(F45)
	S68= [ICacheReg]={27,rS,rA,UIMM}                            ICacheReg-Write(S26,S67)
	S69= CtrlICacheHitReg=1                                     Premise(F46)
	S70= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S28,S69)
	S71= CtrlIMem=0                                             Premise(F47)
	S72= IMem[{pid,addr}]={27,rS,rA,UIMM}                       IMem-Hold(S2,S71)
	S73= CtrlIRMux=0                                            Premise(F48)
	S74= CtrlIR=0                                               Premise(F49)
	S75= CtrlGPRegs=0                                           Premise(F50)
	S76= GPRegs[rS]=a                                           GPRegs-Hold(S4,S75)
	S77= CtrlA=0                                                Premise(F51)
	S78= CtrlB=0                                                Premise(F52)
	S79= CtrlALUOut=0                                           Premise(F53)
	S80= CtrlXERSO=0                                            Premise(F54)
	S81= XER[SO]=so                                             XER-SO-Hold(S5,S80)
	S82= CtrlXEROV=0                                            Premise(F55)
	S83= CtrlXERCA=0                                            Premise(F56)
	S84= CtrlDR4bit=0                                           Premise(F57)
	S85= CtrlCRRegs=0                                           Premise(F58)
	S86= CtrlCRRegsCR0=0                                        Premise(F59)
	S87= CtrlCRRegsW4bitRegs=0                                  Premise(F60)
	S88= CtrlCRRegsW1bitRegs=0                                  Premise(F61)

IMMU	S89= PIDReg.Out=pid                                         PIDReg-Out(S56)
	S90= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S56)
	S91= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S56)
	S92= PC.Out=addr                                            PC-Out(S60)
	S93= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S62)
	S94= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S62)
	S95= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S62)
	S96= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S64)
	S97= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S64)
	S98= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]           IMMUHitReg-Out(S64)
	S99= ICacheReg.Out={27,rS,rA,UIMM}                          ICacheReg-Out(S68)
	S100= ICacheReg.Out26_31={27,rS,rA,UIMM}[26:31]             ICacheReg-Out(S68)
	S101= ICacheReg.Out30_31={27,rS,rA,UIMM}[30:31]             ICacheReg-Out(S68)
	S102= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S70)
	S103= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S70)
	S104= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S70)
	S105= XER.SOOut=so                                          XER-SO-Out(S81)
	S106= PIDReg.Out=>IMMU.PID                                  Premise(F62)
	S107= IMMU.PID=pid                                          Path(S89,S106)
	S108= PC.Out=>IMMU.IEA                                      Premise(F63)
	S109= IMMU.IEA=addr                                         Path(S92,S108)
	S110= IMMU.Addr={pid,addr}                                  IMMU-Search(S107,S109)
	S111= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S107,S109)
	S112= IMMU.Addr=>IAddrReg.In                                Premise(F64)
	S113= IAddrReg.In={pid,addr}                                Path(S110,S112)
	S114= IMMU.Hit=>IMMUHitReg.In                               Premise(F65)
	S115= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S111,S114)
	S116= PC.Out=>ICache.IEA                                    Premise(F66)
	S117= ICache.IEA=addr                                       Path(S92,S116)
	S118= ICache.Hit=ICacheHit(addr)                            ICache-Search(S117)
	S119= ICache.Out={27,rS,rA,UIMM}                            ICache-Search(S117,S66)
	S120= ICache.Out=>ICacheReg.In                              Premise(F67)
	S121= ICacheReg.In={27,rS,rA,UIMM}                          Path(S119,S120)
	S122= ICache.Hit=>ICacheHitReg.In                           Premise(F68)
	S123= ICacheHitReg.In=ICacheHit(addr)                       Path(S118,S122)
	S124= IMMUHitReg.Out=>CU.IMemHit                            Premise(F69)
	S125= CU.IMemHit=IMMUHit(pid,addr)                          Path(S96,S124)
	S126= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F70)
	S127= CU.ICacheHit=ICacheHit(addr)                          Path(S102,S126)
	S128= IAddrReg.Out=>IMem.RAddr                              Premise(F71)
	S129= IMem.RAddr={pid,addr}                                 Path(S93,S128)
	S130= IMem.Out={27,rS,rA,UIMM}                              IMem-Read(S129,S72)
	S131= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S129,S72)
	S132= IMem.Out=>IRMux.MemData                               Premise(F72)
	S133= IRMux.MemData={27,rS,rA,UIMM}                         Path(S130,S132)
	S134= ICacheReg.Out=>IRMux.CacheData                        Premise(F73)
	S135= IRMux.CacheData={27,rS,rA,UIMM}                       Path(S99,S134)
	S136= IRMux.Out={27,rS,rA,UIMM}                             IRMux-Select(S133,S135)
	S137= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F74)
	S138= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S96,S137)
	S139= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F75)
	S140= IRMux.CacheSel=ICacheHit(addr)                        Path(S102,S139)
	S141= IRMux.Out=>IR.In                                      Premise(F76)
	S142= IR.In={27,rS,rA,UIMM}                                 Path(S136,S141)
	S143= IMem.MEM8WordOut=>ICache.WData                        Premise(F77)
	S144= ICache.WData=IMemGet8Word({pid,addr})                 Path(S131,S143)
	S145= PC.Out=>ICache.IEA                                    Premise(F78)
	S146= IR.Out0_5=>CU.Op                                      Premise(F79)
	S147= IR.Out6_10=>GPRegs.RReg1                              Premise(F80)
	S148= IR.Out16_31=>IMMSEXT.In                               Premise(F81)
	S149= GPRegs.Rdata1=>A.In                                   Premise(F82)
	S150= IMMSEXT.Out=>B.In                                     Premise(F83)
	S151= A.Out=>ALU.A                                          Premise(F84)
	S152= B.Out=>ALU.B                                          Premise(F85)
	S153= CU.Func=>ALU.Func                                     Premise(F86)
	S154= ALU.Out=>ALUOut.In                                    Premise(F87)
	S155= ALU.CMP=>DataCmb.A                                    Premise(F88)
	S156= XER.SOOut=>DataCmb.B                                  Premise(F89)
	S157= DataCmb.B=so                                          Path(S105,S156)
	S158= DataCmb.Out=>DR4bit.In                                Premise(F90)
	S159= IR.Out11_15=>GPRegs.WReg                              Premise(F91)
	S160= ALUOut.Out=>GPRegs.WData                              Premise(F92)
	S161= DR4bit.Out=>CRRegs.CR0In                              Premise(F93)
	S162= CtrlPIDReg=0                                          Premise(F94)
	S163= [PIDReg]=pid                                          PIDReg-Hold(S56,S162)
	S164= CtrlIMMU=0                                            Premise(F95)
	S165= CtrlPC=0                                              Premise(F96)
	S166= CtrlPCInc=1                                           Premise(F97)
	S167= PC[Out]=addr+4                                        PC-Inc(S60,S165,S166)
	S168= PC[CIA]=addr                                          PC-Inc(S60,S165,S166)
	S169= CtrlIAddrReg=0                                        Premise(F98)
	S170= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S62,S169)
	S171= CtrlIMMUHitReg=0                                      Premise(F99)
	S172= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S64,S171)
	S173= CtrlICache=0                                          Premise(F100)
	S174= ICache[addr]={27,rS,rA,UIMM}                          ICache-Hold(S66,S173)
	S175= CtrlICacheReg=0                                       Premise(F101)
	S176= [ICacheReg]={27,rS,rA,UIMM}                           ICacheReg-Hold(S68,S175)
	S177= CtrlICacheHitReg=0                                    Premise(F102)
	S178= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S70,S177)
	S179= CtrlIMem=0                                            Premise(F103)
	S180= IMem[{pid,addr}]={27,rS,rA,UIMM}                      IMem-Hold(S72,S179)
	S181= CtrlIRMux=0                                           Premise(F104)
	S182= CtrlIR=1                                              Premise(F105)
	S183= [IR]={27,rS,rA,UIMM}                                  IR-Write(S142,S182)
	S184= CtrlGPRegs=0                                          Premise(F106)
	S185= GPRegs[rS]=a                                          GPRegs-Hold(S76,S184)
	S186= CtrlA=0                                               Premise(F107)
	S187= CtrlB=0                                               Premise(F108)
	S188= CtrlALUOut=0                                          Premise(F109)
	S189= CtrlXERSO=0                                           Premise(F110)
	S190= XER[SO]=so                                            XER-SO-Hold(S81,S189)
	S191= CtrlXEROV=0                                           Premise(F111)
	S192= CtrlXERCA=0                                           Premise(F112)
	S193= CtrlDR4bit=0                                          Premise(F113)
	S194= CtrlCRRegs=0                                          Premise(F114)
	S195= CtrlCRRegsCR0=0                                       Premise(F115)
	S196= CtrlCRRegsW4bitRegs=0                                 Premise(F116)
	S197= CtrlCRRegsW1bitRegs=0                                 Premise(F117)

ID	S198= PIDReg.Out=pid                                        PIDReg-Out(S163)
	S199= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S163)
	S200= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S163)
	S201= PC.Out=addr+4                                         PC-Out(S167)
	S202= PC.CIA=addr                                           PC-Out(S168)
	S203= PC.CIA31_28=addr[31:28]                               PC-Out(S168)
	S204= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S170)
	S205= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S170)
	S206= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S170)
	S207= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S172)
	S208= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S172)
	S209= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S172)
	S210= ICacheReg.Out={27,rS,rA,UIMM}                         ICacheReg-Out(S176)
	S211= ICacheReg.Out26_31={27,rS,rA,UIMM}[26:31]             ICacheReg-Out(S176)
	S212= ICacheReg.Out30_31={27,rS,rA,UIMM}[30:31]             ICacheReg-Out(S176)
	S213= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S178)
	S214= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S178)
	S215= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S178)
	S216= IR.Out0_5=27                                          IR-Out(S183)
	S217= IR.Out6_10=rS                                         IR-Out(S183)
	S218= IR.Out11_15=rA                                        IR-Out(S183)
	S219= IR.Out16_31=UIMM                                      IR-Out(S183)
	S220= XER.SOOut=so                                          XER-SO-Out(S190)
	S221= PIDReg.Out=>IMMU.PID                                  Premise(F118)
	S222= IMMU.PID=pid                                          Path(S198,S221)
	S223= PC.Out=>IMMU.IEA                                      Premise(F119)
	S224= IMMU.IEA=addr+4                                       Path(S201,S223)
	S225= IMMU.Addr={pid,addr+4}                                IMMU-Search(S222,S224)
	S226= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S222,S224)
	S227= IMMU.Addr=>IAddrReg.In                                Premise(F120)
	S228= IAddrReg.In={pid,addr+4}                              Path(S225,S227)
	S229= IMMU.Hit=>IMMUHitReg.In                               Premise(F121)
	S230= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S226,S229)
	S231= PC.Out=>ICache.IEA                                    Premise(F122)
	S232= ICache.IEA=addr+4                                     Path(S201,S231)
	S233= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S232)
	S234= ICache.Out=>ICacheReg.In                              Premise(F123)
	S235= ICache.Hit=>ICacheHitReg.In                           Premise(F124)
	S236= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S233,S235)
	S237= IMMUHitReg.Out=>CU.IMemHit                            Premise(F125)
	S238= CU.IMemHit=IMMUHit(pid,addr)                          Path(S207,S237)
	S239= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F126)
	S240= CU.ICacheHit=ICacheHit(addr)                          Path(S213,S239)
	S241= IAddrReg.Out=>IMem.RAddr                              Premise(F127)
	S242= IMem.RAddr={pid,addr}                                 Path(S204,S241)
	S243= IMem.Out={27,rS,rA,UIMM}                              IMem-Read(S242,S180)
	S244= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S242,S180)
	S245= IMem.Out=>IRMux.MemData                               Premise(F128)
	S246= IRMux.MemData={27,rS,rA,UIMM}                         Path(S243,S245)
	S247= ICacheReg.Out=>IRMux.CacheData                        Premise(F129)
	S248= IRMux.CacheData={27,rS,rA,UIMM}                       Path(S210,S247)
	S249= IRMux.Out={27,rS,rA,UIMM}                             IRMux-Select(S246,S248)
	S250= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F130)
	S251= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S207,S250)
	S252= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F131)
	S253= IRMux.CacheSel=ICacheHit(addr)                        Path(S213,S252)
	S254= IRMux.Out=>IR.In                                      Premise(F132)
	S255= IR.In={27,rS,rA,UIMM}                                 Path(S249,S254)
	S256= IMem.MEM8WordOut=>ICache.WData                        Premise(F133)
	S257= ICache.WData=IMemGet8Word({pid,addr})                 Path(S244,S256)
	S258= PC.Out=>ICache.IEA                                    Premise(F134)
	S259= IR.Out0_5=>CU.Op                                      Premise(F135)
	S260= CU.Op=27                                              Path(S216,S259)
	S261= CU.Func=alu_xor                                       CU(S260)
	S262= IR.Out6_10=>GPRegs.RReg1                              Premise(F136)
	S263= GPRegs.RReg1=rS                                       Path(S217,S262)
	S264= GPRegs.Rdata1=a                                       GPRegs-Read(S263,S185)
	S265= IR.Out16_31=>IMMSEXT.In                               Premise(F137)
	S266= IMMSEXT.In=UIMM                                       Path(S219,S265)
	S267= IMMSEXT.Out={UIMM,16'b0}                              IMMSEXT(S266)
	S268= GPRegs.Rdata1=>A.In                                   Premise(F138)
	S269= A.In=a                                                Path(S264,S268)
	S270= IMMSEXT.Out=>B.In                                     Premise(F139)
	S271= B.In={UIMM,16'b0}                                     Path(S267,S270)
	S272= A.Out=>ALU.A                                          Premise(F140)
	S273= B.Out=>ALU.B                                          Premise(F141)
	S274= CU.Func=>ALU.Func                                     Premise(F142)
	S275= ALU.Func=alu_xor                                      Path(S261,S274)
	S276= ALU.Out=>ALUOut.In                                    Premise(F143)
	S277= ALU.CMP=>DataCmb.A                                    Premise(F144)
	S278= XER.SOOut=>DataCmb.B                                  Premise(F145)
	S279= DataCmb.B=so                                          Path(S220,S278)
	S280= DataCmb.Out=>DR4bit.In                                Premise(F146)
	S281= IR.Out11_15=>GPRegs.WReg                              Premise(F147)
	S282= GPRegs.WReg=rA                                        Path(S218,S281)
	S283= ALUOut.Out=>GPRegs.WData                              Premise(F148)
	S284= DR4bit.Out=>CRRegs.CR0In                              Premise(F149)
	S285= CtrlPIDReg=0                                          Premise(F150)
	S286= [PIDReg]=pid                                          PIDReg-Hold(S163,S285)
	S287= CtrlIMMU=0                                            Premise(F151)
	S288= CtrlPC=0                                              Premise(F152)
	S289= CtrlPCInc=0                                           Premise(F153)
	S290= PC[CIA]=addr                                          PC-Hold(S168,S289)
	S291= PC[Out]=addr+4                                        PC-Hold(S167,S288,S289)
	S292= CtrlIAddrReg=0                                        Premise(F154)
	S293= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S170,S292)
	S294= CtrlIMMUHitReg=0                                      Premise(F155)
	S295= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S172,S294)
	S296= CtrlICache=0                                          Premise(F156)
	S297= ICache[addr]={27,rS,rA,UIMM}                          ICache-Hold(S174,S296)
	S298= CtrlICacheReg=0                                       Premise(F157)
	S299= [ICacheReg]={27,rS,rA,UIMM}                           ICacheReg-Hold(S176,S298)
	S300= CtrlICacheHitReg=0                                    Premise(F158)
	S301= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S178,S300)
	S302= CtrlIMem=0                                            Premise(F159)
	S303= IMem[{pid,addr}]={27,rS,rA,UIMM}                      IMem-Hold(S180,S302)
	S304= CtrlIRMux=0                                           Premise(F160)
	S305= CtrlIR=0                                              Premise(F161)
	S306= [IR]={27,rS,rA,UIMM}                                  IR-Hold(S183,S305)
	S307= CtrlGPRegs=0                                          Premise(F162)
	S308= GPRegs[rS]=a                                          GPRegs-Hold(S185,S307)
	S309= CtrlA=1                                               Premise(F163)
	S310= [A]=a                                                 A-Write(S269,S309)
	S311= CtrlB=1                                               Premise(F164)
	S312= [B]={UIMM,16'b0}                                      B-Write(S271,S311)
	S313= CtrlALUOut=0                                          Premise(F165)
	S314= CtrlXERSO=0                                           Premise(F166)
	S315= XER[SO]=so                                            XER-SO-Hold(S190,S314)
	S316= CtrlXEROV=0                                           Premise(F167)
	S317= CtrlXERCA=0                                           Premise(F168)
	S318= CtrlDR4bit=0                                          Premise(F169)
	S319= CtrlCRRegs=0                                          Premise(F170)
	S320= CtrlCRRegsCR0=0                                       Premise(F171)
	S321= CtrlCRRegsW4bitRegs=0                                 Premise(F172)
	S322= CtrlCRRegsW1bitRegs=0                                 Premise(F173)

EX	S323= PIDReg.Out=pid                                        PIDReg-Out(S286)
	S324= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S286)
	S325= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S286)
	S326= PC.CIA=addr                                           PC-Out(S290)
	S327= PC.CIA31_28=addr[31:28]                               PC-Out(S290)
	S328= PC.Out=addr+4                                         PC-Out(S291)
	S329= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S293)
	S330= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S293)
	S331= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S293)
	S332= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S295)
	S333= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S295)
	S334= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S295)
	S335= ICacheReg.Out={27,rS,rA,UIMM}                         ICacheReg-Out(S299)
	S336= ICacheReg.Out26_31={27,rS,rA,UIMM}[26:31]             ICacheReg-Out(S299)
	S337= ICacheReg.Out30_31={27,rS,rA,UIMM}[30:31]             ICacheReg-Out(S299)
	S338= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S301)
	S339= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S301)
	S340= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S301)
	S341= IR.Out0_5=27                                          IR-Out(S306)
	S342= IR.Out6_10=rS                                         IR-Out(S306)
	S343= IR.Out11_15=rA                                        IR-Out(S306)
	S344= IR.Out16_31=UIMM                                      IR-Out(S306)
	S345= A.Out=a                                               A-Out(S310)
	S346= A.Out26_31=a[26:31]                                   A-Out(S310)
	S347= A.Out30_31=a[30:31]                                   A-Out(S310)
	S348= B.Out={UIMM,16'b0}                                    B-Out(S312)
	S349= B.Out26_31={UIMM,16'b0}[26:31]                        B-Out(S312)
	S350= B.Out30_31={UIMM,16'b0}[30:31]                        B-Out(S312)
	S351= XER.SOOut=so                                          XER-SO-Out(S315)
	S352= PIDReg.Out=>IMMU.PID                                  Premise(F174)
	S353= IMMU.PID=pid                                          Path(S323,S352)
	S354= PC.Out=>IMMU.IEA                                      Premise(F175)
	S355= IMMU.IEA=addr+4                                       Path(S328,S354)
	S356= IMMU.Addr={pid,addr+4}                                IMMU-Search(S353,S355)
	S357= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S353,S355)
	S358= IMMU.Addr=>IAddrReg.In                                Premise(F176)
	S359= IAddrReg.In={pid,addr+4}                              Path(S356,S358)
	S360= IMMU.Hit=>IMMUHitReg.In                               Premise(F177)
	S361= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S357,S360)
	S362= PC.Out=>ICache.IEA                                    Premise(F178)
	S363= ICache.IEA=addr+4                                     Path(S328,S362)
	S364= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S363)
	S365= ICache.Out=>ICacheReg.In                              Premise(F179)
	S366= ICache.Hit=>ICacheHitReg.In                           Premise(F180)
	S367= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S364,S366)
	S368= IMMUHitReg.Out=>CU.IMemHit                            Premise(F181)
	S369= CU.IMemHit=IMMUHit(pid,addr)                          Path(S332,S368)
	S370= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F182)
	S371= CU.ICacheHit=ICacheHit(addr)                          Path(S338,S370)
	S372= IAddrReg.Out=>IMem.RAddr                              Premise(F183)
	S373= IMem.RAddr={pid,addr}                                 Path(S329,S372)
	S374= IMem.Out={27,rS,rA,UIMM}                              IMem-Read(S373,S303)
	S375= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S373,S303)
	S376= IMem.Out=>IRMux.MemData                               Premise(F184)
	S377= IRMux.MemData={27,rS,rA,UIMM}                         Path(S374,S376)
	S378= ICacheReg.Out=>IRMux.CacheData                        Premise(F185)
	S379= IRMux.CacheData={27,rS,rA,UIMM}                       Path(S335,S378)
	S380= IRMux.Out={27,rS,rA,UIMM}                             IRMux-Select(S377,S379)
	S381= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F186)
	S382= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S332,S381)
	S383= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F187)
	S384= IRMux.CacheSel=ICacheHit(addr)                        Path(S338,S383)
	S385= IRMux.Out=>IR.In                                      Premise(F188)
	S386= IR.In={27,rS,rA,UIMM}                                 Path(S380,S385)
	S387= IMem.MEM8WordOut=>ICache.WData                        Premise(F189)
	S388= ICache.WData=IMemGet8Word({pid,addr})                 Path(S375,S387)
	S389= PC.Out=>ICache.IEA                                    Premise(F190)
	S390= IR.Out0_5=>CU.Op                                      Premise(F191)
	S391= CU.Op=27                                              Path(S341,S390)
	S392= CU.Func=alu_xor                                       CU(S391)
	S393= IR.Out6_10=>GPRegs.RReg1                              Premise(F192)
	S394= GPRegs.RReg1=rS                                       Path(S342,S393)
	S395= GPRegs.Rdata1=a                                       GPRegs-Read(S394,S308)
	S396= IR.Out16_31=>IMMSEXT.In                               Premise(F193)
	S397= IMMSEXT.In=UIMM                                       Path(S344,S396)
	S398= IMMSEXT.Out={UIMM,16'b0}                              IMMSEXT(S397)
	S399= GPRegs.Rdata1=>A.In                                   Premise(F194)
	S400= A.In=a                                                Path(S395,S399)
	S401= IMMSEXT.Out=>B.In                                     Premise(F195)
	S402= B.In={UIMM,16'b0}                                     Path(S398,S401)
	S403= A.Out=>ALU.A                                          Premise(F196)
	S404= ALU.A=a                                               Path(S345,S403)
	S405= B.Out=>ALU.B                                          Premise(F197)
	S406= ALU.B={UIMM,16'b0}                                    Path(S348,S405)
	S407= CU.Func=>ALU.Func                                     Premise(F198)
	S408= ALU.Func=alu_xor                                      Path(S392,S407)
	S409= ALU.Out=a^{UIMM,16'b0}                                ALU(S404,S406)
	S410= ALU.CMP=Compare0(a^{UIMM,16'b0})                      ALU(S404,S406)
	S411= ALU.OV=OverFlow(a^{UIMM,16'b0})                       ALU(S404,S406)
	S412= ALU.CA=Carry(a^{UIMM,16'b0})                          ALU(S404,S406)
	S413= ALU.Out=>ALUOut.In                                    Premise(F199)
	S414= ALUOut.In=a^{UIMM,16'b0}                              Path(S409,S413)
	S415= ALU.CMP=>DataCmb.A                                    Premise(F200)
	S416= DataCmb.A=Compare0(a^{UIMM,16'b0})                    Path(S410,S415)
	S417= XER.SOOut=>DataCmb.B                                  Premise(F201)
	S418= DataCmb.B=so                                          Path(S351,S417)
	S419= DataCmb.Out={Compare0(a^{UIMM,16'b0}),so}             DataCmb(S416,S418)
	S420= DataCmb.Out=>DR4bit.In                                Premise(F202)
	S421= DR4bit.In={Compare0(a^{UIMM,16'b0}),so}               Path(S419,S420)
	S422= IR.Out11_15=>GPRegs.WReg                              Premise(F203)
	S423= GPRegs.WReg=rA                                        Path(S343,S422)
	S424= ALUOut.Out=>GPRegs.WData                              Premise(F204)
	S425= DR4bit.Out=>CRRegs.CR0In                              Premise(F205)
	S426= CtrlPIDReg=0                                          Premise(F206)
	S427= [PIDReg]=pid                                          PIDReg-Hold(S286,S426)
	S428= CtrlIMMU=0                                            Premise(F207)
	S429= CtrlPC=0                                              Premise(F208)
	S430= CtrlPCInc=0                                           Premise(F209)
	S431= PC[CIA]=addr                                          PC-Hold(S290,S430)
	S432= PC[Out]=addr+4                                        PC-Hold(S291,S429,S430)
	S433= CtrlIAddrReg=0                                        Premise(F210)
	S434= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S293,S433)
	S435= CtrlIMMUHitReg=0                                      Premise(F211)
	S436= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S295,S435)
	S437= CtrlICache=0                                          Premise(F212)
	S438= ICache[addr]={27,rS,rA,UIMM}                          ICache-Hold(S297,S437)
	S439= CtrlICacheReg=0                                       Premise(F213)
	S440= [ICacheReg]={27,rS,rA,UIMM}                           ICacheReg-Hold(S299,S439)
	S441= CtrlICacheHitReg=0                                    Premise(F214)
	S442= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S301,S441)
	S443= CtrlIMem=0                                            Premise(F215)
	S444= IMem[{pid,addr}]={27,rS,rA,UIMM}                      IMem-Hold(S303,S443)
	S445= CtrlIRMux=0                                           Premise(F216)
	S446= CtrlIR=0                                              Premise(F217)
	S447= [IR]={27,rS,rA,UIMM}                                  IR-Hold(S306,S446)
	S448= CtrlGPRegs=0                                          Premise(F218)
	S449= GPRegs[rS]=a                                          GPRegs-Hold(S308,S448)
	S450= CtrlA=0                                               Premise(F219)
	S451= [A]=a                                                 A-Hold(S310,S450)
	S452= CtrlB=0                                               Premise(F220)
	S453= [B]={UIMM,16'b0}                                      B-Hold(S312,S452)
	S454= CtrlALUOut=1                                          Premise(F221)
	S455= [ALUOut]=a^{UIMM,16'b0}                               ALUOut-Write(S414,S454)
	S456= CtrlXERSO=0                                           Premise(F222)
	S457= XER[SO]=so                                            XER-SO-Hold(S315,S456)
	S458= CtrlXEROV=0                                           Premise(F223)
	S459= CtrlXERCA=0                                           Premise(F224)
	S460= CtrlDR4bit=1                                          Premise(F225)
	S461= [DR4bit]={Compare0(a^{UIMM,16'b0}),so}                DR4bit-Write(S421,S460)
	S462= CtrlCRRegs=0                                          Premise(F226)
	S463= CtrlCRRegsCR0=0                                       Premise(F227)
	S464= CtrlCRRegsW4bitRegs=0                                 Premise(F228)
	S465= CtrlCRRegsW1bitRegs=0                                 Premise(F229)

MEM	S466= PIDReg.Out=pid                                        PIDReg-Out(S427)
	S467= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S427)
	S468= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S427)
	S469= PC.CIA=addr                                           PC-Out(S431)
	S470= PC.CIA31_28=addr[31:28]                               PC-Out(S431)
	S471= PC.Out=addr+4                                         PC-Out(S432)
	S472= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S434)
	S473= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S434)
	S474= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S434)
	S475= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S436)
	S476= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S436)
	S477= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S436)
	S478= ICacheReg.Out={27,rS,rA,UIMM}                         ICacheReg-Out(S440)
	S479= ICacheReg.Out26_31={27,rS,rA,UIMM}[26:31]             ICacheReg-Out(S440)
	S480= ICacheReg.Out30_31={27,rS,rA,UIMM}[30:31]             ICacheReg-Out(S440)
	S481= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S442)
	S482= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S442)
	S483= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S442)
	S484= IR.Out0_5=27                                          IR-Out(S447)
	S485= IR.Out6_10=rS                                         IR-Out(S447)
	S486= IR.Out11_15=rA                                        IR-Out(S447)
	S487= IR.Out16_31=UIMM                                      IR-Out(S447)
	S488= A.Out=a                                               A-Out(S451)
	S489= A.Out26_31=a[26:31]                                   A-Out(S451)
	S490= A.Out30_31=a[30:31]                                   A-Out(S451)
	S491= B.Out={UIMM,16'b0}                                    B-Out(S453)
	S492= B.Out26_31={UIMM,16'b0}[26:31]                        B-Out(S453)
	S493= B.Out30_31={UIMM,16'b0}[30:31]                        B-Out(S453)
	S494= ALUOut.Out=a^{UIMM,16'b0}                             ALUOut-Out(S455)
	S495= ALUOut.Out26_31=a^{UIMM,16'b0}[26:31]                 ALUOut-Out(S455)
	S496= ALUOut.Out30_31=a^{UIMM,16'b0}[30:31]                 ALUOut-Out(S455)
	S497= XER.SOOut=so                                          XER-SO-Out(S457)
	S498= DR4bit.Out={Compare0(a^{UIMM,16'b0}),so}              DR4bit-Out(S461)
	S499= DR4bit.Out26_31={Compare0(a^{UIMM,16'b0}),so}[26:31]  DR4bit-Out(S461)
	S500= DR4bit.Out30_31={Compare0(a^{UIMM,16'b0}),so}[30:31]  DR4bit-Out(S461)
	S501= PIDReg.Out=>IMMU.PID                                  Premise(F230)
	S502= IMMU.PID=pid                                          Path(S466,S501)
	S503= PC.Out=>IMMU.IEA                                      Premise(F231)
	S504= IMMU.IEA=addr+4                                       Path(S471,S503)
	S505= IMMU.Addr={pid,addr+4}                                IMMU-Search(S502,S504)
	S506= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S502,S504)
	S507= IMMU.Addr=>IAddrReg.In                                Premise(F232)
	S508= IAddrReg.In={pid,addr+4}                              Path(S505,S507)
	S509= IMMU.Hit=>IMMUHitReg.In                               Premise(F233)
	S510= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S506,S509)
	S511= PC.Out=>ICache.IEA                                    Premise(F234)
	S512= ICache.IEA=addr+4                                     Path(S471,S511)
	S513= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S512)
	S514= ICache.Out=>ICacheReg.In                              Premise(F235)
	S515= ICache.Hit=>ICacheHitReg.In                           Premise(F236)
	S516= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S513,S515)
	S517= IMMUHitReg.Out=>CU.IMemHit                            Premise(F237)
	S518= CU.IMemHit=IMMUHit(pid,addr)                          Path(S475,S517)
	S519= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F238)
	S520= CU.ICacheHit=ICacheHit(addr)                          Path(S481,S519)
	S521= IAddrReg.Out=>IMem.RAddr                              Premise(F239)
	S522= IMem.RAddr={pid,addr}                                 Path(S472,S521)
	S523= IMem.Out={27,rS,rA,UIMM}                              IMem-Read(S522,S444)
	S524= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S522,S444)
	S525= IMem.Out=>IRMux.MemData                               Premise(F240)
	S526= IRMux.MemData={27,rS,rA,UIMM}                         Path(S523,S525)
	S527= ICacheReg.Out=>IRMux.CacheData                        Premise(F241)
	S528= IRMux.CacheData={27,rS,rA,UIMM}                       Path(S478,S527)
	S529= IRMux.Out={27,rS,rA,UIMM}                             IRMux-Select(S526,S528)
	S530= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F242)
	S531= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S475,S530)
	S532= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F243)
	S533= IRMux.CacheSel=ICacheHit(addr)                        Path(S481,S532)
	S534= IRMux.Out=>IR.In                                      Premise(F244)
	S535= IR.In={27,rS,rA,UIMM}                                 Path(S529,S534)
	S536= IMem.MEM8WordOut=>ICache.WData                        Premise(F245)
	S537= ICache.WData=IMemGet8Word({pid,addr})                 Path(S524,S536)
	S538= PC.Out=>ICache.IEA                                    Premise(F246)
	S539= IR.Out0_5=>CU.Op                                      Premise(F247)
	S540= CU.Op=27                                              Path(S484,S539)
	S541= CU.Func=alu_xor                                       CU(S540)
	S542= IR.Out6_10=>GPRegs.RReg1                              Premise(F248)
	S543= GPRegs.RReg1=rS                                       Path(S485,S542)
	S544= GPRegs.Rdata1=a                                       GPRegs-Read(S543,S449)
	S545= IR.Out16_31=>IMMSEXT.In                               Premise(F249)
	S546= IMMSEXT.In=UIMM                                       Path(S487,S545)
	S547= IMMSEXT.Out={UIMM,16'b0}                              IMMSEXT(S546)
	S548= GPRegs.Rdata1=>A.In                                   Premise(F250)
	S549= A.In=a                                                Path(S544,S548)
	S550= IMMSEXT.Out=>B.In                                     Premise(F251)
	S551= B.In={UIMM,16'b0}                                     Path(S547,S550)
	S552= A.Out=>ALU.A                                          Premise(F252)
	S553= ALU.A=a                                               Path(S488,S552)
	S554= B.Out=>ALU.B                                          Premise(F253)
	S555= ALU.B={UIMM,16'b0}                                    Path(S491,S554)
	S556= CU.Func=>ALU.Func                                     Premise(F254)
	S557= ALU.Func=alu_xor                                      Path(S541,S556)
	S558= ALU.Out=a^{UIMM,16'b0}                                ALU(S553,S555)
	S559= ALU.CMP=Compare0(a^{UIMM,16'b0})                      ALU(S553,S555)
	S560= ALU.OV=OverFlow(a^{UIMM,16'b0})                       ALU(S553,S555)
	S561= ALU.CA=Carry(a^{UIMM,16'b0})                          ALU(S553,S555)
	S562= ALU.Out=>ALUOut.In                                    Premise(F255)
	S563= ALUOut.In=a^{UIMM,16'b0}                              Path(S558,S562)
	S564= ALU.CMP=>DataCmb.A                                    Premise(F256)
	S565= DataCmb.A=Compare0(a^{UIMM,16'b0})                    Path(S559,S564)
	S566= XER.SOOut=>DataCmb.B                                  Premise(F257)
	S567= DataCmb.B=so                                          Path(S497,S566)
	S568= DataCmb.Out={Compare0(a^{UIMM,16'b0}),so}             DataCmb(S565,S567)
	S569= DataCmb.Out=>DR4bit.In                                Premise(F258)
	S570= DR4bit.In={Compare0(a^{UIMM,16'b0}),so}               Path(S568,S569)
	S571= IR.Out11_15=>GPRegs.WReg                              Premise(F259)
	S572= GPRegs.WReg=rA                                        Path(S486,S571)
	S573= ALUOut.Out=>GPRegs.WData                              Premise(F260)
	S574= GPRegs.WData=a^{UIMM,16'b0}                           Path(S494,S573)
	S575= DR4bit.Out=>CRRegs.CR0In                              Premise(F261)
	S576= CRRegs.CR0In={Compare0(a^{UIMM,16'b0}),so}            Path(S498,S575)
	S577= CtrlPIDReg=0                                          Premise(F262)
	S578= [PIDReg]=pid                                          PIDReg-Hold(S427,S577)
	S579= CtrlIMMU=0                                            Premise(F263)
	S580= CtrlPC=0                                              Premise(F264)
	S581= CtrlPCInc=0                                           Premise(F265)
	S582= PC[CIA]=addr                                          PC-Hold(S431,S581)
	S583= PC[Out]=addr+4                                        PC-Hold(S432,S580,S581)
	S584= CtrlIAddrReg=0                                        Premise(F266)
	S585= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S434,S584)
	S586= CtrlIMMUHitReg=0                                      Premise(F267)
	S587= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S436,S586)
	S588= CtrlICache=0                                          Premise(F268)
	S589= ICache[addr]={27,rS,rA,UIMM}                          ICache-Hold(S438,S588)
	S590= CtrlICacheReg=0                                       Premise(F269)
	S591= [ICacheReg]={27,rS,rA,UIMM}                           ICacheReg-Hold(S440,S590)
	S592= CtrlICacheHitReg=0                                    Premise(F270)
	S593= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S442,S592)
	S594= CtrlIMem=0                                            Premise(F271)
	S595= IMem[{pid,addr}]={27,rS,rA,UIMM}                      IMem-Hold(S444,S594)
	S596= CtrlIRMux=0                                           Premise(F272)
	S597= CtrlIR=0                                              Premise(F273)
	S598= [IR]={27,rS,rA,UIMM}                                  IR-Hold(S447,S597)
	S599= CtrlGPRegs=0                                          Premise(F274)
	S600= GPRegs[rS]=a                                          GPRegs-Hold(S449,S599)
	S601= CtrlA=0                                               Premise(F275)
	S602= [A]=a                                                 A-Hold(S451,S601)
	S603= CtrlB=0                                               Premise(F276)
	S604= [B]={UIMM,16'b0}                                      B-Hold(S453,S603)
	S605= CtrlALUOut=0                                          Premise(F277)
	S606= [ALUOut]=a^{UIMM,16'b0}                               ALUOut-Hold(S455,S605)
	S607= CtrlXERSO=0                                           Premise(F278)
	S608= XER[SO]=so                                            XER-SO-Hold(S457,S607)
	S609= CtrlXEROV=0                                           Premise(F279)
	S610= CtrlXERCA=0                                           Premise(F280)
	S611= CtrlDR4bit=0                                          Premise(F281)
	S612= [DR4bit]={Compare0(a^{UIMM,16'b0}),so}                DR4bit-Hold(S461,S611)
	S613= CtrlCRRegs=0                                          Premise(F282)
	S614= CtrlCRRegsCR0=0                                       Premise(F283)
	S615= CtrlCRRegsW4bitRegs=0                                 Premise(F284)
	S616= CtrlCRRegsW1bitRegs=0                                 Premise(F285)

DMMU1	S617= PIDReg.Out=pid                                        PIDReg-Out(S578)
	S618= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S578)
	S619= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S578)
	S620= PC.CIA=addr                                           PC-Out(S582)
	S621= PC.CIA31_28=addr[31:28]                               PC-Out(S582)
	S622= PC.Out=addr+4                                         PC-Out(S583)
	S623= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S585)
	S624= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S585)
	S625= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S585)
	S626= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S587)
	S627= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S587)
	S628= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S587)
	S629= ICacheReg.Out={27,rS,rA,UIMM}                         ICacheReg-Out(S591)
	S630= ICacheReg.Out26_31={27,rS,rA,UIMM}[26:31]             ICacheReg-Out(S591)
	S631= ICacheReg.Out30_31={27,rS,rA,UIMM}[30:31]             ICacheReg-Out(S591)
	S632= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S593)
	S633= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S593)
	S634= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S593)
	S635= IR.Out0_5=27                                          IR-Out(S598)
	S636= IR.Out6_10=rS                                         IR-Out(S598)
	S637= IR.Out11_15=rA                                        IR-Out(S598)
	S638= IR.Out16_31=UIMM                                      IR-Out(S598)
	S639= A.Out=a                                               A-Out(S602)
	S640= A.Out26_31=a[26:31]                                   A-Out(S602)
	S641= A.Out30_31=a[30:31]                                   A-Out(S602)
	S642= B.Out={UIMM,16'b0}                                    B-Out(S604)
	S643= B.Out26_31={UIMM,16'b0}[26:31]                        B-Out(S604)
	S644= B.Out30_31={UIMM,16'b0}[30:31]                        B-Out(S604)
	S645= ALUOut.Out=a^{UIMM,16'b0}                             ALUOut-Out(S606)
	S646= ALUOut.Out26_31=a^{UIMM,16'b0}[26:31]                 ALUOut-Out(S606)
	S647= ALUOut.Out30_31=a^{UIMM,16'b0}[30:31]                 ALUOut-Out(S606)
	S648= XER.SOOut=so                                          XER-SO-Out(S608)
	S649= DR4bit.Out={Compare0(a^{UIMM,16'b0}),so}              DR4bit-Out(S612)
	S650= DR4bit.Out26_31={Compare0(a^{UIMM,16'b0}),so}[26:31]  DR4bit-Out(S612)
	S651= DR4bit.Out30_31={Compare0(a^{UIMM,16'b0}),so}[30:31]  DR4bit-Out(S612)
	S652= PIDReg.Out=>IMMU.PID                                  Premise(F286)
	S653= IMMU.PID=pid                                          Path(S617,S652)
	S654= PC.Out=>IMMU.IEA                                      Premise(F287)
	S655= IMMU.IEA=addr+4                                       Path(S622,S654)
	S656= IMMU.Addr={pid,addr+4}                                IMMU-Search(S653,S655)
	S657= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S653,S655)
	S658= IMMU.Addr=>IAddrReg.In                                Premise(F288)
	S659= IAddrReg.In={pid,addr+4}                              Path(S656,S658)
	S660= IMMU.Hit=>IMMUHitReg.In                               Premise(F289)
	S661= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S657,S660)
	S662= PC.Out=>ICache.IEA                                    Premise(F290)
	S663= ICache.IEA=addr+4                                     Path(S622,S662)
	S664= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S663)
	S665= ICache.Out=>ICacheReg.In                              Premise(F291)
	S666= ICache.Hit=>ICacheHitReg.In                           Premise(F292)
	S667= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S664,S666)
	S668= IMMUHitReg.Out=>CU.IMemHit                            Premise(F293)
	S669= CU.IMemHit=IMMUHit(pid,addr)                          Path(S626,S668)
	S670= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F294)
	S671= CU.ICacheHit=ICacheHit(addr)                          Path(S632,S670)
	S672= IAddrReg.Out=>IMem.RAddr                              Premise(F295)
	S673= IMem.RAddr={pid,addr}                                 Path(S623,S672)
	S674= IMem.Out={27,rS,rA,UIMM}                              IMem-Read(S673,S595)
	S675= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S673,S595)
	S676= IMem.Out=>IRMux.MemData                               Premise(F296)
	S677= IRMux.MemData={27,rS,rA,UIMM}                         Path(S674,S676)
	S678= ICacheReg.Out=>IRMux.CacheData                        Premise(F297)
	S679= IRMux.CacheData={27,rS,rA,UIMM}                       Path(S629,S678)
	S680= IRMux.Out={27,rS,rA,UIMM}                             IRMux-Select(S677,S679)
	S681= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F298)
	S682= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S626,S681)
	S683= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F299)
	S684= IRMux.CacheSel=ICacheHit(addr)                        Path(S632,S683)
	S685= IRMux.Out=>IR.In                                      Premise(F300)
	S686= IR.In={27,rS,rA,UIMM}                                 Path(S680,S685)
	S687= IMem.MEM8WordOut=>ICache.WData                        Premise(F301)
	S688= ICache.WData=IMemGet8Word({pid,addr})                 Path(S675,S687)
	S689= PC.Out=>ICache.IEA                                    Premise(F302)
	S690= IR.Out0_5=>CU.Op                                      Premise(F303)
	S691= CU.Op=27                                              Path(S635,S690)
	S692= CU.Func=alu_xor                                       CU(S691)
	S693= IR.Out6_10=>GPRegs.RReg1                              Premise(F304)
	S694= GPRegs.RReg1=rS                                       Path(S636,S693)
	S695= GPRegs.Rdata1=a                                       GPRegs-Read(S694,S600)
	S696= IR.Out16_31=>IMMSEXT.In                               Premise(F305)
	S697= IMMSEXT.In=UIMM                                       Path(S638,S696)
	S698= IMMSEXT.Out={UIMM,16'b0}                              IMMSEXT(S697)
	S699= GPRegs.Rdata1=>A.In                                   Premise(F306)
	S700= A.In=a                                                Path(S695,S699)
	S701= IMMSEXT.Out=>B.In                                     Premise(F307)
	S702= B.In={UIMM,16'b0}                                     Path(S698,S701)
	S703= A.Out=>ALU.A                                          Premise(F308)
	S704= ALU.A=a                                               Path(S639,S703)
	S705= B.Out=>ALU.B                                          Premise(F309)
	S706= ALU.B={UIMM,16'b0}                                    Path(S642,S705)
	S707= CU.Func=>ALU.Func                                     Premise(F310)
	S708= ALU.Func=alu_xor                                      Path(S692,S707)
	S709= ALU.Out=a^{UIMM,16'b0}                                ALU(S704,S706)
	S710= ALU.CMP=Compare0(a^{UIMM,16'b0})                      ALU(S704,S706)
	S711= ALU.OV=OverFlow(a^{UIMM,16'b0})                       ALU(S704,S706)
	S712= ALU.CA=Carry(a^{UIMM,16'b0})                          ALU(S704,S706)
	S713= ALU.Out=>ALUOut.In                                    Premise(F311)
	S714= ALUOut.In=a^{UIMM,16'b0}                              Path(S709,S713)
	S715= ALU.CMP=>DataCmb.A                                    Premise(F312)
	S716= DataCmb.A=Compare0(a^{UIMM,16'b0})                    Path(S710,S715)
	S717= XER.SOOut=>DataCmb.B                                  Premise(F313)
	S718= DataCmb.B=so                                          Path(S648,S717)
	S719= DataCmb.Out={Compare0(a^{UIMM,16'b0}),so}             DataCmb(S716,S718)
	S720= DataCmb.Out=>DR4bit.In                                Premise(F314)
	S721= DR4bit.In={Compare0(a^{UIMM,16'b0}),so}               Path(S719,S720)
	S722= IR.Out11_15=>GPRegs.WReg                              Premise(F315)
	S723= GPRegs.WReg=rA                                        Path(S637,S722)
	S724= ALUOut.Out=>GPRegs.WData                              Premise(F316)
	S725= GPRegs.WData=a^{UIMM,16'b0}                           Path(S645,S724)
	S726= DR4bit.Out=>CRRegs.CR0In                              Premise(F317)
	S727= CRRegs.CR0In={Compare0(a^{UIMM,16'b0}),so}            Path(S649,S726)
	S728= CtrlPIDReg=0                                          Premise(F318)
	S729= [PIDReg]=pid                                          PIDReg-Hold(S578,S728)
	S730= CtrlIMMU=0                                            Premise(F319)
	S731= CtrlPC=0                                              Premise(F320)
	S732= CtrlPCInc=0                                           Premise(F321)
	S733= PC[CIA]=addr                                          PC-Hold(S582,S732)
	S734= PC[Out]=addr+4                                        PC-Hold(S583,S731,S732)
	S735= CtrlIAddrReg=0                                        Premise(F322)
	S736= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S585,S735)
	S737= CtrlIMMUHitReg=0                                      Premise(F323)
	S738= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S587,S737)
	S739= CtrlICache=0                                          Premise(F324)
	S740= ICache[addr]={27,rS,rA,UIMM}                          ICache-Hold(S589,S739)
	S741= CtrlICacheReg=0                                       Premise(F325)
	S742= [ICacheReg]={27,rS,rA,UIMM}                           ICacheReg-Hold(S591,S741)
	S743= CtrlICacheHitReg=0                                    Premise(F326)
	S744= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S593,S743)
	S745= CtrlIMem=0                                            Premise(F327)
	S746= IMem[{pid,addr}]={27,rS,rA,UIMM}                      IMem-Hold(S595,S745)
	S747= CtrlIRMux=0                                           Premise(F328)
	S748= CtrlIR=0                                              Premise(F329)
	S749= [IR]={27,rS,rA,UIMM}                                  IR-Hold(S598,S748)
	S750= CtrlGPRegs=0                                          Premise(F330)
	S751= GPRegs[rS]=a                                          GPRegs-Hold(S600,S750)
	S752= CtrlA=0                                               Premise(F331)
	S753= [A]=a                                                 A-Hold(S602,S752)
	S754= CtrlB=0                                               Premise(F332)
	S755= [B]={UIMM,16'b0}                                      B-Hold(S604,S754)
	S756= CtrlALUOut=0                                          Premise(F333)
	S757= [ALUOut]=a^{UIMM,16'b0}                               ALUOut-Hold(S606,S756)
	S758= CtrlXERSO=0                                           Premise(F334)
	S759= XER[SO]=so                                            XER-SO-Hold(S608,S758)
	S760= CtrlXEROV=0                                           Premise(F335)
	S761= CtrlXERCA=0                                           Premise(F336)
	S762= CtrlDR4bit=0                                          Premise(F337)
	S763= [DR4bit]={Compare0(a^{UIMM,16'b0}),so}                DR4bit-Hold(S612,S762)
	S764= CtrlCRRegs=0                                          Premise(F338)
	S765= CtrlCRRegsCR0=0                                       Premise(F339)
	S766= CtrlCRRegsW4bitRegs=0                                 Premise(F340)
	S767= CtrlCRRegsW1bitRegs=0                                 Premise(F341)

DMMU2	S768= PIDReg.Out=pid                                        PIDReg-Out(S729)
	S769= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S729)
	S770= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S729)
	S771= PC.CIA=addr                                           PC-Out(S733)
	S772= PC.CIA31_28=addr[31:28]                               PC-Out(S733)
	S773= PC.Out=addr+4                                         PC-Out(S734)
	S774= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S736)
	S775= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S736)
	S776= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S736)
	S777= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S738)
	S778= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S738)
	S779= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S738)
	S780= ICacheReg.Out={27,rS,rA,UIMM}                         ICacheReg-Out(S742)
	S781= ICacheReg.Out26_31={27,rS,rA,UIMM}[26:31]             ICacheReg-Out(S742)
	S782= ICacheReg.Out30_31={27,rS,rA,UIMM}[30:31]             ICacheReg-Out(S742)
	S783= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S744)
	S784= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S744)
	S785= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S744)
	S786= IR.Out0_5=27                                          IR-Out(S749)
	S787= IR.Out6_10=rS                                         IR-Out(S749)
	S788= IR.Out11_15=rA                                        IR-Out(S749)
	S789= IR.Out16_31=UIMM                                      IR-Out(S749)
	S790= A.Out=a                                               A-Out(S753)
	S791= A.Out26_31=a[26:31]                                   A-Out(S753)
	S792= A.Out30_31=a[30:31]                                   A-Out(S753)
	S793= B.Out={UIMM,16'b0}                                    B-Out(S755)
	S794= B.Out26_31={UIMM,16'b0}[26:31]                        B-Out(S755)
	S795= B.Out30_31={UIMM,16'b0}[30:31]                        B-Out(S755)
	S796= ALUOut.Out=a^{UIMM,16'b0}                             ALUOut-Out(S757)
	S797= ALUOut.Out26_31=a^{UIMM,16'b0}[26:31]                 ALUOut-Out(S757)
	S798= ALUOut.Out30_31=a^{UIMM,16'b0}[30:31]                 ALUOut-Out(S757)
	S799= XER.SOOut=so                                          XER-SO-Out(S759)
	S800= DR4bit.Out={Compare0(a^{UIMM,16'b0}),so}              DR4bit-Out(S763)
	S801= DR4bit.Out26_31={Compare0(a^{UIMM,16'b0}),so}[26:31]  DR4bit-Out(S763)
	S802= DR4bit.Out30_31={Compare0(a^{UIMM,16'b0}),so}[30:31]  DR4bit-Out(S763)
	S803= PIDReg.Out=>IMMU.PID                                  Premise(F342)
	S804= IMMU.PID=pid                                          Path(S768,S803)
	S805= PC.Out=>IMMU.IEA                                      Premise(F343)
	S806= IMMU.IEA=addr+4                                       Path(S773,S805)
	S807= IMMU.Addr={pid,addr+4}                                IMMU-Search(S804,S806)
	S808= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S804,S806)
	S809= IMMU.Addr=>IAddrReg.In                                Premise(F344)
	S810= IAddrReg.In={pid,addr+4}                              Path(S807,S809)
	S811= IMMU.Hit=>IMMUHitReg.In                               Premise(F345)
	S812= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S808,S811)
	S813= PC.Out=>ICache.IEA                                    Premise(F346)
	S814= ICache.IEA=addr+4                                     Path(S773,S813)
	S815= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S814)
	S816= ICache.Out=>ICacheReg.In                              Premise(F347)
	S817= ICache.Hit=>ICacheHitReg.In                           Premise(F348)
	S818= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S815,S817)
	S819= IMMUHitReg.Out=>CU.IMemHit                            Premise(F349)
	S820= CU.IMemHit=IMMUHit(pid,addr)                          Path(S777,S819)
	S821= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F350)
	S822= CU.ICacheHit=ICacheHit(addr)                          Path(S783,S821)
	S823= IAddrReg.Out=>IMem.RAddr                              Premise(F351)
	S824= IMem.RAddr={pid,addr}                                 Path(S774,S823)
	S825= IMem.Out={27,rS,rA,UIMM}                              IMem-Read(S824,S746)
	S826= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S824,S746)
	S827= IMem.Out=>IRMux.MemData                               Premise(F352)
	S828= IRMux.MemData={27,rS,rA,UIMM}                         Path(S825,S827)
	S829= ICacheReg.Out=>IRMux.CacheData                        Premise(F353)
	S830= IRMux.CacheData={27,rS,rA,UIMM}                       Path(S780,S829)
	S831= IRMux.Out={27,rS,rA,UIMM}                             IRMux-Select(S828,S830)
	S832= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F354)
	S833= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S777,S832)
	S834= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F355)
	S835= IRMux.CacheSel=ICacheHit(addr)                        Path(S783,S834)
	S836= IRMux.Out=>IR.In                                      Premise(F356)
	S837= IR.In={27,rS,rA,UIMM}                                 Path(S831,S836)
	S838= IMem.MEM8WordOut=>ICache.WData                        Premise(F357)
	S839= ICache.WData=IMemGet8Word({pid,addr})                 Path(S826,S838)
	S840= PC.Out=>ICache.IEA                                    Premise(F358)
	S841= IR.Out0_5=>CU.Op                                      Premise(F359)
	S842= CU.Op=27                                              Path(S786,S841)
	S843= CU.Func=alu_xor                                       CU(S842)
	S844= IR.Out6_10=>GPRegs.RReg1                              Premise(F360)
	S845= GPRegs.RReg1=rS                                       Path(S787,S844)
	S846= GPRegs.Rdata1=a                                       GPRegs-Read(S845,S751)
	S847= IR.Out16_31=>IMMSEXT.In                               Premise(F361)
	S848= IMMSEXT.In=UIMM                                       Path(S789,S847)
	S849= IMMSEXT.Out={UIMM,16'b0}                              IMMSEXT(S848)
	S850= GPRegs.Rdata1=>A.In                                   Premise(F362)
	S851= A.In=a                                                Path(S846,S850)
	S852= IMMSEXT.Out=>B.In                                     Premise(F363)
	S853= B.In={UIMM,16'b0}                                     Path(S849,S852)
	S854= A.Out=>ALU.A                                          Premise(F364)
	S855= ALU.A=a                                               Path(S790,S854)
	S856= B.Out=>ALU.B                                          Premise(F365)
	S857= ALU.B={UIMM,16'b0}                                    Path(S793,S856)
	S858= CU.Func=>ALU.Func                                     Premise(F366)
	S859= ALU.Func=alu_xor                                      Path(S843,S858)
	S860= ALU.Out=a^{UIMM,16'b0}                                ALU(S855,S857)
	S861= ALU.CMP=Compare0(a^{UIMM,16'b0})                      ALU(S855,S857)
	S862= ALU.OV=OverFlow(a^{UIMM,16'b0})                       ALU(S855,S857)
	S863= ALU.CA=Carry(a^{UIMM,16'b0})                          ALU(S855,S857)
	S864= ALU.Out=>ALUOut.In                                    Premise(F367)
	S865= ALUOut.In=a^{UIMM,16'b0}                              Path(S860,S864)
	S866= ALU.CMP=>DataCmb.A                                    Premise(F368)
	S867= DataCmb.A=Compare0(a^{UIMM,16'b0})                    Path(S861,S866)
	S868= XER.SOOut=>DataCmb.B                                  Premise(F369)
	S869= DataCmb.B=so                                          Path(S799,S868)
	S870= DataCmb.Out={Compare0(a^{UIMM,16'b0}),so}             DataCmb(S867,S869)
	S871= DataCmb.Out=>DR4bit.In                                Premise(F370)
	S872= DR4bit.In={Compare0(a^{UIMM,16'b0}),so}               Path(S870,S871)
	S873= IR.Out11_15=>GPRegs.WReg                              Premise(F371)
	S874= GPRegs.WReg=rA                                        Path(S788,S873)
	S875= ALUOut.Out=>GPRegs.WData                              Premise(F372)
	S876= GPRegs.WData=a^{UIMM,16'b0}                           Path(S796,S875)
	S877= DR4bit.Out=>CRRegs.CR0In                              Premise(F373)
	S878= CRRegs.CR0In={Compare0(a^{UIMM,16'b0}),so}            Path(S800,S877)
	S879= CtrlPIDReg=0                                          Premise(F374)
	S880= [PIDReg]=pid                                          PIDReg-Hold(S729,S879)
	S881= CtrlIMMU=0                                            Premise(F375)
	S882= CtrlPC=0                                              Premise(F376)
	S883= CtrlPCInc=0                                           Premise(F377)
	S884= PC[CIA]=addr                                          PC-Hold(S733,S883)
	S885= PC[Out]=addr+4                                        PC-Hold(S734,S882,S883)
	S886= CtrlIAddrReg=0                                        Premise(F378)
	S887= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S736,S886)
	S888= CtrlIMMUHitReg=0                                      Premise(F379)
	S889= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S738,S888)
	S890= CtrlICache=0                                          Premise(F380)
	S891= ICache[addr]={27,rS,rA,UIMM}                          ICache-Hold(S740,S890)
	S892= CtrlICacheReg=0                                       Premise(F381)
	S893= [ICacheReg]={27,rS,rA,UIMM}                           ICacheReg-Hold(S742,S892)
	S894= CtrlICacheHitReg=0                                    Premise(F382)
	S895= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S744,S894)
	S896= CtrlIMem=0                                            Premise(F383)
	S897= IMem[{pid,addr}]={27,rS,rA,UIMM}                      IMem-Hold(S746,S896)
	S898= CtrlIRMux=0                                           Premise(F384)
	S899= CtrlIR=0                                              Premise(F385)
	S900= [IR]={27,rS,rA,UIMM}                                  IR-Hold(S749,S899)
	S901= CtrlGPRegs=0                                          Premise(F386)
	S902= GPRegs[rS]=a                                          GPRegs-Hold(S751,S901)
	S903= CtrlA=0                                               Premise(F387)
	S904= [A]=a                                                 A-Hold(S753,S903)
	S905= CtrlB=0                                               Premise(F388)
	S906= [B]={UIMM,16'b0}                                      B-Hold(S755,S905)
	S907= CtrlALUOut=0                                          Premise(F389)
	S908= [ALUOut]=a^{UIMM,16'b0}                               ALUOut-Hold(S757,S907)
	S909= CtrlXERSO=0                                           Premise(F390)
	S910= XER[SO]=so                                            XER-SO-Hold(S759,S909)
	S911= CtrlXEROV=0                                           Premise(F391)
	S912= CtrlXERCA=0                                           Premise(F392)
	S913= CtrlDR4bit=0                                          Premise(F393)
	S914= [DR4bit]={Compare0(a^{UIMM,16'b0}),so}                DR4bit-Hold(S763,S913)
	S915= CtrlCRRegs=0                                          Premise(F394)
	S916= CtrlCRRegsCR0=0                                       Premise(F395)
	S917= CtrlCRRegsW4bitRegs=0                                 Premise(F396)
	S918= CtrlCRRegsW1bitRegs=0                                 Premise(F397)

WB	S919= PIDReg.Out=pid                                        PIDReg-Out(S880)
	S920= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S880)
	S921= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S880)
	S922= PC.CIA=addr                                           PC-Out(S884)
	S923= PC.CIA31_28=addr[31:28]                               PC-Out(S884)
	S924= PC.Out=addr+4                                         PC-Out(S885)
	S925= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S887)
	S926= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S887)
	S927= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S887)
	S928= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S889)
	S929= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S889)
	S930= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S889)
	S931= ICacheReg.Out={27,rS,rA,UIMM}                         ICacheReg-Out(S893)
	S932= ICacheReg.Out26_31={27,rS,rA,UIMM}[26:31]             ICacheReg-Out(S893)
	S933= ICacheReg.Out30_31={27,rS,rA,UIMM}[30:31]             ICacheReg-Out(S893)
	S934= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S895)
	S935= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S895)
	S936= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S895)
	S937= IR.Out0_5=27                                          IR-Out(S900)
	S938= IR.Out6_10=rS                                         IR-Out(S900)
	S939= IR.Out11_15=rA                                        IR-Out(S900)
	S940= IR.Out16_31=UIMM                                      IR-Out(S900)
	S941= A.Out=a                                               A-Out(S904)
	S942= A.Out26_31=a[26:31]                                   A-Out(S904)
	S943= A.Out30_31=a[30:31]                                   A-Out(S904)
	S944= B.Out={UIMM,16'b0}                                    B-Out(S906)
	S945= B.Out26_31={UIMM,16'b0}[26:31]                        B-Out(S906)
	S946= B.Out30_31={UIMM,16'b0}[30:31]                        B-Out(S906)
	S947= ALUOut.Out=a^{UIMM,16'b0}                             ALUOut-Out(S908)
	S948= ALUOut.Out26_31=a^{UIMM,16'b0}[26:31]                 ALUOut-Out(S908)
	S949= ALUOut.Out30_31=a^{UIMM,16'b0}[30:31]                 ALUOut-Out(S908)
	S950= XER.SOOut=so                                          XER-SO-Out(S910)
	S951= DR4bit.Out={Compare0(a^{UIMM,16'b0}),so}              DR4bit-Out(S914)
	S952= DR4bit.Out26_31={Compare0(a^{UIMM,16'b0}),so}[26:31]  DR4bit-Out(S914)
	S953= DR4bit.Out30_31={Compare0(a^{UIMM,16'b0}),so}[30:31]  DR4bit-Out(S914)
	S954= PIDReg.Out=>IMMU.PID                                  Premise(F398)
	S955= IMMU.PID=pid                                          Path(S919,S954)
	S956= PC.Out=>IMMU.IEA                                      Premise(F399)
	S957= IMMU.IEA=addr+4                                       Path(S924,S956)
	S958= IMMU.Addr={pid,addr+4}                                IMMU-Search(S955,S957)
	S959= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S955,S957)
	S960= IMMU.Addr=>IAddrReg.In                                Premise(F400)
	S961= IAddrReg.In={pid,addr+4}                              Path(S958,S960)
	S962= IMMU.Hit=>IMMUHitReg.In                               Premise(F401)
	S963= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S959,S962)
	S964= PC.Out=>ICache.IEA                                    Premise(F402)
	S965= ICache.IEA=addr+4                                     Path(S924,S964)
	S966= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S965)
	S967= ICache.Out=>ICacheReg.In                              Premise(F403)
	S968= ICache.Hit=>ICacheHitReg.In                           Premise(F404)
	S969= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S966,S968)
	S970= IMMUHitReg.Out=>CU.IMemHit                            Premise(F405)
	S971= CU.IMemHit=IMMUHit(pid,addr)                          Path(S928,S970)
	S972= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F406)
	S973= CU.ICacheHit=ICacheHit(addr)                          Path(S934,S972)
	S974= IAddrReg.Out=>IMem.RAddr                              Premise(F407)
	S975= IMem.RAddr={pid,addr}                                 Path(S925,S974)
	S976= IMem.Out={27,rS,rA,UIMM}                              IMem-Read(S975,S897)
	S977= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S975,S897)
	S978= IMem.Out=>IRMux.MemData                               Premise(F408)
	S979= IRMux.MemData={27,rS,rA,UIMM}                         Path(S976,S978)
	S980= ICacheReg.Out=>IRMux.CacheData                        Premise(F409)
	S981= IRMux.CacheData={27,rS,rA,UIMM}                       Path(S931,S980)
	S982= IRMux.Out={27,rS,rA,UIMM}                             IRMux-Select(S979,S981)
	S983= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F410)
	S984= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S928,S983)
	S985= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F411)
	S986= IRMux.CacheSel=ICacheHit(addr)                        Path(S934,S985)
	S987= IRMux.Out=>IR.In                                      Premise(F412)
	S988= IR.In={27,rS,rA,UIMM}                                 Path(S982,S987)
	S989= IMem.MEM8WordOut=>ICache.WData                        Premise(F413)
	S990= ICache.WData=IMemGet8Word({pid,addr})                 Path(S977,S989)
	S991= PC.Out=>ICache.IEA                                    Premise(F414)
	S992= IR.Out0_5=>CU.Op                                      Premise(F415)
	S993= CU.Op=27                                              Path(S937,S992)
	S994= CU.Func=alu_xor                                       CU(S993)
	S995= IR.Out6_10=>GPRegs.RReg1                              Premise(F416)
	S996= GPRegs.RReg1=rS                                       Path(S938,S995)
	S997= GPRegs.Rdata1=a                                       GPRegs-Read(S996,S902)
	S998= IR.Out16_31=>IMMSEXT.In                               Premise(F417)
	S999= IMMSEXT.In=UIMM                                       Path(S940,S998)
	S1000= IMMSEXT.Out={UIMM,16'b0}                             IMMSEXT(S999)
	S1001= GPRegs.Rdata1=>A.In                                  Premise(F418)
	S1002= A.In=a                                               Path(S997,S1001)
	S1003= IMMSEXT.Out=>B.In                                    Premise(F419)
	S1004= B.In={UIMM,16'b0}                                    Path(S1000,S1003)
	S1005= A.Out=>ALU.A                                         Premise(F420)
	S1006= ALU.A=a                                              Path(S941,S1005)
	S1007= B.Out=>ALU.B                                         Premise(F421)
	S1008= ALU.B={UIMM,16'b0}                                   Path(S944,S1007)
	S1009= CU.Func=>ALU.Func                                    Premise(F422)
	S1010= ALU.Func=alu_xor                                     Path(S994,S1009)
	S1011= ALU.Out=a^{UIMM,16'b0}                               ALU(S1006,S1008)
	S1012= ALU.CMP=Compare0(a^{UIMM,16'b0})                     ALU(S1006,S1008)
	S1013= ALU.OV=OverFlow(a^{UIMM,16'b0})                      ALU(S1006,S1008)
	S1014= ALU.CA=Carry(a^{UIMM,16'b0})                         ALU(S1006,S1008)
	S1015= ALU.Out=>ALUOut.In                                   Premise(F423)
	S1016= ALUOut.In=a^{UIMM,16'b0}                             Path(S1011,S1015)
	S1017= ALU.CMP=>DataCmb.A                                   Premise(F424)
	S1018= DataCmb.A=Compare0(a^{UIMM,16'b0})                   Path(S1012,S1017)
	S1019= XER.SOOut=>DataCmb.B                                 Premise(F425)
	S1020= DataCmb.B=so                                         Path(S950,S1019)
	S1021= DataCmb.Out={Compare0(a^{UIMM,16'b0}),so}            DataCmb(S1018,S1020)
	S1022= DataCmb.Out=>DR4bit.In                               Premise(F426)
	S1023= DR4bit.In={Compare0(a^{UIMM,16'b0}),so}              Path(S1021,S1022)
	S1024= IR.Out11_15=>GPRegs.WReg                             Premise(F427)
	S1025= GPRegs.WReg=rA                                       Path(S939,S1024)
	S1026= ALUOut.Out=>GPRegs.WData                             Premise(F428)
	S1027= GPRegs.WData=a^{UIMM,16'b0}                          Path(S947,S1026)
	S1028= DR4bit.Out=>CRRegs.CR0In                             Premise(F429)
	S1029= CRRegs.CR0In={Compare0(a^{UIMM,16'b0}),so}           Path(S951,S1028)
	S1030= CtrlPIDReg=0                                         Premise(F430)
	S1031= [PIDReg]=pid                                         PIDReg-Hold(S880,S1030)
	S1032= CtrlIMMU=0                                           Premise(F431)
	S1033= CtrlPC=0                                             Premise(F432)
	S1034= CtrlPCInc=0                                          Premise(F433)
	S1035= PC[CIA]=addr                                         PC-Hold(S884,S1034)
	S1036= PC[Out]=addr+4                                       PC-Hold(S885,S1033,S1034)
	S1037= CtrlIAddrReg=0                                       Premise(F434)
	S1038= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S887,S1037)
	S1039= CtrlIMMUHitReg=0                                     Premise(F435)
	S1040= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S889,S1039)
	S1041= CtrlICache=0                                         Premise(F436)
	S1042= ICache[addr]={27,rS,rA,UIMM}                         ICache-Hold(S891,S1041)
	S1043= CtrlICacheReg=0                                      Premise(F437)
	S1044= [ICacheReg]={27,rS,rA,UIMM}                          ICacheReg-Hold(S893,S1043)
	S1045= CtrlICacheHitReg=0                                   Premise(F438)
	S1046= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S895,S1045)
	S1047= CtrlIMem=0                                           Premise(F439)
	S1048= IMem[{pid,addr}]={27,rS,rA,UIMM}                     IMem-Hold(S897,S1047)
	S1049= CtrlIRMux=0                                          Premise(F440)
	S1050= CtrlIR=0                                             Premise(F441)
	S1051= [IR]={27,rS,rA,UIMM}                                 IR-Hold(S900,S1050)
	S1052= CtrlGPRegs=1                                         Premise(F442)
	S1053= GPRegs[rA]=a^{UIMM,16'b0}                            GPRegs-Write(S1025,S1027,S1052)
	S1054= CtrlA=0                                              Premise(F443)
	S1055= [A]=a                                                A-Hold(S904,S1054)
	S1056= CtrlB=0                                              Premise(F444)
	S1057= [B]={UIMM,16'b0}                                     B-Hold(S906,S1056)
	S1058= CtrlALUOut=0                                         Premise(F445)
	S1059= [ALUOut]=a^{UIMM,16'b0}                              ALUOut-Hold(S908,S1058)
	S1060= CtrlXERSO=0                                          Premise(F446)
	S1061= XER[SO]=so                                           XER-SO-Hold(S910,S1060)
	S1062= CtrlXEROV=0                                          Premise(F447)
	S1063= CtrlXERCA=0                                          Premise(F448)
	S1064= CtrlDR4bit=0                                         Premise(F449)
	S1065= [DR4bit]={Compare0(a^{UIMM,16'b0}),so}               DR4bit-Hold(S914,S1064)
	S1066= CtrlCRRegs=0                                         Premise(F450)
	S1067= CtrlCRRegsCR0=1                                      Premise(F451)
	S1068= CRRegs[CR0]={Compare0(a^{UIMM,16'b0}),so}            CRRegs-CR0-Write(S1029,S1067)
	S1069= CtrlCRRegsW4bitRegs=0                                Premise(F452)
	S1070= CtrlCRRegsW1bitRegs=0                                Premise(F453)

POST	S1031= [PIDReg]=pid                                         PIDReg-Hold(S880,S1030)
	S1035= PC[CIA]=addr                                         PC-Hold(S884,S1034)
	S1036= PC[Out]=addr+4                                       PC-Hold(S885,S1033,S1034)
	S1038= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S887,S1037)
	S1040= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S889,S1039)
	S1042= ICache[addr]={27,rS,rA,UIMM}                         ICache-Hold(S891,S1041)
	S1044= [ICacheReg]={27,rS,rA,UIMM}                          ICacheReg-Hold(S893,S1043)
	S1046= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S895,S1045)
	S1048= IMem[{pid,addr}]={27,rS,rA,UIMM}                     IMem-Hold(S897,S1047)
	S1051= [IR]={27,rS,rA,UIMM}                                 IR-Hold(S900,S1050)
	S1053= GPRegs[rA]=a^{UIMM,16'b0}                            GPRegs-Write(S1025,S1027,S1052)
	S1055= [A]=a                                                A-Hold(S904,S1054)
	S1057= [B]={UIMM,16'b0}                                     B-Hold(S906,S1056)
	S1059= [ALUOut]=a^{UIMM,16'b0}                              ALUOut-Hold(S908,S1058)
	S1061= XER[SO]=so                                           XER-SO-Hold(S910,S1060)
	S1065= [DR4bit]={Compare0(a^{UIMM,16'b0}),so}               DR4bit-Hold(S914,S1064)
	S1068= CRRegs[CR0]={Compare0(a^{UIMM,16'b0}),so}            CRRegs-CR0-Write(S1029,S1067)

