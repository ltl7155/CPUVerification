
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,0,469}                       Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[SO]=so                                              Premise(F4)
	S5= XER[CA]=ca                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S8= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S9= PC.Out=addr                                             PC-Out(S1)
	S10= XER.SOOut=so                                           XER-SO-Out(S4)
	S11= XER.CAOut=ca                                           XER-CA-Out(S5)
	S12= PIDReg.Out=>IMMU.PID                                   Premise(F6)
	S13= IMMU.PID=pid                                           Path(S6,S12)
	S14= PC.Out=>IMMU.IEA                                       Premise(F7)
	S15= IMMU.IEA=addr                                          Path(S9,S14)
	S16= IMMU.Addr={pid,addr}                                   IMMU-Search(S13,S15)
	S17= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S13,S15)
	S18= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S19= IAddrReg.In={pid,addr}                                 Path(S16,S18)
	S20= IMMU.Hit=>IMMUHitReg.In                                Premise(F9)
	S21= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S17,S20)
	S22= PC.Out=>ICache.IEA                                     Premise(F10)
	S23= ICache.IEA=addr                                        Path(S9,S22)
	S24= ICache.Hit=ICacheHit(addr)                             ICache-Search(S23)
	S25= ICache.Out=>ICacheReg.In                               Premise(F11)
	S26= ICache.Hit=>ICacheHitReg.In                            Premise(F12)
	S27= ICacheHitReg.In=ICacheHit(addr)                        Path(S24,S26)
	S28= IMMUHitReg.Out=>CU.IMemHit                             Premise(F13)
	S29= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F14)
	S30= IAddrReg.Out=>IMem.RAddr                               Premise(F15)
	S31= IMem.Out=>IRMux.MemData                                Premise(F16)
	S32= ICacheReg.Out=>IRMux.CacheData                         Premise(F17)
	S33= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F18)
	S34= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F19)
	S35= IRMux.Out=>IR.In                                       Premise(F20)
	S36= IMem.MEM8WordOut=>ICache.WData                         Premise(F21)
	S37= PC.Out=>ICache.IEA                                     Premise(F22)
	S38= IR.Out0_5=>CU.Op                                       Premise(F23)
	S39= IR.Out11_15=>GPRegs.RReg1                              Premise(F24)
	S40= IR.Out21_31=>CU.IRFunc                                 Premise(F25)
	S41= GPRegs.Rdata1=>A.In                                    Premise(F26)
	S42= A.Out=>ALU.A                                           Premise(F27)
	S43= B.Out=>ALU.B                                           Premise(F28)
	S44= XER.CAOut=>ALU.CAIn                                    Premise(F29)
	S45= ALU.CAIn=ca                                            Path(S11,S44)
	S46= CU.Func=>ALU.Func                                      Premise(F30)
	S47= ALU.Out=>ALUOut.In                                     Premise(F31)
	S48= ALU.CA=>CAReg.In                                       Premise(F32)
	S49= ALU.CMP=>DataCmb.A                                     Premise(F33)
	S50= XER.SOOut=>DataCmb.B                                   Premise(F34)
	S51= DataCmb.B=so                                           Path(S10,S50)
	S52= DataCmb.Out=>DR4bit.In                                 Premise(F35)
	S53= IR.Out6_10=>GPRegs.WReg                                Premise(F36)
	S54= ALUOut.Out=>GPRegs.WData                               Premise(F37)
	S55= DR4bit.Out=>CRRegs.CR0In                               Premise(F38)
	S56= CAReg.Out=>XER.CAIn                                    Premise(F39)
	S57= CtrlPIDReg=0                                           Premise(F40)
	S58= [PIDReg]=pid                                           PIDReg-Hold(S0,S57)
	S59= CtrlIMMU=0                                             Premise(F41)
	S60= CtrlPC=0                                               Premise(F42)
	S61= CtrlPCInc=0                                            Premise(F43)
	S62= PC[Out]=addr                                           PC-Hold(S1,S60,S61)
	S63= CtrlIAddrReg=1                                         Premise(F44)
	S64= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S19,S63)
	S65= CtrlIMMUHitReg=1                                       Premise(F45)
	S66= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S21,S65)
	S67= CtrlICache=0                                           Premise(F46)
	S68= CtrlICacheReg=1                                        Premise(F47)
	S69= CtrlICacheHitReg=1                                     Premise(F48)
	S70= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S27,S69)
	S71= CtrlIMem=0                                             Premise(F49)
	S72= IMem[{pid,addr}]={31,rT,rA,0,469}                      IMem-Hold(S2,S71)
	S73= CtrlIRMux=0                                            Premise(F50)
	S74= CtrlIR=0                                               Premise(F51)
	S75= CtrlGPRegs=0                                           Premise(F52)
	S76= GPRegs[rA]=a                                           GPRegs-Hold(S3,S75)
	S77= CtrlA=0                                                Premise(F53)
	S78= CtrlB=0                                                Premise(F54)
	S79= CtrlXERSO=0                                            Premise(F55)
	S80= XER[SO]=so                                             XER-SO-Hold(S4,S79)
	S81= CtrlXEROV=0                                            Premise(F56)
	S82= CtrlXERCA=0                                            Premise(F57)
	S83= XER[CA]=ca                                             XER-CA-Hold(S5,S82)
	S84= CtrlALUOut=0                                           Premise(F58)
	S85= CtrlCAReg=0                                            Premise(F59)
	S86= CtrlDR4bit=0                                           Premise(F60)
	S87= CtrlCRRegs=0                                           Premise(F61)
	S88= CtrlCRRegsCR0=0                                        Premise(F62)
	S89= CtrlCRRegsW4bitRegs=0                                  Premise(F63)
	S90= CtrlCRRegsW1bitRegs=0                                  Premise(F64)

IMMU	S91= PIDReg.Out=pid                                         PIDReg-Out(S58)
	S92= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S58)
	S93= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S58)
	S94= PC.Out=addr                                            PC-Out(S62)
	S95= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S64)
	S96= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S64)
	S97= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S64)
	S98= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S66)
	S99= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S66)
	S100= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S66)
	S101= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S70)
	S102= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S70)
	S103= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S70)
	S104= XER.SOOut=so                                          XER-SO-Out(S80)
	S105= XER.CAOut=ca                                          XER-CA-Out(S83)
	S106= PIDReg.Out=>IMMU.PID                                  Premise(F65)
	S107= IMMU.PID=pid                                          Path(S91,S106)
	S108= PC.Out=>IMMU.IEA                                      Premise(F66)
	S109= IMMU.IEA=addr                                         Path(S94,S108)
	S110= IMMU.Addr={pid,addr}                                  IMMU-Search(S107,S109)
	S111= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S107,S109)
	S112= IMMU.Addr=>IAddrReg.In                                Premise(F67)
	S113= IAddrReg.In={pid,addr}                                Path(S110,S112)
	S114= IMMU.Hit=>IMMUHitReg.In                               Premise(F68)
	S115= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S111,S114)
	S116= PC.Out=>ICache.IEA                                    Premise(F69)
	S117= ICache.IEA=addr                                       Path(S94,S116)
	S118= ICache.Hit=ICacheHit(addr)                            ICache-Search(S117)
	S119= ICache.Out=>ICacheReg.In                              Premise(F70)
	S120= ICache.Hit=>ICacheHitReg.In                           Premise(F71)
	S121= ICacheHitReg.In=ICacheHit(addr)                       Path(S118,S120)
	S122= IMMUHitReg.Out=>CU.IMemHit                            Premise(F72)
	S123= CU.IMemHit=IMMUHit(pid,addr)                          Path(S98,S122)
	S124= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F73)
	S125= CU.ICacheHit=ICacheHit(addr)                          Path(S101,S124)
	S126= IAddrReg.Out=>IMem.RAddr                              Premise(F74)
	S127= IMem.RAddr={pid,addr}                                 Path(S95,S126)
	S128= IMem.Out={31,rT,rA,0,469}                             IMem-Read(S127,S72)
	S129= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S127,S72)
	S130= IMem.Out=>IRMux.MemData                               Premise(F75)
	S131= IRMux.MemData={31,rT,rA,0,469}                        Path(S128,S130)
	S132= IRMux.Out={31,rT,rA,0,469}                            IRMux-Select(S131)
	S133= ICacheReg.Out=>IRMux.CacheData                        Premise(F76)
	S134= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F77)
	S135= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S98,S134)
	S136= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F78)
	S137= IRMux.CacheSel=ICacheHit(addr)                        Path(S101,S136)
	S138= IRMux.Out=>IR.In                                      Premise(F79)
	S139= IR.In={31,rT,rA,0,469}                                Path(S132,S138)
	S140= IMem.MEM8WordOut=>ICache.WData                        Premise(F80)
	S141= ICache.WData=IMemGet8Word({pid,addr})                 Path(S129,S140)
	S142= PC.Out=>ICache.IEA                                    Premise(F81)
	S143= IR.Out0_5=>CU.Op                                      Premise(F82)
	S144= IR.Out11_15=>GPRegs.RReg1                             Premise(F83)
	S145= IR.Out21_31=>CU.IRFunc                                Premise(F84)
	S146= GPRegs.Rdata1=>A.In                                   Premise(F85)
	S147= A.Out=>ALU.A                                          Premise(F86)
	S148= B.Out=>ALU.B                                          Premise(F87)
	S149= XER.CAOut=>ALU.CAIn                                   Premise(F88)
	S150= ALU.CAIn=ca                                           Path(S105,S149)
	S151= CU.Func=>ALU.Func                                     Premise(F89)
	S152= ALU.Out=>ALUOut.In                                    Premise(F90)
	S153= ALU.CA=>CAReg.In                                      Premise(F91)
	S154= ALU.CMP=>DataCmb.A                                    Premise(F92)
	S155= XER.SOOut=>DataCmb.B                                  Premise(F93)
	S156= DataCmb.B=so                                          Path(S104,S155)
	S157= DataCmb.Out=>DR4bit.In                                Premise(F94)
	S158= IR.Out6_10=>GPRegs.WReg                               Premise(F95)
	S159= ALUOut.Out=>GPRegs.WData                              Premise(F96)
	S160= DR4bit.Out=>CRRegs.CR0In                              Premise(F97)
	S161= CAReg.Out=>XER.CAIn                                   Premise(F98)
	S162= CtrlPIDReg=0                                          Premise(F99)
	S163= [PIDReg]=pid                                          PIDReg-Hold(S58,S162)
	S164= CtrlIMMU=0                                            Premise(F100)
	S165= CtrlPC=0                                              Premise(F101)
	S166= CtrlPCInc=1                                           Premise(F102)
	S167= PC[Out]=addr+4                                        PC-Inc(S62,S165,S166)
	S168= PC[CIA]=addr                                          PC-Inc(S62,S165,S166)
	S169= CtrlIAddrReg=0                                        Premise(F103)
	S170= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S64,S169)
	S171= CtrlIMMUHitReg=0                                      Premise(F104)
	S172= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S66,S171)
	S173= CtrlICache=1                                          Premise(F105)
	S174= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S117,S141,S173)
	S175= CtrlICacheReg=0                                       Premise(F106)
	S176= CtrlICacheHitReg=0                                    Premise(F107)
	S177= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S70,S176)
	S178= CtrlIMem=0                                            Premise(F108)
	S179= IMem[{pid,addr}]={31,rT,rA,0,469}                     IMem-Hold(S72,S178)
	S180= CtrlIRMux=0                                           Premise(F109)
	S181= CtrlIR=1                                              Premise(F110)
	S182= [IR]={31,rT,rA,0,469}                                 IR-Write(S139,S181)
	S183= CtrlGPRegs=0                                          Premise(F111)
	S184= GPRegs[rA]=a                                          GPRegs-Hold(S76,S183)
	S185= CtrlA=0                                               Premise(F112)
	S186= CtrlB=0                                               Premise(F113)
	S187= CtrlXERSO=0                                           Premise(F114)
	S188= XER[SO]=so                                            XER-SO-Hold(S80,S187)
	S189= CtrlXEROV=0                                           Premise(F115)
	S190= CtrlXERCA=0                                           Premise(F116)
	S191= XER[CA]=ca                                            XER-CA-Hold(S83,S190)
	S192= CtrlALUOut=0                                          Premise(F117)
	S193= CtrlCAReg=0                                           Premise(F118)
	S194= CtrlDR4bit=0                                          Premise(F119)
	S195= CtrlCRRegs=0                                          Premise(F120)
	S196= CtrlCRRegsCR0=0                                       Premise(F121)
	S197= CtrlCRRegsW4bitRegs=0                                 Premise(F122)
	S198= CtrlCRRegsW1bitRegs=0                                 Premise(F123)

ID	S199= PIDReg.Out=pid                                        PIDReg-Out(S163)
	S200= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S163)
	S201= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S163)
	S202= PC.Out=addr+4                                         PC-Out(S167)
	S203= PC.CIA=addr                                           PC-Out(S168)
	S204= PC.CIA31_28=addr[31:28]                               PC-Out(S168)
	S205= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S170)
	S206= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S170)
	S207= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S170)
	S208= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S172)
	S209= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S172)
	S210= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S172)
	S211= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S177)
	S212= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S177)
	S213= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S177)
	S214= IR.Out0_5=31                                          IR-Out(S182)
	S215= IR.Out6_10=rT                                         IR-Out(S182)
	S216= IR.Out11_15=rA                                        IR-Out(S182)
	S217= IR.Out16_20=0                                         IR-Out(S182)
	S218= IR.Out21_31=469                                       IR-Out(S182)
	S219= XER.SOOut=so                                          XER-SO-Out(S188)
	S220= XER.CAOut=ca                                          XER-CA-Out(S191)
	S221= PIDReg.Out=>IMMU.PID                                  Premise(F124)
	S222= IMMU.PID=pid                                          Path(S199,S221)
	S223= PC.Out=>IMMU.IEA                                      Premise(F125)
	S224= IMMU.IEA=addr+4                                       Path(S202,S223)
	S225= IMMU.Addr={pid,addr+4}                                IMMU-Search(S222,S224)
	S226= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S222,S224)
	S227= IMMU.Addr=>IAddrReg.In                                Premise(F126)
	S228= IAddrReg.In={pid,addr+4}                              Path(S225,S227)
	S229= IMMU.Hit=>IMMUHitReg.In                               Premise(F127)
	S230= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S226,S229)
	S231= PC.Out=>ICache.IEA                                    Premise(F128)
	S232= ICache.IEA=addr+4                                     Path(S202,S231)
	S233= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S232)
	S234= ICache.Out=>ICacheReg.In                              Premise(F129)
	S235= ICache.Hit=>ICacheHitReg.In                           Premise(F130)
	S236= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S233,S235)
	S237= IMMUHitReg.Out=>CU.IMemHit                            Premise(F131)
	S238= CU.IMemHit=IMMUHit(pid,addr)                          Path(S208,S237)
	S239= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F132)
	S240= CU.ICacheHit=ICacheHit(addr)                          Path(S211,S239)
	S241= IAddrReg.Out=>IMem.RAddr                              Premise(F133)
	S242= IMem.RAddr={pid,addr}                                 Path(S205,S241)
	S243= IMem.Out={31,rT,rA,0,469}                             IMem-Read(S242,S179)
	S244= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S242,S179)
	S245= IMem.Out=>IRMux.MemData                               Premise(F134)
	S246= IRMux.MemData={31,rT,rA,0,469}                        Path(S243,S245)
	S247= IRMux.Out={31,rT,rA,0,469}                            IRMux-Select(S246)
	S248= ICacheReg.Out=>IRMux.CacheData                        Premise(F135)
	S249= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F136)
	S250= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S208,S249)
	S251= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F137)
	S252= IRMux.CacheSel=ICacheHit(addr)                        Path(S211,S251)
	S253= IRMux.Out=>IR.In                                      Premise(F138)
	S254= IR.In={31,rT,rA,0,469}                                Path(S247,S253)
	S255= IMem.MEM8WordOut=>ICache.WData                        Premise(F139)
	S256= ICache.WData=IMemGet8Word({pid,addr})                 Path(S244,S255)
	S257= PC.Out=>ICache.IEA                                    Premise(F140)
	S258= IR.Out0_5=>CU.Op                                      Premise(F141)
	S259= CU.Op=31                                              Path(S214,S258)
	S260= IR.Out11_15=>GPRegs.RReg1                             Premise(F142)
	S261= GPRegs.RReg1=rA                                       Path(S216,S260)
	S262= GPRegs.Rdata1=a                                       GPRegs-Read(S261,S184)
	S263= IR.Out21_31=>CU.IRFunc                                Premise(F143)
	S264= CU.IRFunc=469                                         Path(S218,S263)
	S265= CU.Func=alu_adde                                      CU(S259,S264)
	S266= GPRegs.Rdata1=>A.In                                   Premise(F144)
	S267= A.In=a                                                Path(S262,S266)
	S268= B.In=32'hFFFFFFFF                                     Premise(F145)
	S269= A.Out=>ALU.A                                          Premise(F146)
	S270= B.Out=>ALU.B                                          Premise(F147)
	S271= XER.CAOut=>ALU.CAIn                                   Premise(F148)
	S272= ALU.CAIn=ca                                           Path(S220,S271)
	S273= CU.Func=>ALU.Func                                     Premise(F149)
	S274= ALU.Func=alu_adde                                     Path(S265,S273)
	S275= ALU.Out=>ALUOut.In                                    Premise(F150)
	S276= ALU.CA=>CAReg.In                                      Premise(F151)
	S277= ALU.CMP=>DataCmb.A                                    Premise(F152)
	S278= XER.SOOut=>DataCmb.B                                  Premise(F153)
	S279= DataCmb.B=so                                          Path(S219,S278)
	S280= DataCmb.Out=>DR4bit.In                                Premise(F154)
	S281= IR.Out6_10=>GPRegs.WReg                               Premise(F155)
	S282= GPRegs.WReg=rT                                        Path(S215,S281)
	S283= ALUOut.Out=>GPRegs.WData                              Premise(F156)
	S284= DR4bit.Out=>CRRegs.CR0In                              Premise(F157)
	S285= CAReg.Out=>XER.CAIn                                   Premise(F158)
	S286= CtrlPIDReg=0                                          Premise(F159)
	S287= [PIDReg]=pid                                          PIDReg-Hold(S163,S286)
	S288= CtrlIMMU=0                                            Premise(F160)
	S289= CtrlPC=0                                              Premise(F161)
	S290= CtrlPCInc=0                                           Premise(F162)
	S291= PC[CIA]=addr                                          PC-Hold(S168,S290)
	S292= PC[Out]=addr+4                                        PC-Hold(S167,S289,S290)
	S293= CtrlIAddrReg=0                                        Premise(F163)
	S294= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S170,S293)
	S295= CtrlIMMUHitReg=0                                      Premise(F164)
	S296= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S172,S295)
	S297= CtrlICache=0                                          Premise(F165)
	S298= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S174,S297)
	S299= CtrlICacheReg=0                                       Premise(F166)
	S300= CtrlICacheHitReg=0                                    Premise(F167)
	S301= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S177,S300)
	S302= CtrlIMem=0                                            Premise(F168)
	S303= IMem[{pid,addr}]={31,rT,rA,0,469}                     IMem-Hold(S179,S302)
	S304= CtrlIRMux=0                                           Premise(F169)
	S305= CtrlIR=0                                              Premise(F170)
	S306= [IR]={31,rT,rA,0,469}                                 IR-Hold(S182,S305)
	S307= CtrlGPRegs=0                                          Premise(F171)
	S308= GPRegs[rA]=a                                          GPRegs-Hold(S184,S307)
	S309= CtrlA=1                                               Premise(F172)
	S310= [A]=a                                                 A-Write(S267,S309)
	S311= CtrlB=1                                               Premise(F173)
	S312= [B]=32'hFFFFFFFF                                      B-Write(S268,S311)
	S313= CtrlXERSO=0                                           Premise(F174)
	S314= XER[SO]=so                                            XER-SO-Hold(S188,S313)
	S315= CtrlXEROV=0                                           Premise(F175)
	S316= CtrlXERCA=0                                           Premise(F176)
	S317= XER[CA]=ca                                            XER-CA-Hold(S191,S316)
	S318= CtrlALUOut=0                                          Premise(F177)
	S319= CtrlCAReg=0                                           Premise(F178)
	S320= CtrlDR4bit=0                                          Premise(F179)
	S321= CtrlCRRegs=0                                          Premise(F180)
	S322= CtrlCRRegsCR0=0                                       Premise(F181)
	S323= CtrlCRRegsW4bitRegs=0                                 Premise(F182)
	S324= CtrlCRRegsW1bitRegs=0                                 Premise(F183)

EX	S325= PIDReg.Out=pid                                        PIDReg-Out(S287)
	S326= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S287)
	S327= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S287)
	S328= PC.CIA=addr                                           PC-Out(S291)
	S329= PC.CIA31_28=addr[31:28]                               PC-Out(S291)
	S330= PC.Out=addr+4                                         PC-Out(S292)
	S331= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S294)
	S332= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S294)
	S333= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S294)
	S334= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S296)
	S335= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S296)
	S336= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S296)
	S337= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S301)
	S338= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S301)
	S339= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S301)
	S340= IR.Out0_5=31                                          IR-Out(S306)
	S341= IR.Out6_10=rT                                         IR-Out(S306)
	S342= IR.Out11_15=rA                                        IR-Out(S306)
	S343= IR.Out16_20=0                                         IR-Out(S306)
	S344= IR.Out21_31=469                                       IR-Out(S306)
	S345= A.Out=a                                               A-Out(S310)
	S346= A.Out26_31=a[26:31]                                   A-Out(S310)
	S347= A.Out30_31=a[30:31]                                   A-Out(S310)
	S348= B.Out=32'hFFFFFFFF                                    B-Out(S312)
	S349= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S312)
	S350= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S312)
	S351= XER.SOOut=so                                          XER-SO-Out(S314)
	S352= XER.CAOut=ca                                          XER-CA-Out(S317)
	S353= PIDReg.Out=>IMMU.PID                                  Premise(F184)
	S354= IMMU.PID=pid                                          Path(S325,S353)
	S355= PC.Out=>IMMU.IEA                                      Premise(F185)
	S356= IMMU.IEA=addr+4                                       Path(S330,S355)
	S357= IMMU.Addr={pid,addr+4}                                IMMU-Search(S354,S356)
	S358= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S354,S356)
	S359= IMMU.Addr=>IAddrReg.In                                Premise(F186)
	S360= IAddrReg.In={pid,addr+4}                              Path(S357,S359)
	S361= IMMU.Hit=>IMMUHitReg.In                               Premise(F187)
	S362= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S358,S361)
	S363= PC.Out=>ICache.IEA                                    Premise(F188)
	S364= ICache.IEA=addr+4                                     Path(S330,S363)
	S365= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S364)
	S366= ICache.Out=>ICacheReg.In                              Premise(F189)
	S367= ICache.Hit=>ICacheHitReg.In                           Premise(F190)
	S368= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S365,S367)
	S369= IMMUHitReg.Out=>CU.IMemHit                            Premise(F191)
	S370= CU.IMemHit=IMMUHit(pid,addr)                          Path(S334,S369)
	S371= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F192)
	S372= CU.ICacheHit=ICacheHit(addr)                          Path(S337,S371)
	S373= IAddrReg.Out=>IMem.RAddr                              Premise(F193)
	S374= IMem.RAddr={pid,addr}                                 Path(S331,S373)
	S375= IMem.Out={31,rT,rA,0,469}                             IMem-Read(S374,S303)
	S376= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S374,S303)
	S377= IMem.Out=>IRMux.MemData                               Premise(F194)
	S378= IRMux.MemData={31,rT,rA,0,469}                        Path(S375,S377)
	S379= IRMux.Out={31,rT,rA,0,469}                            IRMux-Select(S378)
	S380= ICacheReg.Out=>IRMux.CacheData                        Premise(F195)
	S381= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F196)
	S382= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S334,S381)
	S383= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F197)
	S384= IRMux.CacheSel=ICacheHit(addr)                        Path(S337,S383)
	S385= IRMux.Out=>IR.In                                      Premise(F198)
	S386= IR.In={31,rT,rA,0,469}                                Path(S379,S385)
	S387= IMem.MEM8WordOut=>ICache.WData                        Premise(F199)
	S388= ICache.WData=IMemGet8Word({pid,addr})                 Path(S376,S387)
	S389= PC.Out=>ICache.IEA                                    Premise(F200)
	S390= IR.Out0_5=>CU.Op                                      Premise(F201)
	S391= CU.Op=31                                              Path(S340,S390)
	S392= IR.Out11_15=>GPRegs.RReg1                             Premise(F202)
	S393= GPRegs.RReg1=rA                                       Path(S342,S392)
	S394= GPRegs.Rdata1=a                                       GPRegs-Read(S393,S308)
	S395= IR.Out21_31=>CU.IRFunc                                Premise(F203)
	S396= CU.IRFunc=469                                         Path(S344,S395)
	S397= CU.Func=alu_adde                                      CU(S391,S396)
	S398= GPRegs.Rdata1=>A.In                                   Premise(F204)
	S399= A.In=a                                                Path(S394,S398)
	S400= A.Out=>ALU.A                                          Premise(F205)
	S401= ALU.A=a                                               Path(S345,S400)
	S402= B.Out=>ALU.B                                          Premise(F206)
	S403= ALU.B=32'hFFFFFFFF                                    Path(S348,S402)
	S404= XER.CAOut=>ALU.CAIn                                   Premise(F207)
	S405= ALU.CAIn=ca                                           Path(S352,S404)
	S406= CU.Func=>ALU.Func                                     Premise(F208)
	S407= ALU.Func=alu_adde                                     Path(S397,S406)
	S408= ALU.Out=a+32'hFFFFFFFF+ca                             ALU(S401,S403,S405)
	S409= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                   ALU(S401,S403,S405)
	S410= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                    ALU(S401,S403,S405)
	S411= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                       ALU(S401,S403,S405)
	S412= ALU.Out=>ALUOut.In                                    Premise(F209)
	S413= ALUOut.In=a+32'hFFFFFFFF+ca                           Path(S408,S412)
	S414= ALU.CA=>CAReg.In                                      Premise(F210)
	S415= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                     Path(S411,S414)
	S416= ALU.CMP=>DataCmb.A                                    Premise(F211)
	S417= DataCmb.A=Compare0(a+32'hFFFFFFFF+ca)                 Path(S409,S416)
	S418= XER.SOOut=>DataCmb.B                                  Premise(F212)
	S419= DataCmb.B=so                                          Path(S351,S418)
	S420= DataCmb.Out={Compare0(a+32'hFFFFFFFF+ca),so}          DataCmb(S417,S419)
	S421= DataCmb.Out=>DR4bit.In                                Premise(F213)
	S422= DR4bit.In={Compare0(a+32'hFFFFFFFF+ca),so}            Path(S420,S421)
	S423= IR.Out6_10=>GPRegs.WReg                               Premise(F214)
	S424= GPRegs.WReg=rT                                        Path(S341,S423)
	S425= ALUOut.Out=>GPRegs.WData                              Premise(F215)
	S426= DR4bit.Out=>CRRegs.CR0In                              Premise(F216)
	S427= CAReg.Out=>XER.CAIn                                   Premise(F217)
	S428= CtrlPIDReg=0                                          Premise(F218)
	S429= [PIDReg]=pid                                          PIDReg-Hold(S287,S428)
	S430= CtrlIMMU=0                                            Premise(F219)
	S431= CtrlPC=0                                              Premise(F220)
	S432= CtrlPCInc=0                                           Premise(F221)
	S433= PC[CIA]=addr                                          PC-Hold(S291,S432)
	S434= PC[Out]=addr+4                                        PC-Hold(S292,S431,S432)
	S435= CtrlIAddrReg=0                                        Premise(F222)
	S436= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S294,S435)
	S437= CtrlIMMUHitReg=0                                      Premise(F223)
	S438= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S296,S437)
	S439= CtrlICache=0                                          Premise(F224)
	S440= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S298,S439)
	S441= CtrlICacheReg=0                                       Premise(F225)
	S442= CtrlICacheHitReg=0                                    Premise(F226)
	S443= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S301,S442)
	S444= CtrlIMem=0                                            Premise(F227)
	S445= IMem[{pid,addr}]={31,rT,rA,0,469}                     IMem-Hold(S303,S444)
	S446= CtrlIRMux=0                                           Premise(F228)
	S447= CtrlIR=0                                              Premise(F229)
	S448= [IR]={31,rT,rA,0,469}                                 IR-Hold(S306,S447)
	S449= CtrlGPRegs=0                                          Premise(F230)
	S450= GPRegs[rA]=a                                          GPRegs-Hold(S308,S449)
	S451= CtrlA=0                                               Premise(F231)
	S452= [A]=a                                                 A-Hold(S310,S451)
	S453= CtrlB=0                                               Premise(F232)
	S454= [B]=32'hFFFFFFFF                                      B-Hold(S312,S453)
	S455= CtrlXERSO=0                                           Premise(F233)
	S456= XER[SO]=so                                            XER-SO-Hold(S314,S455)
	S457= CtrlXEROV=0                                           Premise(F234)
	S458= CtrlXERCA=0                                           Premise(F235)
	S459= XER[CA]=ca                                            XER-CA-Hold(S317,S458)
	S460= CtrlALUOut=1                                          Premise(F236)
	S461= [ALUOut]=a+32'hFFFFFFFF+ca                            ALUOut-Write(S413,S460)
	S462= CtrlCAReg=1                                           Premise(F237)
	S463= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                      CAReg-Write(S415,S462)
	S464= CtrlDR4bit=1                                          Premise(F238)
	S465= [DR4bit]={Compare0(a+32'hFFFFFFFF+ca),so}             DR4bit-Write(S422,S464)
	S466= CtrlCRRegs=0                                          Premise(F239)
	S467= CtrlCRRegsCR0=0                                       Premise(F240)
	S468= CtrlCRRegsW4bitRegs=0                                 Premise(F241)
	S469= CtrlCRRegsW1bitRegs=0                                 Premise(F242)

MEM	S470= PIDReg.Out=pid                                        PIDReg-Out(S429)
	S471= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S429)
	S472= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S429)
	S473= PC.CIA=addr                                           PC-Out(S433)
	S474= PC.CIA31_28=addr[31:28]                               PC-Out(S433)
	S475= PC.Out=addr+4                                         PC-Out(S434)
	S476= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S436)
	S477= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S436)
	S478= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S436)
	S479= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S438)
	S480= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S438)
	S481= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S438)
	S482= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S443)
	S483= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S443)
	S484= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S443)
	S485= IR.Out0_5=31                                          IR-Out(S448)
	S486= IR.Out6_10=rT                                         IR-Out(S448)
	S487= IR.Out11_15=rA                                        IR-Out(S448)
	S488= IR.Out16_20=0                                         IR-Out(S448)
	S489= IR.Out21_31=469                                       IR-Out(S448)
	S490= A.Out=a                                               A-Out(S452)
	S491= A.Out26_31=a[26:31]                                   A-Out(S452)
	S492= A.Out30_31=a[30:31]                                   A-Out(S452)
	S493= B.Out=32'hFFFFFFFF                                    B-Out(S454)
	S494= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S454)
	S495= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S454)
	S496= XER.SOOut=so                                          XER-SO-Out(S456)
	S497= XER.CAOut=ca                                          XER-CA-Out(S459)
	S498= ALUOut.Out=a+32'hFFFFFFFF+ca                          ALUOut-Out(S461)
	S499= ALUOut.Out26_31=a+32'hFFFFFFFF+ca[26:31]              ALUOut-Out(S461)
	S500= ALUOut.Out30_31=a+32'hFFFFFFFF+ca[30:31]              ALUOut-Out(S461)
	S501= CAReg.Out=Carry(a+32'hFFFFFFFF+ca)                    CAReg-Out(S463)
	S502= CAReg.Out26_31=Carry(a+32'hFFFFFFFF+ca)[26:31]        CAReg-Out(S463)
	S503= CAReg.Out30_31=Carry(a+32'hFFFFFFFF+ca)[30:31]        CAReg-Out(S463)
	S504= DR4bit.Out={Compare0(a+32'hFFFFFFFF+ca),so}           DR4bit-Out(S465)
	S505= DR4bit.Out26_31={Compare0(a+32'hFFFFFFFF+ca),so}[26:31]DR4bit-Out(S465)
	S506= DR4bit.Out30_31={Compare0(a+32'hFFFFFFFF+ca),so}[30:31]DR4bit-Out(S465)
	S507= PIDReg.Out=>IMMU.PID                                  Premise(F243)
	S508= IMMU.PID=pid                                          Path(S470,S507)
	S509= PC.Out=>IMMU.IEA                                      Premise(F244)
	S510= IMMU.IEA=addr+4                                       Path(S475,S509)
	S511= IMMU.Addr={pid,addr+4}                                IMMU-Search(S508,S510)
	S512= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S508,S510)
	S513= IMMU.Addr=>IAddrReg.In                                Premise(F245)
	S514= IAddrReg.In={pid,addr+4}                              Path(S511,S513)
	S515= IMMU.Hit=>IMMUHitReg.In                               Premise(F246)
	S516= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S512,S515)
	S517= PC.Out=>ICache.IEA                                    Premise(F247)
	S518= ICache.IEA=addr+4                                     Path(S475,S517)
	S519= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S518)
	S520= ICache.Out=>ICacheReg.In                              Premise(F248)
	S521= ICache.Hit=>ICacheHitReg.In                           Premise(F249)
	S522= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S519,S521)
	S523= IMMUHitReg.Out=>CU.IMemHit                            Premise(F250)
	S524= CU.IMemHit=IMMUHit(pid,addr)                          Path(S479,S523)
	S525= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F251)
	S526= CU.ICacheHit=ICacheHit(addr)                          Path(S482,S525)
	S527= IAddrReg.Out=>IMem.RAddr                              Premise(F252)
	S528= IMem.RAddr={pid,addr}                                 Path(S476,S527)
	S529= IMem.Out={31,rT,rA,0,469}                             IMem-Read(S528,S445)
	S530= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S528,S445)
	S531= IMem.Out=>IRMux.MemData                               Premise(F253)
	S532= IRMux.MemData={31,rT,rA,0,469}                        Path(S529,S531)
	S533= IRMux.Out={31,rT,rA,0,469}                            IRMux-Select(S532)
	S534= ICacheReg.Out=>IRMux.CacheData                        Premise(F254)
	S535= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F255)
	S536= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S479,S535)
	S537= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F256)
	S538= IRMux.CacheSel=ICacheHit(addr)                        Path(S482,S537)
	S539= IRMux.Out=>IR.In                                      Premise(F257)
	S540= IR.In={31,rT,rA,0,469}                                Path(S533,S539)
	S541= IMem.MEM8WordOut=>ICache.WData                        Premise(F258)
	S542= ICache.WData=IMemGet8Word({pid,addr})                 Path(S530,S541)
	S543= PC.Out=>ICache.IEA                                    Premise(F259)
	S544= IR.Out0_5=>CU.Op                                      Premise(F260)
	S545= CU.Op=31                                              Path(S485,S544)
	S546= IR.Out11_15=>GPRegs.RReg1                             Premise(F261)
	S547= GPRegs.RReg1=rA                                       Path(S487,S546)
	S548= GPRegs.Rdata1=a                                       GPRegs-Read(S547,S450)
	S549= IR.Out21_31=>CU.IRFunc                                Premise(F262)
	S550= CU.IRFunc=469                                         Path(S489,S549)
	S551= CU.Func=alu_adde                                      CU(S545,S550)
	S552= GPRegs.Rdata1=>A.In                                   Premise(F263)
	S553= A.In=a                                                Path(S548,S552)
	S554= A.Out=>ALU.A                                          Premise(F264)
	S555= ALU.A=a                                               Path(S490,S554)
	S556= B.Out=>ALU.B                                          Premise(F265)
	S557= ALU.B=32'hFFFFFFFF                                    Path(S493,S556)
	S558= XER.CAOut=>ALU.CAIn                                   Premise(F266)
	S559= ALU.CAIn=ca                                           Path(S497,S558)
	S560= CU.Func=>ALU.Func                                     Premise(F267)
	S561= ALU.Func=alu_adde                                     Path(S551,S560)
	S562= ALU.Out=a+32'hFFFFFFFF+ca                             ALU(S555,S557,S559)
	S563= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                   ALU(S555,S557,S559)
	S564= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                    ALU(S555,S557,S559)
	S565= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                       ALU(S555,S557,S559)
	S566= ALU.Out=>ALUOut.In                                    Premise(F268)
	S567= ALUOut.In=a+32'hFFFFFFFF+ca                           Path(S562,S566)
	S568= ALU.CA=>CAReg.In                                      Premise(F269)
	S569= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                     Path(S565,S568)
	S570= ALU.CMP=>DataCmb.A                                    Premise(F270)
	S571= DataCmb.A=Compare0(a+32'hFFFFFFFF+ca)                 Path(S563,S570)
	S572= XER.SOOut=>DataCmb.B                                  Premise(F271)
	S573= DataCmb.B=so                                          Path(S496,S572)
	S574= DataCmb.Out={Compare0(a+32'hFFFFFFFF+ca),so}          DataCmb(S571,S573)
	S575= DataCmb.Out=>DR4bit.In                                Premise(F272)
	S576= DR4bit.In={Compare0(a+32'hFFFFFFFF+ca),so}            Path(S574,S575)
	S577= IR.Out6_10=>GPRegs.WReg                               Premise(F273)
	S578= GPRegs.WReg=rT                                        Path(S486,S577)
	S579= ALUOut.Out=>GPRegs.WData                              Premise(F274)
	S580= GPRegs.WData=a+32'hFFFFFFFF+ca                        Path(S498,S579)
	S581= DR4bit.Out=>CRRegs.CR0In                              Premise(F275)
	S582= CRRegs.CR0In={Compare0(a+32'hFFFFFFFF+ca),so}         Path(S504,S581)
	S583= CAReg.Out=>XER.CAIn                                   Premise(F276)
	S584= XER.CAIn=Carry(a+32'hFFFFFFFF+ca)                     Path(S501,S583)
	S585= CtrlPIDReg=0                                          Premise(F277)
	S586= [PIDReg]=pid                                          PIDReg-Hold(S429,S585)
	S587= CtrlIMMU=0                                            Premise(F278)
	S588= CtrlPC=0                                              Premise(F279)
	S589= CtrlPCInc=0                                           Premise(F280)
	S590= PC[CIA]=addr                                          PC-Hold(S433,S589)
	S591= PC[Out]=addr+4                                        PC-Hold(S434,S588,S589)
	S592= CtrlIAddrReg=0                                        Premise(F281)
	S593= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S436,S592)
	S594= CtrlIMMUHitReg=0                                      Premise(F282)
	S595= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S438,S594)
	S596= CtrlICache=0                                          Premise(F283)
	S597= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S440,S596)
	S598= CtrlICacheReg=0                                       Premise(F284)
	S599= CtrlICacheHitReg=0                                    Premise(F285)
	S600= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S443,S599)
	S601= CtrlIMem=0                                            Premise(F286)
	S602= IMem[{pid,addr}]={31,rT,rA,0,469}                     IMem-Hold(S445,S601)
	S603= CtrlIRMux=0                                           Premise(F287)
	S604= CtrlIR=0                                              Premise(F288)
	S605= [IR]={31,rT,rA,0,469}                                 IR-Hold(S448,S604)
	S606= CtrlGPRegs=0                                          Premise(F289)
	S607= GPRegs[rA]=a                                          GPRegs-Hold(S450,S606)
	S608= CtrlA=0                                               Premise(F290)
	S609= [A]=a                                                 A-Hold(S452,S608)
	S610= CtrlB=0                                               Premise(F291)
	S611= [B]=32'hFFFFFFFF                                      B-Hold(S454,S610)
	S612= CtrlXERSO=0                                           Premise(F292)
	S613= XER[SO]=so                                            XER-SO-Hold(S456,S612)
	S614= CtrlXEROV=0                                           Premise(F293)
	S615= CtrlXERCA=0                                           Premise(F294)
	S616= XER[CA]=ca                                            XER-CA-Hold(S459,S615)
	S617= CtrlALUOut=0                                          Premise(F295)
	S618= [ALUOut]=a+32'hFFFFFFFF+ca                            ALUOut-Hold(S461,S617)
	S619= CtrlCAReg=0                                           Premise(F296)
	S620= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                      CAReg-Hold(S463,S619)
	S621= CtrlDR4bit=0                                          Premise(F297)
	S622= [DR4bit]={Compare0(a+32'hFFFFFFFF+ca),so}             DR4bit-Hold(S465,S621)
	S623= CtrlCRRegs=0                                          Premise(F298)
	S624= CtrlCRRegsCR0=0                                       Premise(F299)
	S625= CtrlCRRegsW4bitRegs=0                                 Premise(F300)
	S626= CtrlCRRegsW1bitRegs=0                                 Premise(F301)

DMMU1	S627= PIDReg.Out=pid                                        PIDReg-Out(S586)
	S628= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S586)
	S629= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S586)
	S630= PC.CIA=addr                                           PC-Out(S590)
	S631= PC.CIA31_28=addr[31:28]                               PC-Out(S590)
	S632= PC.Out=addr+4                                         PC-Out(S591)
	S633= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S593)
	S634= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S593)
	S635= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S593)
	S636= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S595)
	S637= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S595)
	S638= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S595)
	S639= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S600)
	S640= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S600)
	S641= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S600)
	S642= IR.Out0_5=31                                          IR-Out(S605)
	S643= IR.Out6_10=rT                                         IR-Out(S605)
	S644= IR.Out11_15=rA                                        IR-Out(S605)
	S645= IR.Out16_20=0                                         IR-Out(S605)
	S646= IR.Out21_31=469                                       IR-Out(S605)
	S647= A.Out=a                                               A-Out(S609)
	S648= A.Out26_31=a[26:31]                                   A-Out(S609)
	S649= A.Out30_31=a[30:31]                                   A-Out(S609)
	S650= B.Out=32'hFFFFFFFF                                    B-Out(S611)
	S651= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S611)
	S652= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S611)
	S653= XER.SOOut=so                                          XER-SO-Out(S613)
	S654= XER.CAOut=ca                                          XER-CA-Out(S616)
	S655= ALUOut.Out=a+32'hFFFFFFFF+ca                          ALUOut-Out(S618)
	S656= ALUOut.Out26_31=a+32'hFFFFFFFF+ca[26:31]              ALUOut-Out(S618)
	S657= ALUOut.Out30_31=a+32'hFFFFFFFF+ca[30:31]              ALUOut-Out(S618)
	S658= CAReg.Out=Carry(a+32'hFFFFFFFF+ca)                    CAReg-Out(S620)
	S659= CAReg.Out26_31=Carry(a+32'hFFFFFFFF+ca)[26:31]        CAReg-Out(S620)
	S660= CAReg.Out30_31=Carry(a+32'hFFFFFFFF+ca)[30:31]        CAReg-Out(S620)
	S661= DR4bit.Out={Compare0(a+32'hFFFFFFFF+ca),so}           DR4bit-Out(S622)
	S662= DR4bit.Out26_31={Compare0(a+32'hFFFFFFFF+ca),so}[26:31]DR4bit-Out(S622)
	S663= DR4bit.Out30_31={Compare0(a+32'hFFFFFFFF+ca),so}[30:31]DR4bit-Out(S622)
	S664= PIDReg.Out=>IMMU.PID                                  Premise(F302)
	S665= IMMU.PID=pid                                          Path(S627,S664)
	S666= PC.Out=>IMMU.IEA                                      Premise(F303)
	S667= IMMU.IEA=addr+4                                       Path(S632,S666)
	S668= IMMU.Addr={pid,addr+4}                                IMMU-Search(S665,S667)
	S669= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S665,S667)
	S670= IMMU.Addr=>IAddrReg.In                                Premise(F304)
	S671= IAddrReg.In={pid,addr+4}                              Path(S668,S670)
	S672= IMMU.Hit=>IMMUHitReg.In                               Premise(F305)
	S673= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S669,S672)
	S674= PC.Out=>ICache.IEA                                    Premise(F306)
	S675= ICache.IEA=addr+4                                     Path(S632,S674)
	S676= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S675)
	S677= ICache.Out=>ICacheReg.In                              Premise(F307)
	S678= ICache.Hit=>ICacheHitReg.In                           Premise(F308)
	S679= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S676,S678)
	S680= IMMUHitReg.Out=>CU.IMemHit                            Premise(F309)
	S681= CU.IMemHit=IMMUHit(pid,addr)                          Path(S636,S680)
	S682= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F310)
	S683= CU.ICacheHit=ICacheHit(addr)                          Path(S639,S682)
	S684= IAddrReg.Out=>IMem.RAddr                              Premise(F311)
	S685= IMem.RAddr={pid,addr}                                 Path(S633,S684)
	S686= IMem.Out={31,rT,rA,0,469}                             IMem-Read(S685,S602)
	S687= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S685,S602)
	S688= IMem.Out=>IRMux.MemData                               Premise(F312)
	S689= IRMux.MemData={31,rT,rA,0,469}                        Path(S686,S688)
	S690= IRMux.Out={31,rT,rA,0,469}                            IRMux-Select(S689)
	S691= ICacheReg.Out=>IRMux.CacheData                        Premise(F313)
	S692= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F314)
	S693= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S636,S692)
	S694= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F315)
	S695= IRMux.CacheSel=ICacheHit(addr)                        Path(S639,S694)
	S696= IRMux.Out=>IR.In                                      Premise(F316)
	S697= IR.In={31,rT,rA,0,469}                                Path(S690,S696)
	S698= IMem.MEM8WordOut=>ICache.WData                        Premise(F317)
	S699= ICache.WData=IMemGet8Word({pid,addr})                 Path(S687,S698)
	S700= PC.Out=>ICache.IEA                                    Premise(F318)
	S701= IR.Out0_5=>CU.Op                                      Premise(F319)
	S702= CU.Op=31                                              Path(S642,S701)
	S703= IR.Out11_15=>GPRegs.RReg1                             Premise(F320)
	S704= GPRegs.RReg1=rA                                       Path(S644,S703)
	S705= GPRegs.Rdata1=a                                       GPRegs-Read(S704,S607)
	S706= IR.Out21_31=>CU.IRFunc                                Premise(F321)
	S707= CU.IRFunc=469                                         Path(S646,S706)
	S708= CU.Func=alu_adde                                      CU(S702,S707)
	S709= GPRegs.Rdata1=>A.In                                   Premise(F322)
	S710= A.In=a                                                Path(S705,S709)
	S711= A.Out=>ALU.A                                          Premise(F323)
	S712= ALU.A=a                                               Path(S647,S711)
	S713= B.Out=>ALU.B                                          Premise(F324)
	S714= ALU.B=32'hFFFFFFFF                                    Path(S650,S713)
	S715= XER.CAOut=>ALU.CAIn                                   Premise(F325)
	S716= ALU.CAIn=ca                                           Path(S654,S715)
	S717= CU.Func=>ALU.Func                                     Premise(F326)
	S718= ALU.Func=alu_adde                                     Path(S708,S717)
	S719= ALU.Out=a+32'hFFFFFFFF+ca                             ALU(S712,S714,S716)
	S720= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                   ALU(S712,S714,S716)
	S721= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                    ALU(S712,S714,S716)
	S722= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                       ALU(S712,S714,S716)
	S723= ALU.Out=>ALUOut.In                                    Premise(F327)
	S724= ALUOut.In=a+32'hFFFFFFFF+ca                           Path(S719,S723)
	S725= ALU.CA=>CAReg.In                                      Premise(F328)
	S726= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                     Path(S722,S725)
	S727= ALU.CMP=>DataCmb.A                                    Premise(F329)
	S728= DataCmb.A=Compare0(a+32'hFFFFFFFF+ca)                 Path(S720,S727)
	S729= XER.SOOut=>DataCmb.B                                  Premise(F330)
	S730= DataCmb.B=so                                          Path(S653,S729)
	S731= DataCmb.Out={Compare0(a+32'hFFFFFFFF+ca),so}          DataCmb(S728,S730)
	S732= DataCmb.Out=>DR4bit.In                                Premise(F331)
	S733= DR4bit.In={Compare0(a+32'hFFFFFFFF+ca),so}            Path(S731,S732)
	S734= IR.Out6_10=>GPRegs.WReg                               Premise(F332)
	S735= GPRegs.WReg=rT                                        Path(S643,S734)
	S736= ALUOut.Out=>GPRegs.WData                              Premise(F333)
	S737= GPRegs.WData=a+32'hFFFFFFFF+ca                        Path(S655,S736)
	S738= DR4bit.Out=>CRRegs.CR0In                              Premise(F334)
	S739= CRRegs.CR0In={Compare0(a+32'hFFFFFFFF+ca),so}         Path(S661,S738)
	S740= CAReg.Out=>XER.CAIn                                   Premise(F335)
	S741= XER.CAIn=Carry(a+32'hFFFFFFFF+ca)                     Path(S658,S740)
	S742= CtrlPIDReg=0                                          Premise(F336)
	S743= [PIDReg]=pid                                          PIDReg-Hold(S586,S742)
	S744= CtrlIMMU=0                                            Premise(F337)
	S745= CtrlPC=0                                              Premise(F338)
	S746= CtrlPCInc=0                                           Premise(F339)
	S747= PC[CIA]=addr                                          PC-Hold(S590,S746)
	S748= PC[Out]=addr+4                                        PC-Hold(S591,S745,S746)
	S749= CtrlIAddrReg=0                                        Premise(F340)
	S750= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S593,S749)
	S751= CtrlIMMUHitReg=0                                      Premise(F341)
	S752= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S595,S751)
	S753= CtrlICache=0                                          Premise(F342)
	S754= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S597,S753)
	S755= CtrlICacheReg=0                                       Premise(F343)
	S756= CtrlICacheHitReg=0                                    Premise(F344)
	S757= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S600,S756)
	S758= CtrlIMem=0                                            Premise(F345)
	S759= IMem[{pid,addr}]={31,rT,rA,0,469}                     IMem-Hold(S602,S758)
	S760= CtrlIRMux=0                                           Premise(F346)
	S761= CtrlIR=0                                              Premise(F347)
	S762= [IR]={31,rT,rA,0,469}                                 IR-Hold(S605,S761)
	S763= CtrlGPRegs=0                                          Premise(F348)
	S764= GPRegs[rA]=a                                          GPRegs-Hold(S607,S763)
	S765= CtrlA=0                                               Premise(F349)
	S766= [A]=a                                                 A-Hold(S609,S765)
	S767= CtrlB=0                                               Premise(F350)
	S768= [B]=32'hFFFFFFFF                                      B-Hold(S611,S767)
	S769= CtrlXERSO=0                                           Premise(F351)
	S770= XER[SO]=so                                            XER-SO-Hold(S613,S769)
	S771= CtrlXEROV=0                                           Premise(F352)
	S772= CtrlXERCA=0                                           Premise(F353)
	S773= XER[CA]=ca                                            XER-CA-Hold(S616,S772)
	S774= CtrlALUOut=0                                          Premise(F354)
	S775= [ALUOut]=a+32'hFFFFFFFF+ca                            ALUOut-Hold(S618,S774)
	S776= CtrlCAReg=0                                           Premise(F355)
	S777= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                      CAReg-Hold(S620,S776)
	S778= CtrlDR4bit=0                                          Premise(F356)
	S779= [DR4bit]={Compare0(a+32'hFFFFFFFF+ca),so}             DR4bit-Hold(S622,S778)
	S780= CtrlCRRegs=0                                          Premise(F357)
	S781= CtrlCRRegsCR0=0                                       Premise(F358)
	S782= CtrlCRRegsW4bitRegs=0                                 Premise(F359)
	S783= CtrlCRRegsW1bitRegs=0                                 Premise(F360)

DMMU2	S784= PIDReg.Out=pid                                        PIDReg-Out(S743)
	S785= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S743)
	S786= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S743)
	S787= PC.CIA=addr                                           PC-Out(S747)
	S788= PC.CIA31_28=addr[31:28]                               PC-Out(S747)
	S789= PC.Out=addr+4                                         PC-Out(S748)
	S790= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S750)
	S791= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S750)
	S792= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S750)
	S793= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S752)
	S794= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S752)
	S795= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S752)
	S796= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S757)
	S797= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S757)
	S798= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S757)
	S799= IR.Out0_5=31                                          IR-Out(S762)
	S800= IR.Out6_10=rT                                         IR-Out(S762)
	S801= IR.Out11_15=rA                                        IR-Out(S762)
	S802= IR.Out16_20=0                                         IR-Out(S762)
	S803= IR.Out21_31=469                                       IR-Out(S762)
	S804= A.Out=a                                               A-Out(S766)
	S805= A.Out26_31=a[26:31]                                   A-Out(S766)
	S806= A.Out30_31=a[30:31]                                   A-Out(S766)
	S807= B.Out=32'hFFFFFFFF                                    B-Out(S768)
	S808= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S768)
	S809= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S768)
	S810= XER.SOOut=so                                          XER-SO-Out(S770)
	S811= XER.CAOut=ca                                          XER-CA-Out(S773)
	S812= ALUOut.Out=a+32'hFFFFFFFF+ca                          ALUOut-Out(S775)
	S813= ALUOut.Out26_31=a+32'hFFFFFFFF+ca[26:31]              ALUOut-Out(S775)
	S814= ALUOut.Out30_31=a+32'hFFFFFFFF+ca[30:31]              ALUOut-Out(S775)
	S815= CAReg.Out=Carry(a+32'hFFFFFFFF+ca)                    CAReg-Out(S777)
	S816= CAReg.Out26_31=Carry(a+32'hFFFFFFFF+ca)[26:31]        CAReg-Out(S777)
	S817= CAReg.Out30_31=Carry(a+32'hFFFFFFFF+ca)[30:31]        CAReg-Out(S777)
	S818= DR4bit.Out={Compare0(a+32'hFFFFFFFF+ca),so}           DR4bit-Out(S779)
	S819= DR4bit.Out26_31={Compare0(a+32'hFFFFFFFF+ca),so}[26:31]DR4bit-Out(S779)
	S820= DR4bit.Out30_31={Compare0(a+32'hFFFFFFFF+ca),so}[30:31]DR4bit-Out(S779)
	S821= PIDReg.Out=>IMMU.PID                                  Premise(F361)
	S822= IMMU.PID=pid                                          Path(S784,S821)
	S823= PC.Out=>IMMU.IEA                                      Premise(F362)
	S824= IMMU.IEA=addr+4                                       Path(S789,S823)
	S825= IMMU.Addr={pid,addr+4}                                IMMU-Search(S822,S824)
	S826= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S822,S824)
	S827= IMMU.Addr=>IAddrReg.In                                Premise(F363)
	S828= IAddrReg.In={pid,addr+4}                              Path(S825,S827)
	S829= IMMU.Hit=>IMMUHitReg.In                               Premise(F364)
	S830= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S826,S829)
	S831= PC.Out=>ICache.IEA                                    Premise(F365)
	S832= ICache.IEA=addr+4                                     Path(S789,S831)
	S833= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S832)
	S834= ICache.Out=>ICacheReg.In                              Premise(F366)
	S835= ICache.Hit=>ICacheHitReg.In                           Premise(F367)
	S836= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S833,S835)
	S837= IMMUHitReg.Out=>CU.IMemHit                            Premise(F368)
	S838= CU.IMemHit=IMMUHit(pid,addr)                          Path(S793,S837)
	S839= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F369)
	S840= CU.ICacheHit=ICacheHit(addr)                          Path(S796,S839)
	S841= IAddrReg.Out=>IMem.RAddr                              Premise(F370)
	S842= IMem.RAddr={pid,addr}                                 Path(S790,S841)
	S843= IMem.Out={31,rT,rA,0,469}                             IMem-Read(S842,S759)
	S844= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S842,S759)
	S845= IMem.Out=>IRMux.MemData                               Premise(F371)
	S846= IRMux.MemData={31,rT,rA,0,469}                        Path(S843,S845)
	S847= IRMux.Out={31,rT,rA,0,469}                            IRMux-Select(S846)
	S848= ICacheReg.Out=>IRMux.CacheData                        Premise(F372)
	S849= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F373)
	S850= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S793,S849)
	S851= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F374)
	S852= IRMux.CacheSel=ICacheHit(addr)                        Path(S796,S851)
	S853= IRMux.Out=>IR.In                                      Premise(F375)
	S854= IR.In={31,rT,rA,0,469}                                Path(S847,S853)
	S855= IMem.MEM8WordOut=>ICache.WData                        Premise(F376)
	S856= ICache.WData=IMemGet8Word({pid,addr})                 Path(S844,S855)
	S857= PC.Out=>ICache.IEA                                    Premise(F377)
	S858= IR.Out0_5=>CU.Op                                      Premise(F378)
	S859= CU.Op=31                                              Path(S799,S858)
	S860= IR.Out11_15=>GPRegs.RReg1                             Premise(F379)
	S861= GPRegs.RReg1=rA                                       Path(S801,S860)
	S862= GPRegs.Rdata1=a                                       GPRegs-Read(S861,S764)
	S863= IR.Out21_31=>CU.IRFunc                                Premise(F380)
	S864= CU.IRFunc=469                                         Path(S803,S863)
	S865= CU.Func=alu_adde                                      CU(S859,S864)
	S866= GPRegs.Rdata1=>A.In                                   Premise(F381)
	S867= A.In=a                                                Path(S862,S866)
	S868= A.Out=>ALU.A                                          Premise(F382)
	S869= ALU.A=a                                               Path(S804,S868)
	S870= B.Out=>ALU.B                                          Premise(F383)
	S871= ALU.B=32'hFFFFFFFF                                    Path(S807,S870)
	S872= XER.CAOut=>ALU.CAIn                                   Premise(F384)
	S873= ALU.CAIn=ca                                           Path(S811,S872)
	S874= CU.Func=>ALU.Func                                     Premise(F385)
	S875= ALU.Func=alu_adde                                     Path(S865,S874)
	S876= ALU.Out=a+32'hFFFFFFFF+ca                             ALU(S869,S871,S873)
	S877= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                   ALU(S869,S871,S873)
	S878= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                    ALU(S869,S871,S873)
	S879= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                       ALU(S869,S871,S873)
	S880= ALU.Out=>ALUOut.In                                    Premise(F386)
	S881= ALUOut.In=a+32'hFFFFFFFF+ca                           Path(S876,S880)
	S882= ALU.CA=>CAReg.In                                      Premise(F387)
	S883= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                     Path(S879,S882)
	S884= ALU.CMP=>DataCmb.A                                    Premise(F388)
	S885= DataCmb.A=Compare0(a+32'hFFFFFFFF+ca)                 Path(S877,S884)
	S886= XER.SOOut=>DataCmb.B                                  Premise(F389)
	S887= DataCmb.B=so                                          Path(S810,S886)
	S888= DataCmb.Out={Compare0(a+32'hFFFFFFFF+ca),so}          DataCmb(S885,S887)
	S889= DataCmb.Out=>DR4bit.In                                Premise(F390)
	S890= DR4bit.In={Compare0(a+32'hFFFFFFFF+ca),so}            Path(S888,S889)
	S891= IR.Out6_10=>GPRegs.WReg                               Premise(F391)
	S892= GPRegs.WReg=rT                                        Path(S800,S891)
	S893= ALUOut.Out=>GPRegs.WData                              Premise(F392)
	S894= GPRegs.WData=a+32'hFFFFFFFF+ca                        Path(S812,S893)
	S895= DR4bit.Out=>CRRegs.CR0In                              Premise(F393)
	S896= CRRegs.CR0In={Compare0(a+32'hFFFFFFFF+ca),so}         Path(S818,S895)
	S897= CAReg.Out=>XER.CAIn                                   Premise(F394)
	S898= XER.CAIn=Carry(a+32'hFFFFFFFF+ca)                     Path(S815,S897)
	S899= CtrlPIDReg=0                                          Premise(F395)
	S900= [PIDReg]=pid                                          PIDReg-Hold(S743,S899)
	S901= CtrlIMMU=0                                            Premise(F396)
	S902= CtrlPC=0                                              Premise(F397)
	S903= CtrlPCInc=0                                           Premise(F398)
	S904= PC[CIA]=addr                                          PC-Hold(S747,S903)
	S905= PC[Out]=addr+4                                        PC-Hold(S748,S902,S903)
	S906= CtrlIAddrReg=0                                        Premise(F399)
	S907= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S750,S906)
	S908= CtrlIMMUHitReg=0                                      Premise(F400)
	S909= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S752,S908)
	S910= CtrlICache=0                                          Premise(F401)
	S911= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S754,S910)
	S912= CtrlICacheReg=0                                       Premise(F402)
	S913= CtrlICacheHitReg=0                                    Premise(F403)
	S914= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S757,S913)
	S915= CtrlIMem=0                                            Premise(F404)
	S916= IMem[{pid,addr}]={31,rT,rA,0,469}                     IMem-Hold(S759,S915)
	S917= CtrlIRMux=0                                           Premise(F405)
	S918= CtrlIR=0                                              Premise(F406)
	S919= [IR]={31,rT,rA,0,469}                                 IR-Hold(S762,S918)
	S920= CtrlGPRegs=0                                          Premise(F407)
	S921= GPRegs[rA]=a                                          GPRegs-Hold(S764,S920)
	S922= CtrlA=0                                               Premise(F408)
	S923= [A]=a                                                 A-Hold(S766,S922)
	S924= CtrlB=0                                               Premise(F409)
	S925= [B]=32'hFFFFFFFF                                      B-Hold(S768,S924)
	S926= CtrlXERSO=0                                           Premise(F410)
	S927= XER[SO]=so                                            XER-SO-Hold(S770,S926)
	S928= CtrlXEROV=0                                           Premise(F411)
	S929= CtrlXERCA=0                                           Premise(F412)
	S930= XER[CA]=ca                                            XER-CA-Hold(S773,S929)
	S931= CtrlALUOut=0                                          Premise(F413)
	S932= [ALUOut]=a+32'hFFFFFFFF+ca                            ALUOut-Hold(S775,S931)
	S933= CtrlCAReg=0                                           Premise(F414)
	S934= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                      CAReg-Hold(S777,S933)
	S935= CtrlDR4bit=0                                          Premise(F415)
	S936= [DR4bit]={Compare0(a+32'hFFFFFFFF+ca),so}             DR4bit-Hold(S779,S935)
	S937= CtrlCRRegs=0                                          Premise(F416)
	S938= CtrlCRRegsCR0=0                                       Premise(F417)
	S939= CtrlCRRegsW4bitRegs=0                                 Premise(F418)
	S940= CtrlCRRegsW1bitRegs=0                                 Premise(F419)

WB	S941= PIDReg.Out=pid                                        PIDReg-Out(S900)
	S942= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S900)
	S943= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S900)
	S944= PC.CIA=addr                                           PC-Out(S904)
	S945= PC.CIA31_28=addr[31:28]                               PC-Out(S904)
	S946= PC.Out=addr+4                                         PC-Out(S905)
	S947= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S907)
	S948= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S907)
	S949= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S907)
	S950= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S909)
	S951= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S909)
	S952= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S909)
	S953= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S914)
	S954= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S914)
	S955= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S914)
	S956= IR.Out0_5=31                                          IR-Out(S919)
	S957= IR.Out6_10=rT                                         IR-Out(S919)
	S958= IR.Out11_15=rA                                        IR-Out(S919)
	S959= IR.Out16_20=0                                         IR-Out(S919)
	S960= IR.Out21_31=469                                       IR-Out(S919)
	S961= A.Out=a                                               A-Out(S923)
	S962= A.Out26_31=a[26:31]                                   A-Out(S923)
	S963= A.Out30_31=a[30:31]                                   A-Out(S923)
	S964= B.Out=32'hFFFFFFFF                                    B-Out(S925)
	S965= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S925)
	S966= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S925)
	S967= XER.SOOut=so                                          XER-SO-Out(S927)
	S968= XER.CAOut=ca                                          XER-CA-Out(S930)
	S969= ALUOut.Out=a+32'hFFFFFFFF+ca                          ALUOut-Out(S932)
	S970= ALUOut.Out26_31=a+32'hFFFFFFFF+ca[26:31]              ALUOut-Out(S932)
	S971= ALUOut.Out30_31=a+32'hFFFFFFFF+ca[30:31]              ALUOut-Out(S932)
	S972= CAReg.Out=Carry(a+32'hFFFFFFFF+ca)                    CAReg-Out(S934)
	S973= CAReg.Out26_31=Carry(a+32'hFFFFFFFF+ca)[26:31]        CAReg-Out(S934)
	S974= CAReg.Out30_31=Carry(a+32'hFFFFFFFF+ca)[30:31]        CAReg-Out(S934)
	S975= DR4bit.Out={Compare0(a+32'hFFFFFFFF+ca),so}           DR4bit-Out(S936)
	S976= DR4bit.Out26_31={Compare0(a+32'hFFFFFFFF+ca),so}[26:31]DR4bit-Out(S936)
	S977= DR4bit.Out30_31={Compare0(a+32'hFFFFFFFF+ca),so}[30:31]DR4bit-Out(S936)
	S978= PIDReg.Out=>IMMU.PID                                  Premise(F420)
	S979= IMMU.PID=pid                                          Path(S941,S978)
	S980= PC.Out=>IMMU.IEA                                      Premise(F421)
	S981= IMMU.IEA=addr+4                                       Path(S946,S980)
	S982= IMMU.Addr={pid,addr+4}                                IMMU-Search(S979,S981)
	S983= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S979,S981)
	S984= IMMU.Addr=>IAddrReg.In                                Premise(F422)
	S985= IAddrReg.In={pid,addr+4}                              Path(S982,S984)
	S986= IMMU.Hit=>IMMUHitReg.In                               Premise(F423)
	S987= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S983,S986)
	S988= PC.Out=>ICache.IEA                                    Premise(F424)
	S989= ICache.IEA=addr+4                                     Path(S946,S988)
	S990= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S989)
	S991= ICache.Out=>ICacheReg.In                              Premise(F425)
	S992= ICache.Hit=>ICacheHitReg.In                           Premise(F426)
	S993= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S990,S992)
	S994= IMMUHitReg.Out=>CU.IMemHit                            Premise(F427)
	S995= CU.IMemHit=IMMUHit(pid,addr)                          Path(S950,S994)
	S996= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F428)
	S997= CU.ICacheHit=ICacheHit(addr)                          Path(S953,S996)
	S998= IAddrReg.Out=>IMem.RAddr                              Premise(F429)
	S999= IMem.RAddr={pid,addr}                                 Path(S947,S998)
	S1000= IMem.Out={31,rT,rA,0,469}                            IMem-Read(S999,S916)
	S1001= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S999,S916)
	S1002= IMem.Out=>IRMux.MemData                              Premise(F430)
	S1003= IRMux.MemData={31,rT,rA,0,469}                       Path(S1000,S1002)
	S1004= IRMux.Out={31,rT,rA,0,469}                           IRMux-Select(S1003)
	S1005= ICacheReg.Out=>IRMux.CacheData                       Premise(F431)
	S1006= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F432)
	S1007= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S950,S1006)
	S1008= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F433)
	S1009= IRMux.CacheSel=ICacheHit(addr)                       Path(S953,S1008)
	S1010= IRMux.Out=>IR.In                                     Premise(F434)
	S1011= IR.In={31,rT,rA,0,469}                               Path(S1004,S1010)
	S1012= IMem.MEM8WordOut=>ICache.WData                       Premise(F435)
	S1013= ICache.WData=IMemGet8Word({pid,addr})                Path(S1001,S1012)
	S1014= PC.Out=>ICache.IEA                                   Premise(F436)
	S1015= IR.Out0_5=>CU.Op                                     Premise(F437)
	S1016= CU.Op=31                                             Path(S956,S1015)
	S1017= IR.Out11_15=>GPRegs.RReg1                            Premise(F438)
	S1018= GPRegs.RReg1=rA                                      Path(S958,S1017)
	S1019= GPRegs.Rdata1=a                                      GPRegs-Read(S1018,S921)
	S1020= IR.Out21_31=>CU.IRFunc                               Premise(F439)
	S1021= CU.IRFunc=469                                        Path(S960,S1020)
	S1022= CU.Func=alu_adde                                     CU(S1016,S1021)
	S1023= GPRegs.Rdata1=>A.In                                  Premise(F440)
	S1024= A.In=a                                               Path(S1019,S1023)
	S1025= A.Out=>ALU.A                                         Premise(F441)
	S1026= ALU.A=a                                              Path(S961,S1025)
	S1027= B.Out=>ALU.B                                         Premise(F442)
	S1028= ALU.B=32'hFFFFFFFF                                   Path(S964,S1027)
	S1029= XER.CAOut=>ALU.CAIn                                  Premise(F443)
	S1030= ALU.CAIn=ca                                          Path(S968,S1029)
	S1031= CU.Func=>ALU.Func                                    Premise(F444)
	S1032= ALU.Func=alu_adde                                    Path(S1022,S1031)
	S1033= ALU.Out=a+32'hFFFFFFFF+ca                            ALU(S1026,S1028,S1030)
	S1034= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                  ALU(S1026,S1028,S1030)
	S1035= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                   ALU(S1026,S1028,S1030)
	S1036= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                      ALU(S1026,S1028,S1030)
	S1037= ALU.Out=>ALUOut.In                                   Premise(F445)
	S1038= ALUOut.In=a+32'hFFFFFFFF+ca                          Path(S1033,S1037)
	S1039= ALU.CA=>CAReg.In                                     Premise(F446)
	S1040= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                    Path(S1036,S1039)
	S1041= ALU.CMP=>DataCmb.A                                   Premise(F447)
	S1042= DataCmb.A=Compare0(a+32'hFFFFFFFF+ca)                Path(S1034,S1041)
	S1043= XER.SOOut=>DataCmb.B                                 Premise(F448)
	S1044= DataCmb.B=so                                         Path(S967,S1043)
	S1045= DataCmb.Out={Compare0(a+32'hFFFFFFFF+ca),so}         DataCmb(S1042,S1044)
	S1046= DataCmb.Out=>DR4bit.In                               Premise(F449)
	S1047= DR4bit.In={Compare0(a+32'hFFFFFFFF+ca),so}           Path(S1045,S1046)
	S1048= IR.Out6_10=>GPRegs.WReg                              Premise(F450)
	S1049= GPRegs.WReg=rT                                       Path(S957,S1048)
	S1050= ALUOut.Out=>GPRegs.WData                             Premise(F451)
	S1051= GPRegs.WData=a+32'hFFFFFFFF+ca                       Path(S969,S1050)
	S1052= DR4bit.Out=>CRRegs.CR0In                             Premise(F452)
	S1053= CRRegs.CR0In={Compare0(a+32'hFFFFFFFF+ca),so}        Path(S975,S1052)
	S1054= CAReg.Out=>XER.CAIn                                  Premise(F453)
	S1055= XER.CAIn=Carry(a+32'hFFFFFFFF+ca)                    Path(S972,S1054)
	S1056= CtrlPIDReg=0                                         Premise(F454)
	S1057= [PIDReg]=pid                                         PIDReg-Hold(S900,S1056)
	S1058= CtrlIMMU=0                                           Premise(F455)
	S1059= CtrlPC=0                                             Premise(F456)
	S1060= CtrlPCInc=0                                          Premise(F457)
	S1061= PC[CIA]=addr                                         PC-Hold(S904,S1060)
	S1062= PC[Out]=addr+4                                       PC-Hold(S905,S1059,S1060)
	S1063= CtrlIAddrReg=0                                       Premise(F458)
	S1064= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S907,S1063)
	S1065= CtrlIMMUHitReg=0                                     Premise(F459)
	S1066= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S909,S1065)
	S1067= CtrlICache=0                                         Premise(F460)
	S1068= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S911,S1067)
	S1069= CtrlICacheReg=0                                      Premise(F461)
	S1070= CtrlICacheHitReg=0                                   Premise(F462)
	S1071= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S914,S1070)
	S1072= CtrlIMem=0                                           Premise(F463)
	S1073= IMem[{pid,addr}]={31,rT,rA,0,469}                    IMem-Hold(S916,S1072)
	S1074= CtrlIRMux=0                                          Premise(F464)
	S1075= CtrlIR=0                                             Premise(F465)
	S1076= [IR]={31,rT,rA,0,469}                                IR-Hold(S919,S1075)
	S1077= CtrlGPRegs=1                                         Premise(F466)
	S1078= GPRegs[rT]=a+32'hFFFFFFFF+ca                         GPRegs-Write(S1049,S1051,S1077)
	S1079= CtrlA=0                                              Premise(F467)
	S1080= [A]=a                                                A-Hold(S923,S1079)
	S1081= CtrlB=0                                              Premise(F468)
	S1082= [B]=32'hFFFFFFFF                                     B-Hold(S925,S1081)
	S1083= CtrlXERSO=0                                          Premise(F469)
	S1084= XER[SO]=so                                           XER-SO-Hold(S927,S1083)
	S1085= CtrlXEROV=0                                          Premise(F470)
	S1086= CtrlXERCA=1                                          Premise(F471)
	S1087= XER[CA]=Carry(a+32'hFFFFFFFF+ca)                     XER-CA-Write(S1055,S1086)
	S1088= CtrlALUOut=0                                         Premise(F472)
	S1089= [ALUOut]=a+32'hFFFFFFFF+ca                           ALUOut-Hold(S932,S1088)
	S1090= CtrlCAReg=0                                          Premise(F473)
	S1091= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                     CAReg-Hold(S934,S1090)
	S1092= CtrlDR4bit=0                                         Premise(F474)
	S1093= [DR4bit]={Compare0(a+32'hFFFFFFFF+ca),so}            DR4bit-Hold(S936,S1092)
	S1094= CtrlCRRegs=0                                         Premise(F475)
	S1095= CtrlCRRegsCR0=1                                      Premise(F476)
	S1096= CRRegs[CR0]={Compare0(a+32'hFFFFFFFF+ca),so}         CRRegs-CR0-Write(S1053,S1095)
	S1097= CtrlCRRegsW4bitRegs=0                                Premise(F477)
	S1098= CtrlCRRegsW1bitRegs=0                                Premise(F478)

POST	S1057= [PIDReg]=pid                                         PIDReg-Hold(S900,S1056)
	S1061= PC[CIA]=addr                                         PC-Hold(S904,S1060)
	S1062= PC[Out]=addr+4                                       PC-Hold(S905,S1059,S1060)
	S1064= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S907,S1063)
	S1066= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S909,S1065)
	S1068= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S911,S1067)
	S1071= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S914,S1070)
	S1073= IMem[{pid,addr}]={31,rT,rA,0,469}                    IMem-Hold(S916,S1072)
	S1076= [IR]={31,rT,rA,0,469}                                IR-Hold(S919,S1075)
	S1078= GPRegs[rT]=a+32'hFFFFFFFF+ca                         GPRegs-Write(S1049,S1051,S1077)
	S1080= [A]=a                                                A-Hold(S923,S1079)
	S1082= [B]=32'hFFFFFFFF                                     B-Hold(S925,S1081)
	S1084= XER[SO]=so                                           XER-SO-Hold(S927,S1083)
	S1087= XER[CA]=Carry(a+32'hFFFFFFFF+ca)                     XER-CA-Write(S1055,S1086)
	S1089= [ALUOut]=a+32'hFFFFFFFF+ca                           ALUOut-Hold(S932,S1088)
	S1091= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                     CAReg-Hold(S934,S1090)
	S1093= [DR4bit]={Compare0(a+32'hFFFFFFFF+ca),so}            DR4bit-Hold(S936,S1092)
	S1096= CRRegs[CR0]={Compare0(a+32'hFFFFFFFF+ca),so}         CRRegs-CR0-Write(S1053,S1095)

