
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,471}                      Premise(F2)
	S3= ICache[addr]={31,rT,rA,rB,471}                          Premise(F3)
	S4= GPRegs[rA]=a                                            Premise(F4)
	S5= GPRegs[rB]=b                                            Premise(F5)
	S6= XER[SO]=so                                              Premise(F6)

IF	S7= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S8= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S9= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S10= PC.Out=addr                                            PC-Out(S1)
	S11= XER.SOOut=so                                           XER-SO-Out(S6)
	S12= PIDReg.Out=>IMMU.PID                                   Premise(F7)
	S13= IMMU.PID=pid                                           Path(S7,S12)
	S14= PC.Out=>IMMU.IEA                                       Premise(F8)
	S15= IMMU.IEA=addr                                          Path(S10,S14)
	S16= IMMU.Addr={pid,addr}                                   IMMU-Search(S13,S15)
	S17= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S13,S15)
	S18= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S19= IAddrReg.In={pid,addr}                                 Path(S16,S18)
	S20= IMMU.Hit=>IMMUHitReg.In                                Premise(F10)
	S21= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S17,S20)
	S22= PC.Out=>ICache.IEA                                     Premise(F11)
	S23= ICache.IEA=addr                                        Path(S10,S22)
	S24= ICache.Hit=ICacheHit(addr)                             ICache-Search(S23)
	S25= ICache.Out={31,rT,rA,rB,471}                           ICache-Search(S23,S3)
	S26= ICache.Out=>ICacheReg.In                               Premise(F12)
	S27= ICacheReg.In={31,rT,rA,rB,471}                         Path(S25,S26)
	S28= ICache.Hit=>ICacheHitReg.In                            Premise(F13)
	S29= ICacheHitReg.In=ICacheHit(addr)                        Path(S24,S28)
	S30= IMMUHitReg.Out=>CU.IMemHit                             Premise(F14)
	S31= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F15)
	S32= IAddrReg.Out=>IMem.RAddr                               Premise(F16)
	S33= IMem.Out=>IRMux.MemData                                Premise(F17)
	S34= ICacheReg.Out=>IRMux.CacheData                         Premise(F18)
	S35= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F19)
	S36= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F20)
	S37= IRMux.Out=>IR.In                                       Premise(F21)
	S38= IMem.MEM8WordOut=>ICache.WData                         Premise(F22)
	S39= PC.Out=>ICache.IEA                                     Premise(F23)
	S40= IR.Out0_5=>CU.Op                                       Premise(F24)
	S41= IR.Out11_15=>GPRegs.RReg1                              Premise(F25)
	S42= IR.Out16_20=>GPRegs.RReg2                              Premise(F26)
	S43= IR.Out21_31=>CU.IRFunc                                 Premise(F27)
	S44= GPRegs.Rdata1=>A.In                                    Premise(F28)
	S45= GPRegs.Rdata2=>B.In                                    Premise(F29)
	S46= A.Out=>MDU.A                                           Premise(F30)
	S47= B.Out=>MDU.B                                           Premise(F31)
	S48= CU.Func=>MDU.Func                                      Premise(F32)
	S49= MDU.Out32_63=>MDUOut.In                                Premise(F33)
	S50= MDU.CMP=>DataCmb.A                                     Premise(F34)
	S51= XER.SOOut=>DataCmb.B                                   Premise(F35)
	S52= DataCmb.B=so                                           Path(S11,S51)
	S53= DataCmb.Out=>DR4bit.In                                 Premise(F36)
	S54= IR.Out6_10=>GPRegs.WReg                                Premise(F37)
	S55= MDUOut.Out=>GPRegs.WData                               Premise(F38)
	S56= DR4bit.Out=>CRRegs.CR0In                               Premise(F39)
	S57= CtrlPIDReg=0                                           Premise(F40)
	S58= [PIDReg]=pid                                           PIDReg-Hold(S0,S57)
	S59= CtrlIMMU=0                                             Premise(F41)
	S60= CtrlPC=0                                               Premise(F42)
	S61= CtrlPCInc=0                                            Premise(F43)
	S62= PC[Out]=addr                                           PC-Hold(S1,S60,S61)
	S63= CtrlIAddrReg=1                                         Premise(F44)
	S64= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S19,S63)
	S65= CtrlIMMUHitReg=1                                       Premise(F45)
	S66= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S21,S65)
	S67= CtrlICache=0                                           Premise(F46)
	S68= ICache[addr]={31,rT,rA,rB,471}                         ICache-Hold(S3,S67)
	S69= CtrlICacheReg=1                                        Premise(F47)
	S70= [ICacheReg]={31,rT,rA,rB,471}                          ICacheReg-Write(S27,S69)
	S71= CtrlICacheHitReg=1                                     Premise(F48)
	S72= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S29,S71)
	S73= CtrlIMem=0                                             Premise(F49)
	S74= IMem[{pid,addr}]={31,rT,rA,rB,471}                     IMem-Hold(S2,S73)
	S75= CtrlIRMux=0                                            Premise(F50)
	S76= CtrlIR=0                                               Premise(F51)
	S77= CtrlGPRegs=0                                           Premise(F52)
	S78= GPRegs[rA]=a                                           GPRegs-Hold(S4,S77)
	S79= GPRegs[rB]=b                                           GPRegs-Hold(S5,S77)
	S80= CtrlA=0                                                Premise(F53)
	S81= CtrlB=0                                                Premise(F54)
	S82= CtrlMDUOut=0                                           Premise(F55)
	S83= CtrlXERSO=0                                            Premise(F56)
	S84= XER[SO]=so                                             XER-SO-Hold(S6,S83)
	S85= CtrlXEROV=0                                            Premise(F57)
	S86= CtrlXERCA=0                                            Premise(F58)
	S87= CtrlDR4bit=0                                           Premise(F59)
	S88= CtrlCRRegs=0                                           Premise(F60)
	S89= CtrlCRRegsCR0=0                                        Premise(F61)
	S90= CtrlCRRegsW4bitRegs=0                                  Premise(F62)
	S91= CtrlCRRegsW1bitRegs=0                                  Premise(F63)

IMMU	S92= PIDReg.Out=pid                                         PIDReg-Out(S58)
	S93= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S58)
	S94= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S58)
	S95= PC.Out=addr                                            PC-Out(S62)
	S96= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S64)
	S97= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S64)
	S98= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S64)
	S99= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S66)
	S100= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S66)
	S101= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S66)
	S102= ICacheReg.Out={31,rT,rA,rB,471}                       ICacheReg-Out(S70)
	S103= ICacheReg.Out26_31={31,rT,rA,rB,471}[26:31]           ICacheReg-Out(S70)
	S104= ICacheReg.Out30_31={31,rT,rA,rB,471}[30:31]           ICacheReg-Out(S70)
	S105= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S72)
	S106= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S72)
	S107= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S72)
	S108= XER.SOOut=so                                          XER-SO-Out(S84)
	S109= PIDReg.Out=>IMMU.PID                                  Premise(F64)
	S110= IMMU.PID=pid                                          Path(S92,S109)
	S111= PC.Out=>IMMU.IEA                                      Premise(F65)
	S112= IMMU.IEA=addr                                         Path(S95,S111)
	S113= IMMU.Addr={pid,addr}                                  IMMU-Search(S110,S112)
	S114= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S110,S112)
	S115= IMMU.Addr=>IAddrReg.In                                Premise(F66)
	S116= IAddrReg.In={pid,addr}                                Path(S113,S115)
	S117= IMMU.Hit=>IMMUHitReg.In                               Premise(F67)
	S118= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S114,S117)
	S119= PC.Out=>ICache.IEA                                    Premise(F68)
	S120= ICache.IEA=addr                                       Path(S95,S119)
	S121= ICache.Hit=ICacheHit(addr)                            ICache-Search(S120)
	S122= ICache.Out={31,rT,rA,rB,471}                          ICache-Search(S120,S68)
	S123= ICache.Out=>ICacheReg.In                              Premise(F69)
	S124= ICacheReg.In={31,rT,rA,rB,471}                        Path(S122,S123)
	S125= ICache.Hit=>ICacheHitReg.In                           Premise(F70)
	S126= ICacheHitReg.In=ICacheHit(addr)                       Path(S121,S125)
	S127= IMMUHitReg.Out=>CU.IMemHit                            Premise(F71)
	S128= CU.IMemHit=IMMUHit(pid,addr)                          Path(S99,S127)
	S129= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F72)
	S130= CU.ICacheHit=ICacheHit(addr)                          Path(S105,S129)
	S131= IAddrReg.Out=>IMem.RAddr                              Premise(F73)
	S132= IMem.RAddr={pid,addr}                                 Path(S96,S131)
	S133= IMem.Out={31,rT,rA,rB,471}                            IMem-Read(S132,S74)
	S134= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S132,S74)
	S135= IMem.Out=>IRMux.MemData                               Premise(F74)
	S136= IRMux.MemData={31,rT,rA,rB,471}                       Path(S133,S135)
	S137= ICacheReg.Out=>IRMux.CacheData                        Premise(F75)
	S138= IRMux.CacheData={31,rT,rA,rB,471}                     Path(S102,S137)
	S139= IRMux.Out={31,rT,rA,rB,471}                           IRMux-Select(S136,S138)
	S140= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F76)
	S141= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S99,S140)
	S142= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F77)
	S143= IRMux.CacheSel=ICacheHit(addr)                        Path(S105,S142)
	S144= IRMux.Out=>IR.In                                      Premise(F78)
	S145= IR.In={31,rT,rA,rB,471}                               Path(S139,S144)
	S146= IMem.MEM8WordOut=>ICache.WData                        Premise(F79)
	S147= ICache.WData=IMemGet8Word({pid,addr})                 Path(S134,S146)
	S148= PC.Out=>ICache.IEA                                    Premise(F80)
	S149= IR.Out0_5=>CU.Op                                      Premise(F81)
	S150= IR.Out11_15=>GPRegs.RReg1                             Premise(F82)
	S151= IR.Out16_20=>GPRegs.RReg2                             Premise(F83)
	S152= IR.Out21_31=>CU.IRFunc                                Premise(F84)
	S153= GPRegs.Rdata1=>A.In                                   Premise(F85)
	S154= GPRegs.Rdata2=>B.In                                   Premise(F86)
	S155= A.Out=>MDU.A                                          Premise(F87)
	S156= B.Out=>MDU.B                                          Premise(F88)
	S157= CU.Func=>MDU.Func                                     Premise(F89)
	S158= MDU.Out32_63=>MDUOut.In                               Premise(F90)
	S159= MDU.CMP=>DataCmb.A                                    Premise(F91)
	S160= XER.SOOut=>DataCmb.B                                  Premise(F92)
	S161= DataCmb.B=so                                          Path(S108,S160)
	S162= DataCmb.Out=>DR4bit.In                                Premise(F93)
	S163= IR.Out6_10=>GPRegs.WReg                               Premise(F94)
	S164= MDUOut.Out=>GPRegs.WData                              Premise(F95)
	S165= DR4bit.Out=>CRRegs.CR0In                              Premise(F96)
	S166= CtrlPIDReg=0                                          Premise(F97)
	S167= [PIDReg]=pid                                          PIDReg-Hold(S58,S166)
	S168= CtrlIMMU=0                                            Premise(F98)
	S169= CtrlPC=0                                              Premise(F99)
	S170= CtrlPCInc=1                                           Premise(F100)
	S171= PC[Out]=addr+4                                        PC-Inc(S62,S169,S170)
	S172= PC[CIA]=addr                                          PC-Inc(S62,S169,S170)
	S173= CtrlIAddrReg=0                                        Premise(F101)
	S174= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S64,S173)
	S175= CtrlIMMUHitReg=0                                      Premise(F102)
	S176= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S66,S175)
	S177= CtrlICache=0                                          Premise(F103)
	S178= ICache[addr]={31,rT,rA,rB,471}                        ICache-Hold(S68,S177)
	S179= CtrlICacheReg=0                                       Premise(F104)
	S180= [ICacheReg]={31,rT,rA,rB,471}                         ICacheReg-Hold(S70,S179)
	S181= CtrlICacheHitReg=0                                    Premise(F105)
	S182= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S72,S181)
	S183= CtrlIMem=0                                            Premise(F106)
	S184= IMem[{pid,addr}]={31,rT,rA,rB,471}                    IMem-Hold(S74,S183)
	S185= CtrlIRMux=0                                           Premise(F107)
	S186= CtrlIR=1                                              Premise(F108)
	S187= [IR]={31,rT,rA,rB,471}                                IR-Write(S145,S186)
	S188= CtrlGPRegs=0                                          Premise(F109)
	S189= GPRegs[rA]=a                                          GPRegs-Hold(S78,S188)
	S190= GPRegs[rB]=b                                          GPRegs-Hold(S79,S188)
	S191= CtrlA=0                                               Premise(F110)
	S192= CtrlB=0                                               Premise(F111)
	S193= CtrlMDUOut=0                                          Premise(F112)
	S194= CtrlXERSO=0                                           Premise(F113)
	S195= XER[SO]=so                                            XER-SO-Hold(S84,S194)
	S196= CtrlXEROV=0                                           Premise(F114)
	S197= CtrlXERCA=0                                           Premise(F115)
	S198= CtrlDR4bit=0                                          Premise(F116)
	S199= CtrlCRRegs=0                                          Premise(F117)
	S200= CtrlCRRegsCR0=0                                       Premise(F118)
	S201= CtrlCRRegsW4bitRegs=0                                 Premise(F119)
	S202= CtrlCRRegsW1bitRegs=0                                 Premise(F120)

ID	S203= PIDReg.Out=pid                                        PIDReg-Out(S167)
	S204= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S167)
	S205= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S167)
	S206= PC.Out=addr+4                                         PC-Out(S171)
	S207= PC.CIA=addr                                           PC-Out(S172)
	S208= PC.CIA31_28=addr[31:28]                               PC-Out(S172)
	S209= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S174)
	S210= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S174)
	S211= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S174)
	S212= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S176)
	S213= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S176)
	S214= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S176)
	S215= ICacheReg.Out={31,rT,rA,rB,471}                       ICacheReg-Out(S180)
	S216= ICacheReg.Out26_31={31,rT,rA,rB,471}[26:31]           ICacheReg-Out(S180)
	S217= ICacheReg.Out30_31={31,rT,rA,rB,471}[30:31]           ICacheReg-Out(S180)
	S218= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S182)
	S219= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S182)
	S220= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S182)
	S221= IR.Out0_5=31                                          IR-Out(S187)
	S222= IR.Out6_10=rT                                         IR-Out(S187)
	S223= IR.Out11_15=rA                                        IR-Out(S187)
	S224= IR.Out16_20=rB                                        IR-Out(S187)
	S225= IR.Out21_31=471                                       IR-Out(S187)
	S226= XER.SOOut=so                                          XER-SO-Out(S195)
	S227= PIDReg.Out=>IMMU.PID                                  Premise(F121)
	S228= IMMU.PID=pid                                          Path(S203,S227)
	S229= PC.Out=>IMMU.IEA                                      Premise(F122)
	S230= IMMU.IEA=addr+4                                       Path(S206,S229)
	S231= IMMU.Addr={pid,addr+4}                                IMMU-Search(S228,S230)
	S232= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S228,S230)
	S233= IMMU.Addr=>IAddrReg.In                                Premise(F123)
	S234= IAddrReg.In={pid,addr+4}                              Path(S231,S233)
	S235= IMMU.Hit=>IMMUHitReg.In                               Premise(F124)
	S236= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S232,S235)
	S237= PC.Out=>ICache.IEA                                    Premise(F125)
	S238= ICache.IEA=addr+4                                     Path(S206,S237)
	S239= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S238)
	S240= ICache.Out=>ICacheReg.In                              Premise(F126)
	S241= ICache.Hit=>ICacheHitReg.In                           Premise(F127)
	S242= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S239,S241)
	S243= IMMUHitReg.Out=>CU.IMemHit                            Premise(F128)
	S244= CU.IMemHit=IMMUHit(pid,addr)                          Path(S212,S243)
	S245= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F129)
	S246= CU.ICacheHit=ICacheHit(addr)                          Path(S218,S245)
	S247= IAddrReg.Out=>IMem.RAddr                              Premise(F130)
	S248= IMem.RAddr={pid,addr}                                 Path(S209,S247)
	S249= IMem.Out={31,rT,rA,rB,471}                            IMem-Read(S248,S184)
	S250= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S248,S184)
	S251= IMem.Out=>IRMux.MemData                               Premise(F131)
	S252= IRMux.MemData={31,rT,rA,rB,471}                       Path(S249,S251)
	S253= ICacheReg.Out=>IRMux.CacheData                        Premise(F132)
	S254= IRMux.CacheData={31,rT,rA,rB,471}                     Path(S215,S253)
	S255= IRMux.Out={31,rT,rA,rB,471}                           IRMux-Select(S252,S254)
	S256= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F133)
	S257= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S212,S256)
	S258= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F134)
	S259= IRMux.CacheSel=ICacheHit(addr)                        Path(S218,S258)
	S260= IRMux.Out=>IR.In                                      Premise(F135)
	S261= IR.In={31,rT,rA,rB,471}                               Path(S255,S260)
	S262= IMem.MEM8WordOut=>ICache.WData                        Premise(F136)
	S263= ICache.WData=IMemGet8Word({pid,addr})                 Path(S250,S262)
	S264= PC.Out=>ICache.IEA                                    Premise(F137)
	S265= IR.Out0_5=>CU.Op                                      Premise(F138)
	S266= CU.Op=31                                              Path(S221,S265)
	S267= IR.Out11_15=>GPRegs.RReg1                             Premise(F139)
	S268= GPRegs.RReg1=rA                                       Path(S223,S267)
	S269= GPRegs.Rdata1=a                                       GPRegs-Read(S268,S189)
	S270= IR.Out16_20=>GPRegs.RReg2                             Premise(F140)
	S271= GPRegs.RReg2=rB                                       Path(S224,S270)
	S272= GPRegs.Rdata2=b                                       GPRegs-Read(S271,S190)
	S273= IR.Out21_31=>CU.IRFunc                                Premise(F141)
	S274= CU.IRFunc=471                                         Path(S225,S273)
	S275= CU.Func=mdu_mul                                       CU(S266,S274)
	S276= GPRegs.Rdata1=>A.In                                   Premise(F142)
	S277= A.In=a                                                Path(S269,S276)
	S278= GPRegs.Rdata2=>B.In                                   Premise(F143)
	S279= B.In=b                                                Path(S272,S278)
	S280= A.Out=>MDU.A                                          Premise(F144)
	S281= B.Out=>MDU.B                                          Premise(F145)
	S282= CU.Func=>MDU.Func                                     Premise(F146)
	S283= MDU.Func=mdu_mul                                      Path(S275,S282)
	S284= MDU.Out32_63=>MDUOut.In                               Premise(F147)
	S285= MDU.CMP=>DataCmb.A                                    Premise(F148)
	S286= XER.SOOut=>DataCmb.B                                  Premise(F149)
	S287= DataCmb.B=so                                          Path(S226,S286)
	S288= DataCmb.Out=>DR4bit.In                                Premise(F150)
	S289= IR.Out6_10=>GPRegs.WReg                               Premise(F151)
	S290= GPRegs.WReg=rT                                        Path(S222,S289)
	S291= MDUOut.Out=>GPRegs.WData                              Premise(F152)
	S292= DR4bit.Out=>CRRegs.CR0In                              Premise(F153)
	S293= CtrlPIDReg=0                                          Premise(F154)
	S294= [PIDReg]=pid                                          PIDReg-Hold(S167,S293)
	S295= CtrlIMMU=0                                            Premise(F155)
	S296= CtrlPC=0                                              Premise(F156)
	S297= CtrlPCInc=0                                           Premise(F157)
	S298= PC[CIA]=addr                                          PC-Hold(S172,S297)
	S299= PC[Out]=addr+4                                        PC-Hold(S171,S296,S297)
	S300= CtrlIAddrReg=0                                        Premise(F158)
	S301= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S174,S300)
	S302= CtrlIMMUHitReg=0                                      Premise(F159)
	S303= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S176,S302)
	S304= CtrlICache=0                                          Premise(F160)
	S305= ICache[addr]={31,rT,rA,rB,471}                        ICache-Hold(S178,S304)
	S306= CtrlICacheReg=0                                       Premise(F161)
	S307= [ICacheReg]={31,rT,rA,rB,471}                         ICacheReg-Hold(S180,S306)
	S308= CtrlICacheHitReg=0                                    Premise(F162)
	S309= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S182,S308)
	S310= CtrlIMem=0                                            Premise(F163)
	S311= IMem[{pid,addr}]={31,rT,rA,rB,471}                    IMem-Hold(S184,S310)
	S312= CtrlIRMux=0                                           Premise(F164)
	S313= CtrlIR=0                                              Premise(F165)
	S314= [IR]={31,rT,rA,rB,471}                                IR-Hold(S187,S313)
	S315= CtrlGPRegs=0                                          Premise(F166)
	S316= GPRegs[rA]=a                                          GPRegs-Hold(S189,S315)
	S317= GPRegs[rB]=b                                          GPRegs-Hold(S190,S315)
	S318= CtrlA=1                                               Premise(F167)
	S319= [A]=a                                                 A-Write(S277,S318)
	S320= CtrlB=1                                               Premise(F168)
	S321= [B]=b                                                 B-Write(S279,S320)
	S322= CtrlMDUOut=0                                          Premise(F169)
	S323= CtrlXERSO=0                                           Premise(F170)
	S324= XER[SO]=so                                            XER-SO-Hold(S195,S323)
	S325= CtrlXEROV=0                                           Premise(F171)
	S326= CtrlXERCA=0                                           Premise(F172)
	S327= CtrlDR4bit=0                                          Premise(F173)
	S328= CtrlCRRegs=0                                          Premise(F174)
	S329= CtrlCRRegsCR0=0                                       Premise(F175)
	S330= CtrlCRRegsW4bitRegs=0                                 Premise(F176)
	S331= CtrlCRRegsW1bitRegs=0                                 Premise(F177)

EX	S332= PIDReg.Out=pid                                        PIDReg-Out(S294)
	S333= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S294)
	S334= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S294)
	S335= PC.CIA=addr                                           PC-Out(S298)
	S336= PC.CIA31_28=addr[31:28]                               PC-Out(S298)
	S337= PC.Out=addr+4                                         PC-Out(S299)
	S338= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S301)
	S339= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S301)
	S340= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S301)
	S341= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S303)
	S342= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S303)
	S343= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S303)
	S344= ICacheReg.Out={31,rT,rA,rB,471}                       ICacheReg-Out(S307)
	S345= ICacheReg.Out26_31={31,rT,rA,rB,471}[26:31]           ICacheReg-Out(S307)
	S346= ICacheReg.Out30_31={31,rT,rA,rB,471}[30:31]           ICacheReg-Out(S307)
	S347= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S309)
	S348= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S309)
	S349= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S309)
	S350= IR.Out0_5=31                                          IR-Out(S314)
	S351= IR.Out6_10=rT                                         IR-Out(S314)
	S352= IR.Out11_15=rA                                        IR-Out(S314)
	S353= IR.Out16_20=rB                                        IR-Out(S314)
	S354= IR.Out21_31=471                                       IR-Out(S314)
	S355= A.Out=a                                               A-Out(S319)
	S356= A.Out26_31=a[26:31]                                   A-Out(S319)
	S357= A.Out30_31=a[30:31]                                   A-Out(S319)
	S358= B.Out=b                                               B-Out(S321)
	S359= B.Out26_31=b[26:31]                                   B-Out(S321)
	S360= B.Out30_31=b[30:31]                                   B-Out(S321)
	S361= XER.SOOut=so                                          XER-SO-Out(S324)
	S362= PIDReg.Out=>IMMU.PID                                  Premise(F178)
	S363= IMMU.PID=pid                                          Path(S332,S362)
	S364= PC.Out=>IMMU.IEA                                      Premise(F179)
	S365= IMMU.IEA=addr+4                                       Path(S337,S364)
	S366= IMMU.Addr={pid,addr+4}                                IMMU-Search(S363,S365)
	S367= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S363,S365)
	S368= IMMU.Addr=>IAddrReg.In                                Premise(F180)
	S369= IAddrReg.In={pid,addr+4}                              Path(S366,S368)
	S370= IMMU.Hit=>IMMUHitReg.In                               Premise(F181)
	S371= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S367,S370)
	S372= PC.Out=>ICache.IEA                                    Premise(F182)
	S373= ICache.IEA=addr+4                                     Path(S337,S372)
	S374= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S373)
	S375= ICache.Out=>ICacheReg.In                              Premise(F183)
	S376= ICache.Hit=>ICacheHitReg.In                           Premise(F184)
	S377= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S374,S376)
	S378= IMMUHitReg.Out=>CU.IMemHit                            Premise(F185)
	S379= CU.IMemHit=IMMUHit(pid,addr)                          Path(S341,S378)
	S380= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F186)
	S381= CU.ICacheHit=ICacheHit(addr)                          Path(S347,S380)
	S382= IAddrReg.Out=>IMem.RAddr                              Premise(F187)
	S383= IMem.RAddr={pid,addr}                                 Path(S338,S382)
	S384= IMem.Out={31,rT,rA,rB,471}                            IMem-Read(S383,S311)
	S385= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S383,S311)
	S386= IMem.Out=>IRMux.MemData                               Premise(F188)
	S387= IRMux.MemData={31,rT,rA,rB,471}                       Path(S384,S386)
	S388= ICacheReg.Out=>IRMux.CacheData                        Premise(F189)
	S389= IRMux.CacheData={31,rT,rA,rB,471}                     Path(S344,S388)
	S390= IRMux.Out={31,rT,rA,rB,471}                           IRMux-Select(S387,S389)
	S391= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F190)
	S392= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S341,S391)
	S393= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F191)
	S394= IRMux.CacheSel=ICacheHit(addr)                        Path(S347,S393)
	S395= IRMux.Out=>IR.In                                      Premise(F192)
	S396= IR.In={31,rT,rA,rB,471}                               Path(S390,S395)
	S397= IMem.MEM8WordOut=>ICache.WData                        Premise(F193)
	S398= ICache.WData=IMemGet8Word({pid,addr})                 Path(S385,S397)
	S399= PC.Out=>ICache.IEA                                    Premise(F194)
	S400= IR.Out0_5=>CU.Op                                      Premise(F195)
	S401= CU.Op=31                                              Path(S350,S400)
	S402= IR.Out11_15=>GPRegs.RReg1                             Premise(F196)
	S403= GPRegs.RReg1=rA                                       Path(S352,S402)
	S404= GPRegs.Rdata1=a                                       GPRegs-Read(S403,S316)
	S405= IR.Out16_20=>GPRegs.RReg2                             Premise(F197)
	S406= GPRegs.RReg2=rB                                       Path(S353,S405)
	S407= GPRegs.Rdata2=b                                       GPRegs-Read(S406,S317)
	S408= IR.Out21_31=>CU.IRFunc                                Premise(F198)
	S409= CU.IRFunc=471                                         Path(S354,S408)
	S410= CU.Func=mdu_mul                                       CU(S401,S409)
	S411= GPRegs.Rdata1=>A.In                                   Premise(F199)
	S412= A.In=a                                                Path(S404,S411)
	S413= GPRegs.Rdata2=>B.In                                   Premise(F200)
	S414= B.In=b                                                Path(S407,S413)
	S415= A.Out=>MDU.A                                          Premise(F201)
	S416= MDU.A=a                                               Path(S355,S415)
	S417= B.Out=>MDU.B                                          Premise(F202)
	S418= MDU.B=b                                               Path(S358,S417)
	S419= CU.Func=>MDU.Func                                     Premise(F203)
	S420= MDU.Func=mdu_mul                                      Path(S410,S419)
	S421= MDU.Out0_31=(a×b)[0:31]                               MDU(S416,S418)
	S422= MDU.Out32_63=(a×b)[32:63]                             MDU(S416,S418)
	S423= MDU.Out16_47=(a×b)[16:47]                             MDU(S416,S418)
	S424= MDU.CMP=Compare0(a×b)                                 MDU(S416,S418)
	S425= MDU.OV=OverFlow(a×b)                                  MDU(S416,S418)
	S426= MDU.Out32_63=>MDUOut.In                               Premise(F204)
	S427= MDUOut.In=(a×b)[32:63]                                Path(S422,S426)
	S428= MDU.CMP=>DataCmb.A                                    Premise(F205)
	S429= DataCmb.A=Compare0(a×b)                               Path(S424,S428)
	S430= XER.SOOut=>DataCmb.B                                  Premise(F206)
	S431= DataCmb.B=so                                          Path(S361,S430)
	S432= DataCmb.Out={Compare0(a×b),so}                        DataCmb(S429,S431)
	S433= DataCmb.Out=>DR4bit.In                                Premise(F207)
	S434= DR4bit.In={Compare0(a×b),so}                          Path(S432,S433)
	S435= IR.Out6_10=>GPRegs.WReg                               Premise(F208)
	S436= GPRegs.WReg=rT                                        Path(S351,S435)
	S437= MDUOut.Out=>GPRegs.WData                              Premise(F209)
	S438= DR4bit.Out=>CRRegs.CR0In                              Premise(F210)
	S439= CtrlPIDReg=0                                          Premise(F211)
	S440= [PIDReg]=pid                                          PIDReg-Hold(S294,S439)
	S441= CtrlIMMU=0                                            Premise(F212)
	S442= CtrlPC=0                                              Premise(F213)
	S443= CtrlPCInc=0                                           Premise(F214)
	S444= PC[CIA]=addr                                          PC-Hold(S298,S443)
	S445= PC[Out]=addr+4                                        PC-Hold(S299,S442,S443)
	S446= CtrlIAddrReg=0                                        Premise(F215)
	S447= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S301,S446)
	S448= CtrlIMMUHitReg=0                                      Premise(F216)
	S449= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S303,S448)
	S450= CtrlICache=0                                          Premise(F217)
	S451= ICache[addr]={31,rT,rA,rB,471}                        ICache-Hold(S305,S450)
	S452= CtrlICacheReg=0                                       Premise(F218)
	S453= [ICacheReg]={31,rT,rA,rB,471}                         ICacheReg-Hold(S307,S452)
	S454= CtrlICacheHitReg=0                                    Premise(F219)
	S455= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S309,S454)
	S456= CtrlIMem=0                                            Premise(F220)
	S457= IMem[{pid,addr}]={31,rT,rA,rB,471}                    IMem-Hold(S311,S456)
	S458= CtrlIRMux=0                                           Premise(F221)
	S459= CtrlIR=0                                              Premise(F222)
	S460= [IR]={31,rT,rA,rB,471}                                IR-Hold(S314,S459)
	S461= CtrlGPRegs=0                                          Premise(F223)
	S462= GPRegs[rA]=a                                          GPRegs-Hold(S316,S461)
	S463= GPRegs[rB]=b                                          GPRegs-Hold(S317,S461)
	S464= CtrlA=0                                               Premise(F224)
	S465= [A]=a                                                 A-Hold(S319,S464)
	S466= CtrlB=0                                               Premise(F225)
	S467= [B]=b                                                 B-Hold(S321,S466)
	S468= CtrlMDUOut=1                                          Premise(F226)
	S469= [MDUOut]=(a×b)[32:63]                                 MDUOut-Write(S427,S468)
	S470= CtrlXERSO=0                                           Premise(F227)
	S471= XER[SO]=so                                            XER-SO-Hold(S324,S470)
	S472= CtrlXEROV=0                                           Premise(F228)
	S473= CtrlXERCA=0                                           Premise(F229)
	S474= CtrlDR4bit=1                                          Premise(F230)
	S475= [DR4bit]={Compare0(a×b),so}                           DR4bit-Write(S434,S474)
	S476= CtrlCRRegs=0                                          Premise(F231)
	S477= CtrlCRRegsCR0=0                                       Premise(F232)
	S478= CtrlCRRegsW4bitRegs=0                                 Premise(F233)
	S479= CtrlCRRegsW1bitRegs=0                                 Premise(F234)

MEM	S480= PIDReg.Out=pid                                        PIDReg-Out(S440)
	S481= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S440)
	S482= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S440)
	S483= PC.CIA=addr                                           PC-Out(S444)
	S484= PC.CIA31_28=addr[31:28]                               PC-Out(S444)
	S485= PC.Out=addr+4                                         PC-Out(S445)
	S486= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S447)
	S487= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S447)
	S488= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S447)
	S489= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S449)
	S490= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S449)
	S491= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S449)
	S492= ICacheReg.Out={31,rT,rA,rB,471}                       ICacheReg-Out(S453)
	S493= ICacheReg.Out26_31={31,rT,rA,rB,471}[26:31]           ICacheReg-Out(S453)
	S494= ICacheReg.Out30_31={31,rT,rA,rB,471}[30:31]           ICacheReg-Out(S453)
	S495= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S455)
	S496= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S455)
	S497= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S455)
	S498= IR.Out0_5=31                                          IR-Out(S460)
	S499= IR.Out6_10=rT                                         IR-Out(S460)
	S500= IR.Out11_15=rA                                        IR-Out(S460)
	S501= IR.Out16_20=rB                                        IR-Out(S460)
	S502= IR.Out21_31=471                                       IR-Out(S460)
	S503= A.Out=a                                               A-Out(S465)
	S504= A.Out26_31=a[26:31]                                   A-Out(S465)
	S505= A.Out30_31=a[30:31]                                   A-Out(S465)
	S506= B.Out=b                                               B-Out(S467)
	S507= B.Out26_31=b[26:31]                                   B-Out(S467)
	S508= B.Out30_31=b[30:31]                                   B-Out(S467)
	S509= MDUOut.Out=(a×b)[32:63]                               MDUOut-Out(S469)
	S510= MDUOut.Out26_31=(a×b)[32:63][26:31]                   MDUOut-Out(S469)
	S511= MDUOut.Out30_31=(a×b)[32:63][30:31]                   MDUOut-Out(S469)
	S512= XER.SOOut=so                                          XER-SO-Out(S471)
	S513= DR4bit.Out={Compare0(a×b),so}                         DR4bit-Out(S475)
	S514= DR4bit.Out26_31={Compare0(a×b),so}[26:31]             DR4bit-Out(S475)
	S515= DR4bit.Out30_31={Compare0(a×b),so}[30:31]             DR4bit-Out(S475)
	S516= PIDReg.Out=>IMMU.PID                                  Premise(F235)
	S517= IMMU.PID=pid                                          Path(S480,S516)
	S518= PC.Out=>IMMU.IEA                                      Premise(F236)
	S519= IMMU.IEA=addr+4                                       Path(S485,S518)
	S520= IMMU.Addr={pid,addr+4}                                IMMU-Search(S517,S519)
	S521= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S517,S519)
	S522= IMMU.Addr=>IAddrReg.In                                Premise(F237)
	S523= IAddrReg.In={pid,addr+4}                              Path(S520,S522)
	S524= IMMU.Hit=>IMMUHitReg.In                               Premise(F238)
	S525= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S521,S524)
	S526= PC.Out=>ICache.IEA                                    Premise(F239)
	S527= ICache.IEA=addr+4                                     Path(S485,S526)
	S528= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S527)
	S529= ICache.Out=>ICacheReg.In                              Premise(F240)
	S530= ICache.Hit=>ICacheHitReg.In                           Premise(F241)
	S531= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S528,S530)
	S532= IMMUHitReg.Out=>CU.IMemHit                            Premise(F242)
	S533= CU.IMemHit=IMMUHit(pid,addr)                          Path(S489,S532)
	S534= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F243)
	S535= CU.ICacheHit=ICacheHit(addr)                          Path(S495,S534)
	S536= IAddrReg.Out=>IMem.RAddr                              Premise(F244)
	S537= IMem.RAddr={pid,addr}                                 Path(S486,S536)
	S538= IMem.Out={31,rT,rA,rB,471}                            IMem-Read(S537,S457)
	S539= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S537,S457)
	S540= IMem.Out=>IRMux.MemData                               Premise(F245)
	S541= IRMux.MemData={31,rT,rA,rB,471}                       Path(S538,S540)
	S542= ICacheReg.Out=>IRMux.CacheData                        Premise(F246)
	S543= IRMux.CacheData={31,rT,rA,rB,471}                     Path(S492,S542)
	S544= IRMux.Out={31,rT,rA,rB,471}                           IRMux-Select(S541,S543)
	S545= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F247)
	S546= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S489,S545)
	S547= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F248)
	S548= IRMux.CacheSel=ICacheHit(addr)                        Path(S495,S547)
	S549= IRMux.Out=>IR.In                                      Premise(F249)
	S550= IR.In={31,rT,rA,rB,471}                               Path(S544,S549)
	S551= IMem.MEM8WordOut=>ICache.WData                        Premise(F250)
	S552= ICache.WData=IMemGet8Word({pid,addr})                 Path(S539,S551)
	S553= PC.Out=>ICache.IEA                                    Premise(F251)
	S554= IR.Out0_5=>CU.Op                                      Premise(F252)
	S555= CU.Op=31                                              Path(S498,S554)
	S556= IR.Out11_15=>GPRegs.RReg1                             Premise(F253)
	S557= GPRegs.RReg1=rA                                       Path(S500,S556)
	S558= GPRegs.Rdata1=a                                       GPRegs-Read(S557,S462)
	S559= IR.Out16_20=>GPRegs.RReg2                             Premise(F254)
	S560= GPRegs.RReg2=rB                                       Path(S501,S559)
	S561= GPRegs.Rdata2=b                                       GPRegs-Read(S560,S463)
	S562= IR.Out21_31=>CU.IRFunc                                Premise(F255)
	S563= CU.IRFunc=471                                         Path(S502,S562)
	S564= CU.Func=mdu_mul                                       CU(S555,S563)
	S565= GPRegs.Rdata1=>A.In                                   Premise(F256)
	S566= A.In=a                                                Path(S558,S565)
	S567= GPRegs.Rdata2=>B.In                                   Premise(F257)
	S568= B.In=b                                                Path(S561,S567)
	S569= A.Out=>MDU.A                                          Premise(F258)
	S570= MDU.A=a                                               Path(S503,S569)
	S571= B.Out=>MDU.B                                          Premise(F259)
	S572= MDU.B=b                                               Path(S506,S571)
	S573= CU.Func=>MDU.Func                                     Premise(F260)
	S574= MDU.Func=mdu_mul                                      Path(S564,S573)
	S575= MDU.Out0_31=(a×b)[0:31]                               MDU(S570,S572)
	S576= MDU.Out32_63=(a×b)[32:63]                             MDU(S570,S572)
	S577= MDU.Out16_47=(a×b)[16:47]                             MDU(S570,S572)
	S578= MDU.CMP=Compare0(a×b)                                 MDU(S570,S572)
	S579= MDU.OV=OverFlow(a×b)                                  MDU(S570,S572)
	S580= MDU.Out32_63=>MDUOut.In                               Premise(F261)
	S581= MDUOut.In=(a×b)[32:63]                                Path(S576,S580)
	S582= MDU.CMP=>DataCmb.A                                    Premise(F262)
	S583= DataCmb.A=Compare0(a×b)                               Path(S578,S582)
	S584= XER.SOOut=>DataCmb.B                                  Premise(F263)
	S585= DataCmb.B=so                                          Path(S512,S584)
	S586= DataCmb.Out={Compare0(a×b),so}                        DataCmb(S583,S585)
	S587= DataCmb.Out=>DR4bit.In                                Premise(F264)
	S588= DR4bit.In={Compare0(a×b),so}                          Path(S586,S587)
	S589= IR.Out6_10=>GPRegs.WReg                               Premise(F265)
	S590= GPRegs.WReg=rT                                        Path(S499,S589)
	S591= MDUOut.Out=>GPRegs.WData                              Premise(F266)
	S592= GPRegs.WData=(a×b)[32:63]                             Path(S509,S591)
	S593= DR4bit.Out=>CRRegs.CR0In                              Premise(F267)
	S594= CRRegs.CR0In={Compare0(a×b),so}                       Path(S513,S593)
	S595= CtrlPIDReg=0                                          Premise(F268)
	S596= [PIDReg]=pid                                          PIDReg-Hold(S440,S595)
	S597= CtrlIMMU=0                                            Premise(F269)
	S598= CtrlPC=0                                              Premise(F270)
	S599= CtrlPCInc=0                                           Premise(F271)
	S600= PC[CIA]=addr                                          PC-Hold(S444,S599)
	S601= PC[Out]=addr+4                                        PC-Hold(S445,S598,S599)
	S602= CtrlIAddrReg=0                                        Premise(F272)
	S603= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S447,S602)
	S604= CtrlIMMUHitReg=0                                      Premise(F273)
	S605= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S449,S604)
	S606= CtrlICache=0                                          Premise(F274)
	S607= ICache[addr]={31,rT,rA,rB,471}                        ICache-Hold(S451,S606)
	S608= CtrlICacheReg=0                                       Premise(F275)
	S609= [ICacheReg]={31,rT,rA,rB,471}                         ICacheReg-Hold(S453,S608)
	S610= CtrlICacheHitReg=0                                    Premise(F276)
	S611= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S455,S610)
	S612= CtrlIMem=0                                            Premise(F277)
	S613= IMem[{pid,addr}]={31,rT,rA,rB,471}                    IMem-Hold(S457,S612)
	S614= CtrlIRMux=0                                           Premise(F278)
	S615= CtrlIR=0                                              Premise(F279)
	S616= [IR]={31,rT,rA,rB,471}                                IR-Hold(S460,S615)
	S617= CtrlGPRegs=0                                          Premise(F280)
	S618= GPRegs[rA]=a                                          GPRegs-Hold(S462,S617)
	S619= GPRegs[rB]=b                                          GPRegs-Hold(S463,S617)
	S620= CtrlA=0                                               Premise(F281)
	S621= [A]=a                                                 A-Hold(S465,S620)
	S622= CtrlB=0                                               Premise(F282)
	S623= [B]=b                                                 B-Hold(S467,S622)
	S624= CtrlMDUOut=0                                          Premise(F283)
	S625= [MDUOut]=(a×b)[32:63]                                 MDUOut-Hold(S469,S624)
	S626= CtrlXERSO=0                                           Premise(F284)
	S627= XER[SO]=so                                            XER-SO-Hold(S471,S626)
	S628= CtrlXEROV=0                                           Premise(F285)
	S629= CtrlXERCA=0                                           Premise(F286)
	S630= CtrlDR4bit=0                                          Premise(F287)
	S631= [DR4bit]={Compare0(a×b),so}                           DR4bit-Hold(S475,S630)
	S632= CtrlCRRegs=0                                          Premise(F288)
	S633= CtrlCRRegsCR0=0                                       Premise(F289)
	S634= CtrlCRRegsW4bitRegs=0                                 Premise(F290)
	S635= CtrlCRRegsW1bitRegs=0                                 Premise(F291)

DMMU1	S636= PIDReg.Out=pid                                        PIDReg-Out(S596)
	S637= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S596)
	S638= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S596)
	S639= PC.CIA=addr                                           PC-Out(S600)
	S640= PC.CIA31_28=addr[31:28]                               PC-Out(S600)
	S641= PC.Out=addr+4                                         PC-Out(S601)
	S642= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S603)
	S643= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S603)
	S644= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S603)
	S645= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S605)
	S646= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S605)
	S647= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S605)
	S648= ICacheReg.Out={31,rT,rA,rB,471}                       ICacheReg-Out(S609)
	S649= ICacheReg.Out26_31={31,rT,rA,rB,471}[26:31]           ICacheReg-Out(S609)
	S650= ICacheReg.Out30_31={31,rT,rA,rB,471}[30:31]           ICacheReg-Out(S609)
	S651= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S611)
	S652= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S611)
	S653= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S611)
	S654= IR.Out0_5=31                                          IR-Out(S616)
	S655= IR.Out6_10=rT                                         IR-Out(S616)
	S656= IR.Out11_15=rA                                        IR-Out(S616)
	S657= IR.Out16_20=rB                                        IR-Out(S616)
	S658= IR.Out21_31=471                                       IR-Out(S616)
	S659= A.Out=a                                               A-Out(S621)
	S660= A.Out26_31=a[26:31]                                   A-Out(S621)
	S661= A.Out30_31=a[30:31]                                   A-Out(S621)
	S662= B.Out=b                                               B-Out(S623)
	S663= B.Out26_31=b[26:31]                                   B-Out(S623)
	S664= B.Out30_31=b[30:31]                                   B-Out(S623)
	S665= MDUOut.Out=(a×b)[32:63]                               MDUOut-Out(S625)
	S666= MDUOut.Out26_31=(a×b)[32:63][26:31]                   MDUOut-Out(S625)
	S667= MDUOut.Out30_31=(a×b)[32:63][30:31]                   MDUOut-Out(S625)
	S668= XER.SOOut=so                                          XER-SO-Out(S627)
	S669= DR4bit.Out={Compare0(a×b),so}                         DR4bit-Out(S631)
	S670= DR4bit.Out26_31={Compare0(a×b),so}[26:31]             DR4bit-Out(S631)
	S671= DR4bit.Out30_31={Compare0(a×b),so}[30:31]             DR4bit-Out(S631)
	S672= PIDReg.Out=>IMMU.PID                                  Premise(F292)
	S673= IMMU.PID=pid                                          Path(S636,S672)
	S674= PC.Out=>IMMU.IEA                                      Premise(F293)
	S675= IMMU.IEA=addr+4                                       Path(S641,S674)
	S676= IMMU.Addr={pid,addr+4}                                IMMU-Search(S673,S675)
	S677= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S673,S675)
	S678= IMMU.Addr=>IAddrReg.In                                Premise(F294)
	S679= IAddrReg.In={pid,addr+4}                              Path(S676,S678)
	S680= IMMU.Hit=>IMMUHitReg.In                               Premise(F295)
	S681= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S677,S680)
	S682= PC.Out=>ICache.IEA                                    Premise(F296)
	S683= ICache.IEA=addr+4                                     Path(S641,S682)
	S684= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S683)
	S685= ICache.Out=>ICacheReg.In                              Premise(F297)
	S686= ICache.Hit=>ICacheHitReg.In                           Premise(F298)
	S687= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S684,S686)
	S688= IMMUHitReg.Out=>CU.IMemHit                            Premise(F299)
	S689= CU.IMemHit=IMMUHit(pid,addr)                          Path(S645,S688)
	S690= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F300)
	S691= CU.ICacheHit=ICacheHit(addr)                          Path(S651,S690)
	S692= IAddrReg.Out=>IMem.RAddr                              Premise(F301)
	S693= IMem.RAddr={pid,addr}                                 Path(S642,S692)
	S694= IMem.Out={31,rT,rA,rB,471}                            IMem-Read(S693,S613)
	S695= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S693,S613)
	S696= IMem.Out=>IRMux.MemData                               Premise(F302)
	S697= IRMux.MemData={31,rT,rA,rB,471}                       Path(S694,S696)
	S698= ICacheReg.Out=>IRMux.CacheData                        Premise(F303)
	S699= IRMux.CacheData={31,rT,rA,rB,471}                     Path(S648,S698)
	S700= IRMux.Out={31,rT,rA,rB,471}                           IRMux-Select(S697,S699)
	S701= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F304)
	S702= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S645,S701)
	S703= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F305)
	S704= IRMux.CacheSel=ICacheHit(addr)                        Path(S651,S703)
	S705= IRMux.Out=>IR.In                                      Premise(F306)
	S706= IR.In={31,rT,rA,rB,471}                               Path(S700,S705)
	S707= IMem.MEM8WordOut=>ICache.WData                        Premise(F307)
	S708= ICache.WData=IMemGet8Word({pid,addr})                 Path(S695,S707)
	S709= PC.Out=>ICache.IEA                                    Premise(F308)
	S710= IR.Out0_5=>CU.Op                                      Premise(F309)
	S711= CU.Op=31                                              Path(S654,S710)
	S712= IR.Out11_15=>GPRegs.RReg1                             Premise(F310)
	S713= GPRegs.RReg1=rA                                       Path(S656,S712)
	S714= GPRegs.Rdata1=a                                       GPRegs-Read(S713,S618)
	S715= IR.Out16_20=>GPRegs.RReg2                             Premise(F311)
	S716= GPRegs.RReg2=rB                                       Path(S657,S715)
	S717= GPRegs.Rdata2=b                                       GPRegs-Read(S716,S619)
	S718= IR.Out21_31=>CU.IRFunc                                Premise(F312)
	S719= CU.IRFunc=471                                         Path(S658,S718)
	S720= CU.Func=mdu_mul                                       CU(S711,S719)
	S721= GPRegs.Rdata1=>A.In                                   Premise(F313)
	S722= A.In=a                                                Path(S714,S721)
	S723= GPRegs.Rdata2=>B.In                                   Premise(F314)
	S724= B.In=b                                                Path(S717,S723)
	S725= A.Out=>MDU.A                                          Premise(F315)
	S726= MDU.A=a                                               Path(S659,S725)
	S727= B.Out=>MDU.B                                          Premise(F316)
	S728= MDU.B=b                                               Path(S662,S727)
	S729= CU.Func=>MDU.Func                                     Premise(F317)
	S730= MDU.Func=mdu_mul                                      Path(S720,S729)
	S731= MDU.Out0_31=(a×b)[0:31]                               MDU(S726,S728)
	S732= MDU.Out32_63=(a×b)[32:63]                             MDU(S726,S728)
	S733= MDU.Out16_47=(a×b)[16:47]                             MDU(S726,S728)
	S734= MDU.CMP=Compare0(a×b)                                 MDU(S726,S728)
	S735= MDU.OV=OverFlow(a×b)                                  MDU(S726,S728)
	S736= MDU.Out32_63=>MDUOut.In                               Premise(F318)
	S737= MDUOut.In=(a×b)[32:63]                                Path(S732,S736)
	S738= MDU.CMP=>DataCmb.A                                    Premise(F319)
	S739= DataCmb.A=Compare0(a×b)                               Path(S734,S738)
	S740= XER.SOOut=>DataCmb.B                                  Premise(F320)
	S741= DataCmb.B=so                                          Path(S668,S740)
	S742= DataCmb.Out={Compare0(a×b),so}                        DataCmb(S739,S741)
	S743= DataCmb.Out=>DR4bit.In                                Premise(F321)
	S744= DR4bit.In={Compare0(a×b),so}                          Path(S742,S743)
	S745= IR.Out6_10=>GPRegs.WReg                               Premise(F322)
	S746= GPRegs.WReg=rT                                        Path(S655,S745)
	S747= MDUOut.Out=>GPRegs.WData                              Premise(F323)
	S748= GPRegs.WData=(a×b)[32:63]                             Path(S665,S747)
	S749= DR4bit.Out=>CRRegs.CR0In                              Premise(F324)
	S750= CRRegs.CR0In={Compare0(a×b),so}                       Path(S669,S749)
	S751= CtrlPIDReg=0                                          Premise(F325)
	S752= [PIDReg]=pid                                          PIDReg-Hold(S596,S751)
	S753= CtrlIMMU=0                                            Premise(F326)
	S754= CtrlPC=0                                              Premise(F327)
	S755= CtrlPCInc=0                                           Premise(F328)
	S756= PC[CIA]=addr                                          PC-Hold(S600,S755)
	S757= PC[Out]=addr+4                                        PC-Hold(S601,S754,S755)
	S758= CtrlIAddrReg=0                                        Premise(F329)
	S759= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S603,S758)
	S760= CtrlIMMUHitReg=0                                      Premise(F330)
	S761= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S605,S760)
	S762= CtrlICache=0                                          Premise(F331)
	S763= ICache[addr]={31,rT,rA,rB,471}                        ICache-Hold(S607,S762)
	S764= CtrlICacheReg=0                                       Premise(F332)
	S765= [ICacheReg]={31,rT,rA,rB,471}                         ICacheReg-Hold(S609,S764)
	S766= CtrlICacheHitReg=0                                    Premise(F333)
	S767= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S611,S766)
	S768= CtrlIMem=0                                            Premise(F334)
	S769= IMem[{pid,addr}]={31,rT,rA,rB,471}                    IMem-Hold(S613,S768)
	S770= CtrlIRMux=0                                           Premise(F335)
	S771= CtrlIR=0                                              Premise(F336)
	S772= [IR]={31,rT,rA,rB,471}                                IR-Hold(S616,S771)
	S773= CtrlGPRegs=0                                          Premise(F337)
	S774= GPRegs[rA]=a                                          GPRegs-Hold(S618,S773)
	S775= GPRegs[rB]=b                                          GPRegs-Hold(S619,S773)
	S776= CtrlA=0                                               Premise(F338)
	S777= [A]=a                                                 A-Hold(S621,S776)
	S778= CtrlB=0                                               Premise(F339)
	S779= [B]=b                                                 B-Hold(S623,S778)
	S780= CtrlMDUOut=0                                          Premise(F340)
	S781= [MDUOut]=(a×b)[32:63]                                 MDUOut-Hold(S625,S780)
	S782= CtrlXERSO=0                                           Premise(F341)
	S783= XER[SO]=so                                            XER-SO-Hold(S627,S782)
	S784= CtrlXEROV=0                                           Premise(F342)
	S785= CtrlXERCA=0                                           Premise(F343)
	S786= CtrlDR4bit=0                                          Premise(F344)
	S787= [DR4bit]={Compare0(a×b),so}                           DR4bit-Hold(S631,S786)
	S788= CtrlCRRegs=0                                          Premise(F345)
	S789= CtrlCRRegsCR0=0                                       Premise(F346)
	S790= CtrlCRRegsW4bitRegs=0                                 Premise(F347)
	S791= CtrlCRRegsW1bitRegs=0                                 Premise(F348)

DMMU2	S792= PIDReg.Out=pid                                        PIDReg-Out(S752)
	S793= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S752)
	S794= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S752)
	S795= PC.CIA=addr                                           PC-Out(S756)
	S796= PC.CIA31_28=addr[31:28]                               PC-Out(S756)
	S797= PC.Out=addr+4                                         PC-Out(S757)
	S798= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S759)
	S799= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S759)
	S800= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S759)
	S801= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S761)
	S802= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S761)
	S803= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S761)
	S804= ICacheReg.Out={31,rT,rA,rB,471}                       ICacheReg-Out(S765)
	S805= ICacheReg.Out26_31={31,rT,rA,rB,471}[26:31]           ICacheReg-Out(S765)
	S806= ICacheReg.Out30_31={31,rT,rA,rB,471}[30:31]           ICacheReg-Out(S765)
	S807= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S767)
	S808= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S767)
	S809= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S767)
	S810= IR.Out0_5=31                                          IR-Out(S772)
	S811= IR.Out6_10=rT                                         IR-Out(S772)
	S812= IR.Out11_15=rA                                        IR-Out(S772)
	S813= IR.Out16_20=rB                                        IR-Out(S772)
	S814= IR.Out21_31=471                                       IR-Out(S772)
	S815= A.Out=a                                               A-Out(S777)
	S816= A.Out26_31=a[26:31]                                   A-Out(S777)
	S817= A.Out30_31=a[30:31]                                   A-Out(S777)
	S818= B.Out=b                                               B-Out(S779)
	S819= B.Out26_31=b[26:31]                                   B-Out(S779)
	S820= B.Out30_31=b[30:31]                                   B-Out(S779)
	S821= MDUOut.Out=(a×b)[32:63]                               MDUOut-Out(S781)
	S822= MDUOut.Out26_31=(a×b)[32:63][26:31]                   MDUOut-Out(S781)
	S823= MDUOut.Out30_31=(a×b)[32:63][30:31]                   MDUOut-Out(S781)
	S824= XER.SOOut=so                                          XER-SO-Out(S783)
	S825= DR4bit.Out={Compare0(a×b),so}                         DR4bit-Out(S787)
	S826= DR4bit.Out26_31={Compare0(a×b),so}[26:31]             DR4bit-Out(S787)
	S827= DR4bit.Out30_31={Compare0(a×b),so}[30:31]             DR4bit-Out(S787)
	S828= PIDReg.Out=>IMMU.PID                                  Premise(F349)
	S829= IMMU.PID=pid                                          Path(S792,S828)
	S830= PC.Out=>IMMU.IEA                                      Premise(F350)
	S831= IMMU.IEA=addr+4                                       Path(S797,S830)
	S832= IMMU.Addr={pid,addr+4}                                IMMU-Search(S829,S831)
	S833= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S829,S831)
	S834= IMMU.Addr=>IAddrReg.In                                Premise(F351)
	S835= IAddrReg.In={pid,addr+4}                              Path(S832,S834)
	S836= IMMU.Hit=>IMMUHitReg.In                               Premise(F352)
	S837= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S833,S836)
	S838= PC.Out=>ICache.IEA                                    Premise(F353)
	S839= ICache.IEA=addr+4                                     Path(S797,S838)
	S840= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S839)
	S841= ICache.Out=>ICacheReg.In                              Premise(F354)
	S842= ICache.Hit=>ICacheHitReg.In                           Premise(F355)
	S843= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S840,S842)
	S844= IMMUHitReg.Out=>CU.IMemHit                            Premise(F356)
	S845= CU.IMemHit=IMMUHit(pid,addr)                          Path(S801,S844)
	S846= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F357)
	S847= CU.ICacheHit=ICacheHit(addr)                          Path(S807,S846)
	S848= IAddrReg.Out=>IMem.RAddr                              Premise(F358)
	S849= IMem.RAddr={pid,addr}                                 Path(S798,S848)
	S850= IMem.Out={31,rT,rA,rB,471}                            IMem-Read(S849,S769)
	S851= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S849,S769)
	S852= IMem.Out=>IRMux.MemData                               Premise(F359)
	S853= IRMux.MemData={31,rT,rA,rB,471}                       Path(S850,S852)
	S854= ICacheReg.Out=>IRMux.CacheData                        Premise(F360)
	S855= IRMux.CacheData={31,rT,rA,rB,471}                     Path(S804,S854)
	S856= IRMux.Out={31,rT,rA,rB,471}                           IRMux-Select(S853,S855)
	S857= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F361)
	S858= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S801,S857)
	S859= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F362)
	S860= IRMux.CacheSel=ICacheHit(addr)                        Path(S807,S859)
	S861= IRMux.Out=>IR.In                                      Premise(F363)
	S862= IR.In={31,rT,rA,rB,471}                               Path(S856,S861)
	S863= IMem.MEM8WordOut=>ICache.WData                        Premise(F364)
	S864= ICache.WData=IMemGet8Word({pid,addr})                 Path(S851,S863)
	S865= PC.Out=>ICache.IEA                                    Premise(F365)
	S866= IR.Out0_5=>CU.Op                                      Premise(F366)
	S867= CU.Op=31                                              Path(S810,S866)
	S868= IR.Out11_15=>GPRegs.RReg1                             Premise(F367)
	S869= GPRegs.RReg1=rA                                       Path(S812,S868)
	S870= GPRegs.Rdata1=a                                       GPRegs-Read(S869,S774)
	S871= IR.Out16_20=>GPRegs.RReg2                             Premise(F368)
	S872= GPRegs.RReg2=rB                                       Path(S813,S871)
	S873= GPRegs.Rdata2=b                                       GPRegs-Read(S872,S775)
	S874= IR.Out21_31=>CU.IRFunc                                Premise(F369)
	S875= CU.IRFunc=471                                         Path(S814,S874)
	S876= CU.Func=mdu_mul                                       CU(S867,S875)
	S877= GPRegs.Rdata1=>A.In                                   Premise(F370)
	S878= A.In=a                                                Path(S870,S877)
	S879= GPRegs.Rdata2=>B.In                                   Premise(F371)
	S880= B.In=b                                                Path(S873,S879)
	S881= A.Out=>MDU.A                                          Premise(F372)
	S882= MDU.A=a                                               Path(S815,S881)
	S883= B.Out=>MDU.B                                          Premise(F373)
	S884= MDU.B=b                                               Path(S818,S883)
	S885= CU.Func=>MDU.Func                                     Premise(F374)
	S886= MDU.Func=mdu_mul                                      Path(S876,S885)
	S887= MDU.Out0_31=(a×b)[0:31]                               MDU(S882,S884)
	S888= MDU.Out32_63=(a×b)[32:63]                             MDU(S882,S884)
	S889= MDU.Out16_47=(a×b)[16:47]                             MDU(S882,S884)
	S890= MDU.CMP=Compare0(a×b)                                 MDU(S882,S884)
	S891= MDU.OV=OverFlow(a×b)                                  MDU(S882,S884)
	S892= MDU.Out32_63=>MDUOut.In                               Premise(F375)
	S893= MDUOut.In=(a×b)[32:63]                                Path(S888,S892)
	S894= MDU.CMP=>DataCmb.A                                    Premise(F376)
	S895= DataCmb.A=Compare0(a×b)                               Path(S890,S894)
	S896= XER.SOOut=>DataCmb.B                                  Premise(F377)
	S897= DataCmb.B=so                                          Path(S824,S896)
	S898= DataCmb.Out={Compare0(a×b),so}                        DataCmb(S895,S897)
	S899= DataCmb.Out=>DR4bit.In                                Premise(F378)
	S900= DR4bit.In={Compare0(a×b),so}                          Path(S898,S899)
	S901= IR.Out6_10=>GPRegs.WReg                               Premise(F379)
	S902= GPRegs.WReg=rT                                        Path(S811,S901)
	S903= MDUOut.Out=>GPRegs.WData                              Premise(F380)
	S904= GPRegs.WData=(a×b)[32:63]                             Path(S821,S903)
	S905= DR4bit.Out=>CRRegs.CR0In                              Premise(F381)
	S906= CRRegs.CR0In={Compare0(a×b),so}                       Path(S825,S905)
	S907= CtrlPIDReg=0                                          Premise(F382)
	S908= [PIDReg]=pid                                          PIDReg-Hold(S752,S907)
	S909= CtrlIMMU=0                                            Premise(F383)
	S910= CtrlPC=0                                              Premise(F384)
	S911= CtrlPCInc=0                                           Premise(F385)
	S912= PC[CIA]=addr                                          PC-Hold(S756,S911)
	S913= PC[Out]=addr+4                                        PC-Hold(S757,S910,S911)
	S914= CtrlIAddrReg=0                                        Premise(F386)
	S915= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S759,S914)
	S916= CtrlIMMUHitReg=0                                      Premise(F387)
	S917= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S761,S916)
	S918= CtrlICache=0                                          Premise(F388)
	S919= ICache[addr]={31,rT,rA,rB,471}                        ICache-Hold(S763,S918)
	S920= CtrlICacheReg=0                                       Premise(F389)
	S921= [ICacheReg]={31,rT,rA,rB,471}                         ICacheReg-Hold(S765,S920)
	S922= CtrlICacheHitReg=0                                    Premise(F390)
	S923= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S767,S922)
	S924= CtrlIMem=0                                            Premise(F391)
	S925= IMem[{pid,addr}]={31,rT,rA,rB,471}                    IMem-Hold(S769,S924)
	S926= CtrlIRMux=0                                           Premise(F392)
	S927= CtrlIR=0                                              Premise(F393)
	S928= [IR]={31,rT,rA,rB,471}                                IR-Hold(S772,S927)
	S929= CtrlGPRegs=0                                          Premise(F394)
	S930= GPRegs[rA]=a                                          GPRegs-Hold(S774,S929)
	S931= GPRegs[rB]=b                                          GPRegs-Hold(S775,S929)
	S932= CtrlA=0                                               Premise(F395)
	S933= [A]=a                                                 A-Hold(S777,S932)
	S934= CtrlB=0                                               Premise(F396)
	S935= [B]=b                                                 B-Hold(S779,S934)
	S936= CtrlMDUOut=0                                          Premise(F397)
	S937= [MDUOut]=(a×b)[32:63]                                 MDUOut-Hold(S781,S936)
	S938= CtrlXERSO=0                                           Premise(F398)
	S939= XER[SO]=so                                            XER-SO-Hold(S783,S938)
	S940= CtrlXEROV=0                                           Premise(F399)
	S941= CtrlXERCA=0                                           Premise(F400)
	S942= CtrlDR4bit=0                                          Premise(F401)
	S943= [DR4bit]={Compare0(a×b),so}                           DR4bit-Hold(S787,S942)
	S944= CtrlCRRegs=0                                          Premise(F402)
	S945= CtrlCRRegsCR0=0                                       Premise(F403)
	S946= CtrlCRRegsW4bitRegs=0                                 Premise(F404)
	S947= CtrlCRRegsW1bitRegs=0                                 Premise(F405)

WB	S948= PIDReg.Out=pid                                        PIDReg-Out(S908)
	S949= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S908)
	S950= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S908)
	S951= PC.CIA=addr                                           PC-Out(S912)
	S952= PC.CIA31_28=addr[31:28]                               PC-Out(S912)
	S953= PC.Out=addr+4                                         PC-Out(S913)
	S954= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S915)
	S955= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S915)
	S956= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S915)
	S957= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S917)
	S958= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S917)
	S959= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S917)
	S960= ICacheReg.Out={31,rT,rA,rB,471}                       ICacheReg-Out(S921)
	S961= ICacheReg.Out26_31={31,rT,rA,rB,471}[26:31]           ICacheReg-Out(S921)
	S962= ICacheReg.Out30_31={31,rT,rA,rB,471}[30:31]           ICacheReg-Out(S921)
	S963= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S923)
	S964= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S923)
	S965= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S923)
	S966= IR.Out0_5=31                                          IR-Out(S928)
	S967= IR.Out6_10=rT                                         IR-Out(S928)
	S968= IR.Out11_15=rA                                        IR-Out(S928)
	S969= IR.Out16_20=rB                                        IR-Out(S928)
	S970= IR.Out21_31=471                                       IR-Out(S928)
	S971= A.Out=a                                               A-Out(S933)
	S972= A.Out26_31=a[26:31]                                   A-Out(S933)
	S973= A.Out30_31=a[30:31]                                   A-Out(S933)
	S974= B.Out=b                                               B-Out(S935)
	S975= B.Out26_31=b[26:31]                                   B-Out(S935)
	S976= B.Out30_31=b[30:31]                                   B-Out(S935)
	S977= MDUOut.Out=(a×b)[32:63]                               MDUOut-Out(S937)
	S978= MDUOut.Out26_31=(a×b)[32:63][26:31]                   MDUOut-Out(S937)
	S979= MDUOut.Out30_31=(a×b)[32:63][30:31]                   MDUOut-Out(S937)
	S980= XER.SOOut=so                                          XER-SO-Out(S939)
	S981= DR4bit.Out={Compare0(a×b),so}                         DR4bit-Out(S943)
	S982= DR4bit.Out26_31={Compare0(a×b),so}[26:31]             DR4bit-Out(S943)
	S983= DR4bit.Out30_31={Compare0(a×b),so}[30:31]             DR4bit-Out(S943)
	S984= PIDReg.Out=>IMMU.PID                                  Premise(F406)
	S985= IMMU.PID=pid                                          Path(S948,S984)
	S986= PC.Out=>IMMU.IEA                                      Premise(F407)
	S987= IMMU.IEA=addr+4                                       Path(S953,S986)
	S988= IMMU.Addr={pid,addr+4}                                IMMU-Search(S985,S987)
	S989= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S985,S987)
	S990= IMMU.Addr=>IAddrReg.In                                Premise(F408)
	S991= IAddrReg.In={pid,addr+4}                              Path(S988,S990)
	S992= IMMU.Hit=>IMMUHitReg.In                               Premise(F409)
	S993= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S989,S992)
	S994= PC.Out=>ICache.IEA                                    Premise(F410)
	S995= ICache.IEA=addr+4                                     Path(S953,S994)
	S996= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S995)
	S997= ICache.Out=>ICacheReg.In                              Premise(F411)
	S998= ICache.Hit=>ICacheHitReg.In                           Premise(F412)
	S999= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S996,S998)
	S1000= IMMUHitReg.Out=>CU.IMemHit                           Premise(F413)
	S1001= CU.IMemHit=IMMUHit(pid,addr)                         Path(S957,S1000)
	S1002= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F414)
	S1003= CU.ICacheHit=ICacheHit(addr)                         Path(S963,S1002)
	S1004= IAddrReg.Out=>IMem.RAddr                             Premise(F415)
	S1005= IMem.RAddr={pid,addr}                                Path(S954,S1004)
	S1006= IMem.Out={31,rT,rA,rB,471}                           IMem-Read(S1005,S925)
	S1007= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1005,S925)
	S1008= IMem.Out=>IRMux.MemData                              Premise(F416)
	S1009= IRMux.MemData={31,rT,rA,rB,471}                      Path(S1006,S1008)
	S1010= ICacheReg.Out=>IRMux.CacheData                       Premise(F417)
	S1011= IRMux.CacheData={31,rT,rA,rB,471}                    Path(S960,S1010)
	S1012= IRMux.Out={31,rT,rA,rB,471}                          IRMux-Select(S1009,S1011)
	S1013= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F418)
	S1014= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S957,S1013)
	S1015= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F419)
	S1016= IRMux.CacheSel=ICacheHit(addr)                       Path(S963,S1015)
	S1017= IRMux.Out=>IR.In                                     Premise(F420)
	S1018= IR.In={31,rT,rA,rB,471}                              Path(S1012,S1017)
	S1019= IMem.MEM8WordOut=>ICache.WData                       Premise(F421)
	S1020= ICache.WData=IMemGet8Word({pid,addr})                Path(S1007,S1019)
	S1021= PC.Out=>ICache.IEA                                   Premise(F422)
	S1022= IR.Out0_5=>CU.Op                                     Premise(F423)
	S1023= CU.Op=31                                             Path(S966,S1022)
	S1024= IR.Out11_15=>GPRegs.RReg1                            Premise(F424)
	S1025= GPRegs.RReg1=rA                                      Path(S968,S1024)
	S1026= GPRegs.Rdata1=a                                      GPRegs-Read(S1025,S930)
	S1027= IR.Out16_20=>GPRegs.RReg2                            Premise(F425)
	S1028= GPRegs.RReg2=rB                                      Path(S969,S1027)
	S1029= GPRegs.Rdata2=b                                      GPRegs-Read(S1028,S931)
	S1030= IR.Out21_31=>CU.IRFunc                               Premise(F426)
	S1031= CU.IRFunc=471                                        Path(S970,S1030)
	S1032= CU.Func=mdu_mul                                      CU(S1023,S1031)
	S1033= GPRegs.Rdata1=>A.In                                  Premise(F427)
	S1034= A.In=a                                               Path(S1026,S1033)
	S1035= GPRegs.Rdata2=>B.In                                  Premise(F428)
	S1036= B.In=b                                               Path(S1029,S1035)
	S1037= A.Out=>MDU.A                                         Premise(F429)
	S1038= MDU.A=a                                              Path(S971,S1037)
	S1039= B.Out=>MDU.B                                         Premise(F430)
	S1040= MDU.B=b                                              Path(S974,S1039)
	S1041= CU.Func=>MDU.Func                                    Premise(F431)
	S1042= MDU.Func=mdu_mul                                     Path(S1032,S1041)
	S1043= MDU.Out0_31=(a×b)[0:31]                              MDU(S1038,S1040)
	S1044= MDU.Out32_63=(a×b)[32:63]                            MDU(S1038,S1040)
	S1045= MDU.Out16_47=(a×b)[16:47]                            MDU(S1038,S1040)
	S1046= MDU.CMP=Compare0(a×b)                                MDU(S1038,S1040)
	S1047= MDU.OV=OverFlow(a×b)                                 MDU(S1038,S1040)
	S1048= MDU.Out32_63=>MDUOut.In                              Premise(F432)
	S1049= MDUOut.In=(a×b)[32:63]                               Path(S1044,S1048)
	S1050= MDU.CMP=>DataCmb.A                                   Premise(F433)
	S1051= DataCmb.A=Compare0(a×b)                              Path(S1046,S1050)
	S1052= XER.SOOut=>DataCmb.B                                 Premise(F434)
	S1053= DataCmb.B=so                                         Path(S980,S1052)
	S1054= DataCmb.Out={Compare0(a×b),so}                       DataCmb(S1051,S1053)
	S1055= DataCmb.Out=>DR4bit.In                               Premise(F435)
	S1056= DR4bit.In={Compare0(a×b),so}                         Path(S1054,S1055)
	S1057= IR.Out6_10=>GPRegs.WReg                              Premise(F436)
	S1058= GPRegs.WReg=rT                                       Path(S967,S1057)
	S1059= MDUOut.Out=>GPRegs.WData                             Premise(F437)
	S1060= GPRegs.WData=(a×b)[32:63]                            Path(S977,S1059)
	S1061= DR4bit.Out=>CRRegs.CR0In                             Premise(F438)
	S1062= CRRegs.CR0In={Compare0(a×b),so}                      Path(S981,S1061)
	S1063= CtrlPIDReg=0                                         Premise(F439)
	S1064= [PIDReg]=pid                                         PIDReg-Hold(S908,S1063)
	S1065= CtrlIMMU=0                                           Premise(F440)
	S1066= CtrlPC=0                                             Premise(F441)
	S1067= CtrlPCInc=0                                          Premise(F442)
	S1068= PC[CIA]=addr                                         PC-Hold(S912,S1067)
	S1069= PC[Out]=addr+4                                       PC-Hold(S913,S1066,S1067)
	S1070= CtrlIAddrReg=0                                       Premise(F443)
	S1071= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S915,S1070)
	S1072= CtrlIMMUHitReg=0                                     Premise(F444)
	S1073= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S917,S1072)
	S1074= CtrlICache=0                                         Premise(F445)
	S1075= ICache[addr]={31,rT,rA,rB,471}                       ICache-Hold(S919,S1074)
	S1076= CtrlICacheReg=0                                      Premise(F446)
	S1077= [ICacheReg]={31,rT,rA,rB,471}                        ICacheReg-Hold(S921,S1076)
	S1078= CtrlICacheHitReg=0                                   Premise(F447)
	S1079= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S923,S1078)
	S1080= CtrlIMem=0                                           Premise(F448)
	S1081= IMem[{pid,addr}]={31,rT,rA,rB,471}                   IMem-Hold(S925,S1080)
	S1082= CtrlIRMux=0                                          Premise(F449)
	S1083= CtrlIR=0                                             Premise(F450)
	S1084= [IR]={31,rT,rA,rB,471}                               IR-Hold(S928,S1083)
	S1085= CtrlGPRegs=1                                         Premise(F451)
	S1086= GPRegs[rT]=(a×b)[32:63]                              GPRegs-Write(S1058,S1060,S1085)
	S1087= CtrlA=0                                              Premise(F452)
	S1088= [A]=a                                                A-Hold(S933,S1087)
	S1089= CtrlB=0                                              Premise(F453)
	S1090= [B]=b                                                B-Hold(S935,S1089)
	S1091= CtrlMDUOut=0                                         Premise(F454)
	S1092= [MDUOut]=(a×b)[32:63]                                MDUOut-Hold(S937,S1091)
	S1093= CtrlXERSO=0                                          Premise(F455)
	S1094= XER[SO]=so                                           XER-SO-Hold(S939,S1093)
	S1095= CtrlXEROV=0                                          Premise(F456)
	S1096= CtrlXERCA=0                                          Premise(F457)
	S1097= CtrlDR4bit=0                                         Premise(F458)
	S1098= [DR4bit]={Compare0(a×b),so}                          DR4bit-Hold(S943,S1097)
	S1099= CtrlCRRegs=0                                         Premise(F459)
	S1100= CtrlCRRegsCR0=1                                      Premise(F460)
	S1101= CRRegs[CR0]={Compare0(a×b),so}                       CRRegs-CR0-Write(S1062,S1100)
	S1102= CtrlCRRegsW4bitRegs=0                                Premise(F461)
	S1103= CtrlCRRegsW1bitRegs=0                                Premise(F462)

POST	S1064= [PIDReg]=pid                                         PIDReg-Hold(S908,S1063)
	S1068= PC[CIA]=addr                                         PC-Hold(S912,S1067)
	S1069= PC[Out]=addr+4                                       PC-Hold(S913,S1066,S1067)
	S1071= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S915,S1070)
	S1073= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S917,S1072)
	S1075= ICache[addr]={31,rT,rA,rB,471}                       ICache-Hold(S919,S1074)
	S1077= [ICacheReg]={31,rT,rA,rB,471}                        ICacheReg-Hold(S921,S1076)
	S1079= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S923,S1078)
	S1081= IMem[{pid,addr}]={31,rT,rA,rB,471}                   IMem-Hold(S925,S1080)
	S1084= [IR]={31,rT,rA,rB,471}                               IR-Hold(S928,S1083)
	S1086= GPRegs[rT]=(a×b)[32:63]                              GPRegs-Write(S1058,S1060,S1085)
	S1088= [A]=a                                                A-Hold(S933,S1087)
	S1090= [B]=b                                                B-Hold(S935,S1089)
	S1092= [MDUOut]=(a×b)[32:63]                                MDUOut-Hold(S937,S1091)
	S1094= XER[SO]=so                                           XER-SO-Hold(S939,S1093)
	S1098= [DR4bit]={Compare0(a×b),so}                          DR4bit-Hold(S943,S1097)
	S1101= CRRegs[CR0]={Compare0(a×b),so}                       CRRegs-CR0-Write(S1062,S1100)

