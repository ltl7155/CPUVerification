
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,0,0,rD,0,16}                        Premise(F2)
	S3= [Hi]=hi                                                 Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={0,0,0,rD,0,16}                               IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR_ID.In                                     Premise(F7)
	S12= IR_ID.In={0,0,0,rD,0,16}                               Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F37)
	S14= CtrlPCInc=1                                            Premise(F38)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR_ID=1                                            Premise(F44)
	S17= [IR_ID]={0,0,0,rD,0,16}                                IR_ID-Write(S12,S16)
	S18= CtrlHi=0                                               Premise(F46)
	S19= [Hi]=hi                                                Hi-Hold(S3,S18)

ID	S20= IR_ID.Out={0,0,0,rD,0,16}                              IR-Out(S17)
	S21= IR_ID.Out=>IR_EX.In                                    Premise(F61)
	S22= IR_EX.In={0,0,0,rD,0,16}                               Path(S20,S21)
	S23= CtrlPC=0                                               Premise(F87)
	S24= CtrlPCInc=0                                            Premise(F88)
	S25= PC[Out]=addr+4                                         PC-Hold(S15,S23,S24)
	S26= CtrlIR_EX=1                                            Premise(F95)
	S27= [IR_EX]={0,0,0,rD,0,16}                                IR_EX-Write(S22,S26)
	S28= CtrlHi=0                                               Premise(F96)
	S29= [Hi]=hi                                                Hi-Hold(S19,S28)

EX	S30= IR_EX.Out={0,0,0,rD,0,16}                              IR_EX-Out(S27)
	S31= Hi.Out=hi                                              Hi-Out(S29)
	S32= Hi.Out=>ALUOut_MEM.In                                  Premise(F117)
	S33= ALUOut_MEM.In=hi                                       Path(S31,S32)
	S34= IR_EX.Out=>IR_MEM.In                                   Premise(F120)
	S35= IR_MEM.In={0,0,0,rD,0,16}                              Path(S30,S34)
	S36= CtrlPC=0                                               Premise(F135)
	S37= CtrlPCInc=0                                            Premise(F136)
	S38= PC[Out]=addr+4                                         PC-Hold(S25,S36,S37)
	S39= CtrlALUOut_MEM=1                                       Premise(F145)
	S40= [ALUOut_MEM]=hi                                        ALUOut_MEM-Write(S33,S39)
	S41= CtrlIR_MEM=1                                           Premise(F146)
	S42= [IR_MEM]={0,0,0,rD,0,16}                               IR_MEM-Write(S35,S41)

MEM	S43= ALUOut_MEM.Out=hi                                      ALUOut_MEM-Out(S40)
	S44= IR_MEM.Out={0,0,0,rD,0,16}                             IR_MEM-Out(S42)
	S45= IR_MEM.Out=>IR_WB.In                                   Premise(F172)
	S46= IR_WB.In={0,0,0,rD,0,16}                               Path(S44,S45)
	S47= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F173)
	S48= ALUOut_WB.In=hi                                        Path(S43,S47)
	S49= CtrlPC=0                                               Premise(F183)
	S50= CtrlPCInc=0                                            Premise(F184)
	S51= PC[Out]=addr+4                                         PC-Hold(S38,S49,S50)
	S52= CtrlIR_WB=1                                            Premise(F195)
	S53= [IR_WB]={0,0,0,rD,0,16}                                IR_WB-Write(S46,S52)
	S54= CtrlALUOut_WB=1                                        Premise(F196)
	S55= [ALUOut_WB]=hi                                         ALUOut_WB-Write(S48,S54)

WB	S56= IR_WB.Out15_11=rD                                      IR-Out(S53)
	S57= ALUOut_WB.Out=hi                                       ALUOut_WB-Out(S55)
	S58= IR_WB.Out15_11=>GPR.WReg                               Premise(F227)
	S59= GPR.WReg=rD                                            Path(S56,S58)
	S60= ALUOut_WB.Out=>GPR.WData                               Premise(F228)
	S61= GPR.WData=hi                                           Path(S57,S60)
	S62= CtrlPC=0                                               Premise(F231)
	S63= CtrlPCInc=0                                            Premise(F232)
	S64= PC[Out]=addr+4                                         PC-Hold(S51,S62,S63)
	S65= CtrlGPR=1                                              Premise(F245)
	S66= GPR[rD]=hi                                             GPR-Write(S59,S61,S65)

POST	S64= PC[Out]=addr+4                                         PC-Hold(S51,S62,S63)
	S66= GPR[rD]=hi                                             GPR-Write(S59,S61,S65)

