
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rD,rA,rB,1297}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[CA]=ca                                              Premise(F5)
	S6= XER[SO]=so                                              Premise(F6)

IF	S7= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S8= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S9= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S10= PC.Out=addr                                            PC-Out(S1)
	S11= XER.CAOut=ca                                           XER-CA-Out(S5)
	S12= XER.SOOut=so                                           XER-SO-Out(S6)
	S13= PIDReg.Out=>IMMU.PID                                   Premise(F7)
	S14= IMMU.PID=pid                                           Path(S7,S13)
	S15= PC.Out=>IMMU.IEA                                       Premise(F8)
	S16= IMMU.IEA=addr                                          Path(S10,S15)
	S17= IMMU.Addr={pid,addr}                                   IMMU-Search(S14,S16)
	S18= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S14,S16)
	S19= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S20= IAddrReg.In={pid,addr}                                 Path(S17,S19)
	S21= IMMU.Hit=>IMMUHitReg.In                                Premise(F10)
	S22= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S18,S21)
	S23= PC.Out=>ICache.IEA                                     Premise(F11)
	S24= ICache.IEA=addr                                        Path(S10,S23)
	S25= ICache.Hit=ICacheHit(addr)                             ICache-Search(S24)
	S26= ICache.Out=>ICacheReg.In                               Premise(F12)
	S27= ICache.Hit=>ICacheHitReg.In                            Premise(F13)
	S28= ICacheHitReg.In=ICacheHit(addr)                        Path(S25,S27)
	S29= IMMUHitReg.Out=>CU.IMemHit                             Premise(F14)
	S30= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F15)
	S31= IAddrReg.Out=>IMem.RAddr                               Premise(F16)
	S32= IMem.Out=>IRMux.MemData                                Premise(F17)
	S33= ICacheReg.Out=>IRMux.CacheData                         Premise(F18)
	S34= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F19)
	S35= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F20)
	S36= IRMux.Out=>IR.In                                       Premise(F21)
	S37= IMem.MEM8WordOut=>ICache.WData                         Premise(F22)
	S38= PC.Out=>ICache.IEA                                     Premise(F23)
	S39= IR.Out0_5=>CU.Op                                       Premise(F24)
	S40= IR.Out11_15=>GPRegs.RReg1                              Premise(F25)
	S41= IR.Out16_20=>GPRegs.RReg2                              Premise(F26)
	S42= IR.Out21_31=>CU.IRFunc                                 Premise(F27)
	S43= GPRegs.Rdata1=>A.In                                    Premise(F28)
	S44= GPRegs.Rdata2=>B.In                                    Premise(F29)
	S45= A.Out=>ALU.A                                           Premise(F30)
	S46= B.Out=>ALU.B                                           Premise(F31)
	S47= XER.CAOut=>ALU.CAIn                                    Premise(F32)
	S48= ALU.CAIn=ca                                            Path(S11,S47)
	S49= CU.Func=>ALU.Func                                      Premise(F33)
	S50= ALU.Out=>ALUOut.In                                     Premise(F34)
	S51= ALU.CA=>CAReg.In                                       Premise(F35)
	S52= ALU.CMP=>DataCmb.A                                     Premise(F36)
	S53= ORGate.Out=>DataCmb.B                                  Premise(F37)
	S54= ALU.OV=>OVReg.In                                       Premise(F38)
	S55= XER.SOOut=>ORGate.A                                    Premise(F39)
	S56= ORGate.A=so                                            Path(S12,S55)
	S57= ALU.OV=>ORGate.B                                       Premise(F40)
	S58= ORGate.Out=>DR1bit.In                                  Premise(F41)
	S59= DataCmb.Out=>DR4bit.In                                 Premise(F42)
	S60= IR.Out6_10=>GPRegs.WReg                                Premise(F43)
	S61= ALUOut.Out=>GPRegs.WData                               Premise(F44)
	S62= DR4bit.Out=>CRRegs.CR0In                               Premise(F45)
	S63= DR1bit.Out=>XER.SOIn                                   Premise(F46)
	S64= CAReg.Out=>XER.CAIn                                    Premise(F47)
	S65= OVReg.Out=>XER.OVIn                                    Premise(F48)
	S66= CtrlPIDReg=0                                           Premise(F49)
	S67= [PIDReg]=pid                                           PIDReg-Hold(S0,S66)
	S68= CtrlIMMU=0                                             Premise(F50)
	S69= CtrlPC=0                                               Premise(F51)
	S70= CtrlPCInc=0                                            Premise(F52)
	S71= PC[Out]=addr                                           PC-Hold(S1,S69,S70)
	S72= CtrlIAddrReg=1                                         Premise(F53)
	S73= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S20,S72)
	S74= CtrlIMMUHitReg=1                                       Premise(F54)
	S75= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S22,S74)
	S76= CtrlICache=0                                           Premise(F55)
	S77= CtrlICacheReg=1                                        Premise(F56)
	S78= CtrlICacheHitReg=1                                     Premise(F57)
	S79= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S28,S78)
	S80= CtrlIMem=0                                             Premise(F58)
	S81= IMem[{pid,addr}]={31,rD,rA,rB,1297}                    IMem-Hold(S2,S80)
	S82= CtrlIRMux=0                                            Premise(F59)
	S83= CtrlIR=0                                               Premise(F60)
	S84= CtrlGPRegs=0                                           Premise(F61)
	S85= GPRegs[rA]=a                                           GPRegs-Hold(S3,S84)
	S86= GPRegs[rB]=b                                           GPRegs-Hold(S4,S84)
	S87= CtrlA=0                                                Premise(F62)
	S88= CtrlB=0                                                Premise(F63)
	S89= CtrlXERSO=0                                            Premise(F64)
	S90= XER[SO]=so                                             XER-SO-Hold(S6,S89)
	S91= CtrlXEROV=0                                            Premise(F65)
	S92= CtrlXERCA=0                                            Premise(F66)
	S93= XER[CA]=ca                                             XER-CA-Hold(S5,S92)
	S94= CtrlALUOut=0                                           Premise(F67)
	S95= CtrlCAReg=0                                            Premise(F68)
	S96= CtrlOVReg=0                                            Premise(F69)
	S97= CtrlDR1bit=0                                           Premise(F70)
	S98= CtrlDR4bit=0                                           Premise(F71)
	S99= CtrlCRRegs=0                                           Premise(F72)
	S100= CtrlCRRegsCR0=0                                       Premise(F73)
	S101= CtrlCRRegsW4bitRegs=0                                 Premise(F74)
	S102= CtrlCRRegsW1bitRegs=0                                 Premise(F75)

IMMU	S103= PIDReg.Out=pid                                        PIDReg-Out(S67)
	S104= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S67)
	S105= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S67)
	S106= PC.Out=addr                                           PC-Out(S71)
	S107= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S73)
	S108= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S73)
	S109= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S73)
	S110= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S75)
	S111= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S75)
	S112= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S75)
	S113= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S79)
	S114= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S79)
	S115= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S79)
	S116= XER.SOOut=so                                          XER-SO-Out(S90)
	S117= XER.CAOut=ca                                          XER-CA-Out(S93)
	S118= PIDReg.Out=>IMMU.PID                                  Premise(F76)
	S119= IMMU.PID=pid                                          Path(S103,S118)
	S120= PC.Out=>IMMU.IEA                                      Premise(F77)
	S121= IMMU.IEA=addr                                         Path(S106,S120)
	S122= IMMU.Addr={pid,addr}                                  IMMU-Search(S119,S121)
	S123= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S119,S121)
	S124= IMMU.Addr=>IAddrReg.In                                Premise(F78)
	S125= IAddrReg.In={pid,addr}                                Path(S122,S124)
	S126= IMMU.Hit=>IMMUHitReg.In                               Premise(F79)
	S127= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S123,S126)
	S128= PC.Out=>ICache.IEA                                    Premise(F80)
	S129= ICache.IEA=addr                                       Path(S106,S128)
	S130= ICache.Hit=ICacheHit(addr)                            ICache-Search(S129)
	S131= ICache.Out=>ICacheReg.In                              Premise(F81)
	S132= ICache.Hit=>ICacheHitReg.In                           Premise(F82)
	S133= ICacheHitReg.In=ICacheHit(addr)                       Path(S130,S132)
	S134= IMMUHitReg.Out=>CU.IMemHit                            Premise(F83)
	S135= CU.IMemHit=IMMUHit(pid,addr)                          Path(S110,S134)
	S136= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F84)
	S137= CU.ICacheHit=ICacheHit(addr)                          Path(S113,S136)
	S138= IAddrReg.Out=>IMem.RAddr                              Premise(F85)
	S139= IMem.RAddr={pid,addr}                                 Path(S107,S138)
	S140= IMem.Out={31,rD,rA,rB,1297}                           IMem-Read(S139,S81)
	S141= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S139,S81)
	S142= IMem.Out=>IRMux.MemData                               Premise(F86)
	S143= IRMux.MemData={31,rD,rA,rB,1297}                      Path(S140,S142)
	S144= IRMux.Out={31,rD,rA,rB,1297}                          IRMux-Select(S143)
	S145= ICacheReg.Out=>IRMux.CacheData                        Premise(F87)
	S146= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F88)
	S147= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S110,S146)
	S148= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F89)
	S149= IRMux.CacheSel=ICacheHit(addr)                        Path(S113,S148)
	S150= IRMux.Out=>IR.In                                      Premise(F90)
	S151= IR.In={31,rD,rA,rB,1297}                              Path(S144,S150)
	S152= IMem.MEM8WordOut=>ICache.WData                        Premise(F91)
	S153= ICache.WData=IMemGet8Word({pid,addr})                 Path(S141,S152)
	S154= PC.Out=>ICache.IEA                                    Premise(F92)
	S155= IR.Out0_5=>CU.Op                                      Premise(F93)
	S156= IR.Out11_15=>GPRegs.RReg1                             Premise(F94)
	S157= IR.Out16_20=>GPRegs.RReg2                             Premise(F95)
	S158= IR.Out21_31=>CU.IRFunc                                Premise(F96)
	S159= GPRegs.Rdata1=>A.In                                   Premise(F97)
	S160= GPRegs.Rdata2=>B.In                                   Premise(F98)
	S161= A.Out=>ALU.A                                          Premise(F99)
	S162= B.Out=>ALU.B                                          Premise(F100)
	S163= XER.CAOut=>ALU.CAIn                                   Premise(F101)
	S164= ALU.CAIn=ca                                           Path(S117,S163)
	S165= CU.Func=>ALU.Func                                     Premise(F102)
	S166= ALU.Out=>ALUOut.In                                    Premise(F103)
	S167= ALU.CA=>CAReg.In                                      Premise(F104)
	S168= ALU.CMP=>DataCmb.A                                    Premise(F105)
	S169= ORGate.Out=>DataCmb.B                                 Premise(F106)
	S170= ALU.OV=>OVReg.In                                      Premise(F107)
	S171= XER.SOOut=>ORGate.A                                   Premise(F108)
	S172= ORGate.A=so                                           Path(S116,S171)
	S173= ALU.OV=>ORGate.B                                      Premise(F109)
	S174= ORGate.Out=>DR1bit.In                                 Premise(F110)
	S175= DataCmb.Out=>DR4bit.In                                Premise(F111)
	S176= IR.Out6_10=>GPRegs.WReg                               Premise(F112)
	S177= ALUOut.Out=>GPRegs.WData                              Premise(F113)
	S178= DR4bit.Out=>CRRegs.CR0In                              Premise(F114)
	S179= DR1bit.Out=>XER.SOIn                                  Premise(F115)
	S180= CAReg.Out=>XER.CAIn                                   Premise(F116)
	S181= OVReg.Out=>XER.OVIn                                   Premise(F117)
	S182= CtrlPIDReg=0                                          Premise(F118)
	S183= [PIDReg]=pid                                          PIDReg-Hold(S67,S182)
	S184= CtrlIMMU=0                                            Premise(F119)
	S185= CtrlPC=0                                              Premise(F120)
	S186= CtrlPCInc=1                                           Premise(F121)
	S187= PC[Out]=addr+4                                        PC-Inc(S71,S185,S186)
	S188= PC[CIA]=addr                                          PC-Inc(S71,S185,S186)
	S189= CtrlIAddrReg=0                                        Premise(F122)
	S190= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S73,S189)
	S191= CtrlIMMUHitReg=0                                      Premise(F123)
	S192= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S75,S191)
	S193= CtrlICache=1                                          Premise(F124)
	S194= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S129,S153,S193)
	S195= CtrlICacheReg=0                                       Premise(F125)
	S196= CtrlICacheHitReg=0                                    Premise(F126)
	S197= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S79,S196)
	S198= CtrlIMem=0                                            Premise(F127)
	S199= IMem[{pid,addr}]={31,rD,rA,rB,1297}                   IMem-Hold(S81,S198)
	S200= CtrlIRMux=0                                           Premise(F128)
	S201= CtrlIR=1                                              Premise(F129)
	S202= [IR]={31,rD,rA,rB,1297}                               IR-Write(S151,S201)
	S203= CtrlGPRegs=0                                          Premise(F130)
	S204= GPRegs[rA]=a                                          GPRegs-Hold(S85,S203)
	S205= GPRegs[rB]=b                                          GPRegs-Hold(S86,S203)
	S206= CtrlA=0                                               Premise(F131)
	S207= CtrlB=0                                               Premise(F132)
	S208= CtrlXERSO=0                                           Premise(F133)
	S209= XER[SO]=so                                            XER-SO-Hold(S90,S208)
	S210= CtrlXEROV=0                                           Premise(F134)
	S211= CtrlXERCA=0                                           Premise(F135)
	S212= XER[CA]=ca                                            XER-CA-Hold(S93,S211)
	S213= CtrlALUOut=0                                          Premise(F136)
	S214= CtrlCAReg=0                                           Premise(F137)
	S215= CtrlOVReg=0                                           Premise(F138)
	S216= CtrlDR1bit=0                                          Premise(F139)
	S217= CtrlDR4bit=0                                          Premise(F140)
	S218= CtrlCRRegs=0                                          Premise(F141)
	S219= CtrlCRRegsCR0=0                                       Premise(F142)
	S220= CtrlCRRegsW4bitRegs=0                                 Premise(F143)
	S221= CtrlCRRegsW1bitRegs=0                                 Premise(F144)

ID	S222= PIDReg.Out=pid                                        PIDReg-Out(S183)
	S223= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S183)
	S224= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S183)
	S225= PC.Out=addr+4                                         PC-Out(S187)
	S226= PC.CIA=addr                                           PC-Out(S188)
	S227= PC.CIA31_28=addr[31:28]                               PC-Out(S188)
	S228= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S190)
	S229= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S190)
	S230= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S190)
	S231= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S192)
	S232= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S192)
	S233= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S192)
	S234= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S197)
	S235= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S197)
	S236= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S197)
	S237= IR.Out0_5=31                                          IR-Out(S202)
	S238= IR.Out6_10=rD                                         IR-Out(S202)
	S239= IR.Out11_15=rA                                        IR-Out(S202)
	S240= IR.Out16_20=rB                                        IR-Out(S202)
	S241= IR.Out21_31=1297                                      IR-Out(S202)
	S242= XER.SOOut=so                                          XER-SO-Out(S209)
	S243= XER.CAOut=ca                                          XER-CA-Out(S212)
	S244= PIDReg.Out=>IMMU.PID                                  Premise(F145)
	S245= IMMU.PID=pid                                          Path(S222,S244)
	S246= PC.Out=>IMMU.IEA                                      Premise(F146)
	S247= IMMU.IEA=addr+4                                       Path(S225,S246)
	S248= IMMU.Addr={pid,addr+4}                                IMMU-Search(S245,S247)
	S249= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S245,S247)
	S250= IMMU.Addr=>IAddrReg.In                                Premise(F147)
	S251= IAddrReg.In={pid,addr+4}                              Path(S248,S250)
	S252= IMMU.Hit=>IMMUHitReg.In                               Premise(F148)
	S253= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S249,S252)
	S254= PC.Out=>ICache.IEA                                    Premise(F149)
	S255= ICache.IEA=addr+4                                     Path(S225,S254)
	S256= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S255)
	S257= ICache.Out=>ICacheReg.In                              Premise(F150)
	S258= ICache.Hit=>ICacheHitReg.In                           Premise(F151)
	S259= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S256,S258)
	S260= IMMUHitReg.Out=>CU.IMemHit                            Premise(F152)
	S261= CU.IMemHit=IMMUHit(pid,addr)                          Path(S231,S260)
	S262= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F153)
	S263= CU.ICacheHit=ICacheHit(addr)                          Path(S234,S262)
	S264= IAddrReg.Out=>IMem.RAddr                              Premise(F154)
	S265= IMem.RAddr={pid,addr}                                 Path(S228,S264)
	S266= IMem.Out={31,rD,rA,rB,1297}                           IMem-Read(S265,S199)
	S267= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S265,S199)
	S268= IMem.Out=>IRMux.MemData                               Premise(F155)
	S269= IRMux.MemData={31,rD,rA,rB,1297}                      Path(S266,S268)
	S270= IRMux.Out={31,rD,rA,rB,1297}                          IRMux-Select(S269)
	S271= ICacheReg.Out=>IRMux.CacheData                        Premise(F156)
	S272= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F157)
	S273= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S231,S272)
	S274= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F158)
	S275= IRMux.CacheSel=ICacheHit(addr)                        Path(S234,S274)
	S276= IRMux.Out=>IR.In                                      Premise(F159)
	S277= IR.In={31,rD,rA,rB,1297}                              Path(S270,S276)
	S278= IMem.MEM8WordOut=>ICache.WData                        Premise(F160)
	S279= ICache.WData=IMemGet8Word({pid,addr})                 Path(S267,S278)
	S280= PC.Out=>ICache.IEA                                    Premise(F161)
	S281= IR.Out0_5=>CU.Op                                      Premise(F162)
	S282= CU.Op=31                                              Path(S237,S281)
	S283= IR.Out11_15=>GPRegs.RReg1                             Premise(F163)
	S284= GPRegs.RReg1=rA                                       Path(S239,S283)
	S285= GPRegs.Rdata1=a                                       GPRegs-Read(S284,S204)
	S286= IR.Out16_20=>GPRegs.RReg2                             Premise(F164)
	S287= GPRegs.RReg2=rB                                       Path(S240,S286)
	S288= GPRegs.Rdata2=b                                       GPRegs-Read(S287,S205)
	S289= IR.Out21_31=>CU.IRFunc                                Premise(F165)
	S290= CU.IRFunc=1297                                        Path(S241,S289)
	S291= CU.Func=alu_subfe                                     CU(S282,S290)
	S292= GPRegs.Rdata1=>A.In                                   Premise(F166)
	S293= A.In=a                                                Path(S285,S292)
	S294= GPRegs.Rdata2=>B.In                                   Premise(F167)
	S295= B.In=b                                                Path(S288,S294)
	S296= A.Out=>ALU.A                                          Premise(F168)
	S297= B.Out=>ALU.B                                          Premise(F169)
	S298= XER.CAOut=>ALU.CAIn                                   Premise(F170)
	S299= ALU.CAIn=ca                                           Path(S243,S298)
	S300= CU.Func=>ALU.Func                                     Premise(F171)
	S301= ALU.Func=alu_subfe                                    Path(S291,S300)
	S302= ALU.Out=>ALUOut.In                                    Premise(F172)
	S303= ALU.CA=>CAReg.In                                      Premise(F173)
	S304= ALU.CMP=>DataCmb.A                                    Premise(F174)
	S305= ORGate.Out=>DataCmb.B                                 Premise(F175)
	S306= ALU.OV=>OVReg.In                                      Premise(F176)
	S307= XER.SOOut=>ORGate.A                                   Premise(F177)
	S308= ORGate.A=so                                           Path(S242,S307)
	S309= ALU.OV=>ORGate.B                                      Premise(F178)
	S310= ORGate.Out=>DR1bit.In                                 Premise(F179)
	S311= DataCmb.Out=>DR4bit.In                                Premise(F180)
	S312= IR.Out6_10=>GPRegs.WReg                               Premise(F181)
	S313= GPRegs.WReg=rD                                        Path(S238,S312)
	S314= ALUOut.Out=>GPRegs.WData                              Premise(F182)
	S315= DR4bit.Out=>CRRegs.CR0In                              Premise(F183)
	S316= DR1bit.Out=>XER.SOIn                                  Premise(F184)
	S317= CAReg.Out=>XER.CAIn                                   Premise(F185)
	S318= OVReg.Out=>XER.OVIn                                   Premise(F186)
	S319= CtrlPIDReg=0                                          Premise(F187)
	S320= [PIDReg]=pid                                          PIDReg-Hold(S183,S319)
	S321= CtrlIMMU=0                                            Premise(F188)
	S322= CtrlPC=0                                              Premise(F189)
	S323= CtrlPCInc=0                                           Premise(F190)
	S324= PC[CIA]=addr                                          PC-Hold(S188,S323)
	S325= PC[Out]=addr+4                                        PC-Hold(S187,S322,S323)
	S326= CtrlIAddrReg=0                                        Premise(F191)
	S327= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S190,S326)
	S328= CtrlIMMUHitReg=0                                      Premise(F192)
	S329= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S192,S328)
	S330= CtrlICache=0                                          Premise(F193)
	S331= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S194,S330)
	S332= CtrlICacheReg=0                                       Premise(F194)
	S333= CtrlICacheHitReg=0                                    Premise(F195)
	S334= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S197,S333)
	S335= CtrlIMem=0                                            Premise(F196)
	S336= IMem[{pid,addr}]={31,rD,rA,rB,1297}                   IMem-Hold(S199,S335)
	S337= CtrlIRMux=0                                           Premise(F197)
	S338= CtrlIR=0                                              Premise(F198)
	S339= [IR]={31,rD,rA,rB,1297}                               IR-Hold(S202,S338)
	S340= CtrlGPRegs=0                                          Premise(F199)
	S341= GPRegs[rA]=a                                          GPRegs-Hold(S204,S340)
	S342= GPRegs[rB]=b                                          GPRegs-Hold(S205,S340)
	S343= CtrlA=1                                               Premise(F200)
	S344= [A]=a                                                 A-Write(S293,S343)
	S345= CtrlB=1                                               Premise(F201)
	S346= [B]=b                                                 B-Write(S295,S345)
	S347= CtrlXERSO=0                                           Premise(F202)
	S348= XER[SO]=so                                            XER-SO-Hold(S209,S347)
	S349= CtrlXEROV=0                                           Premise(F203)
	S350= CtrlXERCA=0                                           Premise(F204)
	S351= XER[CA]=ca                                            XER-CA-Hold(S212,S350)
	S352= CtrlALUOut=0                                          Premise(F205)
	S353= CtrlCAReg=0                                           Premise(F206)
	S354= CtrlOVReg=0                                           Premise(F207)
	S355= CtrlDR1bit=0                                          Premise(F208)
	S356= CtrlDR4bit=0                                          Premise(F209)
	S357= CtrlCRRegs=0                                          Premise(F210)
	S358= CtrlCRRegsCR0=0                                       Premise(F211)
	S359= CtrlCRRegsW4bitRegs=0                                 Premise(F212)
	S360= CtrlCRRegsW1bitRegs=0                                 Premise(F213)

EX	S361= PIDReg.Out=pid                                        PIDReg-Out(S320)
	S362= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S320)
	S363= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S320)
	S364= PC.CIA=addr                                           PC-Out(S324)
	S365= PC.CIA31_28=addr[31:28]                               PC-Out(S324)
	S366= PC.Out=addr+4                                         PC-Out(S325)
	S367= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S327)
	S368= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S327)
	S369= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S327)
	S370= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S329)
	S371= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S329)
	S372= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S329)
	S373= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S334)
	S374= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S334)
	S375= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S334)
	S376= IR.Out0_5=31                                          IR-Out(S339)
	S377= IR.Out6_10=rD                                         IR-Out(S339)
	S378= IR.Out11_15=rA                                        IR-Out(S339)
	S379= IR.Out16_20=rB                                        IR-Out(S339)
	S380= IR.Out21_31=1297                                      IR-Out(S339)
	S381= A.Out=a                                               A-Out(S344)
	S382= A.Out26_31=a[26:31]                                   A-Out(S344)
	S383= A.Out30_31=a[30:31]                                   A-Out(S344)
	S384= B.Out=b                                               B-Out(S346)
	S385= B.Out26_31=b[26:31]                                   B-Out(S346)
	S386= B.Out30_31=b[30:31]                                   B-Out(S346)
	S387= XER.SOOut=so                                          XER-SO-Out(S348)
	S388= XER.CAOut=ca                                          XER-CA-Out(S351)
	S389= PIDReg.Out=>IMMU.PID                                  Premise(F214)
	S390= IMMU.PID=pid                                          Path(S361,S389)
	S391= PC.Out=>IMMU.IEA                                      Premise(F215)
	S392= IMMU.IEA=addr+4                                       Path(S366,S391)
	S393= IMMU.Addr={pid,addr+4}                                IMMU-Search(S390,S392)
	S394= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S390,S392)
	S395= IMMU.Addr=>IAddrReg.In                                Premise(F216)
	S396= IAddrReg.In={pid,addr+4}                              Path(S393,S395)
	S397= IMMU.Hit=>IMMUHitReg.In                               Premise(F217)
	S398= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S394,S397)
	S399= PC.Out=>ICache.IEA                                    Premise(F218)
	S400= ICache.IEA=addr+4                                     Path(S366,S399)
	S401= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S400)
	S402= ICache.Out=>ICacheReg.In                              Premise(F219)
	S403= ICache.Hit=>ICacheHitReg.In                           Premise(F220)
	S404= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S401,S403)
	S405= IMMUHitReg.Out=>CU.IMemHit                            Premise(F221)
	S406= CU.IMemHit=IMMUHit(pid,addr)                          Path(S370,S405)
	S407= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F222)
	S408= CU.ICacheHit=ICacheHit(addr)                          Path(S373,S407)
	S409= IAddrReg.Out=>IMem.RAddr                              Premise(F223)
	S410= IMem.RAddr={pid,addr}                                 Path(S367,S409)
	S411= IMem.Out={31,rD,rA,rB,1297}                           IMem-Read(S410,S336)
	S412= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S410,S336)
	S413= IMem.Out=>IRMux.MemData                               Premise(F224)
	S414= IRMux.MemData={31,rD,rA,rB,1297}                      Path(S411,S413)
	S415= IRMux.Out={31,rD,rA,rB,1297}                          IRMux-Select(S414)
	S416= ICacheReg.Out=>IRMux.CacheData                        Premise(F225)
	S417= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F226)
	S418= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S370,S417)
	S419= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F227)
	S420= IRMux.CacheSel=ICacheHit(addr)                        Path(S373,S419)
	S421= IRMux.Out=>IR.In                                      Premise(F228)
	S422= IR.In={31,rD,rA,rB,1297}                              Path(S415,S421)
	S423= IMem.MEM8WordOut=>ICache.WData                        Premise(F229)
	S424= ICache.WData=IMemGet8Word({pid,addr})                 Path(S412,S423)
	S425= PC.Out=>ICache.IEA                                    Premise(F230)
	S426= IR.Out0_5=>CU.Op                                      Premise(F231)
	S427= CU.Op=31                                              Path(S376,S426)
	S428= IR.Out11_15=>GPRegs.RReg1                             Premise(F232)
	S429= GPRegs.RReg1=rA                                       Path(S378,S428)
	S430= GPRegs.Rdata1=a                                       GPRegs-Read(S429,S341)
	S431= IR.Out16_20=>GPRegs.RReg2                             Premise(F233)
	S432= GPRegs.RReg2=rB                                       Path(S379,S431)
	S433= GPRegs.Rdata2=b                                       GPRegs-Read(S432,S342)
	S434= IR.Out21_31=>CU.IRFunc                                Premise(F234)
	S435= CU.IRFunc=1297                                        Path(S380,S434)
	S436= CU.Func=alu_subfe                                     CU(S427,S435)
	S437= GPRegs.Rdata1=>A.In                                   Premise(F235)
	S438= A.In=a                                                Path(S430,S437)
	S439= GPRegs.Rdata2=>B.In                                   Premise(F236)
	S440= B.In=b                                                Path(S433,S439)
	S441= A.Out=>ALU.A                                          Premise(F237)
	S442= ALU.A=a                                               Path(S381,S441)
	S443= B.Out=>ALU.B                                          Premise(F238)
	S444= ALU.B=b                                               Path(S384,S443)
	S445= XER.CAOut=>ALU.CAIn                                   Premise(F239)
	S446= ALU.CAIn=ca                                           Path(S388,S445)
	S447= CU.Func=>ALU.Func                                     Premise(F240)
	S448= ALU.Func=alu_subfe                                    Path(S436,S447)
	S449= ALU.Out=b-a+ca                                        ALU(S442,S444,S446)
	S450= ALU.CMP=Compare0(b-a+ca)                              ALU(S442,S444,S446)
	S451= ALU.OV=OverFlow(b-a+ca)                               ALU(S442,S444,S446)
	S452= ALU.CA=Carry(b-a+ca)                                  ALU(S442,S444,S446)
	S453= ALU.Out=>ALUOut.In                                    Premise(F241)
	S454= ALUOut.In=b-a+ca                                      Path(S449,S453)
	S455= ALU.CA=>CAReg.In                                      Premise(F242)
	S456= CAReg.In=Carry(b-a+ca)                                Path(S452,S455)
	S457= ALU.CMP=>DataCmb.A                                    Premise(F243)
	S458= DataCmb.A=Compare0(b-a+ca)                            Path(S450,S457)
	S459= ORGate.Out=>DataCmb.B                                 Premise(F244)
	S460= ALU.OV=>OVReg.In                                      Premise(F245)
	S461= OVReg.In=OverFlow(b-a+ca)                             Path(S451,S460)
	S462= XER.SOOut=>ORGate.A                                   Premise(F246)
	S463= ORGate.A=so                                           Path(S387,S462)
	S464= ALU.OV=>ORGate.B                                      Premise(F247)
	S465= ORGate.B=OverFlow(b-a+ca)                             Path(S451,S464)
	S466= ORGate.Out=so|OverFlow(b-a+ca)                        ORGate(S463,S465)
	S467= DataCmb.B=so|OverFlow(b-a+ca)                         Path(S466,S459)
	S468= DataCmb.Out={Compare0(b-a+ca),so|OverFlow(b-a+ca)}    DataCmb(S458,S467)
	S469= ORGate.Out=>DR1bit.In                                 Premise(F248)
	S470= DR1bit.In=so|OverFlow(b-a+ca)                         Path(S466,S469)
	S471= DataCmb.Out=>DR4bit.In                                Premise(F249)
	S472= DR4bit.In={Compare0(b-a+ca),so|OverFlow(b-a+ca)}      Path(S468,S471)
	S473= IR.Out6_10=>GPRegs.WReg                               Premise(F250)
	S474= GPRegs.WReg=rD                                        Path(S377,S473)
	S475= ALUOut.Out=>GPRegs.WData                              Premise(F251)
	S476= DR4bit.Out=>CRRegs.CR0In                              Premise(F252)
	S477= DR1bit.Out=>XER.SOIn                                  Premise(F253)
	S478= CAReg.Out=>XER.CAIn                                   Premise(F254)
	S479= OVReg.Out=>XER.OVIn                                   Premise(F255)
	S480= CtrlPIDReg=0                                          Premise(F256)
	S481= [PIDReg]=pid                                          PIDReg-Hold(S320,S480)
	S482= CtrlIMMU=0                                            Premise(F257)
	S483= CtrlPC=0                                              Premise(F258)
	S484= CtrlPCInc=0                                           Premise(F259)
	S485= PC[CIA]=addr                                          PC-Hold(S324,S484)
	S486= PC[Out]=addr+4                                        PC-Hold(S325,S483,S484)
	S487= CtrlIAddrReg=0                                        Premise(F260)
	S488= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S327,S487)
	S489= CtrlIMMUHitReg=0                                      Premise(F261)
	S490= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S329,S489)
	S491= CtrlICache=0                                          Premise(F262)
	S492= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S331,S491)
	S493= CtrlICacheReg=0                                       Premise(F263)
	S494= CtrlICacheHitReg=0                                    Premise(F264)
	S495= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S334,S494)
	S496= CtrlIMem=0                                            Premise(F265)
	S497= IMem[{pid,addr}]={31,rD,rA,rB,1297}                   IMem-Hold(S336,S496)
	S498= CtrlIRMux=0                                           Premise(F266)
	S499= CtrlIR=0                                              Premise(F267)
	S500= [IR]={31,rD,rA,rB,1297}                               IR-Hold(S339,S499)
	S501= CtrlGPRegs=0                                          Premise(F268)
	S502= GPRegs[rA]=a                                          GPRegs-Hold(S341,S501)
	S503= GPRegs[rB]=b                                          GPRegs-Hold(S342,S501)
	S504= CtrlA=0                                               Premise(F269)
	S505= [A]=a                                                 A-Hold(S344,S504)
	S506= CtrlB=0                                               Premise(F270)
	S507= [B]=b                                                 B-Hold(S346,S506)
	S508= CtrlXERSO=0                                           Premise(F271)
	S509= XER[SO]=so                                            XER-SO-Hold(S348,S508)
	S510= CtrlXEROV=0                                           Premise(F272)
	S511= CtrlXERCA=0                                           Premise(F273)
	S512= XER[CA]=ca                                            XER-CA-Hold(S351,S511)
	S513= CtrlALUOut=1                                          Premise(F274)
	S514= [ALUOut]=b-a+ca                                       ALUOut-Write(S454,S513)
	S515= CtrlCAReg=1                                           Premise(F275)
	S516= [CAReg]=Carry(b-a+ca)                                 CAReg-Write(S456,S515)
	S517= CtrlOVReg=1                                           Premise(F276)
	S518= [OVReg]=OverFlow(b-a+ca)                              OVReg-Write(S461,S517)
	S519= CtrlDR1bit=1                                          Premise(F277)
	S520= [DR1bit]=so|OverFlow(b-a+ca)                          DR1bit-Write(S470,S519)
	S521= CtrlDR4bit=1                                          Premise(F278)
	S522= [DR4bit]={Compare0(b-a+ca),so|OverFlow(b-a+ca)}       DR4bit-Write(S472,S521)
	S523= CtrlCRRegs=0                                          Premise(F279)
	S524= CtrlCRRegsCR0=0                                       Premise(F280)
	S525= CtrlCRRegsW4bitRegs=0                                 Premise(F281)
	S526= CtrlCRRegsW1bitRegs=0                                 Premise(F282)

MEM	S527= PIDReg.Out=pid                                        PIDReg-Out(S481)
	S528= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S481)
	S529= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S481)
	S530= PC.CIA=addr                                           PC-Out(S485)
	S531= PC.CIA31_28=addr[31:28]                               PC-Out(S485)
	S532= PC.Out=addr+4                                         PC-Out(S486)
	S533= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S488)
	S534= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S488)
	S535= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S488)
	S536= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S490)
	S537= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S490)
	S538= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S490)
	S539= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S495)
	S540= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S495)
	S541= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S495)
	S542= IR.Out0_5=31                                          IR-Out(S500)
	S543= IR.Out6_10=rD                                         IR-Out(S500)
	S544= IR.Out11_15=rA                                        IR-Out(S500)
	S545= IR.Out16_20=rB                                        IR-Out(S500)
	S546= IR.Out21_31=1297                                      IR-Out(S500)
	S547= A.Out=a                                               A-Out(S505)
	S548= A.Out26_31=a[26:31]                                   A-Out(S505)
	S549= A.Out30_31=a[30:31]                                   A-Out(S505)
	S550= B.Out=b                                               B-Out(S507)
	S551= B.Out26_31=b[26:31]                                   B-Out(S507)
	S552= B.Out30_31=b[30:31]                                   B-Out(S507)
	S553= XER.SOOut=so                                          XER-SO-Out(S509)
	S554= XER.CAOut=ca                                          XER-CA-Out(S512)
	S555= ALUOut.Out=b-a+ca                                     ALUOut-Out(S514)
	S556= ALUOut.Out26_31=b-a+ca[26:31]                         ALUOut-Out(S514)
	S557= ALUOut.Out30_31=b-a+ca[30:31]                         ALUOut-Out(S514)
	S558= CAReg.Out=Carry(b-a+ca)                               CAReg-Out(S516)
	S559= CAReg.Out26_31=Carry(b-a+ca)[26:31]                   CAReg-Out(S516)
	S560= CAReg.Out30_31=Carry(b-a+ca)[30:31]                   CAReg-Out(S516)
	S561= OVReg.Out=OverFlow(b-a+ca)                            OVReg-Out(S518)
	S562= OVReg.Out26_31=OverFlow(b-a+ca)[26:31]                OVReg-Out(S518)
	S563= OVReg.Out30_31=OverFlow(b-a+ca)[30:31]                OVReg-Out(S518)
	S564= DR1bit.Out=so|OverFlow(b-a+ca)                        DR1bit-Out(S520)
	S565= DR1bit.Out26_31=so|OverFlow(b-a+ca)[26:31]            DR1bit-Out(S520)
	S566= DR1bit.Out30_31=so|OverFlow(b-a+ca)[30:31]            DR1bit-Out(S520)
	S567= DR4bit.Out={Compare0(b-a+ca),so|OverFlow(b-a+ca)}     DR4bit-Out(S522)
	S568= DR4bit.Out26_31={Compare0(b-a+ca),so|OverFlow(b-a+ca)}[26:31]DR4bit-Out(S522)
	S569= DR4bit.Out30_31={Compare0(b-a+ca),so|OverFlow(b-a+ca)}[30:31]DR4bit-Out(S522)
	S570= PIDReg.Out=>IMMU.PID                                  Premise(F283)
	S571= IMMU.PID=pid                                          Path(S527,S570)
	S572= PC.Out=>IMMU.IEA                                      Premise(F284)
	S573= IMMU.IEA=addr+4                                       Path(S532,S572)
	S574= IMMU.Addr={pid,addr+4}                                IMMU-Search(S571,S573)
	S575= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S571,S573)
	S576= IMMU.Addr=>IAddrReg.In                                Premise(F285)
	S577= IAddrReg.In={pid,addr+4}                              Path(S574,S576)
	S578= IMMU.Hit=>IMMUHitReg.In                               Premise(F286)
	S579= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S575,S578)
	S580= PC.Out=>ICache.IEA                                    Premise(F287)
	S581= ICache.IEA=addr+4                                     Path(S532,S580)
	S582= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S581)
	S583= ICache.Out=>ICacheReg.In                              Premise(F288)
	S584= ICache.Hit=>ICacheHitReg.In                           Premise(F289)
	S585= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S582,S584)
	S586= IMMUHitReg.Out=>CU.IMemHit                            Premise(F290)
	S587= CU.IMemHit=IMMUHit(pid,addr)                          Path(S536,S586)
	S588= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F291)
	S589= CU.ICacheHit=ICacheHit(addr)                          Path(S539,S588)
	S590= IAddrReg.Out=>IMem.RAddr                              Premise(F292)
	S591= IMem.RAddr={pid,addr}                                 Path(S533,S590)
	S592= IMem.Out={31,rD,rA,rB,1297}                           IMem-Read(S591,S497)
	S593= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S591,S497)
	S594= IMem.Out=>IRMux.MemData                               Premise(F293)
	S595= IRMux.MemData={31,rD,rA,rB,1297}                      Path(S592,S594)
	S596= IRMux.Out={31,rD,rA,rB,1297}                          IRMux-Select(S595)
	S597= ICacheReg.Out=>IRMux.CacheData                        Premise(F294)
	S598= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F295)
	S599= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S536,S598)
	S600= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F296)
	S601= IRMux.CacheSel=ICacheHit(addr)                        Path(S539,S600)
	S602= IRMux.Out=>IR.In                                      Premise(F297)
	S603= IR.In={31,rD,rA,rB,1297}                              Path(S596,S602)
	S604= IMem.MEM8WordOut=>ICache.WData                        Premise(F298)
	S605= ICache.WData=IMemGet8Word({pid,addr})                 Path(S593,S604)
	S606= PC.Out=>ICache.IEA                                    Premise(F299)
	S607= IR.Out0_5=>CU.Op                                      Premise(F300)
	S608= CU.Op=31                                              Path(S542,S607)
	S609= IR.Out11_15=>GPRegs.RReg1                             Premise(F301)
	S610= GPRegs.RReg1=rA                                       Path(S544,S609)
	S611= GPRegs.Rdata1=a                                       GPRegs-Read(S610,S502)
	S612= IR.Out16_20=>GPRegs.RReg2                             Premise(F302)
	S613= GPRegs.RReg2=rB                                       Path(S545,S612)
	S614= GPRegs.Rdata2=b                                       GPRegs-Read(S613,S503)
	S615= IR.Out21_31=>CU.IRFunc                                Premise(F303)
	S616= CU.IRFunc=1297                                        Path(S546,S615)
	S617= CU.Func=alu_subfe                                     CU(S608,S616)
	S618= GPRegs.Rdata1=>A.In                                   Premise(F304)
	S619= A.In=a                                                Path(S611,S618)
	S620= GPRegs.Rdata2=>B.In                                   Premise(F305)
	S621= B.In=b                                                Path(S614,S620)
	S622= A.Out=>ALU.A                                          Premise(F306)
	S623= ALU.A=a                                               Path(S547,S622)
	S624= B.Out=>ALU.B                                          Premise(F307)
	S625= ALU.B=b                                               Path(S550,S624)
	S626= XER.CAOut=>ALU.CAIn                                   Premise(F308)
	S627= ALU.CAIn=ca                                           Path(S554,S626)
	S628= CU.Func=>ALU.Func                                     Premise(F309)
	S629= ALU.Func=alu_subfe                                    Path(S617,S628)
	S630= ALU.Out=b-a+ca                                        ALU(S623,S625,S627)
	S631= ALU.CMP=Compare0(b-a+ca)                              ALU(S623,S625,S627)
	S632= ALU.OV=OverFlow(b-a+ca)                               ALU(S623,S625,S627)
	S633= ALU.CA=Carry(b-a+ca)                                  ALU(S623,S625,S627)
	S634= ALU.Out=>ALUOut.In                                    Premise(F310)
	S635= ALUOut.In=b-a+ca                                      Path(S630,S634)
	S636= ALU.CA=>CAReg.In                                      Premise(F311)
	S637= CAReg.In=Carry(b-a+ca)                                Path(S633,S636)
	S638= ALU.CMP=>DataCmb.A                                    Premise(F312)
	S639= DataCmb.A=Compare0(b-a+ca)                            Path(S631,S638)
	S640= ORGate.Out=>DataCmb.B                                 Premise(F313)
	S641= ALU.OV=>OVReg.In                                      Premise(F314)
	S642= OVReg.In=OverFlow(b-a+ca)                             Path(S632,S641)
	S643= XER.SOOut=>ORGate.A                                   Premise(F315)
	S644= ORGate.A=so                                           Path(S553,S643)
	S645= ALU.OV=>ORGate.B                                      Premise(F316)
	S646= ORGate.B=OverFlow(b-a+ca)                             Path(S632,S645)
	S647= ORGate.Out=so|OverFlow(b-a+ca)                        ORGate(S644,S646)
	S648= DataCmb.B=so|OverFlow(b-a+ca)                         Path(S647,S640)
	S649= DataCmb.Out={Compare0(b-a+ca),so|OverFlow(b-a+ca)}    DataCmb(S639,S648)
	S650= ORGate.Out=>DR1bit.In                                 Premise(F317)
	S651= DR1bit.In=so|OverFlow(b-a+ca)                         Path(S647,S650)
	S652= DataCmb.Out=>DR4bit.In                                Premise(F318)
	S653= DR4bit.In={Compare0(b-a+ca),so|OverFlow(b-a+ca)}      Path(S649,S652)
	S654= IR.Out6_10=>GPRegs.WReg                               Premise(F319)
	S655= GPRegs.WReg=rD                                        Path(S543,S654)
	S656= ALUOut.Out=>GPRegs.WData                              Premise(F320)
	S657= GPRegs.WData=b-a+ca                                   Path(S555,S656)
	S658= DR4bit.Out=>CRRegs.CR0In                              Premise(F321)
	S659= CRRegs.CR0In={Compare0(b-a+ca),so|OverFlow(b-a+ca)}   Path(S567,S658)
	S660= DR1bit.Out=>XER.SOIn                                  Premise(F322)
	S661= XER.SOIn=so|OverFlow(b-a+ca)                          Path(S564,S660)
	S662= CAReg.Out=>XER.CAIn                                   Premise(F323)
	S663= XER.CAIn=Carry(b-a+ca)                                Path(S558,S662)
	S664= OVReg.Out=>XER.OVIn                                   Premise(F324)
	S665= XER.OVIn=OverFlow(b-a+ca)                             Path(S561,S664)
	S666= CtrlPIDReg=0                                          Premise(F325)
	S667= [PIDReg]=pid                                          PIDReg-Hold(S481,S666)
	S668= CtrlIMMU=0                                            Premise(F326)
	S669= CtrlPC=0                                              Premise(F327)
	S670= CtrlPCInc=0                                           Premise(F328)
	S671= PC[CIA]=addr                                          PC-Hold(S485,S670)
	S672= PC[Out]=addr+4                                        PC-Hold(S486,S669,S670)
	S673= CtrlIAddrReg=0                                        Premise(F329)
	S674= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S488,S673)
	S675= CtrlIMMUHitReg=0                                      Premise(F330)
	S676= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S490,S675)
	S677= CtrlICache=0                                          Premise(F331)
	S678= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S492,S677)
	S679= CtrlICacheReg=0                                       Premise(F332)
	S680= CtrlICacheHitReg=0                                    Premise(F333)
	S681= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S495,S680)
	S682= CtrlIMem=0                                            Premise(F334)
	S683= IMem[{pid,addr}]={31,rD,rA,rB,1297}                   IMem-Hold(S497,S682)
	S684= CtrlIRMux=0                                           Premise(F335)
	S685= CtrlIR=0                                              Premise(F336)
	S686= [IR]={31,rD,rA,rB,1297}                               IR-Hold(S500,S685)
	S687= CtrlGPRegs=0                                          Premise(F337)
	S688= GPRegs[rA]=a                                          GPRegs-Hold(S502,S687)
	S689= GPRegs[rB]=b                                          GPRegs-Hold(S503,S687)
	S690= CtrlA=0                                               Premise(F338)
	S691= [A]=a                                                 A-Hold(S505,S690)
	S692= CtrlB=0                                               Premise(F339)
	S693= [B]=b                                                 B-Hold(S507,S692)
	S694= CtrlXERSO=0                                           Premise(F340)
	S695= XER[SO]=so                                            XER-SO-Hold(S509,S694)
	S696= CtrlXEROV=0                                           Premise(F341)
	S697= CtrlXERCA=0                                           Premise(F342)
	S698= XER[CA]=ca                                            XER-CA-Hold(S512,S697)
	S699= CtrlALUOut=0                                          Premise(F343)
	S700= [ALUOut]=b-a+ca                                       ALUOut-Hold(S514,S699)
	S701= CtrlCAReg=0                                           Premise(F344)
	S702= [CAReg]=Carry(b-a+ca)                                 CAReg-Hold(S516,S701)
	S703= CtrlOVReg=0                                           Premise(F345)
	S704= [OVReg]=OverFlow(b-a+ca)                              OVReg-Hold(S518,S703)
	S705= CtrlDR1bit=0                                          Premise(F346)
	S706= [DR1bit]=so|OverFlow(b-a+ca)                          DR1bit-Hold(S520,S705)
	S707= CtrlDR4bit=0                                          Premise(F347)
	S708= [DR4bit]={Compare0(b-a+ca),so|OverFlow(b-a+ca)}       DR4bit-Hold(S522,S707)
	S709= CtrlCRRegs=0                                          Premise(F348)
	S710= CtrlCRRegsCR0=0                                       Premise(F349)
	S711= CtrlCRRegsW4bitRegs=0                                 Premise(F350)
	S712= CtrlCRRegsW1bitRegs=0                                 Premise(F351)

DMMU1	S713= PIDReg.Out=pid                                        PIDReg-Out(S667)
	S714= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S667)
	S715= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S667)
	S716= PC.CIA=addr                                           PC-Out(S671)
	S717= PC.CIA31_28=addr[31:28]                               PC-Out(S671)
	S718= PC.Out=addr+4                                         PC-Out(S672)
	S719= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S674)
	S720= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S674)
	S721= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S674)
	S722= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S676)
	S723= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S676)
	S724= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S676)
	S725= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S681)
	S726= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S681)
	S727= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S681)
	S728= IR.Out0_5=31                                          IR-Out(S686)
	S729= IR.Out6_10=rD                                         IR-Out(S686)
	S730= IR.Out11_15=rA                                        IR-Out(S686)
	S731= IR.Out16_20=rB                                        IR-Out(S686)
	S732= IR.Out21_31=1297                                      IR-Out(S686)
	S733= A.Out=a                                               A-Out(S691)
	S734= A.Out26_31=a[26:31]                                   A-Out(S691)
	S735= A.Out30_31=a[30:31]                                   A-Out(S691)
	S736= B.Out=b                                               B-Out(S693)
	S737= B.Out26_31=b[26:31]                                   B-Out(S693)
	S738= B.Out30_31=b[30:31]                                   B-Out(S693)
	S739= XER.SOOut=so                                          XER-SO-Out(S695)
	S740= XER.CAOut=ca                                          XER-CA-Out(S698)
	S741= ALUOut.Out=b-a+ca                                     ALUOut-Out(S700)
	S742= ALUOut.Out26_31=b-a+ca[26:31]                         ALUOut-Out(S700)
	S743= ALUOut.Out30_31=b-a+ca[30:31]                         ALUOut-Out(S700)
	S744= CAReg.Out=Carry(b-a+ca)                               CAReg-Out(S702)
	S745= CAReg.Out26_31=Carry(b-a+ca)[26:31]                   CAReg-Out(S702)
	S746= CAReg.Out30_31=Carry(b-a+ca)[30:31]                   CAReg-Out(S702)
	S747= OVReg.Out=OverFlow(b-a+ca)                            OVReg-Out(S704)
	S748= OVReg.Out26_31=OverFlow(b-a+ca)[26:31]                OVReg-Out(S704)
	S749= OVReg.Out30_31=OverFlow(b-a+ca)[30:31]                OVReg-Out(S704)
	S750= DR1bit.Out=so|OverFlow(b-a+ca)                        DR1bit-Out(S706)
	S751= DR1bit.Out26_31=so|OverFlow(b-a+ca)[26:31]            DR1bit-Out(S706)
	S752= DR1bit.Out30_31=so|OverFlow(b-a+ca)[30:31]            DR1bit-Out(S706)
	S753= DR4bit.Out={Compare0(b-a+ca),so|OverFlow(b-a+ca)}     DR4bit-Out(S708)
	S754= DR4bit.Out26_31={Compare0(b-a+ca),so|OverFlow(b-a+ca)}[26:31]DR4bit-Out(S708)
	S755= DR4bit.Out30_31={Compare0(b-a+ca),so|OverFlow(b-a+ca)}[30:31]DR4bit-Out(S708)
	S756= PIDReg.Out=>IMMU.PID                                  Premise(F352)
	S757= IMMU.PID=pid                                          Path(S713,S756)
	S758= PC.Out=>IMMU.IEA                                      Premise(F353)
	S759= IMMU.IEA=addr+4                                       Path(S718,S758)
	S760= IMMU.Addr={pid,addr+4}                                IMMU-Search(S757,S759)
	S761= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S757,S759)
	S762= IMMU.Addr=>IAddrReg.In                                Premise(F354)
	S763= IAddrReg.In={pid,addr+4}                              Path(S760,S762)
	S764= IMMU.Hit=>IMMUHitReg.In                               Premise(F355)
	S765= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S761,S764)
	S766= PC.Out=>ICache.IEA                                    Premise(F356)
	S767= ICache.IEA=addr+4                                     Path(S718,S766)
	S768= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S767)
	S769= ICache.Out=>ICacheReg.In                              Premise(F357)
	S770= ICache.Hit=>ICacheHitReg.In                           Premise(F358)
	S771= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S768,S770)
	S772= IMMUHitReg.Out=>CU.IMemHit                            Premise(F359)
	S773= CU.IMemHit=IMMUHit(pid,addr)                          Path(S722,S772)
	S774= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F360)
	S775= CU.ICacheHit=ICacheHit(addr)                          Path(S725,S774)
	S776= IAddrReg.Out=>IMem.RAddr                              Premise(F361)
	S777= IMem.RAddr={pid,addr}                                 Path(S719,S776)
	S778= IMem.Out={31,rD,rA,rB,1297}                           IMem-Read(S777,S683)
	S779= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S777,S683)
	S780= IMem.Out=>IRMux.MemData                               Premise(F362)
	S781= IRMux.MemData={31,rD,rA,rB,1297}                      Path(S778,S780)
	S782= IRMux.Out={31,rD,rA,rB,1297}                          IRMux-Select(S781)
	S783= ICacheReg.Out=>IRMux.CacheData                        Premise(F363)
	S784= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F364)
	S785= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S722,S784)
	S786= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F365)
	S787= IRMux.CacheSel=ICacheHit(addr)                        Path(S725,S786)
	S788= IRMux.Out=>IR.In                                      Premise(F366)
	S789= IR.In={31,rD,rA,rB,1297}                              Path(S782,S788)
	S790= IMem.MEM8WordOut=>ICache.WData                        Premise(F367)
	S791= ICache.WData=IMemGet8Word({pid,addr})                 Path(S779,S790)
	S792= PC.Out=>ICache.IEA                                    Premise(F368)
	S793= IR.Out0_5=>CU.Op                                      Premise(F369)
	S794= CU.Op=31                                              Path(S728,S793)
	S795= IR.Out11_15=>GPRegs.RReg1                             Premise(F370)
	S796= GPRegs.RReg1=rA                                       Path(S730,S795)
	S797= GPRegs.Rdata1=a                                       GPRegs-Read(S796,S688)
	S798= IR.Out16_20=>GPRegs.RReg2                             Premise(F371)
	S799= GPRegs.RReg2=rB                                       Path(S731,S798)
	S800= GPRegs.Rdata2=b                                       GPRegs-Read(S799,S689)
	S801= IR.Out21_31=>CU.IRFunc                                Premise(F372)
	S802= CU.IRFunc=1297                                        Path(S732,S801)
	S803= CU.Func=alu_subfe                                     CU(S794,S802)
	S804= GPRegs.Rdata1=>A.In                                   Premise(F373)
	S805= A.In=a                                                Path(S797,S804)
	S806= GPRegs.Rdata2=>B.In                                   Premise(F374)
	S807= B.In=b                                                Path(S800,S806)
	S808= A.Out=>ALU.A                                          Premise(F375)
	S809= ALU.A=a                                               Path(S733,S808)
	S810= B.Out=>ALU.B                                          Premise(F376)
	S811= ALU.B=b                                               Path(S736,S810)
	S812= XER.CAOut=>ALU.CAIn                                   Premise(F377)
	S813= ALU.CAIn=ca                                           Path(S740,S812)
	S814= CU.Func=>ALU.Func                                     Premise(F378)
	S815= ALU.Func=alu_subfe                                    Path(S803,S814)
	S816= ALU.Out=b-a+ca                                        ALU(S809,S811,S813)
	S817= ALU.CMP=Compare0(b-a+ca)                              ALU(S809,S811,S813)
	S818= ALU.OV=OverFlow(b-a+ca)                               ALU(S809,S811,S813)
	S819= ALU.CA=Carry(b-a+ca)                                  ALU(S809,S811,S813)
	S820= ALU.Out=>ALUOut.In                                    Premise(F379)
	S821= ALUOut.In=b-a+ca                                      Path(S816,S820)
	S822= ALU.CA=>CAReg.In                                      Premise(F380)
	S823= CAReg.In=Carry(b-a+ca)                                Path(S819,S822)
	S824= ALU.CMP=>DataCmb.A                                    Premise(F381)
	S825= DataCmb.A=Compare0(b-a+ca)                            Path(S817,S824)
	S826= ORGate.Out=>DataCmb.B                                 Premise(F382)
	S827= ALU.OV=>OVReg.In                                      Premise(F383)
	S828= OVReg.In=OverFlow(b-a+ca)                             Path(S818,S827)
	S829= XER.SOOut=>ORGate.A                                   Premise(F384)
	S830= ORGate.A=so                                           Path(S739,S829)
	S831= ALU.OV=>ORGate.B                                      Premise(F385)
	S832= ORGate.B=OverFlow(b-a+ca)                             Path(S818,S831)
	S833= ORGate.Out=so|OverFlow(b-a+ca)                        ORGate(S830,S832)
	S834= DataCmb.B=so|OverFlow(b-a+ca)                         Path(S833,S826)
	S835= DataCmb.Out={Compare0(b-a+ca),so|OverFlow(b-a+ca)}    DataCmb(S825,S834)
	S836= ORGate.Out=>DR1bit.In                                 Premise(F386)
	S837= DR1bit.In=so|OverFlow(b-a+ca)                         Path(S833,S836)
	S838= DataCmb.Out=>DR4bit.In                                Premise(F387)
	S839= DR4bit.In={Compare0(b-a+ca),so|OverFlow(b-a+ca)}      Path(S835,S838)
	S840= IR.Out6_10=>GPRegs.WReg                               Premise(F388)
	S841= GPRegs.WReg=rD                                        Path(S729,S840)
	S842= ALUOut.Out=>GPRegs.WData                              Premise(F389)
	S843= GPRegs.WData=b-a+ca                                   Path(S741,S842)
	S844= DR4bit.Out=>CRRegs.CR0In                              Premise(F390)
	S845= CRRegs.CR0In={Compare0(b-a+ca),so|OverFlow(b-a+ca)}   Path(S753,S844)
	S846= DR1bit.Out=>XER.SOIn                                  Premise(F391)
	S847= XER.SOIn=so|OverFlow(b-a+ca)                          Path(S750,S846)
	S848= CAReg.Out=>XER.CAIn                                   Premise(F392)
	S849= XER.CAIn=Carry(b-a+ca)                                Path(S744,S848)
	S850= OVReg.Out=>XER.OVIn                                   Premise(F393)
	S851= XER.OVIn=OverFlow(b-a+ca)                             Path(S747,S850)
	S852= CtrlPIDReg=0                                          Premise(F394)
	S853= [PIDReg]=pid                                          PIDReg-Hold(S667,S852)
	S854= CtrlIMMU=0                                            Premise(F395)
	S855= CtrlPC=0                                              Premise(F396)
	S856= CtrlPCInc=0                                           Premise(F397)
	S857= PC[CIA]=addr                                          PC-Hold(S671,S856)
	S858= PC[Out]=addr+4                                        PC-Hold(S672,S855,S856)
	S859= CtrlIAddrReg=0                                        Premise(F398)
	S860= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S674,S859)
	S861= CtrlIMMUHitReg=0                                      Premise(F399)
	S862= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S676,S861)
	S863= CtrlICache=0                                          Premise(F400)
	S864= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S678,S863)
	S865= CtrlICacheReg=0                                       Premise(F401)
	S866= CtrlICacheHitReg=0                                    Premise(F402)
	S867= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S681,S866)
	S868= CtrlIMem=0                                            Premise(F403)
	S869= IMem[{pid,addr}]={31,rD,rA,rB,1297}                   IMem-Hold(S683,S868)
	S870= CtrlIRMux=0                                           Premise(F404)
	S871= CtrlIR=0                                              Premise(F405)
	S872= [IR]={31,rD,rA,rB,1297}                               IR-Hold(S686,S871)
	S873= CtrlGPRegs=0                                          Premise(F406)
	S874= GPRegs[rA]=a                                          GPRegs-Hold(S688,S873)
	S875= GPRegs[rB]=b                                          GPRegs-Hold(S689,S873)
	S876= CtrlA=0                                               Premise(F407)
	S877= [A]=a                                                 A-Hold(S691,S876)
	S878= CtrlB=0                                               Premise(F408)
	S879= [B]=b                                                 B-Hold(S693,S878)
	S880= CtrlXERSO=0                                           Premise(F409)
	S881= XER[SO]=so                                            XER-SO-Hold(S695,S880)
	S882= CtrlXEROV=0                                           Premise(F410)
	S883= CtrlXERCA=0                                           Premise(F411)
	S884= XER[CA]=ca                                            XER-CA-Hold(S698,S883)
	S885= CtrlALUOut=0                                          Premise(F412)
	S886= [ALUOut]=b-a+ca                                       ALUOut-Hold(S700,S885)
	S887= CtrlCAReg=0                                           Premise(F413)
	S888= [CAReg]=Carry(b-a+ca)                                 CAReg-Hold(S702,S887)
	S889= CtrlOVReg=0                                           Premise(F414)
	S890= [OVReg]=OverFlow(b-a+ca)                              OVReg-Hold(S704,S889)
	S891= CtrlDR1bit=0                                          Premise(F415)
	S892= [DR1bit]=so|OverFlow(b-a+ca)                          DR1bit-Hold(S706,S891)
	S893= CtrlDR4bit=0                                          Premise(F416)
	S894= [DR4bit]={Compare0(b-a+ca),so|OverFlow(b-a+ca)}       DR4bit-Hold(S708,S893)
	S895= CtrlCRRegs=0                                          Premise(F417)
	S896= CtrlCRRegsCR0=0                                       Premise(F418)
	S897= CtrlCRRegsW4bitRegs=0                                 Premise(F419)
	S898= CtrlCRRegsW1bitRegs=0                                 Premise(F420)

DMMU2	S899= PIDReg.Out=pid                                        PIDReg-Out(S853)
	S900= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S853)
	S901= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S853)
	S902= PC.CIA=addr                                           PC-Out(S857)
	S903= PC.CIA31_28=addr[31:28]                               PC-Out(S857)
	S904= PC.Out=addr+4                                         PC-Out(S858)
	S905= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S860)
	S906= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S860)
	S907= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S860)
	S908= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S862)
	S909= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S862)
	S910= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S862)
	S911= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S867)
	S912= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S867)
	S913= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S867)
	S914= IR.Out0_5=31                                          IR-Out(S872)
	S915= IR.Out6_10=rD                                         IR-Out(S872)
	S916= IR.Out11_15=rA                                        IR-Out(S872)
	S917= IR.Out16_20=rB                                        IR-Out(S872)
	S918= IR.Out21_31=1297                                      IR-Out(S872)
	S919= A.Out=a                                               A-Out(S877)
	S920= A.Out26_31=a[26:31]                                   A-Out(S877)
	S921= A.Out30_31=a[30:31]                                   A-Out(S877)
	S922= B.Out=b                                               B-Out(S879)
	S923= B.Out26_31=b[26:31]                                   B-Out(S879)
	S924= B.Out30_31=b[30:31]                                   B-Out(S879)
	S925= XER.SOOut=so                                          XER-SO-Out(S881)
	S926= XER.CAOut=ca                                          XER-CA-Out(S884)
	S927= ALUOut.Out=b-a+ca                                     ALUOut-Out(S886)
	S928= ALUOut.Out26_31=b-a+ca[26:31]                         ALUOut-Out(S886)
	S929= ALUOut.Out30_31=b-a+ca[30:31]                         ALUOut-Out(S886)
	S930= CAReg.Out=Carry(b-a+ca)                               CAReg-Out(S888)
	S931= CAReg.Out26_31=Carry(b-a+ca)[26:31]                   CAReg-Out(S888)
	S932= CAReg.Out30_31=Carry(b-a+ca)[30:31]                   CAReg-Out(S888)
	S933= OVReg.Out=OverFlow(b-a+ca)                            OVReg-Out(S890)
	S934= OVReg.Out26_31=OverFlow(b-a+ca)[26:31]                OVReg-Out(S890)
	S935= OVReg.Out30_31=OverFlow(b-a+ca)[30:31]                OVReg-Out(S890)
	S936= DR1bit.Out=so|OverFlow(b-a+ca)                        DR1bit-Out(S892)
	S937= DR1bit.Out26_31=so|OverFlow(b-a+ca)[26:31]            DR1bit-Out(S892)
	S938= DR1bit.Out30_31=so|OverFlow(b-a+ca)[30:31]            DR1bit-Out(S892)
	S939= DR4bit.Out={Compare0(b-a+ca),so|OverFlow(b-a+ca)}     DR4bit-Out(S894)
	S940= DR4bit.Out26_31={Compare0(b-a+ca),so|OverFlow(b-a+ca)}[26:31]DR4bit-Out(S894)
	S941= DR4bit.Out30_31={Compare0(b-a+ca),so|OverFlow(b-a+ca)}[30:31]DR4bit-Out(S894)
	S942= PIDReg.Out=>IMMU.PID                                  Premise(F421)
	S943= IMMU.PID=pid                                          Path(S899,S942)
	S944= PC.Out=>IMMU.IEA                                      Premise(F422)
	S945= IMMU.IEA=addr+4                                       Path(S904,S944)
	S946= IMMU.Addr={pid,addr+4}                                IMMU-Search(S943,S945)
	S947= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S943,S945)
	S948= IMMU.Addr=>IAddrReg.In                                Premise(F423)
	S949= IAddrReg.In={pid,addr+4}                              Path(S946,S948)
	S950= IMMU.Hit=>IMMUHitReg.In                               Premise(F424)
	S951= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S947,S950)
	S952= PC.Out=>ICache.IEA                                    Premise(F425)
	S953= ICache.IEA=addr+4                                     Path(S904,S952)
	S954= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S953)
	S955= ICache.Out=>ICacheReg.In                              Premise(F426)
	S956= ICache.Hit=>ICacheHitReg.In                           Premise(F427)
	S957= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S954,S956)
	S958= IMMUHitReg.Out=>CU.IMemHit                            Premise(F428)
	S959= CU.IMemHit=IMMUHit(pid,addr)                          Path(S908,S958)
	S960= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F429)
	S961= CU.ICacheHit=ICacheHit(addr)                          Path(S911,S960)
	S962= IAddrReg.Out=>IMem.RAddr                              Premise(F430)
	S963= IMem.RAddr={pid,addr}                                 Path(S905,S962)
	S964= IMem.Out={31,rD,rA,rB,1297}                           IMem-Read(S963,S869)
	S965= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S963,S869)
	S966= IMem.Out=>IRMux.MemData                               Premise(F431)
	S967= IRMux.MemData={31,rD,rA,rB,1297}                      Path(S964,S966)
	S968= IRMux.Out={31,rD,rA,rB,1297}                          IRMux-Select(S967)
	S969= ICacheReg.Out=>IRMux.CacheData                        Premise(F432)
	S970= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F433)
	S971= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S908,S970)
	S972= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F434)
	S973= IRMux.CacheSel=ICacheHit(addr)                        Path(S911,S972)
	S974= IRMux.Out=>IR.In                                      Premise(F435)
	S975= IR.In={31,rD,rA,rB,1297}                              Path(S968,S974)
	S976= IMem.MEM8WordOut=>ICache.WData                        Premise(F436)
	S977= ICache.WData=IMemGet8Word({pid,addr})                 Path(S965,S976)
	S978= PC.Out=>ICache.IEA                                    Premise(F437)
	S979= IR.Out0_5=>CU.Op                                      Premise(F438)
	S980= CU.Op=31                                              Path(S914,S979)
	S981= IR.Out11_15=>GPRegs.RReg1                             Premise(F439)
	S982= GPRegs.RReg1=rA                                       Path(S916,S981)
	S983= GPRegs.Rdata1=a                                       GPRegs-Read(S982,S874)
	S984= IR.Out16_20=>GPRegs.RReg2                             Premise(F440)
	S985= GPRegs.RReg2=rB                                       Path(S917,S984)
	S986= GPRegs.Rdata2=b                                       GPRegs-Read(S985,S875)
	S987= IR.Out21_31=>CU.IRFunc                                Premise(F441)
	S988= CU.IRFunc=1297                                        Path(S918,S987)
	S989= CU.Func=alu_subfe                                     CU(S980,S988)
	S990= GPRegs.Rdata1=>A.In                                   Premise(F442)
	S991= A.In=a                                                Path(S983,S990)
	S992= GPRegs.Rdata2=>B.In                                   Premise(F443)
	S993= B.In=b                                                Path(S986,S992)
	S994= A.Out=>ALU.A                                          Premise(F444)
	S995= ALU.A=a                                               Path(S919,S994)
	S996= B.Out=>ALU.B                                          Premise(F445)
	S997= ALU.B=b                                               Path(S922,S996)
	S998= XER.CAOut=>ALU.CAIn                                   Premise(F446)
	S999= ALU.CAIn=ca                                           Path(S926,S998)
	S1000= CU.Func=>ALU.Func                                    Premise(F447)
	S1001= ALU.Func=alu_subfe                                   Path(S989,S1000)
	S1002= ALU.Out=b-a+ca                                       ALU(S995,S997,S999)
	S1003= ALU.CMP=Compare0(b-a+ca)                             ALU(S995,S997,S999)
	S1004= ALU.OV=OverFlow(b-a+ca)                              ALU(S995,S997,S999)
	S1005= ALU.CA=Carry(b-a+ca)                                 ALU(S995,S997,S999)
	S1006= ALU.Out=>ALUOut.In                                   Premise(F448)
	S1007= ALUOut.In=b-a+ca                                     Path(S1002,S1006)
	S1008= ALU.CA=>CAReg.In                                     Premise(F449)
	S1009= CAReg.In=Carry(b-a+ca)                               Path(S1005,S1008)
	S1010= ALU.CMP=>DataCmb.A                                   Premise(F450)
	S1011= DataCmb.A=Compare0(b-a+ca)                           Path(S1003,S1010)
	S1012= ORGate.Out=>DataCmb.B                                Premise(F451)
	S1013= ALU.OV=>OVReg.In                                     Premise(F452)
	S1014= OVReg.In=OverFlow(b-a+ca)                            Path(S1004,S1013)
	S1015= XER.SOOut=>ORGate.A                                  Premise(F453)
	S1016= ORGate.A=so                                          Path(S925,S1015)
	S1017= ALU.OV=>ORGate.B                                     Premise(F454)
	S1018= ORGate.B=OverFlow(b-a+ca)                            Path(S1004,S1017)
	S1019= ORGate.Out=so|OverFlow(b-a+ca)                       ORGate(S1016,S1018)
	S1020= DataCmb.B=so|OverFlow(b-a+ca)                        Path(S1019,S1012)
	S1021= DataCmb.Out={Compare0(b-a+ca),so|OverFlow(b-a+ca)}   DataCmb(S1011,S1020)
	S1022= ORGate.Out=>DR1bit.In                                Premise(F455)
	S1023= DR1bit.In=so|OverFlow(b-a+ca)                        Path(S1019,S1022)
	S1024= DataCmb.Out=>DR4bit.In                               Premise(F456)
	S1025= DR4bit.In={Compare0(b-a+ca),so|OverFlow(b-a+ca)}     Path(S1021,S1024)
	S1026= IR.Out6_10=>GPRegs.WReg                              Premise(F457)
	S1027= GPRegs.WReg=rD                                       Path(S915,S1026)
	S1028= ALUOut.Out=>GPRegs.WData                             Premise(F458)
	S1029= GPRegs.WData=b-a+ca                                  Path(S927,S1028)
	S1030= DR4bit.Out=>CRRegs.CR0In                             Premise(F459)
	S1031= CRRegs.CR0In={Compare0(b-a+ca),so|OverFlow(b-a+ca)}  Path(S939,S1030)
	S1032= DR1bit.Out=>XER.SOIn                                 Premise(F460)
	S1033= XER.SOIn=so|OverFlow(b-a+ca)                         Path(S936,S1032)
	S1034= CAReg.Out=>XER.CAIn                                  Premise(F461)
	S1035= XER.CAIn=Carry(b-a+ca)                               Path(S930,S1034)
	S1036= OVReg.Out=>XER.OVIn                                  Premise(F462)
	S1037= XER.OVIn=OverFlow(b-a+ca)                            Path(S933,S1036)
	S1038= CtrlPIDReg=0                                         Premise(F463)
	S1039= [PIDReg]=pid                                         PIDReg-Hold(S853,S1038)
	S1040= CtrlIMMU=0                                           Premise(F464)
	S1041= CtrlPC=0                                             Premise(F465)
	S1042= CtrlPCInc=0                                          Premise(F466)
	S1043= PC[CIA]=addr                                         PC-Hold(S857,S1042)
	S1044= PC[Out]=addr+4                                       PC-Hold(S858,S1041,S1042)
	S1045= CtrlIAddrReg=0                                       Premise(F467)
	S1046= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S860,S1045)
	S1047= CtrlIMMUHitReg=0                                     Premise(F468)
	S1048= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S862,S1047)
	S1049= CtrlICache=0                                         Premise(F469)
	S1050= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S864,S1049)
	S1051= CtrlICacheReg=0                                      Premise(F470)
	S1052= CtrlICacheHitReg=0                                   Premise(F471)
	S1053= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S867,S1052)
	S1054= CtrlIMem=0                                           Premise(F472)
	S1055= IMem[{pid,addr}]={31,rD,rA,rB,1297}                  IMem-Hold(S869,S1054)
	S1056= CtrlIRMux=0                                          Premise(F473)
	S1057= CtrlIR=0                                             Premise(F474)
	S1058= [IR]={31,rD,rA,rB,1297}                              IR-Hold(S872,S1057)
	S1059= CtrlGPRegs=0                                         Premise(F475)
	S1060= GPRegs[rA]=a                                         GPRegs-Hold(S874,S1059)
	S1061= GPRegs[rB]=b                                         GPRegs-Hold(S875,S1059)
	S1062= CtrlA=0                                              Premise(F476)
	S1063= [A]=a                                                A-Hold(S877,S1062)
	S1064= CtrlB=0                                              Premise(F477)
	S1065= [B]=b                                                B-Hold(S879,S1064)
	S1066= CtrlXERSO=0                                          Premise(F478)
	S1067= XER[SO]=so                                           XER-SO-Hold(S881,S1066)
	S1068= CtrlXEROV=0                                          Premise(F479)
	S1069= CtrlXERCA=0                                          Premise(F480)
	S1070= XER[CA]=ca                                           XER-CA-Hold(S884,S1069)
	S1071= CtrlALUOut=0                                         Premise(F481)
	S1072= [ALUOut]=b-a+ca                                      ALUOut-Hold(S886,S1071)
	S1073= CtrlCAReg=0                                          Premise(F482)
	S1074= [CAReg]=Carry(b-a+ca)                                CAReg-Hold(S888,S1073)
	S1075= CtrlOVReg=0                                          Premise(F483)
	S1076= [OVReg]=OverFlow(b-a+ca)                             OVReg-Hold(S890,S1075)
	S1077= CtrlDR1bit=0                                         Premise(F484)
	S1078= [DR1bit]=so|OverFlow(b-a+ca)                         DR1bit-Hold(S892,S1077)
	S1079= CtrlDR4bit=0                                         Premise(F485)
	S1080= [DR4bit]={Compare0(b-a+ca),so|OverFlow(b-a+ca)}      DR4bit-Hold(S894,S1079)
	S1081= CtrlCRRegs=0                                         Premise(F486)
	S1082= CtrlCRRegsCR0=0                                      Premise(F487)
	S1083= CtrlCRRegsW4bitRegs=0                                Premise(F488)
	S1084= CtrlCRRegsW1bitRegs=0                                Premise(F489)

WB	S1085= PIDReg.Out=pid                                       PIDReg-Out(S1039)
	S1086= PIDReg.Out26_31=pid[26:31]                           PIDReg-Out(S1039)
	S1087= PIDReg.Out30_31=pid[30:31]                           PIDReg-Out(S1039)
	S1088= PC.CIA=addr                                          PC-Out(S1043)
	S1089= PC.CIA31_28=addr[31:28]                              PC-Out(S1043)
	S1090= PC.Out=addr+4                                        PC-Out(S1044)
	S1091= IAddrReg.Out={pid,addr}                              IAddrReg-Out(S1046)
	S1092= IAddrReg.Out26_31={pid,addr}[26:31]                  IAddrReg-Out(S1046)
	S1093= IAddrReg.Out30_31={pid,addr}[30:31]                  IAddrReg-Out(S1046)
	S1094= IMMUHitReg.Out=IMMUHit(pid,addr)                     IMMUHitReg-Out(S1048)
	S1095= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S1048)
	S1096= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S1048)
	S1097= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S1053)
	S1098= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S1053)
	S1099= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S1053)
	S1100= IR.Out0_5=31                                         IR-Out(S1058)
	S1101= IR.Out6_10=rD                                        IR-Out(S1058)
	S1102= IR.Out11_15=rA                                       IR-Out(S1058)
	S1103= IR.Out16_20=rB                                       IR-Out(S1058)
	S1104= IR.Out21_31=1297                                     IR-Out(S1058)
	S1105= A.Out=a                                              A-Out(S1063)
	S1106= A.Out26_31=a[26:31]                                  A-Out(S1063)
	S1107= A.Out30_31=a[30:31]                                  A-Out(S1063)
	S1108= B.Out=b                                              B-Out(S1065)
	S1109= B.Out26_31=b[26:31]                                  B-Out(S1065)
	S1110= B.Out30_31=b[30:31]                                  B-Out(S1065)
	S1111= XER.SOOut=so                                         XER-SO-Out(S1067)
	S1112= XER.CAOut=ca                                         XER-CA-Out(S1070)
	S1113= ALUOut.Out=b-a+ca                                    ALUOut-Out(S1072)
	S1114= ALUOut.Out26_31=b-a+ca[26:31]                        ALUOut-Out(S1072)
	S1115= ALUOut.Out30_31=b-a+ca[30:31]                        ALUOut-Out(S1072)
	S1116= CAReg.Out=Carry(b-a+ca)                              CAReg-Out(S1074)
	S1117= CAReg.Out26_31=Carry(b-a+ca)[26:31]                  CAReg-Out(S1074)
	S1118= CAReg.Out30_31=Carry(b-a+ca)[30:31]                  CAReg-Out(S1074)
	S1119= OVReg.Out=OverFlow(b-a+ca)                           OVReg-Out(S1076)
	S1120= OVReg.Out26_31=OverFlow(b-a+ca)[26:31]               OVReg-Out(S1076)
	S1121= OVReg.Out30_31=OverFlow(b-a+ca)[30:31]               OVReg-Out(S1076)
	S1122= DR1bit.Out=so|OverFlow(b-a+ca)                       DR1bit-Out(S1078)
	S1123= DR1bit.Out26_31=so|OverFlow(b-a+ca)[26:31]           DR1bit-Out(S1078)
	S1124= DR1bit.Out30_31=so|OverFlow(b-a+ca)[30:31]           DR1bit-Out(S1078)
	S1125= DR4bit.Out={Compare0(b-a+ca),so|OverFlow(b-a+ca)}    DR4bit-Out(S1080)
	S1126= DR4bit.Out26_31={Compare0(b-a+ca),so|OverFlow(b-a+ca)}[26:31]DR4bit-Out(S1080)
	S1127= DR4bit.Out30_31={Compare0(b-a+ca),so|OverFlow(b-a+ca)}[30:31]DR4bit-Out(S1080)
	S1128= PIDReg.Out=>IMMU.PID                                 Premise(F490)
	S1129= IMMU.PID=pid                                         Path(S1085,S1128)
	S1130= PC.Out=>IMMU.IEA                                     Premise(F491)
	S1131= IMMU.IEA=addr+4                                      Path(S1090,S1130)
	S1132= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1129,S1131)
	S1133= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1129,S1131)
	S1134= IMMU.Addr=>IAddrReg.In                               Premise(F492)
	S1135= IAddrReg.In={pid,addr+4}                             Path(S1132,S1134)
	S1136= IMMU.Hit=>IMMUHitReg.In                              Premise(F493)
	S1137= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1133,S1136)
	S1138= PC.Out=>ICache.IEA                                   Premise(F494)
	S1139= ICache.IEA=addr+4                                    Path(S1090,S1138)
	S1140= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1139)
	S1141= ICache.Out=>ICacheReg.In                             Premise(F495)
	S1142= ICache.Hit=>ICacheHitReg.In                          Premise(F496)
	S1143= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1140,S1142)
	S1144= IMMUHitReg.Out=>CU.IMemHit                           Premise(F497)
	S1145= CU.IMemHit=IMMUHit(pid,addr)                         Path(S1094,S1144)
	S1146= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F498)
	S1147= CU.ICacheHit=ICacheHit(addr)                         Path(S1097,S1146)
	S1148= IAddrReg.Out=>IMem.RAddr                             Premise(F499)
	S1149= IMem.RAddr={pid,addr}                                Path(S1091,S1148)
	S1150= IMem.Out={31,rD,rA,rB,1297}                          IMem-Read(S1149,S1055)
	S1151= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1149,S1055)
	S1152= IMem.Out=>IRMux.MemData                              Premise(F500)
	S1153= IRMux.MemData={31,rD,rA,rB,1297}                     Path(S1150,S1152)
	S1154= IRMux.Out={31,rD,rA,rB,1297}                         IRMux-Select(S1153)
	S1155= ICacheReg.Out=>IRMux.CacheData                       Premise(F501)
	S1156= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F502)
	S1157= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S1094,S1156)
	S1158= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F503)
	S1159= IRMux.CacheSel=ICacheHit(addr)                       Path(S1097,S1158)
	S1160= IRMux.Out=>IR.In                                     Premise(F504)
	S1161= IR.In={31,rD,rA,rB,1297}                             Path(S1154,S1160)
	S1162= IMem.MEM8WordOut=>ICache.WData                       Premise(F505)
	S1163= ICache.WData=IMemGet8Word({pid,addr})                Path(S1151,S1162)
	S1164= PC.Out=>ICache.IEA                                   Premise(F506)
	S1165= IR.Out0_5=>CU.Op                                     Premise(F507)
	S1166= CU.Op=31                                             Path(S1100,S1165)
	S1167= IR.Out11_15=>GPRegs.RReg1                            Premise(F508)
	S1168= GPRegs.RReg1=rA                                      Path(S1102,S1167)
	S1169= GPRegs.Rdata1=a                                      GPRegs-Read(S1168,S1060)
	S1170= IR.Out16_20=>GPRegs.RReg2                            Premise(F509)
	S1171= GPRegs.RReg2=rB                                      Path(S1103,S1170)
	S1172= GPRegs.Rdata2=b                                      GPRegs-Read(S1171,S1061)
	S1173= IR.Out21_31=>CU.IRFunc                               Premise(F510)
	S1174= CU.IRFunc=1297                                       Path(S1104,S1173)
	S1175= CU.Func=alu_subfe                                    CU(S1166,S1174)
	S1176= GPRegs.Rdata1=>A.In                                  Premise(F511)
	S1177= A.In=a                                               Path(S1169,S1176)
	S1178= GPRegs.Rdata2=>B.In                                  Premise(F512)
	S1179= B.In=b                                               Path(S1172,S1178)
	S1180= A.Out=>ALU.A                                         Premise(F513)
	S1181= ALU.A=a                                              Path(S1105,S1180)
	S1182= B.Out=>ALU.B                                         Premise(F514)
	S1183= ALU.B=b                                              Path(S1108,S1182)
	S1184= XER.CAOut=>ALU.CAIn                                  Premise(F515)
	S1185= ALU.CAIn=ca                                          Path(S1112,S1184)
	S1186= CU.Func=>ALU.Func                                    Premise(F516)
	S1187= ALU.Func=alu_subfe                                   Path(S1175,S1186)
	S1188= ALU.Out=b-a+ca                                       ALU(S1181,S1183,S1185)
	S1189= ALU.CMP=Compare0(b-a+ca)                             ALU(S1181,S1183,S1185)
	S1190= ALU.OV=OverFlow(b-a+ca)                              ALU(S1181,S1183,S1185)
	S1191= ALU.CA=Carry(b-a+ca)                                 ALU(S1181,S1183,S1185)
	S1192= ALU.Out=>ALUOut.In                                   Premise(F517)
	S1193= ALUOut.In=b-a+ca                                     Path(S1188,S1192)
	S1194= ALU.CA=>CAReg.In                                     Premise(F518)
	S1195= CAReg.In=Carry(b-a+ca)                               Path(S1191,S1194)
	S1196= ALU.CMP=>DataCmb.A                                   Premise(F519)
	S1197= DataCmb.A=Compare0(b-a+ca)                           Path(S1189,S1196)
	S1198= ORGate.Out=>DataCmb.B                                Premise(F520)
	S1199= ALU.OV=>OVReg.In                                     Premise(F521)
	S1200= OVReg.In=OverFlow(b-a+ca)                            Path(S1190,S1199)
	S1201= XER.SOOut=>ORGate.A                                  Premise(F522)
	S1202= ORGate.A=so                                          Path(S1111,S1201)
	S1203= ALU.OV=>ORGate.B                                     Premise(F523)
	S1204= ORGate.B=OverFlow(b-a+ca)                            Path(S1190,S1203)
	S1205= ORGate.Out=so|OverFlow(b-a+ca)                       ORGate(S1202,S1204)
	S1206= DataCmb.B=so|OverFlow(b-a+ca)                        Path(S1205,S1198)
	S1207= DataCmb.Out={Compare0(b-a+ca),so|OverFlow(b-a+ca)}   DataCmb(S1197,S1206)
	S1208= ORGate.Out=>DR1bit.In                                Premise(F524)
	S1209= DR1bit.In=so|OverFlow(b-a+ca)                        Path(S1205,S1208)
	S1210= DataCmb.Out=>DR4bit.In                               Premise(F525)
	S1211= DR4bit.In={Compare0(b-a+ca),so|OverFlow(b-a+ca)}     Path(S1207,S1210)
	S1212= IR.Out6_10=>GPRegs.WReg                              Premise(F526)
	S1213= GPRegs.WReg=rD                                       Path(S1101,S1212)
	S1214= ALUOut.Out=>GPRegs.WData                             Premise(F527)
	S1215= GPRegs.WData=b-a+ca                                  Path(S1113,S1214)
	S1216= DR4bit.Out=>CRRegs.CR0In                             Premise(F528)
	S1217= CRRegs.CR0In={Compare0(b-a+ca),so|OverFlow(b-a+ca)}  Path(S1125,S1216)
	S1218= DR1bit.Out=>XER.SOIn                                 Premise(F529)
	S1219= XER.SOIn=so|OverFlow(b-a+ca)                         Path(S1122,S1218)
	S1220= CAReg.Out=>XER.CAIn                                  Premise(F530)
	S1221= XER.CAIn=Carry(b-a+ca)                               Path(S1116,S1220)
	S1222= OVReg.Out=>XER.OVIn                                  Premise(F531)
	S1223= XER.OVIn=OverFlow(b-a+ca)                            Path(S1119,S1222)
	S1224= CtrlPIDReg=0                                         Premise(F532)
	S1225= [PIDReg]=pid                                         PIDReg-Hold(S1039,S1224)
	S1226= CtrlIMMU=0                                           Premise(F533)
	S1227= CtrlPC=0                                             Premise(F534)
	S1228= CtrlPCInc=0                                          Premise(F535)
	S1229= PC[CIA]=addr                                         PC-Hold(S1043,S1228)
	S1230= PC[Out]=addr+4                                       PC-Hold(S1044,S1227,S1228)
	S1231= CtrlIAddrReg=0                                       Premise(F536)
	S1232= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1046,S1231)
	S1233= CtrlIMMUHitReg=0                                     Premise(F537)
	S1234= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1048,S1233)
	S1235= CtrlICache=0                                         Premise(F538)
	S1236= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S1050,S1235)
	S1237= CtrlICacheReg=0                                      Premise(F539)
	S1238= CtrlICacheHitReg=0                                   Premise(F540)
	S1239= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1053,S1238)
	S1240= CtrlIMem=0                                           Premise(F541)
	S1241= IMem[{pid,addr}]={31,rD,rA,rB,1297}                  IMem-Hold(S1055,S1240)
	S1242= CtrlIRMux=0                                          Premise(F542)
	S1243= CtrlIR=0                                             Premise(F543)
	S1244= [IR]={31,rD,rA,rB,1297}                              IR-Hold(S1058,S1243)
	S1245= CtrlGPRegs=1                                         Premise(F544)
	S1246= GPRegs[rD]=b-a+ca                                    GPRegs-Write(S1213,S1215,S1245)
	S1247= CtrlA=0                                              Premise(F545)
	S1248= [A]=a                                                A-Hold(S1063,S1247)
	S1249= CtrlB=0                                              Premise(F546)
	S1250= [B]=b                                                B-Hold(S1065,S1249)
	S1251= CtrlXERSO=1                                          Premise(F547)
	S1252= XER[SO]=so|OverFlow(b-a+ca)                          XER-SO-Write(S1219,S1251)
	S1253= CtrlXEROV=1                                          Premise(F548)
	S1254= XER[OV]=OverFlow(b-a+ca)                             XER-OV-Write(S1223,S1253)
	S1255= CtrlXERCA=1                                          Premise(F549)
	S1256= XER[CA]=Carry(b-a+ca)                                XER-CA-Write(S1221,S1255)
	S1257= CtrlALUOut=0                                         Premise(F550)
	S1258= [ALUOut]=b-a+ca                                      ALUOut-Hold(S1072,S1257)
	S1259= CtrlCAReg=0                                          Premise(F551)
	S1260= [CAReg]=Carry(b-a+ca)                                CAReg-Hold(S1074,S1259)
	S1261= CtrlOVReg=0                                          Premise(F552)
	S1262= [OVReg]=OverFlow(b-a+ca)                             OVReg-Hold(S1076,S1261)
	S1263= CtrlDR1bit=0                                         Premise(F553)
	S1264= [DR1bit]=so|OverFlow(b-a+ca)                         DR1bit-Hold(S1078,S1263)
	S1265= CtrlDR4bit=0                                         Premise(F554)
	S1266= [DR4bit]={Compare0(b-a+ca),so|OverFlow(b-a+ca)}      DR4bit-Hold(S1080,S1265)
	S1267= CtrlCRRegs=0                                         Premise(F555)
	S1268= CtrlCRRegsCR0=1                                      Premise(F556)
	S1269= CRRegs[CR0]={Compare0(b-a+ca),so|OverFlow(b-a+ca)}   CRRegs-CR0-Write(S1217,S1268)
	S1270= CtrlCRRegsW4bitRegs=0                                Premise(F557)
	S1271= CtrlCRRegsW1bitRegs=0                                Premise(F558)

POST	S1225= [PIDReg]=pid                                         PIDReg-Hold(S1039,S1224)
	S1229= PC[CIA]=addr                                         PC-Hold(S1043,S1228)
	S1230= PC[Out]=addr+4                                       PC-Hold(S1044,S1227,S1228)
	S1232= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1046,S1231)
	S1234= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1048,S1233)
	S1236= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S1050,S1235)
	S1239= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1053,S1238)
	S1241= IMem[{pid,addr}]={31,rD,rA,rB,1297}                  IMem-Hold(S1055,S1240)
	S1244= [IR]={31,rD,rA,rB,1297}                              IR-Hold(S1058,S1243)
	S1246= GPRegs[rD]=b-a+ca                                    GPRegs-Write(S1213,S1215,S1245)
	S1248= [A]=a                                                A-Hold(S1063,S1247)
	S1250= [B]=b                                                B-Hold(S1065,S1249)
	S1252= XER[SO]=so|OverFlow(b-a+ca)                          XER-SO-Write(S1219,S1251)
	S1254= XER[OV]=OverFlow(b-a+ca)                             XER-OV-Write(S1223,S1253)
	S1256= XER[CA]=Carry(b-a+ca)                                XER-CA-Write(S1221,S1255)
	S1258= [ALUOut]=b-a+ca                                      ALUOut-Hold(S1072,S1257)
	S1260= [CAReg]=Carry(b-a+ca)                                CAReg-Hold(S1074,S1259)
	S1262= [OVReg]=OverFlow(b-a+ca)                             OVReg-Hold(S1076,S1261)
	S1264= [DR1bit]=so|OverFlow(b-a+ca)                         DR1bit-Hold(S1078,S1263)
	S1266= [DR4bit]={Compare0(b-a+ca),so|OverFlow(b-a+ca)}      DR4bit-Hold(S1080,S1265)
	S1269= CRRegs[CR0]={Compare0(b-a+ca),so|OverFlow(b-a+ca)}   CRRegs-CR0-Write(S1217,S1268)

