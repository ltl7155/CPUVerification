
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,cc,0,1,rD,0,1}                       Premise(F3)

IF	S2= PC.Out=addr                                             PC-Out(S0)
	S3= PC.Out=>ICache.IEA                                      Premise(F9)
	S4= ICache.IEA=addr                                         Path(S2,S3)
	S5= ICache.Out={0,rS,cc,0,1,rD,0,1}                         ICache-Search(S4,S1)
	S6= ICache.Out=>IR_ID.In                                    Premise(F13)
	S7= IR_ID.In={0,rS,cc,0,1,rD,0,1}                           Path(S5,S6)
	S8= CtrlPC=0                                                Premise(F26)
	S9= CtrlPCInc=1                                             Premise(F27)
	S10= PC[Out]=addr+4                                         PC-Inc(S0,S8,S9)
	S11= CtrlIR_ID=1                                            Premise(F32)
	S12= [IR_ID]={0,rS,cc,0,1,rD,0,1}                           IR_ID-Write(S7,S11)

ID	S13= IR_ID.Out={0,rS,cc,0,1,rD,0,1}                         IR-Out(S12)
	S14= IR_ID.Out=>IR_EX.In                                    Premise(F90)
	S15= IR_EX.In={0,rS,cc,0,1,rD,0,1}                          Path(S13,S14)
	S16= CtrlPC=0                                               Premise(F99)
	S17= CtrlPCInc=0                                            Premise(F100)
	S18= PC[Out]=addr+4                                         PC-Hold(S10,S16,S17)
	S19= CtrlIR_EX=1                                            Premise(F110)
	S20= [IR_EX]={0,rS,cc,0,1,rD,0,1}                           IR_EX-Write(S15,S19)

EX	S21= IR_EX.Out20_18=cc                                      IR_EX-Out(S20)
	S22= IR_EX.Out16=1                                          IR_EX-Out(S20)
	S23= IR_EX.Out20_18=>CP1.cc                                 Premise(F129)
	S24= CP1.cc=cc                                              Path(S21,S23)
	S25= IR_EX.Out16=>CP1.tf                                    Premise(F130)
	S26= CP1.tf=1                                               Path(S22,S25)
	S27= CP1.fp=FPConditionCode(cc,1)                           FP-PRODUCT(S24,S26)
	S28= CP1.fp=>ConditionReg_MEM.In                            Premise(F131)
	S29= ConditionReg_MEM.In=FPConditionCode(cc,1)              Path(S27,S28)
	S30= CtrlPC=0                                               Premise(F140)
	S31= CtrlPCInc=0                                            Premise(F141)
	S32= PC[Out]=addr+4                                         PC-Hold(S18,S30,S31)
	S33= CtrlConditionReg_MEM=1                                 Premise(F153)
	S34= [ConditionReg_MEM]=FPConditionCode(cc,1)               ConditionReg_MEM-Write(S29,S33)

MEM	S35= ConditionReg_MEM.Out=FPConditionCode(cc,1)             ConditionReg_MEM-Out(S34)
	S36= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In            Premise(F176)
	S37= ConditionReg_DMMU1.In=FPConditionCode(cc,1)            Path(S35,S36)
	S38= CtrlPC=0                                               Premise(F186)
	S39= CtrlPCInc=0                                            Premise(F187)
	S40= PC[Out]=addr+4                                         PC-Hold(S32,S38,S39)
	S41= CtrlConditionReg_DMMU1=1                               Premise(F206)
	S42= [ConditionReg_DMMU1]=FPConditionCode(cc,1)             ConditionReg_DMMU1-Write(S37,S41)

MEM(DMMU1)	S43= ConditionReg_DMMU1.Out=FPConditionCode(cc,1)           ConditionReg_DMMU1-Out(S42)
	S44= ConditionReg_DMMU1.Out=>ConditionReg_DMMU2.In          Premise(F221)
	S45= ConditionReg_DMMU2.In=FPConditionCode(cc,1)            Path(S43,S44)
	S46= CtrlPC=0                                               Premise(F228)
	S47= CtrlPCInc=0                                            Premise(F229)
	S48= PC[Out]=addr+4                                         PC-Hold(S40,S46,S47)
	S49= CtrlConditionReg_DMMU2=1                               Premise(F252)
	S50= [ConditionReg_DMMU2]=FPConditionCode(cc,1)             ConditionReg_DMMU2-Write(S45,S49)

MEM(DMMU2)	S51= ConditionReg_DMMU2.Out=FPConditionCode(cc,1)           ConditionReg_DMMU2-Out(S50)
	S52= ConditionReg_DMMU2.Out=>ConditionReg_WB.In             Premise(F260)
	S53= ConditionReg_WB.In=FPConditionCode(cc,1)               Path(S51,S52)
	S54= CtrlPC=0                                               Premise(F267)
	S55= CtrlPCInc=0                                            Premise(F268)
	S56= PC[Out]=addr+4                                         PC-Hold(S48,S54,S55)
	S57= CtrlConditionReg_WB=1                                  Premise(F288)
	S58= [ConditionReg_WB]=FPConditionCode(cc,1)                ConditionReg_WB-Write(S53,S57)

WB	S59= CtrlPC=0                                               Premise(F305)
	S60= CtrlPCInc=0                                            Premise(F306)
	S61= PC[Out]=addr+4                                         PC-Hold(S56,S59,S60)
	S62= CtrlConditionReg_WB=0                                  Premise(F326)
	S63= [ConditionReg_WB]=FPConditionCode(cc,1)                ConditionReg_WB-Hold(S58,S62)

POST	S61= PC[Out]=addr+4                                         PC-Hold(S56,S59,S60)
	S63= [ConditionReg_WB]=FPConditionCode(cc,1)                ConditionReg_WB-Hold(S58,S62)

