
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={28,rS,rT,0,0,5}                           Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)
	S3= GPR[rT]=b                                               Premise(F5)
	S4= [Lo]=lo                                                 Premise(F6)
	S5= [Hi]=hi                                                 Premise(F7)

IF	S6= PC.Out=addr                                             PC-Out(S0)
	S7= PC.Out=>ICache.IEA                                      Premise(F12)
	S8= ICache.IEA=addr                                         Path(S6,S7)
	S9= ICache.Out={28,rS,rT,0,0,5}                             ICache-Search(S8,S1)
	S10= ICache.Out=>IR_ID.In                                   Premise(F16)
	S11= IR_ID.In={28,rS,rT,0,0,5}                              Path(S9,S10)
	S12= CtrlPC=0                                               Premise(F29)
	S13= CtrlPCInc=1                                            Premise(F30)
	S14= PC[Out]=addr+4                                         PC-Inc(S0,S12,S13)
	S15= CtrlIR_ID=1                                            Premise(F35)
	S16= [IR_ID]={28,rS,rT,0,0,5}                               IR_ID-Write(S11,S15)
	S17= CtrlGPR=0                                              Premise(F38)
	S18= GPR[rS]=a                                              GPR-Hold(S2,S17)
	S19= GPR[rT]=b                                              GPR-Hold(S3,S17)
	S20= CtrlHi=0                                               Premise(F42)
	S21= [Hi]=hi                                                Hi-Hold(S5,S20)
	S22= CtrlLo=0                                               Premise(F43)
	S23= [Lo]=lo                                                Lo-Hold(S4,S22)

ID	S24= IR_ID.Out25_21=rS                                      IR-Out(S16)
	S25= IR_ID.Out20_16=rT                                      IR-Out(S16)
	S26= IR_ID.Out25_21=>GPR.RReg1                              Premise(F84)
	S27= GPR.RReg1=rS                                           Path(S24,S26)
	S28= GPR.Rdata1=a                                           GPR-Read(S27,S18)
	S29= IR_ID.Out20_16=>GPR.RReg2                              Premise(F85)
	S30= GPR.RReg2=rT                                           Path(S25,S29)
	S31= GPR.Rdata2=b                                           GPR-Read(S30,S19)
	S32= GPR.Rdata1=>FU.InID1                                   Premise(F87)
	S33= FU.InID1=a                                             Path(S28,S32)
	S34= FU.OutID1=FU(a)                                        FU-Forward(S33)
	S35= FU.OutID1=>A_EX.In                                     Premise(F89)
	S36= A_EX.In=FU(a)                                          Path(S34,S35)
	S37= GPR.Rdata2=>FU.InID2                                   Premise(F90)
	S38= FU.InID2=b                                             Path(S31,S37)
	S39= FU.OutID2=FU(b)                                        FU-Forward(S38)
	S40= FU.OutID2=>B_EX.In                                     Premise(F92)
	S41= B_EX.In=FU(b)                                          Path(S39,S40)
	S42= CtrlPC=0                                               Premise(F101)
	S43= CtrlPCInc=0                                            Premise(F102)
	S44= PC[Out]=addr+4                                         PC-Hold(S14,S42,S43)
	S45= CtrlA_EX=1                                             Premise(F111)
	S46= [A_EX]=FU(a)                                           A_EX-Write(S36,S45)
	S47= CtrlB_EX=1                                             Premise(F112)
	S48= [B_EX]=FU(b)                                           B_EX-Write(S41,S47)
	S49= CtrlHi=0                                               Premise(F114)
	S50= [Hi]=hi                                                Hi-Hold(S21,S49)
	S51= CtrlLo=0                                               Premise(F115)
	S52= [Lo]=lo                                                Lo-Hold(S23,S51)

EX	S53= A_EX.Out=FU(a)                                         A_EX-Out(S46)
	S54= B_EX.Out=FU(b)                                         B_EX-Out(S48)
	S55= Hi.Out=hi                                              Hi-Out(S50)
	S56= Lo.Out=lo                                              Lo-Out(S52)
	S57= Hi.Out=>MDU.Hi                                         Premise(F129)
	S58= MDU.Hi=hi                                              Path(S55,S57)
	S59= Lo.Out=>MDU.Lo                                         Premise(F130)
	S60= MDU.Lo=lo                                              Path(S56,S59)
	S61= A_EX.Out=>MDU.A                                        Premise(F131)
	S62= MDU.A=FU(a)                                            Path(S53,S61)
	S63= B_EX.Out=>MDU.B                                        Premise(F132)
	S64= MDU.B=FU(b)                                            Path(S54,S63)
	S65= MDU.lo=({hi,lo}-FU(a)*FU(b))[31:0]                     MDU(S62,S64,S58,S60)
	S66= MDU.hi=({hi,lo}-FU(a)*FU(b))[63:32]                    MDU(S62,S64,S58,S60)
	S67= MDU.hi=>Hi.In                                          Premise(F134)
	S68= Hi.In=({hi,lo}-FU(a)*FU(b))[63:32]                     Path(S66,S67)
	S69= MDU.lo=>Lo.In                                          Premise(F135)
	S70= Lo.In=({hi,lo}-FU(a)*FU(b))[31:0]                      Path(S65,S69)
	S71= CtrlPC=0                                               Premise(F143)
	S72= CtrlPCInc=0                                            Premise(F144)
	S73= PC[Out]=addr+4                                         PC-Hold(S44,S71,S72)
	S74= CtrlHi=1                                               Premise(F156)
	S75= [Hi]=({hi,lo}-FU(a)*FU(b))[63:32]                      Hi-Write(S68,S74)
	S76= CtrlLo=1                                               Premise(F157)
	S77= [Lo]=({hi,lo}-FU(a)*FU(b))[31:0]                       Lo-Write(S70,S76)

MEM	S78= CtrlPC=0                                               Premise(F185)
	S79= CtrlPCInc=0                                            Premise(F186)
	S80= PC[Out]=addr+4                                         PC-Hold(S73,S78,S79)
	S81= CtrlHi=0                                               Premise(F198)
	S82= [Hi]=({hi,lo}-FU(a)*FU(b))[63:32]                      Hi-Hold(S75,S81)
	S83= CtrlLo=0                                               Premise(F199)
	S84= [Lo]=({hi,lo}-FU(a)*FU(b))[31:0]                       Lo-Hold(S77,S83)

MEM(DMMU1)	S85= CtrlPC=0                                               Premise(F223)
	S86= CtrlPCInc=0                                            Premise(F224)
	S87= PC[Out]=addr+4                                         PC-Hold(S80,S85,S86)
	S88= CtrlHi=0                                               Premise(F236)
	S89= [Hi]=({hi,lo}-FU(a)*FU(b))[63:32]                      Hi-Hold(S82,S88)
	S90= CtrlLo=0                                               Premise(F237)
	S91= [Lo]=({hi,lo}-FU(a)*FU(b))[31:0]                       Lo-Hold(S84,S90)

MEM(DMMU2)	S92= CtrlPC=0                                               Premise(F258)
	S93= CtrlPCInc=0                                            Premise(F259)
	S94= PC[Out]=addr+4                                         PC-Hold(S87,S92,S93)
	S95= CtrlHi=0                                               Premise(F271)
	S96= [Hi]=({hi,lo}-FU(a)*FU(b))[63:32]                      Hi-Hold(S89,S95)
	S97= CtrlLo=0                                               Premise(F272)
	S98= [Lo]=({hi,lo}-FU(a)*FU(b))[31:0]                       Lo-Hold(S91,S97)

WB	S99= CtrlPC=0                                               Premise(F290)
	S100= CtrlPCInc=0                                           Premise(F291)
	S101= PC[Out]=addr+4                                        PC-Hold(S94,S99,S100)
	S102= CtrlHi=0                                              Premise(F303)
	S103= [Hi]=({hi,lo}-FU(a)*FU(b))[63:32]                     Hi-Hold(S96,S102)
	S104= CtrlLo=0                                              Premise(F304)
	S105= [Lo]=({hi,lo}-FU(a)*FU(b))[31:0]                      Lo-Hold(S98,S104)

POST	S101= PC[Out]=addr+4                                        PC-Hold(S94,S99,S100)
	S103= [Hi]=({hi,lo}-FU(a)*FU(b))[63:32]                     Hi-Hold(S96,S102)
	S105= [Lo]=({hi,lo}-FU(a)*FU(b))[31:0]                      Lo-Hold(S98,S104)

