
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={5,rS,rT,offset}                       Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= CP0.ASID=>IMMU.PID                                      Premise(F3)
	S6= IMMU.PID=pid                                            Path(S3,S5)
	S7= PC.Out=>IMMU.IEA                                        Premise(F4)
	S8= IMMU.IEA=addr                                           Path(S4,S7)
	S9= IMMU.Addr={pid,addr}                                    IMMU-Search(S6,S8)
	S10= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S6,S8)
	S11= IMMU.Addr=>IAddrReg.In                                 Premise(F5)
	S12= IAddrReg.In={pid,addr}                                 Path(S9,S11)
	S13= IMMU.Hit=>CU_IF.IMMUHit                                Premise(F6)
	S14= CU_IF.IMMUHit=IMMUHit(pid,addr)                        Path(S10,S13)
	S15= PC.Out=>ICache.IEA                                     Premise(F7)
	S16= ICache.IEA=addr                                        Path(S4,S15)
	S17= ICache.Hit=ICacheHit(addr)                             ICache-Search(S16)
	S18= ICache.Out=>IR_IMMU.In                                 Premise(F8)
	S19= ICache.Out=>ICacheReg.In                               Premise(F9)
	S20= ICache.Hit=>CU_IF.ICacheHit                            Premise(F10)
	S21= CU_IF.ICacheHit=ICacheHit(addr)                        Path(S17,S20)
	S22= ICache.Out=>IR_ID.In                                   Premise(F11)
	S23= CU_IF.IMMUHitOut=>CU_ID.IMMUHit                        Premise(F12)
	S24= CU_IF.ICacheHitOut=>CU_ID.ICacheHit                    Premise(F13)
	S25= CU_IF.IMMUHitOut=>CU_IMMU.IMMUHit                      Premise(F14)
	S26= CU_IF.ICacheHitOut=>CU_IMMU.ICacheHit                  Premise(F15)
	S27= ICache.Hit=>FU.ICacheHit                               Premise(F16)
	S28= FU.ICacheHit=ICacheHit(addr)                           Path(S17,S27)
	S29= FU.Halt_IF=>CU_IF.Halt                                 Premise(F17)
	S30= FU.Bub_IF=>CU_IF.Bub                                   Premise(F18)
	S31= CtrlASIDIn=0                                           Premise(F19)
	S32= CtrlCP0=0                                              Premise(F20)
	S33= CP0[ASID]=pid                                          CP0-Hold(S0,S32)
	S34= CtrlEPCIn=0                                            Premise(F21)
	S35= CtrlExCodeIn=0                                         Premise(F22)
	S36= CtrlIMMU=0                                             Premise(F23)
	S37= CtrlPC=0                                               Premise(F24)
	S38= CtrlPCInc=0                                            Premise(F25)
	S39= PC[Out]=addr                                           PC-Hold(S1,S37,S38)
	S40= CtrlIAddrReg=1                                         Premise(F26)
	S41= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S40)
	S42= CtrlICache=0                                           Premise(F27)
	S43= CtrlIR_IMMU=1                                          Premise(F28)
	S44= CtrlICacheReg=1                                        Premise(F29)
	S45= CtrlIR_ID=0                                            Premise(F30)
	S46= CtrlIMem=0                                             Premise(F31)
	S47= IMem[{pid,addr}]={5,rS,rT,offset}                      IMem-Hold(S2,S46)
	S48= CtrlIRMux=0                                            Premise(F32)
	S49= CtrlGPR=0                                              Premise(F33)
	S50= CtrlA_EX=0                                             Premise(F34)
	S51= CtrlB_EX=0                                             Premise(F35)
	S52= CtrlIR_EX=0                                            Premise(F36)
	S53= CtrlALUOut_MEM=0                                       Premise(F37)
	S54= CtrlConditionReg_MEM=0                                 Premise(F38)
	S55= CtrlIR_MEM=0                                           Premise(F39)
	S56= CtrlIR_DMMU1=0                                         Premise(F40)
	S57= CtrlIR_WB=0                                            Premise(F41)
	S58= CtrlA_MEM=0                                            Premise(F42)
	S59= CtrlA_WB=0                                             Premise(F43)
	S60= CtrlB_MEM=0                                            Premise(F44)
	S61= CtrlB_WB=0                                             Premise(F45)
	S62= CtrlALUOut_WB=0                                        Premise(F46)
	S63= CtrlConditionReg_DMMU1=0                               Premise(F47)
	S64= CtrlConditionReg_WB=0                                  Premise(F48)
	S65= CtrlIR_DMMU2=0                                         Premise(F49)
	S66= CtrlConditionReg_DMMU2=0                               Premise(F50)
	S67= GPR[rS]=a                                              Premise(F51)
	S68= GPR[rT]=b                                              Premise(F52)

IF(IMMU)	S69= CP0.ASID=pid                                           CP0-Read-ASID(S33)
	S70= PC.Out=addr                                            PC-Out(S39)
	S71= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S41)
	S72= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S41)
	S73= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S41)
	S74= IR_IMMU.Out=>FU.IR_IMMU                                Premise(F53)
	S75= CU_ID.IMMUHitOut=>CU_ID.IMMUHit                        Premise(F54)
	S76= CU_ID.ICacheHitOut=>CU_ID.ICacheHit                    Premise(F55)
	S77= IAddrReg.Out=>IMem.RAddr                               Premise(F56)
	S78= IMem.RAddr={pid,addr}                                  Path(S71,S77)
	S79= IMem.Out={5,rS,rT,offset}                              IMem-Read(S78,S47)
	S80= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S78,S47)
	S81= IMem.Out=>IRMux.MemData                                Premise(F57)
	S82= IRMux.MemData={5,rS,rT,offset}                         Path(S79,S81)
	S83= IRMux.Out={5,rS,rT,offset}                             IRMux-Select2(S82)
	S84= ICacheReg.Out=>IRMux.CacheData                         Premise(F58)
	S85= CU_IMMU.IMMUHit=>IRMux.MemSel                          Premise(F59)
	S86= CU_IMMU.ICacheHit=>IRMux.CacheSel                      Premise(F60)
	S87= IRMux.Out=>IR_ID.In                                    Premise(F61)
	S88= IR_ID.In={5,rS,rT,offset}                              Path(S83,S87)
	S89= IMem.MEM8WordOut=>ICache.WData                         Premise(F62)
	S90= ICache.WData=IMemGet8Word({pid,addr})                  Path(S80,S89)
	S91= PC.Out=>ICache.IEA                                     Premise(F63)
	S92= ICache.IEA=addr                                        Path(S70,S91)
	S93= ICache.Hit=ICacheHit(addr)                             ICache-Search(S92)
	S94= FU.Halt_IMMU=>CU_IMMU.Halt                             Premise(F64)
	S95= FU.Bub_IMMU=>CU_IMMU.Bub                               Premise(F65)
	S96= CtrlASIDIn=0                                           Premise(F66)
	S97= CtrlCP0=0                                              Premise(F67)
	S98= CP0[ASID]=pid                                          CP0-Hold(S33,S97)
	S99= CtrlEPCIn=0                                            Premise(F68)
	S100= CtrlExCodeIn=0                                        Premise(F69)
	S101= CtrlIMMU=0                                            Premise(F70)
	S102= CtrlPC=0                                              Premise(F71)
	S103= CtrlPCInc=1                                           Premise(F72)
	S104= PC[Out]=addr+4                                        PC-Inc(S39,S102,S103)
	S105= PC[CIA]=addr                                          PC-Inc(S39,S102,S103)
	S106= CtrlIAddrReg=0                                        Premise(F73)
	S107= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S41,S106)
	S108= CtrlICache=1                                          Premise(F74)
	S109= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S92,S90,S108)
	S110= CtrlIR_IMMU=0                                         Premise(F75)
	S111= CtrlICacheReg=0                                       Premise(F76)
	S112= CtrlIR_ID=1                                           Premise(F77)
	S113= [IR_ID]={5,rS,rT,offset}                              IR_ID-Write(S88,S112)
	S114= CtrlIMem=0                                            Premise(F78)
	S115= IMem[{pid,addr}]={5,rS,rT,offset}                     IMem-Hold(S47,S114)
	S116= CtrlIRMux=0                                           Premise(F79)
	S117= CtrlGPR=0                                             Premise(F80)
	S118= GPR[rS]=a                                             GPR-Hold(S67,S117)
	S119= GPR[rT]=b                                             GPR-Hold(S68,S117)
	S120= CtrlA_EX=0                                            Premise(F81)
	S121= CtrlB_EX=0                                            Premise(F82)
	S122= CtrlIR_EX=0                                           Premise(F83)
	S123= CtrlALUOut_MEM=0                                      Premise(F84)
	S124= CtrlConditionReg_MEM=0                                Premise(F85)
	S125= CtrlIR_MEM=0                                          Premise(F86)
	S126= CtrlIR_DMMU1=0                                        Premise(F87)
	S127= CtrlIR_WB=0                                           Premise(F88)
	S128= CtrlA_MEM=0                                           Premise(F89)
	S129= CtrlA_WB=0                                            Premise(F90)
	S130= CtrlB_MEM=0                                           Premise(F91)
	S131= CtrlB_WB=0                                            Premise(F92)
	S132= CtrlALUOut_WB=0                                       Premise(F93)
	S133= CtrlConditionReg_DMMU1=0                              Premise(F94)
	S134= CtrlConditionReg_WB=0                                 Premise(F95)
	S135= CtrlIR_DMMU2=0                                        Premise(F96)
	S136= CtrlConditionReg_DMMU2=0                              Premise(F97)

ID	S137= CP0.ASID=pid                                          CP0-Read-ASID(S98)
	S138= PC.Out=addr+4                                         PC-Out(S104)
	S139= PC.CIA=addr                                           PC-Out(S105)
	S140= PC.CIA31_28=addr[31:28]                               PC-Out(S105)
	S141= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S107)
	S142= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S107)
	S143= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S107)
	S144= IR_ID.Out={5,rS,rT,offset}                            IR-Out(S113)
	S145= IR_ID.Out31_26=5                                      IR-Out(S113)
	S146= IR_ID.Out25_21=rS                                     IR-Out(S113)
	S147= IR_ID.Out20_16=rT                                     IR-Out(S113)
	S148= IR_ID.Out15_0=offset                                  IR-Out(S113)
	S149= IR_ID.Out=>FU.IR_ID                                   Premise(F98)
	S150= FU.IR_ID={5,rS,rT,offset}                             Path(S144,S149)
	S151= CU_ID.IMMUHitOut=>CU_EX.IMMUHit                       Premise(F99)
	S152= CU_ID.ICacheHitOut=>CU_EX.ICacheHit                   Premise(F100)
	S153= IR_ID.Out31_26=>CU_ID.Op                              Premise(F101)
	S154= CU_ID.Op=5                                            Path(S145,S153)
	S155= IR_ID.Out25_21=>GPR.RReg1                             Premise(F102)
	S156= GPR.RReg1=rS                                          Path(S146,S155)
	S157= GPR.Rdata1=a                                          GPR-Read(S156,S118)
	S158= IR_ID.Out20_16=>GPR.RReg2                             Premise(F103)
	S159= GPR.RReg2=rT                                          Path(S147,S158)
	S160= GPR.Rdata2=b                                          GPR-Read(S159,S119)
	S161= GPR.Rdata1=>FU.InID1                                  Premise(F104)
	S162= FU.InID1=a                                            Path(S157,S161)
	S163= FU.OutID1=FU(a)                                       FU-Forward(S162)
	S164= IR_ID.Out25_21=>FU.InID1_RReg                         Premise(F105)
	S165= FU.InID1_RReg=rS                                      Path(S146,S164)
	S166= FU.OutID1=>A_EX.In                                    Premise(F106)
	S167= A_EX.In=FU(a)                                         Path(S163,S166)
	S168= GPR.Rdata2=>FU.InID2                                  Premise(F107)
	S169= FU.InID2=b                                            Path(S160,S168)
	S170= FU.OutID2=FU(b)                                       FU-Forward(S169)
	S171= IR_ID.Out20_16=>FU.InID2_RReg                         Premise(F108)
	S172= FU.InID2_RReg=rT                                      Path(S147,S171)
	S173= FU.OutID2=>B_EX.In                                    Premise(F109)
	S174= B_EX.In=FU(b)                                         Path(S170,S173)
	S175= IR_ID.Out=>IR_EX.In                                   Premise(F110)
	S176= IR_EX.In={5,rS,rT,offset}                             Path(S144,S175)
	S177= FU.Halt_ID=>CU_ID.Halt                                Premise(F111)
	S178= FU.Bub_ID=>CU_ID.Bub                                  Premise(F112)
	S179= CtrlASIDIn=0                                          Premise(F113)
	S180= CtrlCP0=0                                             Premise(F114)
	S181= CP0[ASID]=pid                                         CP0-Hold(S98,S180)
	S182= CtrlEPCIn=0                                           Premise(F115)
	S183= CtrlExCodeIn=0                                        Premise(F116)
	S184= CtrlIMMU=0                                            Premise(F117)
	S185= CtrlPC=0                                              Premise(F118)
	S186= CtrlPCInc=0                                           Premise(F119)
	S187= PC[CIA]=addr                                          PC-Hold(S105,S186)
	S188= PC[Out]=addr+4                                        PC-Hold(S104,S185,S186)
	S189= CtrlIAddrReg=0                                        Premise(F120)
	S190= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S107,S189)
	S191= CtrlICache=0                                          Premise(F121)
	S192= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S109,S191)
	S193= CtrlIR_IMMU=0                                         Premise(F122)
	S194= CtrlICacheReg=0                                       Premise(F123)
	S195= CtrlIR_ID=0                                           Premise(F124)
	S196= [IR_ID]={5,rS,rT,offset}                              IR_ID-Hold(S113,S195)
	S197= CtrlIMem=0                                            Premise(F125)
	S198= IMem[{pid,addr}]={5,rS,rT,offset}                     IMem-Hold(S115,S197)
	S199= CtrlIRMux=0                                           Premise(F126)
	S200= CtrlGPR=0                                             Premise(F127)
	S201= GPR[rS]=a                                             GPR-Hold(S118,S200)
	S202= GPR[rT]=b                                             GPR-Hold(S119,S200)
	S203= CtrlA_EX=1                                            Premise(F128)
	S204= [A_EX]=FU(a)                                          A_EX-Write(S167,S203)
	S205= CtrlB_EX=1                                            Premise(F129)
	S206= [B_EX]=FU(b)                                          B_EX-Write(S174,S205)
	S207= CtrlIR_EX=1                                           Premise(F130)
	S208= [IR_EX]={5,rS,rT,offset}                              IR_EX-Write(S176,S207)
	S209= CtrlALUOut_MEM=0                                      Premise(F131)
	S210= CtrlConditionReg_MEM=0                                Premise(F132)
	S211= CtrlIR_MEM=0                                          Premise(F133)
	S212= CtrlIR_DMMU1=0                                        Premise(F134)
	S213= CtrlIR_WB=0                                           Premise(F135)
	S214= CtrlA_MEM=0                                           Premise(F136)
	S215= CtrlA_WB=0                                            Premise(F137)
	S216= CtrlB_MEM=0                                           Premise(F138)
	S217= CtrlB_WB=0                                            Premise(F139)
	S218= CtrlALUOut_WB=0                                       Premise(F140)
	S219= CtrlConditionReg_DMMU1=0                              Premise(F141)
	S220= CtrlConditionReg_WB=0                                 Premise(F142)
	S221= CtrlIR_DMMU2=0                                        Premise(F143)
	S222= CtrlConditionReg_DMMU2=0                              Premise(F144)

EX	S223= CP0.ASID=pid                                          CP0-Read-ASID(S181)
	S224= PC.CIA=addr                                           PC-Out(S187)
	S225= PC.CIA31_28=addr[31:28]                               PC-Out(S187)
	S226= PC.Out=addr+4                                         PC-Out(S188)
	S227= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S190)
	S228= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S190)
	S229= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S190)
	S230= IR_ID.Out={5,rS,rT,offset}                            IR-Out(S196)
	S231= IR_ID.Out31_26=5                                      IR-Out(S196)
	S232= IR_ID.Out25_21=rS                                     IR-Out(S196)
	S233= IR_ID.Out20_16=rT                                     IR-Out(S196)
	S234= IR_ID.Out15_0=offset                                  IR-Out(S196)
	S235= A_EX.Out=FU(a)                                        A_EX-Out(S204)
	S236= A_EX.Out1_0={FU(a)}[1:0]                              A_EX-Out(S204)
	S237= A_EX.Out4_0={FU(a)}[4:0]                              A_EX-Out(S204)
	S238= B_EX.Out=FU(b)                                        B_EX-Out(S206)
	S239= B_EX.Out1_0={FU(b)}[1:0]                              B_EX-Out(S206)
	S240= B_EX.Out4_0={FU(b)}[4:0]                              B_EX-Out(S206)
	S241= IR_EX.Out={5,rS,rT,offset}                            IR_EX-Out(S208)
	S242= IR_EX.Out31_26=5                                      IR_EX-Out(S208)
	S243= IR_EX.Out25_21=rS                                     IR_EX-Out(S208)
	S244= IR_EX.Out20_16=rT                                     IR_EX-Out(S208)
	S245= IR_EX.Out15_0=offset                                  IR_EX-Out(S208)
	S246= IR_EX.Out=>FU.IR_EX                                   Premise(F145)
	S247= FU.IR_EX={5,rS,rT,offset}                             Path(S241,S246)
	S248= CU_EX.IMMUHitOut=>CU_MEM.IMMUHit                      Premise(F146)
	S249= CU_EX.ICacheHitOut=>CU_MEM.ICacheHit                  Premise(F147)
	S250= IR_EX.Out31_26=>CU_EX.Op                              Premise(F148)
	S251= CU_EX.Op=5                                            Path(S242,S250)
	S252= IR_EX.Out15_0=>SEXT.In                                Premise(F149)
	S253= SEXT.In=offset                                        Path(S245,S252)
	S254= SEXT.Out={14{offset[15]},offset,2{0}}                 SEXT(S253)
	S255= PC.CIA=>ALU.A                                         Premise(F150)
	S256= ALU.A=addr                                            Path(S224,S255)
	S257= SEXT.Out=>ALU.B                                       Premise(F151)
	S258= ALU.B={14{offset[15]},offset,2{0}}                    Path(S254,S257)
	S259= ALU.Func=6'b010010                                    Premise(F152)
	S260= ALU.Out=addr+{14{offset[15]},offset,2{0}}             ALU(S256,S258)
	S261= ALU.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]   ALU(S256,S258)
	S262= ALU.CMP=Compare0(addr+{14{offset[15]},offset,2{0}})   ALU(S256,S258)
	S263= ALU.OV=OverFlow(addr+{14{offset[15]},offset,2{0}})    ALU(S256,S258)
	S264= ALU.CA=Carry(addr+{14{offset[15]},offset,2{0}})       ALU(S256,S258)
	S265= ALU.Out=>ALUOut_MEM.In                                Premise(F153)
	S266= ALUOut_MEM.In=addr+{14{offset[15]},offset,2{0}}       Path(S260,S265)
	S267= A_EX.Out=>CMPU.A                                      Premise(F154)
	S268= CMPU.A=FU(a)                                          Path(S235,S267)
	S269= B_EX.Out=>CMPU.B                                      Premise(F155)
	S270= CMPU.B=FU(b)                                          Path(S238,S269)
	S271= CMPU.Func=6'b000011                                   Premise(F156)
	S272= CMPU.Out=CompareS(FU(a),FU(b))                        CMPU-CMPS(S268,S270)
	S273= CMPU.zero=CompareS(FU(a),FU(b))                       CMPU-CMPS(S268,S270)
	S274= CMPU.gt=CompareS(FU(a),FU(b))                         CMPU-CMPS(S268,S270)
	S275= CMPU.lt=CompareS(FU(a),FU(b))                         CMPU-CMPS(S268,S270)
	S276= CMPU.zero=>ConditionReg_MEM.In                        Premise(F157)
	S277= ConditionReg_MEM.In=CompareS(FU(a),FU(b))             Path(S273,S276)
	S278= IR_EX.Out=>IR_MEM.In                                  Premise(F158)
	S279= IR_MEM.In={5,rS,rT,offset}                            Path(S241,S278)
	S280= FU.InEX_WReg=5'b00000                                 Premise(F159)
	S281= CtrlASIDIn=0                                          Premise(F160)
	S282= CtrlCP0=0                                             Premise(F161)
	S283= CP0[ASID]=pid                                         CP0-Hold(S181,S282)
	S284= CtrlEPCIn=0                                           Premise(F162)
	S285= CtrlExCodeIn=0                                        Premise(F163)
	S286= CtrlIMMU=0                                            Premise(F164)
	S287= CtrlPC=0                                              Premise(F165)
	S288= CtrlPCInc=0                                           Premise(F166)
	S289= PC[CIA]=addr                                          PC-Hold(S187,S288)
	S290= PC[Out]=addr+4                                        PC-Hold(S188,S287,S288)
	S291= CtrlIAddrReg=0                                        Premise(F167)
	S292= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S190,S291)
	S293= CtrlICache=0                                          Premise(F168)
	S294= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S192,S293)
	S295= CtrlIR_IMMU=0                                         Premise(F169)
	S296= CtrlICacheReg=0                                       Premise(F170)
	S297= CtrlIR_ID=0                                           Premise(F171)
	S298= [IR_ID]={5,rS,rT,offset}                              IR_ID-Hold(S196,S297)
	S299= CtrlIMem=0                                            Premise(F172)
	S300= IMem[{pid,addr}]={5,rS,rT,offset}                     IMem-Hold(S198,S299)
	S301= CtrlIRMux=0                                           Premise(F173)
	S302= CtrlGPR=0                                             Premise(F174)
	S303= GPR[rS]=a                                             GPR-Hold(S201,S302)
	S304= GPR[rT]=b                                             GPR-Hold(S202,S302)
	S305= CtrlA_EX=0                                            Premise(F175)
	S306= [A_EX]=FU(a)                                          A_EX-Hold(S204,S305)
	S307= CtrlB_EX=0                                            Premise(F176)
	S308= [B_EX]=FU(b)                                          B_EX-Hold(S206,S307)
	S309= CtrlIR_EX=0                                           Premise(F177)
	S310= [IR_EX]={5,rS,rT,offset}                              IR_EX-Hold(S208,S309)
	S311= CtrlALUOut_MEM=1                                      Premise(F178)
	S312= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Write(S266,S311)
	S313= CtrlConditionReg_MEM=1                                Premise(F179)
	S314= [ConditionReg_MEM]=CompareS(FU(a),FU(b))              ConditionReg_MEM-Write(S277,S313)
	S315= CtrlIR_MEM=1                                          Premise(F180)
	S316= [IR_MEM]={5,rS,rT,offset}                             IR_MEM-Write(S279,S315)
	S317= CtrlIR_DMMU1=0                                        Premise(F181)
	S318= CtrlIR_WB=0                                           Premise(F182)
	S319= CtrlA_MEM=0                                           Premise(F183)
	S320= CtrlA_WB=0                                            Premise(F184)
	S321= CtrlB_MEM=0                                           Premise(F185)
	S322= CtrlB_WB=0                                            Premise(F186)
	S323= CtrlALUOut_WB=0                                       Premise(F187)
	S324= CtrlConditionReg_DMMU1=0                              Premise(F188)
	S325= CtrlConditionReg_WB=0                                 Premise(F189)
	S326= CtrlIR_DMMU2=0                                        Premise(F190)
	S327= CtrlConditionReg_DMMU2=0                              Premise(F191)

MEM	S328= CP0.ASID=pid                                          CP0-Read-ASID(S283)
	S329= PC.CIA=addr                                           PC-Out(S289)
	S330= PC.CIA31_28=addr[31:28]                               PC-Out(S289)
	S331= PC.Out=addr+4                                         PC-Out(S290)
	S332= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S292)
	S333= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S292)
	S334= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S292)
	S335= IR_ID.Out={5,rS,rT,offset}                            IR-Out(S298)
	S336= IR_ID.Out31_26=5                                      IR-Out(S298)
	S337= IR_ID.Out25_21=rS                                     IR-Out(S298)
	S338= IR_ID.Out20_16=rT                                     IR-Out(S298)
	S339= IR_ID.Out15_0=offset                                  IR-Out(S298)
	S340= A_EX.Out=FU(a)                                        A_EX-Out(S306)
	S341= A_EX.Out1_0={FU(a)}[1:0]                              A_EX-Out(S306)
	S342= A_EX.Out4_0={FU(a)}[4:0]                              A_EX-Out(S306)
	S343= B_EX.Out=FU(b)                                        B_EX-Out(S308)
	S344= B_EX.Out1_0={FU(b)}[1:0]                              B_EX-Out(S308)
	S345= B_EX.Out4_0={FU(b)}[4:0]                              B_EX-Out(S308)
	S346= IR_EX.Out={5,rS,rT,offset}                            IR_EX-Out(S310)
	S347= IR_EX.Out31_26=5                                      IR_EX-Out(S310)
	S348= IR_EX.Out25_21=rS                                     IR_EX-Out(S310)
	S349= IR_EX.Out20_16=rT                                     IR_EX-Out(S310)
	S350= IR_EX.Out15_0=offset                                  IR_EX-Out(S310)
	S351= ALUOut_MEM.Out=addr+{14{offset[15]},offset,2{0}}      ALUOut_MEM-Out(S312)
	S352= ALUOut_MEM.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut_MEM-Out(S312)
	S353= ALUOut_MEM.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut_MEM-Out(S312)
	S354= ConditionReg_MEM.Out=CompareS(FU(a),FU(b))            ConditionReg_MEM-Out(S314)
	S355= ConditionReg_MEM.Out1_0={CompareS(FU(a),FU(b))}[1:0]  ConditionReg_MEM-Out(S314)
	S356= ConditionReg_MEM.Out4_0={CompareS(FU(a),FU(b))}[4:0]  ConditionReg_MEM-Out(S314)
	S357= IR_MEM.Out={5,rS,rT,offset}                           IR_MEM-Out(S316)
	S358= IR_MEM.Out31_26=5                                     IR_MEM-Out(S316)
	S359= IR_MEM.Out25_21=rS                                    IR_MEM-Out(S316)
	S360= IR_MEM.Out20_16=rT                                    IR_MEM-Out(S316)
	S361= IR_MEM.Out15_0=offset                                 IR_MEM-Out(S316)
	S362= IR_MEM.Out=>FU.IR_MEM                                 Premise(F192)
	S363= FU.IR_MEM={5,rS,rT,offset}                            Path(S357,S362)
	S364= CU_MEM.IMMUHitOut=>CU_DMMU1.IMMUHit                   Premise(F193)
	S365= CU_MEM.ICacheHitOut=>CU_DMMU1.ICacheHit               Premise(F194)
	S366= CU_MEM.DMMUHitOut=>CU_DMMU1.DMMUHit                   Premise(F195)
	S367= CU_MEM.DCacheHitOut=>CU_DMMU1.DCacheHit               Premise(F196)
	S368= IR_MEM.Out31_26=>CU_MEM.Op                            Premise(F197)
	S369= CU_MEM.Op=5                                           Path(S358,S368)
	S370= ALUOut_MEM.Out=>PC.In                                 Premise(F198)
	S371= PC.In=addr+{14{offset[15]},offset,2{0}}               Path(S351,S370)
	S372= ConditionReg_MEM.Out=>CU_MEM.zero                     Premise(F199)
	S373= CU_MEM.zero=CompareS(FU(a),FU(b))                     Path(S354,S372)
	S374= IR_MEM.Out=>IR_DMMU1.In                               Premise(F200)
	S375= IR_DMMU1.In={5,rS,rT,offset}                          Path(S357,S374)
	S376= IR_MEM.Out=>IR_WB.In                                  Premise(F201)
	S377= IR_WB.In={5,rS,rT,offset}                             Path(S357,S376)
	S378= A_MEM.Out=>A_WB.In                                    Premise(F202)
	S379= B_MEM.Out=>B_WB.In                                    Premise(F203)
	S380= ALUOut_MEM.Out=>ALUOut_WB.In                          Premise(F204)
	S381= ALUOut_WB.In=addr+{14{offset[15]},offset,2{0}}        Path(S351,S380)
	S382= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In           Premise(F205)
	S383= ConditionReg_DMMU1.In=CompareS(FU(a),FU(b))           Path(S354,S382)
	S384= ConditionReg_MEM.Out=>ConditionReg_WB.In              Premise(F206)
	S385= ConditionReg_WB.In=CompareS(FU(a),FU(b))              Path(S354,S384)
	S386= CU_MEM.IMMUHitOut=>CU_WB.IMMUHit                      Premise(F207)
	S387= CU_MEM.ICacheHitOut=>CU_WB.ICacheHit                  Premise(F208)
	S388= FU.InMEM_WReg=5'b00000                                Premise(F209)
	S389= CtrlASIDIn=0                                          Premise(F210)
	S390= CtrlCP0=0                                             Premise(F211)
	S391= CP0[ASID]=pid                                         CP0-Hold(S283,S390)
	S392= CtrlEPCIn=0                                           Premise(F212)
	S393= CtrlExCodeIn=0                                        Premise(F213)
	S394= CtrlIMMU=0                                            Premise(F214)
	S395= CtrlPC=1                                              Premise(F215)
	S396= CtrlPCInc=0                                           Premise(F216)
	S397= PC[CIA]=addr                                          PC-Hold(S289,S396)
	S398= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Write(S371,S395,S396)
	S399= CtrlIAddrReg=0                                        Premise(F217)
	S400= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S292,S399)
	S401= CtrlICache=0                                          Premise(F218)
	S402= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S294,S401)
	S403= CtrlIR_IMMU=0                                         Premise(F219)
	S404= CtrlICacheReg=0                                       Premise(F220)
	S405= CtrlIR_ID=0                                           Premise(F221)
	S406= [IR_ID]={5,rS,rT,offset}                              IR_ID-Hold(S298,S405)
	S407= CtrlIMem=0                                            Premise(F222)
	S408= IMem[{pid,addr}]={5,rS,rT,offset}                     IMem-Hold(S300,S407)
	S409= CtrlIRMux=0                                           Premise(F223)
	S410= CtrlGPR=0                                             Premise(F224)
	S411= GPR[rS]=a                                             GPR-Hold(S303,S410)
	S412= GPR[rT]=b                                             GPR-Hold(S304,S410)
	S413= CtrlA_EX=0                                            Premise(F225)
	S414= [A_EX]=FU(a)                                          A_EX-Hold(S306,S413)
	S415= CtrlB_EX=0                                            Premise(F226)
	S416= [B_EX]=FU(b)                                          B_EX-Hold(S308,S415)
	S417= CtrlIR_EX=0                                           Premise(F227)
	S418= [IR_EX]={5,rS,rT,offset}                              IR_EX-Hold(S310,S417)
	S419= CtrlALUOut_MEM=0                                      Premise(F228)
	S420= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Hold(S312,S419)
	S421= CtrlConditionReg_MEM=0                                Premise(F229)
	S422= [ConditionReg_MEM]=CompareS(FU(a),FU(b))              ConditionReg_MEM-Hold(S314,S421)
	S423= CtrlIR_MEM=0                                          Premise(F230)
	S424= [IR_MEM]={5,rS,rT,offset}                             IR_MEM-Hold(S316,S423)
	S425= CtrlIR_DMMU1=1                                        Premise(F231)
	S426= [IR_DMMU1]={5,rS,rT,offset}                           IR_DMMU1-Write(S375,S425)
	S427= CtrlIR_WB=1                                           Premise(F232)
	S428= [IR_WB]={5,rS,rT,offset}                              IR_WB-Write(S377,S427)
	S429= CtrlA_MEM=0                                           Premise(F233)
	S430= CtrlA_WB=1                                            Premise(F234)
	S431= CtrlB_MEM=0                                           Premise(F235)
	S432= CtrlB_WB=1                                            Premise(F236)
	S433= CtrlALUOut_WB=1                                       Premise(F237)
	S434= [ALUOut_WB]=addr+{14{offset[15]},offset,2{0}}         ALUOut_WB-Write(S381,S433)
	S435= CtrlConditionReg_DMMU1=1                              Premise(F238)
	S436= [ConditionReg_DMMU1]=CompareS(FU(a),FU(b))            ConditionReg_DMMU1-Write(S383,S435)
	S437= CtrlConditionReg_WB=1                                 Premise(F239)
	S438= [ConditionReg_WB]=CompareS(FU(a),FU(b))               ConditionReg_WB-Write(S385,S437)
	S439= CtrlIR_DMMU2=0                                        Premise(F240)
	S440= CtrlConditionReg_DMMU2=0                              Premise(F241)

WB	S441= CP0.ASID=pid                                          CP0-Read-ASID(S391)
	S442= PC.CIA=addr                                           PC-Out(S397)
	S443= PC.CIA31_28=addr[31:28]                               PC-Out(S397)
	S444= PC.Out=addr+{14{offset[15]},offset,2{0}}              PC-Out(S398)
	S445= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S400)
	S446= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S400)
	S447= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S400)
	S448= IR_ID.Out={5,rS,rT,offset}                            IR-Out(S406)
	S449= IR_ID.Out31_26=5                                      IR-Out(S406)
	S450= IR_ID.Out25_21=rS                                     IR-Out(S406)
	S451= IR_ID.Out20_16=rT                                     IR-Out(S406)
	S452= IR_ID.Out15_0=offset                                  IR-Out(S406)
	S453= A_EX.Out=FU(a)                                        A_EX-Out(S414)
	S454= A_EX.Out1_0={FU(a)}[1:0]                              A_EX-Out(S414)
	S455= A_EX.Out4_0={FU(a)}[4:0]                              A_EX-Out(S414)
	S456= B_EX.Out=FU(b)                                        B_EX-Out(S416)
	S457= B_EX.Out1_0={FU(b)}[1:0]                              B_EX-Out(S416)
	S458= B_EX.Out4_0={FU(b)}[4:0]                              B_EX-Out(S416)
	S459= IR_EX.Out={5,rS,rT,offset}                            IR_EX-Out(S418)
	S460= IR_EX.Out31_26=5                                      IR_EX-Out(S418)
	S461= IR_EX.Out25_21=rS                                     IR_EX-Out(S418)
	S462= IR_EX.Out20_16=rT                                     IR_EX-Out(S418)
	S463= IR_EX.Out15_0=offset                                  IR_EX-Out(S418)
	S464= ALUOut_MEM.Out=addr+{14{offset[15]},offset,2{0}}      ALUOut_MEM-Out(S420)
	S465= ALUOut_MEM.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut_MEM-Out(S420)
	S466= ALUOut_MEM.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut_MEM-Out(S420)
	S467= ConditionReg_MEM.Out=CompareS(FU(a),FU(b))            ConditionReg_MEM-Out(S422)
	S468= ConditionReg_MEM.Out1_0={CompareS(FU(a),FU(b))}[1:0]  ConditionReg_MEM-Out(S422)
	S469= ConditionReg_MEM.Out4_0={CompareS(FU(a),FU(b))}[4:0]  ConditionReg_MEM-Out(S422)
	S470= IR_MEM.Out={5,rS,rT,offset}                           IR_MEM-Out(S424)
	S471= IR_MEM.Out31_26=5                                     IR_MEM-Out(S424)
	S472= IR_MEM.Out25_21=rS                                    IR_MEM-Out(S424)
	S473= IR_MEM.Out20_16=rT                                    IR_MEM-Out(S424)
	S474= IR_MEM.Out15_0=offset                                 IR_MEM-Out(S424)
	S475= IR_DMMU1.Out={5,rS,rT,offset}                         IR_DMMU1-Out(S426)
	S476= IR_DMMU1.Out31_26=5                                   IR_DMMU1-Out(S426)
	S477= IR_DMMU1.Out25_21=rS                                  IR_DMMU1-Out(S426)
	S478= IR_DMMU1.Out20_16=rT                                  IR_DMMU1-Out(S426)
	S479= IR_DMMU1.Out15_0=offset                               IR_DMMU1-Out(S426)
	S480= IR_WB.Out={5,rS,rT,offset}                            IR-Out(S428)
	S481= IR_WB.Out31_26=5                                      IR-Out(S428)
	S482= IR_WB.Out25_21=rS                                     IR-Out(S428)
	S483= IR_WB.Out20_16=rT                                     IR-Out(S428)
	S484= IR_WB.Out15_0=offset                                  IR-Out(S428)
	S485= ALUOut_WB.Out=addr+{14{offset[15]},offset,2{0}}       ALUOut_WB-Out(S434)
	S486= ALUOut_WB.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut_WB-Out(S434)
	S487= ALUOut_WB.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut_WB-Out(S434)
	S488= ConditionReg_DMMU1.Out=CompareS(FU(a),FU(b))          ConditionReg_DMMU1-Out(S436)
	S489= ConditionReg_DMMU1.Out1_0={CompareS(FU(a),FU(b))}[1:0]ConditionReg_DMMU1-Out(S436)
	S490= ConditionReg_DMMU1.Out4_0={CompareS(FU(a),FU(b))}[4:0]ConditionReg_DMMU1-Out(S436)
	S491= ConditionReg_WB.Out=CompareS(FU(a),FU(b))             ConditionReg_WB-Out(S438)
	S492= ConditionReg_WB.Out1_0={CompareS(FU(a),FU(b))}[1:0]   ConditionReg_WB-Out(S438)
	S493= ConditionReg_WB.Out4_0={CompareS(FU(a),FU(b))}[4:0]   ConditionReg_WB-Out(S438)
	S494= IR_WB.Out=>FU.IR_WB                                   Premise(F323)
	S495= FU.IR_WB={5,rS,rT,offset}                             Path(S480,S494)
	S496= IR_WB.Out31_26=>CU_WB.Op                              Premise(F324)
	S497= CU_WB.Op=5                                            Path(S481,S496)
	S498= FU.InWB_WReg=5'b00000                                 Premise(F325)
	S499= CtrlASIDIn=0                                          Premise(F326)
	S500= CtrlCP0=0                                             Premise(F327)
	S501= CP0[ASID]=pid                                         CP0-Hold(S391,S500)
	S502= CtrlEPCIn=0                                           Premise(F328)
	S503= CtrlExCodeIn=0                                        Premise(F329)
	S504= CtrlIMMU=0                                            Premise(F330)
	S505= CtrlPC=0                                              Premise(F331)
	S506= CtrlPCInc=0                                           Premise(F332)
	S507= PC[CIA]=addr                                          PC-Hold(S397,S506)
	S508= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Hold(S398,S505,S506)
	S509= CtrlIAddrReg=0                                        Premise(F333)
	S510= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S400,S509)
	S511= CtrlICache=0                                          Premise(F334)
	S512= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S402,S511)
	S513= CtrlIR_IMMU=0                                         Premise(F335)
	S514= CtrlICacheReg=0                                       Premise(F336)
	S515= CtrlIR_ID=0                                           Premise(F337)
	S516= [IR_ID]={5,rS,rT,offset}                              IR_ID-Hold(S406,S515)
	S517= CtrlIMem=0                                            Premise(F338)
	S518= IMem[{pid,addr}]={5,rS,rT,offset}                     IMem-Hold(S408,S517)
	S519= CtrlIRMux=0                                           Premise(F339)
	S520= CtrlGPR=0                                             Premise(F340)
	S521= GPR[rS]=a                                             GPR-Hold(S411,S520)
	S522= GPR[rT]=b                                             GPR-Hold(S412,S520)
	S523= CtrlA_EX=0                                            Premise(F341)
	S524= [A_EX]=FU(a)                                          A_EX-Hold(S414,S523)
	S525= CtrlB_EX=0                                            Premise(F342)
	S526= [B_EX]=FU(b)                                          B_EX-Hold(S416,S525)
	S527= CtrlIR_EX=0                                           Premise(F343)
	S528= [IR_EX]={5,rS,rT,offset}                              IR_EX-Hold(S418,S527)
	S529= CtrlALUOut_MEM=0                                      Premise(F344)
	S530= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Hold(S420,S529)
	S531= CtrlConditionReg_MEM=0                                Premise(F345)
	S532= [ConditionReg_MEM]=CompareS(FU(a),FU(b))              ConditionReg_MEM-Hold(S422,S531)
	S533= CtrlIR_MEM=0                                          Premise(F346)
	S534= [IR_MEM]={5,rS,rT,offset}                             IR_MEM-Hold(S424,S533)
	S535= CtrlIR_DMMU1=0                                        Premise(F347)
	S536= [IR_DMMU1]={5,rS,rT,offset}                           IR_DMMU1-Hold(S426,S535)
	S537= CtrlIR_WB=0                                           Premise(F348)
	S538= [IR_WB]={5,rS,rT,offset}                              IR_WB-Hold(S428,S537)
	S539= CtrlA_MEM=0                                           Premise(F349)
	S540= CtrlA_WB=0                                            Premise(F350)
	S541= CtrlB_MEM=0                                           Premise(F351)
	S542= CtrlB_WB=0                                            Premise(F352)
	S543= CtrlALUOut_WB=0                                       Premise(F353)
	S544= [ALUOut_WB]=addr+{14{offset[15]},offset,2{0}}         ALUOut_WB-Hold(S434,S543)
	S545= CtrlConditionReg_DMMU1=0                              Premise(F354)
	S546= [ConditionReg_DMMU1]=CompareS(FU(a),FU(b))            ConditionReg_DMMU1-Hold(S436,S545)
	S547= CtrlConditionReg_WB=0                                 Premise(F355)
	S548= [ConditionReg_WB]=CompareS(FU(a),FU(b))               ConditionReg_WB-Hold(S438,S547)
	S549= CtrlIR_DMMU2=0                                        Premise(F356)
	S550= CtrlConditionReg_DMMU2=0                              Premise(F357)

POST	S501= CP0[ASID]=pid                                         CP0-Hold(S391,S500)
	S507= PC[CIA]=addr                                          PC-Hold(S397,S506)
	S508= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Hold(S398,S505,S506)
	S510= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S400,S509)
	S512= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S402,S511)
	S516= [IR_ID]={5,rS,rT,offset}                              IR_ID-Hold(S406,S515)
	S518= IMem[{pid,addr}]={5,rS,rT,offset}                     IMem-Hold(S408,S517)
	S521= GPR[rS]=a                                             GPR-Hold(S411,S520)
	S522= GPR[rT]=b                                             GPR-Hold(S412,S520)
	S524= [A_EX]=FU(a)                                          A_EX-Hold(S414,S523)
	S526= [B_EX]=FU(b)                                          B_EX-Hold(S416,S525)
	S528= [IR_EX]={5,rS,rT,offset}                              IR_EX-Hold(S418,S527)
	S530= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Hold(S420,S529)
	S532= [ConditionReg_MEM]=CompareS(FU(a),FU(b))              ConditionReg_MEM-Hold(S422,S531)
	S534= [IR_MEM]={5,rS,rT,offset}                             IR_MEM-Hold(S424,S533)
	S536= [IR_DMMU1]={5,rS,rT,offset}                           IR_DMMU1-Hold(S426,S535)
	S538= [IR_WB]={5,rS,rT,offset}                              IR_WB-Hold(S428,S537)
	S544= [ALUOut_WB]=addr+{14{offset[15]},offset,2{0}}         ALUOut_WB-Hold(S434,S543)
	S546= [ConditionReg_DMMU1]=CompareS(FU(a),FU(b))            ConditionReg_DMMU1-Hold(S436,S545)
	S548= [ConditionReg_WB]=CompareS(FU(a),FU(b))               ConditionReg_WB-Hold(S438,S547)

