
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={17,8,cc,0,1,offset}                   Premise(F2)
	S3= ICache[addr]={17,8,cc,0,1,offset}                       Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= CP0.ASID=>IMMU.PID                                      Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S7,S9)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S13= IAddrReg.In={pid,addr}                                 Path(S10,S12)
	S14= IMMU.Hit=>CU.IMMUHit                                   Premise(F7)
	S15= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S11,S14)
	S16= PC.Out=>ICache.IEA                                     Premise(F8)
	S17= ICache.IEA=addr                                        Path(S5,S16)
	S18= ICache.Hit=ICacheHit(addr)                             ICache-Search(S17)
	S19= ICache.Out={17,8,cc,0,1,offset}                        ICache-Search(S17,S3)
	S20= ICache.Out=>IR.In                                      Premise(F9)
	S21= IR.In={17,8,cc,0,1,offset}                             Path(S19,S20)
	S22= ICache.Out=>ICacheReg.In                               Premise(F10)
	S23= ICacheReg.In={17,8,cc,0,1,offset}                      Path(S19,S22)
	S24= ICache.Hit=>CU.ICacheHit                               Premise(F11)
	S25= CU.ICacheHit=ICacheHit(addr)                           Path(S18,S24)
	S26= CtrlASIDIn=0                                           Premise(F12)
	S27= CtrlCP0=0                                              Premise(F13)
	S28= CP0[ASID]=pid                                          CP0-Hold(S0,S27)
	S29= CtrlEPCIn=0                                            Premise(F14)
	S30= CtrlExCodeIn=0                                         Premise(F15)
	S31= CtrlIMMU=0                                             Premise(F16)
	S32= CtrlPC=0                                               Premise(F17)
	S33= CtrlPCInc=1                                            Premise(F18)
	S34= PC[Out]=addr+4                                         PC-Inc(S1,S32,S33)
	S35= PC[CIA]=addr                                           PC-Inc(S1,S32,S33)
	S36= CtrlIAddrReg=0                                         Premise(F19)
	S37= CtrlICache=0                                           Premise(F20)
	S38= ICache[addr]={17,8,cc,0,1,offset}                      ICache-Hold(S3,S37)
	S39= CtrlIR=1                                               Premise(F21)
	S40= [IR]={17,8,cc,0,1,offset}                              IR-Write(S21,S39)
	S41= CtrlICacheReg=0                                        Premise(F22)
	S42= CtrlIMem=0                                             Premise(F23)
	S43= IMem[{pid,addr}]={17,8,cc,0,1,offset}                  IMem-Hold(S2,S42)
	S44= CtrlIRMux=0                                            Premise(F24)
	S45= CtrlA=0                                                Premise(F25)
	S46= CtrlALUOut=0                                           Premise(F26)
	S47= CtrlCP1=0                                              Premise(F27)
	S48= CtrlConditionReg=0                                     Premise(F28)

ID	S49= CP0.ASID=pid                                           CP0-Read-ASID(S28)
	S50= PC.Out=addr+4                                          PC-Out(S34)
	S51= PC.CIA=addr                                            PC-Out(S35)
	S52= PC.CIA31_28=addr[31:28]                                PC-Out(S35)
	S53= IR.Out={17,8,cc,0,1,offset}                            IR-Out(S40)
	S54= IR.Out31_26=17                                         IR-Out(S40)
	S55= IR.Out25_21=8                                          IR-Out(S40)
	S56= IR.Out20_18=cc                                         IR-Out(S40)
	S57= IR.Out17=0                                             IR-Out(S40)
	S58= IR.Out16=1                                             IR-Out(S40)
	S59= IR.Out15_0=offset                                      IR-Out(S40)
	S60= IR.Out31_26=>CU.Op                                     Premise(F46)
	S61= CU.Op=17                                               Path(S54,S60)
	S62= IR.Out25_21=>CU.IRFunc2                                Premise(F47)
	S63= CU.IRFunc2=8                                           Path(S55,S62)
	S64= CU.Func=alu_add                                        CU(S61,S63)
	S65= IR.Out15_0=>SEXT.In                                    Premise(F48)
	S66= SEXT.In=offset                                         Path(S59,S65)
	S67= SEXT.Out={14{offset[15]},offset,2{0}}                  SEXT(S66)
	S68= SEXT.Out=>A.In                                         Premise(F49)
	S69= A.In={14{offset[15]},offset,2{0}}                      Path(S67,S68)
	S70= CtrlASIDIn=0                                           Premise(F50)
	S71= CtrlCP0=0                                              Premise(F51)
	S72= CP0[ASID]=pid                                          CP0-Hold(S28,S71)
	S73= CtrlEPCIn=0                                            Premise(F52)
	S74= CtrlExCodeIn=0                                         Premise(F53)
	S75= CtrlIMMU=0                                             Premise(F54)
	S76= CtrlPC=0                                               Premise(F55)
	S77= CtrlPCInc=0                                            Premise(F56)
	S78= PC[CIA]=addr                                           PC-Hold(S35,S77)
	S79= PC[Out]=addr+4                                         PC-Hold(S34,S76,S77)
	S80= CtrlIAddrReg=0                                         Premise(F57)
	S81= CtrlICache=0                                           Premise(F58)
	S82= ICache[addr]={17,8,cc,0,1,offset}                      ICache-Hold(S38,S81)
	S83= CtrlIR=0                                               Premise(F59)
	S84= [IR]={17,8,cc,0,1,offset}                              IR-Hold(S40,S83)
	S85= CtrlICacheReg=0                                        Premise(F60)
	S86= CtrlIMem=0                                             Premise(F61)
	S87= IMem[{pid,addr}]={17,8,cc,0,1,offset}                  IMem-Hold(S43,S86)
	S88= CtrlIRMux=0                                            Premise(F62)
	S89= CtrlA=1                                                Premise(F63)
	S90= [A]={14{offset[15]},offset,2{0}}                       A-Write(S69,S89)
	S91= CtrlALUOut=0                                           Premise(F64)
	S92= CtrlCP1=0                                              Premise(F65)
	S93= CtrlConditionReg=0                                     Premise(F66)

EX	S94= CP0.ASID=pid                                           CP0-Read-ASID(S72)
	S95= PC.CIA=addr                                            PC-Out(S78)
	S96= PC.CIA31_28=addr[31:28]                                PC-Out(S78)
	S97= PC.Out=addr+4                                          PC-Out(S79)
	S98= IR.Out={17,8,cc,0,1,offset}                            IR-Out(S84)
	S99= IR.Out31_26=17                                         IR-Out(S84)
	S100= IR.Out25_21=8                                         IR-Out(S84)
	S101= IR.Out20_18=cc                                        IR-Out(S84)
	S102= IR.Out17=0                                            IR-Out(S84)
	S103= IR.Out16=1                                            IR-Out(S84)
	S104= IR.Out15_0=offset                                     IR-Out(S84)
	S105= A.Out={14{offset[15]},offset,2{0}}                    A-Out(S90)
	S106= A.Out1_0={{14{offset[15]},offset,2{0}}}[1:0]          A-Out(S90)
	S107= A.Out4_0={{14{offset[15]},offset,2{0}}}[4:0]          A-Out(S90)
	S108= PC.CIA=>ALU.A                                         Premise(F67)
	S109= ALU.A=addr                                            Path(S95,S108)
	S110= A.Out=>ALU.B                                          Premise(F68)
	S111= ALU.B={14{offset[15]},offset,2{0}}                    Path(S105,S110)
	S112= ALU.Func=6'b010010                                    Premise(F69)
	S113= ALU.Out=addr+{14{offset[15]},offset,2{0}}             ALU(S109,S111)
	S114= ALU.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]   ALU(S109,S111)
	S115= ALU.CMP=Compare0(addr+{14{offset[15]},offset,2{0}})   ALU(S109,S111)
	S116= ALU.OV=OverFlow(addr+{14{offset[15]},offset,2{0}})    ALU(S109,S111)
	S117= ALU.CA=Carry(addr+{14{offset[15]},offset,2{0}})       ALU(S109,S111)
	S118= ALU.Out=>ALUOut.In                                    Premise(F70)
	S119= ALUOut.In=addr+{14{offset[15]},offset,2{0}}           Path(S113,S118)
	S120= CtrlASIDIn=0                                          Premise(F71)
	S121= CtrlCP0=0                                             Premise(F72)
	S122= CP0[ASID]=pid                                         CP0-Hold(S72,S121)
	S123= CtrlEPCIn=0                                           Premise(F73)
	S124= CtrlExCodeIn=0                                        Premise(F74)
	S125= CtrlIMMU=0                                            Premise(F75)
	S126= CtrlPC=0                                              Premise(F76)
	S127= CtrlPCInc=0                                           Premise(F77)
	S128= PC[CIA]=addr                                          PC-Hold(S78,S127)
	S129= PC[Out]=addr+4                                        PC-Hold(S79,S126,S127)
	S130= CtrlIAddrReg=0                                        Premise(F78)
	S131= CtrlICache=0                                          Premise(F79)
	S132= ICache[addr]={17,8,cc,0,1,offset}                     ICache-Hold(S82,S131)
	S133= CtrlIR=0                                              Premise(F80)
	S134= [IR]={17,8,cc,0,1,offset}                             IR-Hold(S84,S133)
	S135= CtrlICacheReg=0                                       Premise(F81)
	S136= CtrlIMem=0                                            Premise(F82)
	S137= IMem[{pid,addr}]={17,8,cc,0,1,offset}                 IMem-Hold(S87,S136)
	S138= CtrlIRMux=0                                           Premise(F83)
	S139= CtrlA=0                                               Premise(F84)
	S140= [A]={14{offset[15]},offset,2{0}}                      A-Hold(S90,S139)
	S141= CtrlALUOut=1                                          Premise(F85)
	S142= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Write(S119,S141)
	S143= CtrlCP1=0                                             Premise(F86)
	S144= CtrlConditionReg=0                                    Premise(F87)

MEM	S145= CP0.ASID=pid                                          CP0-Read-ASID(S122)
	S146= PC.CIA=addr                                           PC-Out(S128)
	S147= PC.CIA31_28=addr[31:28]                               PC-Out(S128)
	S148= PC.Out=addr+4                                         PC-Out(S129)
	S149= IR.Out={17,8,cc,0,1,offset}                           IR-Out(S134)
	S150= IR.Out31_26=17                                        IR-Out(S134)
	S151= IR.Out25_21=8                                         IR-Out(S134)
	S152= IR.Out20_18=cc                                        IR-Out(S134)
	S153= IR.Out17=0                                            IR-Out(S134)
	S154= IR.Out16=1                                            IR-Out(S134)
	S155= IR.Out15_0=offset                                     IR-Out(S134)
	S156= A.Out={14{offset[15]},offset,2{0}}                    A-Out(S140)
	S157= A.Out1_0={{14{offset[15]},offset,2{0}}}[1:0]          A-Out(S140)
	S158= A.Out4_0={{14{offset[15]},offset,2{0}}}[4:0]          A-Out(S140)
	S159= ALUOut.Out=addr+{14{offset[15]},offset,2{0}}          ALUOut-Out(S142)
	S160= ALUOut.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut-Out(S142)
	S161= ALUOut.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut-Out(S142)
	S162= IR.Out20_18=>CP1.cc                                   Premise(F88)
	S163= CP1.cc=cc                                             Path(S152,S162)
	S164= IR.Out16=>CP1.tf                                      Premise(F89)
	S165= CP1.tf=1                                              Path(S154,S164)
	S166= CP1.fp=FPConditionCode(cc,1)                          FP-PRODUCT(S163,S165)
	S167= CP1.fp=>ConditionReg.In                               Premise(F90)
	S168= ConditionReg.In=FPConditionCode(cc,1)                 Path(S166,S167)
	S169= CtrlASIDIn=0                                          Premise(F91)
	S170= CtrlCP0=0                                             Premise(F92)
	S171= CP0[ASID]=pid                                         CP0-Hold(S122,S170)
	S172= CtrlEPCIn=0                                           Premise(F93)
	S173= CtrlExCodeIn=0                                        Premise(F94)
	S174= CtrlIMMU=0                                            Premise(F95)
	S175= CtrlPC=0                                              Premise(F96)
	S176= CtrlPCInc=0                                           Premise(F97)
	S177= PC[CIA]=addr                                          PC-Hold(S128,S176)
	S178= PC[Out]=addr+4                                        PC-Hold(S129,S175,S176)
	S179= CtrlIAddrReg=0                                        Premise(F98)
	S180= CtrlICache=0                                          Premise(F99)
	S181= ICache[addr]={17,8,cc,0,1,offset}                     ICache-Hold(S132,S180)
	S182= CtrlIR=0                                              Premise(F100)
	S183= [IR]={17,8,cc,0,1,offset}                             IR-Hold(S134,S182)
	S184= CtrlICacheReg=0                                       Premise(F101)
	S185= CtrlIMem=0                                            Premise(F102)
	S186= IMem[{pid,addr}]={17,8,cc,0,1,offset}                 IMem-Hold(S137,S185)
	S187= CtrlIRMux=0                                           Premise(F103)
	S188= CtrlA=0                                               Premise(F104)
	S189= [A]={14{offset[15]},offset,2{0}}                      A-Hold(S140,S188)
	S190= CtrlALUOut=0                                          Premise(F105)
	S191= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Hold(S142,S190)
	S192= CtrlCP1=0                                             Premise(F106)
	S193= CtrlConditionReg=1                                    Premise(F107)
	S194= [ConditionReg]=FPConditionCode(cc,1)                  ConditionReg-Write(S168,S193)

WB	S195= CP0.ASID=pid                                          CP0-Read-ASID(S171)
	S196= PC.CIA=addr                                           PC-Out(S177)
	S197= PC.CIA31_28=addr[31:28]                               PC-Out(S177)
	S198= PC.Out=addr+4                                         PC-Out(S178)
	S199= IR.Out={17,8,cc,0,1,offset}                           IR-Out(S183)
	S200= IR.Out31_26=17                                        IR-Out(S183)
	S201= IR.Out25_21=8                                         IR-Out(S183)
	S202= IR.Out20_18=cc                                        IR-Out(S183)
	S203= IR.Out17=0                                            IR-Out(S183)
	S204= IR.Out16=1                                            IR-Out(S183)
	S205= IR.Out15_0=offset                                     IR-Out(S183)
	S206= A.Out={14{offset[15]},offset,2{0}}                    A-Out(S189)
	S207= A.Out1_0={{14{offset[15]},offset,2{0}}}[1:0]          A-Out(S189)
	S208= A.Out4_0={{14{offset[15]},offset,2{0}}}[4:0]          A-Out(S189)
	S209= ALUOut.Out=addr+{14{offset[15]},offset,2{0}}          ALUOut-Out(S191)
	S210= ALUOut.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut-Out(S191)
	S211= ALUOut.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut-Out(S191)
	S212= ConditionReg.Out=FPConditionCode(cc,1)                ConditionReg-Out(S194)
	S213= ConditionReg.Out1_0={FPConditionCode(cc,1)}[1:0]      ConditionReg-Out(S194)
	S214= ConditionReg.Out4_0={FPConditionCode(cc,1)}[4:0]      ConditionReg-Out(S194)
	S215= ALUOut.Out=>PC.In                                     Premise(F142)
	S216= PC.In=addr+{14{offset[15]},offset,2{0}}               Path(S209,S215)
	S217= ConditionReg.Out=>CU.fp                               Premise(F143)
	S218= CU.fp=FPConditionCode(cc,1)                           Path(S212,S217)
	S219= CtrlASIDIn=0                                          Premise(F144)
	S220= CtrlCP0=0                                             Premise(F145)
	S221= CP0[ASID]=pid                                         CP0-Hold(S171,S220)
	S222= CtrlEPCIn=0                                           Premise(F146)
	S223= CtrlExCodeIn=0                                        Premise(F147)
	S224= CtrlIMMU=0                                            Premise(F148)
	S225= CtrlPC=0                                              Premise(F149)
	S226= CtrlPCInc=0                                           Premise(F150)
	S227= PC[CIA]=addr                                          PC-Hold(S177,S226)
	S228= PC[Out]=addr+4                                        PC-Hold(S178,S225,S226)
	S229= CtrlIAddrReg=0                                        Premise(F151)
	S230= CtrlICache=0                                          Premise(F152)
	S231= ICache[addr]={17,8,cc,0,1,offset}                     ICache-Hold(S181,S230)
	S232= CtrlIR=0                                              Premise(F153)
	S233= [IR]={17,8,cc,0,1,offset}                             IR-Hold(S183,S232)
	S234= CtrlICacheReg=0                                       Premise(F154)
	S235= CtrlIMem=0                                            Premise(F155)
	S236= IMem[{pid,addr}]={17,8,cc,0,1,offset}                 IMem-Hold(S186,S235)
	S237= CtrlIRMux=0                                           Premise(F156)
	S238= CtrlA=0                                               Premise(F157)
	S239= [A]={14{offset[15]},offset,2{0}}                      A-Hold(S189,S238)
	S240= CtrlALUOut=0                                          Premise(F158)
	S241= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Hold(S191,S240)
	S242= CtrlCP1=0                                             Premise(F159)
	S243= CtrlConditionReg=0                                    Premise(F160)
	S244= [ConditionReg]=FPConditionCode(cc,1)                  ConditionReg-Hold(S194,S243)

POST	S221= CP0[ASID]=pid                                         CP0-Hold(S171,S220)
	S227= PC[CIA]=addr                                          PC-Hold(S177,S226)
	S228= PC[Out]=addr+4                                        PC-Hold(S178,S225,S226)
	S231= ICache[addr]={17,8,cc,0,1,offset}                     ICache-Hold(S181,S230)
	S233= [IR]={17,8,cc,0,1,offset}                             IR-Hold(S183,S232)
	S236= IMem[{pid,addr}]={17,8,cc,0,1,offset}                 IMem-Hold(S186,S235)
	S239= [A]={14{offset[15]},offset,2{0}}                      A-Hold(S189,S238)
	S241= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Hold(S191,S240)
	S244= [ConditionReg]=FPConditionCode(cc,1)                  ConditionReg-Hold(S194,S243)

