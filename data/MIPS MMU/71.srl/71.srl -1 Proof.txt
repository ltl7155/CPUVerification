
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,0,rT,rD,sa,3}                           Premise(F3)
	S2= GPR[rT]=a                                               Premise(F4)

IF	S3= PC.Out=addr                                             PC-Out(S0)
	S4= PC.Out=>ICache.IEA                                      Premise(F9)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={0,0,rT,rD,sa,3}                             ICache-Search(S5,S1)
	S7= ICache.Out=>IR.In                                       Premise(F10)
	S8= IR.In={0,0,rT,rD,sa,3}                                  Path(S6,S7)
	S9= CtrlPC=0                                                Premise(F18)
	S10= CtrlPCInc=1                                            Premise(F19)
	S11= PC[Out]=addr+4                                         PC-Inc(S0,S9,S10)
	S12= CtrlIR=1                                               Premise(F22)
	S13= [IR]={0,0,rT,rD,sa,3}                                  IR-Write(S8,S12)
	S14= CtrlGPR=0                                              Premise(F26)
	S15= GPR[rT]=a                                              GPR-Hold(S2,S14)

ID	S16= IR.Out20_16=rT                                         IR-Out(S13)
	S17= IR.Out20_16=>GPR.RReg2                                 Premise(F46)
	S18= GPR.RReg2=rT                                           Path(S16,S17)
	S19= GPR.Rdata2=a                                           GPR-Read(S18,S15)
	S20= GPR.Rdata2=>B.In                                       Premise(F48)
	S21= B.In=a                                                 Path(S19,S20)
	S22= CtrlPC=0                                               Premise(F54)
	S23= CtrlPCInc=0                                            Premise(F55)
	S24= PC[Out]=addr+4                                         PC-Hold(S11,S22,S23)
	S25= CtrlIR=0                                               Premise(F58)
	S26= [IR]={0,0,rT,rD,sa,3}                                  IR-Hold(S13,S25)
	S27= CtrlB=1                                                Premise(F63)
	S28= [B]=a                                                  B-Write(S21,S27)

EX	S29= IR.Out10_6=sa                                          IR-Out(S26)
	S30= B.Out=a                                                B-Out(S28)
	S31= IR.Out10_6=>SU.Shamt                                   Premise(F65)
	S32= SU.Shamt=sa                                            Path(S29,S31)
	S33= B.Out=>SU.Data                                         Premise(F66)
	S34= SU.Data=a                                              Path(S30,S33)
	S35= SU.Out=a>>>sa                                          SU(S34,S32)
	S36= SU.Out=>ALUOut.In                                      Premise(F68)
	S37= ALUOut.In=a>>>sa                                       Path(S35,S36)
	S38= CtrlPC=0                                               Premise(F74)
	S39= CtrlPCInc=0                                            Premise(F75)
	S40= PC[Out]=addr+4                                         PC-Hold(S24,S38,S39)
	S41= CtrlIR=0                                               Premise(F78)
	S42= [IR]={0,0,rT,rD,sa,3}                                  IR-Hold(S26,S41)
	S43= CtrlALUOut=1                                           Premise(F84)
	S44= [ALUOut]=a>>>sa                                        ALUOut-Write(S37,S43)

MEM	S45= CtrlPC=0                                               Premise(F90)
	S46= CtrlPCInc=0                                            Premise(F91)
	S47= PC[Out]=addr+4                                         PC-Hold(S40,S45,S46)
	S48= CtrlIR=0                                               Premise(F94)
	S49= [IR]={0,0,rT,rD,sa,3}                                  IR-Hold(S42,S48)
	S50= CtrlALUOut=0                                           Premise(F100)
	S51= [ALUOut]=a>>>sa                                        ALUOut-Hold(S44,S50)

MEM(DMMU1)	S52= CtrlPC=0                                               Premise(F106)
	S53= CtrlPCInc=0                                            Premise(F107)
	S54= PC[Out]=addr+4                                         PC-Hold(S47,S52,S53)
	S55= CtrlIR=0                                               Premise(F110)
	S56= [IR]={0,0,rT,rD,sa,3}                                  IR-Hold(S49,S55)
	S57= CtrlALUOut=0                                           Premise(F116)
	S58= [ALUOut]=a>>>sa                                        ALUOut-Hold(S51,S57)

MEM(DMMU2)	S59= CtrlPC=0                                               Premise(F122)
	S60= CtrlPCInc=0                                            Premise(F123)
	S61= PC[Out]=addr+4                                         PC-Hold(S54,S59,S60)
	S62= CtrlIR=0                                               Premise(F126)
	S63= [IR]={0,0,rT,rD,sa,3}                                  IR-Hold(S56,S62)
	S64= CtrlALUOut=0                                           Premise(F132)
	S65= [ALUOut]=a>>>sa                                        ALUOut-Hold(S58,S64)

WB	S66= IR.Out15_11=rD                                         IR-Out(S63)
	S67= ALUOut.Out=a>>>sa                                      ALUOut-Out(S65)
	S68= IR.Out15_11=>GPR.WReg                                  Premise(F133)
	S69= GPR.WReg=rD                                            Path(S66,S68)
	S70= ALUOut.Out=>GPR.WData                                  Premise(F134)
	S71= GPR.WData=a>>>sa                                       Path(S67,S70)
	S72= CtrlPC=0                                               Premise(F140)
	S73= CtrlPCInc=0                                            Premise(F141)
	S74= PC[Out]=addr+4                                         PC-Hold(S61,S72,S73)
	S75= CtrlGPR=1                                              Premise(F148)
	S76= GPR[rD]=a>>>sa                                         GPR-Write(S69,S71,S75)

POST	S74= PC[Out]=addr+4                                         PC-Hold(S61,S72,S73)
	S76= GPR[rD]=a>>>sa                                         GPR-Write(S69,S71,S75)

