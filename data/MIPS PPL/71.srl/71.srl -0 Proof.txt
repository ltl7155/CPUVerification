
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,0,rT,rD,sa,2}                       Premise(F2)
	S3= GPR[rT]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={0,0,rT,rD,sa,2}                              IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR_ID.In                                     Premise(F7)
	S12= IR_ID.In={0,0,rT,rD,sa,2}                              Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F43)
	S14= CtrlPCInc=1                                            Premise(F44)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR_ID=1                                            Premise(F50)
	S17= [IR_ID]={0,0,rT,rD,sa,2}                               IR_ID-Write(S12,S16)
	S18= CtrlGPR=0                                              Premise(F51)
	S19= GPR[rT]=a                                              GPR-Hold(S3,S18)

ID	S20= IR_ID.Out={0,0,rT,rD,sa,2}                             IR-Out(S17)
	S21= IR_ID.Out20_16=rT                                      IR-Out(S17)
	S22= IR_ID.Out20_16=>GPR.RReg2                              Premise(F66)
	S23= GPR.RReg2=rT                                           Path(S21,S22)
	S24= GPR.Rdata2=a                                           GPR-Read(S23,S19)
	S25= GPR.Rdata2=>FU.InID2                                   Premise(F68)
	S26= FU.InID2=a                                             Path(S24,S25)
	S27= FU.OutID2=FU(a)                                        FU-Forward(S26)
	S28= FU.OutID2=>B_EX.In                                     Premise(F70)
	S29= B_EX.In=FU(a)                                          Path(S27,S28)
	S30= IR_ID.Out=>IR_EX.In                                    Premise(F71)
	S31= IR_EX.In={0,0,rT,rD,sa,2}                              Path(S20,S30)
	S32= CtrlPC=0                                               Premise(F98)
	S33= CtrlPCInc=0                                            Premise(F99)
	S34= PC[Out]=addr+4                                         PC-Hold(S15,S32,S33)
	S35= CtrlB_EX=1                                             Premise(F107)
	S36= [B_EX]=FU(a)                                           B_EX-Write(S29,S35)
	S37= CtrlIR_EX=1                                            Premise(F108)
	S38= [IR_EX]={0,0,rT,rD,sa,2}                               IR_EX-Write(S31,S37)

EX	S39= B_EX.Out=FU(a)                                         B_EX-Out(S36)
	S40= IR_EX.Out={0,0,rT,rD,sa,2}                             IR_EX-Out(S38)
	S41= IR_EX.Out10_6=sa                                       IR_EX-Out(S38)
	S42= IR_EX.Out10_6=>SU.Shamt                                Premise(F132)
	S43= SU.Shamt=sa                                            Path(S41,S42)
	S44= B_EX.Out=>SU.Data                                      Premise(F133)
	S45= SU.Data=FU(a)                                          Path(S39,S44)
	S46= SU.Out=FU(a)>>>sa                                      SU(S45,S43)
	S47= SU.Out=>ALUOut_MEM.In                                  Premise(F135)
	S48= ALUOut_MEM.In=FU(a)>>>sa                               Path(S46,S47)
	S49= IR_EX.Out=>IR_MEM.In                                   Premise(F138)
	S50= IR_MEM.In={0,0,rT,rD,sa,2}                             Path(S40,S49)
	S51= CtrlPC=0                                               Premise(F153)
	S52= CtrlPCInc=0                                            Premise(F154)
	S53= PC[Out]=addr+4                                         PC-Hold(S34,S51,S52)
	S54= CtrlALUOut_MEM=1                                       Premise(F164)
	S55= [ALUOut_MEM]=FU(a)>>>sa                                ALUOut_MEM-Write(S48,S54)
	S56= CtrlIR_MEM=1                                           Premise(F165)
	S57= [IR_MEM]={0,0,rT,rD,sa,2}                              IR_MEM-Write(S50,S56)

MEM	S58= ALUOut_MEM.Out=FU(a)>>>sa                              ALUOut_MEM-Out(S55)
	S59= IR_MEM.Out={0,0,rT,rD,sa,2}                            IR_MEM-Out(S57)
	S60= IR_MEM.Out=>IR_WB.In                                   Premise(F196)
	S61= IR_WB.In={0,0,rT,rD,sa,2}                              Path(S59,S60)
	S62= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F197)
	S63= ALUOut_WB.In=FU(a)>>>sa                                Path(S58,S62)
	S64= CtrlPC=0                                               Premise(F207)
	S65= CtrlPCInc=0                                            Premise(F208)
	S66= PC[Out]=addr+4                                         PC-Hold(S53,S64,S65)
	S67= CtrlIR_WB=1                                            Premise(F220)
	S68= [IR_WB]={0,0,rT,rD,sa,2}                               IR_WB-Write(S61,S67)
	S69= CtrlALUOut_WB=1                                        Premise(F221)
	S70= [ALUOut_WB]=FU(a)>>>sa                                 ALUOut_WB-Write(S63,S69)

WB	S71= IR_WB.Out15_11=rD                                      IR-Out(S68)
	S72= ALUOut_WB.Out=FU(a)>>>sa                               ALUOut_WB-Out(S70)
	S73= IR_WB.Out15_11=>GPR.WReg                               Premise(F257)
	S74= GPR.WReg=rD                                            Path(S71,S73)
	S75= ALUOut_WB.Out=>GPR.WData                               Premise(F258)
	S76= GPR.WData=FU(a)>>>sa                                   Path(S72,S75)
	S77= CtrlPC=0                                               Premise(F261)
	S78= CtrlPCInc=0                                            Premise(F262)
	S79= PC[Out]=addr+4                                         PC-Hold(S66,S77,S78)
	S80= CtrlGPR=1                                              Premise(F269)
	S81= GPR[rD]=FU(a)>>>sa                                     GPR-Write(S74,S76,S80)

POST	S79= PC[Out]=addr+4                                         PC-Hold(S66,S77,S78)
	S81= GPR[rD]=FU(a)>>>sa                                     GPR-Write(S74,S76,S80)

