
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,0,1493}                      Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[CA]=ca                                              Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S8= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S9= PC.Out=addr                                             PC-Out(S1)
	S10= XER.CAOut=ca                                           XER-CA-Out(S4)
	S11= XER.SOOut=so                                           XER-SO-Out(S5)
	S12= PIDReg.Out=>IMMU.PID                                   Premise(F6)
	S13= IMMU.PID=pid                                           Path(S6,S12)
	S14= PC.Out=>IMMU.IEA                                       Premise(F7)
	S15= IMMU.IEA=addr                                          Path(S9,S14)
	S16= IMMU.Addr={pid,addr}                                   IMMU-Search(S13,S15)
	S17= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S13,S15)
	S18= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S19= IAddrReg.In={pid,addr}                                 Path(S16,S18)
	S20= IMMU.Hit=>IMMUHitReg.In                                Premise(F9)
	S21= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S17,S20)
	S22= PC.Out=>ICache.IEA                                     Premise(F10)
	S23= ICache.IEA=addr                                        Path(S9,S22)
	S24= ICache.Hit=ICacheHit(addr)                             ICache-Search(S23)
	S25= ICache.Out=>ICacheReg.In                               Premise(F11)
	S26= ICache.Hit=>ICacheHitReg.In                            Premise(F12)
	S27= ICacheHitReg.In=ICacheHit(addr)                        Path(S24,S26)
	S28= IMMUHitReg.Out=>CU.IMemHit                             Premise(F13)
	S29= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F14)
	S30= IAddrReg.Out=>IMem.RAddr                               Premise(F15)
	S31= IMem.Out=>IRMux.MemData                                Premise(F16)
	S32= ICacheReg.Out=>IRMux.CacheData                         Premise(F17)
	S33= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F18)
	S34= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F19)
	S35= IRMux.Out=>IR.In                                       Premise(F20)
	S36= IMem.MEM8WordOut=>ICache.WData                         Premise(F21)
	S37= PC.Out=>ICache.IEA                                     Premise(F22)
	S38= IR.Out0_5=>CU.Op                                       Premise(F23)
	S39= IR.Out11_15=>GPRegs.RReg1                              Premise(F24)
	S40= IR.Out21_31=>CU.IRFunc                                 Premise(F25)
	S41= GPRegs.Rdata1=>A.In                                    Premise(F26)
	S42= A.Out=>ALU.A                                           Premise(F27)
	S43= B.Out=>ALU.B                                           Premise(F28)
	S44= XER.CAOut=>ALU.CAIn                                    Premise(F29)
	S45= ALU.CAIn=ca                                            Path(S10,S44)
	S46= CU.Func=>ALU.Func                                      Premise(F30)
	S47= ALU.Out=>ALUOut.In                                     Premise(F31)
	S48= ALU.CA=>CAReg.In                                       Premise(F32)
	S49= ALU.CMP=>DataCmb.A                                     Premise(F33)
	S50= ORGate.Out=>DataCmb.B                                  Premise(F34)
	S51= ALU.OV=>OVReg.In                                       Premise(F35)
	S52= XER.SOOut=>ORGate.A                                    Premise(F36)
	S53= ORGate.A=so                                            Path(S11,S52)
	S54= ALU.OV=>ORGate.B                                       Premise(F37)
	S55= ORGate.Out=>DR1bit.In                                  Premise(F38)
	S56= DataCmb.Out=>DR4bit.In                                 Premise(F39)
	S57= IR.Out6_10=>GPRegs.WReg                                Premise(F40)
	S58= ALUOut.Out=>GPRegs.WData                               Premise(F41)
	S59= DR4bit.Out=>CRRegs.CR0In                               Premise(F42)
	S60= DR1bit.Out=>XER.SOIn                                   Premise(F43)
	S61= CAReg.Out=>XER.CAIn                                    Premise(F44)
	S62= OVReg.Out=>XER.OVIn                                    Premise(F45)
	S63= CtrlPIDReg=0                                           Premise(F46)
	S64= [PIDReg]=pid                                           PIDReg-Hold(S0,S63)
	S65= CtrlIMMU=0                                             Premise(F47)
	S66= CtrlPC=0                                               Premise(F48)
	S67= CtrlPCInc=0                                            Premise(F49)
	S68= PC[Out]=addr                                           PC-Hold(S1,S66,S67)
	S69= CtrlIAddrReg=1                                         Premise(F50)
	S70= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S19,S69)
	S71= CtrlIMMUHitReg=1                                       Premise(F51)
	S72= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S21,S71)
	S73= CtrlICache=0                                           Premise(F52)
	S74= CtrlICacheReg=1                                        Premise(F53)
	S75= CtrlICacheHitReg=1                                     Premise(F54)
	S76= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S27,S75)
	S77= CtrlIMem=0                                             Premise(F55)
	S78= IMem[{pid,addr}]={31,rT,rA,0,1493}                     IMem-Hold(S2,S77)
	S79= CtrlIRMux=0                                            Premise(F56)
	S80= CtrlIR=0                                               Premise(F57)
	S81= CtrlGPRegs=0                                           Premise(F58)
	S82= GPRegs[rA]=a                                           GPRegs-Hold(S3,S81)
	S83= CtrlA=0                                                Premise(F59)
	S84= CtrlB=0                                                Premise(F60)
	S85= CtrlXERSO=0                                            Premise(F61)
	S86= XER[SO]=so                                             XER-SO-Hold(S5,S85)
	S87= CtrlXEROV=0                                            Premise(F62)
	S88= CtrlXERCA=0                                            Premise(F63)
	S89= XER[CA]=ca                                             XER-CA-Hold(S4,S88)
	S90= CtrlALUOut=0                                           Premise(F64)
	S91= CtrlCAReg=0                                            Premise(F65)
	S92= CtrlOVReg=0                                            Premise(F66)
	S93= CtrlDR1bit=0                                           Premise(F67)
	S94= CtrlDR4bit=0                                           Premise(F68)
	S95= CtrlCRRegs=0                                           Premise(F69)
	S96= CtrlCRRegsCR0=0                                        Premise(F70)
	S97= CtrlCRRegsW4bitRegs=0                                  Premise(F71)
	S98= CtrlCRRegsW1bitRegs=0                                  Premise(F72)

IMMU	S99= PIDReg.Out=pid                                         PIDReg-Out(S64)
	S100= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S64)
	S101= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S64)
	S102= PC.Out=addr                                           PC-Out(S68)
	S103= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S70)
	S104= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S70)
	S105= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S70)
	S106= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S72)
	S107= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S72)
	S108= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S72)
	S109= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S76)
	S110= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S76)
	S111= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S76)
	S112= XER.SOOut=so                                          XER-SO-Out(S86)
	S113= XER.CAOut=ca                                          XER-CA-Out(S89)
	S114= PIDReg.Out=>IMMU.PID                                  Premise(F73)
	S115= IMMU.PID=pid                                          Path(S99,S114)
	S116= PC.Out=>IMMU.IEA                                      Premise(F74)
	S117= IMMU.IEA=addr                                         Path(S102,S116)
	S118= IMMU.Addr={pid,addr}                                  IMMU-Search(S115,S117)
	S119= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S115,S117)
	S120= IMMU.Addr=>IAddrReg.In                                Premise(F75)
	S121= IAddrReg.In={pid,addr}                                Path(S118,S120)
	S122= IMMU.Hit=>IMMUHitReg.In                               Premise(F76)
	S123= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S119,S122)
	S124= PC.Out=>ICache.IEA                                    Premise(F77)
	S125= ICache.IEA=addr                                       Path(S102,S124)
	S126= ICache.Hit=ICacheHit(addr)                            ICache-Search(S125)
	S127= ICache.Out=>ICacheReg.In                              Premise(F78)
	S128= ICache.Hit=>ICacheHitReg.In                           Premise(F79)
	S129= ICacheHitReg.In=ICacheHit(addr)                       Path(S126,S128)
	S130= IMMUHitReg.Out=>CU.IMemHit                            Premise(F80)
	S131= CU.IMemHit=IMMUHit(pid,addr)                          Path(S106,S130)
	S132= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F81)
	S133= CU.ICacheHit=ICacheHit(addr)                          Path(S109,S132)
	S134= IAddrReg.Out=>IMem.RAddr                              Premise(F82)
	S135= IMem.RAddr={pid,addr}                                 Path(S103,S134)
	S136= IMem.Out={31,rT,rA,0,1493}                            IMem-Read(S135,S78)
	S137= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S135,S78)
	S138= IMem.Out=>IRMux.MemData                               Premise(F83)
	S139= IRMux.MemData={31,rT,rA,0,1493}                       Path(S136,S138)
	S140= IRMux.Out={31,rT,rA,0,1493}                           IRMux-Select(S139)
	S141= ICacheReg.Out=>IRMux.CacheData                        Premise(F84)
	S142= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F85)
	S143= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S106,S142)
	S144= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F86)
	S145= IRMux.CacheSel=ICacheHit(addr)                        Path(S109,S144)
	S146= IRMux.Out=>IR.In                                      Premise(F87)
	S147= IR.In={31,rT,rA,0,1493}                               Path(S140,S146)
	S148= IMem.MEM8WordOut=>ICache.WData                        Premise(F88)
	S149= ICache.WData=IMemGet8Word({pid,addr})                 Path(S137,S148)
	S150= PC.Out=>ICache.IEA                                    Premise(F89)
	S151= IR.Out0_5=>CU.Op                                      Premise(F90)
	S152= IR.Out11_15=>GPRegs.RReg1                             Premise(F91)
	S153= IR.Out21_31=>CU.IRFunc                                Premise(F92)
	S154= GPRegs.Rdata1=>A.In                                   Premise(F93)
	S155= A.Out=>ALU.A                                          Premise(F94)
	S156= B.Out=>ALU.B                                          Premise(F95)
	S157= XER.CAOut=>ALU.CAIn                                   Premise(F96)
	S158= ALU.CAIn=ca                                           Path(S113,S157)
	S159= CU.Func=>ALU.Func                                     Premise(F97)
	S160= ALU.Out=>ALUOut.In                                    Premise(F98)
	S161= ALU.CA=>CAReg.In                                      Premise(F99)
	S162= ALU.CMP=>DataCmb.A                                    Premise(F100)
	S163= ORGate.Out=>DataCmb.B                                 Premise(F101)
	S164= ALU.OV=>OVReg.In                                      Premise(F102)
	S165= XER.SOOut=>ORGate.A                                   Premise(F103)
	S166= ORGate.A=so                                           Path(S112,S165)
	S167= ALU.OV=>ORGate.B                                      Premise(F104)
	S168= ORGate.Out=>DR1bit.In                                 Premise(F105)
	S169= DataCmb.Out=>DR4bit.In                                Premise(F106)
	S170= IR.Out6_10=>GPRegs.WReg                               Premise(F107)
	S171= ALUOut.Out=>GPRegs.WData                              Premise(F108)
	S172= DR4bit.Out=>CRRegs.CR0In                              Premise(F109)
	S173= DR1bit.Out=>XER.SOIn                                  Premise(F110)
	S174= CAReg.Out=>XER.CAIn                                   Premise(F111)
	S175= OVReg.Out=>XER.OVIn                                   Premise(F112)
	S176= CtrlPIDReg=0                                          Premise(F113)
	S177= [PIDReg]=pid                                          PIDReg-Hold(S64,S176)
	S178= CtrlIMMU=0                                            Premise(F114)
	S179= CtrlPC=0                                              Premise(F115)
	S180= CtrlPCInc=1                                           Premise(F116)
	S181= PC[Out]=addr+4                                        PC-Inc(S68,S179,S180)
	S182= PC[CIA]=addr                                          PC-Inc(S68,S179,S180)
	S183= CtrlIAddrReg=0                                        Premise(F117)
	S184= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S70,S183)
	S185= CtrlIMMUHitReg=0                                      Premise(F118)
	S186= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S72,S185)
	S187= CtrlICache=1                                          Premise(F119)
	S188= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S125,S149,S187)
	S189= CtrlICacheReg=0                                       Premise(F120)
	S190= CtrlICacheHitReg=0                                    Premise(F121)
	S191= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S76,S190)
	S192= CtrlIMem=0                                            Premise(F122)
	S193= IMem[{pid,addr}]={31,rT,rA,0,1493}                    IMem-Hold(S78,S192)
	S194= CtrlIRMux=0                                           Premise(F123)
	S195= CtrlIR=1                                              Premise(F124)
	S196= [IR]={31,rT,rA,0,1493}                                IR-Write(S147,S195)
	S197= CtrlGPRegs=0                                          Premise(F125)
	S198= GPRegs[rA]=a                                          GPRegs-Hold(S82,S197)
	S199= CtrlA=0                                               Premise(F126)
	S200= CtrlB=0                                               Premise(F127)
	S201= CtrlXERSO=0                                           Premise(F128)
	S202= XER[SO]=so                                            XER-SO-Hold(S86,S201)
	S203= CtrlXEROV=0                                           Premise(F129)
	S204= CtrlXERCA=0                                           Premise(F130)
	S205= XER[CA]=ca                                            XER-CA-Hold(S89,S204)
	S206= CtrlALUOut=0                                          Premise(F131)
	S207= CtrlCAReg=0                                           Premise(F132)
	S208= CtrlOVReg=0                                           Premise(F133)
	S209= CtrlDR1bit=0                                          Premise(F134)
	S210= CtrlDR4bit=0                                          Premise(F135)
	S211= CtrlCRRegs=0                                          Premise(F136)
	S212= CtrlCRRegsCR0=0                                       Premise(F137)
	S213= CtrlCRRegsW4bitRegs=0                                 Premise(F138)
	S214= CtrlCRRegsW1bitRegs=0                                 Premise(F139)

ID	S215= PIDReg.Out=pid                                        PIDReg-Out(S177)
	S216= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S177)
	S217= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S177)
	S218= PC.Out=addr+4                                         PC-Out(S181)
	S219= PC.CIA=addr                                           PC-Out(S182)
	S220= PC.CIA31_28=addr[31:28]                               PC-Out(S182)
	S221= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S184)
	S222= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S184)
	S223= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S184)
	S224= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S186)
	S225= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S186)
	S226= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S186)
	S227= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S191)
	S228= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S191)
	S229= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S191)
	S230= IR.Out0_5=31                                          IR-Out(S196)
	S231= IR.Out6_10=rT                                         IR-Out(S196)
	S232= IR.Out11_15=rA                                        IR-Out(S196)
	S233= IR.Out16_20=0                                         IR-Out(S196)
	S234= IR.Out21_31=1493                                      IR-Out(S196)
	S235= XER.SOOut=so                                          XER-SO-Out(S202)
	S236= XER.CAOut=ca                                          XER-CA-Out(S205)
	S237= PIDReg.Out=>IMMU.PID                                  Premise(F140)
	S238= IMMU.PID=pid                                          Path(S215,S237)
	S239= PC.Out=>IMMU.IEA                                      Premise(F141)
	S240= IMMU.IEA=addr+4                                       Path(S218,S239)
	S241= IMMU.Addr={pid,addr+4}                                IMMU-Search(S238,S240)
	S242= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S238,S240)
	S243= IMMU.Addr=>IAddrReg.In                                Premise(F142)
	S244= IAddrReg.In={pid,addr+4}                              Path(S241,S243)
	S245= IMMU.Hit=>IMMUHitReg.In                               Premise(F143)
	S246= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S242,S245)
	S247= PC.Out=>ICache.IEA                                    Premise(F144)
	S248= ICache.IEA=addr+4                                     Path(S218,S247)
	S249= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S248)
	S250= ICache.Out=>ICacheReg.In                              Premise(F145)
	S251= ICache.Hit=>ICacheHitReg.In                           Premise(F146)
	S252= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S249,S251)
	S253= IMMUHitReg.Out=>CU.IMemHit                            Premise(F147)
	S254= CU.IMemHit=IMMUHit(pid,addr)                          Path(S224,S253)
	S255= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F148)
	S256= CU.ICacheHit=ICacheHit(addr)                          Path(S227,S255)
	S257= IAddrReg.Out=>IMem.RAddr                              Premise(F149)
	S258= IMem.RAddr={pid,addr}                                 Path(S221,S257)
	S259= IMem.Out={31,rT,rA,0,1493}                            IMem-Read(S258,S193)
	S260= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S258,S193)
	S261= IMem.Out=>IRMux.MemData                               Premise(F150)
	S262= IRMux.MemData={31,rT,rA,0,1493}                       Path(S259,S261)
	S263= IRMux.Out={31,rT,rA,0,1493}                           IRMux-Select(S262)
	S264= ICacheReg.Out=>IRMux.CacheData                        Premise(F151)
	S265= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F152)
	S266= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S224,S265)
	S267= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F153)
	S268= IRMux.CacheSel=ICacheHit(addr)                        Path(S227,S267)
	S269= IRMux.Out=>IR.In                                      Premise(F154)
	S270= IR.In={31,rT,rA,0,1493}                               Path(S263,S269)
	S271= IMem.MEM8WordOut=>ICache.WData                        Premise(F155)
	S272= ICache.WData=IMemGet8Word({pid,addr})                 Path(S260,S271)
	S273= PC.Out=>ICache.IEA                                    Premise(F156)
	S274= IR.Out0_5=>CU.Op                                      Premise(F157)
	S275= CU.Op=31                                              Path(S230,S274)
	S276= IR.Out11_15=>GPRegs.RReg1                             Premise(F158)
	S277= GPRegs.RReg1=rA                                       Path(S232,S276)
	S278= GPRegs.Rdata1=a                                       GPRegs-Read(S277,S198)
	S279= IR.Out21_31=>CU.IRFunc                                Premise(F159)
	S280= CU.IRFunc=1493                                        Path(S234,S279)
	S281= CU.Func=alu_adde                                      CU(S275,S280)
	S282= GPRegs.Rdata1=>A.In                                   Premise(F160)
	S283= A.In=a                                                Path(S278,S282)
	S284= B.In=32'hFFFFFFFF                                     Premise(F161)
	S285= A.Out=>ALU.A                                          Premise(F162)
	S286= B.Out=>ALU.B                                          Premise(F163)
	S287= XER.CAOut=>ALU.CAIn                                   Premise(F164)
	S288= ALU.CAIn=ca                                           Path(S236,S287)
	S289= CU.Func=>ALU.Func                                     Premise(F165)
	S290= ALU.Func=alu_adde                                     Path(S281,S289)
	S291= ALU.Out=>ALUOut.In                                    Premise(F166)
	S292= ALU.CA=>CAReg.In                                      Premise(F167)
	S293= ALU.CMP=>DataCmb.A                                    Premise(F168)
	S294= ORGate.Out=>DataCmb.B                                 Premise(F169)
	S295= ALU.OV=>OVReg.In                                      Premise(F170)
	S296= XER.SOOut=>ORGate.A                                   Premise(F171)
	S297= ORGate.A=so                                           Path(S235,S296)
	S298= ALU.OV=>ORGate.B                                      Premise(F172)
	S299= ORGate.Out=>DR1bit.In                                 Premise(F173)
	S300= DataCmb.Out=>DR4bit.In                                Premise(F174)
	S301= IR.Out6_10=>GPRegs.WReg                               Premise(F175)
	S302= GPRegs.WReg=rT                                        Path(S231,S301)
	S303= ALUOut.Out=>GPRegs.WData                              Premise(F176)
	S304= DR4bit.Out=>CRRegs.CR0In                              Premise(F177)
	S305= DR1bit.Out=>XER.SOIn                                  Premise(F178)
	S306= CAReg.Out=>XER.CAIn                                   Premise(F179)
	S307= OVReg.Out=>XER.OVIn                                   Premise(F180)
	S308= CtrlPIDReg=0                                          Premise(F181)
	S309= [PIDReg]=pid                                          PIDReg-Hold(S177,S308)
	S310= CtrlIMMU=0                                            Premise(F182)
	S311= CtrlPC=0                                              Premise(F183)
	S312= CtrlPCInc=0                                           Premise(F184)
	S313= PC[CIA]=addr                                          PC-Hold(S182,S312)
	S314= PC[Out]=addr+4                                        PC-Hold(S181,S311,S312)
	S315= CtrlIAddrReg=0                                        Premise(F185)
	S316= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S184,S315)
	S317= CtrlIMMUHitReg=0                                      Premise(F186)
	S318= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S186,S317)
	S319= CtrlICache=0                                          Premise(F187)
	S320= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S188,S319)
	S321= CtrlICacheReg=0                                       Premise(F188)
	S322= CtrlICacheHitReg=0                                    Premise(F189)
	S323= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S191,S322)
	S324= CtrlIMem=0                                            Premise(F190)
	S325= IMem[{pid,addr}]={31,rT,rA,0,1493}                    IMem-Hold(S193,S324)
	S326= CtrlIRMux=0                                           Premise(F191)
	S327= CtrlIR=0                                              Premise(F192)
	S328= [IR]={31,rT,rA,0,1493}                                IR-Hold(S196,S327)
	S329= CtrlGPRegs=0                                          Premise(F193)
	S330= GPRegs[rA]=a                                          GPRegs-Hold(S198,S329)
	S331= CtrlA=1                                               Premise(F194)
	S332= [A]=a                                                 A-Write(S283,S331)
	S333= CtrlB=1                                               Premise(F195)
	S334= [B]=32'hFFFFFFFF                                      B-Write(S284,S333)
	S335= CtrlXERSO=0                                           Premise(F196)
	S336= XER[SO]=so                                            XER-SO-Hold(S202,S335)
	S337= CtrlXEROV=0                                           Premise(F197)
	S338= CtrlXERCA=0                                           Premise(F198)
	S339= XER[CA]=ca                                            XER-CA-Hold(S205,S338)
	S340= CtrlALUOut=0                                          Premise(F199)
	S341= CtrlCAReg=0                                           Premise(F200)
	S342= CtrlOVReg=0                                           Premise(F201)
	S343= CtrlDR1bit=0                                          Premise(F202)
	S344= CtrlDR4bit=0                                          Premise(F203)
	S345= CtrlCRRegs=0                                          Premise(F204)
	S346= CtrlCRRegsCR0=0                                       Premise(F205)
	S347= CtrlCRRegsW4bitRegs=0                                 Premise(F206)
	S348= CtrlCRRegsW1bitRegs=0                                 Premise(F207)

EX	S349= PIDReg.Out=pid                                        PIDReg-Out(S309)
	S350= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S309)
	S351= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S309)
	S352= PC.CIA=addr                                           PC-Out(S313)
	S353= PC.CIA31_28=addr[31:28]                               PC-Out(S313)
	S354= PC.Out=addr+4                                         PC-Out(S314)
	S355= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S316)
	S356= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S316)
	S357= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S316)
	S358= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S318)
	S359= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S318)
	S360= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S318)
	S361= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S323)
	S362= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S323)
	S363= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S323)
	S364= IR.Out0_5=31                                          IR-Out(S328)
	S365= IR.Out6_10=rT                                         IR-Out(S328)
	S366= IR.Out11_15=rA                                        IR-Out(S328)
	S367= IR.Out16_20=0                                         IR-Out(S328)
	S368= IR.Out21_31=1493                                      IR-Out(S328)
	S369= A.Out=a                                               A-Out(S332)
	S370= A.Out26_31=a[26:31]                                   A-Out(S332)
	S371= A.Out30_31=a[30:31]                                   A-Out(S332)
	S372= B.Out=32'hFFFFFFFF                                    B-Out(S334)
	S373= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S334)
	S374= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S334)
	S375= XER.SOOut=so                                          XER-SO-Out(S336)
	S376= XER.CAOut=ca                                          XER-CA-Out(S339)
	S377= PIDReg.Out=>IMMU.PID                                  Premise(F208)
	S378= IMMU.PID=pid                                          Path(S349,S377)
	S379= PC.Out=>IMMU.IEA                                      Premise(F209)
	S380= IMMU.IEA=addr+4                                       Path(S354,S379)
	S381= IMMU.Addr={pid,addr+4}                                IMMU-Search(S378,S380)
	S382= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S378,S380)
	S383= IMMU.Addr=>IAddrReg.In                                Premise(F210)
	S384= IAddrReg.In={pid,addr+4}                              Path(S381,S383)
	S385= IMMU.Hit=>IMMUHitReg.In                               Premise(F211)
	S386= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S382,S385)
	S387= PC.Out=>ICache.IEA                                    Premise(F212)
	S388= ICache.IEA=addr+4                                     Path(S354,S387)
	S389= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S388)
	S390= ICache.Out=>ICacheReg.In                              Premise(F213)
	S391= ICache.Hit=>ICacheHitReg.In                           Premise(F214)
	S392= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S389,S391)
	S393= IMMUHitReg.Out=>CU.IMemHit                            Premise(F215)
	S394= CU.IMemHit=IMMUHit(pid,addr)                          Path(S358,S393)
	S395= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F216)
	S396= CU.ICacheHit=ICacheHit(addr)                          Path(S361,S395)
	S397= IAddrReg.Out=>IMem.RAddr                              Premise(F217)
	S398= IMem.RAddr={pid,addr}                                 Path(S355,S397)
	S399= IMem.Out={31,rT,rA,0,1493}                            IMem-Read(S398,S325)
	S400= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S398,S325)
	S401= IMem.Out=>IRMux.MemData                               Premise(F218)
	S402= IRMux.MemData={31,rT,rA,0,1493}                       Path(S399,S401)
	S403= IRMux.Out={31,rT,rA,0,1493}                           IRMux-Select(S402)
	S404= ICacheReg.Out=>IRMux.CacheData                        Premise(F219)
	S405= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F220)
	S406= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S358,S405)
	S407= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F221)
	S408= IRMux.CacheSel=ICacheHit(addr)                        Path(S361,S407)
	S409= IRMux.Out=>IR.In                                      Premise(F222)
	S410= IR.In={31,rT,rA,0,1493}                               Path(S403,S409)
	S411= IMem.MEM8WordOut=>ICache.WData                        Premise(F223)
	S412= ICache.WData=IMemGet8Word({pid,addr})                 Path(S400,S411)
	S413= PC.Out=>ICache.IEA                                    Premise(F224)
	S414= IR.Out0_5=>CU.Op                                      Premise(F225)
	S415= CU.Op=31                                              Path(S364,S414)
	S416= IR.Out11_15=>GPRegs.RReg1                             Premise(F226)
	S417= GPRegs.RReg1=rA                                       Path(S366,S416)
	S418= GPRegs.Rdata1=a                                       GPRegs-Read(S417,S330)
	S419= IR.Out21_31=>CU.IRFunc                                Premise(F227)
	S420= CU.IRFunc=1493                                        Path(S368,S419)
	S421= CU.Func=alu_adde                                      CU(S415,S420)
	S422= GPRegs.Rdata1=>A.In                                   Premise(F228)
	S423= A.In=a                                                Path(S418,S422)
	S424= A.Out=>ALU.A                                          Premise(F229)
	S425= ALU.A=a                                               Path(S369,S424)
	S426= B.Out=>ALU.B                                          Premise(F230)
	S427= ALU.B=32'hFFFFFFFF                                    Path(S372,S426)
	S428= XER.CAOut=>ALU.CAIn                                   Premise(F231)
	S429= ALU.CAIn=ca                                           Path(S376,S428)
	S430= CU.Func=>ALU.Func                                     Premise(F232)
	S431= ALU.Func=alu_adde                                     Path(S421,S430)
	S432= ALU.Out=a+32'hFFFFFFFF+ca                             ALU(S425,S427,S429)
	S433= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                   ALU(S425,S427,S429)
	S434= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                    ALU(S425,S427,S429)
	S435= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                       ALU(S425,S427,S429)
	S436= ALU.Out=>ALUOut.In                                    Premise(F233)
	S437= ALUOut.In=a+32'hFFFFFFFF+ca                           Path(S432,S436)
	S438= ALU.CA=>CAReg.In                                      Premise(F234)
	S439= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                     Path(S435,S438)
	S440= ALU.CMP=>DataCmb.A                                    Premise(F235)
	S441= DataCmb.A=Compare0(a+32'hFFFFFFFF+ca)                 Path(S433,S440)
	S442= ORGate.Out=>DataCmb.B                                 Premise(F236)
	S443= ALU.OV=>OVReg.In                                      Premise(F237)
	S444= OVReg.In=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S434,S443)
	S445= XER.SOOut=>ORGate.A                                   Premise(F238)
	S446= ORGate.A=so                                           Path(S375,S445)
	S447= ALU.OV=>ORGate.B                                      Premise(F239)
	S448= ORGate.B=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S434,S447)
	S449= ORGate.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             ORGate(S446,S448)
	S450= DataCmb.B=so|OverFlow(a+32'hFFFFFFFF+ca)              Path(S449,S442)
	S451= DataCmb.Out={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DataCmb(S441,S450)
	S452= ORGate.Out=>DR1bit.In                                 Premise(F240)
	S453= DR1bit.In=so|OverFlow(a+32'hFFFFFFFF+ca)              Path(S449,S452)
	S454= DataCmb.Out=>DR4bit.In                                Premise(F241)
	S455= DR4bit.In={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}Path(S451,S454)
	S456= IR.Out6_10=>GPRegs.WReg                               Premise(F242)
	S457= GPRegs.WReg=rT                                        Path(S365,S456)
	S458= ALUOut.Out=>GPRegs.WData                              Premise(F243)
	S459= DR4bit.Out=>CRRegs.CR0In                              Premise(F244)
	S460= DR1bit.Out=>XER.SOIn                                  Premise(F245)
	S461= CAReg.Out=>XER.CAIn                                   Premise(F246)
	S462= OVReg.Out=>XER.OVIn                                   Premise(F247)
	S463= CtrlPIDReg=0                                          Premise(F248)
	S464= [PIDReg]=pid                                          PIDReg-Hold(S309,S463)
	S465= CtrlIMMU=0                                            Premise(F249)
	S466= CtrlPC=0                                              Premise(F250)
	S467= CtrlPCInc=0                                           Premise(F251)
	S468= PC[CIA]=addr                                          PC-Hold(S313,S467)
	S469= PC[Out]=addr+4                                        PC-Hold(S314,S466,S467)
	S470= CtrlIAddrReg=0                                        Premise(F252)
	S471= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S316,S470)
	S472= CtrlIMMUHitReg=0                                      Premise(F253)
	S473= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S318,S472)
	S474= CtrlICache=0                                          Premise(F254)
	S475= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S320,S474)
	S476= CtrlICacheReg=0                                       Premise(F255)
	S477= CtrlICacheHitReg=0                                    Premise(F256)
	S478= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S323,S477)
	S479= CtrlIMem=0                                            Premise(F257)
	S480= IMem[{pid,addr}]={31,rT,rA,0,1493}                    IMem-Hold(S325,S479)
	S481= CtrlIRMux=0                                           Premise(F258)
	S482= CtrlIR=0                                              Premise(F259)
	S483= [IR]={31,rT,rA,0,1493}                                IR-Hold(S328,S482)
	S484= CtrlGPRegs=0                                          Premise(F260)
	S485= GPRegs[rA]=a                                          GPRegs-Hold(S330,S484)
	S486= CtrlA=0                                               Premise(F261)
	S487= [A]=a                                                 A-Hold(S332,S486)
	S488= CtrlB=0                                               Premise(F262)
	S489= [B]=32'hFFFFFFFF                                      B-Hold(S334,S488)
	S490= CtrlXERSO=0                                           Premise(F263)
	S491= XER[SO]=so                                            XER-SO-Hold(S336,S490)
	S492= CtrlXEROV=0                                           Premise(F264)
	S493= CtrlXERCA=0                                           Premise(F265)
	S494= XER[CA]=ca                                            XER-CA-Hold(S339,S493)
	S495= CtrlALUOut=1                                          Premise(F266)
	S496= [ALUOut]=a+32'hFFFFFFFF+ca                            ALUOut-Write(S437,S495)
	S497= CtrlCAReg=1                                           Premise(F267)
	S498= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                      CAReg-Write(S439,S497)
	S499= CtrlOVReg=1                                           Premise(F268)
	S500= [OVReg]=OverFlow(a+32'hFFFFFFFF+ca)                   OVReg-Write(S444,S499)
	S501= CtrlDR1bit=1                                          Premise(F269)
	S502= [DR1bit]=so|OverFlow(a+32'hFFFFFFFF+ca)               DR1bit-Write(S453,S501)
	S503= CtrlDR4bit=1                                          Premise(F270)
	S504= [DR4bit]={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DR4bit-Write(S455,S503)
	S505= CtrlCRRegs=0                                          Premise(F271)
	S506= CtrlCRRegsCR0=0                                       Premise(F272)
	S507= CtrlCRRegsW4bitRegs=0                                 Premise(F273)
	S508= CtrlCRRegsW1bitRegs=0                                 Premise(F274)

MEM	S509= PIDReg.Out=pid                                        PIDReg-Out(S464)
	S510= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S464)
	S511= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S464)
	S512= PC.CIA=addr                                           PC-Out(S468)
	S513= PC.CIA31_28=addr[31:28]                               PC-Out(S468)
	S514= PC.Out=addr+4                                         PC-Out(S469)
	S515= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S471)
	S516= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S471)
	S517= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S471)
	S518= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S473)
	S519= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S473)
	S520= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S473)
	S521= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S478)
	S522= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S478)
	S523= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S478)
	S524= IR.Out0_5=31                                          IR-Out(S483)
	S525= IR.Out6_10=rT                                         IR-Out(S483)
	S526= IR.Out11_15=rA                                        IR-Out(S483)
	S527= IR.Out16_20=0                                         IR-Out(S483)
	S528= IR.Out21_31=1493                                      IR-Out(S483)
	S529= A.Out=a                                               A-Out(S487)
	S530= A.Out26_31=a[26:31]                                   A-Out(S487)
	S531= A.Out30_31=a[30:31]                                   A-Out(S487)
	S532= B.Out=32'hFFFFFFFF                                    B-Out(S489)
	S533= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S489)
	S534= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S489)
	S535= XER.SOOut=so                                          XER-SO-Out(S491)
	S536= XER.CAOut=ca                                          XER-CA-Out(S494)
	S537= ALUOut.Out=a+32'hFFFFFFFF+ca                          ALUOut-Out(S496)
	S538= ALUOut.Out26_31=a+32'hFFFFFFFF+ca[26:31]              ALUOut-Out(S496)
	S539= ALUOut.Out30_31=a+32'hFFFFFFFF+ca[30:31]              ALUOut-Out(S496)
	S540= CAReg.Out=Carry(a+32'hFFFFFFFF+ca)                    CAReg-Out(S498)
	S541= CAReg.Out26_31=Carry(a+32'hFFFFFFFF+ca)[26:31]        CAReg-Out(S498)
	S542= CAReg.Out30_31=Carry(a+32'hFFFFFFFF+ca)[30:31]        CAReg-Out(S498)
	S543= OVReg.Out=OverFlow(a+32'hFFFFFFFF+ca)                 OVReg-Out(S500)
	S544= OVReg.Out26_31=OverFlow(a+32'hFFFFFFFF+ca)[26:31]     OVReg-Out(S500)
	S545= OVReg.Out30_31=OverFlow(a+32'hFFFFFFFF+ca)[30:31]     OVReg-Out(S500)
	S546= DR1bit.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             DR1bit-Out(S502)
	S547= DR1bit.Out26_31=so|OverFlow(a+32'hFFFFFFFF+ca)[26:31] DR1bit-Out(S502)
	S548= DR1bit.Out30_31=so|OverFlow(a+32'hFFFFFFFF+ca)[30:31] DR1bit-Out(S502)
	S549= DR4bit.Out={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DR4bit-Out(S504)
	S550= DR4bit.Out26_31={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}[26:31]DR4bit-Out(S504)
	S551= DR4bit.Out30_31={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}[30:31]DR4bit-Out(S504)
	S552= PIDReg.Out=>IMMU.PID                                  Premise(F275)
	S553= IMMU.PID=pid                                          Path(S509,S552)
	S554= PC.Out=>IMMU.IEA                                      Premise(F276)
	S555= IMMU.IEA=addr+4                                       Path(S514,S554)
	S556= IMMU.Addr={pid,addr+4}                                IMMU-Search(S553,S555)
	S557= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S553,S555)
	S558= IMMU.Addr=>IAddrReg.In                                Premise(F277)
	S559= IAddrReg.In={pid,addr+4}                              Path(S556,S558)
	S560= IMMU.Hit=>IMMUHitReg.In                               Premise(F278)
	S561= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S557,S560)
	S562= PC.Out=>ICache.IEA                                    Premise(F279)
	S563= ICache.IEA=addr+4                                     Path(S514,S562)
	S564= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S563)
	S565= ICache.Out=>ICacheReg.In                              Premise(F280)
	S566= ICache.Hit=>ICacheHitReg.In                           Premise(F281)
	S567= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S564,S566)
	S568= IMMUHitReg.Out=>CU.IMemHit                            Premise(F282)
	S569= CU.IMemHit=IMMUHit(pid,addr)                          Path(S518,S568)
	S570= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F283)
	S571= CU.ICacheHit=ICacheHit(addr)                          Path(S521,S570)
	S572= IAddrReg.Out=>IMem.RAddr                              Premise(F284)
	S573= IMem.RAddr={pid,addr}                                 Path(S515,S572)
	S574= IMem.Out={31,rT,rA,0,1493}                            IMem-Read(S573,S480)
	S575= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S573,S480)
	S576= IMem.Out=>IRMux.MemData                               Premise(F285)
	S577= IRMux.MemData={31,rT,rA,0,1493}                       Path(S574,S576)
	S578= IRMux.Out={31,rT,rA,0,1493}                           IRMux-Select(S577)
	S579= ICacheReg.Out=>IRMux.CacheData                        Premise(F286)
	S580= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F287)
	S581= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S518,S580)
	S582= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F288)
	S583= IRMux.CacheSel=ICacheHit(addr)                        Path(S521,S582)
	S584= IRMux.Out=>IR.In                                      Premise(F289)
	S585= IR.In={31,rT,rA,0,1493}                               Path(S578,S584)
	S586= IMem.MEM8WordOut=>ICache.WData                        Premise(F290)
	S587= ICache.WData=IMemGet8Word({pid,addr})                 Path(S575,S586)
	S588= PC.Out=>ICache.IEA                                    Premise(F291)
	S589= IR.Out0_5=>CU.Op                                      Premise(F292)
	S590= CU.Op=31                                              Path(S524,S589)
	S591= IR.Out11_15=>GPRegs.RReg1                             Premise(F293)
	S592= GPRegs.RReg1=rA                                       Path(S526,S591)
	S593= GPRegs.Rdata1=a                                       GPRegs-Read(S592,S485)
	S594= IR.Out21_31=>CU.IRFunc                                Premise(F294)
	S595= CU.IRFunc=1493                                        Path(S528,S594)
	S596= CU.Func=alu_adde                                      CU(S590,S595)
	S597= GPRegs.Rdata1=>A.In                                   Premise(F295)
	S598= A.In=a                                                Path(S593,S597)
	S599= A.Out=>ALU.A                                          Premise(F296)
	S600= ALU.A=a                                               Path(S529,S599)
	S601= B.Out=>ALU.B                                          Premise(F297)
	S602= ALU.B=32'hFFFFFFFF                                    Path(S532,S601)
	S603= XER.CAOut=>ALU.CAIn                                   Premise(F298)
	S604= ALU.CAIn=ca                                           Path(S536,S603)
	S605= CU.Func=>ALU.Func                                     Premise(F299)
	S606= ALU.Func=alu_adde                                     Path(S596,S605)
	S607= ALU.Out=a+32'hFFFFFFFF+ca                             ALU(S600,S602,S604)
	S608= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                   ALU(S600,S602,S604)
	S609= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                    ALU(S600,S602,S604)
	S610= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                       ALU(S600,S602,S604)
	S611= ALU.Out=>ALUOut.In                                    Premise(F300)
	S612= ALUOut.In=a+32'hFFFFFFFF+ca                           Path(S607,S611)
	S613= ALU.CA=>CAReg.In                                      Premise(F301)
	S614= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                     Path(S610,S613)
	S615= ALU.CMP=>DataCmb.A                                    Premise(F302)
	S616= DataCmb.A=Compare0(a+32'hFFFFFFFF+ca)                 Path(S608,S615)
	S617= ORGate.Out=>DataCmb.B                                 Premise(F303)
	S618= ALU.OV=>OVReg.In                                      Premise(F304)
	S619= OVReg.In=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S609,S618)
	S620= XER.SOOut=>ORGate.A                                   Premise(F305)
	S621= ORGate.A=so                                           Path(S535,S620)
	S622= ALU.OV=>ORGate.B                                      Premise(F306)
	S623= ORGate.B=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S609,S622)
	S624= ORGate.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             ORGate(S621,S623)
	S625= DataCmb.B=so|OverFlow(a+32'hFFFFFFFF+ca)              Path(S624,S617)
	S626= DataCmb.Out={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DataCmb(S616,S625)
	S627= ORGate.Out=>DR1bit.In                                 Premise(F307)
	S628= DR1bit.In=so|OverFlow(a+32'hFFFFFFFF+ca)              Path(S624,S627)
	S629= DataCmb.Out=>DR4bit.In                                Premise(F308)
	S630= DR4bit.In={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}Path(S626,S629)
	S631= IR.Out6_10=>GPRegs.WReg                               Premise(F309)
	S632= GPRegs.WReg=rT                                        Path(S525,S631)
	S633= ALUOut.Out=>GPRegs.WData                              Premise(F310)
	S634= GPRegs.WData=a+32'hFFFFFFFF+ca                        Path(S537,S633)
	S635= DR4bit.Out=>CRRegs.CR0In                              Premise(F311)
	S636= CRRegs.CR0In={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}Path(S549,S635)
	S637= DR1bit.Out=>XER.SOIn                                  Premise(F312)
	S638= XER.SOIn=so|OverFlow(a+32'hFFFFFFFF+ca)               Path(S546,S637)
	S639= CAReg.Out=>XER.CAIn                                   Premise(F313)
	S640= XER.CAIn=Carry(a+32'hFFFFFFFF+ca)                     Path(S540,S639)
	S641= OVReg.Out=>XER.OVIn                                   Premise(F314)
	S642= XER.OVIn=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S543,S641)
	S643= CtrlPIDReg=0                                          Premise(F315)
	S644= [PIDReg]=pid                                          PIDReg-Hold(S464,S643)
	S645= CtrlIMMU=0                                            Premise(F316)
	S646= CtrlPC=0                                              Premise(F317)
	S647= CtrlPCInc=0                                           Premise(F318)
	S648= PC[CIA]=addr                                          PC-Hold(S468,S647)
	S649= PC[Out]=addr+4                                        PC-Hold(S469,S646,S647)
	S650= CtrlIAddrReg=0                                        Premise(F319)
	S651= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S471,S650)
	S652= CtrlIMMUHitReg=0                                      Premise(F320)
	S653= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S473,S652)
	S654= CtrlICache=0                                          Premise(F321)
	S655= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S475,S654)
	S656= CtrlICacheReg=0                                       Premise(F322)
	S657= CtrlICacheHitReg=0                                    Premise(F323)
	S658= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S478,S657)
	S659= CtrlIMem=0                                            Premise(F324)
	S660= IMem[{pid,addr}]={31,rT,rA,0,1493}                    IMem-Hold(S480,S659)
	S661= CtrlIRMux=0                                           Premise(F325)
	S662= CtrlIR=0                                              Premise(F326)
	S663= [IR]={31,rT,rA,0,1493}                                IR-Hold(S483,S662)
	S664= CtrlGPRegs=0                                          Premise(F327)
	S665= GPRegs[rA]=a                                          GPRegs-Hold(S485,S664)
	S666= CtrlA=0                                               Premise(F328)
	S667= [A]=a                                                 A-Hold(S487,S666)
	S668= CtrlB=0                                               Premise(F329)
	S669= [B]=32'hFFFFFFFF                                      B-Hold(S489,S668)
	S670= CtrlXERSO=0                                           Premise(F330)
	S671= XER[SO]=so                                            XER-SO-Hold(S491,S670)
	S672= CtrlXEROV=0                                           Premise(F331)
	S673= CtrlXERCA=0                                           Premise(F332)
	S674= XER[CA]=ca                                            XER-CA-Hold(S494,S673)
	S675= CtrlALUOut=0                                          Premise(F333)
	S676= [ALUOut]=a+32'hFFFFFFFF+ca                            ALUOut-Hold(S496,S675)
	S677= CtrlCAReg=0                                           Premise(F334)
	S678= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                      CAReg-Hold(S498,S677)
	S679= CtrlOVReg=0                                           Premise(F335)
	S680= [OVReg]=OverFlow(a+32'hFFFFFFFF+ca)                   OVReg-Hold(S500,S679)
	S681= CtrlDR1bit=0                                          Premise(F336)
	S682= [DR1bit]=so|OverFlow(a+32'hFFFFFFFF+ca)               DR1bit-Hold(S502,S681)
	S683= CtrlDR4bit=0                                          Premise(F337)
	S684= [DR4bit]={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DR4bit-Hold(S504,S683)
	S685= CtrlCRRegs=0                                          Premise(F338)
	S686= CtrlCRRegsCR0=0                                       Premise(F339)
	S687= CtrlCRRegsW4bitRegs=0                                 Premise(F340)
	S688= CtrlCRRegsW1bitRegs=0                                 Premise(F341)

DMMU1	S689= PIDReg.Out=pid                                        PIDReg-Out(S644)
	S690= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S644)
	S691= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S644)
	S692= PC.CIA=addr                                           PC-Out(S648)
	S693= PC.CIA31_28=addr[31:28]                               PC-Out(S648)
	S694= PC.Out=addr+4                                         PC-Out(S649)
	S695= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S651)
	S696= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S651)
	S697= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S651)
	S698= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S653)
	S699= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S653)
	S700= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S653)
	S701= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S658)
	S702= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S658)
	S703= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S658)
	S704= IR.Out0_5=31                                          IR-Out(S663)
	S705= IR.Out6_10=rT                                         IR-Out(S663)
	S706= IR.Out11_15=rA                                        IR-Out(S663)
	S707= IR.Out16_20=0                                         IR-Out(S663)
	S708= IR.Out21_31=1493                                      IR-Out(S663)
	S709= A.Out=a                                               A-Out(S667)
	S710= A.Out26_31=a[26:31]                                   A-Out(S667)
	S711= A.Out30_31=a[30:31]                                   A-Out(S667)
	S712= B.Out=32'hFFFFFFFF                                    B-Out(S669)
	S713= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S669)
	S714= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S669)
	S715= XER.SOOut=so                                          XER-SO-Out(S671)
	S716= XER.CAOut=ca                                          XER-CA-Out(S674)
	S717= ALUOut.Out=a+32'hFFFFFFFF+ca                          ALUOut-Out(S676)
	S718= ALUOut.Out26_31=a+32'hFFFFFFFF+ca[26:31]              ALUOut-Out(S676)
	S719= ALUOut.Out30_31=a+32'hFFFFFFFF+ca[30:31]              ALUOut-Out(S676)
	S720= CAReg.Out=Carry(a+32'hFFFFFFFF+ca)                    CAReg-Out(S678)
	S721= CAReg.Out26_31=Carry(a+32'hFFFFFFFF+ca)[26:31]        CAReg-Out(S678)
	S722= CAReg.Out30_31=Carry(a+32'hFFFFFFFF+ca)[30:31]        CAReg-Out(S678)
	S723= OVReg.Out=OverFlow(a+32'hFFFFFFFF+ca)                 OVReg-Out(S680)
	S724= OVReg.Out26_31=OverFlow(a+32'hFFFFFFFF+ca)[26:31]     OVReg-Out(S680)
	S725= OVReg.Out30_31=OverFlow(a+32'hFFFFFFFF+ca)[30:31]     OVReg-Out(S680)
	S726= DR1bit.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             DR1bit-Out(S682)
	S727= DR1bit.Out26_31=so|OverFlow(a+32'hFFFFFFFF+ca)[26:31] DR1bit-Out(S682)
	S728= DR1bit.Out30_31=so|OverFlow(a+32'hFFFFFFFF+ca)[30:31] DR1bit-Out(S682)
	S729= DR4bit.Out={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DR4bit-Out(S684)
	S730= DR4bit.Out26_31={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}[26:31]DR4bit-Out(S684)
	S731= DR4bit.Out30_31={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}[30:31]DR4bit-Out(S684)
	S732= PIDReg.Out=>IMMU.PID                                  Premise(F342)
	S733= IMMU.PID=pid                                          Path(S689,S732)
	S734= PC.Out=>IMMU.IEA                                      Premise(F343)
	S735= IMMU.IEA=addr+4                                       Path(S694,S734)
	S736= IMMU.Addr={pid,addr+4}                                IMMU-Search(S733,S735)
	S737= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S733,S735)
	S738= IMMU.Addr=>IAddrReg.In                                Premise(F344)
	S739= IAddrReg.In={pid,addr+4}                              Path(S736,S738)
	S740= IMMU.Hit=>IMMUHitReg.In                               Premise(F345)
	S741= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S737,S740)
	S742= PC.Out=>ICache.IEA                                    Premise(F346)
	S743= ICache.IEA=addr+4                                     Path(S694,S742)
	S744= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S743)
	S745= ICache.Out=>ICacheReg.In                              Premise(F347)
	S746= ICache.Hit=>ICacheHitReg.In                           Premise(F348)
	S747= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S744,S746)
	S748= IMMUHitReg.Out=>CU.IMemHit                            Premise(F349)
	S749= CU.IMemHit=IMMUHit(pid,addr)                          Path(S698,S748)
	S750= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F350)
	S751= CU.ICacheHit=ICacheHit(addr)                          Path(S701,S750)
	S752= IAddrReg.Out=>IMem.RAddr                              Premise(F351)
	S753= IMem.RAddr={pid,addr}                                 Path(S695,S752)
	S754= IMem.Out={31,rT,rA,0,1493}                            IMem-Read(S753,S660)
	S755= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S753,S660)
	S756= IMem.Out=>IRMux.MemData                               Premise(F352)
	S757= IRMux.MemData={31,rT,rA,0,1493}                       Path(S754,S756)
	S758= IRMux.Out={31,rT,rA,0,1493}                           IRMux-Select(S757)
	S759= ICacheReg.Out=>IRMux.CacheData                        Premise(F353)
	S760= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F354)
	S761= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S698,S760)
	S762= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F355)
	S763= IRMux.CacheSel=ICacheHit(addr)                        Path(S701,S762)
	S764= IRMux.Out=>IR.In                                      Premise(F356)
	S765= IR.In={31,rT,rA,0,1493}                               Path(S758,S764)
	S766= IMem.MEM8WordOut=>ICache.WData                        Premise(F357)
	S767= ICache.WData=IMemGet8Word({pid,addr})                 Path(S755,S766)
	S768= PC.Out=>ICache.IEA                                    Premise(F358)
	S769= IR.Out0_5=>CU.Op                                      Premise(F359)
	S770= CU.Op=31                                              Path(S704,S769)
	S771= IR.Out11_15=>GPRegs.RReg1                             Premise(F360)
	S772= GPRegs.RReg1=rA                                       Path(S706,S771)
	S773= GPRegs.Rdata1=a                                       GPRegs-Read(S772,S665)
	S774= IR.Out21_31=>CU.IRFunc                                Premise(F361)
	S775= CU.IRFunc=1493                                        Path(S708,S774)
	S776= CU.Func=alu_adde                                      CU(S770,S775)
	S777= GPRegs.Rdata1=>A.In                                   Premise(F362)
	S778= A.In=a                                                Path(S773,S777)
	S779= A.Out=>ALU.A                                          Premise(F363)
	S780= ALU.A=a                                               Path(S709,S779)
	S781= B.Out=>ALU.B                                          Premise(F364)
	S782= ALU.B=32'hFFFFFFFF                                    Path(S712,S781)
	S783= XER.CAOut=>ALU.CAIn                                   Premise(F365)
	S784= ALU.CAIn=ca                                           Path(S716,S783)
	S785= CU.Func=>ALU.Func                                     Premise(F366)
	S786= ALU.Func=alu_adde                                     Path(S776,S785)
	S787= ALU.Out=a+32'hFFFFFFFF+ca                             ALU(S780,S782,S784)
	S788= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                   ALU(S780,S782,S784)
	S789= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                    ALU(S780,S782,S784)
	S790= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                       ALU(S780,S782,S784)
	S791= ALU.Out=>ALUOut.In                                    Premise(F367)
	S792= ALUOut.In=a+32'hFFFFFFFF+ca                           Path(S787,S791)
	S793= ALU.CA=>CAReg.In                                      Premise(F368)
	S794= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                     Path(S790,S793)
	S795= ALU.CMP=>DataCmb.A                                    Premise(F369)
	S796= DataCmb.A=Compare0(a+32'hFFFFFFFF+ca)                 Path(S788,S795)
	S797= ORGate.Out=>DataCmb.B                                 Premise(F370)
	S798= ALU.OV=>OVReg.In                                      Premise(F371)
	S799= OVReg.In=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S789,S798)
	S800= XER.SOOut=>ORGate.A                                   Premise(F372)
	S801= ORGate.A=so                                           Path(S715,S800)
	S802= ALU.OV=>ORGate.B                                      Premise(F373)
	S803= ORGate.B=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S789,S802)
	S804= ORGate.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             ORGate(S801,S803)
	S805= DataCmb.B=so|OverFlow(a+32'hFFFFFFFF+ca)              Path(S804,S797)
	S806= DataCmb.Out={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DataCmb(S796,S805)
	S807= ORGate.Out=>DR1bit.In                                 Premise(F374)
	S808= DR1bit.In=so|OverFlow(a+32'hFFFFFFFF+ca)              Path(S804,S807)
	S809= DataCmb.Out=>DR4bit.In                                Premise(F375)
	S810= DR4bit.In={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}Path(S806,S809)
	S811= IR.Out6_10=>GPRegs.WReg                               Premise(F376)
	S812= GPRegs.WReg=rT                                        Path(S705,S811)
	S813= ALUOut.Out=>GPRegs.WData                              Premise(F377)
	S814= GPRegs.WData=a+32'hFFFFFFFF+ca                        Path(S717,S813)
	S815= DR4bit.Out=>CRRegs.CR0In                              Premise(F378)
	S816= CRRegs.CR0In={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}Path(S729,S815)
	S817= DR1bit.Out=>XER.SOIn                                  Premise(F379)
	S818= XER.SOIn=so|OverFlow(a+32'hFFFFFFFF+ca)               Path(S726,S817)
	S819= CAReg.Out=>XER.CAIn                                   Premise(F380)
	S820= XER.CAIn=Carry(a+32'hFFFFFFFF+ca)                     Path(S720,S819)
	S821= OVReg.Out=>XER.OVIn                                   Premise(F381)
	S822= XER.OVIn=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S723,S821)
	S823= CtrlPIDReg=0                                          Premise(F382)
	S824= [PIDReg]=pid                                          PIDReg-Hold(S644,S823)
	S825= CtrlIMMU=0                                            Premise(F383)
	S826= CtrlPC=0                                              Premise(F384)
	S827= CtrlPCInc=0                                           Premise(F385)
	S828= PC[CIA]=addr                                          PC-Hold(S648,S827)
	S829= PC[Out]=addr+4                                        PC-Hold(S649,S826,S827)
	S830= CtrlIAddrReg=0                                        Premise(F386)
	S831= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S651,S830)
	S832= CtrlIMMUHitReg=0                                      Premise(F387)
	S833= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S653,S832)
	S834= CtrlICache=0                                          Premise(F388)
	S835= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S655,S834)
	S836= CtrlICacheReg=0                                       Premise(F389)
	S837= CtrlICacheHitReg=0                                    Premise(F390)
	S838= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S658,S837)
	S839= CtrlIMem=0                                            Premise(F391)
	S840= IMem[{pid,addr}]={31,rT,rA,0,1493}                    IMem-Hold(S660,S839)
	S841= CtrlIRMux=0                                           Premise(F392)
	S842= CtrlIR=0                                              Premise(F393)
	S843= [IR]={31,rT,rA,0,1493}                                IR-Hold(S663,S842)
	S844= CtrlGPRegs=0                                          Premise(F394)
	S845= GPRegs[rA]=a                                          GPRegs-Hold(S665,S844)
	S846= CtrlA=0                                               Premise(F395)
	S847= [A]=a                                                 A-Hold(S667,S846)
	S848= CtrlB=0                                               Premise(F396)
	S849= [B]=32'hFFFFFFFF                                      B-Hold(S669,S848)
	S850= CtrlXERSO=0                                           Premise(F397)
	S851= XER[SO]=so                                            XER-SO-Hold(S671,S850)
	S852= CtrlXEROV=0                                           Premise(F398)
	S853= CtrlXERCA=0                                           Premise(F399)
	S854= XER[CA]=ca                                            XER-CA-Hold(S674,S853)
	S855= CtrlALUOut=0                                          Premise(F400)
	S856= [ALUOut]=a+32'hFFFFFFFF+ca                            ALUOut-Hold(S676,S855)
	S857= CtrlCAReg=0                                           Premise(F401)
	S858= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                      CAReg-Hold(S678,S857)
	S859= CtrlOVReg=0                                           Premise(F402)
	S860= [OVReg]=OverFlow(a+32'hFFFFFFFF+ca)                   OVReg-Hold(S680,S859)
	S861= CtrlDR1bit=0                                          Premise(F403)
	S862= [DR1bit]=so|OverFlow(a+32'hFFFFFFFF+ca)               DR1bit-Hold(S682,S861)
	S863= CtrlDR4bit=0                                          Premise(F404)
	S864= [DR4bit]={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DR4bit-Hold(S684,S863)
	S865= CtrlCRRegs=0                                          Premise(F405)
	S866= CtrlCRRegsCR0=0                                       Premise(F406)
	S867= CtrlCRRegsW4bitRegs=0                                 Premise(F407)
	S868= CtrlCRRegsW1bitRegs=0                                 Premise(F408)

DMMU2	S869= PIDReg.Out=pid                                        PIDReg-Out(S824)
	S870= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S824)
	S871= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S824)
	S872= PC.CIA=addr                                           PC-Out(S828)
	S873= PC.CIA31_28=addr[31:28]                               PC-Out(S828)
	S874= PC.Out=addr+4                                         PC-Out(S829)
	S875= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S831)
	S876= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S831)
	S877= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S831)
	S878= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S833)
	S879= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S833)
	S880= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S833)
	S881= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S838)
	S882= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S838)
	S883= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S838)
	S884= IR.Out0_5=31                                          IR-Out(S843)
	S885= IR.Out6_10=rT                                         IR-Out(S843)
	S886= IR.Out11_15=rA                                        IR-Out(S843)
	S887= IR.Out16_20=0                                         IR-Out(S843)
	S888= IR.Out21_31=1493                                      IR-Out(S843)
	S889= A.Out=a                                               A-Out(S847)
	S890= A.Out26_31=a[26:31]                                   A-Out(S847)
	S891= A.Out30_31=a[30:31]                                   A-Out(S847)
	S892= B.Out=32'hFFFFFFFF                                    B-Out(S849)
	S893= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S849)
	S894= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S849)
	S895= XER.SOOut=so                                          XER-SO-Out(S851)
	S896= XER.CAOut=ca                                          XER-CA-Out(S854)
	S897= ALUOut.Out=a+32'hFFFFFFFF+ca                          ALUOut-Out(S856)
	S898= ALUOut.Out26_31=a+32'hFFFFFFFF+ca[26:31]              ALUOut-Out(S856)
	S899= ALUOut.Out30_31=a+32'hFFFFFFFF+ca[30:31]              ALUOut-Out(S856)
	S900= CAReg.Out=Carry(a+32'hFFFFFFFF+ca)                    CAReg-Out(S858)
	S901= CAReg.Out26_31=Carry(a+32'hFFFFFFFF+ca)[26:31]        CAReg-Out(S858)
	S902= CAReg.Out30_31=Carry(a+32'hFFFFFFFF+ca)[30:31]        CAReg-Out(S858)
	S903= OVReg.Out=OverFlow(a+32'hFFFFFFFF+ca)                 OVReg-Out(S860)
	S904= OVReg.Out26_31=OverFlow(a+32'hFFFFFFFF+ca)[26:31]     OVReg-Out(S860)
	S905= OVReg.Out30_31=OverFlow(a+32'hFFFFFFFF+ca)[30:31]     OVReg-Out(S860)
	S906= DR1bit.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             DR1bit-Out(S862)
	S907= DR1bit.Out26_31=so|OverFlow(a+32'hFFFFFFFF+ca)[26:31] DR1bit-Out(S862)
	S908= DR1bit.Out30_31=so|OverFlow(a+32'hFFFFFFFF+ca)[30:31] DR1bit-Out(S862)
	S909= DR4bit.Out={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DR4bit-Out(S864)
	S910= DR4bit.Out26_31={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}[26:31]DR4bit-Out(S864)
	S911= DR4bit.Out30_31={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}[30:31]DR4bit-Out(S864)
	S912= PIDReg.Out=>IMMU.PID                                  Premise(F409)
	S913= IMMU.PID=pid                                          Path(S869,S912)
	S914= PC.Out=>IMMU.IEA                                      Premise(F410)
	S915= IMMU.IEA=addr+4                                       Path(S874,S914)
	S916= IMMU.Addr={pid,addr+4}                                IMMU-Search(S913,S915)
	S917= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S913,S915)
	S918= IMMU.Addr=>IAddrReg.In                                Premise(F411)
	S919= IAddrReg.In={pid,addr+4}                              Path(S916,S918)
	S920= IMMU.Hit=>IMMUHitReg.In                               Premise(F412)
	S921= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S917,S920)
	S922= PC.Out=>ICache.IEA                                    Premise(F413)
	S923= ICache.IEA=addr+4                                     Path(S874,S922)
	S924= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S923)
	S925= ICache.Out=>ICacheReg.In                              Premise(F414)
	S926= ICache.Hit=>ICacheHitReg.In                           Premise(F415)
	S927= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S924,S926)
	S928= IMMUHitReg.Out=>CU.IMemHit                            Premise(F416)
	S929= CU.IMemHit=IMMUHit(pid,addr)                          Path(S878,S928)
	S930= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F417)
	S931= CU.ICacheHit=ICacheHit(addr)                          Path(S881,S930)
	S932= IAddrReg.Out=>IMem.RAddr                              Premise(F418)
	S933= IMem.RAddr={pid,addr}                                 Path(S875,S932)
	S934= IMem.Out={31,rT,rA,0,1493}                            IMem-Read(S933,S840)
	S935= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S933,S840)
	S936= IMem.Out=>IRMux.MemData                               Premise(F419)
	S937= IRMux.MemData={31,rT,rA,0,1493}                       Path(S934,S936)
	S938= IRMux.Out={31,rT,rA,0,1493}                           IRMux-Select(S937)
	S939= ICacheReg.Out=>IRMux.CacheData                        Premise(F420)
	S940= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F421)
	S941= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S878,S940)
	S942= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F422)
	S943= IRMux.CacheSel=ICacheHit(addr)                        Path(S881,S942)
	S944= IRMux.Out=>IR.In                                      Premise(F423)
	S945= IR.In={31,rT,rA,0,1493}                               Path(S938,S944)
	S946= IMem.MEM8WordOut=>ICache.WData                        Premise(F424)
	S947= ICache.WData=IMemGet8Word({pid,addr})                 Path(S935,S946)
	S948= PC.Out=>ICache.IEA                                    Premise(F425)
	S949= IR.Out0_5=>CU.Op                                      Premise(F426)
	S950= CU.Op=31                                              Path(S884,S949)
	S951= IR.Out11_15=>GPRegs.RReg1                             Premise(F427)
	S952= GPRegs.RReg1=rA                                       Path(S886,S951)
	S953= GPRegs.Rdata1=a                                       GPRegs-Read(S952,S845)
	S954= IR.Out21_31=>CU.IRFunc                                Premise(F428)
	S955= CU.IRFunc=1493                                        Path(S888,S954)
	S956= CU.Func=alu_adde                                      CU(S950,S955)
	S957= GPRegs.Rdata1=>A.In                                   Premise(F429)
	S958= A.In=a                                                Path(S953,S957)
	S959= A.Out=>ALU.A                                          Premise(F430)
	S960= ALU.A=a                                               Path(S889,S959)
	S961= B.Out=>ALU.B                                          Premise(F431)
	S962= ALU.B=32'hFFFFFFFF                                    Path(S892,S961)
	S963= XER.CAOut=>ALU.CAIn                                   Premise(F432)
	S964= ALU.CAIn=ca                                           Path(S896,S963)
	S965= CU.Func=>ALU.Func                                     Premise(F433)
	S966= ALU.Func=alu_adde                                     Path(S956,S965)
	S967= ALU.Out=a+32'hFFFFFFFF+ca                             ALU(S960,S962,S964)
	S968= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                   ALU(S960,S962,S964)
	S969= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                    ALU(S960,S962,S964)
	S970= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                       ALU(S960,S962,S964)
	S971= ALU.Out=>ALUOut.In                                    Premise(F434)
	S972= ALUOut.In=a+32'hFFFFFFFF+ca                           Path(S967,S971)
	S973= ALU.CA=>CAReg.In                                      Premise(F435)
	S974= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                     Path(S970,S973)
	S975= ALU.CMP=>DataCmb.A                                    Premise(F436)
	S976= DataCmb.A=Compare0(a+32'hFFFFFFFF+ca)                 Path(S968,S975)
	S977= ORGate.Out=>DataCmb.B                                 Premise(F437)
	S978= ALU.OV=>OVReg.In                                      Premise(F438)
	S979= OVReg.In=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S969,S978)
	S980= XER.SOOut=>ORGate.A                                   Premise(F439)
	S981= ORGate.A=so                                           Path(S895,S980)
	S982= ALU.OV=>ORGate.B                                      Premise(F440)
	S983= ORGate.B=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S969,S982)
	S984= ORGate.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             ORGate(S981,S983)
	S985= DataCmb.B=so|OverFlow(a+32'hFFFFFFFF+ca)              Path(S984,S977)
	S986= DataCmb.Out={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DataCmb(S976,S985)
	S987= ORGate.Out=>DR1bit.In                                 Premise(F441)
	S988= DR1bit.In=so|OverFlow(a+32'hFFFFFFFF+ca)              Path(S984,S987)
	S989= DataCmb.Out=>DR4bit.In                                Premise(F442)
	S990= DR4bit.In={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}Path(S986,S989)
	S991= IR.Out6_10=>GPRegs.WReg                               Premise(F443)
	S992= GPRegs.WReg=rT                                        Path(S885,S991)
	S993= ALUOut.Out=>GPRegs.WData                              Premise(F444)
	S994= GPRegs.WData=a+32'hFFFFFFFF+ca                        Path(S897,S993)
	S995= DR4bit.Out=>CRRegs.CR0In                              Premise(F445)
	S996= CRRegs.CR0In={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}Path(S909,S995)
	S997= DR1bit.Out=>XER.SOIn                                  Premise(F446)
	S998= XER.SOIn=so|OverFlow(a+32'hFFFFFFFF+ca)               Path(S906,S997)
	S999= CAReg.Out=>XER.CAIn                                   Premise(F447)
	S1000= XER.CAIn=Carry(a+32'hFFFFFFFF+ca)                    Path(S900,S999)
	S1001= OVReg.Out=>XER.OVIn                                  Premise(F448)
	S1002= XER.OVIn=OverFlow(a+32'hFFFFFFFF+ca)                 Path(S903,S1001)
	S1003= CtrlPIDReg=0                                         Premise(F449)
	S1004= [PIDReg]=pid                                         PIDReg-Hold(S824,S1003)
	S1005= CtrlIMMU=0                                           Premise(F450)
	S1006= CtrlPC=0                                             Premise(F451)
	S1007= CtrlPCInc=0                                          Premise(F452)
	S1008= PC[CIA]=addr                                         PC-Hold(S828,S1007)
	S1009= PC[Out]=addr+4                                       PC-Hold(S829,S1006,S1007)
	S1010= CtrlIAddrReg=0                                       Premise(F453)
	S1011= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S831,S1010)
	S1012= CtrlIMMUHitReg=0                                     Premise(F454)
	S1013= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S833,S1012)
	S1014= CtrlICache=0                                         Premise(F455)
	S1015= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S835,S1014)
	S1016= CtrlICacheReg=0                                      Premise(F456)
	S1017= CtrlICacheHitReg=0                                   Premise(F457)
	S1018= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S838,S1017)
	S1019= CtrlIMem=0                                           Premise(F458)
	S1020= IMem[{pid,addr}]={31,rT,rA,0,1493}                   IMem-Hold(S840,S1019)
	S1021= CtrlIRMux=0                                          Premise(F459)
	S1022= CtrlIR=0                                             Premise(F460)
	S1023= [IR]={31,rT,rA,0,1493}                               IR-Hold(S843,S1022)
	S1024= CtrlGPRegs=0                                         Premise(F461)
	S1025= GPRegs[rA]=a                                         GPRegs-Hold(S845,S1024)
	S1026= CtrlA=0                                              Premise(F462)
	S1027= [A]=a                                                A-Hold(S847,S1026)
	S1028= CtrlB=0                                              Premise(F463)
	S1029= [B]=32'hFFFFFFFF                                     B-Hold(S849,S1028)
	S1030= CtrlXERSO=0                                          Premise(F464)
	S1031= XER[SO]=so                                           XER-SO-Hold(S851,S1030)
	S1032= CtrlXEROV=0                                          Premise(F465)
	S1033= CtrlXERCA=0                                          Premise(F466)
	S1034= XER[CA]=ca                                           XER-CA-Hold(S854,S1033)
	S1035= CtrlALUOut=0                                         Premise(F467)
	S1036= [ALUOut]=a+32'hFFFFFFFF+ca                           ALUOut-Hold(S856,S1035)
	S1037= CtrlCAReg=0                                          Premise(F468)
	S1038= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                     CAReg-Hold(S858,S1037)
	S1039= CtrlOVReg=0                                          Premise(F469)
	S1040= [OVReg]=OverFlow(a+32'hFFFFFFFF+ca)                  OVReg-Hold(S860,S1039)
	S1041= CtrlDR1bit=0                                         Premise(F470)
	S1042= [DR1bit]=so|OverFlow(a+32'hFFFFFFFF+ca)              DR1bit-Hold(S862,S1041)
	S1043= CtrlDR4bit=0                                         Premise(F471)
	S1044= [DR4bit]={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DR4bit-Hold(S864,S1043)
	S1045= CtrlCRRegs=0                                         Premise(F472)
	S1046= CtrlCRRegsCR0=0                                      Premise(F473)
	S1047= CtrlCRRegsW4bitRegs=0                                Premise(F474)
	S1048= CtrlCRRegsW1bitRegs=0                                Premise(F475)

WB	S1049= PIDReg.Out=pid                                       PIDReg-Out(S1004)
	S1050= PIDReg.Out26_31=pid[26:31]                           PIDReg-Out(S1004)
	S1051= PIDReg.Out30_31=pid[30:31]                           PIDReg-Out(S1004)
	S1052= PC.CIA=addr                                          PC-Out(S1008)
	S1053= PC.CIA31_28=addr[31:28]                              PC-Out(S1008)
	S1054= PC.Out=addr+4                                        PC-Out(S1009)
	S1055= IAddrReg.Out={pid,addr}                              IAddrReg-Out(S1011)
	S1056= IAddrReg.Out26_31={pid,addr}[26:31]                  IAddrReg-Out(S1011)
	S1057= IAddrReg.Out30_31={pid,addr}[30:31]                  IAddrReg-Out(S1011)
	S1058= IMMUHitReg.Out=IMMUHit(pid,addr)                     IMMUHitReg-Out(S1013)
	S1059= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S1013)
	S1060= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S1013)
	S1061= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S1018)
	S1062= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S1018)
	S1063= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S1018)
	S1064= IR.Out0_5=31                                         IR-Out(S1023)
	S1065= IR.Out6_10=rT                                        IR-Out(S1023)
	S1066= IR.Out11_15=rA                                       IR-Out(S1023)
	S1067= IR.Out16_20=0                                        IR-Out(S1023)
	S1068= IR.Out21_31=1493                                     IR-Out(S1023)
	S1069= A.Out=a                                              A-Out(S1027)
	S1070= A.Out26_31=a[26:31]                                  A-Out(S1027)
	S1071= A.Out30_31=a[30:31]                                  A-Out(S1027)
	S1072= B.Out=32'hFFFFFFFF                                   B-Out(S1029)
	S1073= B.Out26_31=32'hFFFFFFFF[26:31]                       B-Out(S1029)
	S1074= B.Out30_31=32'hFFFFFFFF[30:31]                       B-Out(S1029)
	S1075= XER.SOOut=so                                         XER-SO-Out(S1031)
	S1076= XER.CAOut=ca                                         XER-CA-Out(S1034)
	S1077= ALUOut.Out=a+32'hFFFFFFFF+ca                         ALUOut-Out(S1036)
	S1078= ALUOut.Out26_31=a+32'hFFFFFFFF+ca[26:31]             ALUOut-Out(S1036)
	S1079= ALUOut.Out30_31=a+32'hFFFFFFFF+ca[30:31]             ALUOut-Out(S1036)
	S1080= CAReg.Out=Carry(a+32'hFFFFFFFF+ca)                   CAReg-Out(S1038)
	S1081= CAReg.Out26_31=Carry(a+32'hFFFFFFFF+ca)[26:31]       CAReg-Out(S1038)
	S1082= CAReg.Out30_31=Carry(a+32'hFFFFFFFF+ca)[30:31]       CAReg-Out(S1038)
	S1083= OVReg.Out=OverFlow(a+32'hFFFFFFFF+ca)                OVReg-Out(S1040)
	S1084= OVReg.Out26_31=OverFlow(a+32'hFFFFFFFF+ca)[26:31]    OVReg-Out(S1040)
	S1085= OVReg.Out30_31=OverFlow(a+32'hFFFFFFFF+ca)[30:31]    OVReg-Out(S1040)
	S1086= DR1bit.Out=so|OverFlow(a+32'hFFFFFFFF+ca)            DR1bit-Out(S1042)
	S1087= DR1bit.Out26_31=so|OverFlow(a+32'hFFFFFFFF+ca)[26:31]DR1bit-Out(S1042)
	S1088= DR1bit.Out30_31=so|OverFlow(a+32'hFFFFFFFF+ca)[30:31]DR1bit-Out(S1042)
	S1089= DR4bit.Out={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DR4bit-Out(S1044)
	S1090= DR4bit.Out26_31={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}[26:31]DR4bit-Out(S1044)
	S1091= DR4bit.Out30_31={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}[30:31]DR4bit-Out(S1044)
	S1092= PIDReg.Out=>IMMU.PID                                 Premise(F476)
	S1093= IMMU.PID=pid                                         Path(S1049,S1092)
	S1094= PC.Out=>IMMU.IEA                                     Premise(F477)
	S1095= IMMU.IEA=addr+4                                      Path(S1054,S1094)
	S1096= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1093,S1095)
	S1097= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1093,S1095)
	S1098= IMMU.Addr=>IAddrReg.In                               Premise(F478)
	S1099= IAddrReg.In={pid,addr+4}                             Path(S1096,S1098)
	S1100= IMMU.Hit=>IMMUHitReg.In                              Premise(F479)
	S1101= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1097,S1100)
	S1102= PC.Out=>ICache.IEA                                   Premise(F480)
	S1103= ICache.IEA=addr+4                                    Path(S1054,S1102)
	S1104= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1103)
	S1105= ICache.Out=>ICacheReg.In                             Premise(F481)
	S1106= ICache.Hit=>ICacheHitReg.In                          Premise(F482)
	S1107= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1104,S1106)
	S1108= IMMUHitReg.Out=>CU.IMemHit                           Premise(F483)
	S1109= CU.IMemHit=IMMUHit(pid,addr)                         Path(S1058,S1108)
	S1110= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F484)
	S1111= CU.ICacheHit=ICacheHit(addr)                         Path(S1061,S1110)
	S1112= IAddrReg.Out=>IMem.RAddr                             Premise(F485)
	S1113= IMem.RAddr={pid,addr}                                Path(S1055,S1112)
	S1114= IMem.Out={31,rT,rA,0,1493}                           IMem-Read(S1113,S1020)
	S1115= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1113,S1020)
	S1116= IMem.Out=>IRMux.MemData                              Premise(F486)
	S1117= IRMux.MemData={31,rT,rA,0,1493}                      Path(S1114,S1116)
	S1118= IRMux.Out={31,rT,rA,0,1493}                          IRMux-Select(S1117)
	S1119= ICacheReg.Out=>IRMux.CacheData                       Premise(F487)
	S1120= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F488)
	S1121= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S1058,S1120)
	S1122= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F489)
	S1123= IRMux.CacheSel=ICacheHit(addr)                       Path(S1061,S1122)
	S1124= IRMux.Out=>IR.In                                     Premise(F490)
	S1125= IR.In={31,rT,rA,0,1493}                              Path(S1118,S1124)
	S1126= IMem.MEM8WordOut=>ICache.WData                       Premise(F491)
	S1127= ICache.WData=IMemGet8Word({pid,addr})                Path(S1115,S1126)
	S1128= PC.Out=>ICache.IEA                                   Premise(F492)
	S1129= IR.Out0_5=>CU.Op                                     Premise(F493)
	S1130= CU.Op=31                                             Path(S1064,S1129)
	S1131= IR.Out11_15=>GPRegs.RReg1                            Premise(F494)
	S1132= GPRegs.RReg1=rA                                      Path(S1066,S1131)
	S1133= GPRegs.Rdata1=a                                      GPRegs-Read(S1132,S1025)
	S1134= IR.Out21_31=>CU.IRFunc                               Premise(F495)
	S1135= CU.IRFunc=1493                                       Path(S1068,S1134)
	S1136= CU.Func=alu_adde                                     CU(S1130,S1135)
	S1137= GPRegs.Rdata1=>A.In                                  Premise(F496)
	S1138= A.In=a                                               Path(S1133,S1137)
	S1139= A.Out=>ALU.A                                         Premise(F497)
	S1140= ALU.A=a                                              Path(S1069,S1139)
	S1141= B.Out=>ALU.B                                         Premise(F498)
	S1142= ALU.B=32'hFFFFFFFF                                   Path(S1072,S1141)
	S1143= XER.CAOut=>ALU.CAIn                                  Premise(F499)
	S1144= ALU.CAIn=ca                                          Path(S1076,S1143)
	S1145= CU.Func=>ALU.Func                                    Premise(F500)
	S1146= ALU.Func=alu_adde                                    Path(S1136,S1145)
	S1147= ALU.Out=a+32'hFFFFFFFF+ca                            ALU(S1140,S1142,S1144)
	S1148= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                  ALU(S1140,S1142,S1144)
	S1149= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                   ALU(S1140,S1142,S1144)
	S1150= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                      ALU(S1140,S1142,S1144)
	S1151= ALU.Out=>ALUOut.In                                   Premise(F501)
	S1152= ALUOut.In=a+32'hFFFFFFFF+ca                          Path(S1147,S1151)
	S1153= ALU.CA=>CAReg.In                                     Premise(F502)
	S1154= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                    Path(S1150,S1153)
	S1155= ALU.CMP=>DataCmb.A                                   Premise(F503)
	S1156= DataCmb.A=Compare0(a+32'hFFFFFFFF+ca)                Path(S1148,S1155)
	S1157= ORGate.Out=>DataCmb.B                                Premise(F504)
	S1158= ALU.OV=>OVReg.In                                     Premise(F505)
	S1159= OVReg.In=OverFlow(a+32'hFFFFFFFF+ca)                 Path(S1149,S1158)
	S1160= XER.SOOut=>ORGate.A                                  Premise(F506)
	S1161= ORGate.A=so                                          Path(S1075,S1160)
	S1162= ALU.OV=>ORGate.B                                     Premise(F507)
	S1163= ORGate.B=OverFlow(a+32'hFFFFFFFF+ca)                 Path(S1149,S1162)
	S1164= ORGate.Out=so|OverFlow(a+32'hFFFFFFFF+ca)            ORGate(S1161,S1163)
	S1165= DataCmb.B=so|OverFlow(a+32'hFFFFFFFF+ca)             Path(S1164,S1157)
	S1166= DataCmb.Out={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DataCmb(S1156,S1165)
	S1167= ORGate.Out=>DR1bit.In                                Premise(F508)
	S1168= DR1bit.In=so|OverFlow(a+32'hFFFFFFFF+ca)             Path(S1164,S1167)
	S1169= DataCmb.Out=>DR4bit.In                               Premise(F509)
	S1170= DR4bit.In={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}Path(S1166,S1169)
	S1171= IR.Out6_10=>GPRegs.WReg                              Premise(F510)
	S1172= GPRegs.WReg=rT                                       Path(S1065,S1171)
	S1173= ALUOut.Out=>GPRegs.WData                             Premise(F511)
	S1174= GPRegs.WData=a+32'hFFFFFFFF+ca                       Path(S1077,S1173)
	S1175= DR4bit.Out=>CRRegs.CR0In                             Premise(F512)
	S1176= CRRegs.CR0In={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}Path(S1089,S1175)
	S1177= DR1bit.Out=>XER.SOIn                                 Premise(F513)
	S1178= XER.SOIn=so|OverFlow(a+32'hFFFFFFFF+ca)              Path(S1086,S1177)
	S1179= CAReg.Out=>XER.CAIn                                  Premise(F514)
	S1180= XER.CAIn=Carry(a+32'hFFFFFFFF+ca)                    Path(S1080,S1179)
	S1181= OVReg.Out=>XER.OVIn                                  Premise(F515)
	S1182= XER.OVIn=OverFlow(a+32'hFFFFFFFF+ca)                 Path(S1083,S1181)
	S1183= CtrlPIDReg=0                                         Premise(F516)
	S1184= [PIDReg]=pid                                         PIDReg-Hold(S1004,S1183)
	S1185= CtrlIMMU=0                                           Premise(F517)
	S1186= CtrlPC=0                                             Premise(F518)
	S1187= CtrlPCInc=0                                          Premise(F519)
	S1188= PC[CIA]=addr                                         PC-Hold(S1008,S1187)
	S1189= PC[Out]=addr+4                                       PC-Hold(S1009,S1186,S1187)
	S1190= CtrlIAddrReg=0                                       Premise(F520)
	S1191= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1011,S1190)
	S1192= CtrlIMMUHitReg=0                                     Premise(F521)
	S1193= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1013,S1192)
	S1194= CtrlICache=0                                         Premise(F522)
	S1195= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S1015,S1194)
	S1196= CtrlICacheReg=0                                      Premise(F523)
	S1197= CtrlICacheHitReg=0                                   Premise(F524)
	S1198= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1018,S1197)
	S1199= CtrlIMem=0                                           Premise(F525)
	S1200= IMem[{pid,addr}]={31,rT,rA,0,1493}                   IMem-Hold(S1020,S1199)
	S1201= CtrlIRMux=0                                          Premise(F526)
	S1202= CtrlIR=0                                             Premise(F527)
	S1203= [IR]={31,rT,rA,0,1493}                               IR-Hold(S1023,S1202)
	S1204= CtrlGPRegs=1                                         Premise(F528)
	S1205= GPRegs[rT]=a+32'hFFFFFFFF+ca                         GPRegs-Write(S1172,S1174,S1204)
	S1206= CtrlA=0                                              Premise(F529)
	S1207= [A]=a                                                A-Hold(S1027,S1206)
	S1208= CtrlB=0                                              Premise(F530)
	S1209= [B]=32'hFFFFFFFF                                     B-Hold(S1029,S1208)
	S1210= CtrlXERSO=1                                          Premise(F531)
	S1211= XER[SO]=so|OverFlow(a+32'hFFFFFFFF+ca)               XER-SO-Write(S1178,S1210)
	S1212= CtrlXEROV=1                                          Premise(F532)
	S1213= XER[OV]=OverFlow(a+32'hFFFFFFFF+ca)                  XER-OV-Write(S1182,S1212)
	S1214= CtrlXERCA=1                                          Premise(F533)
	S1215= XER[CA]=Carry(a+32'hFFFFFFFF+ca)                     XER-CA-Write(S1180,S1214)
	S1216= CtrlALUOut=0                                         Premise(F534)
	S1217= [ALUOut]=a+32'hFFFFFFFF+ca                           ALUOut-Hold(S1036,S1216)
	S1218= CtrlCAReg=0                                          Premise(F535)
	S1219= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                     CAReg-Hold(S1038,S1218)
	S1220= CtrlOVReg=0                                          Premise(F536)
	S1221= [OVReg]=OverFlow(a+32'hFFFFFFFF+ca)                  OVReg-Hold(S1040,S1220)
	S1222= CtrlDR1bit=0                                         Premise(F537)
	S1223= [DR1bit]=so|OverFlow(a+32'hFFFFFFFF+ca)              DR1bit-Hold(S1042,S1222)
	S1224= CtrlDR4bit=0                                         Premise(F538)
	S1225= [DR4bit]={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DR4bit-Hold(S1044,S1224)
	S1226= CtrlCRRegs=0                                         Premise(F539)
	S1227= CtrlCRRegsCR0=1                                      Premise(F540)
	S1228= CRRegs[CR0]={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}CRRegs-CR0-Write(S1176,S1227)
	S1229= CtrlCRRegsW4bitRegs=0                                Premise(F541)
	S1230= CtrlCRRegsW1bitRegs=0                                Premise(F542)

POST	S1184= [PIDReg]=pid                                         PIDReg-Hold(S1004,S1183)
	S1188= PC[CIA]=addr                                         PC-Hold(S1008,S1187)
	S1189= PC[Out]=addr+4                                       PC-Hold(S1009,S1186,S1187)
	S1191= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1011,S1190)
	S1193= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1013,S1192)
	S1195= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S1015,S1194)
	S1198= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1018,S1197)
	S1200= IMem[{pid,addr}]={31,rT,rA,0,1493}                   IMem-Hold(S1020,S1199)
	S1203= [IR]={31,rT,rA,0,1493}                               IR-Hold(S1023,S1202)
	S1205= GPRegs[rT]=a+32'hFFFFFFFF+ca                         GPRegs-Write(S1172,S1174,S1204)
	S1207= [A]=a                                                A-Hold(S1027,S1206)
	S1209= [B]=32'hFFFFFFFF                                     B-Hold(S1029,S1208)
	S1211= XER[SO]=so|OverFlow(a+32'hFFFFFFFF+ca)               XER-SO-Write(S1178,S1210)
	S1213= XER[OV]=OverFlow(a+32'hFFFFFFFF+ca)                  XER-OV-Write(S1182,S1212)
	S1215= XER[CA]=Carry(a+32'hFFFFFFFF+ca)                     XER-CA-Write(S1180,S1214)
	S1217= [ALUOut]=a+32'hFFFFFFFF+ca                           ALUOut-Hold(S1036,S1216)
	S1219= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                     CAReg-Hold(S1038,S1218)
	S1221= [OVReg]=OverFlow(a+32'hFFFFFFFF+ca)                  OVReg-Hold(S1040,S1220)
	S1223= [DR1bit]=so|OverFlow(a+32'hFFFFFFFF+ca)              DR1bit-Hold(S1042,S1222)
	S1225= [DR4bit]={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}DR4bit-Hold(S1044,S1224)
	S1228= CRRegs[CR0]={Compare0(a+32'hFFFFFFFF+ca),so|OverFlow(a+32'hFFFFFFFF+ca)}CRRegs-CR0-Write(S1176,S1227)

