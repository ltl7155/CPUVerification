
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,rT,0,0,24}                           Premise(F3)

IF	S2= PC.Out=addr                                             PC-Out(S0)
	S3= PC.Out=>ICache.IEA                                      Premise(F50)
	S4= ICache.IEA=addr                                         Path(S2,S3)
	S5= ICache.Out={0,rS,rT,0,0,24}                             ICache-Search(S4,S1)
	S6= ICache.Out=>IR_ID.In                                    Premise(F57)
	S7= IR_ID.In={0,rS,rT,0,0,24}                               Path(S5,S6)
	S8= CtrlIR_ID=1                                             Premise(F100)
	S9= [IR_ID]={0,rS,rT,0,0,24}                                IR_ID-Write(S7,S8)
	S10= CtrlPC=0                                               Premise(F107)
	S11= CtrlPCInc=1                                            Premise(F108)
	S12= PC[Out]=addr+4                                         PC-Inc(S0,S10,S11)
	S13= GPR[rS]=a                                              Premise(F117)
	S14= GPR[rT]=b                                              Premise(F118)

ID	S15= IR_ID.Out25_21=rS                                      IR-Out(S9)
	S16= IR_ID.Out20_16=rT                                      IR-Out(S9)
	S17= FU.OutID1=>A_EX.In                                     Premise(F232)
	S18= FU.OutID2=>B_EX.In                                     Premise(F234)
	S19= GPR.Rdata1=>FU.InID1                                   Premise(F270)
	S20= GPR.Rdata2=>FU.InID2                                   Premise(F272)
	S21= IR_ID.Out25_21=>GPR.RReg1                              Premise(F274)
	S22= GPR.RReg1=rS                                           Path(S15,S21)
	S23= GPR.Rdata1=a                                           GPR-Read(S22,S13)
	S24= FU.InID1=a                                             Path(S23,S19)
	S25= FU.OutID1=FU(a)                                        FU-Forward(S24)
	S26= A_EX.In=FU(a)                                          Path(S25,S17)
	S27= IR_ID.Out20_16=>GPR.RReg2                              Premise(F275)
	S28= GPR.RReg2=rT                                           Path(S16,S27)
	S29= GPR.Rdata2=b                                           GPR-Read(S28,S14)
	S30= FU.InID2=b                                             Path(S29,S20)
	S31= FU.OutID2=FU(b)                                        FU-Forward(S30)
	S32= B_EX.In=FU(b)                                          Path(S31,S18)
	S33= CtrlA_EX=1                                             Premise(F317)
	S34= [A_EX]=FU(a)                                           A_EX-Write(S26,S33)
	S35= CtrlB_EX=1                                             Premise(F320)
	S36= [B_EX]=FU(b)                                           B_EX-Write(S32,S35)
	S37= CtrlPC=0                                               Premise(F335)
	S38= CtrlPCInc=0                                            Premise(F336)
	S39= PC[Out]=addr+4                                         PC-Hold(S12,S37,S38)

EX	S40= A_EX.Out=FU(a)                                         A_EX-Out(S34)
	S41= B_EX.Out=FU(b)                                         B_EX-Out(S36)
	S42= MDU.hi=>Hi.In                                          Premise(F390)
	S43= MDU.lo=>Lo.In                                          Premise(F404)
	S44= A_EX.Out=>MDU.A                                        Premise(F405)
	S45= MDU.A=FU(a)                                            Path(S40,S44)
	S46= B_EX.Out=>MDU.B                                        Premise(F406)
	S47= MDU.B=FU(b)                                            Path(S41,S46)
	S48= MDU.lo=(FU(a)×FU(b))[31:0]                             MDU(S45,S47)
	S49= Lo.In=(FU(a)×FU(b))[31:0]                              Path(S48,S43)
	S50= MDU.hi=(FU(a)×FU(b))[63:32]                            MDU(S45,S47)
	S51= Hi.In=(FU(a)×FU(b))[63:32]                             Path(S50,S42)
	S52= CtrlHi=1                                               Premise(F448)
	S53= [Hi]=(FU(a)×FU(b))[63:32]                              Hi-Write(S51,S52)
	S54= CtrlPC=0                                               Premise(F450)
	S55= CtrlPCInc=0                                            Premise(F451)
	S56= PC[Out]=addr+4                                         PC-Hold(S39,S54,S55)
	S57= CtrlLo=1                                               Premise(F459)
	S58= [Lo]=(FU(a)×FU(b))[31:0]                               Lo-Write(S49,S57)

MEM	S59= CtrlHi=0                                               Premise(F562)
	S60= [Hi]=(FU(a)×FU(b))[63:32]                              Hi-Hold(S53,S59)
	S61= CtrlPC=0                                               Premise(F564)
	S62= CtrlPCInc=0                                            Premise(F565)
	S63= PC[Out]=addr+4                                         PC-Hold(S56,S61,S62)
	S64= CtrlLo=0                                               Premise(F573)
	S65= [Lo]=(FU(a)×FU(b))[31:0]                               Lo-Hold(S58,S64)

WB	S66= CtrlHi=0                                               Premise(F904)
	S67= [Hi]=(FU(a)×FU(b))[63:32]                              Hi-Hold(S60,S66)
	S68= CtrlPC=0                                               Premise(F906)
	S69= CtrlPCInc=0                                            Premise(F907)
	S70= PC[Out]=addr+4                                         PC-Hold(S63,S68,S69)
	S71= CtrlLo=0                                               Premise(F915)
	S72= [Lo]=(FU(a)×FU(b))[31:0]                               Lo-Hold(S65,S71)

POST	S67= [Hi]=(FU(a)×FU(b))[63:32]                              Hi-Hold(S60,S66)
	S70= PC[Out]=addr+4                                         PC-Hold(S63,S68,S69)
	S72= [Lo]=(FU(a)×FU(b))[31:0]                               Lo-Hold(S65,S71)

