
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,rT,rD,0,37}                      Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)
	S4= GPR[rT]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S13= IAddrReg.In={pid,addr}                                 Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F18)
	S15= CtrlPCInc=0                                            Premise(F19)
	S16= PC[Out]=addr                                           PC-Hold(S1,S14,S15)
	S17= CtrlIAddrReg=1                                         Premise(F20)
	S18= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S17)
	S19= CtrlIMem=0                                             Premise(F24)
	S20= IMem[{pid,addr}]={0,rS,rT,rD,0,37}                     IMem-Hold(S2,S19)
	S21= CtrlGPR=0                                              Premise(F26)
	S22= GPR[rS]=a                                              GPR-Hold(S3,S21)
	S23= GPR[rT]=b                                              GPR-Hold(S4,S21)

IF(IMMU)	S24= PC.Out=addr                                            PC-Out(S16)
	S25= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S18)
	S26= IAddrReg.Out=>IMem.RAddr                               Premise(F32)
	S27= IMem.RAddr={pid,addr}                                  Path(S25,S26)
	S28= IMem.Out={0,rS,rT,rD,0,37}                             IMem-Read(S27,S20)
	S29= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S27,S20)
	S30= IMem.Out=>IRMux.MemData                                Premise(F33)
	S31= IRMux.MemData={0,rS,rT,rD,0,37}                        Path(S28,S30)
	S32= IRMux.Out={0,rS,rT,rD,0,37}                            IRMux-Select2(S31)
	S33= IRMux.Out=>IR.In                                       Premise(F37)
	S34= IR.In={0,rS,rT,rD,0,37}                                Path(S32,S33)
	S35= IMem.MEM8WordOut=>ICache.WData                         Premise(F38)
	S36= ICache.WData=IMemGet8Word({pid,addr})                  Path(S29,S35)
	S37= PC.Out=>ICache.IEA                                     Premise(F39)
	S38= ICache.IEA=addr                                        Path(S24,S37)
	S39= CtrlPC=0                                               Premise(F45)
	S40= CtrlPCInc=1                                            Premise(F46)
	S41= PC[Out]=addr+4                                         PC-Inc(S16,S39,S40)
	S42= CtrlICache=1                                           Premise(F48)
	S43= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S38,S36,S42)
	S44= CtrlIR=1                                               Premise(F49)
	S45= [IR]={0,rS,rT,rD,0,37}                                 IR-Write(S34,S44)
	S46= CtrlGPR=0                                              Premise(F53)
	S47= GPR[rS]=a                                              GPR-Hold(S22,S46)
	S48= GPR[rT]=b                                              GPR-Hold(S23,S46)

ID	S49= IR.Out25_21=rS                                         IR-Out(S45)
	S50= IR.Out20_16=rT                                         IR-Out(S45)
	S51= IR.Out25_21=>GPR.RReg1                                 Premise(F58)
	S52= GPR.RReg1=rS                                           Path(S49,S51)
	S53= GPR.Rdata1=a                                           GPR-Read(S52,S47)
	S54= IR.Out20_16=>GPR.RReg2                                 Premise(F59)
	S55= GPR.RReg2=rT                                           Path(S50,S54)
	S56= GPR.Rdata2=b                                           GPR-Read(S55,S48)
	S57= GPR.Rdata1=>A.In                                       Premise(F61)
	S58= A.In=a                                                 Path(S53,S57)
	S59= GPR.Rdata2=>B.In                                       Premise(F62)
	S60= B.In=b                                                 Path(S56,S59)
	S61= CtrlPC=0                                               Premise(F68)
	S62= CtrlPCInc=0                                            Premise(F69)
	S63= PC[Out]=addr+4                                         PC-Hold(S41,S61,S62)
	S64= CtrlICache=0                                           Premise(F71)
	S65= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S43,S64)
	S66= CtrlIR=0                                               Premise(F72)
	S67= [IR]={0,rS,rT,rD,0,37}                                 IR-Hold(S45,S66)
	S68= CtrlA=1                                                Premise(F77)
	S69= [A]=a                                                  A-Write(S58,S68)
	S70= CtrlB=1                                                Premise(F78)
	S71= [B]=b                                                  B-Write(S60,S70)

EX	S72= A.Out=a                                                A-Out(S69)
	S73= B.Out=b                                                B-Out(S71)
	S74= A.Out=>ALU.A                                           Premise(F80)
	S75= ALU.A=a                                                Path(S72,S74)
	S76= B.Out=>ALU.B                                           Premise(F81)
	S77= ALU.B=b                                                Path(S73,S76)
	S78= ALU.Out=a|b                                            ALU(S75,S77)
	S79= ALU.Out=>ALUOut.In                                     Premise(F83)
	S80= ALUOut.In=a|b                                          Path(S78,S79)
	S81= CtrlPC=0                                               Premise(F89)
	S82= CtrlPCInc=0                                            Premise(F90)
	S83= PC[Out]=addr+4                                         PC-Hold(S63,S81,S82)
	S84= CtrlICache=0                                           Premise(F92)
	S85= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S65,S84)
	S86= CtrlIR=0                                               Premise(F93)
	S87= [IR]={0,rS,rT,rD,0,37}                                 IR-Hold(S67,S86)
	S88= CtrlALUOut=1                                           Premise(F100)
	S89= [ALUOut]=a|b                                           ALUOut-Write(S80,S88)

MEM	S90= CtrlPC=0                                               Premise(F106)
	S91= CtrlPCInc=0                                            Premise(F107)
	S92= PC[Out]=addr+4                                         PC-Hold(S83,S90,S91)
	S93= CtrlICache=0                                           Premise(F109)
	S94= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S85,S93)
	S95= CtrlIR=0                                               Premise(F110)
	S96= [IR]={0,rS,rT,rD,0,37}                                 IR-Hold(S87,S95)
	S97= CtrlALUOut=0                                           Premise(F117)
	S98= [ALUOut]=a|b                                           ALUOut-Hold(S89,S97)

WB	S99= IR.Out15_11=rD                                         IR-Out(S96)
	S100= ALUOut.Out=a|b                                        ALUOut-Out(S98)
	S101= IR.Out15_11=>GPR.WReg                                 Premise(F152)
	S102= GPR.WReg=rD                                           Path(S99,S101)
	S103= ALUOut.Out=>GPR.WData                                 Premise(F153)
	S104= GPR.WData=a|b                                         Path(S100,S103)
	S105= CtrlPC=0                                              Premise(F159)
	S106= CtrlPCInc=0                                           Premise(F160)
	S107= PC[Out]=addr+4                                        PC-Hold(S92,S105,S106)
	S108= CtrlICache=0                                          Premise(F162)
	S109= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S94,S108)
	S110= CtrlGPR=1                                             Premise(F167)
	S111= GPR[rD]=a|b                                           GPR-Write(S102,S104,S110)

POST	S107= PC[Out]=addr+4                                        PC-Hold(S92,S105,S106)
	S109= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S94,S108)
	S111= GPR[rD]=a|b                                           GPR-Write(S102,S104,S110)

