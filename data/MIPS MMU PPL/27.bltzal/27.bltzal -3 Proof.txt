
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={1,rS,16,offset}                           Premise(F3)

IF	S2= PC.Out=addr                                             PC-Out(S0)
	S3= PC.Out=>ICache.IEA                                      Premise(F8)
	S4= ICache.IEA=addr                                         Path(S2,S3)
	S5= ICache.Out={1,rS,16,offset}                             ICache-Search(S4,S1)
	S6= ICache.Out=>IR_ID.In                                    Premise(F12)
	S7= IR_ID.In={1,rS,16,offset}                               Path(S5,S6)
	S8= CtrlPC=0                                                Premise(F25)
	S9= CtrlPCInc=1                                             Premise(F26)
	S10= PC[Out]=addr+4                                         PC-Inc(S0,S8,S9)
	S11= CtrlIR_ID=1                                            Premise(F31)
	S12= [IR_ID]={1,rS,16,offset}                               IR_ID-Write(S7,S11)
	S13= GPR[rS]=a                                              Premise(F52)

ID	S14= IR_ID.Out25_21=rS                                      IR-Out(S12)
	S15= IR_ID.Out25_21=>GPR.RReg1                              Premise(F89)
	S16= GPR.RReg1=rS                                           Path(S14,S15)
	S17= GPR.Rdata1=a                                           GPR-Read(S16,S13)
	S18= GPR.Rdata2=32'b0                                       GPR-ReadGPR0()
	S19= GPR.Rdata1=>FU.InID1                                   Premise(F91)
	S20= FU.InID1=a                                             Path(S17,S19)
	S21= FU.OutID1=FU(a)                                        FU-Forward(S20)
	S22= FU.OutID1=>A_EX.In                                     Premise(F93)
	S23= A_EX.In=FU(a)                                          Path(S21,S22)
	S24= GPR.Rdata2=>FU.InID2                                   Premise(F94)
	S25= FU.InID2=32'b0                                         Path(S18,S24)
	S26= FU.OutID2=FU(32'b0)                                    FU-Forward(S25)
	S27= FU.OutID2=>B_EX.In                                     Premise(F96)
	S28= B_EX.In=FU(32'b0)                                      Path(S26,S27)
	S29= CtrlPC=0                                               Premise(F105)
	S30= CtrlPCInc=0                                            Premise(F106)
	S31= PC[Out]=addr+4                                         PC-Hold(S10,S29,S30)
	S32= CtrlA_EX=1                                             Premise(F115)
	S33= [A_EX]=FU(a)                                           A_EX-Write(S23,S32)
	S34= CtrlB_EX=1                                             Premise(F116)
	S35= [B_EX]=FU(32'b0)                                       B_EX-Write(S28,S34)

EX	S36= PC.Out=addr+4                                          PC-Out(S31)
	S37= A_EX.Out=FU(a)                                         A_EX-Out(S33)
	S38= B_EX.Out=FU(32'b0)                                     B_EX-Out(S35)
	S39= A_EX.Out=>CMPU.A                                       Premise(F141)
	S40= CMPU.A=FU(a)                                           Path(S37,S39)
	S41= B_EX.Out=>CMPU.B                                       Premise(F142)
	S42= CMPU.B=FU(32'b0)                                       Path(S38,S41)
	S43= CMPU.lt=CompareS(FU(a),FU(32'b0))                      CMPU-CMPS(S40,S42)
	S44= CMPU.lt=>ConditionReg_MEM.In                           Premise(F144)
	S45= ConditionReg_MEM.In=CompareS(FU(a),FU(32'b0))          Path(S43,S44)
	S46= GPR.WReg=5'd31                                         Premise(F145)
	S47= PC.Out=>GPR.WData                                      Premise(F146)
	S48= GPR.WData=addr+4                                       Path(S36,S47)
	S49= CtrlGPR=1                                              Premise(F164)
	S50= GPR[5'd31]=addr+4                                      GPR-Write(S46,S48,S49)
	S51= CtrlConditionReg_MEM=1                                 Premise(F169)
	S52= [ConditionReg_MEM]=CompareS(FU(a),FU(32'b0))           ConditionReg_MEM-Write(S45,S51)

MEM	S53= ConditionReg_MEM.Out=CompareS(FU(a),FU(32'b0))         ConditionReg_MEM-Out(S52)
	S54= ConditionReg_MEM.Out=>ConditionReg_WB.In               Premise(F196)
	S55= ConditionReg_WB.In=CompareS(FU(a),FU(32'b0))           Path(S53,S54)
	S56= CtrlGPR=0                                              Premise(F214)
	S57= GPR[5'd31]=addr+4                                      GPR-Hold(S50,S56)
	S58= CtrlConditionReg_WB=1                                  Premise(F229)
	S59= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Write(S55,S58)

WB	S60= CtrlGPR=0                                              Premise(F330)
	S61= GPR[5'd31]=addr+4                                      GPR-Hold(S57,S60)
	S62= CtrlConditionReg_WB=0                                  Premise(F345)
	S63= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Hold(S59,S62)

POST	S61= GPR[5'd31]=addr+4                                      GPR-Hold(S57,S60)
	S63= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Hold(S59,S62)

