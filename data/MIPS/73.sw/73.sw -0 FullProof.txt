
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={43,rS,rT,offset}                      Premise(F2)
	S3= GPR[rS]=base                                            Premise(F3)
	S4= GPR[rT]=a                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PC.Out=>IMem.RAddr                                      Premise(F5)
	S8= IMem.RAddr=addr                                         Path(S6,S7)
	S9= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S10= IMem.ASID=pid                                          Path(S5,S9)
	S11= IMem.Out={43,rS,rT,offset}                             IMem-Read(S10,S8,S2)
	S12= IMem.Out=>IR.In                                        Premise(F7)
	S13= IR.In={43,rS,rT,offset}                                Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F8)
	S15= CtrlPCInc=1                                            Premise(F9)
	S16= PC[Out]=addr+4                                         PC-Inc(S1,S14,S15)
	S17= PC[CIA]=addr                                           PC-Inc(S1,S14,S15)
	S18= CtrlIMem=0                                             Premise(F10)
	S19= IMem[{pid,addr}]={43,rS,rT,offset}                     IMem-Hold(S2,S18)
	S20= CtrlASIDIn=0                                           Premise(F11)
	S21= CtrlCP0=0                                              Premise(F12)
	S22= CP0[ASID]=pid                                          CP0-Hold(S0,S21)
	S23= CtrlEPCIn=0                                            Premise(F13)
	S24= CtrlExCodeIn=0                                         Premise(F14)
	S25= CtrlIR=1                                               Premise(F15)
	S26= [IR]={43,rS,rT,offset}                                 IR-Write(S13,S25)
	S27= CtrlGPR=0                                              Premise(F16)
	S28= GPR[rS]=base                                           GPR-Hold(S3,S27)
	S29= GPR[rT]=a                                              GPR-Hold(S4,S27)
	S30= CtrlA=0                                                Premise(F17)
	S31= CtrlB=0                                                Premise(F18)
	S32= CtrlALUOut=0                                           Premise(F19)
	S33= CtrlDR=0                                               Premise(F20)
	S34= CtrlDMem=0                                             Premise(F21)
	S35= CtrlDMem8Word=0                                        Premise(F22)

ID	S36= PC.Out=addr+4                                          PC-Out(S16)
	S37= PC.CIA=addr                                            PC-Out(S17)
	S38= PC.CIA31_28=addr[31:28]                                PC-Out(S17)
	S39= CP0.ASID=pid                                           CP0-Read-ASID(S22)
	S40= IR.Out={43,rS,rT,offset}                               IR-Out(S26)
	S41= IR.Out31_26=43                                         IR-Out(S26)
	S42= IR.Out25_21=rS                                         IR-Out(S26)
	S43= IR.Out20_16=rT                                         IR-Out(S26)
	S44= IR.Out15_0=offset                                      IR-Out(S26)
	S45= IR.Out31_26=>CU.Op                                     Premise(F23)
	S46= CU.Op=43                                               Path(S41,S45)
	S47= CU.Func=alu_add                                        CU(S46)
	S48= CU.MemDataSelFunc=mds_lha                              CU(S46)
	S49= IR.Out25_21=>GPR.RReg1                                 Premise(F24)
	S50= GPR.RReg1=rS                                           Path(S42,S49)
	S51= GPR.Rdata1=base                                        GPR-Read(S50,S28)
	S52= IR.Out15_0=>IMMEXT.In                                  Premise(F25)
	S53= IMMEXT.In=offset                                       Path(S44,S52)
	S54= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S53)
	S55= GPR.Rdata1=>A.In                                       Premise(F26)
	S56= A.In=base                                              Path(S51,S55)
	S57= IMMEXT.Out=>B.In                                       Premise(F27)
	S58= B.In={16{offset[15]},offset}                           Path(S54,S57)
	S59= CtrlPC=0                                               Premise(F28)
	S60= CtrlPCInc=0                                            Premise(F29)
	S61= PC[CIA]=addr                                           PC-Hold(S17,S60)
	S62= PC[Out]=addr+4                                         PC-Hold(S16,S59,S60)
	S63= CtrlIMem=0                                             Premise(F30)
	S64= IMem[{pid,addr}]={43,rS,rT,offset}                     IMem-Hold(S19,S63)
	S65= CtrlASIDIn=0                                           Premise(F31)
	S66= CtrlCP0=0                                              Premise(F32)
	S67= CP0[ASID]=pid                                          CP0-Hold(S22,S66)
	S68= CtrlEPCIn=0                                            Premise(F33)
	S69= CtrlExCodeIn=0                                         Premise(F34)
	S70= CtrlIR=0                                               Premise(F35)
	S71= [IR]={43,rS,rT,offset}                                 IR-Hold(S26,S70)
	S72= CtrlGPR=0                                              Premise(F36)
	S73= GPR[rS]=base                                           GPR-Hold(S28,S72)
	S74= GPR[rT]=a                                              GPR-Hold(S29,S72)
	S75= CtrlA=1                                                Premise(F37)
	S76= [A]=base                                               A-Write(S56,S75)
	S77= CtrlB=1                                                Premise(F38)
	S78= [B]={16{offset[15]},offset}                            B-Write(S58,S77)
	S79= CtrlALUOut=0                                           Premise(F39)
	S80= CtrlDR=0                                               Premise(F40)
	S81= CtrlDMem=0                                             Premise(F41)
	S82= CtrlDMem8Word=0                                        Premise(F42)

EX	S83= PC.CIA=addr                                            PC-Out(S61)
	S84= PC.CIA31_28=addr[31:28]                                PC-Out(S61)
	S85= PC.Out=addr+4                                          PC-Out(S62)
	S86= CP0.ASID=pid                                           CP0-Read-ASID(S67)
	S87= IR.Out={43,rS,rT,offset}                               IR-Out(S71)
	S88= IR.Out31_26=43                                         IR-Out(S71)
	S89= IR.Out25_21=rS                                         IR-Out(S71)
	S90= IR.Out20_16=rT                                         IR-Out(S71)
	S91= IR.Out15_0=offset                                      IR-Out(S71)
	S92= A.Out=base                                             A-Out(S76)
	S93= A.Out1_0={base}[1:0]                                   A-Out(S76)
	S94= A.Out4_0={base}[4:0]                                   A-Out(S76)
	S95= B.Out={16{offset[15]},offset}                          B-Out(S78)
	S96= B.Out1_0={{16{offset[15]},offset}}[1:0]                B-Out(S78)
	S97= B.Out4_0={{16{offset[15]},offset}}[4:0]                B-Out(S78)
	S98= A.Out=>ALU.A                                           Premise(F43)
	S99= ALU.A=base                                             Path(S92,S98)
	S100= B.Out=>ALU.B                                          Premise(F44)
	S101= ALU.B={16{offset[15]},offset}                         Path(S95,S100)
	S102= ALU.Func=6'b010010                                    Premise(F45)
	S103= ALU.Out=base+{16{offset[15]},offset}                  ALU(S99,S101)
	S104= ALU.Out1_0={base+{16{offset[15]},offset}}[1:0]        ALU(S99,S101)
	S105= ALU.CMP=Compare0(base+{16{offset[15]},offset})        ALU(S99,S101)
	S106= ALU.OV=OverFlow(base+{16{offset[15]},offset})         ALU(S99,S101)
	S107= ALU.CA=Carry(base+{16{offset[15]},offset})            ALU(S99,S101)
	S108= ALU.Out=>ALUOut.In                                    Premise(F46)
	S109= ALUOut.In=base+{16{offset[15]},offset}                Path(S103,S108)
	S110= IR.Out20_16=>GPR.RReg2                                Premise(F47)
	S111= GPR.RReg2=rT                                          Path(S90,S110)
	S112= GPR.Rdata2=a                                          GPR-Read(S111,S74)
	S113= GPR.Rdata2=>MemDataSel.In                             Premise(F48)
	S114= MemDataSel.In=a                                       Path(S112,S113)
	S115= ALU.Out1_0=>MemDataSel.Addr                           Premise(F49)
	S116= MemDataSel.Addr={base+{16{offset[15]},offset}}[1:0]   Path(S104,S115)
	S117= MemDataSel.Func=6'b010101                             Premise(F50)
	S118= MemDataSel.Out=a                                      MemDataSel(S114,S116)
	S119= MemDataSel.Out=>DR.In                                 Premise(F51)
	S120= DR.In=a                                               Path(S118,S119)
	S121= CtrlPC=0                                              Premise(F52)
	S122= CtrlPCInc=0                                           Premise(F53)
	S123= PC[CIA]=addr                                          PC-Hold(S61,S122)
	S124= PC[Out]=addr+4                                        PC-Hold(S62,S121,S122)
	S125= CtrlIMem=0                                            Premise(F54)
	S126= IMem[{pid,addr}]={43,rS,rT,offset}                    IMem-Hold(S64,S125)
	S127= CtrlASIDIn=0                                          Premise(F55)
	S128= CtrlCP0=0                                             Premise(F56)
	S129= CP0[ASID]=pid                                         CP0-Hold(S67,S128)
	S130= CtrlEPCIn=0                                           Premise(F57)
	S131= CtrlExCodeIn=0                                        Premise(F58)
	S132= CtrlIR=0                                              Premise(F59)
	S133= [IR]={43,rS,rT,offset}                                IR-Hold(S71,S132)
	S134= CtrlGPR=0                                             Premise(F60)
	S135= GPR[rS]=base                                          GPR-Hold(S73,S134)
	S136= GPR[rT]=a                                             GPR-Hold(S74,S134)
	S137= CtrlA=0                                               Premise(F61)
	S138= [A]=base                                              A-Hold(S76,S137)
	S139= CtrlB=0                                               Premise(F62)
	S140= [B]={16{offset[15]},offset}                           B-Hold(S78,S139)
	S141= CtrlALUOut=1                                          Premise(F63)
	S142= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Write(S109,S141)
	S143= CtrlDR=1                                              Premise(F64)
	S144= [DR]=a                                                DR-Write(S120,S143)
	S145= CtrlDMem=0                                            Premise(F65)
	S146= CtrlDMem8Word=0                                       Premise(F66)

MEM	S147= PC.CIA=addr                                           PC-Out(S123)
	S148= PC.CIA31_28=addr[31:28]                               PC-Out(S123)
	S149= PC.Out=addr+4                                         PC-Out(S124)
	S150= CP0.ASID=pid                                          CP0-Read-ASID(S129)
	S151= IR.Out={43,rS,rT,offset}                              IR-Out(S133)
	S152= IR.Out31_26=43                                        IR-Out(S133)
	S153= IR.Out25_21=rS                                        IR-Out(S133)
	S154= IR.Out20_16=rT                                        IR-Out(S133)
	S155= IR.Out15_0=offset                                     IR-Out(S133)
	S156= A.Out=base                                            A-Out(S138)
	S157= A.Out1_0={base}[1:0]                                  A-Out(S138)
	S158= A.Out4_0={base}[4:0]                                  A-Out(S138)
	S159= B.Out={16{offset[15]},offset}                         B-Out(S140)
	S160= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S140)
	S161= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S140)
	S162= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S142)
	S163= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S142)
	S164= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S142)
	S165= DR.Out=a                                              DR-Out(S144)
	S166= DR.Out1_0={a}[1:0]                                    DR-Out(S144)
	S167= DR.Out4_0={a}[4:0]                                    DR-Out(S144)
	S168= DR.Out=>DMem.WData                                    Premise(F67)
	S169= DMem.WData=a                                          Path(S165,S168)
	S170= CP0.ASID=>DMem.ASID                                   Premise(F68)
	S171= DMem.ASID=pid                                         Path(S150,S170)
	S172= ALUOut.Out=>DMem.WAddr                                Premise(F69)
	S173= DMem.WAddr=base+{16{offset[15]},offset}               Path(S162,S172)
	S174= CtrlPC=0                                              Premise(F70)
	S175= CtrlPCInc=0                                           Premise(F71)
	S176= PC[CIA]=addr                                          PC-Hold(S123,S175)
	S177= PC[Out]=addr+4                                        PC-Hold(S124,S174,S175)
	S178= CtrlIMem=0                                            Premise(F72)
	S179= IMem[{pid,addr}]={43,rS,rT,offset}                    IMem-Hold(S126,S178)
	S180= CtrlASIDIn=0                                          Premise(F73)
	S181= CtrlCP0=0                                             Premise(F74)
	S182= CP0[ASID]=pid                                         CP0-Hold(S129,S181)
	S183= CtrlEPCIn=0                                           Premise(F75)
	S184= CtrlExCodeIn=0                                        Premise(F76)
	S185= CtrlIR=0                                              Premise(F77)
	S186= [IR]={43,rS,rT,offset}                                IR-Hold(S133,S185)
	S187= CtrlGPR=0                                             Premise(F78)
	S188= GPR[rS]=base                                          GPR-Hold(S135,S187)
	S189= GPR[rT]=a                                             GPR-Hold(S136,S187)
	S190= CtrlA=0                                               Premise(F79)
	S191= [A]=base                                              A-Hold(S138,S190)
	S192= CtrlB=0                                               Premise(F80)
	S193= [B]={16{offset[15]},offset}                           B-Hold(S140,S192)
	S194= CtrlALUOut=0                                          Premise(F81)
	S195= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S142,S194)
	S196= CtrlDR=0                                              Premise(F82)
	S197= [DR]=a                                                DR-Hold(S144,S196)
	S198= CtrlDMem=1                                            Premise(F83)
	S199= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Write(S171,S173,S169,S198)
	S200= CtrlDMem8Word=0                                       Premise(F84)

WB	S201= PC.CIA=addr                                           PC-Out(S176)
	S202= PC.CIA31_28=addr[31:28]                               PC-Out(S176)
	S203= PC.Out=addr+4                                         PC-Out(S177)
	S204= CP0.ASID=pid                                          CP0-Read-ASID(S182)
	S205= IR.Out={43,rS,rT,offset}                              IR-Out(S186)
	S206= IR.Out31_26=43                                        IR-Out(S186)
	S207= IR.Out25_21=rS                                        IR-Out(S186)
	S208= IR.Out20_16=rT                                        IR-Out(S186)
	S209= IR.Out15_0=offset                                     IR-Out(S186)
	S210= A.Out=base                                            A-Out(S191)
	S211= A.Out1_0={base}[1:0]                                  A-Out(S191)
	S212= A.Out4_0={base}[4:0]                                  A-Out(S191)
	S213= B.Out={16{offset[15]},offset}                         B-Out(S193)
	S214= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S193)
	S215= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S193)
	S216= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S195)
	S217= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S195)
	S218= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S195)
	S219= DR.Out=a                                              DR-Out(S197)
	S220= DR.Out1_0={a}[1:0]                                    DR-Out(S197)
	S221= DR.Out4_0={a}[4:0]                                    DR-Out(S197)
	S222= CtrlPC=0                                              Premise(F85)
	S223= CtrlPCInc=0                                           Premise(F86)
	S224= PC[CIA]=addr                                          PC-Hold(S176,S223)
	S225= PC[Out]=addr+4                                        PC-Hold(S177,S222,S223)
	S226= CtrlIMem=0                                            Premise(F87)
	S227= IMem[{pid,addr}]={43,rS,rT,offset}                    IMem-Hold(S179,S226)
	S228= CtrlASIDIn=0                                          Premise(F88)
	S229= CtrlCP0=0                                             Premise(F89)
	S230= CP0[ASID]=pid                                         CP0-Hold(S182,S229)
	S231= CtrlEPCIn=0                                           Premise(F90)
	S232= CtrlExCodeIn=0                                        Premise(F91)
	S233= CtrlIR=0                                              Premise(F92)
	S234= [IR]={43,rS,rT,offset}                                IR-Hold(S186,S233)
	S235= CtrlGPR=0                                             Premise(F93)
	S236= GPR[rS]=base                                          GPR-Hold(S188,S235)
	S237= GPR[rT]=a                                             GPR-Hold(S189,S235)
	S238= CtrlA=0                                               Premise(F94)
	S239= [A]=base                                              A-Hold(S191,S238)
	S240= CtrlB=0                                               Premise(F95)
	S241= [B]={16{offset[15]},offset}                           B-Hold(S193,S240)
	S242= CtrlALUOut=0                                          Premise(F96)
	S243= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S195,S242)
	S244= CtrlDR=0                                              Premise(F97)
	S245= [DR]=a                                                DR-Hold(S197,S244)
	S246= CtrlDMem=0                                            Premise(F98)
	S247= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S199,S246)
	S248= CtrlDMem8Word=0                                       Premise(F99)

POST	S224= PC[CIA]=addr                                          PC-Hold(S176,S223)
	S225= PC[Out]=addr+4                                        PC-Hold(S177,S222,S223)
	S227= IMem[{pid,addr}]={43,rS,rT,offset}                    IMem-Hold(S179,S226)
	S230= CP0[ASID]=pid                                         CP0-Hold(S182,S229)
	S234= [IR]={43,rS,rT,offset}                                IR-Hold(S186,S233)
	S236= GPR[rS]=base                                          GPR-Hold(S188,S235)
	S237= GPR[rT]=a                                             GPR-Hold(S189,S235)
	S239= [A]=base                                              A-Hold(S191,S238)
	S241= [B]={16{offset[15]},offset}                           B-Hold(S193,S240)
	S243= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S195,S242)
	S245= [DR]=a                                                DR-Hold(S197,S244)
	S247= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S199,S246)

