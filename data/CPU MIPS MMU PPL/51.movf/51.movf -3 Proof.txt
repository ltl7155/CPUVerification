
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,cc,0,0,rD,0,1}                       Premise(F3)

IF	S2= PC.Out=addr                                             PC-Out(S0)
	S3= PC.Out=>ICache.IEA                                      Premise(F65)
	S4= ICache.IEA=addr                                         Path(S2,S3)
	S5= ICache.Out={0,rS,cc,0,0,rD,0,1}                         ICache-Search(S4,S1)
	S6= ICache.Out=>IR_ID.In                                    Premise(F72)
	S7= IR_ID.In={0,rS,cc,0,0,rD,0,1}                           Path(S5,S6)
	S8= CtrlIR_ID=1                                             Premise(F116)
	S9= [IR_ID]={0,rS,cc,0,0,rD,0,1}                            IR_ID-Write(S7,S8)
	S10= CtrlPC=0                                               Premise(F122)
	S11= CtrlPCInc=1                                            Premise(F123)
	S12= PC[Out]=addr+4                                         PC-Inc(S0,S10,S11)

ID	S13= IR_ID.Out={0,rS,cc,0,0,rD,0,1}                         IR-Out(S9)
	S14= IR_ID.Out=>IR_EX.In                                    Premise(F324)
	S15= IR_EX.In={0,rS,cc,0,0,rD,0,1}                          Path(S13,S14)
	S16= CtrlIR_EX=1                                            Premise(F359)
	S17= [IR_EX]={0,rS,cc,0,0,rD,0,1}                           IR_EX-Write(S15,S16)
	S18= CtrlPC=0                                               Premise(F375)
	S19= CtrlPCInc=0                                            Premise(F376)
	S20= PC[Out]=addr+4                                         PC-Hold(S12,S18,S19)

EX	S21= IR_EX.Out20_18=cc                                      IR_EX-Out(S17)
	S22= IR_EX.Out16=0                                          IR_EX-Out(S17)
	S23= IR_EX.Out20_18=>CP1.cc                                 Premise(F390)
	S24= CP1.cc=cc                                              Path(S21,S23)
	S25= IR_EX.Out16=>CP1.tf                                    Premise(F391)
	S26= CP1.tf=0                                               Path(S22,S25)
	S27= CP1.fp=FPConditionCode(cc,0)                           FP-PRODUCT(S24,S26)
	S28= CP1.fp=>ConditionReg_MEM.In                            Premise(F421)
	S29= ConditionReg_MEM.In=FPConditionCode(cc,0)              Path(S27,S28)
	S30= CtrlConditionReg_MEM=1                                 Premise(F490)
	S31= [ConditionReg_MEM]=FPConditionCode(cc,0)               ConditionReg_MEM-Write(S29,S30)
	S32= CtrlPC=0                                               Premise(F501)
	S33= CtrlPCInc=0                                            Premise(F502)
	S34= PC[Out]=addr+4                                         PC-Hold(S20,S32,S33)

MEM	S35= ConditionReg_MEM.Out=FPConditionCode(cc,0)             ConditionReg_MEM-Out(S31)
	S36= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In            Premise(F545)
	S37= ConditionReg_DMMU1.In=FPConditionCode(cc,0)            Path(S35,S36)
	S38= CtrlConditionReg_DMMU1=1                               Premise(F617)
	S39= [ConditionReg_DMMU1]=FPConditionCode(cc,0)             ConditionReg_DMMU1-Write(S37,S38)
	S40= CtrlPC=0                                               Premise(F627)
	S41= CtrlPCInc=0                                            Premise(F628)
	S42= PC[Out]=addr+4                                         PC-Hold(S34,S40,S41)

DMMU1	S43= ConditionReg_DMMU1.Out=FPConditionCode(cc,0)           ConditionReg_DMMU1-Out(S39)
	S44= ConditionReg_DMMU1.Out=>ConditionReg_DMMU2.In          Premise(F672)
	S45= ConditionReg_DMMU2.In=FPConditionCode(cc,0)            Path(S43,S44)
	S46= CtrlConditionReg_DMMU2=1                               Premise(F744)
	S47= [ConditionReg_DMMU2]=FPConditionCode(cc,0)             ConditionReg_DMMU2-Write(S45,S46)
	S48= CtrlPC=0                                               Premise(F753)
	S49= CtrlPCInc=0                                            Premise(F754)
	S50= PC[Out]=addr+4                                         PC-Hold(S42,S48,S49)

DMMU2	S51= ConditionReg_DMMU2.Out=FPConditionCode(cc,0)           ConditionReg_DMMU2-Out(S47)
	S52= ConditionReg_DMMU2.Out=>ConditionReg_WB.In             Premise(F800)
	S53= ConditionReg_WB.In=FPConditionCode(cc,0)               Path(S51,S52)
	S54= CtrlConditionReg_WB=1                                  Premise(F867)
	S55= [ConditionReg_WB]=FPConditionCode(cc,0)                ConditionReg_WB-Write(S53,S54)
	S56= CtrlPC=0                                               Premise(F879)
	S57= CtrlPCInc=0                                            Premise(F880)
	S58= PC[Out]=addr+4                                         PC-Hold(S50,S56,S57)

WB	S59= CtrlConditionReg_WB=0                                  Premise(F993)
	S60= [ConditionReg_WB]=FPConditionCode(cc,0)                ConditionReg_WB-Hold(S55,S59)
	S61= CtrlPC=0                                               Premise(F1005)
	S62= CtrlPCInc=0                                            Premise(F1006)
	S63= PC[Out]=addr+4                                         PC-Hold(S58,S61,S62)

POST	S60= [ConditionReg_WB]=FPConditionCode(cc,0)                ConditionReg_WB-Hold(S55,S59)
	S63= PC[Out]=addr+4                                         PC-Hold(S58,S61,S62)

