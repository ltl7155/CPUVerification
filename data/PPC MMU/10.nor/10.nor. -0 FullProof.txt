
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rS,rA,rB,249}                      Premise(F2)
	S3= GPRegs[rS]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S8= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S9= PC.Out=addr                                             PC-Out(S1)
	S10= XER.SOOut=so                                           XER-SO-Out(S5)
	S11= PIDReg.Out=>IMMU.PID                                   Premise(F6)
	S12= IMMU.PID=pid                                           Path(S6,S11)
	S13= PC.Out=>IMMU.IEA                                       Premise(F7)
	S14= IMMU.IEA=addr                                          Path(S9,S13)
	S15= IMMU.Addr={pid,addr}                                   IMMU-Search(S12,S14)
	S16= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S12,S14)
	S17= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S18= IAddrReg.In={pid,addr}                                 Path(S15,S17)
	S19= IMMU.Hit=>IMMUHitReg.In                                Premise(F9)
	S20= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S16,S19)
	S21= PC.Out=>ICache.IEA                                     Premise(F10)
	S22= ICache.IEA=addr                                        Path(S9,S21)
	S23= ICache.Hit=ICacheHit(addr)                             ICache-Search(S22)
	S24= ICache.Out=>ICacheReg.In                               Premise(F11)
	S25= ICache.Hit=>ICacheHitReg.In                            Premise(F12)
	S26= ICacheHitReg.In=ICacheHit(addr)                        Path(S23,S25)
	S27= IMMUHitReg.Out=>CU.IMemHit                             Premise(F13)
	S28= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F14)
	S29= IAddrReg.Out=>IMem.RAddr                               Premise(F15)
	S30= IMem.Out=>IRMux.MemData                                Premise(F16)
	S31= ICacheReg.Out=>IRMux.CacheData                         Premise(F17)
	S32= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F18)
	S33= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F19)
	S34= IRMux.Out=>IR.In                                       Premise(F20)
	S35= IMem.MEM8WordOut=>ICache.WData                         Premise(F21)
	S36= PC.Out=>ICache.IEA                                     Premise(F22)
	S37= IR.Out0_5=>CU.Op                                       Premise(F23)
	S38= IR.Out6_10=>GPRegs.RReg1                               Premise(F24)
	S39= IR.Out16_20=>GPRegs.RReg2                              Premise(F25)
	S40= IR.Out21_31=>CU.IRFunc                                 Premise(F26)
	S41= GPRegs.Rdata1=>A.In                                    Premise(F27)
	S42= GPRegs.Rdata2=>B.In                                    Premise(F28)
	S43= A.Out=>ALU.A                                           Premise(F29)
	S44= B.Out=>ALU.B                                           Premise(F30)
	S45= CU.Func=>ALU.Func                                      Premise(F31)
	S46= ALU.Out=>ALUOut.In                                     Premise(F32)
	S47= ALU.CMP=>DataCmb.A                                     Premise(F33)
	S48= XER.SOOut=>DataCmb.B                                   Premise(F34)
	S49= DataCmb.B=so                                           Path(S10,S48)
	S50= DataCmb.Out=>DR4bit.In                                 Premise(F35)
	S51= IR.Out11_15=>GPRegs.WReg                               Premise(F36)
	S52= ALUOut.Out=>GPRegs.WData                               Premise(F37)
	S53= DR4bit.Out=>CRRegs.CR0In                               Premise(F38)
	S54= CtrlPIDReg=0                                           Premise(F39)
	S55= [PIDReg]=pid                                           PIDReg-Hold(S0,S54)
	S56= CtrlIMMU=0                                             Premise(F40)
	S57= CtrlPC=0                                               Premise(F41)
	S58= CtrlPCInc=0                                            Premise(F42)
	S59= PC[Out]=addr                                           PC-Hold(S1,S57,S58)
	S60= CtrlIAddrReg=1                                         Premise(F43)
	S61= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S18,S60)
	S62= CtrlIMMUHitReg=1                                       Premise(F44)
	S63= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S20,S62)
	S64= CtrlICache=0                                           Premise(F45)
	S65= CtrlICacheReg=1                                        Premise(F46)
	S66= CtrlICacheHitReg=1                                     Premise(F47)
	S67= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S26,S66)
	S68= CtrlIMem=0                                             Premise(F48)
	S69= IMem[{pid,addr}]={31,rS,rA,rB,249}                     IMem-Hold(S2,S68)
	S70= CtrlIRMux=0                                            Premise(F49)
	S71= CtrlIR=0                                               Premise(F50)
	S72= CtrlGPRegs=0                                           Premise(F51)
	S73= GPRegs[rS]=a                                           GPRegs-Hold(S3,S72)
	S74= GPRegs[rB]=b                                           GPRegs-Hold(S4,S72)
	S75= CtrlA=0                                                Premise(F52)
	S76= CtrlB=0                                                Premise(F53)
	S77= CtrlALUOut=0                                           Premise(F54)
	S78= CtrlXERSO=0                                            Premise(F55)
	S79= XER[SO]=so                                             XER-SO-Hold(S5,S78)
	S80= CtrlXEROV=0                                            Premise(F56)
	S81= CtrlXERCA=0                                            Premise(F57)
	S82= CtrlDR4bit=0                                           Premise(F58)
	S83= CtrlCRRegs=0                                           Premise(F59)
	S84= CtrlCRRegsCR0=0                                        Premise(F60)
	S85= CtrlCRRegsW4bitRegs=0                                  Premise(F61)
	S86= CtrlCRRegsW1bitRegs=0                                  Premise(F62)

IMMU	S87= PIDReg.Out=pid                                         PIDReg-Out(S55)
	S88= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S55)
	S89= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S55)
	S90= PC.Out=addr                                            PC-Out(S59)
	S91= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S61)
	S92= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S61)
	S93= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S61)
	S94= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S63)
	S95= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S63)
	S96= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]           IMMUHitReg-Out(S63)
	S97= ICacheHitReg.Out=ICacheHit(addr)                       ICacheHitReg-Out(S67)
	S98= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]           ICacheHitReg-Out(S67)
	S99= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]           ICacheHitReg-Out(S67)
	S100= XER.SOOut=so                                          XER-SO-Out(S79)
	S101= PIDReg.Out=>IMMU.PID                                  Premise(F63)
	S102= IMMU.PID=pid                                          Path(S87,S101)
	S103= PC.Out=>IMMU.IEA                                      Premise(F64)
	S104= IMMU.IEA=addr                                         Path(S90,S103)
	S105= IMMU.Addr={pid,addr}                                  IMMU-Search(S102,S104)
	S106= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S102,S104)
	S107= IMMU.Addr=>IAddrReg.In                                Premise(F65)
	S108= IAddrReg.In={pid,addr}                                Path(S105,S107)
	S109= IMMU.Hit=>IMMUHitReg.In                               Premise(F66)
	S110= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S106,S109)
	S111= PC.Out=>ICache.IEA                                    Premise(F67)
	S112= ICache.IEA=addr                                       Path(S90,S111)
	S113= ICache.Hit=ICacheHit(addr)                            ICache-Search(S112)
	S114= ICache.Out=>ICacheReg.In                              Premise(F68)
	S115= ICache.Hit=>ICacheHitReg.In                           Premise(F69)
	S116= ICacheHitReg.In=ICacheHit(addr)                       Path(S113,S115)
	S117= IMMUHitReg.Out=>CU.IMemHit                            Premise(F70)
	S118= CU.IMemHit=IMMUHit(pid,addr)                          Path(S94,S117)
	S119= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F71)
	S120= CU.ICacheHit=ICacheHit(addr)                          Path(S97,S119)
	S121= IAddrReg.Out=>IMem.RAddr                              Premise(F72)
	S122= IMem.RAddr={pid,addr}                                 Path(S91,S121)
	S123= IMem.Out={31,rS,rA,rB,249}                            IMem-Read(S122,S69)
	S124= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S122,S69)
	S125= IMem.Out=>IRMux.MemData                               Premise(F73)
	S126= IRMux.MemData={31,rS,rA,rB,249}                       Path(S123,S125)
	S127= IRMux.Out={31,rS,rA,rB,249}                           IRMux-Select(S126)
	S128= ICacheReg.Out=>IRMux.CacheData                        Premise(F74)
	S129= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F75)
	S130= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S94,S129)
	S131= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F76)
	S132= IRMux.CacheSel=ICacheHit(addr)                        Path(S97,S131)
	S133= IRMux.Out=>IR.In                                      Premise(F77)
	S134= IR.In={31,rS,rA,rB,249}                               Path(S127,S133)
	S135= IMem.MEM8WordOut=>ICache.WData                        Premise(F78)
	S136= ICache.WData=IMemGet8Word({pid,addr})                 Path(S124,S135)
	S137= PC.Out=>ICache.IEA                                    Premise(F79)
	S138= IR.Out0_5=>CU.Op                                      Premise(F80)
	S139= IR.Out6_10=>GPRegs.RReg1                              Premise(F81)
	S140= IR.Out16_20=>GPRegs.RReg2                             Premise(F82)
	S141= IR.Out21_31=>CU.IRFunc                                Premise(F83)
	S142= GPRegs.Rdata1=>A.In                                   Premise(F84)
	S143= GPRegs.Rdata2=>B.In                                   Premise(F85)
	S144= A.Out=>ALU.A                                          Premise(F86)
	S145= B.Out=>ALU.B                                          Premise(F87)
	S146= CU.Func=>ALU.Func                                     Premise(F88)
	S147= ALU.Out=>ALUOut.In                                    Premise(F89)
	S148= ALU.CMP=>DataCmb.A                                    Premise(F90)
	S149= XER.SOOut=>DataCmb.B                                  Premise(F91)
	S150= DataCmb.B=so                                          Path(S100,S149)
	S151= DataCmb.Out=>DR4bit.In                                Premise(F92)
	S152= IR.Out11_15=>GPRegs.WReg                              Premise(F93)
	S153= ALUOut.Out=>GPRegs.WData                              Premise(F94)
	S154= DR4bit.Out=>CRRegs.CR0In                              Premise(F95)
	S155= CtrlPIDReg=0                                          Premise(F96)
	S156= [PIDReg]=pid                                          PIDReg-Hold(S55,S155)
	S157= CtrlIMMU=0                                            Premise(F97)
	S158= CtrlPC=0                                              Premise(F98)
	S159= CtrlPCInc=1                                           Premise(F99)
	S160= PC[Out]=addr+4                                        PC-Inc(S59,S158,S159)
	S161= PC[CIA]=addr                                          PC-Inc(S59,S158,S159)
	S162= CtrlIAddrReg=0                                        Premise(F100)
	S163= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S61,S162)
	S164= CtrlIMMUHitReg=0                                      Premise(F101)
	S165= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S63,S164)
	S166= CtrlICache=1                                          Premise(F102)
	S167= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S112,S136,S166)
	S168= CtrlICacheReg=0                                       Premise(F103)
	S169= CtrlICacheHitReg=0                                    Premise(F104)
	S170= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S67,S169)
	S171= CtrlIMem=0                                            Premise(F105)
	S172= IMem[{pid,addr}]={31,rS,rA,rB,249}                    IMem-Hold(S69,S171)
	S173= CtrlIRMux=0                                           Premise(F106)
	S174= CtrlIR=1                                              Premise(F107)
	S175= [IR]={31,rS,rA,rB,249}                                IR-Write(S134,S174)
	S176= CtrlGPRegs=0                                          Premise(F108)
	S177= GPRegs[rS]=a                                          GPRegs-Hold(S73,S176)
	S178= GPRegs[rB]=b                                          GPRegs-Hold(S74,S176)
	S179= CtrlA=0                                               Premise(F109)
	S180= CtrlB=0                                               Premise(F110)
	S181= CtrlALUOut=0                                          Premise(F111)
	S182= CtrlXERSO=0                                           Premise(F112)
	S183= XER[SO]=so                                            XER-SO-Hold(S79,S182)
	S184= CtrlXEROV=0                                           Premise(F113)
	S185= CtrlXERCA=0                                           Premise(F114)
	S186= CtrlDR4bit=0                                          Premise(F115)
	S187= CtrlCRRegs=0                                          Premise(F116)
	S188= CtrlCRRegsCR0=0                                       Premise(F117)
	S189= CtrlCRRegsW4bitRegs=0                                 Premise(F118)
	S190= CtrlCRRegsW1bitRegs=0                                 Premise(F119)

ID	S191= PIDReg.Out=pid                                        PIDReg-Out(S156)
	S192= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S156)
	S193= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S156)
	S194= PC.Out=addr+4                                         PC-Out(S160)
	S195= PC.CIA=addr                                           PC-Out(S161)
	S196= PC.CIA31_28=addr[31:28]                               PC-Out(S161)
	S197= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S163)
	S198= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S163)
	S199= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S163)
	S200= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S165)
	S201= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S165)
	S202= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S165)
	S203= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S170)
	S204= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S170)
	S205= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S170)
	S206= IR.Out0_5=31                                          IR-Out(S175)
	S207= IR.Out6_10=rS                                         IR-Out(S175)
	S208= IR.Out11_15=rA                                        IR-Out(S175)
	S209= IR.Out16_20=rB                                        IR-Out(S175)
	S210= IR.Out21_31=249                                       IR-Out(S175)
	S211= XER.SOOut=so                                          XER-SO-Out(S183)
	S212= PIDReg.Out=>IMMU.PID                                  Premise(F120)
	S213= IMMU.PID=pid                                          Path(S191,S212)
	S214= PC.Out=>IMMU.IEA                                      Premise(F121)
	S215= IMMU.IEA=addr+4                                       Path(S194,S214)
	S216= IMMU.Addr={pid,addr+4}                                IMMU-Search(S213,S215)
	S217= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S213,S215)
	S218= IMMU.Addr=>IAddrReg.In                                Premise(F122)
	S219= IAddrReg.In={pid,addr+4}                              Path(S216,S218)
	S220= IMMU.Hit=>IMMUHitReg.In                               Premise(F123)
	S221= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S217,S220)
	S222= PC.Out=>ICache.IEA                                    Premise(F124)
	S223= ICache.IEA=addr+4                                     Path(S194,S222)
	S224= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S223)
	S225= ICache.Out=>ICacheReg.In                              Premise(F125)
	S226= ICache.Hit=>ICacheHitReg.In                           Premise(F126)
	S227= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S224,S226)
	S228= IMMUHitReg.Out=>CU.IMemHit                            Premise(F127)
	S229= CU.IMemHit=IMMUHit(pid,addr)                          Path(S200,S228)
	S230= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F128)
	S231= CU.ICacheHit=ICacheHit(addr)                          Path(S203,S230)
	S232= IAddrReg.Out=>IMem.RAddr                              Premise(F129)
	S233= IMem.RAddr={pid,addr}                                 Path(S197,S232)
	S234= IMem.Out={31,rS,rA,rB,249}                            IMem-Read(S233,S172)
	S235= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S233,S172)
	S236= IMem.Out=>IRMux.MemData                               Premise(F130)
	S237= IRMux.MemData={31,rS,rA,rB,249}                       Path(S234,S236)
	S238= IRMux.Out={31,rS,rA,rB,249}                           IRMux-Select(S237)
	S239= ICacheReg.Out=>IRMux.CacheData                        Premise(F131)
	S240= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F132)
	S241= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S200,S240)
	S242= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F133)
	S243= IRMux.CacheSel=ICacheHit(addr)                        Path(S203,S242)
	S244= IRMux.Out=>IR.In                                      Premise(F134)
	S245= IR.In={31,rS,rA,rB,249}                               Path(S238,S244)
	S246= IMem.MEM8WordOut=>ICache.WData                        Premise(F135)
	S247= ICache.WData=IMemGet8Word({pid,addr})                 Path(S235,S246)
	S248= PC.Out=>ICache.IEA                                    Premise(F136)
	S249= IR.Out0_5=>CU.Op                                      Premise(F137)
	S250= CU.Op=31                                              Path(S206,S249)
	S251= IR.Out6_10=>GPRegs.RReg1                              Premise(F138)
	S252= GPRegs.RReg1=rS                                       Path(S207,S251)
	S253= GPRegs.Rdata1=a                                       GPRegs-Read(S252,S177)
	S254= IR.Out16_20=>GPRegs.RReg2                             Premise(F139)
	S255= GPRegs.RReg2=rB                                       Path(S209,S254)
	S256= GPRegs.Rdata2=b                                       GPRegs-Read(S255,S178)
	S257= IR.Out21_31=>CU.IRFunc                                Premise(F140)
	S258= CU.IRFunc=249                                         Path(S210,S257)
	S259= CU.Func=alu_nor                                       CU(S250,S258)
	S260= GPRegs.Rdata1=>A.In                                   Premise(F141)
	S261= A.In=a                                                Path(S253,S260)
	S262= GPRegs.Rdata2=>B.In                                   Premise(F142)
	S263= B.In=b                                                Path(S256,S262)
	S264= A.Out=>ALU.A                                          Premise(F143)
	S265= B.Out=>ALU.B                                          Premise(F144)
	S266= CU.Func=>ALU.Func                                     Premise(F145)
	S267= ALU.Func=alu_nor                                      Path(S259,S266)
	S268= ALU.Out=>ALUOut.In                                    Premise(F146)
	S269= ALU.CMP=>DataCmb.A                                    Premise(F147)
	S270= XER.SOOut=>DataCmb.B                                  Premise(F148)
	S271= DataCmb.B=so                                          Path(S211,S270)
	S272= DataCmb.Out=>DR4bit.In                                Premise(F149)
	S273= IR.Out11_15=>GPRegs.WReg                              Premise(F150)
	S274= GPRegs.WReg=rA                                        Path(S208,S273)
	S275= ALUOut.Out=>GPRegs.WData                              Premise(F151)
	S276= DR4bit.Out=>CRRegs.CR0In                              Premise(F152)
	S277= CtrlPIDReg=0                                          Premise(F153)
	S278= [PIDReg]=pid                                          PIDReg-Hold(S156,S277)
	S279= CtrlIMMU=0                                            Premise(F154)
	S280= CtrlPC=0                                              Premise(F155)
	S281= CtrlPCInc=0                                           Premise(F156)
	S282= PC[CIA]=addr                                          PC-Hold(S161,S281)
	S283= PC[Out]=addr+4                                        PC-Hold(S160,S280,S281)
	S284= CtrlIAddrReg=0                                        Premise(F157)
	S285= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S163,S284)
	S286= CtrlIMMUHitReg=0                                      Premise(F158)
	S287= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S165,S286)
	S288= CtrlICache=0                                          Premise(F159)
	S289= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S167,S288)
	S290= CtrlICacheReg=0                                       Premise(F160)
	S291= CtrlICacheHitReg=0                                    Premise(F161)
	S292= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S170,S291)
	S293= CtrlIMem=0                                            Premise(F162)
	S294= IMem[{pid,addr}]={31,rS,rA,rB,249}                    IMem-Hold(S172,S293)
	S295= CtrlIRMux=0                                           Premise(F163)
	S296= CtrlIR=0                                              Premise(F164)
	S297= [IR]={31,rS,rA,rB,249}                                IR-Hold(S175,S296)
	S298= CtrlGPRegs=0                                          Premise(F165)
	S299= GPRegs[rS]=a                                          GPRegs-Hold(S177,S298)
	S300= GPRegs[rB]=b                                          GPRegs-Hold(S178,S298)
	S301= CtrlA=1                                               Premise(F166)
	S302= [A]=a                                                 A-Write(S261,S301)
	S303= CtrlB=1                                               Premise(F167)
	S304= [B]=b                                                 B-Write(S263,S303)
	S305= CtrlALUOut=0                                          Premise(F168)
	S306= CtrlXERSO=0                                           Premise(F169)
	S307= XER[SO]=so                                            XER-SO-Hold(S183,S306)
	S308= CtrlXEROV=0                                           Premise(F170)
	S309= CtrlXERCA=0                                           Premise(F171)
	S310= CtrlDR4bit=0                                          Premise(F172)
	S311= CtrlCRRegs=0                                          Premise(F173)
	S312= CtrlCRRegsCR0=0                                       Premise(F174)
	S313= CtrlCRRegsW4bitRegs=0                                 Premise(F175)
	S314= CtrlCRRegsW1bitRegs=0                                 Premise(F176)

EX	S315= PIDReg.Out=pid                                        PIDReg-Out(S278)
	S316= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S278)
	S317= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S278)
	S318= PC.CIA=addr                                           PC-Out(S282)
	S319= PC.CIA31_28=addr[31:28]                               PC-Out(S282)
	S320= PC.Out=addr+4                                         PC-Out(S283)
	S321= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S285)
	S322= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S285)
	S323= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S285)
	S324= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S287)
	S325= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S287)
	S326= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S287)
	S327= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S292)
	S328= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S292)
	S329= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S292)
	S330= IR.Out0_5=31                                          IR-Out(S297)
	S331= IR.Out6_10=rS                                         IR-Out(S297)
	S332= IR.Out11_15=rA                                        IR-Out(S297)
	S333= IR.Out16_20=rB                                        IR-Out(S297)
	S334= IR.Out21_31=249                                       IR-Out(S297)
	S335= A.Out=a                                               A-Out(S302)
	S336= A.Out26_31=a[26:31]                                   A-Out(S302)
	S337= A.Out30_31=a[30:31]                                   A-Out(S302)
	S338= B.Out=b                                               B-Out(S304)
	S339= B.Out26_31=b[26:31]                                   B-Out(S304)
	S340= B.Out30_31=b[30:31]                                   B-Out(S304)
	S341= XER.SOOut=so                                          XER-SO-Out(S307)
	S342= PIDReg.Out=>IMMU.PID                                  Premise(F177)
	S343= IMMU.PID=pid                                          Path(S315,S342)
	S344= PC.Out=>IMMU.IEA                                      Premise(F178)
	S345= IMMU.IEA=addr+4                                       Path(S320,S344)
	S346= IMMU.Addr={pid,addr+4}                                IMMU-Search(S343,S345)
	S347= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S343,S345)
	S348= IMMU.Addr=>IAddrReg.In                                Premise(F179)
	S349= IAddrReg.In={pid,addr+4}                              Path(S346,S348)
	S350= IMMU.Hit=>IMMUHitReg.In                               Premise(F180)
	S351= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S347,S350)
	S352= PC.Out=>ICache.IEA                                    Premise(F181)
	S353= ICache.IEA=addr+4                                     Path(S320,S352)
	S354= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S353)
	S355= ICache.Out=>ICacheReg.In                              Premise(F182)
	S356= ICache.Hit=>ICacheHitReg.In                           Premise(F183)
	S357= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S354,S356)
	S358= IMMUHitReg.Out=>CU.IMemHit                            Premise(F184)
	S359= CU.IMemHit=IMMUHit(pid,addr)                          Path(S324,S358)
	S360= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F185)
	S361= CU.ICacheHit=ICacheHit(addr)                          Path(S327,S360)
	S362= IAddrReg.Out=>IMem.RAddr                              Premise(F186)
	S363= IMem.RAddr={pid,addr}                                 Path(S321,S362)
	S364= IMem.Out={31,rS,rA,rB,249}                            IMem-Read(S363,S294)
	S365= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S363,S294)
	S366= IMem.Out=>IRMux.MemData                               Premise(F187)
	S367= IRMux.MemData={31,rS,rA,rB,249}                       Path(S364,S366)
	S368= IRMux.Out={31,rS,rA,rB,249}                           IRMux-Select(S367)
	S369= ICacheReg.Out=>IRMux.CacheData                        Premise(F188)
	S370= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F189)
	S371= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S324,S370)
	S372= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F190)
	S373= IRMux.CacheSel=ICacheHit(addr)                        Path(S327,S372)
	S374= IRMux.Out=>IR.In                                      Premise(F191)
	S375= IR.In={31,rS,rA,rB,249}                               Path(S368,S374)
	S376= IMem.MEM8WordOut=>ICache.WData                        Premise(F192)
	S377= ICache.WData=IMemGet8Word({pid,addr})                 Path(S365,S376)
	S378= PC.Out=>ICache.IEA                                    Premise(F193)
	S379= IR.Out0_5=>CU.Op                                      Premise(F194)
	S380= CU.Op=31                                              Path(S330,S379)
	S381= IR.Out6_10=>GPRegs.RReg1                              Premise(F195)
	S382= GPRegs.RReg1=rS                                       Path(S331,S381)
	S383= GPRegs.Rdata1=a                                       GPRegs-Read(S382,S299)
	S384= IR.Out16_20=>GPRegs.RReg2                             Premise(F196)
	S385= GPRegs.RReg2=rB                                       Path(S333,S384)
	S386= GPRegs.Rdata2=b                                       GPRegs-Read(S385,S300)
	S387= IR.Out21_31=>CU.IRFunc                                Premise(F197)
	S388= CU.IRFunc=249                                         Path(S334,S387)
	S389= CU.Func=alu_nor                                       CU(S380,S388)
	S390= GPRegs.Rdata1=>A.In                                   Premise(F198)
	S391= A.In=a                                                Path(S383,S390)
	S392= GPRegs.Rdata2=>B.In                                   Premise(F199)
	S393= B.In=b                                                Path(S386,S392)
	S394= A.Out=>ALU.A                                          Premise(F200)
	S395= ALU.A=a                                               Path(S335,S394)
	S396= B.Out=>ALU.B                                          Premise(F201)
	S397= ALU.B=b                                               Path(S338,S396)
	S398= CU.Func=>ALU.Func                                     Premise(F202)
	S399= ALU.Func=alu_nor                                      Path(S389,S398)
	S400= ALU.Out=~(a|b)                                        ALU(S395,S397)
	S401= ALU.CMP=Compare0(~(a|b))                              ALU(S395,S397)
	S402= ALU.OV=OverFlow(~(a|b))                               ALU(S395,S397)
	S403= ALU.CA=Carry(~(a|b))                                  ALU(S395,S397)
	S404= ALU.Out=>ALUOut.In                                    Premise(F203)
	S405= ALUOut.In=~(a|b)                                      Path(S400,S404)
	S406= ALU.CMP=>DataCmb.A                                    Premise(F204)
	S407= DataCmb.A=Compare0(~(a|b))                            Path(S401,S406)
	S408= XER.SOOut=>DataCmb.B                                  Premise(F205)
	S409= DataCmb.B=so                                          Path(S341,S408)
	S410= DataCmb.Out={Compare0(~(a|b)),so}                     DataCmb(S407,S409)
	S411= DataCmb.Out=>DR4bit.In                                Premise(F206)
	S412= DR4bit.In={Compare0(~(a|b)),so}                       Path(S410,S411)
	S413= IR.Out11_15=>GPRegs.WReg                              Premise(F207)
	S414= GPRegs.WReg=rA                                        Path(S332,S413)
	S415= ALUOut.Out=>GPRegs.WData                              Premise(F208)
	S416= DR4bit.Out=>CRRegs.CR0In                              Premise(F209)
	S417= CtrlPIDReg=0                                          Premise(F210)
	S418= [PIDReg]=pid                                          PIDReg-Hold(S278,S417)
	S419= CtrlIMMU=0                                            Premise(F211)
	S420= CtrlPC=0                                              Premise(F212)
	S421= CtrlPCInc=0                                           Premise(F213)
	S422= PC[CIA]=addr                                          PC-Hold(S282,S421)
	S423= PC[Out]=addr+4                                        PC-Hold(S283,S420,S421)
	S424= CtrlIAddrReg=0                                        Premise(F214)
	S425= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S285,S424)
	S426= CtrlIMMUHitReg=0                                      Premise(F215)
	S427= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S287,S426)
	S428= CtrlICache=0                                          Premise(F216)
	S429= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S289,S428)
	S430= CtrlICacheReg=0                                       Premise(F217)
	S431= CtrlICacheHitReg=0                                    Premise(F218)
	S432= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S292,S431)
	S433= CtrlIMem=0                                            Premise(F219)
	S434= IMem[{pid,addr}]={31,rS,rA,rB,249}                    IMem-Hold(S294,S433)
	S435= CtrlIRMux=0                                           Premise(F220)
	S436= CtrlIR=0                                              Premise(F221)
	S437= [IR]={31,rS,rA,rB,249}                                IR-Hold(S297,S436)
	S438= CtrlGPRegs=0                                          Premise(F222)
	S439= GPRegs[rS]=a                                          GPRegs-Hold(S299,S438)
	S440= GPRegs[rB]=b                                          GPRegs-Hold(S300,S438)
	S441= CtrlA=0                                               Premise(F223)
	S442= [A]=a                                                 A-Hold(S302,S441)
	S443= CtrlB=0                                               Premise(F224)
	S444= [B]=b                                                 B-Hold(S304,S443)
	S445= CtrlALUOut=1                                          Premise(F225)
	S446= [ALUOut]=~(a|b)                                       ALUOut-Write(S405,S445)
	S447= CtrlXERSO=0                                           Premise(F226)
	S448= XER[SO]=so                                            XER-SO-Hold(S307,S447)
	S449= CtrlXEROV=0                                           Premise(F227)
	S450= CtrlXERCA=0                                           Premise(F228)
	S451= CtrlDR4bit=1                                          Premise(F229)
	S452= [DR4bit]={Compare0(~(a|b)),so}                        DR4bit-Write(S412,S451)
	S453= CtrlCRRegs=0                                          Premise(F230)
	S454= CtrlCRRegsCR0=0                                       Premise(F231)
	S455= CtrlCRRegsW4bitRegs=0                                 Premise(F232)
	S456= CtrlCRRegsW1bitRegs=0                                 Premise(F233)

MEM	S457= PIDReg.Out=pid                                        PIDReg-Out(S418)
	S458= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S418)
	S459= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S418)
	S460= PC.CIA=addr                                           PC-Out(S422)
	S461= PC.CIA31_28=addr[31:28]                               PC-Out(S422)
	S462= PC.Out=addr+4                                         PC-Out(S423)
	S463= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S425)
	S464= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S425)
	S465= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S425)
	S466= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S427)
	S467= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S427)
	S468= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S427)
	S469= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S432)
	S470= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S432)
	S471= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S432)
	S472= IR.Out0_5=31                                          IR-Out(S437)
	S473= IR.Out6_10=rS                                         IR-Out(S437)
	S474= IR.Out11_15=rA                                        IR-Out(S437)
	S475= IR.Out16_20=rB                                        IR-Out(S437)
	S476= IR.Out21_31=249                                       IR-Out(S437)
	S477= A.Out=a                                               A-Out(S442)
	S478= A.Out26_31=a[26:31]                                   A-Out(S442)
	S479= A.Out30_31=a[30:31]                                   A-Out(S442)
	S480= B.Out=b                                               B-Out(S444)
	S481= B.Out26_31=b[26:31]                                   B-Out(S444)
	S482= B.Out30_31=b[30:31]                                   B-Out(S444)
	S483= ALUOut.Out=~(a|b)                                     ALUOut-Out(S446)
	S484= ALUOut.Out26_31=~(a|b)[26:31]                         ALUOut-Out(S446)
	S485= ALUOut.Out30_31=~(a|b)[30:31]                         ALUOut-Out(S446)
	S486= XER.SOOut=so                                          XER-SO-Out(S448)
	S487= DR4bit.Out={Compare0(~(a|b)),so}                      DR4bit-Out(S452)
	S488= DR4bit.Out26_31={Compare0(~(a|b)),so}[26:31]          DR4bit-Out(S452)
	S489= DR4bit.Out30_31={Compare0(~(a|b)),so}[30:31]          DR4bit-Out(S452)
	S490= PIDReg.Out=>IMMU.PID                                  Premise(F234)
	S491= IMMU.PID=pid                                          Path(S457,S490)
	S492= PC.Out=>IMMU.IEA                                      Premise(F235)
	S493= IMMU.IEA=addr+4                                       Path(S462,S492)
	S494= IMMU.Addr={pid,addr+4}                                IMMU-Search(S491,S493)
	S495= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S491,S493)
	S496= IMMU.Addr=>IAddrReg.In                                Premise(F236)
	S497= IAddrReg.In={pid,addr+4}                              Path(S494,S496)
	S498= IMMU.Hit=>IMMUHitReg.In                               Premise(F237)
	S499= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S495,S498)
	S500= PC.Out=>ICache.IEA                                    Premise(F238)
	S501= ICache.IEA=addr+4                                     Path(S462,S500)
	S502= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S501)
	S503= ICache.Out=>ICacheReg.In                              Premise(F239)
	S504= ICache.Hit=>ICacheHitReg.In                           Premise(F240)
	S505= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S502,S504)
	S506= IMMUHitReg.Out=>CU.IMemHit                            Premise(F241)
	S507= CU.IMemHit=IMMUHit(pid,addr)                          Path(S466,S506)
	S508= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F242)
	S509= CU.ICacheHit=ICacheHit(addr)                          Path(S469,S508)
	S510= IAddrReg.Out=>IMem.RAddr                              Premise(F243)
	S511= IMem.RAddr={pid,addr}                                 Path(S463,S510)
	S512= IMem.Out={31,rS,rA,rB,249}                            IMem-Read(S511,S434)
	S513= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S511,S434)
	S514= IMem.Out=>IRMux.MemData                               Premise(F244)
	S515= IRMux.MemData={31,rS,rA,rB,249}                       Path(S512,S514)
	S516= IRMux.Out={31,rS,rA,rB,249}                           IRMux-Select(S515)
	S517= ICacheReg.Out=>IRMux.CacheData                        Premise(F245)
	S518= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F246)
	S519= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S466,S518)
	S520= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F247)
	S521= IRMux.CacheSel=ICacheHit(addr)                        Path(S469,S520)
	S522= IRMux.Out=>IR.In                                      Premise(F248)
	S523= IR.In={31,rS,rA,rB,249}                               Path(S516,S522)
	S524= IMem.MEM8WordOut=>ICache.WData                        Premise(F249)
	S525= ICache.WData=IMemGet8Word({pid,addr})                 Path(S513,S524)
	S526= PC.Out=>ICache.IEA                                    Premise(F250)
	S527= IR.Out0_5=>CU.Op                                      Premise(F251)
	S528= CU.Op=31                                              Path(S472,S527)
	S529= IR.Out6_10=>GPRegs.RReg1                              Premise(F252)
	S530= GPRegs.RReg1=rS                                       Path(S473,S529)
	S531= GPRegs.Rdata1=a                                       GPRegs-Read(S530,S439)
	S532= IR.Out16_20=>GPRegs.RReg2                             Premise(F253)
	S533= GPRegs.RReg2=rB                                       Path(S475,S532)
	S534= GPRegs.Rdata2=b                                       GPRegs-Read(S533,S440)
	S535= IR.Out21_31=>CU.IRFunc                                Premise(F254)
	S536= CU.IRFunc=249                                         Path(S476,S535)
	S537= CU.Func=alu_nor                                       CU(S528,S536)
	S538= GPRegs.Rdata1=>A.In                                   Premise(F255)
	S539= A.In=a                                                Path(S531,S538)
	S540= GPRegs.Rdata2=>B.In                                   Premise(F256)
	S541= B.In=b                                                Path(S534,S540)
	S542= A.Out=>ALU.A                                          Premise(F257)
	S543= ALU.A=a                                               Path(S477,S542)
	S544= B.Out=>ALU.B                                          Premise(F258)
	S545= ALU.B=b                                               Path(S480,S544)
	S546= CU.Func=>ALU.Func                                     Premise(F259)
	S547= ALU.Func=alu_nor                                      Path(S537,S546)
	S548= ALU.Out=~(a|b)                                        ALU(S543,S545)
	S549= ALU.CMP=Compare0(~(a|b))                              ALU(S543,S545)
	S550= ALU.OV=OverFlow(~(a|b))                               ALU(S543,S545)
	S551= ALU.CA=Carry(~(a|b))                                  ALU(S543,S545)
	S552= ALU.Out=>ALUOut.In                                    Premise(F260)
	S553= ALUOut.In=~(a|b)                                      Path(S548,S552)
	S554= ALU.CMP=>DataCmb.A                                    Premise(F261)
	S555= DataCmb.A=Compare0(~(a|b))                            Path(S549,S554)
	S556= XER.SOOut=>DataCmb.B                                  Premise(F262)
	S557= DataCmb.B=so                                          Path(S486,S556)
	S558= DataCmb.Out={Compare0(~(a|b)),so}                     DataCmb(S555,S557)
	S559= DataCmb.Out=>DR4bit.In                                Premise(F263)
	S560= DR4bit.In={Compare0(~(a|b)),so}                       Path(S558,S559)
	S561= IR.Out11_15=>GPRegs.WReg                              Premise(F264)
	S562= GPRegs.WReg=rA                                        Path(S474,S561)
	S563= ALUOut.Out=>GPRegs.WData                              Premise(F265)
	S564= GPRegs.WData=~(a|b)                                   Path(S483,S563)
	S565= DR4bit.Out=>CRRegs.CR0In                              Premise(F266)
	S566= CRRegs.CR0In={Compare0(~(a|b)),so}                    Path(S487,S565)
	S567= CtrlPIDReg=0                                          Premise(F267)
	S568= [PIDReg]=pid                                          PIDReg-Hold(S418,S567)
	S569= CtrlIMMU=0                                            Premise(F268)
	S570= CtrlPC=0                                              Premise(F269)
	S571= CtrlPCInc=0                                           Premise(F270)
	S572= PC[CIA]=addr                                          PC-Hold(S422,S571)
	S573= PC[Out]=addr+4                                        PC-Hold(S423,S570,S571)
	S574= CtrlIAddrReg=0                                        Premise(F271)
	S575= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S425,S574)
	S576= CtrlIMMUHitReg=0                                      Premise(F272)
	S577= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S427,S576)
	S578= CtrlICache=0                                          Premise(F273)
	S579= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S429,S578)
	S580= CtrlICacheReg=0                                       Premise(F274)
	S581= CtrlICacheHitReg=0                                    Premise(F275)
	S582= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S432,S581)
	S583= CtrlIMem=0                                            Premise(F276)
	S584= IMem[{pid,addr}]={31,rS,rA,rB,249}                    IMem-Hold(S434,S583)
	S585= CtrlIRMux=0                                           Premise(F277)
	S586= CtrlIR=0                                              Premise(F278)
	S587= [IR]={31,rS,rA,rB,249}                                IR-Hold(S437,S586)
	S588= CtrlGPRegs=0                                          Premise(F279)
	S589= GPRegs[rS]=a                                          GPRegs-Hold(S439,S588)
	S590= GPRegs[rB]=b                                          GPRegs-Hold(S440,S588)
	S591= CtrlA=0                                               Premise(F280)
	S592= [A]=a                                                 A-Hold(S442,S591)
	S593= CtrlB=0                                               Premise(F281)
	S594= [B]=b                                                 B-Hold(S444,S593)
	S595= CtrlALUOut=0                                          Premise(F282)
	S596= [ALUOut]=~(a|b)                                       ALUOut-Hold(S446,S595)
	S597= CtrlXERSO=0                                           Premise(F283)
	S598= XER[SO]=so                                            XER-SO-Hold(S448,S597)
	S599= CtrlXEROV=0                                           Premise(F284)
	S600= CtrlXERCA=0                                           Premise(F285)
	S601= CtrlDR4bit=0                                          Premise(F286)
	S602= [DR4bit]={Compare0(~(a|b)),so}                        DR4bit-Hold(S452,S601)
	S603= CtrlCRRegs=0                                          Premise(F287)
	S604= CtrlCRRegsCR0=0                                       Premise(F288)
	S605= CtrlCRRegsW4bitRegs=0                                 Premise(F289)
	S606= CtrlCRRegsW1bitRegs=0                                 Premise(F290)

DMMU1	S607= PIDReg.Out=pid                                        PIDReg-Out(S568)
	S608= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S568)
	S609= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S568)
	S610= PC.CIA=addr                                           PC-Out(S572)
	S611= PC.CIA31_28=addr[31:28]                               PC-Out(S572)
	S612= PC.Out=addr+4                                         PC-Out(S573)
	S613= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S575)
	S614= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S575)
	S615= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S575)
	S616= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S577)
	S617= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S577)
	S618= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S577)
	S619= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S582)
	S620= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S582)
	S621= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S582)
	S622= IR.Out0_5=31                                          IR-Out(S587)
	S623= IR.Out6_10=rS                                         IR-Out(S587)
	S624= IR.Out11_15=rA                                        IR-Out(S587)
	S625= IR.Out16_20=rB                                        IR-Out(S587)
	S626= IR.Out21_31=249                                       IR-Out(S587)
	S627= A.Out=a                                               A-Out(S592)
	S628= A.Out26_31=a[26:31]                                   A-Out(S592)
	S629= A.Out30_31=a[30:31]                                   A-Out(S592)
	S630= B.Out=b                                               B-Out(S594)
	S631= B.Out26_31=b[26:31]                                   B-Out(S594)
	S632= B.Out30_31=b[30:31]                                   B-Out(S594)
	S633= ALUOut.Out=~(a|b)                                     ALUOut-Out(S596)
	S634= ALUOut.Out26_31=~(a|b)[26:31]                         ALUOut-Out(S596)
	S635= ALUOut.Out30_31=~(a|b)[30:31]                         ALUOut-Out(S596)
	S636= XER.SOOut=so                                          XER-SO-Out(S598)
	S637= DR4bit.Out={Compare0(~(a|b)),so}                      DR4bit-Out(S602)
	S638= DR4bit.Out26_31={Compare0(~(a|b)),so}[26:31]          DR4bit-Out(S602)
	S639= DR4bit.Out30_31={Compare0(~(a|b)),so}[30:31]          DR4bit-Out(S602)
	S640= PIDReg.Out=>IMMU.PID                                  Premise(F291)
	S641= IMMU.PID=pid                                          Path(S607,S640)
	S642= PC.Out=>IMMU.IEA                                      Premise(F292)
	S643= IMMU.IEA=addr+4                                       Path(S612,S642)
	S644= IMMU.Addr={pid,addr+4}                                IMMU-Search(S641,S643)
	S645= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S641,S643)
	S646= IMMU.Addr=>IAddrReg.In                                Premise(F293)
	S647= IAddrReg.In={pid,addr+4}                              Path(S644,S646)
	S648= IMMU.Hit=>IMMUHitReg.In                               Premise(F294)
	S649= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S645,S648)
	S650= PC.Out=>ICache.IEA                                    Premise(F295)
	S651= ICache.IEA=addr+4                                     Path(S612,S650)
	S652= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S651)
	S653= ICache.Out=>ICacheReg.In                              Premise(F296)
	S654= ICache.Hit=>ICacheHitReg.In                           Premise(F297)
	S655= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S652,S654)
	S656= IMMUHitReg.Out=>CU.IMemHit                            Premise(F298)
	S657= CU.IMemHit=IMMUHit(pid,addr)                          Path(S616,S656)
	S658= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F299)
	S659= CU.ICacheHit=ICacheHit(addr)                          Path(S619,S658)
	S660= IAddrReg.Out=>IMem.RAddr                              Premise(F300)
	S661= IMem.RAddr={pid,addr}                                 Path(S613,S660)
	S662= IMem.Out={31,rS,rA,rB,249}                            IMem-Read(S661,S584)
	S663= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S661,S584)
	S664= IMem.Out=>IRMux.MemData                               Premise(F301)
	S665= IRMux.MemData={31,rS,rA,rB,249}                       Path(S662,S664)
	S666= IRMux.Out={31,rS,rA,rB,249}                           IRMux-Select(S665)
	S667= ICacheReg.Out=>IRMux.CacheData                        Premise(F302)
	S668= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F303)
	S669= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S616,S668)
	S670= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F304)
	S671= IRMux.CacheSel=ICacheHit(addr)                        Path(S619,S670)
	S672= IRMux.Out=>IR.In                                      Premise(F305)
	S673= IR.In={31,rS,rA,rB,249}                               Path(S666,S672)
	S674= IMem.MEM8WordOut=>ICache.WData                        Premise(F306)
	S675= ICache.WData=IMemGet8Word({pid,addr})                 Path(S663,S674)
	S676= PC.Out=>ICache.IEA                                    Premise(F307)
	S677= IR.Out0_5=>CU.Op                                      Premise(F308)
	S678= CU.Op=31                                              Path(S622,S677)
	S679= IR.Out6_10=>GPRegs.RReg1                              Premise(F309)
	S680= GPRegs.RReg1=rS                                       Path(S623,S679)
	S681= GPRegs.Rdata1=a                                       GPRegs-Read(S680,S589)
	S682= IR.Out16_20=>GPRegs.RReg2                             Premise(F310)
	S683= GPRegs.RReg2=rB                                       Path(S625,S682)
	S684= GPRegs.Rdata2=b                                       GPRegs-Read(S683,S590)
	S685= IR.Out21_31=>CU.IRFunc                                Premise(F311)
	S686= CU.IRFunc=249                                         Path(S626,S685)
	S687= CU.Func=alu_nor                                       CU(S678,S686)
	S688= GPRegs.Rdata1=>A.In                                   Premise(F312)
	S689= A.In=a                                                Path(S681,S688)
	S690= GPRegs.Rdata2=>B.In                                   Premise(F313)
	S691= B.In=b                                                Path(S684,S690)
	S692= A.Out=>ALU.A                                          Premise(F314)
	S693= ALU.A=a                                               Path(S627,S692)
	S694= B.Out=>ALU.B                                          Premise(F315)
	S695= ALU.B=b                                               Path(S630,S694)
	S696= CU.Func=>ALU.Func                                     Premise(F316)
	S697= ALU.Func=alu_nor                                      Path(S687,S696)
	S698= ALU.Out=~(a|b)                                        ALU(S693,S695)
	S699= ALU.CMP=Compare0(~(a|b))                              ALU(S693,S695)
	S700= ALU.OV=OverFlow(~(a|b))                               ALU(S693,S695)
	S701= ALU.CA=Carry(~(a|b))                                  ALU(S693,S695)
	S702= ALU.Out=>ALUOut.In                                    Premise(F317)
	S703= ALUOut.In=~(a|b)                                      Path(S698,S702)
	S704= ALU.CMP=>DataCmb.A                                    Premise(F318)
	S705= DataCmb.A=Compare0(~(a|b))                            Path(S699,S704)
	S706= XER.SOOut=>DataCmb.B                                  Premise(F319)
	S707= DataCmb.B=so                                          Path(S636,S706)
	S708= DataCmb.Out={Compare0(~(a|b)),so}                     DataCmb(S705,S707)
	S709= DataCmb.Out=>DR4bit.In                                Premise(F320)
	S710= DR4bit.In={Compare0(~(a|b)),so}                       Path(S708,S709)
	S711= IR.Out11_15=>GPRegs.WReg                              Premise(F321)
	S712= GPRegs.WReg=rA                                        Path(S624,S711)
	S713= ALUOut.Out=>GPRegs.WData                              Premise(F322)
	S714= GPRegs.WData=~(a|b)                                   Path(S633,S713)
	S715= DR4bit.Out=>CRRegs.CR0In                              Premise(F323)
	S716= CRRegs.CR0In={Compare0(~(a|b)),so}                    Path(S637,S715)
	S717= CtrlPIDReg=0                                          Premise(F324)
	S718= [PIDReg]=pid                                          PIDReg-Hold(S568,S717)
	S719= CtrlIMMU=0                                            Premise(F325)
	S720= CtrlPC=0                                              Premise(F326)
	S721= CtrlPCInc=0                                           Premise(F327)
	S722= PC[CIA]=addr                                          PC-Hold(S572,S721)
	S723= PC[Out]=addr+4                                        PC-Hold(S573,S720,S721)
	S724= CtrlIAddrReg=0                                        Premise(F328)
	S725= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S575,S724)
	S726= CtrlIMMUHitReg=0                                      Premise(F329)
	S727= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S577,S726)
	S728= CtrlICache=0                                          Premise(F330)
	S729= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S579,S728)
	S730= CtrlICacheReg=0                                       Premise(F331)
	S731= CtrlICacheHitReg=0                                    Premise(F332)
	S732= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S582,S731)
	S733= CtrlIMem=0                                            Premise(F333)
	S734= IMem[{pid,addr}]={31,rS,rA,rB,249}                    IMem-Hold(S584,S733)
	S735= CtrlIRMux=0                                           Premise(F334)
	S736= CtrlIR=0                                              Premise(F335)
	S737= [IR]={31,rS,rA,rB,249}                                IR-Hold(S587,S736)
	S738= CtrlGPRegs=0                                          Premise(F336)
	S739= GPRegs[rS]=a                                          GPRegs-Hold(S589,S738)
	S740= GPRegs[rB]=b                                          GPRegs-Hold(S590,S738)
	S741= CtrlA=0                                               Premise(F337)
	S742= [A]=a                                                 A-Hold(S592,S741)
	S743= CtrlB=0                                               Premise(F338)
	S744= [B]=b                                                 B-Hold(S594,S743)
	S745= CtrlALUOut=0                                          Premise(F339)
	S746= [ALUOut]=~(a|b)                                       ALUOut-Hold(S596,S745)
	S747= CtrlXERSO=0                                           Premise(F340)
	S748= XER[SO]=so                                            XER-SO-Hold(S598,S747)
	S749= CtrlXEROV=0                                           Premise(F341)
	S750= CtrlXERCA=0                                           Premise(F342)
	S751= CtrlDR4bit=0                                          Premise(F343)
	S752= [DR4bit]={Compare0(~(a|b)),so}                        DR4bit-Hold(S602,S751)
	S753= CtrlCRRegs=0                                          Premise(F344)
	S754= CtrlCRRegsCR0=0                                       Premise(F345)
	S755= CtrlCRRegsW4bitRegs=0                                 Premise(F346)
	S756= CtrlCRRegsW1bitRegs=0                                 Premise(F347)

DMMU2	S757= PIDReg.Out=pid                                        PIDReg-Out(S718)
	S758= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S718)
	S759= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S718)
	S760= PC.CIA=addr                                           PC-Out(S722)
	S761= PC.CIA31_28=addr[31:28]                               PC-Out(S722)
	S762= PC.Out=addr+4                                         PC-Out(S723)
	S763= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S725)
	S764= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S725)
	S765= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S725)
	S766= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S727)
	S767= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S727)
	S768= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S727)
	S769= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S732)
	S770= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S732)
	S771= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S732)
	S772= IR.Out0_5=31                                          IR-Out(S737)
	S773= IR.Out6_10=rS                                         IR-Out(S737)
	S774= IR.Out11_15=rA                                        IR-Out(S737)
	S775= IR.Out16_20=rB                                        IR-Out(S737)
	S776= IR.Out21_31=249                                       IR-Out(S737)
	S777= A.Out=a                                               A-Out(S742)
	S778= A.Out26_31=a[26:31]                                   A-Out(S742)
	S779= A.Out30_31=a[30:31]                                   A-Out(S742)
	S780= B.Out=b                                               B-Out(S744)
	S781= B.Out26_31=b[26:31]                                   B-Out(S744)
	S782= B.Out30_31=b[30:31]                                   B-Out(S744)
	S783= ALUOut.Out=~(a|b)                                     ALUOut-Out(S746)
	S784= ALUOut.Out26_31=~(a|b)[26:31]                         ALUOut-Out(S746)
	S785= ALUOut.Out30_31=~(a|b)[30:31]                         ALUOut-Out(S746)
	S786= XER.SOOut=so                                          XER-SO-Out(S748)
	S787= DR4bit.Out={Compare0(~(a|b)),so}                      DR4bit-Out(S752)
	S788= DR4bit.Out26_31={Compare0(~(a|b)),so}[26:31]          DR4bit-Out(S752)
	S789= DR4bit.Out30_31={Compare0(~(a|b)),so}[30:31]          DR4bit-Out(S752)
	S790= PIDReg.Out=>IMMU.PID                                  Premise(F348)
	S791= IMMU.PID=pid                                          Path(S757,S790)
	S792= PC.Out=>IMMU.IEA                                      Premise(F349)
	S793= IMMU.IEA=addr+4                                       Path(S762,S792)
	S794= IMMU.Addr={pid,addr+4}                                IMMU-Search(S791,S793)
	S795= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S791,S793)
	S796= IMMU.Addr=>IAddrReg.In                                Premise(F350)
	S797= IAddrReg.In={pid,addr+4}                              Path(S794,S796)
	S798= IMMU.Hit=>IMMUHitReg.In                               Premise(F351)
	S799= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S795,S798)
	S800= PC.Out=>ICache.IEA                                    Premise(F352)
	S801= ICache.IEA=addr+4                                     Path(S762,S800)
	S802= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S801)
	S803= ICache.Out=>ICacheReg.In                              Premise(F353)
	S804= ICache.Hit=>ICacheHitReg.In                           Premise(F354)
	S805= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S802,S804)
	S806= IMMUHitReg.Out=>CU.IMemHit                            Premise(F355)
	S807= CU.IMemHit=IMMUHit(pid,addr)                          Path(S766,S806)
	S808= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F356)
	S809= CU.ICacheHit=ICacheHit(addr)                          Path(S769,S808)
	S810= IAddrReg.Out=>IMem.RAddr                              Premise(F357)
	S811= IMem.RAddr={pid,addr}                                 Path(S763,S810)
	S812= IMem.Out={31,rS,rA,rB,249}                            IMem-Read(S811,S734)
	S813= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S811,S734)
	S814= IMem.Out=>IRMux.MemData                               Premise(F358)
	S815= IRMux.MemData={31,rS,rA,rB,249}                       Path(S812,S814)
	S816= IRMux.Out={31,rS,rA,rB,249}                           IRMux-Select(S815)
	S817= ICacheReg.Out=>IRMux.CacheData                        Premise(F359)
	S818= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F360)
	S819= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S766,S818)
	S820= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F361)
	S821= IRMux.CacheSel=ICacheHit(addr)                        Path(S769,S820)
	S822= IRMux.Out=>IR.In                                      Premise(F362)
	S823= IR.In={31,rS,rA,rB,249}                               Path(S816,S822)
	S824= IMem.MEM8WordOut=>ICache.WData                        Premise(F363)
	S825= ICache.WData=IMemGet8Word({pid,addr})                 Path(S813,S824)
	S826= PC.Out=>ICache.IEA                                    Premise(F364)
	S827= IR.Out0_5=>CU.Op                                      Premise(F365)
	S828= CU.Op=31                                              Path(S772,S827)
	S829= IR.Out6_10=>GPRegs.RReg1                              Premise(F366)
	S830= GPRegs.RReg1=rS                                       Path(S773,S829)
	S831= GPRegs.Rdata1=a                                       GPRegs-Read(S830,S739)
	S832= IR.Out16_20=>GPRegs.RReg2                             Premise(F367)
	S833= GPRegs.RReg2=rB                                       Path(S775,S832)
	S834= GPRegs.Rdata2=b                                       GPRegs-Read(S833,S740)
	S835= IR.Out21_31=>CU.IRFunc                                Premise(F368)
	S836= CU.IRFunc=249                                         Path(S776,S835)
	S837= CU.Func=alu_nor                                       CU(S828,S836)
	S838= GPRegs.Rdata1=>A.In                                   Premise(F369)
	S839= A.In=a                                                Path(S831,S838)
	S840= GPRegs.Rdata2=>B.In                                   Premise(F370)
	S841= B.In=b                                                Path(S834,S840)
	S842= A.Out=>ALU.A                                          Premise(F371)
	S843= ALU.A=a                                               Path(S777,S842)
	S844= B.Out=>ALU.B                                          Premise(F372)
	S845= ALU.B=b                                               Path(S780,S844)
	S846= CU.Func=>ALU.Func                                     Premise(F373)
	S847= ALU.Func=alu_nor                                      Path(S837,S846)
	S848= ALU.Out=~(a|b)                                        ALU(S843,S845)
	S849= ALU.CMP=Compare0(~(a|b))                              ALU(S843,S845)
	S850= ALU.OV=OverFlow(~(a|b))                               ALU(S843,S845)
	S851= ALU.CA=Carry(~(a|b))                                  ALU(S843,S845)
	S852= ALU.Out=>ALUOut.In                                    Premise(F374)
	S853= ALUOut.In=~(a|b)                                      Path(S848,S852)
	S854= ALU.CMP=>DataCmb.A                                    Premise(F375)
	S855= DataCmb.A=Compare0(~(a|b))                            Path(S849,S854)
	S856= XER.SOOut=>DataCmb.B                                  Premise(F376)
	S857= DataCmb.B=so                                          Path(S786,S856)
	S858= DataCmb.Out={Compare0(~(a|b)),so}                     DataCmb(S855,S857)
	S859= DataCmb.Out=>DR4bit.In                                Premise(F377)
	S860= DR4bit.In={Compare0(~(a|b)),so}                       Path(S858,S859)
	S861= IR.Out11_15=>GPRegs.WReg                              Premise(F378)
	S862= GPRegs.WReg=rA                                        Path(S774,S861)
	S863= ALUOut.Out=>GPRegs.WData                              Premise(F379)
	S864= GPRegs.WData=~(a|b)                                   Path(S783,S863)
	S865= DR4bit.Out=>CRRegs.CR0In                              Premise(F380)
	S866= CRRegs.CR0In={Compare0(~(a|b)),so}                    Path(S787,S865)
	S867= CtrlPIDReg=0                                          Premise(F381)
	S868= [PIDReg]=pid                                          PIDReg-Hold(S718,S867)
	S869= CtrlIMMU=0                                            Premise(F382)
	S870= CtrlPC=0                                              Premise(F383)
	S871= CtrlPCInc=0                                           Premise(F384)
	S872= PC[CIA]=addr                                          PC-Hold(S722,S871)
	S873= PC[Out]=addr+4                                        PC-Hold(S723,S870,S871)
	S874= CtrlIAddrReg=0                                        Premise(F385)
	S875= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S725,S874)
	S876= CtrlIMMUHitReg=0                                      Premise(F386)
	S877= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S727,S876)
	S878= CtrlICache=0                                          Premise(F387)
	S879= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S729,S878)
	S880= CtrlICacheReg=0                                       Premise(F388)
	S881= CtrlICacheHitReg=0                                    Premise(F389)
	S882= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S732,S881)
	S883= CtrlIMem=0                                            Premise(F390)
	S884= IMem[{pid,addr}]={31,rS,rA,rB,249}                    IMem-Hold(S734,S883)
	S885= CtrlIRMux=0                                           Premise(F391)
	S886= CtrlIR=0                                              Premise(F392)
	S887= [IR]={31,rS,rA,rB,249}                                IR-Hold(S737,S886)
	S888= CtrlGPRegs=0                                          Premise(F393)
	S889= GPRegs[rS]=a                                          GPRegs-Hold(S739,S888)
	S890= GPRegs[rB]=b                                          GPRegs-Hold(S740,S888)
	S891= CtrlA=0                                               Premise(F394)
	S892= [A]=a                                                 A-Hold(S742,S891)
	S893= CtrlB=0                                               Premise(F395)
	S894= [B]=b                                                 B-Hold(S744,S893)
	S895= CtrlALUOut=0                                          Premise(F396)
	S896= [ALUOut]=~(a|b)                                       ALUOut-Hold(S746,S895)
	S897= CtrlXERSO=0                                           Premise(F397)
	S898= XER[SO]=so                                            XER-SO-Hold(S748,S897)
	S899= CtrlXEROV=0                                           Premise(F398)
	S900= CtrlXERCA=0                                           Premise(F399)
	S901= CtrlDR4bit=0                                          Premise(F400)
	S902= [DR4bit]={Compare0(~(a|b)),so}                        DR4bit-Hold(S752,S901)
	S903= CtrlCRRegs=0                                          Premise(F401)
	S904= CtrlCRRegsCR0=0                                       Premise(F402)
	S905= CtrlCRRegsW4bitRegs=0                                 Premise(F403)
	S906= CtrlCRRegsW1bitRegs=0                                 Premise(F404)

WB	S907= PIDReg.Out=pid                                        PIDReg-Out(S868)
	S908= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S868)
	S909= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S868)
	S910= PC.CIA=addr                                           PC-Out(S872)
	S911= PC.CIA31_28=addr[31:28]                               PC-Out(S872)
	S912= PC.Out=addr+4                                         PC-Out(S873)
	S913= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S875)
	S914= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S875)
	S915= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S875)
	S916= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S877)
	S917= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S877)
	S918= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S877)
	S919= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S882)
	S920= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S882)
	S921= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S882)
	S922= IR.Out0_5=31                                          IR-Out(S887)
	S923= IR.Out6_10=rS                                         IR-Out(S887)
	S924= IR.Out11_15=rA                                        IR-Out(S887)
	S925= IR.Out16_20=rB                                        IR-Out(S887)
	S926= IR.Out21_31=249                                       IR-Out(S887)
	S927= A.Out=a                                               A-Out(S892)
	S928= A.Out26_31=a[26:31]                                   A-Out(S892)
	S929= A.Out30_31=a[30:31]                                   A-Out(S892)
	S930= B.Out=b                                               B-Out(S894)
	S931= B.Out26_31=b[26:31]                                   B-Out(S894)
	S932= B.Out30_31=b[30:31]                                   B-Out(S894)
	S933= ALUOut.Out=~(a|b)                                     ALUOut-Out(S896)
	S934= ALUOut.Out26_31=~(a|b)[26:31]                         ALUOut-Out(S896)
	S935= ALUOut.Out30_31=~(a|b)[30:31]                         ALUOut-Out(S896)
	S936= XER.SOOut=so                                          XER-SO-Out(S898)
	S937= DR4bit.Out={Compare0(~(a|b)),so}                      DR4bit-Out(S902)
	S938= DR4bit.Out26_31={Compare0(~(a|b)),so}[26:31]          DR4bit-Out(S902)
	S939= DR4bit.Out30_31={Compare0(~(a|b)),so}[30:31]          DR4bit-Out(S902)
	S940= PIDReg.Out=>IMMU.PID                                  Premise(F405)
	S941= IMMU.PID=pid                                          Path(S907,S940)
	S942= PC.Out=>IMMU.IEA                                      Premise(F406)
	S943= IMMU.IEA=addr+4                                       Path(S912,S942)
	S944= IMMU.Addr={pid,addr+4}                                IMMU-Search(S941,S943)
	S945= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S941,S943)
	S946= IMMU.Addr=>IAddrReg.In                                Premise(F407)
	S947= IAddrReg.In={pid,addr+4}                              Path(S944,S946)
	S948= IMMU.Hit=>IMMUHitReg.In                               Premise(F408)
	S949= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S945,S948)
	S950= PC.Out=>ICache.IEA                                    Premise(F409)
	S951= ICache.IEA=addr+4                                     Path(S912,S950)
	S952= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S951)
	S953= ICache.Out=>ICacheReg.In                              Premise(F410)
	S954= ICache.Hit=>ICacheHitReg.In                           Premise(F411)
	S955= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S952,S954)
	S956= IMMUHitReg.Out=>CU.IMemHit                            Premise(F412)
	S957= CU.IMemHit=IMMUHit(pid,addr)                          Path(S916,S956)
	S958= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F413)
	S959= CU.ICacheHit=ICacheHit(addr)                          Path(S919,S958)
	S960= IAddrReg.Out=>IMem.RAddr                              Premise(F414)
	S961= IMem.RAddr={pid,addr}                                 Path(S913,S960)
	S962= IMem.Out={31,rS,rA,rB,249}                            IMem-Read(S961,S884)
	S963= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S961,S884)
	S964= IMem.Out=>IRMux.MemData                               Premise(F415)
	S965= IRMux.MemData={31,rS,rA,rB,249}                       Path(S962,S964)
	S966= IRMux.Out={31,rS,rA,rB,249}                           IRMux-Select(S965)
	S967= ICacheReg.Out=>IRMux.CacheData                        Premise(F416)
	S968= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F417)
	S969= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S916,S968)
	S970= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F418)
	S971= IRMux.CacheSel=ICacheHit(addr)                        Path(S919,S970)
	S972= IRMux.Out=>IR.In                                      Premise(F419)
	S973= IR.In={31,rS,rA,rB,249}                               Path(S966,S972)
	S974= IMem.MEM8WordOut=>ICache.WData                        Premise(F420)
	S975= ICache.WData=IMemGet8Word({pid,addr})                 Path(S963,S974)
	S976= PC.Out=>ICache.IEA                                    Premise(F421)
	S977= IR.Out0_5=>CU.Op                                      Premise(F422)
	S978= CU.Op=31                                              Path(S922,S977)
	S979= IR.Out6_10=>GPRegs.RReg1                              Premise(F423)
	S980= GPRegs.RReg1=rS                                       Path(S923,S979)
	S981= GPRegs.Rdata1=a                                       GPRegs-Read(S980,S889)
	S982= IR.Out16_20=>GPRegs.RReg2                             Premise(F424)
	S983= GPRegs.RReg2=rB                                       Path(S925,S982)
	S984= GPRegs.Rdata2=b                                       GPRegs-Read(S983,S890)
	S985= IR.Out21_31=>CU.IRFunc                                Premise(F425)
	S986= CU.IRFunc=249                                         Path(S926,S985)
	S987= CU.Func=alu_nor                                       CU(S978,S986)
	S988= GPRegs.Rdata1=>A.In                                   Premise(F426)
	S989= A.In=a                                                Path(S981,S988)
	S990= GPRegs.Rdata2=>B.In                                   Premise(F427)
	S991= B.In=b                                                Path(S984,S990)
	S992= A.Out=>ALU.A                                          Premise(F428)
	S993= ALU.A=a                                               Path(S927,S992)
	S994= B.Out=>ALU.B                                          Premise(F429)
	S995= ALU.B=b                                               Path(S930,S994)
	S996= CU.Func=>ALU.Func                                     Premise(F430)
	S997= ALU.Func=alu_nor                                      Path(S987,S996)
	S998= ALU.Out=~(a|b)                                        ALU(S993,S995)
	S999= ALU.CMP=Compare0(~(a|b))                              ALU(S993,S995)
	S1000= ALU.OV=OverFlow(~(a|b))                              ALU(S993,S995)
	S1001= ALU.CA=Carry(~(a|b))                                 ALU(S993,S995)
	S1002= ALU.Out=>ALUOut.In                                   Premise(F431)
	S1003= ALUOut.In=~(a|b)                                     Path(S998,S1002)
	S1004= ALU.CMP=>DataCmb.A                                   Premise(F432)
	S1005= DataCmb.A=Compare0(~(a|b))                           Path(S999,S1004)
	S1006= XER.SOOut=>DataCmb.B                                 Premise(F433)
	S1007= DataCmb.B=so                                         Path(S936,S1006)
	S1008= DataCmb.Out={Compare0(~(a|b)),so}                    DataCmb(S1005,S1007)
	S1009= DataCmb.Out=>DR4bit.In                               Premise(F434)
	S1010= DR4bit.In={Compare0(~(a|b)),so}                      Path(S1008,S1009)
	S1011= IR.Out11_15=>GPRegs.WReg                             Premise(F435)
	S1012= GPRegs.WReg=rA                                       Path(S924,S1011)
	S1013= ALUOut.Out=>GPRegs.WData                             Premise(F436)
	S1014= GPRegs.WData=~(a|b)                                  Path(S933,S1013)
	S1015= DR4bit.Out=>CRRegs.CR0In                             Premise(F437)
	S1016= CRRegs.CR0In={Compare0(~(a|b)),so}                   Path(S937,S1015)
	S1017= CtrlPIDReg=0                                         Premise(F438)
	S1018= [PIDReg]=pid                                         PIDReg-Hold(S868,S1017)
	S1019= CtrlIMMU=0                                           Premise(F439)
	S1020= CtrlPC=0                                             Premise(F440)
	S1021= CtrlPCInc=0                                          Premise(F441)
	S1022= PC[CIA]=addr                                         PC-Hold(S872,S1021)
	S1023= PC[Out]=addr+4                                       PC-Hold(S873,S1020,S1021)
	S1024= CtrlIAddrReg=0                                       Premise(F442)
	S1025= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S875,S1024)
	S1026= CtrlIMMUHitReg=0                                     Premise(F443)
	S1027= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S877,S1026)
	S1028= CtrlICache=0                                         Premise(F444)
	S1029= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S879,S1028)
	S1030= CtrlICacheReg=0                                      Premise(F445)
	S1031= CtrlICacheHitReg=0                                   Premise(F446)
	S1032= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S882,S1031)
	S1033= CtrlIMem=0                                           Premise(F447)
	S1034= IMem[{pid,addr}]={31,rS,rA,rB,249}                   IMem-Hold(S884,S1033)
	S1035= CtrlIRMux=0                                          Premise(F448)
	S1036= CtrlIR=0                                             Premise(F449)
	S1037= [IR]={31,rS,rA,rB,249}                               IR-Hold(S887,S1036)
	S1038= CtrlGPRegs=1                                         Premise(F450)
	S1039= GPRegs[rA]=~(a|b)                                    GPRegs-Write(S1012,S1014,S1038)
	S1040= CtrlA=0                                              Premise(F451)
	S1041= [A]=a                                                A-Hold(S892,S1040)
	S1042= CtrlB=0                                              Premise(F452)
	S1043= [B]=b                                                B-Hold(S894,S1042)
	S1044= CtrlALUOut=0                                         Premise(F453)
	S1045= [ALUOut]=~(a|b)                                      ALUOut-Hold(S896,S1044)
	S1046= CtrlXERSO=0                                          Premise(F454)
	S1047= XER[SO]=so                                           XER-SO-Hold(S898,S1046)
	S1048= CtrlXEROV=0                                          Premise(F455)
	S1049= CtrlXERCA=0                                          Premise(F456)
	S1050= CtrlDR4bit=0                                         Premise(F457)
	S1051= [DR4bit]={Compare0(~(a|b)),so}                       DR4bit-Hold(S902,S1050)
	S1052= CtrlCRRegs=0                                         Premise(F458)
	S1053= CtrlCRRegsCR0=1                                      Premise(F459)
	S1054= CRRegs[CR0]={Compare0(~(a|b)),so}                    CRRegs-CR0-Write(S1016,S1053)
	S1055= CtrlCRRegsW4bitRegs=0                                Premise(F460)
	S1056= CtrlCRRegsW1bitRegs=0                                Premise(F461)

POST	S1018= [PIDReg]=pid                                         PIDReg-Hold(S868,S1017)
	S1022= PC[CIA]=addr                                         PC-Hold(S872,S1021)
	S1023= PC[Out]=addr+4                                       PC-Hold(S873,S1020,S1021)
	S1025= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S875,S1024)
	S1027= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S877,S1026)
	S1029= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S879,S1028)
	S1032= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S882,S1031)
	S1034= IMem[{pid,addr}]={31,rS,rA,rB,249}                   IMem-Hold(S884,S1033)
	S1037= [IR]={31,rS,rA,rB,249}                               IR-Hold(S887,S1036)
	S1039= GPRegs[rA]=~(a|b)                                    GPRegs-Write(S1012,S1014,S1038)
	S1041= [A]=a                                                A-Hold(S892,S1040)
	S1043= [B]=b                                                B-Hold(S894,S1042)
	S1045= [ALUOut]=~(a|b)                                      ALUOut-Hold(S896,S1044)
	S1047= XER[SO]=so                                           XER-SO-Hold(S898,S1046)
	S1051= [DR4bit]={Compare0(~(a|b)),so}                       DR4bit-Hold(S902,S1050)
	S1054= CRRegs[CR0]={Compare0(~(a|b)),so}                    CRRegs-CR0-Write(S1016,S1053)

