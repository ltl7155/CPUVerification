
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={19,BT,BA,BB,898}                      Premise(F2)
	S3= CRRegs[BA]=a                                            Premise(F3)
	S4= CRRegs[BB]=b                                            Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S7= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S8= PC.Out=addr                                             PC-Out(S1)
	S9= PIDReg.Out=>IMMU.PID                                    Premise(F5)
	S10= IMMU.PID=pid                                           Path(S5,S9)
	S11= PC.Out=>IMMU.IEA                                       Premise(F6)
	S12= IMMU.IEA=addr                                          Path(S8,S11)
	S13= IMMU.Addr={pid,addr}                                   IMMU-Search(S10,S12)
	S14= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S10,S12)
	S15= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S16= IAddrReg.In={pid,addr}                                 Path(S13,S15)
	S17= IMMU.Hit=>IMMUHitReg.In                                Premise(F8)
	S18= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S14,S17)
	S19= PC.Out=>ICache.IEA                                     Premise(F9)
	S20= ICache.IEA=addr                                        Path(S8,S19)
	S21= ICache.Hit=ICacheHit(addr)                             ICache-Search(S20)
	S22= ICache.Out=>ICacheReg.In                               Premise(F10)
	S23= ICache.Hit=>ICacheHitReg.In                            Premise(F11)
	S24= ICacheHitReg.In=ICacheHit(addr)                        Path(S21,S23)
	S25= IMMUHitReg.Out=>CU.IMemHit                             Premise(F12)
	S26= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F13)
	S27= IAddrReg.Out=>IMem.RAddr                               Premise(F14)
	S28= IMem.Out=>IRMux.MemData                                Premise(F15)
	S29= ICacheReg.Out=>IRMux.CacheData                         Premise(F16)
	S30= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F17)
	S31= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F18)
	S32= IRMux.Out=>IR.In                                       Premise(F19)
	S33= IMem.MEM8WordOut=>ICache.WData                         Premise(F20)
	S34= PC.Out=>ICache.IEA                                     Premise(F21)
	S35= IR.Out0_5=>CU.Op                                       Premise(F22)
	S36= IR.Out11_15=>CRRegs.RBitReg1                           Premise(F23)
	S37= IR.Out16_20=>CRRegs.RBitReg2                           Premise(F24)
	S38= IR.Out21_31=>CU.IRFunc                                 Premise(F25)
	S39= CRRegs.RBitdata1=>A1bit.In                             Premise(F26)
	S40= CRRegs.RBitdata2=>B1bit.In                             Premise(F27)
	S41= A1bit.Out=>ALU1bit.A                                   Premise(F28)
	S42= B1bit.Out=>ALU1bit.B                                   Premise(F29)
	S43= CU.Func=>ALU1bit.Func                                  Premise(F30)
	S44= ALU1bit.Out=>ALU1bitOut.In                             Premise(F31)
	S45= IR.Out6_10=>CRRegs.W1bitReg                            Premise(F32)
	S46= ALU1bitOut.Out=>CRRegs.W1bitData                       Premise(F33)
	S47= CtrlPIDReg=0                                           Premise(F34)
	S48= [PIDReg]=pid                                           PIDReg-Hold(S0,S47)
	S49= CtrlIMMU=0                                             Premise(F35)
	S50= CtrlPC=0                                               Premise(F36)
	S51= CtrlPCInc=0                                            Premise(F37)
	S52= PC[Out]=addr                                           PC-Hold(S1,S50,S51)
	S53= CtrlIAddrReg=1                                         Premise(F38)
	S54= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S16,S53)
	S55= CtrlIMMUHitReg=1                                       Premise(F39)
	S56= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S18,S55)
	S57= CtrlICache=0                                           Premise(F40)
	S58= CtrlICacheReg=1                                        Premise(F41)
	S59= CtrlICacheHitReg=1                                     Premise(F42)
	S60= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S24,S59)
	S61= CtrlIMem=0                                             Premise(F43)
	S62= IMem[{pid,addr}]={19,BT,BA,BB,898}                     IMem-Hold(S2,S61)
	S63= CtrlIRMux=0                                            Premise(F44)
	S64= CtrlIR=0                                               Premise(F45)
	S65= CtrlCRRegs=0                                           Premise(F46)
	S66= CRRegs[BA]=a                                           CRRegs-Hold(S3,S65)
	S67= CRRegs[BB]=b                                           CRRegs-Hold(S4,S65)
	S68= CtrlCRRegsCR0=0                                        Premise(F47)
	S69= CtrlCRRegsW4bitRegs=0                                  Premise(F48)
	S70= CtrlCRRegsW1bitRegs=0                                  Premise(F49)
	S71= CtrlA1bit=0                                            Premise(F50)
	S72= CtrlB1bit=0                                            Premise(F51)
	S73= CtrlALU1bitOut=0                                       Premise(F52)

IMMU	S74= PIDReg.Out=pid                                         PIDReg-Out(S48)
	S75= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S48)
	S76= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S48)
	S77= PC.Out=addr                                            PC-Out(S52)
	S78= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S54)
	S79= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S54)
	S80= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S54)
	S81= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S56)
	S82= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S56)
	S83= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]           IMMUHitReg-Out(S56)
	S84= ICacheHitReg.Out=ICacheHit(addr)                       ICacheHitReg-Out(S60)
	S85= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]           ICacheHitReg-Out(S60)
	S86= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]           ICacheHitReg-Out(S60)
	S87= PIDReg.Out=>IMMU.PID                                   Premise(F53)
	S88= IMMU.PID=pid                                           Path(S74,S87)
	S89= PC.Out=>IMMU.IEA                                       Premise(F54)
	S90= IMMU.IEA=addr                                          Path(S77,S89)
	S91= IMMU.Addr={pid,addr}                                   IMMU-Search(S88,S90)
	S92= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S88,S90)
	S93= IMMU.Addr=>IAddrReg.In                                 Premise(F55)
	S94= IAddrReg.In={pid,addr}                                 Path(S91,S93)
	S95= IMMU.Hit=>IMMUHitReg.In                                Premise(F56)
	S96= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S92,S95)
	S97= PC.Out=>ICache.IEA                                     Premise(F57)
	S98= ICache.IEA=addr                                        Path(S77,S97)
	S99= ICache.Hit=ICacheHit(addr)                             ICache-Search(S98)
	S100= ICache.Out=>ICacheReg.In                              Premise(F58)
	S101= ICache.Hit=>ICacheHitReg.In                           Premise(F59)
	S102= ICacheHitReg.In=ICacheHit(addr)                       Path(S99,S101)
	S103= IMMUHitReg.Out=>CU.IMemHit                            Premise(F60)
	S104= CU.IMemHit=IMMUHit(pid,addr)                          Path(S81,S103)
	S105= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F61)
	S106= CU.ICacheHit=ICacheHit(addr)                          Path(S84,S105)
	S107= IAddrReg.Out=>IMem.RAddr                              Premise(F62)
	S108= IMem.RAddr={pid,addr}                                 Path(S78,S107)
	S109= IMem.Out={19,BT,BA,BB,898}                            IMem-Read(S108,S62)
	S110= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S108,S62)
	S111= IMem.Out=>IRMux.MemData                               Premise(F63)
	S112= IRMux.MemData={19,BT,BA,BB,898}                       Path(S109,S111)
	S113= IRMux.Out={19,BT,BA,BB,898}                           IRMux-Select(S112)
	S114= ICacheReg.Out=>IRMux.CacheData                        Premise(F64)
	S115= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F65)
	S116= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S81,S115)
	S117= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F66)
	S118= IRMux.CacheSel=ICacheHit(addr)                        Path(S84,S117)
	S119= IRMux.Out=>IR.In                                      Premise(F67)
	S120= IR.In={19,BT,BA,BB,898}                               Path(S113,S119)
	S121= IMem.MEM8WordOut=>ICache.WData                        Premise(F68)
	S122= ICache.WData=IMemGet8Word({pid,addr})                 Path(S110,S121)
	S123= PC.Out=>ICache.IEA                                    Premise(F69)
	S124= IR.Out0_5=>CU.Op                                      Premise(F70)
	S125= IR.Out11_15=>CRRegs.RBitReg1                          Premise(F71)
	S126= IR.Out16_20=>CRRegs.RBitReg2                          Premise(F72)
	S127= IR.Out21_31=>CU.IRFunc                                Premise(F73)
	S128= CRRegs.RBitdata1=>A1bit.In                            Premise(F74)
	S129= CRRegs.RBitdata2=>B1bit.In                            Premise(F75)
	S130= A1bit.Out=>ALU1bit.A                                  Premise(F76)
	S131= B1bit.Out=>ALU1bit.B                                  Premise(F77)
	S132= CU.Func=>ALU1bit.Func                                 Premise(F78)
	S133= ALU1bit.Out=>ALU1bitOut.In                            Premise(F79)
	S134= IR.Out6_10=>CRRegs.W1bitReg                           Premise(F80)
	S135= ALU1bitOut.Out=>CRRegs.W1bitData                      Premise(F81)
	S136= CtrlPIDReg=0                                          Premise(F82)
	S137= [PIDReg]=pid                                          PIDReg-Hold(S48,S136)
	S138= CtrlIMMU=0                                            Premise(F83)
	S139= CtrlPC=0                                              Premise(F84)
	S140= CtrlPCInc=1                                           Premise(F85)
	S141= PC[Out]=addr+4                                        PC-Inc(S52,S139,S140)
	S142= PC[CIA]=addr                                          PC-Inc(S52,S139,S140)
	S143= CtrlIAddrReg=0                                        Premise(F86)
	S144= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S54,S143)
	S145= CtrlIMMUHitReg=0                                      Premise(F87)
	S146= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S56,S145)
	S147= CtrlICache=1                                          Premise(F88)
	S148= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S98,S122,S147)
	S149= CtrlICacheReg=0                                       Premise(F89)
	S150= CtrlICacheHitReg=0                                    Premise(F90)
	S151= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S60,S150)
	S152= CtrlIMem=0                                            Premise(F91)
	S153= IMem[{pid,addr}]={19,BT,BA,BB,898}                    IMem-Hold(S62,S152)
	S154= CtrlIRMux=0                                           Premise(F92)
	S155= CtrlIR=1                                              Premise(F93)
	S156= [IR]={19,BT,BA,BB,898}                                IR-Write(S120,S155)
	S157= CtrlCRRegs=0                                          Premise(F94)
	S158= CRRegs[BA]=a                                          CRRegs-Hold(S66,S157)
	S159= CRRegs[BB]=b                                          CRRegs-Hold(S67,S157)
	S160= CtrlCRRegsCR0=0                                       Premise(F95)
	S161= CtrlCRRegsW4bitRegs=0                                 Premise(F96)
	S162= CtrlCRRegsW1bitRegs=0                                 Premise(F97)
	S163= CtrlA1bit=0                                           Premise(F98)
	S164= CtrlB1bit=0                                           Premise(F99)
	S165= CtrlALU1bitOut=0                                      Premise(F100)

ID	S166= PIDReg.Out=pid                                        PIDReg-Out(S137)
	S167= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S137)
	S168= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S137)
	S169= PC.Out=addr+4                                         PC-Out(S141)
	S170= PC.CIA=addr                                           PC-Out(S142)
	S171= PC.CIA31_28=addr[31:28]                               PC-Out(S142)
	S172= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S144)
	S173= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S144)
	S174= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S144)
	S175= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S146)
	S176= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S146)
	S177= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S146)
	S178= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S151)
	S179= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S151)
	S180= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S151)
	S181= IR.Out0_5=19                                          IR-Out(S156)
	S182= IR.Out6_10=BT                                         IR-Out(S156)
	S183= IR.Out11_15=BA                                        IR-Out(S156)
	S184= IR.Out16_20=BB                                        IR-Out(S156)
	S185= IR.Out21_31=898                                       IR-Out(S156)
	S186= PIDReg.Out=>IMMU.PID                                  Premise(F101)
	S187= IMMU.PID=pid                                          Path(S166,S186)
	S188= PC.Out=>IMMU.IEA                                      Premise(F102)
	S189= IMMU.IEA=addr+4                                       Path(S169,S188)
	S190= IMMU.Addr={pid,addr+4}                                IMMU-Search(S187,S189)
	S191= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S187,S189)
	S192= IMMU.Addr=>IAddrReg.In                                Premise(F103)
	S193= IAddrReg.In={pid,addr+4}                              Path(S190,S192)
	S194= IMMU.Hit=>IMMUHitReg.In                               Premise(F104)
	S195= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S191,S194)
	S196= PC.Out=>ICache.IEA                                    Premise(F105)
	S197= ICache.IEA=addr+4                                     Path(S169,S196)
	S198= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S197)
	S199= ICache.Out=>ICacheReg.In                              Premise(F106)
	S200= ICache.Hit=>ICacheHitReg.In                           Premise(F107)
	S201= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S198,S200)
	S202= IMMUHitReg.Out=>CU.IMemHit                            Premise(F108)
	S203= CU.IMemHit=IMMUHit(pid,addr)                          Path(S175,S202)
	S204= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F109)
	S205= CU.ICacheHit=ICacheHit(addr)                          Path(S178,S204)
	S206= IAddrReg.Out=>IMem.RAddr                              Premise(F110)
	S207= IMem.RAddr={pid,addr}                                 Path(S172,S206)
	S208= IMem.Out={19,BT,BA,BB,898}                            IMem-Read(S207,S153)
	S209= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S207,S153)
	S210= IMem.Out=>IRMux.MemData                               Premise(F111)
	S211= IRMux.MemData={19,BT,BA,BB,898}                       Path(S208,S210)
	S212= IRMux.Out={19,BT,BA,BB,898}                           IRMux-Select(S211)
	S213= ICacheReg.Out=>IRMux.CacheData                        Premise(F112)
	S214= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F113)
	S215= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S175,S214)
	S216= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F114)
	S217= IRMux.CacheSel=ICacheHit(addr)                        Path(S178,S216)
	S218= IRMux.Out=>IR.In                                      Premise(F115)
	S219= IR.In={19,BT,BA,BB,898}                               Path(S212,S218)
	S220= IMem.MEM8WordOut=>ICache.WData                        Premise(F116)
	S221= ICache.WData=IMemGet8Word({pid,addr})                 Path(S209,S220)
	S222= PC.Out=>ICache.IEA                                    Premise(F117)
	S223= IR.Out0_5=>CU.Op                                      Premise(F118)
	S224= CU.Op=19                                              Path(S181,S223)
	S225= IR.Out11_15=>CRRegs.RBitReg1                          Premise(F119)
	S226= CRRegs.RBitReg1=BA                                    Path(S183,S225)
	S227= CRRegs.RBitdata1=a                                    CRRegs-Read(S226,S158)
	S228= IR.Out16_20=>CRRegs.RBitReg2                          Premise(F120)
	S229= CRRegs.RBitReg2=BB                                    Path(S184,S228)
	S230= CRRegs.RBitdata2=b                                    CRRegs-Read(S229,S159)
	S231= IR.Out21_31=>CU.IRFunc                                Premise(F121)
	S232= CU.IRFunc=898                                         Path(S185,S231)
	S233= CU.Func=alu_or                                        CU(S224,S232)
	S234= CRRegs.RBitdata1=>A1bit.In                            Premise(F122)
	S235= A1bit.In=a                                            Path(S227,S234)
	S236= CRRegs.RBitdata2=>B1bit.In                            Premise(F123)
	S237= B1bit.In=b                                            Path(S230,S236)
	S238= A1bit.Out=>ALU1bit.A                                  Premise(F124)
	S239= B1bit.Out=>ALU1bit.B                                  Premise(F125)
	S240= CU.Func=>ALU1bit.Func                                 Premise(F126)
	S241= ALU1bit.Func=alu_or                                   Path(S233,S240)
	S242= ALU1bit.Out=>ALU1bitOut.In                            Premise(F127)
	S243= IR.Out6_10=>CRRegs.W1bitReg                           Premise(F128)
	S244= CRRegs.W1bitReg=BT                                    Path(S182,S243)
	S245= ALU1bitOut.Out=>CRRegs.W1bitData                      Premise(F129)
	S246= CtrlPIDReg=0                                          Premise(F130)
	S247= [PIDReg]=pid                                          PIDReg-Hold(S137,S246)
	S248= CtrlIMMU=0                                            Premise(F131)
	S249= CtrlPC=0                                              Premise(F132)
	S250= CtrlPCInc=0                                           Premise(F133)
	S251= PC[CIA]=addr                                          PC-Hold(S142,S250)
	S252= PC[Out]=addr+4                                        PC-Hold(S141,S249,S250)
	S253= CtrlIAddrReg=0                                        Premise(F134)
	S254= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S144,S253)
	S255= CtrlIMMUHitReg=0                                      Premise(F135)
	S256= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S146,S255)
	S257= CtrlICache=0                                          Premise(F136)
	S258= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S148,S257)
	S259= CtrlICacheReg=0                                       Premise(F137)
	S260= CtrlICacheHitReg=0                                    Premise(F138)
	S261= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S151,S260)
	S262= CtrlIMem=0                                            Premise(F139)
	S263= IMem[{pid,addr}]={19,BT,BA,BB,898}                    IMem-Hold(S153,S262)
	S264= CtrlIRMux=0                                           Premise(F140)
	S265= CtrlIR=0                                              Premise(F141)
	S266= [IR]={19,BT,BA,BB,898}                                IR-Hold(S156,S265)
	S267= CtrlCRRegs=0                                          Premise(F142)
	S268= CRRegs[BA]=a                                          CRRegs-Hold(S158,S267)
	S269= CRRegs[BB]=b                                          CRRegs-Hold(S159,S267)
	S270= CtrlCRRegsCR0=0                                       Premise(F143)
	S271= CtrlCRRegsW4bitRegs=0                                 Premise(F144)
	S272= CtrlCRRegsW1bitRegs=0                                 Premise(F145)
	S273= CtrlA1bit=1                                           Premise(F146)
	S274= [A1bit]=a                                             A1bit-Write(S235,S273)
	S275= CtrlB1bit=1                                           Premise(F147)
	S276= [B1bit]=b                                             B1bit-Write(S237,S275)
	S277= CtrlALU1bitOut=0                                      Premise(F148)

EX	S278= PIDReg.Out=pid                                        PIDReg-Out(S247)
	S279= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S247)
	S280= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S247)
	S281= PC.CIA=addr                                           PC-Out(S251)
	S282= PC.CIA31_28=addr[31:28]                               PC-Out(S251)
	S283= PC.Out=addr+4                                         PC-Out(S252)
	S284= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S254)
	S285= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S254)
	S286= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S254)
	S287= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S256)
	S288= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S256)
	S289= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S256)
	S290= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S261)
	S291= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S261)
	S292= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S261)
	S293= IR.Out0_5=19                                          IR-Out(S266)
	S294= IR.Out6_10=BT                                         IR-Out(S266)
	S295= IR.Out11_15=BA                                        IR-Out(S266)
	S296= IR.Out16_20=BB                                        IR-Out(S266)
	S297= IR.Out21_31=898                                       IR-Out(S266)
	S298= A1bit.Out=a                                           A1bit-Out(S274)
	S299= A1bit.Out26_31=a[26:31]                               A1bit-Out(S274)
	S300= A1bit.Out30_31=a[30:31]                               A1bit-Out(S274)
	S301= B1bit.Out=b                                           B1bit-Out(S276)
	S302= B1bit.Out26_31=b[26:31]                               B1bit-Out(S276)
	S303= B1bit.Out30_31=b[30:31]                               B1bit-Out(S276)
	S304= PIDReg.Out=>IMMU.PID                                  Premise(F149)
	S305= IMMU.PID=pid                                          Path(S278,S304)
	S306= PC.Out=>IMMU.IEA                                      Premise(F150)
	S307= IMMU.IEA=addr+4                                       Path(S283,S306)
	S308= IMMU.Addr={pid,addr+4}                                IMMU-Search(S305,S307)
	S309= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S305,S307)
	S310= IMMU.Addr=>IAddrReg.In                                Premise(F151)
	S311= IAddrReg.In={pid,addr+4}                              Path(S308,S310)
	S312= IMMU.Hit=>IMMUHitReg.In                               Premise(F152)
	S313= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S309,S312)
	S314= PC.Out=>ICache.IEA                                    Premise(F153)
	S315= ICache.IEA=addr+4                                     Path(S283,S314)
	S316= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S315)
	S317= ICache.Out=>ICacheReg.In                              Premise(F154)
	S318= ICache.Hit=>ICacheHitReg.In                           Premise(F155)
	S319= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S316,S318)
	S320= IMMUHitReg.Out=>CU.IMemHit                            Premise(F156)
	S321= CU.IMemHit=IMMUHit(pid,addr)                          Path(S287,S320)
	S322= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F157)
	S323= CU.ICacheHit=ICacheHit(addr)                          Path(S290,S322)
	S324= IAddrReg.Out=>IMem.RAddr                              Premise(F158)
	S325= IMem.RAddr={pid,addr}                                 Path(S284,S324)
	S326= IMem.Out={19,BT,BA,BB,898}                            IMem-Read(S325,S263)
	S327= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S325,S263)
	S328= IMem.Out=>IRMux.MemData                               Premise(F159)
	S329= IRMux.MemData={19,BT,BA,BB,898}                       Path(S326,S328)
	S330= IRMux.Out={19,BT,BA,BB,898}                           IRMux-Select(S329)
	S331= ICacheReg.Out=>IRMux.CacheData                        Premise(F160)
	S332= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F161)
	S333= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S287,S332)
	S334= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F162)
	S335= IRMux.CacheSel=ICacheHit(addr)                        Path(S290,S334)
	S336= IRMux.Out=>IR.In                                      Premise(F163)
	S337= IR.In={19,BT,BA,BB,898}                               Path(S330,S336)
	S338= IMem.MEM8WordOut=>ICache.WData                        Premise(F164)
	S339= ICache.WData=IMemGet8Word({pid,addr})                 Path(S327,S338)
	S340= PC.Out=>ICache.IEA                                    Premise(F165)
	S341= IR.Out0_5=>CU.Op                                      Premise(F166)
	S342= CU.Op=19                                              Path(S293,S341)
	S343= IR.Out11_15=>CRRegs.RBitReg1                          Premise(F167)
	S344= CRRegs.RBitReg1=BA                                    Path(S295,S343)
	S345= CRRegs.RBitdata1=a                                    CRRegs-Read(S344,S268)
	S346= IR.Out16_20=>CRRegs.RBitReg2                          Premise(F168)
	S347= CRRegs.RBitReg2=BB                                    Path(S296,S346)
	S348= CRRegs.RBitdata2=b                                    CRRegs-Read(S347,S269)
	S349= IR.Out21_31=>CU.IRFunc                                Premise(F169)
	S350= CU.IRFunc=898                                         Path(S297,S349)
	S351= CU.Func=alu_or                                        CU(S342,S350)
	S352= CRRegs.RBitdata1=>A1bit.In                            Premise(F170)
	S353= A1bit.In=a                                            Path(S345,S352)
	S354= CRRegs.RBitdata2=>B1bit.In                            Premise(F171)
	S355= B1bit.In=b                                            Path(S348,S354)
	S356= A1bit.Out=>ALU1bit.A                                  Premise(F172)
	S357= ALU1bit.A=a                                           Path(S298,S356)
	S358= B1bit.Out=>ALU1bit.B                                  Premise(F173)
	S359= ALU1bit.B=b                                           Path(S301,S358)
	S360= CU.Func=>ALU1bit.Func                                 Premise(F174)
	S361= ALU1bit.Func=alu_or                                   Path(S351,S360)
	S362= ALU1bit.Out=a|b                                       ALU1bit(S357,S359)
	S363= ALU1bit.CMP=Compare0(a|b)                             ALU1bit(S357,S359)
	S364= ALU1bit.OV=OverFlow(a|b)                              ALU1bit(S357,S359)
	S365= ALU1bit.CA=Carry(a|b)                                 ALU1bit(S357,S359)
	S366= ALU1bit.Out=>ALU1bitOut.In                            Premise(F175)
	S367= ALU1bitOut.In=a|b                                     Path(S362,S366)
	S368= IR.Out6_10=>CRRegs.W1bitReg                           Premise(F176)
	S369= CRRegs.W1bitReg=BT                                    Path(S294,S368)
	S370= ALU1bitOut.Out=>CRRegs.W1bitData                      Premise(F177)
	S371= CtrlPIDReg=0                                          Premise(F178)
	S372= [PIDReg]=pid                                          PIDReg-Hold(S247,S371)
	S373= CtrlIMMU=0                                            Premise(F179)
	S374= CtrlPC=0                                              Premise(F180)
	S375= CtrlPCInc=0                                           Premise(F181)
	S376= PC[CIA]=addr                                          PC-Hold(S251,S375)
	S377= PC[Out]=addr+4                                        PC-Hold(S252,S374,S375)
	S378= CtrlIAddrReg=0                                        Premise(F182)
	S379= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S254,S378)
	S380= CtrlIMMUHitReg=0                                      Premise(F183)
	S381= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S256,S380)
	S382= CtrlICache=0                                          Premise(F184)
	S383= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S258,S382)
	S384= CtrlICacheReg=0                                       Premise(F185)
	S385= CtrlICacheHitReg=0                                    Premise(F186)
	S386= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S261,S385)
	S387= CtrlIMem=0                                            Premise(F187)
	S388= IMem[{pid,addr}]={19,BT,BA,BB,898}                    IMem-Hold(S263,S387)
	S389= CtrlIRMux=0                                           Premise(F188)
	S390= CtrlIR=0                                              Premise(F189)
	S391= [IR]={19,BT,BA,BB,898}                                IR-Hold(S266,S390)
	S392= CtrlCRRegs=0                                          Premise(F190)
	S393= CRRegs[BA]=a                                          CRRegs-Hold(S268,S392)
	S394= CRRegs[BB]=b                                          CRRegs-Hold(S269,S392)
	S395= CtrlCRRegsCR0=0                                       Premise(F191)
	S396= CtrlCRRegsW4bitRegs=0                                 Premise(F192)
	S397= CtrlCRRegsW1bitRegs=0                                 Premise(F193)
	S398= CtrlA1bit=0                                           Premise(F194)
	S399= [A1bit]=a                                             A1bit-Hold(S274,S398)
	S400= CtrlB1bit=0                                           Premise(F195)
	S401= [B1bit]=b                                             B1bit-Hold(S276,S400)
	S402= CtrlALU1bitOut=1                                      Premise(F196)
	S403= [ALU1bitOut]=a|b                                      ALU1bitOut-Write(S367,S402)

MEM	S404= PIDReg.Out=pid                                        PIDReg-Out(S372)
	S405= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S372)
	S406= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S372)
	S407= PC.CIA=addr                                           PC-Out(S376)
	S408= PC.CIA31_28=addr[31:28]                               PC-Out(S376)
	S409= PC.Out=addr+4                                         PC-Out(S377)
	S410= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S379)
	S411= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S379)
	S412= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S379)
	S413= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S381)
	S414= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S381)
	S415= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S381)
	S416= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S386)
	S417= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S386)
	S418= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S386)
	S419= IR.Out0_5=19                                          IR-Out(S391)
	S420= IR.Out6_10=BT                                         IR-Out(S391)
	S421= IR.Out11_15=BA                                        IR-Out(S391)
	S422= IR.Out16_20=BB                                        IR-Out(S391)
	S423= IR.Out21_31=898                                       IR-Out(S391)
	S424= A1bit.Out=a                                           A1bit-Out(S399)
	S425= A1bit.Out26_31=a[26:31]                               A1bit-Out(S399)
	S426= A1bit.Out30_31=a[30:31]                               A1bit-Out(S399)
	S427= B1bit.Out=b                                           B1bit-Out(S401)
	S428= B1bit.Out26_31=b[26:31]                               B1bit-Out(S401)
	S429= B1bit.Out30_31=b[30:31]                               B1bit-Out(S401)
	S430= ALU1bitOut.Out=a|b                                    ALU1bitOut-Out(S403)
	S431= ALU1bitOut.Out26_31=a|b[26:31]                        ALU1bitOut-Out(S403)
	S432= ALU1bitOut.Out30_31=a|b[30:31]                        ALU1bitOut-Out(S403)
	S433= PIDReg.Out=>IMMU.PID                                  Premise(F197)
	S434= IMMU.PID=pid                                          Path(S404,S433)
	S435= PC.Out=>IMMU.IEA                                      Premise(F198)
	S436= IMMU.IEA=addr+4                                       Path(S409,S435)
	S437= IMMU.Addr={pid,addr+4}                                IMMU-Search(S434,S436)
	S438= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S434,S436)
	S439= IMMU.Addr=>IAddrReg.In                                Premise(F199)
	S440= IAddrReg.In={pid,addr+4}                              Path(S437,S439)
	S441= IMMU.Hit=>IMMUHitReg.In                               Premise(F200)
	S442= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S438,S441)
	S443= PC.Out=>ICache.IEA                                    Premise(F201)
	S444= ICache.IEA=addr+4                                     Path(S409,S443)
	S445= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S444)
	S446= ICache.Out=>ICacheReg.In                              Premise(F202)
	S447= ICache.Hit=>ICacheHitReg.In                           Premise(F203)
	S448= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S445,S447)
	S449= IMMUHitReg.Out=>CU.IMemHit                            Premise(F204)
	S450= CU.IMemHit=IMMUHit(pid,addr)                          Path(S413,S449)
	S451= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F205)
	S452= CU.ICacheHit=ICacheHit(addr)                          Path(S416,S451)
	S453= IAddrReg.Out=>IMem.RAddr                              Premise(F206)
	S454= IMem.RAddr={pid,addr}                                 Path(S410,S453)
	S455= IMem.Out={19,BT,BA,BB,898}                            IMem-Read(S454,S388)
	S456= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S454,S388)
	S457= IMem.Out=>IRMux.MemData                               Premise(F207)
	S458= IRMux.MemData={19,BT,BA,BB,898}                       Path(S455,S457)
	S459= IRMux.Out={19,BT,BA,BB,898}                           IRMux-Select(S458)
	S460= ICacheReg.Out=>IRMux.CacheData                        Premise(F208)
	S461= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F209)
	S462= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S413,S461)
	S463= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F210)
	S464= IRMux.CacheSel=ICacheHit(addr)                        Path(S416,S463)
	S465= IRMux.Out=>IR.In                                      Premise(F211)
	S466= IR.In={19,BT,BA,BB,898}                               Path(S459,S465)
	S467= IMem.MEM8WordOut=>ICache.WData                        Premise(F212)
	S468= ICache.WData=IMemGet8Word({pid,addr})                 Path(S456,S467)
	S469= PC.Out=>ICache.IEA                                    Premise(F213)
	S470= IR.Out0_5=>CU.Op                                      Premise(F214)
	S471= CU.Op=19                                              Path(S419,S470)
	S472= IR.Out11_15=>CRRegs.RBitReg1                          Premise(F215)
	S473= CRRegs.RBitReg1=BA                                    Path(S421,S472)
	S474= CRRegs.RBitdata1=a                                    CRRegs-Read(S473,S393)
	S475= IR.Out16_20=>CRRegs.RBitReg2                          Premise(F216)
	S476= CRRegs.RBitReg2=BB                                    Path(S422,S475)
	S477= CRRegs.RBitdata2=b                                    CRRegs-Read(S476,S394)
	S478= IR.Out21_31=>CU.IRFunc                                Premise(F217)
	S479= CU.IRFunc=898                                         Path(S423,S478)
	S480= CU.Func=alu_or                                        CU(S471,S479)
	S481= CRRegs.RBitdata1=>A1bit.In                            Premise(F218)
	S482= A1bit.In=a                                            Path(S474,S481)
	S483= CRRegs.RBitdata2=>B1bit.In                            Premise(F219)
	S484= B1bit.In=b                                            Path(S477,S483)
	S485= A1bit.Out=>ALU1bit.A                                  Premise(F220)
	S486= ALU1bit.A=a                                           Path(S424,S485)
	S487= B1bit.Out=>ALU1bit.B                                  Premise(F221)
	S488= ALU1bit.B=b                                           Path(S427,S487)
	S489= CU.Func=>ALU1bit.Func                                 Premise(F222)
	S490= ALU1bit.Func=alu_or                                   Path(S480,S489)
	S491= ALU1bit.Out=a|b                                       ALU1bit(S486,S488)
	S492= ALU1bit.CMP=Compare0(a|b)                             ALU1bit(S486,S488)
	S493= ALU1bit.OV=OverFlow(a|b)                              ALU1bit(S486,S488)
	S494= ALU1bit.CA=Carry(a|b)                                 ALU1bit(S486,S488)
	S495= ALU1bit.Out=>ALU1bitOut.In                            Premise(F223)
	S496= ALU1bitOut.In=a|b                                     Path(S491,S495)
	S497= IR.Out6_10=>CRRegs.W1bitReg                           Premise(F224)
	S498= CRRegs.W1bitReg=BT                                    Path(S420,S497)
	S499= ALU1bitOut.Out=>CRRegs.W1bitData                      Premise(F225)
	S500= CRRegs.W1bitData=a|b                                  Path(S430,S499)
	S501= CtrlPIDReg=0                                          Premise(F226)
	S502= [PIDReg]=pid                                          PIDReg-Hold(S372,S501)
	S503= CtrlIMMU=0                                            Premise(F227)
	S504= CtrlPC=0                                              Premise(F228)
	S505= CtrlPCInc=0                                           Premise(F229)
	S506= PC[CIA]=addr                                          PC-Hold(S376,S505)
	S507= PC[Out]=addr+4                                        PC-Hold(S377,S504,S505)
	S508= CtrlIAddrReg=0                                        Premise(F230)
	S509= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S379,S508)
	S510= CtrlIMMUHitReg=0                                      Premise(F231)
	S511= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S381,S510)
	S512= CtrlICache=0                                          Premise(F232)
	S513= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S383,S512)
	S514= CtrlICacheReg=0                                       Premise(F233)
	S515= CtrlICacheHitReg=0                                    Premise(F234)
	S516= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S386,S515)
	S517= CtrlIMem=0                                            Premise(F235)
	S518= IMem[{pid,addr}]={19,BT,BA,BB,898}                    IMem-Hold(S388,S517)
	S519= CtrlIRMux=0                                           Premise(F236)
	S520= CtrlIR=0                                              Premise(F237)
	S521= [IR]={19,BT,BA,BB,898}                                IR-Hold(S391,S520)
	S522= CtrlCRRegs=0                                          Premise(F238)
	S523= CRRegs[BA]=a                                          CRRegs-Hold(S393,S522)
	S524= CRRegs[BB]=b                                          CRRegs-Hold(S394,S522)
	S525= CtrlCRRegsCR0=0                                       Premise(F239)
	S526= CtrlCRRegsW4bitRegs=0                                 Premise(F240)
	S527= CtrlCRRegsW1bitRegs=0                                 Premise(F241)
	S528= CtrlA1bit=0                                           Premise(F242)
	S529= [A1bit]=a                                             A1bit-Hold(S399,S528)
	S530= CtrlB1bit=0                                           Premise(F243)
	S531= [B1bit]=b                                             B1bit-Hold(S401,S530)
	S532= CtrlALU1bitOut=0                                      Premise(F244)
	S533= [ALU1bitOut]=a|b                                      ALU1bitOut-Hold(S403,S532)

DMMU1	S534= PIDReg.Out=pid                                        PIDReg-Out(S502)
	S535= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S502)
	S536= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S502)
	S537= PC.CIA=addr                                           PC-Out(S506)
	S538= PC.CIA31_28=addr[31:28]                               PC-Out(S506)
	S539= PC.Out=addr+4                                         PC-Out(S507)
	S540= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S509)
	S541= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S509)
	S542= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S509)
	S543= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S511)
	S544= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S511)
	S545= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S511)
	S546= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S516)
	S547= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S516)
	S548= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S516)
	S549= IR.Out0_5=19                                          IR-Out(S521)
	S550= IR.Out6_10=BT                                         IR-Out(S521)
	S551= IR.Out11_15=BA                                        IR-Out(S521)
	S552= IR.Out16_20=BB                                        IR-Out(S521)
	S553= IR.Out21_31=898                                       IR-Out(S521)
	S554= A1bit.Out=a                                           A1bit-Out(S529)
	S555= A1bit.Out26_31=a[26:31]                               A1bit-Out(S529)
	S556= A1bit.Out30_31=a[30:31]                               A1bit-Out(S529)
	S557= B1bit.Out=b                                           B1bit-Out(S531)
	S558= B1bit.Out26_31=b[26:31]                               B1bit-Out(S531)
	S559= B1bit.Out30_31=b[30:31]                               B1bit-Out(S531)
	S560= ALU1bitOut.Out=a|b                                    ALU1bitOut-Out(S533)
	S561= ALU1bitOut.Out26_31=a|b[26:31]                        ALU1bitOut-Out(S533)
	S562= ALU1bitOut.Out30_31=a|b[30:31]                        ALU1bitOut-Out(S533)
	S563= PIDReg.Out=>IMMU.PID                                  Premise(F245)
	S564= IMMU.PID=pid                                          Path(S534,S563)
	S565= PC.Out=>IMMU.IEA                                      Premise(F246)
	S566= IMMU.IEA=addr+4                                       Path(S539,S565)
	S567= IMMU.Addr={pid,addr+4}                                IMMU-Search(S564,S566)
	S568= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S564,S566)
	S569= IMMU.Addr=>IAddrReg.In                                Premise(F247)
	S570= IAddrReg.In={pid,addr+4}                              Path(S567,S569)
	S571= IMMU.Hit=>IMMUHitReg.In                               Premise(F248)
	S572= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S568,S571)
	S573= PC.Out=>ICache.IEA                                    Premise(F249)
	S574= ICache.IEA=addr+4                                     Path(S539,S573)
	S575= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S574)
	S576= ICache.Out=>ICacheReg.In                              Premise(F250)
	S577= ICache.Hit=>ICacheHitReg.In                           Premise(F251)
	S578= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S575,S577)
	S579= IMMUHitReg.Out=>CU.IMemHit                            Premise(F252)
	S580= CU.IMemHit=IMMUHit(pid,addr)                          Path(S543,S579)
	S581= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F253)
	S582= CU.ICacheHit=ICacheHit(addr)                          Path(S546,S581)
	S583= IAddrReg.Out=>IMem.RAddr                              Premise(F254)
	S584= IMem.RAddr={pid,addr}                                 Path(S540,S583)
	S585= IMem.Out={19,BT,BA,BB,898}                            IMem-Read(S584,S518)
	S586= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S584,S518)
	S587= IMem.Out=>IRMux.MemData                               Premise(F255)
	S588= IRMux.MemData={19,BT,BA,BB,898}                       Path(S585,S587)
	S589= IRMux.Out={19,BT,BA,BB,898}                           IRMux-Select(S588)
	S590= ICacheReg.Out=>IRMux.CacheData                        Premise(F256)
	S591= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F257)
	S592= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S543,S591)
	S593= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F258)
	S594= IRMux.CacheSel=ICacheHit(addr)                        Path(S546,S593)
	S595= IRMux.Out=>IR.In                                      Premise(F259)
	S596= IR.In={19,BT,BA,BB,898}                               Path(S589,S595)
	S597= IMem.MEM8WordOut=>ICache.WData                        Premise(F260)
	S598= ICache.WData=IMemGet8Word({pid,addr})                 Path(S586,S597)
	S599= PC.Out=>ICache.IEA                                    Premise(F261)
	S600= IR.Out0_5=>CU.Op                                      Premise(F262)
	S601= CU.Op=19                                              Path(S549,S600)
	S602= IR.Out11_15=>CRRegs.RBitReg1                          Premise(F263)
	S603= CRRegs.RBitReg1=BA                                    Path(S551,S602)
	S604= CRRegs.RBitdata1=a                                    CRRegs-Read(S603,S523)
	S605= IR.Out16_20=>CRRegs.RBitReg2                          Premise(F264)
	S606= CRRegs.RBitReg2=BB                                    Path(S552,S605)
	S607= CRRegs.RBitdata2=b                                    CRRegs-Read(S606,S524)
	S608= IR.Out21_31=>CU.IRFunc                                Premise(F265)
	S609= CU.IRFunc=898                                         Path(S553,S608)
	S610= CU.Func=alu_or                                        CU(S601,S609)
	S611= CRRegs.RBitdata1=>A1bit.In                            Premise(F266)
	S612= A1bit.In=a                                            Path(S604,S611)
	S613= CRRegs.RBitdata2=>B1bit.In                            Premise(F267)
	S614= B1bit.In=b                                            Path(S607,S613)
	S615= A1bit.Out=>ALU1bit.A                                  Premise(F268)
	S616= ALU1bit.A=a                                           Path(S554,S615)
	S617= B1bit.Out=>ALU1bit.B                                  Premise(F269)
	S618= ALU1bit.B=b                                           Path(S557,S617)
	S619= CU.Func=>ALU1bit.Func                                 Premise(F270)
	S620= ALU1bit.Func=alu_or                                   Path(S610,S619)
	S621= ALU1bit.Out=a|b                                       ALU1bit(S616,S618)
	S622= ALU1bit.CMP=Compare0(a|b)                             ALU1bit(S616,S618)
	S623= ALU1bit.OV=OverFlow(a|b)                              ALU1bit(S616,S618)
	S624= ALU1bit.CA=Carry(a|b)                                 ALU1bit(S616,S618)
	S625= ALU1bit.Out=>ALU1bitOut.In                            Premise(F271)
	S626= ALU1bitOut.In=a|b                                     Path(S621,S625)
	S627= IR.Out6_10=>CRRegs.W1bitReg                           Premise(F272)
	S628= CRRegs.W1bitReg=BT                                    Path(S550,S627)
	S629= ALU1bitOut.Out=>CRRegs.W1bitData                      Premise(F273)
	S630= CRRegs.W1bitData=a|b                                  Path(S560,S629)
	S631= CtrlPIDReg=0                                          Premise(F274)
	S632= [PIDReg]=pid                                          PIDReg-Hold(S502,S631)
	S633= CtrlIMMU=0                                            Premise(F275)
	S634= CtrlPC=0                                              Premise(F276)
	S635= CtrlPCInc=0                                           Premise(F277)
	S636= PC[CIA]=addr                                          PC-Hold(S506,S635)
	S637= PC[Out]=addr+4                                        PC-Hold(S507,S634,S635)
	S638= CtrlIAddrReg=0                                        Premise(F278)
	S639= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S509,S638)
	S640= CtrlIMMUHitReg=0                                      Premise(F279)
	S641= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S511,S640)
	S642= CtrlICache=0                                          Premise(F280)
	S643= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S513,S642)
	S644= CtrlICacheReg=0                                       Premise(F281)
	S645= CtrlICacheHitReg=0                                    Premise(F282)
	S646= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S516,S645)
	S647= CtrlIMem=0                                            Premise(F283)
	S648= IMem[{pid,addr}]={19,BT,BA,BB,898}                    IMem-Hold(S518,S647)
	S649= CtrlIRMux=0                                           Premise(F284)
	S650= CtrlIR=0                                              Premise(F285)
	S651= [IR]={19,BT,BA,BB,898}                                IR-Hold(S521,S650)
	S652= CtrlCRRegs=0                                          Premise(F286)
	S653= CRRegs[BA]=a                                          CRRegs-Hold(S523,S652)
	S654= CRRegs[BB]=b                                          CRRegs-Hold(S524,S652)
	S655= CtrlCRRegsCR0=0                                       Premise(F287)
	S656= CtrlCRRegsW4bitRegs=0                                 Premise(F288)
	S657= CtrlCRRegsW1bitRegs=0                                 Premise(F289)
	S658= CtrlA1bit=0                                           Premise(F290)
	S659= [A1bit]=a                                             A1bit-Hold(S529,S658)
	S660= CtrlB1bit=0                                           Premise(F291)
	S661= [B1bit]=b                                             B1bit-Hold(S531,S660)
	S662= CtrlALU1bitOut=0                                      Premise(F292)
	S663= [ALU1bitOut]=a|b                                      ALU1bitOut-Hold(S533,S662)

DMMU2	S664= PIDReg.Out=pid                                        PIDReg-Out(S632)
	S665= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S632)
	S666= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S632)
	S667= PC.CIA=addr                                           PC-Out(S636)
	S668= PC.CIA31_28=addr[31:28]                               PC-Out(S636)
	S669= PC.Out=addr+4                                         PC-Out(S637)
	S670= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S639)
	S671= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S639)
	S672= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S639)
	S673= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S641)
	S674= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S641)
	S675= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S641)
	S676= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S646)
	S677= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S646)
	S678= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S646)
	S679= IR.Out0_5=19                                          IR-Out(S651)
	S680= IR.Out6_10=BT                                         IR-Out(S651)
	S681= IR.Out11_15=BA                                        IR-Out(S651)
	S682= IR.Out16_20=BB                                        IR-Out(S651)
	S683= IR.Out21_31=898                                       IR-Out(S651)
	S684= A1bit.Out=a                                           A1bit-Out(S659)
	S685= A1bit.Out26_31=a[26:31]                               A1bit-Out(S659)
	S686= A1bit.Out30_31=a[30:31]                               A1bit-Out(S659)
	S687= B1bit.Out=b                                           B1bit-Out(S661)
	S688= B1bit.Out26_31=b[26:31]                               B1bit-Out(S661)
	S689= B1bit.Out30_31=b[30:31]                               B1bit-Out(S661)
	S690= ALU1bitOut.Out=a|b                                    ALU1bitOut-Out(S663)
	S691= ALU1bitOut.Out26_31=a|b[26:31]                        ALU1bitOut-Out(S663)
	S692= ALU1bitOut.Out30_31=a|b[30:31]                        ALU1bitOut-Out(S663)
	S693= PIDReg.Out=>IMMU.PID                                  Premise(F293)
	S694= IMMU.PID=pid                                          Path(S664,S693)
	S695= PC.Out=>IMMU.IEA                                      Premise(F294)
	S696= IMMU.IEA=addr+4                                       Path(S669,S695)
	S697= IMMU.Addr={pid,addr+4}                                IMMU-Search(S694,S696)
	S698= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S694,S696)
	S699= IMMU.Addr=>IAddrReg.In                                Premise(F295)
	S700= IAddrReg.In={pid,addr+4}                              Path(S697,S699)
	S701= IMMU.Hit=>IMMUHitReg.In                               Premise(F296)
	S702= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S698,S701)
	S703= PC.Out=>ICache.IEA                                    Premise(F297)
	S704= ICache.IEA=addr+4                                     Path(S669,S703)
	S705= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S704)
	S706= ICache.Out=>ICacheReg.In                              Premise(F298)
	S707= ICache.Hit=>ICacheHitReg.In                           Premise(F299)
	S708= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S705,S707)
	S709= IMMUHitReg.Out=>CU.IMemHit                            Premise(F300)
	S710= CU.IMemHit=IMMUHit(pid,addr)                          Path(S673,S709)
	S711= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F301)
	S712= CU.ICacheHit=ICacheHit(addr)                          Path(S676,S711)
	S713= IAddrReg.Out=>IMem.RAddr                              Premise(F302)
	S714= IMem.RAddr={pid,addr}                                 Path(S670,S713)
	S715= IMem.Out={19,BT,BA,BB,898}                            IMem-Read(S714,S648)
	S716= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S714,S648)
	S717= IMem.Out=>IRMux.MemData                               Premise(F303)
	S718= IRMux.MemData={19,BT,BA,BB,898}                       Path(S715,S717)
	S719= IRMux.Out={19,BT,BA,BB,898}                           IRMux-Select(S718)
	S720= ICacheReg.Out=>IRMux.CacheData                        Premise(F304)
	S721= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F305)
	S722= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S673,S721)
	S723= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F306)
	S724= IRMux.CacheSel=ICacheHit(addr)                        Path(S676,S723)
	S725= IRMux.Out=>IR.In                                      Premise(F307)
	S726= IR.In={19,BT,BA,BB,898}                               Path(S719,S725)
	S727= IMem.MEM8WordOut=>ICache.WData                        Premise(F308)
	S728= ICache.WData=IMemGet8Word({pid,addr})                 Path(S716,S727)
	S729= PC.Out=>ICache.IEA                                    Premise(F309)
	S730= IR.Out0_5=>CU.Op                                      Premise(F310)
	S731= CU.Op=19                                              Path(S679,S730)
	S732= IR.Out11_15=>CRRegs.RBitReg1                          Premise(F311)
	S733= CRRegs.RBitReg1=BA                                    Path(S681,S732)
	S734= CRRegs.RBitdata1=a                                    CRRegs-Read(S733,S653)
	S735= IR.Out16_20=>CRRegs.RBitReg2                          Premise(F312)
	S736= CRRegs.RBitReg2=BB                                    Path(S682,S735)
	S737= CRRegs.RBitdata2=b                                    CRRegs-Read(S736,S654)
	S738= IR.Out21_31=>CU.IRFunc                                Premise(F313)
	S739= CU.IRFunc=898                                         Path(S683,S738)
	S740= CU.Func=alu_or                                        CU(S731,S739)
	S741= CRRegs.RBitdata1=>A1bit.In                            Premise(F314)
	S742= A1bit.In=a                                            Path(S734,S741)
	S743= CRRegs.RBitdata2=>B1bit.In                            Premise(F315)
	S744= B1bit.In=b                                            Path(S737,S743)
	S745= A1bit.Out=>ALU1bit.A                                  Premise(F316)
	S746= ALU1bit.A=a                                           Path(S684,S745)
	S747= B1bit.Out=>ALU1bit.B                                  Premise(F317)
	S748= ALU1bit.B=b                                           Path(S687,S747)
	S749= CU.Func=>ALU1bit.Func                                 Premise(F318)
	S750= ALU1bit.Func=alu_or                                   Path(S740,S749)
	S751= ALU1bit.Out=a|b                                       ALU1bit(S746,S748)
	S752= ALU1bit.CMP=Compare0(a|b)                             ALU1bit(S746,S748)
	S753= ALU1bit.OV=OverFlow(a|b)                              ALU1bit(S746,S748)
	S754= ALU1bit.CA=Carry(a|b)                                 ALU1bit(S746,S748)
	S755= ALU1bit.Out=>ALU1bitOut.In                            Premise(F319)
	S756= ALU1bitOut.In=a|b                                     Path(S751,S755)
	S757= IR.Out6_10=>CRRegs.W1bitReg                           Premise(F320)
	S758= CRRegs.W1bitReg=BT                                    Path(S680,S757)
	S759= ALU1bitOut.Out=>CRRegs.W1bitData                      Premise(F321)
	S760= CRRegs.W1bitData=a|b                                  Path(S690,S759)
	S761= CtrlPIDReg=0                                          Premise(F322)
	S762= [PIDReg]=pid                                          PIDReg-Hold(S632,S761)
	S763= CtrlIMMU=0                                            Premise(F323)
	S764= CtrlPC=0                                              Premise(F324)
	S765= CtrlPCInc=0                                           Premise(F325)
	S766= PC[CIA]=addr                                          PC-Hold(S636,S765)
	S767= PC[Out]=addr+4                                        PC-Hold(S637,S764,S765)
	S768= CtrlIAddrReg=0                                        Premise(F326)
	S769= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S639,S768)
	S770= CtrlIMMUHitReg=0                                      Premise(F327)
	S771= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S641,S770)
	S772= CtrlICache=0                                          Premise(F328)
	S773= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S643,S772)
	S774= CtrlICacheReg=0                                       Premise(F329)
	S775= CtrlICacheHitReg=0                                    Premise(F330)
	S776= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S646,S775)
	S777= CtrlIMem=0                                            Premise(F331)
	S778= IMem[{pid,addr}]={19,BT,BA,BB,898}                    IMem-Hold(S648,S777)
	S779= CtrlIRMux=0                                           Premise(F332)
	S780= CtrlIR=0                                              Premise(F333)
	S781= [IR]={19,BT,BA,BB,898}                                IR-Hold(S651,S780)
	S782= CtrlCRRegs=0                                          Premise(F334)
	S783= CRRegs[BA]=a                                          CRRegs-Hold(S653,S782)
	S784= CRRegs[BB]=b                                          CRRegs-Hold(S654,S782)
	S785= CtrlCRRegsCR0=0                                       Premise(F335)
	S786= CtrlCRRegsW4bitRegs=0                                 Premise(F336)
	S787= CtrlCRRegsW1bitRegs=0                                 Premise(F337)
	S788= CtrlA1bit=0                                           Premise(F338)
	S789= [A1bit]=a                                             A1bit-Hold(S659,S788)
	S790= CtrlB1bit=0                                           Premise(F339)
	S791= [B1bit]=b                                             B1bit-Hold(S661,S790)
	S792= CtrlALU1bitOut=0                                      Premise(F340)
	S793= [ALU1bitOut]=a|b                                      ALU1bitOut-Hold(S663,S792)

WB	S794= PIDReg.Out=pid                                        PIDReg-Out(S762)
	S795= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S762)
	S796= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S762)
	S797= PC.CIA=addr                                           PC-Out(S766)
	S798= PC.CIA31_28=addr[31:28]                               PC-Out(S766)
	S799= PC.Out=addr+4                                         PC-Out(S767)
	S800= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S769)
	S801= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S769)
	S802= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S769)
	S803= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S771)
	S804= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S771)
	S805= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S771)
	S806= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S776)
	S807= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S776)
	S808= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S776)
	S809= IR.Out0_5=19                                          IR-Out(S781)
	S810= IR.Out6_10=BT                                         IR-Out(S781)
	S811= IR.Out11_15=BA                                        IR-Out(S781)
	S812= IR.Out16_20=BB                                        IR-Out(S781)
	S813= IR.Out21_31=898                                       IR-Out(S781)
	S814= A1bit.Out=a                                           A1bit-Out(S789)
	S815= A1bit.Out26_31=a[26:31]                               A1bit-Out(S789)
	S816= A1bit.Out30_31=a[30:31]                               A1bit-Out(S789)
	S817= B1bit.Out=b                                           B1bit-Out(S791)
	S818= B1bit.Out26_31=b[26:31]                               B1bit-Out(S791)
	S819= B1bit.Out30_31=b[30:31]                               B1bit-Out(S791)
	S820= ALU1bitOut.Out=a|b                                    ALU1bitOut-Out(S793)
	S821= ALU1bitOut.Out26_31=a|b[26:31]                        ALU1bitOut-Out(S793)
	S822= ALU1bitOut.Out30_31=a|b[30:31]                        ALU1bitOut-Out(S793)
	S823= PIDReg.Out=>IMMU.PID                                  Premise(F341)
	S824= IMMU.PID=pid                                          Path(S794,S823)
	S825= PC.Out=>IMMU.IEA                                      Premise(F342)
	S826= IMMU.IEA=addr+4                                       Path(S799,S825)
	S827= IMMU.Addr={pid,addr+4}                                IMMU-Search(S824,S826)
	S828= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S824,S826)
	S829= IMMU.Addr=>IAddrReg.In                                Premise(F343)
	S830= IAddrReg.In={pid,addr+4}                              Path(S827,S829)
	S831= IMMU.Hit=>IMMUHitReg.In                               Premise(F344)
	S832= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S828,S831)
	S833= PC.Out=>ICache.IEA                                    Premise(F345)
	S834= ICache.IEA=addr+4                                     Path(S799,S833)
	S835= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S834)
	S836= ICache.Out=>ICacheReg.In                              Premise(F346)
	S837= ICache.Hit=>ICacheHitReg.In                           Premise(F347)
	S838= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S835,S837)
	S839= IMMUHitReg.Out=>CU.IMemHit                            Premise(F348)
	S840= CU.IMemHit=IMMUHit(pid,addr)                          Path(S803,S839)
	S841= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F349)
	S842= CU.ICacheHit=ICacheHit(addr)                          Path(S806,S841)
	S843= IAddrReg.Out=>IMem.RAddr                              Premise(F350)
	S844= IMem.RAddr={pid,addr}                                 Path(S800,S843)
	S845= IMem.Out={19,BT,BA,BB,898}                            IMem-Read(S844,S778)
	S846= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S844,S778)
	S847= IMem.Out=>IRMux.MemData                               Premise(F351)
	S848= IRMux.MemData={19,BT,BA,BB,898}                       Path(S845,S847)
	S849= IRMux.Out={19,BT,BA,BB,898}                           IRMux-Select(S848)
	S850= ICacheReg.Out=>IRMux.CacheData                        Premise(F352)
	S851= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F353)
	S852= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S803,S851)
	S853= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F354)
	S854= IRMux.CacheSel=ICacheHit(addr)                        Path(S806,S853)
	S855= IRMux.Out=>IR.In                                      Premise(F355)
	S856= IR.In={19,BT,BA,BB,898}                               Path(S849,S855)
	S857= IMem.MEM8WordOut=>ICache.WData                        Premise(F356)
	S858= ICache.WData=IMemGet8Word({pid,addr})                 Path(S846,S857)
	S859= PC.Out=>ICache.IEA                                    Premise(F357)
	S860= IR.Out0_5=>CU.Op                                      Premise(F358)
	S861= CU.Op=19                                              Path(S809,S860)
	S862= IR.Out11_15=>CRRegs.RBitReg1                          Premise(F359)
	S863= CRRegs.RBitReg1=BA                                    Path(S811,S862)
	S864= CRRegs.RBitdata1=a                                    CRRegs-Read(S863,S783)
	S865= IR.Out16_20=>CRRegs.RBitReg2                          Premise(F360)
	S866= CRRegs.RBitReg2=BB                                    Path(S812,S865)
	S867= CRRegs.RBitdata2=b                                    CRRegs-Read(S866,S784)
	S868= IR.Out21_31=>CU.IRFunc                                Premise(F361)
	S869= CU.IRFunc=898                                         Path(S813,S868)
	S870= CU.Func=alu_or                                        CU(S861,S869)
	S871= CRRegs.RBitdata1=>A1bit.In                            Premise(F362)
	S872= A1bit.In=a                                            Path(S864,S871)
	S873= CRRegs.RBitdata2=>B1bit.In                            Premise(F363)
	S874= B1bit.In=b                                            Path(S867,S873)
	S875= A1bit.Out=>ALU1bit.A                                  Premise(F364)
	S876= ALU1bit.A=a                                           Path(S814,S875)
	S877= B1bit.Out=>ALU1bit.B                                  Premise(F365)
	S878= ALU1bit.B=b                                           Path(S817,S877)
	S879= CU.Func=>ALU1bit.Func                                 Premise(F366)
	S880= ALU1bit.Func=alu_or                                   Path(S870,S879)
	S881= ALU1bit.Out=a|b                                       ALU1bit(S876,S878)
	S882= ALU1bit.CMP=Compare0(a|b)                             ALU1bit(S876,S878)
	S883= ALU1bit.OV=OverFlow(a|b)                              ALU1bit(S876,S878)
	S884= ALU1bit.CA=Carry(a|b)                                 ALU1bit(S876,S878)
	S885= ALU1bit.Out=>ALU1bitOut.In                            Premise(F367)
	S886= ALU1bitOut.In=a|b                                     Path(S881,S885)
	S887= IR.Out6_10=>CRRegs.W1bitReg                           Premise(F368)
	S888= CRRegs.W1bitReg=BT                                    Path(S810,S887)
	S889= ALU1bitOut.Out=>CRRegs.W1bitData                      Premise(F369)
	S890= CRRegs.W1bitData=a|b                                  Path(S820,S889)
	S891= CtrlPIDReg=0                                          Premise(F370)
	S892= [PIDReg]=pid                                          PIDReg-Hold(S762,S891)
	S893= CtrlIMMU=0                                            Premise(F371)
	S894= CtrlPC=0                                              Premise(F372)
	S895= CtrlPCInc=0                                           Premise(F373)
	S896= PC[CIA]=addr                                          PC-Hold(S766,S895)
	S897= PC[Out]=addr+4                                        PC-Hold(S767,S894,S895)
	S898= CtrlIAddrReg=0                                        Premise(F374)
	S899= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S769,S898)
	S900= CtrlIMMUHitReg=0                                      Premise(F375)
	S901= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S771,S900)
	S902= CtrlICache=0                                          Premise(F376)
	S903= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S773,S902)
	S904= CtrlICacheReg=0                                       Premise(F377)
	S905= CtrlICacheHitReg=0                                    Premise(F378)
	S906= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S776,S905)
	S907= CtrlIMem=0                                            Premise(F379)
	S908= IMem[{pid,addr}]={19,BT,BA,BB,898}                    IMem-Hold(S778,S907)
	S909= CtrlIRMux=0                                           Premise(F380)
	S910= CtrlIR=0                                              Premise(F381)
	S911= [IR]={19,BT,BA,BB,898}                                IR-Hold(S781,S910)
	S912= CtrlCRRegs=0                                          Premise(F382)
	S913= CRRegs[BA]=a                                          CRRegs-Hold(S783,S912)
	S914= CRRegs[BB]=b                                          CRRegs-Hold(S784,S912)
	S915= CtrlCRRegsCR0=0                                       Premise(F383)
	S916= CtrlCRRegsW4bitRegs=0                                 Premise(F384)
	S917= CtrlCRRegsW1bitRegs=1                                 Premise(F385)
	S918= CRRegs[BT]=a|b                                        CRRegs-Write(S888,S890,S917)
	S919= CtrlA1bit=0                                           Premise(F386)
	S920= [A1bit]=a                                             A1bit-Hold(S789,S919)
	S921= CtrlB1bit=0                                           Premise(F387)
	S922= [B1bit]=b                                             B1bit-Hold(S791,S921)
	S923= CtrlALU1bitOut=0                                      Premise(F388)
	S924= [ALU1bitOut]=a|b                                      ALU1bitOut-Hold(S793,S923)

POST	S892= [PIDReg]=pid                                          PIDReg-Hold(S762,S891)
	S896= PC[CIA]=addr                                          PC-Hold(S766,S895)
	S897= PC[Out]=addr+4                                        PC-Hold(S767,S894,S895)
	S899= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S769,S898)
	S901= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S771,S900)
	S903= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S773,S902)
	S906= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S776,S905)
	S908= IMem[{pid,addr}]={19,BT,BA,BB,898}                    IMem-Hold(S778,S907)
	S911= [IR]={19,BT,BA,BB,898}                                IR-Hold(S781,S910)
	S913= CRRegs[BA]=a                                          CRRegs-Hold(S783,S912)
	S914= CRRegs[BB]=b                                          CRRegs-Hold(S784,S912)
	S918= CRRegs[BT]=a|b                                        CRRegs-Write(S888,S890,S917)
	S920= [A1bit]=a                                             A1bit-Hold(S789,S919)
	S922= [B1bit]=b                                             B1bit-Hold(S791,S921)
	S924= [ALU1bitOut]=a|b                                      ALU1bitOut-Hold(S793,S923)

