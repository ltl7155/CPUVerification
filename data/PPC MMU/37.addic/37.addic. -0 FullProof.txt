
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={13,rT,rA,SIMM}                        Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[SO]=so                                              Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S7= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S8= PC.Out=addr                                             PC-Out(S1)
	S9= XER.SOOut=so                                            XER-SO-Out(S4)
	S10= PIDReg.Out=>IMMU.PID                                   Premise(F5)
	S11= IMMU.PID=pid                                           Path(S5,S10)
	S12= PC.Out=>IMMU.IEA                                       Premise(F6)
	S13= IMMU.IEA=addr                                          Path(S8,S12)
	S14= IMMU.Addr={pid,addr}                                   IMMU-Search(S11,S13)
	S15= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S11,S13)
	S16= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S17= IAddrReg.In={pid,addr}                                 Path(S14,S16)
	S18= IMMU.Hit=>IMMUHitReg.In                                Premise(F8)
	S19= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S15,S18)
	S20= PC.Out=>ICache.IEA                                     Premise(F9)
	S21= ICache.IEA=addr                                        Path(S8,S20)
	S22= ICache.Hit=ICacheHit(addr)                             ICache-Search(S21)
	S23= ICache.Out=>ICacheReg.In                               Premise(F10)
	S24= ICache.Hit=>ICacheHitReg.In                            Premise(F11)
	S25= ICacheHitReg.In=ICacheHit(addr)                        Path(S22,S24)
	S26= IMMUHitReg.Out=>CU.IMemHit                             Premise(F12)
	S27= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F13)
	S28= IAddrReg.Out=>IMem.RAddr                               Premise(F14)
	S29= IMem.Out=>IRMux.MemData                                Premise(F15)
	S30= ICacheReg.Out=>IRMux.CacheData                         Premise(F16)
	S31= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F17)
	S32= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F18)
	S33= IRMux.Out=>IR.In                                       Premise(F19)
	S34= IMem.MEM8WordOut=>ICache.WData                         Premise(F20)
	S35= PC.Out=>ICache.IEA                                     Premise(F21)
	S36= IR.Out0_5=>CU.Op                                       Premise(F22)
	S37= IR.Out11_15=>GPRegs.RReg1                              Premise(F23)
	S38= IR.Out16_31=>IMMEXT.In                                 Premise(F24)
	S39= GPRegs.Rdata1=>A.In                                    Premise(F25)
	S40= IMMEXT.Out=>B.In                                       Premise(F26)
	S41= A.Out=>ALU.A                                           Premise(F27)
	S42= B.Out=>ALU.B                                           Premise(F28)
	S43= CU.Func=>ALU.Func                                      Premise(F29)
	S44= ALU.Out=>ALUOut.In                                     Premise(F30)
	S45= ALU.CMP=>DataCmb.A                                     Premise(F31)
	S46= XER.SOOut=>DataCmb.B                                   Premise(F32)
	S47= DataCmb.B=so                                           Path(S9,S46)
	S48= DataCmb.Out=>DR4bit.In                                 Premise(F33)
	S49= ALU.CA=>CAReg.In                                       Premise(F34)
	S50= IR.Out6_10=>GPRegs.WReg                                Premise(F35)
	S51= ALUOut.Out=>GPRegs.WData                               Premise(F36)
	S52= DR4bit.Out=>CRRegs.CR0In                               Premise(F37)
	S53= CAReg.Out=>XER.CAIn                                    Premise(F38)
	S54= CtrlPIDReg=0                                           Premise(F39)
	S55= [PIDReg]=pid                                           PIDReg-Hold(S0,S54)
	S56= CtrlIMMU=0                                             Premise(F40)
	S57= CtrlPC=0                                               Premise(F41)
	S58= CtrlPCInc=0                                            Premise(F42)
	S59= PC[Out]=addr                                           PC-Hold(S1,S57,S58)
	S60= CtrlIAddrReg=1                                         Premise(F43)
	S61= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S17,S60)
	S62= CtrlIMMUHitReg=1                                       Premise(F44)
	S63= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S19,S62)
	S64= CtrlICache=0                                           Premise(F45)
	S65= CtrlICacheReg=1                                        Premise(F46)
	S66= CtrlICacheHitReg=1                                     Premise(F47)
	S67= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S25,S66)
	S68= CtrlIMem=0                                             Premise(F48)
	S69= IMem[{pid,addr}]={13,rT,rA,SIMM}                       IMem-Hold(S2,S68)
	S70= CtrlIRMux=0                                            Premise(F49)
	S71= CtrlIR=0                                               Premise(F50)
	S72= CtrlGPRegs=0                                           Premise(F51)
	S73= GPRegs[rA]=a                                           GPRegs-Hold(S3,S72)
	S74= CtrlA=0                                                Premise(F52)
	S75= CtrlB=0                                                Premise(F53)
	S76= CtrlALUOut=0                                           Premise(F54)
	S77= CtrlXERSO=0                                            Premise(F55)
	S78= XER[SO]=so                                             XER-SO-Hold(S4,S77)
	S79= CtrlXEROV=0                                            Premise(F56)
	S80= CtrlXERCA=0                                            Premise(F57)
	S81= CtrlDR4bit=0                                           Premise(F58)
	S82= CtrlCAReg=0                                            Premise(F59)
	S83= CtrlCRRegs=0                                           Premise(F60)
	S84= CtrlCRRegsCR0=0                                        Premise(F61)
	S85= CtrlCRRegsW4bitRegs=0                                  Premise(F62)
	S86= CtrlCRRegsW1bitRegs=0                                  Premise(F63)

IMMU	S87= PIDReg.Out=pid                                         PIDReg-Out(S55)
	S88= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S55)
	S89= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S55)
	S90= PC.Out=addr                                            PC-Out(S59)
	S91= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S61)
	S92= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S61)
	S93= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S61)
	S94= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S63)
	S95= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S63)
	S96= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]           IMMUHitReg-Out(S63)
	S97= ICacheHitReg.Out=ICacheHit(addr)                       ICacheHitReg-Out(S67)
	S98= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]           ICacheHitReg-Out(S67)
	S99= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]           ICacheHitReg-Out(S67)
	S100= XER.SOOut=so                                          XER-SO-Out(S78)
	S101= PIDReg.Out=>IMMU.PID                                  Premise(F64)
	S102= IMMU.PID=pid                                          Path(S87,S101)
	S103= PC.Out=>IMMU.IEA                                      Premise(F65)
	S104= IMMU.IEA=addr                                         Path(S90,S103)
	S105= IMMU.Addr={pid,addr}                                  IMMU-Search(S102,S104)
	S106= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S102,S104)
	S107= IMMU.Addr=>IAddrReg.In                                Premise(F66)
	S108= IAddrReg.In={pid,addr}                                Path(S105,S107)
	S109= IMMU.Hit=>IMMUHitReg.In                               Premise(F67)
	S110= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S106,S109)
	S111= PC.Out=>ICache.IEA                                    Premise(F68)
	S112= ICache.IEA=addr                                       Path(S90,S111)
	S113= ICache.Hit=ICacheHit(addr)                            ICache-Search(S112)
	S114= ICache.Out=>ICacheReg.In                              Premise(F69)
	S115= ICache.Hit=>ICacheHitReg.In                           Premise(F70)
	S116= ICacheHitReg.In=ICacheHit(addr)                       Path(S113,S115)
	S117= IMMUHitReg.Out=>CU.IMemHit                            Premise(F71)
	S118= CU.IMemHit=IMMUHit(pid,addr)                          Path(S94,S117)
	S119= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F72)
	S120= CU.ICacheHit=ICacheHit(addr)                          Path(S97,S119)
	S121= IAddrReg.Out=>IMem.RAddr                              Premise(F73)
	S122= IMem.RAddr={pid,addr}                                 Path(S91,S121)
	S123= IMem.Out={13,rT,rA,SIMM}                              IMem-Read(S122,S69)
	S124= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S122,S69)
	S125= IMem.Out=>IRMux.MemData                               Premise(F74)
	S126= IRMux.MemData={13,rT,rA,SIMM}                         Path(S123,S125)
	S127= IRMux.Out={13,rT,rA,SIMM}                             IRMux-Select(S126)
	S128= ICacheReg.Out=>IRMux.CacheData                        Premise(F75)
	S129= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F76)
	S130= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S94,S129)
	S131= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F77)
	S132= IRMux.CacheSel=ICacheHit(addr)                        Path(S97,S131)
	S133= IRMux.Out=>IR.In                                      Premise(F78)
	S134= IR.In={13,rT,rA,SIMM}                                 Path(S127,S133)
	S135= IMem.MEM8WordOut=>ICache.WData                        Premise(F79)
	S136= ICache.WData=IMemGet8Word({pid,addr})                 Path(S124,S135)
	S137= PC.Out=>ICache.IEA                                    Premise(F80)
	S138= IR.Out0_5=>CU.Op                                      Premise(F81)
	S139= IR.Out11_15=>GPRegs.RReg1                             Premise(F82)
	S140= IR.Out16_31=>IMMEXT.In                                Premise(F83)
	S141= GPRegs.Rdata1=>A.In                                   Premise(F84)
	S142= IMMEXT.Out=>B.In                                      Premise(F85)
	S143= A.Out=>ALU.A                                          Premise(F86)
	S144= B.Out=>ALU.B                                          Premise(F87)
	S145= CU.Func=>ALU.Func                                     Premise(F88)
	S146= ALU.Out=>ALUOut.In                                    Premise(F89)
	S147= ALU.CMP=>DataCmb.A                                    Premise(F90)
	S148= XER.SOOut=>DataCmb.B                                  Premise(F91)
	S149= DataCmb.B=so                                          Path(S100,S148)
	S150= DataCmb.Out=>DR4bit.In                                Premise(F92)
	S151= ALU.CA=>CAReg.In                                      Premise(F93)
	S152= IR.Out6_10=>GPRegs.WReg                               Premise(F94)
	S153= ALUOut.Out=>GPRegs.WData                              Premise(F95)
	S154= DR4bit.Out=>CRRegs.CR0In                              Premise(F96)
	S155= CAReg.Out=>XER.CAIn                                   Premise(F97)
	S156= CtrlPIDReg=0                                          Premise(F98)
	S157= [PIDReg]=pid                                          PIDReg-Hold(S55,S156)
	S158= CtrlIMMU=0                                            Premise(F99)
	S159= CtrlPC=0                                              Premise(F100)
	S160= CtrlPCInc=1                                           Premise(F101)
	S161= PC[Out]=addr+4                                        PC-Inc(S59,S159,S160)
	S162= PC[CIA]=addr                                          PC-Inc(S59,S159,S160)
	S163= CtrlIAddrReg=0                                        Premise(F102)
	S164= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S61,S163)
	S165= CtrlIMMUHitReg=0                                      Premise(F103)
	S166= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S63,S165)
	S167= CtrlICache=1                                          Premise(F104)
	S168= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S112,S136,S167)
	S169= CtrlICacheReg=0                                       Premise(F105)
	S170= CtrlICacheHitReg=0                                    Premise(F106)
	S171= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S67,S170)
	S172= CtrlIMem=0                                            Premise(F107)
	S173= IMem[{pid,addr}]={13,rT,rA,SIMM}                      IMem-Hold(S69,S172)
	S174= CtrlIRMux=0                                           Premise(F108)
	S175= CtrlIR=1                                              Premise(F109)
	S176= [IR]={13,rT,rA,SIMM}                                  IR-Write(S134,S175)
	S177= CtrlGPRegs=0                                          Premise(F110)
	S178= GPRegs[rA]=a                                          GPRegs-Hold(S73,S177)
	S179= CtrlA=0                                               Premise(F111)
	S180= CtrlB=0                                               Premise(F112)
	S181= CtrlALUOut=0                                          Premise(F113)
	S182= CtrlXERSO=0                                           Premise(F114)
	S183= XER[SO]=so                                            XER-SO-Hold(S78,S182)
	S184= CtrlXEROV=0                                           Premise(F115)
	S185= CtrlXERCA=0                                           Premise(F116)
	S186= CtrlDR4bit=0                                          Premise(F117)
	S187= CtrlCAReg=0                                           Premise(F118)
	S188= CtrlCRRegs=0                                          Premise(F119)
	S189= CtrlCRRegsCR0=0                                       Premise(F120)
	S190= CtrlCRRegsW4bitRegs=0                                 Premise(F121)
	S191= CtrlCRRegsW1bitRegs=0                                 Premise(F122)

ID	S192= PIDReg.Out=pid                                        PIDReg-Out(S157)
	S193= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S157)
	S194= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S157)
	S195= PC.Out=addr+4                                         PC-Out(S161)
	S196= PC.CIA=addr                                           PC-Out(S162)
	S197= PC.CIA31_28=addr[31:28]                               PC-Out(S162)
	S198= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S164)
	S199= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S164)
	S200= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S164)
	S201= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S166)
	S202= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S166)
	S203= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S166)
	S204= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S171)
	S205= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S171)
	S206= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S171)
	S207= IR.Out0_5=13                                          IR-Out(S176)
	S208= IR.Out6_10=rT                                         IR-Out(S176)
	S209= IR.Out11_15=rA                                        IR-Out(S176)
	S210= IR.Out16_31=SIMM                                      IR-Out(S176)
	S211= XER.SOOut=so                                          XER-SO-Out(S183)
	S212= PIDReg.Out=>IMMU.PID                                  Premise(F123)
	S213= IMMU.PID=pid                                          Path(S192,S212)
	S214= PC.Out=>IMMU.IEA                                      Premise(F124)
	S215= IMMU.IEA=addr+4                                       Path(S195,S214)
	S216= IMMU.Addr={pid,addr+4}                                IMMU-Search(S213,S215)
	S217= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S213,S215)
	S218= IMMU.Addr=>IAddrReg.In                                Premise(F125)
	S219= IAddrReg.In={pid,addr+4}                              Path(S216,S218)
	S220= IMMU.Hit=>IMMUHitReg.In                               Premise(F126)
	S221= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S217,S220)
	S222= PC.Out=>ICache.IEA                                    Premise(F127)
	S223= ICache.IEA=addr+4                                     Path(S195,S222)
	S224= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S223)
	S225= ICache.Out=>ICacheReg.In                              Premise(F128)
	S226= ICache.Hit=>ICacheHitReg.In                           Premise(F129)
	S227= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S224,S226)
	S228= IMMUHitReg.Out=>CU.IMemHit                            Premise(F130)
	S229= CU.IMemHit=IMMUHit(pid,addr)                          Path(S201,S228)
	S230= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F131)
	S231= CU.ICacheHit=ICacheHit(addr)                          Path(S204,S230)
	S232= IAddrReg.Out=>IMem.RAddr                              Premise(F132)
	S233= IMem.RAddr={pid,addr}                                 Path(S198,S232)
	S234= IMem.Out={13,rT,rA,SIMM}                              IMem-Read(S233,S173)
	S235= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S233,S173)
	S236= IMem.Out=>IRMux.MemData                               Premise(F133)
	S237= IRMux.MemData={13,rT,rA,SIMM}                         Path(S234,S236)
	S238= IRMux.Out={13,rT,rA,SIMM}                             IRMux-Select(S237)
	S239= ICacheReg.Out=>IRMux.CacheData                        Premise(F134)
	S240= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F135)
	S241= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S201,S240)
	S242= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F136)
	S243= IRMux.CacheSel=ICacheHit(addr)                        Path(S204,S242)
	S244= IRMux.Out=>IR.In                                      Premise(F137)
	S245= IR.In={13,rT,rA,SIMM}                                 Path(S238,S244)
	S246= IMem.MEM8WordOut=>ICache.WData                        Premise(F138)
	S247= ICache.WData=IMemGet8Word({pid,addr})                 Path(S235,S246)
	S248= PC.Out=>ICache.IEA                                    Premise(F139)
	S249= IR.Out0_5=>CU.Op                                      Premise(F140)
	S250= CU.Op=13                                              Path(S207,S249)
	S251= CU.Func=alu_add                                       CU(S250)
	S252= IR.Out11_15=>GPRegs.RReg1                             Premise(F141)
	S253= GPRegs.RReg1=rA                                       Path(S209,S252)
	S254= GPRegs.Rdata1=a                                       GPRegs-Read(S253,S178)
	S255= IR.Out16_31=>IMMEXT.In                                Premise(F142)
	S256= IMMEXT.In=SIMM                                        Path(S210,S255)
	S257= IMMEXT.Out={16{SIMM[0]},SIMM}                         IMMEXT(S256)
	S258= GPRegs.Rdata1=>A.In                                   Premise(F143)
	S259= A.In=a                                                Path(S254,S258)
	S260= IMMEXT.Out=>B.In                                      Premise(F144)
	S261= B.In={16{SIMM[0]},SIMM}                               Path(S257,S260)
	S262= A.Out=>ALU.A                                          Premise(F145)
	S263= B.Out=>ALU.B                                          Premise(F146)
	S264= CU.Func=>ALU.Func                                     Premise(F147)
	S265= ALU.Func=alu_add                                      Path(S251,S264)
	S266= ALU.Out=>ALUOut.In                                    Premise(F148)
	S267= ALU.CMP=>DataCmb.A                                    Premise(F149)
	S268= XER.SOOut=>DataCmb.B                                  Premise(F150)
	S269= DataCmb.B=so                                          Path(S211,S268)
	S270= DataCmb.Out=>DR4bit.In                                Premise(F151)
	S271= ALU.CA=>CAReg.In                                      Premise(F152)
	S272= IR.Out6_10=>GPRegs.WReg                               Premise(F153)
	S273= GPRegs.WReg=rT                                        Path(S208,S272)
	S274= ALUOut.Out=>GPRegs.WData                              Premise(F154)
	S275= DR4bit.Out=>CRRegs.CR0In                              Premise(F155)
	S276= CAReg.Out=>XER.CAIn                                   Premise(F156)
	S277= CtrlPIDReg=0                                          Premise(F157)
	S278= [PIDReg]=pid                                          PIDReg-Hold(S157,S277)
	S279= CtrlIMMU=0                                            Premise(F158)
	S280= CtrlPC=0                                              Premise(F159)
	S281= CtrlPCInc=0                                           Premise(F160)
	S282= PC[CIA]=addr                                          PC-Hold(S162,S281)
	S283= PC[Out]=addr+4                                        PC-Hold(S161,S280,S281)
	S284= CtrlIAddrReg=0                                        Premise(F161)
	S285= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S164,S284)
	S286= CtrlIMMUHitReg=0                                      Premise(F162)
	S287= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S166,S286)
	S288= CtrlICache=0                                          Premise(F163)
	S289= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S168,S288)
	S290= CtrlICacheReg=0                                       Premise(F164)
	S291= CtrlICacheHitReg=0                                    Premise(F165)
	S292= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S171,S291)
	S293= CtrlIMem=0                                            Premise(F166)
	S294= IMem[{pid,addr}]={13,rT,rA,SIMM}                      IMem-Hold(S173,S293)
	S295= CtrlIRMux=0                                           Premise(F167)
	S296= CtrlIR=0                                              Premise(F168)
	S297= [IR]={13,rT,rA,SIMM}                                  IR-Hold(S176,S296)
	S298= CtrlGPRegs=0                                          Premise(F169)
	S299= GPRegs[rA]=a                                          GPRegs-Hold(S178,S298)
	S300= CtrlA=1                                               Premise(F170)
	S301= [A]=a                                                 A-Write(S259,S300)
	S302= CtrlB=1                                               Premise(F171)
	S303= [B]={16{SIMM[0]},SIMM}                                B-Write(S261,S302)
	S304= CtrlALUOut=0                                          Premise(F172)
	S305= CtrlXERSO=0                                           Premise(F173)
	S306= XER[SO]=so                                            XER-SO-Hold(S183,S305)
	S307= CtrlXEROV=0                                           Premise(F174)
	S308= CtrlXERCA=0                                           Premise(F175)
	S309= CtrlDR4bit=0                                          Premise(F176)
	S310= CtrlCAReg=0                                           Premise(F177)
	S311= CtrlCRRegs=0                                          Premise(F178)
	S312= CtrlCRRegsCR0=0                                       Premise(F179)
	S313= CtrlCRRegsW4bitRegs=0                                 Premise(F180)
	S314= CtrlCRRegsW1bitRegs=0                                 Premise(F181)

EX	S315= PIDReg.Out=pid                                        PIDReg-Out(S278)
	S316= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S278)
	S317= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S278)
	S318= PC.CIA=addr                                           PC-Out(S282)
	S319= PC.CIA31_28=addr[31:28]                               PC-Out(S282)
	S320= PC.Out=addr+4                                         PC-Out(S283)
	S321= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S285)
	S322= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S285)
	S323= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S285)
	S324= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S287)
	S325= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S287)
	S326= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S287)
	S327= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S292)
	S328= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S292)
	S329= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S292)
	S330= IR.Out0_5=13                                          IR-Out(S297)
	S331= IR.Out6_10=rT                                         IR-Out(S297)
	S332= IR.Out11_15=rA                                        IR-Out(S297)
	S333= IR.Out16_31=SIMM                                      IR-Out(S297)
	S334= A.Out=a                                               A-Out(S301)
	S335= A.Out26_31=a[26:31]                                   A-Out(S301)
	S336= A.Out30_31=a[30:31]                                   A-Out(S301)
	S337= B.Out={16{SIMM[0]},SIMM}                              B-Out(S303)
	S338= B.Out26_31={16{SIMM[0]},SIMM}[26:31]                  B-Out(S303)
	S339= B.Out30_31={16{SIMM[0]},SIMM}[30:31]                  B-Out(S303)
	S340= XER.SOOut=so                                          XER-SO-Out(S306)
	S341= PIDReg.Out=>IMMU.PID                                  Premise(F182)
	S342= IMMU.PID=pid                                          Path(S315,S341)
	S343= PC.Out=>IMMU.IEA                                      Premise(F183)
	S344= IMMU.IEA=addr+4                                       Path(S320,S343)
	S345= IMMU.Addr={pid,addr+4}                                IMMU-Search(S342,S344)
	S346= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S342,S344)
	S347= IMMU.Addr=>IAddrReg.In                                Premise(F184)
	S348= IAddrReg.In={pid,addr+4}                              Path(S345,S347)
	S349= IMMU.Hit=>IMMUHitReg.In                               Premise(F185)
	S350= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S346,S349)
	S351= PC.Out=>ICache.IEA                                    Premise(F186)
	S352= ICache.IEA=addr+4                                     Path(S320,S351)
	S353= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S352)
	S354= ICache.Out=>ICacheReg.In                              Premise(F187)
	S355= ICache.Hit=>ICacheHitReg.In                           Premise(F188)
	S356= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S353,S355)
	S357= IMMUHitReg.Out=>CU.IMemHit                            Premise(F189)
	S358= CU.IMemHit=IMMUHit(pid,addr)                          Path(S324,S357)
	S359= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F190)
	S360= CU.ICacheHit=ICacheHit(addr)                          Path(S327,S359)
	S361= IAddrReg.Out=>IMem.RAddr                              Premise(F191)
	S362= IMem.RAddr={pid,addr}                                 Path(S321,S361)
	S363= IMem.Out={13,rT,rA,SIMM}                              IMem-Read(S362,S294)
	S364= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S362,S294)
	S365= IMem.Out=>IRMux.MemData                               Premise(F192)
	S366= IRMux.MemData={13,rT,rA,SIMM}                         Path(S363,S365)
	S367= IRMux.Out={13,rT,rA,SIMM}                             IRMux-Select(S366)
	S368= ICacheReg.Out=>IRMux.CacheData                        Premise(F193)
	S369= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F194)
	S370= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S324,S369)
	S371= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F195)
	S372= IRMux.CacheSel=ICacheHit(addr)                        Path(S327,S371)
	S373= IRMux.Out=>IR.In                                      Premise(F196)
	S374= IR.In={13,rT,rA,SIMM}                                 Path(S367,S373)
	S375= IMem.MEM8WordOut=>ICache.WData                        Premise(F197)
	S376= ICache.WData=IMemGet8Word({pid,addr})                 Path(S364,S375)
	S377= PC.Out=>ICache.IEA                                    Premise(F198)
	S378= IR.Out0_5=>CU.Op                                      Premise(F199)
	S379= CU.Op=13                                              Path(S330,S378)
	S380= CU.Func=alu_add                                       CU(S379)
	S381= IR.Out11_15=>GPRegs.RReg1                             Premise(F200)
	S382= GPRegs.RReg1=rA                                       Path(S332,S381)
	S383= GPRegs.Rdata1=a                                       GPRegs-Read(S382,S299)
	S384= IR.Out16_31=>IMMEXT.In                                Premise(F201)
	S385= IMMEXT.In=SIMM                                        Path(S333,S384)
	S386= IMMEXT.Out={16{SIMM[0]},SIMM}                         IMMEXT(S385)
	S387= GPRegs.Rdata1=>A.In                                   Premise(F202)
	S388= A.In=a                                                Path(S383,S387)
	S389= IMMEXT.Out=>B.In                                      Premise(F203)
	S390= B.In={16{SIMM[0]},SIMM}                               Path(S386,S389)
	S391= A.Out=>ALU.A                                          Premise(F204)
	S392= ALU.A=a                                               Path(S334,S391)
	S393= B.Out=>ALU.B                                          Premise(F205)
	S394= ALU.B={16{SIMM[0]},SIMM}                              Path(S337,S393)
	S395= CU.Func=>ALU.Func                                     Premise(F206)
	S396= ALU.Func=alu_add                                      Path(S380,S395)
	S397= ALU.Out=a+{16{SIMM[0]},SIMM}                          ALU(S392,S394)
	S398= ALU.CMP=Compare0(a+{16{SIMM[0]},SIMM})                ALU(S392,S394)
	S399= ALU.OV=OverFlow(a+{16{SIMM[0]},SIMM})                 ALU(S392,S394)
	S400= ALU.CA=Carry(a+{16{SIMM[0]},SIMM})                    ALU(S392,S394)
	S401= ALU.Out=>ALUOut.In                                    Premise(F207)
	S402= ALUOut.In=a+{16{SIMM[0]},SIMM}                        Path(S397,S401)
	S403= ALU.CMP=>DataCmb.A                                    Premise(F208)
	S404= DataCmb.A=Compare0(a+{16{SIMM[0]},SIMM})              Path(S398,S403)
	S405= XER.SOOut=>DataCmb.B                                  Premise(F209)
	S406= DataCmb.B=so                                          Path(S340,S405)
	S407= DataCmb.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}       DataCmb(S404,S406)
	S408= DataCmb.Out=>DR4bit.In                                Premise(F210)
	S409= DR4bit.In={Compare0(a+{16{SIMM[0]},SIMM}),so}         Path(S407,S408)
	S410= ALU.CA=>CAReg.In                                      Premise(F211)
	S411= CAReg.In=Carry(a+{16{SIMM[0]},SIMM})                  Path(S400,S410)
	S412= IR.Out6_10=>GPRegs.WReg                               Premise(F212)
	S413= GPRegs.WReg=rT                                        Path(S331,S412)
	S414= ALUOut.Out=>GPRegs.WData                              Premise(F213)
	S415= DR4bit.Out=>CRRegs.CR0In                              Premise(F214)
	S416= CAReg.Out=>XER.CAIn                                   Premise(F215)
	S417= CtrlPIDReg=0                                          Premise(F216)
	S418= [PIDReg]=pid                                          PIDReg-Hold(S278,S417)
	S419= CtrlIMMU=0                                            Premise(F217)
	S420= CtrlPC=0                                              Premise(F218)
	S421= CtrlPCInc=0                                           Premise(F219)
	S422= PC[CIA]=addr                                          PC-Hold(S282,S421)
	S423= PC[Out]=addr+4                                        PC-Hold(S283,S420,S421)
	S424= CtrlIAddrReg=0                                        Premise(F220)
	S425= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S285,S424)
	S426= CtrlIMMUHitReg=0                                      Premise(F221)
	S427= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S287,S426)
	S428= CtrlICache=0                                          Premise(F222)
	S429= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S289,S428)
	S430= CtrlICacheReg=0                                       Premise(F223)
	S431= CtrlICacheHitReg=0                                    Premise(F224)
	S432= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S292,S431)
	S433= CtrlIMem=0                                            Premise(F225)
	S434= IMem[{pid,addr}]={13,rT,rA,SIMM}                      IMem-Hold(S294,S433)
	S435= CtrlIRMux=0                                           Premise(F226)
	S436= CtrlIR=0                                              Premise(F227)
	S437= [IR]={13,rT,rA,SIMM}                                  IR-Hold(S297,S436)
	S438= CtrlGPRegs=0                                          Premise(F228)
	S439= GPRegs[rA]=a                                          GPRegs-Hold(S299,S438)
	S440= CtrlA=0                                               Premise(F229)
	S441= [A]=a                                                 A-Hold(S301,S440)
	S442= CtrlB=0                                               Premise(F230)
	S443= [B]={16{SIMM[0]},SIMM}                                B-Hold(S303,S442)
	S444= CtrlALUOut=1                                          Premise(F231)
	S445= [ALUOut]=a+{16{SIMM[0]},SIMM}                         ALUOut-Write(S402,S444)
	S446= CtrlXERSO=0                                           Premise(F232)
	S447= XER[SO]=so                                            XER-SO-Hold(S306,S446)
	S448= CtrlXEROV=0                                           Premise(F233)
	S449= CtrlXERCA=0                                           Premise(F234)
	S450= CtrlDR4bit=1                                          Premise(F235)
	S451= [DR4bit]={Compare0(a+{16{SIMM[0]},SIMM}),so}          DR4bit-Write(S409,S450)
	S452= CtrlCAReg=1                                           Premise(F236)
	S453= [CAReg]=Carry(a+{16{SIMM[0]},SIMM})                   CAReg-Write(S411,S452)
	S454= CtrlCRRegs=0                                          Premise(F237)
	S455= CtrlCRRegsCR0=0                                       Premise(F238)
	S456= CtrlCRRegsW4bitRegs=0                                 Premise(F239)
	S457= CtrlCRRegsW1bitRegs=0                                 Premise(F240)

MEM	S458= PIDReg.Out=pid                                        PIDReg-Out(S418)
	S459= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S418)
	S460= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S418)
	S461= PC.CIA=addr                                           PC-Out(S422)
	S462= PC.CIA31_28=addr[31:28]                               PC-Out(S422)
	S463= PC.Out=addr+4                                         PC-Out(S423)
	S464= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S425)
	S465= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S425)
	S466= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S425)
	S467= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S427)
	S468= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S427)
	S469= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S427)
	S470= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S432)
	S471= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S432)
	S472= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S432)
	S473= IR.Out0_5=13                                          IR-Out(S437)
	S474= IR.Out6_10=rT                                         IR-Out(S437)
	S475= IR.Out11_15=rA                                        IR-Out(S437)
	S476= IR.Out16_31=SIMM                                      IR-Out(S437)
	S477= A.Out=a                                               A-Out(S441)
	S478= A.Out26_31=a[26:31]                                   A-Out(S441)
	S479= A.Out30_31=a[30:31]                                   A-Out(S441)
	S480= B.Out={16{SIMM[0]},SIMM}                              B-Out(S443)
	S481= B.Out26_31={16{SIMM[0]},SIMM}[26:31]                  B-Out(S443)
	S482= B.Out30_31={16{SIMM[0]},SIMM}[30:31]                  B-Out(S443)
	S483= ALUOut.Out=a+{16{SIMM[0]},SIMM}                       ALUOut-Out(S445)
	S484= ALUOut.Out26_31=a+{16{SIMM[0]},SIMM}[26:31]           ALUOut-Out(S445)
	S485= ALUOut.Out30_31=a+{16{SIMM[0]},SIMM}[30:31]           ALUOut-Out(S445)
	S486= XER.SOOut=so                                          XER-SO-Out(S447)
	S487= DR4bit.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}        DR4bit-Out(S451)
	S488= DR4bit.Out26_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[26:31]DR4bit-Out(S451)
	S489= DR4bit.Out30_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[30:31]DR4bit-Out(S451)
	S490= CAReg.Out=Carry(a+{16{SIMM[0]},SIMM})                 CAReg-Out(S453)
	S491= CAReg.Out26_31=Carry(a+{16{SIMM[0]},SIMM})[26:31]     CAReg-Out(S453)
	S492= CAReg.Out30_31=Carry(a+{16{SIMM[0]},SIMM})[30:31]     CAReg-Out(S453)
	S493= PIDReg.Out=>IMMU.PID                                  Premise(F241)
	S494= IMMU.PID=pid                                          Path(S458,S493)
	S495= PC.Out=>IMMU.IEA                                      Premise(F242)
	S496= IMMU.IEA=addr+4                                       Path(S463,S495)
	S497= IMMU.Addr={pid,addr+4}                                IMMU-Search(S494,S496)
	S498= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S494,S496)
	S499= IMMU.Addr=>IAddrReg.In                                Premise(F243)
	S500= IAddrReg.In={pid,addr+4}                              Path(S497,S499)
	S501= IMMU.Hit=>IMMUHitReg.In                               Premise(F244)
	S502= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S498,S501)
	S503= PC.Out=>ICache.IEA                                    Premise(F245)
	S504= ICache.IEA=addr+4                                     Path(S463,S503)
	S505= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S504)
	S506= ICache.Out=>ICacheReg.In                              Premise(F246)
	S507= ICache.Hit=>ICacheHitReg.In                           Premise(F247)
	S508= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S505,S507)
	S509= IMMUHitReg.Out=>CU.IMemHit                            Premise(F248)
	S510= CU.IMemHit=IMMUHit(pid,addr)                          Path(S467,S509)
	S511= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F249)
	S512= CU.ICacheHit=ICacheHit(addr)                          Path(S470,S511)
	S513= IAddrReg.Out=>IMem.RAddr                              Premise(F250)
	S514= IMem.RAddr={pid,addr}                                 Path(S464,S513)
	S515= IMem.Out={13,rT,rA,SIMM}                              IMem-Read(S514,S434)
	S516= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S514,S434)
	S517= IMem.Out=>IRMux.MemData                               Premise(F251)
	S518= IRMux.MemData={13,rT,rA,SIMM}                         Path(S515,S517)
	S519= IRMux.Out={13,rT,rA,SIMM}                             IRMux-Select(S518)
	S520= ICacheReg.Out=>IRMux.CacheData                        Premise(F252)
	S521= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F253)
	S522= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S467,S521)
	S523= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F254)
	S524= IRMux.CacheSel=ICacheHit(addr)                        Path(S470,S523)
	S525= IRMux.Out=>IR.In                                      Premise(F255)
	S526= IR.In={13,rT,rA,SIMM}                                 Path(S519,S525)
	S527= IMem.MEM8WordOut=>ICache.WData                        Premise(F256)
	S528= ICache.WData=IMemGet8Word({pid,addr})                 Path(S516,S527)
	S529= PC.Out=>ICache.IEA                                    Premise(F257)
	S530= IR.Out0_5=>CU.Op                                      Premise(F258)
	S531= CU.Op=13                                              Path(S473,S530)
	S532= CU.Func=alu_add                                       CU(S531)
	S533= IR.Out11_15=>GPRegs.RReg1                             Premise(F259)
	S534= GPRegs.RReg1=rA                                       Path(S475,S533)
	S535= GPRegs.Rdata1=a                                       GPRegs-Read(S534,S439)
	S536= IR.Out16_31=>IMMEXT.In                                Premise(F260)
	S537= IMMEXT.In=SIMM                                        Path(S476,S536)
	S538= IMMEXT.Out={16{SIMM[0]},SIMM}                         IMMEXT(S537)
	S539= GPRegs.Rdata1=>A.In                                   Premise(F261)
	S540= A.In=a                                                Path(S535,S539)
	S541= IMMEXT.Out=>B.In                                      Premise(F262)
	S542= B.In={16{SIMM[0]},SIMM}                               Path(S538,S541)
	S543= A.Out=>ALU.A                                          Premise(F263)
	S544= ALU.A=a                                               Path(S477,S543)
	S545= B.Out=>ALU.B                                          Premise(F264)
	S546= ALU.B={16{SIMM[0]},SIMM}                              Path(S480,S545)
	S547= CU.Func=>ALU.Func                                     Premise(F265)
	S548= ALU.Func=alu_add                                      Path(S532,S547)
	S549= ALU.Out=a+{16{SIMM[0]},SIMM}                          ALU(S544,S546)
	S550= ALU.CMP=Compare0(a+{16{SIMM[0]},SIMM})                ALU(S544,S546)
	S551= ALU.OV=OverFlow(a+{16{SIMM[0]},SIMM})                 ALU(S544,S546)
	S552= ALU.CA=Carry(a+{16{SIMM[0]},SIMM})                    ALU(S544,S546)
	S553= ALU.Out=>ALUOut.In                                    Premise(F266)
	S554= ALUOut.In=a+{16{SIMM[0]},SIMM}                        Path(S549,S553)
	S555= ALU.CMP=>DataCmb.A                                    Premise(F267)
	S556= DataCmb.A=Compare0(a+{16{SIMM[0]},SIMM})              Path(S550,S555)
	S557= XER.SOOut=>DataCmb.B                                  Premise(F268)
	S558= DataCmb.B=so                                          Path(S486,S557)
	S559= DataCmb.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}       DataCmb(S556,S558)
	S560= DataCmb.Out=>DR4bit.In                                Premise(F269)
	S561= DR4bit.In={Compare0(a+{16{SIMM[0]},SIMM}),so}         Path(S559,S560)
	S562= ALU.CA=>CAReg.In                                      Premise(F270)
	S563= CAReg.In=Carry(a+{16{SIMM[0]},SIMM})                  Path(S552,S562)
	S564= IR.Out6_10=>GPRegs.WReg                               Premise(F271)
	S565= GPRegs.WReg=rT                                        Path(S474,S564)
	S566= ALUOut.Out=>GPRegs.WData                              Premise(F272)
	S567= GPRegs.WData=a+{16{SIMM[0]},SIMM}                     Path(S483,S566)
	S568= DR4bit.Out=>CRRegs.CR0In                              Premise(F273)
	S569= CRRegs.CR0In={Compare0(a+{16{SIMM[0]},SIMM}),so}      Path(S487,S568)
	S570= CAReg.Out=>XER.CAIn                                   Premise(F274)
	S571= XER.CAIn=Carry(a+{16{SIMM[0]},SIMM})                  Path(S490,S570)
	S572= CtrlPIDReg=0                                          Premise(F275)
	S573= [PIDReg]=pid                                          PIDReg-Hold(S418,S572)
	S574= CtrlIMMU=0                                            Premise(F276)
	S575= CtrlPC=0                                              Premise(F277)
	S576= CtrlPCInc=0                                           Premise(F278)
	S577= PC[CIA]=addr                                          PC-Hold(S422,S576)
	S578= PC[Out]=addr+4                                        PC-Hold(S423,S575,S576)
	S579= CtrlIAddrReg=0                                        Premise(F279)
	S580= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S425,S579)
	S581= CtrlIMMUHitReg=0                                      Premise(F280)
	S582= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S427,S581)
	S583= CtrlICache=0                                          Premise(F281)
	S584= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S429,S583)
	S585= CtrlICacheReg=0                                       Premise(F282)
	S586= CtrlICacheHitReg=0                                    Premise(F283)
	S587= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S432,S586)
	S588= CtrlIMem=0                                            Premise(F284)
	S589= IMem[{pid,addr}]={13,rT,rA,SIMM}                      IMem-Hold(S434,S588)
	S590= CtrlIRMux=0                                           Premise(F285)
	S591= CtrlIR=0                                              Premise(F286)
	S592= [IR]={13,rT,rA,SIMM}                                  IR-Hold(S437,S591)
	S593= CtrlGPRegs=0                                          Premise(F287)
	S594= GPRegs[rA]=a                                          GPRegs-Hold(S439,S593)
	S595= CtrlA=0                                               Premise(F288)
	S596= [A]=a                                                 A-Hold(S441,S595)
	S597= CtrlB=0                                               Premise(F289)
	S598= [B]={16{SIMM[0]},SIMM}                                B-Hold(S443,S597)
	S599= CtrlALUOut=0                                          Premise(F290)
	S600= [ALUOut]=a+{16{SIMM[0]},SIMM}                         ALUOut-Hold(S445,S599)
	S601= CtrlXERSO=0                                           Premise(F291)
	S602= XER[SO]=so                                            XER-SO-Hold(S447,S601)
	S603= CtrlXEROV=0                                           Premise(F292)
	S604= CtrlXERCA=0                                           Premise(F293)
	S605= CtrlDR4bit=0                                          Premise(F294)
	S606= [DR4bit]={Compare0(a+{16{SIMM[0]},SIMM}),so}          DR4bit-Hold(S451,S605)
	S607= CtrlCAReg=0                                           Premise(F295)
	S608= [CAReg]=Carry(a+{16{SIMM[0]},SIMM})                   CAReg-Hold(S453,S607)
	S609= CtrlCRRegs=0                                          Premise(F296)
	S610= CtrlCRRegsCR0=0                                       Premise(F297)
	S611= CtrlCRRegsW4bitRegs=0                                 Premise(F298)
	S612= CtrlCRRegsW1bitRegs=0                                 Premise(F299)

DMMU1	S613= PIDReg.Out=pid                                        PIDReg-Out(S573)
	S614= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S573)
	S615= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S573)
	S616= PC.CIA=addr                                           PC-Out(S577)
	S617= PC.CIA31_28=addr[31:28]                               PC-Out(S577)
	S618= PC.Out=addr+4                                         PC-Out(S578)
	S619= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S580)
	S620= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S580)
	S621= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S580)
	S622= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S582)
	S623= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S582)
	S624= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S582)
	S625= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S587)
	S626= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S587)
	S627= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S587)
	S628= IR.Out0_5=13                                          IR-Out(S592)
	S629= IR.Out6_10=rT                                         IR-Out(S592)
	S630= IR.Out11_15=rA                                        IR-Out(S592)
	S631= IR.Out16_31=SIMM                                      IR-Out(S592)
	S632= A.Out=a                                               A-Out(S596)
	S633= A.Out26_31=a[26:31]                                   A-Out(S596)
	S634= A.Out30_31=a[30:31]                                   A-Out(S596)
	S635= B.Out={16{SIMM[0]},SIMM}                              B-Out(S598)
	S636= B.Out26_31={16{SIMM[0]},SIMM}[26:31]                  B-Out(S598)
	S637= B.Out30_31={16{SIMM[0]},SIMM}[30:31]                  B-Out(S598)
	S638= ALUOut.Out=a+{16{SIMM[0]},SIMM}                       ALUOut-Out(S600)
	S639= ALUOut.Out26_31=a+{16{SIMM[0]},SIMM}[26:31]           ALUOut-Out(S600)
	S640= ALUOut.Out30_31=a+{16{SIMM[0]},SIMM}[30:31]           ALUOut-Out(S600)
	S641= XER.SOOut=so                                          XER-SO-Out(S602)
	S642= DR4bit.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}        DR4bit-Out(S606)
	S643= DR4bit.Out26_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[26:31]DR4bit-Out(S606)
	S644= DR4bit.Out30_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[30:31]DR4bit-Out(S606)
	S645= CAReg.Out=Carry(a+{16{SIMM[0]},SIMM})                 CAReg-Out(S608)
	S646= CAReg.Out26_31=Carry(a+{16{SIMM[0]},SIMM})[26:31]     CAReg-Out(S608)
	S647= CAReg.Out30_31=Carry(a+{16{SIMM[0]},SIMM})[30:31]     CAReg-Out(S608)
	S648= PIDReg.Out=>IMMU.PID                                  Premise(F300)
	S649= IMMU.PID=pid                                          Path(S613,S648)
	S650= PC.Out=>IMMU.IEA                                      Premise(F301)
	S651= IMMU.IEA=addr+4                                       Path(S618,S650)
	S652= IMMU.Addr={pid,addr+4}                                IMMU-Search(S649,S651)
	S653= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S649,S651)
	S654= IMMU.Addr=>IAddrReg.In                                Premise(F302)
	S655= IAddrReg.In={pid,addr+4}                              Path(S652,S654)
	S656= IMMU.Hit=>IMMUHitReg.In                               Premise(F303)
	S657= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S653,S656)
	S658= PC.Out=>ICache.IEA                                    Premise(F304)
	S659= ICache.IEA=addr+4                                     Path(S618,S658)
	S660= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S659)
	S661= ICache.Out=>ICacheReg.In                              Premise(F305)
	S662= ICache.Hit=>ICacheHitReg.In                           Premise(F306)
	S663= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S660,S662)
	S664= IMMUHitReg.Out=>CU.IMemHit                            Premise(F307)
	S665= CU.IMemHit=IMMUHit(pid,addr)                          Path(S622,S664)
	S666= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F308)
	S667= CU.ICacheHit=ICacheHit(addr)                          Path(S625,S666)
	S668= IAddrReg.Out=>IMem.RAddr                              Premise(F309)
	S669= IMem.RAddr={pid,addr}                                 Path(S619,S668)
	S670= IMem.Out={13,rT,rA,SIMM}                              IMem-Read(S669,S589)
	S671= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S669,S589)
	S672= IMem.Out=>IRMux.MemData                               Premise(F310)
	S673= IRMux.MemData={13,rT,rA,SIMM}                         Path(S670,S672)
	S674= IRMux.Out={13,rT,rA,SIMM}                             IRMux-Select(S673)
	S675= ICacheReg.Out=>IRMux.CacheData                        Premise(F311)
	S676= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F312)
	S677= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S622,S676)
	S678= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F313)
	S679= IRMux.CacheSel=ICacheHit(addr)                        Path(S625,S678)
	S680= IRMux.Out=>IR.In                                      Premise(F314)
	S681= IR.In={13,rT,rA,SIMM}                                 Path(S674,S680)
	S682= IMem.MEM8WordOut=>ICache.WData                        Premise(F315)
	S683= ICache.WData=IMemGet8Word({pid,addr})                 Path(S671,S682)
	S684= PC.Out=>ICache.IEA                                    Premise(F316)
	S685= IR.Out0_5=>CU.Op                                      Premise(F317)
	S686= CU.Op=13                                              Path(S628,S685)
	S687= CU.Func=alu_add                                       CU(S686)
	S688= IR.Out11_15=>GPRegs.RReg1                             Premise(F318)
	S689= GPRegs.RReg1=rA                                       Path(S630,S688)
	S690= GPRegs.Rdata1=a                                       GPRegs-Read(S689,S594)
	S691= IR.Out16_31=>IMMEXT.In                                Premise(F319)
	S692= IMMEXT.In=SIMM                                        Path(S631,S691)
	S693= IMMEXT.Out={16{SIMM[0]},SIMM}                         IMMEXT(S692)
	S694= GPRegs.Rdata1=>A.In                                   Premise(F320)
	S695= A.In=a                                                Path(S690,S694)
	S696= IMMEXT.Out=>B.In                                      Premise(F321)
	S697= B.In={16{SIMM[0]},SIMM}                               Path(S693,S696)
	S698= A.Out=>ALU.A                                          Premise(F322)
	S699= ALU.A=a                                               Path(S632,S698)
	S700= B.Out=>ALU.B                                          Premise(F323)
	S701= ALU.B={16{SIMM[0]},SIMM}                              Path(S635,S700)
	S702= CU.Func=>ALU.Func                                     Premise(F324)
	S703= ALU.Func=alu_add                                      Path(S687,S702)
	S704= ALU.Out=a+{16{SIMM[0]},SIMM}                          ALU(S699,S701)
	S705= ALU.CMP=Compare0(a+{16{SIMM[0]},SIMM})                ALU(S699,S701)
	S706= ALU.OV=OverFlow(a+{16{SIMM[0]},SIMM})                 ALU(S699,S701)
	S707= ALU.CA=Carry(a+{16{SIMM[0]},SIMM})                    ALU(S699,S701)
	S708= ALU.Out=>ALUOut.In                                    Premise(F325)
	S709= ALUOut.In=a+{16{SIMM[0]},SIMM}                        Path(S704,S708)
	S710= ALU.CMP=>DataCmb.A                                    Premise(F326)
	S711= DataCmb.A=Compare0(a+{16{SIMM[0]},SIMM})              Path(S705,S710)
	S712= XER.SOOut=>DataCmb.B                                  Premise(F327)
	S713= DataCmb.B=so                                          Path(S641,S712)
	S714= DataCmb.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}       DataCmb(S711,S713)
	S715= DataCmb.Out=>DR4bit.In                                Premise(F328)
	S716= DR4bit.In={Compare0(a+{16{SIMM[0]},SIMM}),so}         Path(S714,S715)
	S717= ALU.CA=>CAReg.In                                      Premise(F329)
	S718= CAReg.In=Carry(a+{16{SIMM[0]},SIMM})                  Path(S707,S717)
	S719= IR.Out6_10=>GPRegs.WReg                               Premise(F330)
	S720= GPRegs.WReg=rT                                        Path(S629,S719)
	S721= ALUOut.Out=>GPRegs.WData                              Premise(F331)
	S722= GPRegs.WData=a+{16{SIMM[0]},SIMM}                     Path(S638,S721)
	S723= DR4bit.Out=>CRRegs.CR0In                              Premise(F332)
	S724= CRRegs.CR0In={Compare0(a+{16{SIMM[0]},SIMM}),so}      Path(S642,S723)
	S725= CAReg.Out=>XER.CAIn                                   Premise(F333)
	S726= XER.CAIn=Carry(a+{16{SIMM[0]},SIMM})                  Path(S645,S725)
	S727= CtrlPIDReg=0                                          Premise(F334)
	S728= [PIDReg]=pid                                          PIDReg-Hold(S573,S727)
	S729= CtrlIMMU=0                                            Premise(F335)
	S730= CtrlPC=0                                              Premise(F336)
	S731= CtrlPCInc=0                                           Premise(F337)
	S732= PC[CIA]=addr                                          PC-Hold(S577,S731)
	S733= PC[Out]=addr+4                                        PC-Hold(S578,S730,S731)
	S734= CtrlIAddrReg=0                                        Premise(F338)
	S735= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S580,S734)
	S736= CtrlIMMUHitReg=0                                      Premise(F339)
	S737= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S582,S736)
	S738= CtrlICache=0                                          Premise(F340)
	S739= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S584,S738)
	S740= CtrlICacheReg=0                                       Premise(F341)
	S741= CtrlICacheHitReg=0                                    Premise(F342)
	S742= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S587,S741)
	S743= CtrlIMem=0                                            Premise(F343)
	S744= IMem[{pid,addr}]={13,rT,rA,SIMM}                      IMem-Hold(S589,S743)
	S745= CtrlIRMux=0                                           Premise(F344)
	S746= CtrlIR=0                                              Premise(F345)
	S747= [IR]={13,rT,rA,SIMM}                                  IR-Hold(S592,S746)
	S748= CtrlGPRegs=0                                          Premise(F346)
	S749= GPRegs[rA]=a                                          GPRegs-Hold(S594,S748)
	S750= CtrlA=0                                               Premise(F347)
	S751= [A]=a                                                 A-Hold(S596,S750)
	S752= CtrlB=0                                               Premise(F348)
	S753= [B]={16{SIMM[0]},SIMM}                                B-Hold(S598,S752)
	S754= CtrlALUOut=0                                          Premise(F349)
	S755= [ALUOut]=a+{16{SIMM[0]},SIMM}                         ALUOut-Hold(S600,S754)
	S756= CtrlXERSO=0                                           Premise(F350)
	S757= XER[SO]=so                                            XER-SO-Hold(S602,S756)
	S758= CtrlXEROV=0                                           Premise(F351)
	S759= CtrlXERCA=0                                           Premise(F352)
	S760= CtrlDR4bit=0                                          Premise(F353)
	S761= [DR4bit]={Compare0(a+{16{SIMM[0]},SIMM}),so}          DR4bit-Hold(S606,S760)
	S762= CtrlCAReg=0                                           Premise(F354)
	S763= [CAReg]=Carry(a+{16{SIMM[0]},SIMM})                   CAReg-Hold(S608,S762)
	S764= CtrlCRRegs=0                                          Premise(F355)
	S765= CtrlCRRegsCR0=0                                       Premise(F356)
	S766= CtrlCRRegsW4bitRegs=0                                 Premise(F357)
	S767= CtrlCRRegsW1bitRegs=0                                 Premise(F358)

DMMU2	S768= PIDReg.Out=pid                                        PIDReg-Out(S728)
	S769= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S728)
	S770= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S728)
	S771= PC.CIA=addr                                           PC-Out(S732)
	S772= PC.CIA31_28=addr[31:28]                               PC-Out(S732)
	S773= PC.Out=addr+4                                         PC-Out(S733)
	S774= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S735)
	S775= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S735)
	S776= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S735)
	S777= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S737)
	S778= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S737)
	S779= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S737)
	S780= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S742)
	S781= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S742)
	S782= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S742)
	S783= IR.Out0_5=13                                          IR-Out(S747)
	S784= IR.Out6_10=rT                                         IR-Out(S747)
	S785= IR.Out11_15=rA                                        IR-Out(S747)
	S786= IR.Out16_31=SIMM                                      IR-Out(S747)
	S787= A.Out=a                                               A-Out(S751)
	S788= A.Out26_31=a[26:31]                                   A-Out(S751)
	S789= A.Out30_31=a[30:31]                                   A-Out(S751)
	S790= B.Out={16{SIMM[0]},SIMM}                              B-Out(S753)
	S791= B.Out26_31={16{SIMM[0]},SIMM}[26:31]                  B-Out(S753)
	S792= B.Out30_31={16{SIMM[0]},SIMM}[30:31]                  B-Out(S753)
	S793= ALUOut.Out=a+{16{SIMM[0]},SIMM}                       ALUOut-Out(S755)
	S794= ALUOut.Out26_31=a+{16{SIMM[0]},SIMM}[26:31]           ALUOut-Out(S755)
	S795= ALUOut.Out30_31=a+{16{SIMM[0]},SIMM}[30:31]           ALUOut-Out(S755)
	S796= XER.SOOut=so                                          XER-SO-Out(S757)
	S797= DR4bit.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}        DR4bit-Out(S761)
	S798= DR4bit.Out26_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[26:31]DR4bit-Out(S761)
	S799= DR4bit.Out30_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[30:31]DR4bit-Out(S761)
	S800= CAReg.Out=Carry(a+{16{SIMM[0]},SIMM})                 CAReg-Out(S763)
	S801= CAReg.Out26_31=Carry(a+{16{SIMM[0]},SIMM})[26:31]     CAReg-Out(S763)
	S802= CAReg.Out30_31=Carry(a+{16{SIMM[0]},SIMM})[30:31]     CAReg-Out(S763)
	S803= PIDReg.Out=>IMMU.PID                                  Premise(F359)
	S804= IMMU.PID=pid                                          Path(S768,S803)
	S805= PC.Out=>IMMU.IEA                                      Premise(F360)
	S806= IMMU.IEA=addr+4                                       Path(S773,S805)
	S807= IMMU.Addr={pid,addr+4}                                IMMU-Search(S804,S806)
	S808= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S804,S806)
	S809= IMMU.Addr=>IAddrReg.In                                Premise(F361)
	S810= IAddrReg.In={pid,addr+4}                              Path(S807,S809)
	S811= IMMU.Hit=>IMMUHitReg.In                               Premise(F362)
	S812= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S808,S811)
	S813= PC.Out=>ICache.IEA                                    Premise(F363)
	S814= ICache.IEA=addr+4                                     Path(S773,S813)
	S815= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S814)
	S816= ICache.Out=>ICacheReg.In                              Premise(F364)
	S817= ICache.Hit=>ICacheHitReg.In                           Premise(F365)
	S818= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S815,S817)
	S819= IMMUHitReg.Out=>CU.IMemHit                            Premise(F366)
	S820= CU.IMemHit=IMMUHit(pid,addr)                          Path(S777,S819)
	S821= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F367)
	S822= CU.ICacheHit=ICacheHit(addr)                          Path(S780,S821)
	S823= IAddrReg.Out=>IMem.RAddr                              Premise(F368)
	S824= IMem.RAddr={pid,addr}                                 Path(S774,S823)
	S825= IMem.Out={13,rT,rA,SIMM}                              IMem-Read(S824,S744)
	S826= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S824,S744)
	S827= IMem.Out=>IRMux.MemData                               Premise(F369)
	S828= IRMux.MemData={13,rT,rA,SIMM}                         Path(S825,S827)
	S829= IRMux.Out={13,rT,rA,SIMM}                             IRMux-Select(S828)
	S830= ICacheReg.Out=>IRMux.CacheData                        Premise(F370)
	S831= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F371)
	S832= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S777,S831)
	S833= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F372)
	S834= IRMux.CacheSel=ICacheHit(addr)                        Path(S780,S833)
	S835= IRMux.Out=>IR.In                                      Premise(F373)
	S836= IR.In={13,rT,rA,SIMM}                                 Path(S829,S835)
	S837= IMem.MEM8WordOut=>ICache.WData                        Premise(F374)
	S838= ICache.WData=IMemGet8Word({pid,addr})                 Path(S826,S837)
	S839= PC.Out=>ICache.IEA                                    Premise(F375)
	S840= IR.Out0_5=>CU.Op                                      Premise(F376)
	S841= CU.Op=13                                              Path(S783,S840)
	S842= CU.Func=alu_add                                       CU(S841)
	S843= IR.Out11_15=>GPRegs.RReg1                             Premise(F377)
	S844= GPRegs.RReg1=rA                                       Path(S785,S843)
	S845= GPRegs.Rdata1=a                                       GPRegs-Read(S844,S749)
	S846= IR.Out16_31=>IMMEXT.In                                Premise(F378)
	S847= IMMEXT.In=SIMM                                        Path(S786,S846)
	S848= IMMEXT.Out={16{SIMM[0]},SIMM}                         IMMEXT(S847)
	S849= GPRegs.Rdata1=>A.In                                   Premise(F379)
	S850= A.In=a                                                Path(S845,S849)
	S851= IMMEXT.Out=>B.In                                      Premise(F380)
	S852= B.In={16{SIMM[0]},SIMM}                               Path(S848,S851)
	S853= A.Out=>ALU.A                                          Premise(F381)
	S854= ALU.A=a                                               Path(S787,S853)
	S855= B.Out=>ALU.B                                          Premise(F382)
	S856= ALU.B={16{SIMM[0]},SIMM}                              Path(S790,S855)
	S857= CU.Func=>ALU.Func                                     Premise(F383)
	S858= ALU.Func=alu_add                                      Path(S842,S857)
	S859= ALU.Out=a+{16{SIMM[0]},SIMM}                          ALU(S854,S856)
	S860= ALU.CMP=Compare0(a+{16{SIMM[0]},SIMM})                ALU(S854,S856)
	S861= ALU.OV=OverFlow(a+{16{SIMM[0]},SIMM})                 ALU(S854,S856)
	S862= ALU.CA=Carry(a+{16{SIMM[0]},SIMM})                    ALU(S854,S856)
	S863= ALU.Out=>ALUOut.In                                    Premise(F384)
	S864= ALUOut.In=a+{16{SIMM[0]},SIMM}                        Path(S859,S863)
	S865= ALU.CMP=>DataCmb.A                                    Premise(F385)
	S866= DataCmb.A=Compare0(a+{16{SIMM[0]},SIMM})              Path(S860,S865)
	S867= XER.SOOut=>DataCmb.B                                  Premise(F386)
	S868= DataCmb.B=so                                          Path(S796,S867)
	S869= DataCmb.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}       DataCmb(S866,S868)
	S870= DataCmb.Out=>DR4bit.In                                Premise(F387)
	S871= DR4bit.In={Compare0(a+{16{SIMM[0]},SIMM}),so}         Path(S869,S870)
	S872= ALU.CA=>CAReg.In                                      Premise(F388)
	S873= CAReg.In=Carry(a+{16{SIMM[0]},SIMM})                  Path(S862,S872)
	S874= IR.Out6_10=>GPRegs.WReg                               Premise(F389)
	S875= GPRegs.WReg=rT                                        Path(S784,S874)
	S876= ALUOut.Out=>GPRegs.WData                              Premise(F390)
	S877= GPRegs.WData=a+{16{SIMM[0]},SIMM}                     Path(S793,S876)
	S878= DR4bit.Out=>CRRegs.CR0In                              Premise(F391)
	S879= CRRegs.CR0In={Compare0(a+{16{SIMM[0]},SIMM}),so}      Path(S797,S878)
	S880= CAReg.Out=>XER.CAIn                                   Premise(F392)
	S881= XER.CAIn=Carry(a+{16{SIMM[0]},SIMM})                  Path(S800,S880)
	S882= CtrlPIDReg=0                                          Premise(F393)
	S883= [PIDReg]=pid                                          PIDReg-Hold(S728,S882)
	S884= CtrlIMMU=0                                            Premise(F394)
	S885= CtrlPC=0                                              Premise(F395)
	S886= CtrlPCInc=0                                           Premise(F396)
	S887= PC[CIA]=addr                                          PC-Hold(S732,S886)
	S888= PC[Out]=addr+4                                        PC-Hold(S733,S885,S886)
	S889= CtrlIAddrReg=0                                        Premise(F397)
	S890= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S735,S889)
	S891= CtrlIMMUHitReg=0                                      Premise(F398)
	S892= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S737,S891)
	S893= CtrlICache=0                                          Premise(F399)
	S894= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S739,S893)
	S895= CtrlICacheReg=0                                       Premise(F400)
	S896= CtrlICacheHitReg=0                                    Premise(F401)
	S897= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S742,S896)
	S898= CtrlIMem=0                                            Premise(F402)
	S899= IMem[{pid,addr}]={13,rT,rA,SIMM}                      IMem-Hold(S744,S898)
	S900= CtrlIRMux=0                                           Premise(F403)
	S901= CtrlIR=0                                              Premise(F404)
	S902= [IR]={13,rT,rA,SIMM}                                  IR-Hold(S747,S901)
	S903= CtrlGPRegs=0                                          Premise(F405)
	S904= GPRegs[rA]=a                                          GPRegs-Hold(S749,S903)
	S905= CtrlA=0                                               Premise(F406)
	S906= [A]=a                                                 A-Hold(S751,S905)
	S907= CtrlB=0                                               Premise(F407)
	S908= [B]={16{SIMM[0]},SIMM}                                B-Hold(S753,S907)
	S909= CtrlALUOut=0                                          Premise(F408)
	S910= [ALUOut]=a+{16{SIMM[0]},SIMM}                         ALUOut-Hold(S755,S909)
	S911= CtrlXERSO=0                                           Premise(F409)
	S912= XER[SO]=so                                            XER-SO-Hold(S757,S911)
	S913= CtrlXEROV=0                                           Premise(F410)
	S914= CtrlXERCA=0                                           Premise(F411)
	S915= CtrlDR4bit=0                                          Premise(F412)
	S916= [DR4bit]={Compare0(a+{16{SIMM[0]},SIMM}),so}          DR4bit-Hold(S761,S915)
	S917= CtrlCAReg=0                                           Premise(F413)
	S918= [CAReg]=Carry(a+{16{SIMM[0]},SIMM})                   CAReg-Hold(S763,S917)
	S919= CtrlCRRegs=0                                          Premise(F414)
	S920= CtrlCRRegsCR0=0                                       Premise(F415)
	S921= CtrlCRRegsW4bitRegs=0                                 Premise(F416)
	S922= CtrlCRRegsW1bitRegs=0                                 Premise(F417)

WB	S923= PIDReg.Out=pid                                        PIDReg-Out(S883)
	S924= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S883)
	S925= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S883)
	S926= PC.CIA=addr                                           PC-Out(S887)
	S927= PC.CIA31_28=addr[31:28]                               PC-Out(S887)
	S928= PC.Out=addr+4                                         PC-Out(S888)
	S929= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S890)
	S930= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S890)
	S931= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S890)
	S932= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S892)
	S933= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S892)
	S934= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S892)
	S935= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S897)
	S936= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S897)
	S937= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S897)
	S938= IR.Out0_5=13                                          IR-Out(S902)
	S939= IR.Out6_10=rT                                         IR-Out(S902)
	S940= IR.Out11_15=rA                                        IR-Out(S902)
	S941= IR.Out16_31=SIMM                                      IR-Out(S902)
	S942= A.Out=a                                               A-Out(S906)
	S943= A.Out26_31=a[26:31]                                   A-Out(S906)
	S944= A.Out30_31=a[30:31]                                   A-Out(S906)
	S945= B.Out={16{SIMM[0]},SIMM}                              B-Out(S908)
	S946= B.Out26_31={16{SIMM[0]},SIMM}[26:31]                  B-Out(S908)
	S947= B.Out30_31={16{SIMM[0]},SIMM}[30:31]                  B-Out(S908)
	S948= ALUOut.Out=a+{16{SIMM[0]},SIMM}                       ALUOut-Out(S910)
	S949= ALUOut.Out26_31=a+{16{SIMM[0]},SIMM}[26:31]           ALUOut-Out(S910)
	S950= ALUOut.Out30_31=a+{16{SIMM[0]},SIMM}[30:31]           ALUOut-Out(S910)
	S951= XER.SOOut=so                                          XER-SO-Out(S912)
	S952= DR4bit.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}        DR4bit-Out(S916)
	S953= DR4bit.Out26_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[26:31]DR4bit-Out(S916)
	S954= DR4bit.Out30_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[30:31]DR4bit-Out(S916)
	S955= CAReg.Out=Carry(a+{16{SIMM[0]},SIMM})                 CAReg-Out(S918)
	S956= CAReg.Out26_31=Carry(a+{16{SIMM[0]},SIMM})[26:31]     CAReg-Out(S918)
	S957= CAReg.Out30_31=Carry(a+{16{SIMM[0]},SIMM})[30:31]     CAReg-Out(S918)
	S958= PIDReg.Out=>IMMU.PID                                  Premise(F418)
	S959= IMMU.PID=pid                                          Path(S923,S958)
	S960= PC.Out=>IMMU.IEA                                      Premise(F419)
	S961= IMMU.IEA=addr+4                                       Path(S928,S960)
	S962= IMMU.Addr={pid,addr+4}                                IMMU-Search(S959,S961)
	S963= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S959,S961)
	S964= IMMU.Addr=>IAddrReg.In                                Premise(F420)
	S965= IAddrReg.In={pid,addr+4}                              Path(S962,S964)
	S966= IMMU.Hit=>IMMUHitReg.In                               Premise(F421)
	S967= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S963,S966)
	S968= PC.Out=>ICache.IEA                                    Premise(F422)
	S969= ICache.IEA=addr+4                                     Path(S928,S968)
	S970= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S969)
	S971= ICache.Out=>ICacheReg.In                              Premise(F423)
	S972= ICache.Hit=>ICacheHitReg.In                           Premise(F424)
	S973= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S970,S972)
	S974= IMMUHitReg.Out=>CU.IMemHit                            Premise(F425)
	S975= CU.IMemHit=IMMUHit(pid,addr)                          Path(S932,S974)
	S976= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F426)
	S977= CU.ICacheHit=ICacheHit(addr)                          Path(S935,S976)
	S978= IAddrReg.Out=>IMem.RAddr                              Premise(F427)
	S979= IMem.RAddr={pid,addr}                                 Path(S929,S978)
	S980= IMem.Out={13,rT,rA,SIMM}                              IMem-Read(S979,S899)
	S981= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S979,S899)
	S982= IMem.Out=>IRMux.MemData                               Premise(F428)
	S983= IRMux.MemData={13,rT,rA,SIMM}                         Path(S980,S982)
	S984= IRMux.Out={13,rT,rA,SIMM}                             IRMux-Select(S983)
	S985= ICacheReg.Out=>IRMux.CacheData                        Premise(F429)
	S986= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F430)
	S987= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S932,S986)
	S988= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F431)
	S989= IRMux.CacheSel=ICacheHit(addr)                        Path(S935,S988)
	S990= IRMux.Out=>IR.In                                      Premise(F432)
	S991= IR.In={13,rT,rA,SIMM}                                 Path(S984,S990)
	S992= IMem.MEM8WordOut=>ICache.WData                        Premise(F433)
	S993= ICache.WData=IMemGet8Word({pid,addr})                 Path(S981,S992)
	S994= PC.Out=>ICache.IEA                                    Premise(F434)
	S995= IR.Out0_5=>CU.Op                                      Premise(F435)
	S996= CU.Op=13                                              Path(S938,S995)
	S997= CU.Func=alu_add                                       CU(S996)
	S998= IR.Out11_15=>GPRegs.RReg1                             Premise(F436)
	S999= GPRegs.RReg1=rA                                       Path(S940,S998)
	S1000= GPRegs.Rdata1=a                                      GPRegs-Read(S999,S904)
	S1001= IR.Out16_31=>IMMEXT.In                               Premise(F437)
	S1002= IMMEXT.In=SIMM                                       Path(S941,S1001)
	S1003= IMMEXT.Out={16{SIMM[0]},SIMM}                        IMMEXT(S1002)
	S1004= GPRegs.Rdata1=>A.In                                  Premise(F438)
	S1005= A.In=a                                               Path(S1000,S1004)
	S1006= IMMEXT.Out=>B.In                                     Premise(F439)
	S1007= B.In={16{SIMM[0]},SIMM}                              Path(S1003,S1006)
	S1008= A.Out=>ALU.A                                         Premise(F440)
	S1009= ALU.A=a                                              Path(S942,S1008)
	S1010= B.Out=>ALU.B                                         Premise(F441)
	S1011= ALU.B={16{SIMM[0]},SIMM}                             Path(S945,S1010)
	S1012= CU.Func=>ALU.Func                                    Premise(F442)
	S1013= ALU.Func=alu_add                                     Path(S997,S1012)
	S1014= ALU.Out=a+{16{SIMM[0]},SIMM}                         ALU(S1009,S1011)
	S1015= ALU.CMP=Compare0(a+{16{SIMM[0]},SIMM})               ALU(S1009,S1011)
	S1016= ALU.OV=OverFlow(a+{16{SIMM[0]},SIMM})                ALU(S1009,S1011)
	S1017= ALU.CA=Carry(a+{16{SIMM[0]},SIMM})                   ALU(S1009,S1011)
	S1018= ALU.Out=>ALUOut.In                                   Premise(F443)
	S1019= ALUOut.In=a+{16{SIMM[0]},SIMM}                       Path(S1014,S1018)
	S1020= ALU.CMP=>DataCmb.A                                   Premise(F444)
	S1021= DataCmb.A=Compare0(a+{16{SIMM[0]},SIMM})             Path(S1015,S1020)
	S1022= XER.SOOut=>DataCmb.B                                 Premise(F445)
	S1023= DataCmb.B=so                                         Path(S951,S1022)
	S1024= DataCmb.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}      DataCmb(S1021,S1023)
	S1025= DataCmb.Out=>DR4bit.In                               Premise(F446)
	S1026= DR4bit.In={Compare0(a+{16{SIMM[0]},SIMM}),so}        Path(S1024,S1025)
	S1027= ALU.CA=>CAReg.In                                     Premise(F447)
	S1028= CAReg.In=Carry(a+{16{SIMM[0]},SIMM})                 Path(S1017,S1027)
	S1029= IR.Out6_10=>GPRegs.WReg                              Premise(F448)
	S1030= GPRegs.WReg=rT                                       Path(S939,S1029)
	S1031= ALUOut.Out=>GPRegs.WData                             Premise(F449)
	S1032= GPRegs.WData=a+{16{SIMM[0]},SIMM}                    Path(S948,S1031)
	S1033= DR4bit.Out=>CRRegs.CR0In                             Premise(F450)
	S1034= CRRegs.CR0In={Compare0(a+{16{SIMM[0]},SIMM}),so}     Path(S952,S1033)
	S1035= CAReg.Out=>XER.CAIn                                  Premise(F451)
	S1036= XER.CAIn=Carry(a+{16{SIMM[0]},SIMM})                 Path(S955,S1035)
	S1037= CtrlPIDReg=0                                         Premise(F452)
	S1038= [PIDReg]=pid                                         PIDReg-Hold(S883,S1037)
	S1039= CtrlIMMU=0                                           Premise(F453)
	S1040= CtrlPC=0                                             Premise(F454)
	S1041= CtrlPCInc=0                                          Premise(F455)
	S1042= PC[CIA]=addr                                         PC-Hold(S887,S1041)
	S1043= PC[Out]=addr+4                                       PC-Hold(S888,S1040,S1041)
	S1044= CtrlIAddrReg=0                                       Premise(F456)
	S1045= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S890,S1044)
	S1046= CtrlIMMUHitReg=0                                     Premise(F457)
	S1047= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S892,S1046)
	S1048= CtrlICache=0                                         Premise(F458)
	S1049= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S894,S1048)
	S1050= CtrlICacheReg=0                                      Premise(F459)
	S1051= CtrlICacheHitReg=0                                   Premise(F460)
	S1052= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S897,S1051)
	S1053= CtrlIMem=0                                           Premise(F461)
	S1054= IMem[{pid,addr}]={13,rT,rA,SIMM}                     IMem-Hold(S899,S1053)
	S1055= CtrlIRMux=0                                          Premise(F462)
	S1056= CtrlIR=0                                             Premise(F463)
	S1057= [IR]={13,rT,rA,SIMM}                                 IR-Hold(S902,S1056)
	S1058= CtrlGPRegs=1                                         Premise(F464)
	S1059= GPRegs[rT]=a+{16{SIMM[0]},SIMM}                      GPRegs-Write(S1030,S1032,S1058)
	S1060= CtrlA=0                                              Premise(F465)
	S1061= [A]=a                                                A-Hold(S906,S1060)
	S1062= CtrlB=0                                              Premise(F466)
	S1063= [B]={16{SIMM[0]},SIMM}                               B-Hold(S908,S1062)
	S1064= CtrlALUOut=0                                         Premise(F467)
	S1065= [ALUOut]=a+{16{SIMM[0]},SIMM}                        ALUOut-Hold(S910,S1064)
	S1066= CtrlXERSO=0                                          Premise(F468)
	S1067= XER[SO]=so                                           XER-SO-Hold(S912,S1066)
	S1068= CtrlXEROV=0                                          Premise(F469)
	S1069= CtrlXERCA=1                                          Premise(F470)
	S1070= XER[CA]=Carry(a+{16{SIMM[0]},SIMM})                  XER-CA-Write(S1036,S1069)
	S1071= CtrlDR4bit=0                                         Premise(F471)
	S1072= [DR4bit]={Compare0(a+{16{SIMM[0]},SIMM}),so}         DR4bit-Hold(S916,S1071)
	S1073= CtrlCAReg=0                                          Premise(F472)
	S1074= [CAReg]=Carry(a+{16{SIMM[0]},SIMM})                  CAReg-Hold(S918,S1073)
	S1075= CtrlCRRegs=0                                         Premise(F473)
	S1076= CtrlCRRegsCR0=1                                      Premise(F474)
	S1077= CRRegs[CR0]={Compare0(a+{16{SIMM[0]},SIMM}),so}      CRRegs-CR0-Write(S1034,S1076)
	S1078= CtrlCRRegsW4bitRegs=0                                Premise(F475)
	S1079= CtrlCRRegsW1bitRegs=0                                Premise(F476)

POST	S1038= [PIDReg]=pid                                         PIDReg-Hold(S883,S1037)
	S1042= PC[CIA]=addr                                         PC-Hold(S887,S1041)
	S1043= PC[Out]=addr+4                                       PC-Hold(S888,S1040,S1041)
	S1045= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S890,S1044)
	S1047= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S892,S1046)
	S1049= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S894,S1048)
	S1052= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S897,S1051)
	S1054= IMem[{pid,addr}]={13,rT,rA,SIMM}                     IMem-Hold(S899,S1053)
	S1057= [IR]={13,rT,rA,SIMM}                                 IR-Hold(S902,S1056)
	S1059= GPRegs[rT]=a+{16{SIMM[0]},SIMM}                      GPRegs-Write(S1030,S1032,S1058)
	S1061= [A]=a                                                A-Hold(S906,S1060)
	S1063= [B]={16{SIMM[0]},SIMM}                               B-Hold(S908,S1062)
	S1065= [ALUOut]=a+{16{SIMM[0]},SIMM}                        ALUOut-Hold(S910,S1064)
	S1067= XER[SO]=so                                           XER-SO-Hold(S912,S1066)
	S1070= XER[CA]=Carry(a+{16{SIMM[0]},SIMM})                  XER-CA-Write(S1036,S1069)
	S1072= [DR4bit]={Compare0(a+{16{SIMM[0]},SIMM}),so}         DR4bit-Hold(S916,S1071)
	S1074= [CAReg]=Carry(a+{16{SIMM[0]},SIMM})                  CAReg-Hold(S918,S1073)
	S1077= CRRegs[CR0]={Compare0(a+{16{SIMM[0]},SIMM}),so}      CRRegs-CR0-Write(S1034,S1076)

