
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,1104}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S8= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S9= PC.Out=addr                                             PC-Out(S1)
	S10= XER.SOOut=so                                           XER-SO-Out(S5)
	S11= PIDReg.Out=>IMMU.PID                                   Premise(F6)
	S12= IMMU.PID=pid                                           Path(S6,S11)
	S13= PC.Out=>IMMU.IEA                                       Premise(F7)
	S14= IMMU.IEA=addr                                          Path(S9,S13)
	S15= IMMU.Addr={pid,addr}                                   IMMU-Search(S12,S14)
	S16= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S12,S14)
	S17= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S18= IAddrReg.In={pid,addr}                                 Path(S15,S17)
	S19= IMMU.Hit=>IMMUHitReg.In                                Premise(F9)
	S20= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S16,S19)
	S21= PC.Out=>ICache.IEA                                     Premise(F10)
	S22= ICache.IEA=addr                                        Path(S9,S21)
	S23= ICache.Hit=ICacheHit(addr)                             ICache-Search(S22)
	S24= ICache.Out=>ICacheReg.In                               Premise(F11)
	S25= ICache.Hit=>ICacheHitReg.In                            Premise(F12)
	S26= ICacheHitReg.In=ICacheHit(addr)                        Path(S23,S25)
	S27= IMMUHitReg.Out=>CU.IMemHit                             Premise(F13)
	S28= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F14)
	S29= IAddrReg.Out=>IMem.RAddr                               Premise(F15)
	S30= IMem.Out=>IRMux.MemData                                Premise(F16)
	S31= ICacheReg.Out=>IRMux.CacheData                         Premise(F17)
	S32= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F18)
	S33= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F19)
	S34= IRMux.Out=>IR.In                                       Premise(F20)
	S35= IMem.MEM8WordOut=>ICache.WData                         Premise(F21)
	S36= PC.Out=>ICache.IEA                                     Premise(F22)
	S37= IR.Out0_5=>CU.Op                                       Premise(F23)
	S38= IR.Out11_15=>GPRegs.RReg1                              Premise(F24)
	S39= IR.Out16_20=>GPRegs.RReg2                              Premise(F25)
	S40= IR.Out21_31=>CU.IRFunc                                 Premise(F26)
	S41= GPRegs.Rdata1=>A.In                                    Premise(F27)
	S42= GPRegs.Rdata2=>B.In                                    Premise(F28)
	S43= A.Out=>ALU.A                                           Premise(F29)
	S44= B.Out=>ALU.B                                           Premise(F30)
	S45= CU.Func=>ALU.Func                                      Premise(F31)
	S46= ALU.Out=>ALUOut.In                                     Premise(F32)
	S47= ALU.OV=>OVReg.In                                       Premise(F33)
	S48= XER.SOOut=>ORGate.A                                    Premise(F34)
	S49= ORGate.A=so                                            Path(S10,S48)
	S50= ALU.OV=>ORGate.B                                       Premise(F35)
	S51= ORGate.Out=>DR1bit.In                                  Premise(F36)
	S52= IR.Out6_10=>GPRegs.WReg                                Premise(F37)
	S53= ALUOut.Out=>GPRegs.WData                               Premise(F38)
	S54= DR1bit.Out=>XER.SOIn                                   Premise(F39)
	S55= OVReg.Out=>XER.OVIn                                    Premise(F40)
	S56= CtrlPIDReg=0                                           Premise(F41)
	S57= [PIDReg]=pid                                           PIDReg-Hold(S0,S56)
	S58= CtrlIMMU=0                                             Premise(F42)
	S59= CtrlPC=0                                               Premise(F43)
	S60= CtrlPCInc=0                                            Premise(F44)
	S61= PC[Out]=addr                                           PC-Hold(S1,S59,S60)
	S62= CtrlIAddrReg=1                                         Premise(F45)
	S63= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S18,S62)
	S64= CtrlIMMUHitReg=1                                       Premise(F46)
	S65= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S20,S64)
	S66= CtrlICache=0                                           Premise(F47)
	S67= CtrlICacheReg=1                                        Premise(F48)
	S68= CtrlICacheHitReg=1                                     Premise(F49)
	S69= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S26,S68)
	S70= CtrlIMem=0                                             Premise(F50)
	S71= IMem[{pid,addr}]={31,rT,rA,rB,1104}                    IMem-Hold(S2,S70)
	S72= CtrlIRMux=0                                            Premise(F51)
	S73= CtrlIR=0                                               Premise(F52)
	S74= CtrlGPRegs=0                                           Premise(F53)
	S75= GPRegs[rA]=a                                           GPRegs-Hold(S3,S74)
	S76= GPRegs[rB]=b                                           GPRegs-Hold(S4,S74)
	S77= CtrlA=0                                                Premise(F54)
	S78= CtrlB=0                                                Premise(F55)
	S79= CtrlALUOut=0                                           Premise(F56)
	S80= CtrlOVReg=0                                            Premise(F57)
	S81= CtrlXERSO=0                                            Premise(F58)
	S82= XER[SO]=so                                             XER-SO-Hold(S5,S81)
	S83= CtrlXEROV=0                                            Premise(F59)
	S84= CtrlXERCA=0                                            Premise(F60)
	S85= CtrlDR1bit=0                                           Premise(F61)

IMMU	S86= PIDReg.Out=pid                                         PIDReg-Out(S57)
	S87= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S57)
	S88= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S57)
	S89= PC.Out=addr                                            PC-Out(S61)
	S90= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S63)
	S91= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S63)
	S92= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S63)
	S93= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S65)
	S94= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S65)
	S95= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]           IMMUHitReg-Out(S65)
	S96= ICacheHitReg.Out=ICacheHit(addr)                       ICacheHitReg-Out(S69)
	S97= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]           ICacheHitReg-Out(S69)
	S98= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]           ICacheHitReg-Out(S69)
	S99= XER.SOOut=so                                           XER-SO-Out(S82)
	S100= PIDReg.Out=>IMMU.PID                                  Premise(F62)
	S101= IMMU.PID=pid                                          Path(S86,S100)
	S102= PC.Out=>IMMU.IEA                                      Premise(F63)
	S103= IMMU.IEA=addr                                         Path(S89,S102)
	S104= IMMU.Addr={pid,addr}                                  IMMU-Search(S101,S103)
	S105= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S101,S103)
	S106= IMMU.Addr=>IAddrReg.In                                Premise(F64)
	S107= IAddrReg.In={pid,addr}                                Path(S104,S106)
	S108= IMMU.Hit=>IMMUHitReg.In                               Premise(F65)
	S109= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S105,S108)
	S110= PC.Out=>ICache.IEA                                    Premise(F66)
	S111= ICache.IEA=addr                                       Path(S89,S110)
	S112= ICache.Hit=ICacheHit(addr)                            ICache-Search(S111)
	S113= ICache.Out=>ICacheReg.In                              Premise(F67)
	S114= ICache.Hit=>ICacheHitReg.In                           Premise(F68)
	S115= ICacheHitReg.In=ICacheHit(addr)                       Path(S112,S114)
	S116= IMMUHitReg.Out=>CU.IMemHit                            Premise(F69)
	S117= CU.IMemHit=IMMUHit(pid,addr)                          Path(S93,S116)
	S118= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F70)
	S119= CU.ICacheHit=ICacheHit(addr)                          Path(S96,S118)
	S120= IAddrReg.Out=>IMem.RAddr                              Premise(F71)
	S121= IMem.RAddr={pid,addr}                                 Path(S90,S120)
	S122= IMem.Out={31,rT,rA,rB,1104}                           IMem-Read(S121,S71)
	S123= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S121,S71)
	S124= IMem.Out=>IRMux.MemData                               Premise(F72)
	S125= IRMux.MemData={31,rT,rA,rB,1104}                      Path(S122,S124)
	S126= IRMux.Out={31,rT,rA,rB,1104}                          IRMux-Select(S125)
	S127= ICacheReg.Out=>IRMux.CacheData                        Premise(F73)
	S128= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F74)
	S129= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S93,S128)
	S130= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F75)
	S131= IRMux.CacheSel=ICacheHit(addr)                        Path(S96,S130)
	S132= IRMux.Out=>IR.In                                      Premise(F76)
	S133= IR.In={31,rT,rA,rB,1104}                              Path(S126,S132)
	S134= IMem.MEM8WordOut=>ICache.WData                        Premise(F77)
	S135= ICache.WData=IMemGet8Word({pid,addr})                 Path(S123,S134)
	S136= PC.Out=>ICache.IEA                                    Premise(F78)
	S137= IR.Out0_5=>CU.Op                                      Premise(F79)
	S138= IR.Out11_15=>GPRegs.RReg1                             Premise(F80)
	S139= IR.Out16_20=>GPRegs.RReg2                             Premise(F81)
	S140= IR.Out21_31=>CU.IRFunc                                Premise(F82)
	S141= GPRegs.Rdata1=>A.In                                   Premise(F83)
	S142= GPRegs.Rdata2=>B.In                                   Premise(F84)
	S143= A.Out=>ALU.A                                          Premise(F85)
	S144= B.Out=>ALU.B                                          Premise(F86)
	S145= CU.Func=>ALU.Func                                     Premise(F87)
	S146= ALU.Out=>ALUOut.In                                    Premise(F88)
	S147= ALU.OV=>OVReg.In                                      Premise(F89)
	S148= XER.SOOut=>ORGate.A                                   Premise(F90)
	S149= ORGate.A=so                                           Path(S99,S148)
	S150= ALU.OV=>ORGate.B                                      Premise(F91)
	S151= ORGate.Out=>DR1bit.In                                 Premise(F92)
	S152= IR.Out6_10=>GPRegs.WReg                               Premise(F93)
	S153= ALUOut.Out=>GPRegs.WData                              Premise(F94)
	S154= DR1bit.Out=>XER.SOIn                                  Premise(F95)
	S155= OVReg.Out=>XER.OVIn                                   Premise(F96)
	S156= CtrlPIDReg=0                                          Premise(F97)
	S157= [PIDReg]=pid                                          PIDReg-Hold(S57,S156)
	S158= CtrlIMMU=0                                            Premise(F98)
	S159= CtrlPC=0                                              Premise(F99)
	S160= CtrlPCInc=1                                           Premise(F100)
	S161= PC[Out]=addr+4                                        PC-Inc(S61,S159,S160)
	S162= PC[CIA]=addr                                          PC-Inc(S61,S159,S160)
	S163= CtrlIAddrReg=0                                        Premise(F101)
	S164= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S63,S163)
	S165= CtrlIMMUHitReg=0                                      Premise(F102)
	S166= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S65,S165)
	S167= CtrlICache=1                                          Premise(F103)
	S168= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S111,S135,S167)
	S169= CtrlICacheReg=0                                       Premise(F104)
	S170= CtrlICacheHitReg=0                                    Premise(F105)
	S171= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S69,S170)
	S172= CtrlIMem=0                                            Premise(F106)
	S173= IMem[{pid,addr}]={31,rT,rA,rB,1104}                   IMem-Hold(S71,S172)
	S174= CtrlIRMux=0                                           Premise(F107)
	S175= CtrlIR=1                                              Premise(F108)
	S176= [IR]={31,rT,rA,rB,1104}                               IR-Write(S133,S175)
	S177= CtrlGPRegs=0                                          Premise(F109)
	S178= GPRegs[rA]=a                                          GPRegs-Hold(S75,S177)
	S179= GPRegs[rB]=b                                          GPRegs-Hold(S76,S177)
	S180= CtrlA=0                                               Premise(F110)
	S181= CtrlB=0                                               Premise(F111)
	S182= CtrlALUOut=0                                          Premise(F112)
	S183= CtrlOVReg=0                                           Premise(F113)
	S184= CtrlXERSO=0                                           Premise(F114)
	S185= XER[SO]=so                                            XER-SO-Hold(S82,S184)
	S186= CtrlXEROV=0                                           Premise(F115)
	S187= CtrlXERCA=0                                           Premise(F116)
	S188= CtrlDR1bit=0                                          Premise(F117)

ID	S189= PIDReg.Out=pid                                        PIDReg-Out(S157)
	S190= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S157)
	S191= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S157)
	S192= PC.Out=addr+4                                         PC-Out(S161)
	S193= PC.CIA=addr                                           PC-Out(S162)
	S194= PC.CIA31_28=addr[31:28]                               PC-Out(S162)
	S195= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S164)
	S196= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S164)
	S197= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S164)
	S198= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S166)
	S199= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S166)
	S200= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S166)
	S201= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S171)
	S202= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S171)
	S203= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S171)
	S204= IR.Out0_5=31                                          IR-Out(S176)
	S205= IR.Out6_10=rT                                         IR-Out(S176)
	S206= IR.Out11_15=rA                                        IR-Out(S176)
	S207= IR.Out16_20=rB                                        IR-Out(S176)
	S208= IR.Out21_31=1104                                      IR-Out(S176)
	S209= XER.SOOut=so                                          XER-SO-Out(S185)
	S210= PIDReg.Out=>IMMU.PID                                  Premise(F118)
	S211= IMMU.PID=pid                                          Path(S189,S210)
	S212= PC.Out=>IMMU.IEA                                      Premise(F119)
	S213= IMMU.IEA=addr+4                                       Path(S192,S212)
	S214= IMMU.Addr={pid,addr+4}                                IMMU-Search(S211,S213)
	S215= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S211,S213)
	S216= IMMU.Addr=>IAddrReg.In                                Premise(F120)
	S217= IAddrReg.In={pid,addr+4}                              Path(S214,S216)
	S218= IMMU.Hit=>IMMUHitReg.In                               Premise(F121)
	S219= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S215,S218)
	S220= PC.Out=>ICache.IEA                                    Premise(F122)
	S221= ICache.IEA=addr+4                                     Path(S192,S220)
	S222= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S221)
	S223= ICache.Out=>ICacheReg.In                              Premise(F123)
	S224= ICache.Hit=>ICacheHitReg.In                           Premise(F124)
	S225= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S222,S224)
	S226= IMMUHitReg.Out=>CU.IMemHit                            Premise(F125)
	S227= CU.IMemHit=IMMUHit(pid,addr)                          Path(S198,S226)
	S228= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F126)
	S229= CU.ICacheHit=ICacheHit(addr)                          Path(S201,S228)
	S230= IAddrReg.Out=>IMem.RAddr                              Premise(F127)
	S231= IMem.RAddr={pid,addr}                                 Path(S195,S230)
	S232= IMem.Out={31,rT,rA,rB,1104}                           IMem-Read(S231,S173)
	S233= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S231,S173)
	S234= IMem.Out=>IRMux.MemData                               Premise(F128)
	S235= IRMux.MemData={31,rT,rA,rB,1104}                      Path(S232,S234)
	S236= IRMux.Out={31,rT,rA,rB,1104}                          IRMux-Select(S235)
	S237= ICacheReg.Out=>IRMux.CacheData                        Premise(F129)
	S238= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F130)
	S239= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S198,S238)
	S240= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F131)
	S241= IRMux.CacheSel=ICacheHit(addr)                        Path(S201,S240)
	S242= IRMux.Out=>IR.In                                      Premise(F132)
	S243= IR.In={31,rT,rA,rB,1104}                              Path(S236,S242)
	S244= IMem.MEM8WordOut=>ICache.WData                        Premise(F133)
	S245= ICache.WData=IMemGet8Word({pid,addr})                 Path(S233,S244)
	S246= PC.Out=>ICache.IEA                                    Premise(F134)
	S247= IR.Out0_5=>CU.Op                                      Premise(F135)
	S248= CU.Op=31                                              Path(S204,S247)
	S249= IR.Out11_15=>GPRegs.RReg1                             Premise(F136)
	S250= GPRegs.RReg1=rA                                       Path(S206,S249)
	S251= GPRegs.Rdata1=a                                       GPRegs-Read(S250,S178)
	S252= IR.Out16_20=>GPRegs.RReg2                             Premise(F137)
	S253= GPRegs.RReg2=rB                                       Path(S207,S252)
	S254= GPRegs.Rdata2=b                                       GPRegs-Read(S253,S179)
	S255= IR.Out21_31=>CU.IRFunc                                Premise(F138)
	S256= CU.IRFunc=1104                                        Path(S208,S255)
	S257= CU.Func=alu_subf                                      CU(S248,S256)
	S258= GPRegs.Rdata1=>A.In                                   Premise(F139)
	S259= A.In=a                                                Path(S251,S258)
	S260= GPRegs.Rdata2=>B.In                                   Premise(F140)
	S261= B.In=b                                                Path(S254,S260)
	S262= A.Out=>ALU.A                                          Premise(F141)
	S263= B.Out=>ALU.B                                          Premise(F142)
	S264= CU.Func=>ALU.Func                                     Premise(F143)
	S265= ALU.Func=alu_subf                                     Path(S257,S264)
	S266= ALU.Out=>ALUOut.In                                    Premise(F144)
	S267= ALU.OV=>OVReg.In                                      Premise(F145)
	S268= XER.SOOut=>ORGate.A                                   Premise(F146)
	S269= ORGate.A=so                                           Path(S209,S268)
	S270= ALU.OV=>ORGate.B                                      Premise(F147)
	S271= ORGate.Out=>DR1bit.In                                 Premise(F148)
	S272= IR.Out6_10=>GPRegs.WReg                               Premise(F149)
	S273= GPRegs.WReg=rT                                        Path(S205,S272)
	S274= ALUOut.Out=>GPRegs.WData                              Premise(F150)
	S275= DR1bit.Out=>XER.SOIn                                  Premise(F151)
	S276= OVReg.Out=>XER.OVIn                                   Premise(F152)
	S277= CtrlPIDReg=0                                          Premise(F153)
	S278= [PIDReg]=pid                                          PIDReg-Hold(S157,S277)
	S279= CtrlIMMU=0                                            Premise(F154)
	S280= CtrlPC=0                                              Premise(F155)
	S281= CtrlPCInc=0                                           Premise(F156)
	S282= PC[CIA]=addr                                          PC-Hold(S162,S281)
	S283= PC[Out]=addr+4                                        PC-Hold(S161,S280,S281)
	S284= CtrlIAddrReg=0                                        Premise(F157)
	S285= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S164,S284)
	S286= CtrlIMMUHitReg=0                                      Premise(F158)
	S287= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S166,S286)
	S288= CtrlICache=0                                          Premise(F159)
	S289= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S168,S288)
	S290= CtrlICacheReg=0                                       Premise(F160)
	S291= CtrlICacheHitReg=0                                    Premise(F161)
	S292= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S171,S291)
	S293= CtrlIMem=0                                            Premise(F162)
	S294= IMem[{pid,addr}]={31,rT,rA,rB,1104}                   IMem-Hold(S173,S293)
	S295= CtrlIRMux=0                                           Premise(F163)
	S296= CtrlIR=0                                              Premise(F164)
	S297= [IR]={31,rT,rA,rB,1104}                               IR-Hold(S176,S296)
	S298= CtrlGPRegs=0                                          Premise(F165)
	S299= GPRegs[rA]=a                                          GPRegs-Hold(S178,S298)
	S300= GPRegs[rB]=b                                          GPRegs-Hold(S179,S298)
	S301= CtrlA=1                                               Premise(F166)
	S302= [A]=a                                                 A-Write(S259,S301)
	S303= CtrlB=1                                               Premise(F167)
	S304= [B]=b                                                 B-Write(S261,S303)
	S305= CtrlALUOut=0                                          Premise(F168)
	S306= CtrlOVReg=0                                           Premise(F169)
	S307= CtrlXERSO=0                                           Premise(F170)
	S308= XER[SO]=so                                            XER-SO-Hold(S185,S307)
	S309= CtrlXEROV=0                                           Premise(F171)
	S310= CtrlXERCA=0                                           Premise(F172)
	S311= CtrlDR1bit=0                                          Premise(F173)

EX	S312= PIDReg.Out=pid                                        PIDReg-Out(S278)
	S313= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S278)
	S314= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S278)
	S315= PC.CIA=addr                                           PC-Out(S282)
	S316= PC.CIA31_28=addr[31:28]                               PC-Out(S282)
	S317= PC.Out=addr+4                                         PC-Out(S283)
	S318= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S285)
	S319= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S285)
	S320= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S285)
	S321= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S287)
	S322= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S287)
	S323= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S287)
	S324= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S292)
	S325= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S292)
	S326= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S292)
	S327= IR.Out0_5=31                                          IR-Out(S297)
	S328= IR.Out6_10=rT                                         IR-Out(S297)
	S329= IR.Out11_15=rA                                        IR-Out(S297)
	S330= IR.Out16_20=rB                                        IR-Out(S297)
	S331= IR.Out21_31=1104                                      IR-Out(S297)
	S332= A.Out=a                                               A-Out(S302)
	S333= A.Out26_31=a[26:31]                                   A-Out(S302)
	S334= A.Out30_31=a[30:31]                                   A-Out(S302)
	S335= B.Out=b                                               B-Out(S304)
	S336= B.Out26_31=b[26:31]                                   B-Out(S304)
	S337= B.Out30_31=b[30:31]                                   B-Out(S304)
	S338= XER.SOOut=so                                          XER-SO-Out(S308)
	S339= PIDReg.Out=>IMMU.PID                                  Premise(F174)
	S340= IMMU.PID=pid                                          Path(S312,S339)
	S341= PC.Out=>IMMU.IEA                                      Premise(F175)
	S342= IMMU.IEA=addr+4                                       Path(S317,S341)
	S343= IMMU.Addr={pid,addr+4}                                IMMU-Search(S340,S342)
	S344= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S340,S342)
	S345= IMMU.Addr=>IAddrReg.In                                Premise(F176)
	S346= IAddrReg.In={pid,addr+4}                              Path(S343,S345)
	S347= IMMU.Hit=>IMMUHitReg.In                               Premise(F177)
	S348= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S344,S347)
	S349= PC.Out=>ICache.IEA                                    Premise(F178)
	S350= ICache.IEA=addr+4                                     Path(S317,S349)
	S351= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S350)
	S352= ICache.Out=>ICacheReg.In                              Premise(F179)
	S353= ICache.Hit=>ICacheHitReg.In                           Premise(F180)
	S354= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S351,S353)
	S355= IMMUHitReg.Out=>CU.IMemHit                            Premise(F181)
	S356= CU.IMemHit=IMMUHit(pid,addr)                          Path(S321,S355)
	S357= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F182)
	S358= CU.ICacheHit=ICacheHit(addr)                          Path(S324,S357)
	S359= IAddrReg.Out=>IMem.RAddr                              Premise(F183)
	S360= IMem.RAddr={pid,addr}                                 Path(S318,S359)
	S361= IMem.Out={31,rT,rA,rB,1104}                           IMem-Read(S360,S294)
	S362= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S360,S294)
	S363= IMem.Out=>IRMux.MemData                               Premise(F184)
	S364= IRMux.MemData={31,rT,rA,rB,1104}                      Path(S361,S363)
	S365= IRMux.Out={31,rT,rA,rB,1104}                          IRMux-Select(S364)
	S366= ICacheReg.Out=>IRMux.CacheData                        Premise(F185)
	S367= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F186)
	S368= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S321,S367)
	S369= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F187)
	S370= IRMux.CacheSel=ICacheHit(addr)                        Path(S324,S369)
	S371= IRMux.Out=>IR.In                                      Premise(F188)
	S372= IR.In={31,rT,rA,rB,1104}                              Path(S365,S371)
	S373= IMem.MEM8WordOut=>ICache.WData                        Premise(F189)
	S374= ICache.WData=IMemGet8Word({pid,addr})                 Path(S362,S373)
	S375= PC.Out=>ICache.IEA                                    Premise(F190)
	S376= IR.Out0_5=>CU.Op                                      Premise(F191)
	S377= CU.Op=31                                              Path(S327,S376)
	S378= IR.Out11_15=>GPRegs.RReg1                             Premise(F192)
	S379= GPRegs.RReg1=rA                                       Path(S329,S378)
	S380= GPRegs.Rdata1=a                                       GPRegs-Read(S379,S299)
	S381= IR.Out16_20=>GPRegs.RReg2                             Premise(F193)
	S382= GPRegs.RReg2=rB                                       Path(S330,S381)
	S383= GPRegs.Rdata2=b                                       GPRegs-Read(S382,S300)
	S384= IR.Out21_31=>CU.IRFunc                                Premise(F194)
	S385= CU.IRFunc=1104                                        Path(S331,S384)
	S386= CU.Func=alu_subf                                      CU(S377,S385)
	S387= GPRegs.Rdata1=>A.In                                   Premise(F195)
	S388= A.In=a                                                Path(S380,S387)
	S389= GPRegs.Rdata2=>B.In                                   Premise(F196)
	S390= B.In=b                                                Path(S383,S389)
	S391= A.Out=>ALU.A                                          Premise(F197)
	S392= ALU.A=a                                               Path(S332,S391)
	S393= B.Out=>ALU.B                                          Premise(F198)
	S394= ALU.B=b                                               Path(S335,S393)
	S395= CU.Func=>ALU.Func                                     Premise(F199)
	S396= ALU.Func=alu_subf                                     Path(S386,S395)
	S397= ALU.Out=b-a                                           ALU(S392,S394)
	S398= ALU.CMP=Compare0(b-a)                                 ALU(S392,S394)
	S399= ALU.OV=OverFlow(b-a)                                  ALU(S392,S394)
	S400= ALU.CA=Carry(b-a)                                     ALU(S392,S394)
	S401= ALU.Out=>ALUOut.In                                    Premise(F200)
	S402= ALUOut.In=b-a                                         Path(S397,S401)
	S403= ALU.OV=>OVReg.In                                      Premise(F201)
	S404= OVReg.In=OverFlow(b-a)                                Path(S399,S403)
	S405= XER.SOOut=>ORGate.A                                   Premise(F202)
	S406= ORGate.A=so                                           Path(S338,S405)
	S407= ALU.OV=>ORGate.B                                      Premise(F203)
	S408= ORGate.B=OverFlow(b-a)                                Path(S399,S407)
	S409= ORGate.Out=so|OverFlow(b-a)                           ORGate(S406,S408)
	S410= ORGate.Out=>DR1bit.In                                 Premise(F204)
	S411= DR1bit.In=so|OverFlow(b-a)                            Path(S409,S410)
	S412= IR.Out6_10=>GPRegs.WReg                               Premise(F205)
	S413= GPRegs.WReg=rT                                        Path(S328,S412)
	S414= ALUOut.Out=>GPRegs.WData                              Premise(F206)
	S415= DR1bit.Out=>XER.SOIn                                  Premise(F207)
	S416= OVReg.Out=>XER.OVIn                                   Premise(F208)
	S417= CtrlPIDReg=0                                          Premise(F209)
	S418= [PIDReg]=pid                                          PIDReg-Hold(S278,S417)
	S419= CtrlIMMU=0                                            Premise(F210)
	S420= CtrlPC=0                                              Premise(F211)
	S421= CtrlPCInc=0                                           Premise(F212)
	S422= PC[CIA]=addr                                          PC-Hold(S282,S421)
	S423= PC[Out]=addr+4                                        PC-Hold(S283,S420,S421)
	S424= CtrlIAddrReg=0                                        Premise(F213)
	S425= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S285,S424)
	S426= CtrlIMMUHitReg=0                                      Premise(F214)
	S427= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S287,S426)
	S428= CtrlICache=0                                          Premise(F215)
	S429= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S289,S428)
	S430= CtrlICacheReg=0                                       Premise(F216)
	S431= CtrlICacheHitReg=0                                    Premise(F217)
	S432= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S292,S431)
	S433= CtrlIMem=0                                            Premise(F218)
	S434= IMem[{pid,addr}]={31,rT,rA,rB,1104}                   IMem-Hold(S294,S433)
	S435= CtrlIRMux=0                                           Premise(F219)
	S436= CtrlIR=0                                              Premise(F220)
	S437= [IR]={31,rT,rA,rB,1104}                               IR-Hold(S297,S436)
	S438= CtrlGPRegs=0                                          Premise(F221)
	S439= GPRegs[rA]=a                                          GPRegs-Hold(S299,S438)
	S440= GPRegs[rB]=b                                          GPRegs-Hold(S300,S438)
	S441= CtrlA=0                                               Premise(F222)
	S442= [A]=a                                                 A-Hold(S302,S441)
	S443= CtrlB=0                                               Premise(F223)
	S444= [B]=b                                                 B-Hold(S304,S443)
	S445= CtrlALUOut=1                                          Premise(F224)
	S446= [ALUOut]=b-a                                          ALUOut-Write(S402,S445)
	S447= CtrlOVReg=1                                           Premise(F225)
	S448= [OVReg]=OverFlow(b-a)                                 OVReg-Write(S404,S447)
	S449= CtrlXERSO=0                                           Premise(F226)
	S450= XER[SO]=so                                            XER-SO-Hold(S308,S449)
	S451= CtrlXEROV=0                                           Premise(F227)
	S452= CtrlXERCA=0                                           Premise(F228)
	S453= CtrlDR1bit=1                                          Premise(F229)
	S454= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Write(S411,S453)

MEM	S455= PIDReg.Out=pid                                        PIDReg-Out(S418)
	S456= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S418)
	S457= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S418)
	S458= PC.CIA=addr                                           PC-Out(S422)
	S459= PC.CIA31_28=addr[31:28]                               PC-Out(S422)
	S460= PC.Out=addr+4                                         PC-Out(S423)
	S461= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S425)
	S462= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S425)
	S463= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S425)
	S464= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S427)
	S465= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S427)
	S466= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S427)
	S467= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S432)
	S468= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S432)
	S469= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S432)
	S470= IR.Out0_5=31                                          IR-Out(S437)
	S471= IR.Out6_10=rT                                         IR-Out(S437)
	S472= IR.Out11_15=rA                                        IR-Out(S437)
	S473= IR.Out16_20=rB                                        IR-Out(S437)
	S474= IR.Out21_31=1104                                      IR-Out(S437)
	S475= A.Out=a                                               A-Out(S442)
	S476= A.Out26_31=a[26:31]                                   A-Out(S442)
	S477= A.Out30_31=a[30:31]                                   A-Out(S442)
	S478= B.Out=b                                               B-Out(S444)
	S479= B.Out26_31=b[26:31]                                   B-Out(S444)
	S480= B.Out30_31=b[30:31]                                   B-Out(S444)
	S481= ALUOut.Out=b-a                                        ALUOut-Out(S446)
	S482= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S446)
	S483= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S446)
	S484= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S448)
	S485= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S448)
	S486= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S448)
	S487= XER.SOOut=so                                          XER-SO-Out(S450)
	S488= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S454)
	S489= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S454)
	S490= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S454)
	S491= PIDReg.Out=>IMMU.PID                                  Premise(F230)
	S492= IMMU.PID=pid                                          Path(S455,S491)
	S493= PC.Out=>IMMU.IEA                                      Premise(F231)
	S494= IMMU.IEA=addr+4                                       Path(S460,S493)
	S495= IMMU.Addr={pid,addr+4}                                IMMU-Search(S492,S494)
	S496= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S492,S494)
	S497= IMMU.Addr=>IAddrReg.In                                Premise(F232)
	S498= IAddrReg.In={pid,addr+4}                              Path(S495,S497)
	S499= IMMU.Hit=>IMMUHitReg.In                               Premise(F233)
	S500= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S496,S499)
	S501= PC.Out=>ICache.IEA                                    Premise(F234)
	S502= ICache.IEA=addr+4                                     Path(S460,S501)
	S503= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S502)
	S504= ICache.Out=>ICacheReg.In                              Premise(F235)
	S505= ICache.Hit=>ICacheHitReg.In                           Premise(F236)
	S506= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S503,S505)
	S507= IMMUHitReg.Out=>CU.IMemHit                            Premise(F237)
	S508= CU.IMemHit=IMMUHit(pid,addr)                          Path(S464,S507)
	S509= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F238)
	S510= CU.ICacheHit=ICacheHit(addr)                          Path(S467,S509)
	S511= IAddrReg.Out=>IMem.RAddr                              Premise(F239)
	S512= IMem.RAddr={pid,addr}                                 Path(S461,S511)
	S513= IMem.Out={31,rT,rA,rB,1104}                           IMem-Read(S512,S434)
	S514= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S512,S434)
	S515= IMem.Out=>IRMux.MemData                               Premise(F240)
	S516= IRMux.MemData={31,rT,rA,rB,1104}                      Path(S513,S515)
	S517= IRMux.Out={31,rT,rA,rB,1104}                          IRMux-Select(S516)
	S518= ICacheReg.Out=>IRMux.CacheData                        Premise(F241)
	S519= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F242)
	S520= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S464,S519)
	S521= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F243)
	S522= IRMux.CacheSel=ICacheHit(addr)                        Path(S467,S521)
	S523= IRMux.Out=>IR.In                                      Premise(F244)
	S524= IR.In={31,rT,rA,rB,1104}                              Path(S517,S523)
	S525= IMem.MEM8WordOut=>ICache.WData                        Premise(F245)
	S526= ICache.WData=IMemGet8Word({pid,addr})                 Path(S514,S525)
	S527= PC.Out=>ICache.IEA                                    Premise(F246)
	S528= IR.Out0_5=>CU.Op                                      Premise(F247)
	S529= CU.Op=31                                              Path(S470,S528)
	S530= IR.Out11_15=>GPRegs.RReg1                             Premise(F248)
	S531= GPRegs.RReg1=rA                                       Path(S472,S530)
	S532= GPRegs.Rdata1=a                                       GPRegs-Read(S531,S439)
	S533= IR.Out16_20=>GPRegs.RReg2                             Premise(F249)
	S534= GPRegs.RReg2=rB                                       Path(S473,S533)
	S535= GPRegs.Rdata2=b                                       GPRegs-Read(S534,S440)
	S536= IR.Out21_31=>CU.IRFunc                                Premise(F250)
	S537= CU.IRFunc=1104                                        Path(S474,S536)
	S538= CU.Func=alu_subf                                      CU(S529,S537)
	S539= GPRegs.Rdata1=>A.In                                   Premise(F251)
	S540= A.In=a                                                Path(S532,S539)
	S541= GPRegs.Rdata2=>B.In                                   Premise(F252)
	S542= B.In=b                                                Path(S535,S541)
	S543= A.Out=>ALU.A                                          Premise(F253)
	S544= ALU.A=a                                               Path(S475,S543)
	S545= B.Out=>ALU.B                                          Premise(F254)
	S546= ALU.B=b                                               Path(S478,S545)
	S547= CU.Func=>ALU.Func                                     Premise(F255)
	S548= ALU.Func=alu_subf                                     Path(S538,S547)
	S549= ALU.Out=b-a                                           ALU(S544,S546)
	S550= ALU.CMP=Compare0(b-a)                                 ALU(S544,S546)
	S551= ALU.OV=OverFlow(b-a)                                  ALU(S544,S546)
	S552= ALU.CA=Carry(b-a)                                     ALU(S544,S546)
	S553= ALU.Out=>ALUOut.In                                    Premise(F256)
	S554= ALUOut.In=b-a                                         Path(S549,S553)
	S555= ALU.OV=>OVReg.In                                      Premise(F257)
	S556= OVReg.In=OverFlow(b-a)                                Path(S551,S555)
	S557= XER.SOOut=>ORGate.A                                   Premise(F258)
	S558= ORGate.A=so                                           Path(S487,S557)
	S559= ALU.OV=>ORGate.B                                      Premise(F259)
	S560= ORGate.B=OverFlow(b-a)                                Path(S551,S559)
	S561= ORGate.Out=so|OverFlow(b-a)                           ORGate(S558,S560)
	S562= ORGate.Out=>DR1bit.In                                 Premise(F260)
	S563= DR1bit.In=so|OverFlow(b-a)                            Path(S561,S562)
	S564= IR.Out6_10=>GPRegs.WReg                               Premise(F261)
	S565= GPRegs.WReg=rT                                        Path(S471,S564)
	S566= ALUOut.Out=>GPRegs.WData                              Premise(F262)
	S567= GPRegs.WData=b-a                                      Path(S481,S566)
	S568= DR1bit.Out=>XER.SOIn                                  Premise(F263)
	S569= XER.SOIn=so|OverFlow(b-a)                             Path(S488,S568)
	S570= OVReg.Out=>XER.OVIn                                   Premise(F264)
	S571= XER.OVIn=OverFlow(b-a)                                Path(S484,S570)
	S572= CtrlPIDReg=0                                          Premise(F265)
	S573= [PIDReg]=pid                                          PIDReg-Hold(S418,S572)
	S574= CtrlIMMU=0                                            Premise(F266)
	S575= CtrlPC=0                                              Premise(F267)
	S576= CtrlPCInc=0                                           Premise(F268)
	S577= PC[CIA]=addr                                          PC-Hold(S422,S576)
	S578= PC[Out]=addr+4                                        PC-Hold(S423,S575,S576)
	S579= CtrlIAddrReg=0                                        Premise(F269)
	S580= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S425,S579)
	S581= CtrlIMMUHitReg=0                                      Premise(F270)
	S582= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S427,S581)
	S583= CtrlICache=0                                          Premise(F271)
	S584= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S429,S583)
	S585= CtrlICacheReg=0                                       Premise(F272)
	S586= CtrlICacheHitReg=0                                    Premise(F273)
	S587= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S432,S586)
	S588= CtrlIMem=0                                            Premise(F274)
	S589= IMem[{pid,addr}]={31,rT,rA,rB,1104}                   IMem-Hold(S434,S588)
	S590= CtrlIRMux=0                                           Premise(F275)
	S591= CtrlIR=0                                              Premise(F276)
	S592= [IR]={31,rT,rA,rB,1104}                               IR-Hold(S437,S591)
	S593= CtrlGPRegs=0                                          Premise(F277)
	S594= GPRegs[rA]=a                                          GPRegs-Hold(S439,S593)
	S595= GPRegs[rB]=b                                          GPRegs-Hold(S440,S593)
	S596= CtrlA=0                                               Premise(F278)
	S597= [A]=a                                                 A-Hold(S442,S596)
	S598= CtrlB=0                                               Premise(F279)
	S599= [B]=b                                                 B-Hold(S444,S598)
	S600= CtrlALUOut=0                                          Premise(F280)
	S601= [ALUOut]=b-a                                          ALUOut-Hold(S446,S600)
	S602= CtrlOVReg=0                                           Premise(F281)
	S603= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S448,S602)
	S604= CtrlXERSO=0                                           Premise(F282)
	S605= XER[SO]=so                                            XER-SO-Hold(S450,S604)
	S606= CtrlXEROV=0                                           Premise(F283)
	S607= CtrlXERCA=0                                           Premise(F284)
	S608= CtrlDR1bit=0                                          Premise(F285)
	S609= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S454,S608)

DMMU1	S610= PIDReg.Out=pid                                        PIDReg-Out(S573)
	S611= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S573)
	S612= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S573)
	S613= PC.CIA=addr                                           PC-Out(S577)
	S614= PC.CIA31_28=addr[31:28]                               PC-Out(S577)
	S615= PC.Out=addr+4                                         PC-Out(S578)
	S616= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S580)
	S617= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S580)
	S618= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S580)
	S619= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S582)
	S620= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S582)
	S621= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S582)
	S622= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S587)
	S623= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S587)
	S624= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S587)
	S625= IR.Out0_5=31                                          IR-Out(S592)
	S626= IR.Out6_10=rT                                         IR-Out(S592)
	S627= IR.Out11_15=rA                                        IR-Out(S592)
	S628= IR.Out16_20=rB                                        IR-Out(S592)
	S629= IR.Out21_31=1104                                      IR-Out(S592)
	S630= A.Out=a                                               A-Out(S597)
	S631= A.Out26_31=a[26:31]                                   A-Out(S597)
	S632= A.Out30_31=a[30:31]                                   A-Out(S597)
	S633= B.Out=b                                               B-Out(S599)
	S634= B.Out26_31=b[26:31]                                   B-Out(S599)
	S635= B.Out30_31=b[30:31]                                   B-Out(S599)
	S636= ALUOut.Out=b-a                                        ALUOut-Out(S601)
	S637= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S601)
	S638= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S601)
	S639= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S603)
	S640= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S603)
	S641= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S603)
	S642= XER.SOOut=so                                          XER-SO-Out(S605)
	S643= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S609)
	S644= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S609)
	S645= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S609)
	S646= PIDReg.Out=>IMMU.PID                                  Premise(F286)
	S647= IMMU.PID=pid                                          Path(S610,S646)
	S648= PC.Out=>IMMU.IEA                                      Premise(F287)
	S649= IMMU.IEA=addr+4                                       Path(S615,S648)
	S650= IMMU.Addr={pid,addr+4}                                IMMU-Search(S647,S649)
	S651= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S647,S649)
	S652= IMMU.Addr=>IAddrReg.In                                Premise(F288)
	S653= IAddrReg.In={pid,addr+4}                              Path(S650,S652)
	S654= IMMU.Hit=>IMMUHitReg.In                               Premise(F289)
	S655= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S651,S654)
	S656= PC.Out=>ICache.IEA                                    Premise(F290)
	S657= ICache.IEA=addr+4                                     Path(S615,S656)
	S658= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S657)
	S659= ICache.Out=>ICacheReg.In                              Premise(F291)
	S660= ICache.Hit=>ICacheHitReg.In                           Premise(F292)
	S661= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S658,S660)
	S662= IMMUHitReg.Out=>CU.IMemHit                            Premise(F293)
	S663= CU.IMemHit=IMMUHit(pid,addr)                          Path(S619,S662)
	S664= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F294)
	S665= CU.ICacheHit=ICacheHit(addr)                          Path(S622,S664)
	S666= IAddrReg.Out=>IMem.RAddr                              Premise(F295)
	S667= IMem.RAddr={pid,addr}                                 Path(S616,S666)
	S668= IMem.Out={31,rT,rA,rB,1104}                           IMem-Read(S667,S589)
	S669= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S667,S589)
	S670= IMem.Out=>IRMux.MemData                               Premise(F296)
	S671= IRMux.MemData={31,rT,rA,rB,1104}                      Path(S668,S670)
	S672= IRMux.Out={31,rT,rA,rB,1104}                          IRMux-Select(S671)
	S673= ICacheReg.Out=>IRMux.CacheData                        Premise(F297)
	S674= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F298)
	S675= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S619,S674)
	S676= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F299)
	S677= IRMux.CacheSel=ICacheHit(addr)                        Path(S622,S676)
	S678= IRMux.Out=>IR.In                                      Premise(F300)
	S679= IR.In={31,rT,rA,rB,1104}                              Path(S672,S678)
	S680= IMem.MEM8WordOut=>ICache.WData                        Premise(F301)
	S681= ICache.WData=IMemGet8Word({pid,addr})                 Path(S669,S680)
	S682= PC.Out=>ICache.IEA                                    Premise(F302)
	S683= IR.Out0_5=>CU.Op                                      Premise(F303)
	S684= CU.Op=31                                              Path(S625,S683)
	S685= IR.Out11_15=>GPRegs.RReg1                             Premise(F304)
	S686= GPRegs.RReg1=rA                                       Path(S627,S685)
	S687= GPRegs.Rdata1=a                                       GPRegs-Read(S686,S594)
	S688= IR.Out16_20=>GPRegs.RReg2                             Premise(F305)
	S689= GPRegs.RReg2=rB                                       Path(S628,S688)
	S690= GPRegs.Rdata2=b                                       GPRegs-Read(S689,S595)
	S691= IR.Out21_31=>CU.IRFunc                                Premise(F306)
	S692= CU.IRFunc=1104                                        Path(S629,S691)
	S693= CU.Func=alu_subf                                      CU(S684,S692)
	S694= GPRegs.Rdata1=>A.In                                   Premise(F307)
	S695= A.In=a                                                Path(S687,S694)
	S696= GPRegs.Rdata2=>B.In                                   Premise(F308)
	S697= B.In=b                                                Path(S690,S696)
	S698= A.Out=>ALU.A                                          Premise(F309)
	S699= ALU.A=a                                               Path(S630,S698)
	S700= B.Out=>ALU.B                                          Premise(F310)
	S701= ALU.B=b                                               Path(S633,S700)
	S702= CU.Func=>ALU.Func                                     Premise(F311)
	S703= ALU.Func=alu_subf                                     Path(S693,S702)
	S704= ALU.Out=b-a                                           ALU(S699,S701)
	S705= ALU.CMP=Compare0(b-a)                                 ALU(S699,S701)
	S706= ALU.OV=OverFlow(b-a)                                  ALU(S699,S701)
	S707= ALU.CA=Carry(b-a)                                     ALU(S699,S701)
	S708= ALU.Out=>ALUOut.In                                    Premise(F312)
	S709= ALUOut.In=b-a                                         Path(S704,S708)
	S710= ALU.OV=>OVReg.In                                      Premise(F313)
	S711= OVReg.In=OverFlow(b-a)                                Path(S706,S710)
	S712= XER.SOOut=>ORGate.A                                   Premise(F314)
	S713= ORGate.A=so                                           Path(S642,S712)
	S714= ALU.OV=>ORGate.B                                      Premise(F315)
	S715= ORGate.B=OverFlow(b-a)                                Path(S706,S714)
	S716= ORGate.Out=so|OverFlow(b-a)                           ORGate(S713,S715)
	S717= ORGate.Out=>DR1bit.In                                 Premise(F316)
	S718= DR1bit.In=so|OverFlow(b-a)                            Path(S716,S717)
	S719= IR.Out6_10=>GPRegs.WReg                               Premise(F317)
	S720= GPRegs.WReg=rT                                        Path(S626,S719)
	S721= ALUOut.Out=>GPRegs.WData                              Premise(F318)
	S722= GPRegs.WData=b-a                                      Path(S636,S721)
	S723= DR1bit.Out=>XER.SOIn                                  Premise(F319)
	S724= XER.SOIn=so|OverFlow(b-a)                             Path(S643,S723)
	S725= OVReg.Out=>XER.OVIn                                   Premise(F320)
	S726= XER.OVIn=OverFlow(b-a)                                Path(S639,S725)
	S727= CtrlPIDReg=0                                          Premise(F321)
	S728= [PIDReg]=pid                                          PIDReg-Hold(S573,S727)
	S729= CtrlIMMU=0                                            Premise(F322)
	S730= CtrlPC=0                                              Premise(F323)
	S731= CtrlPCInc=0                                           Premise(F324)
	S732= PC[CIA]=addr                                          PC-Hold(S577,S731)
	S733= PC[Out]=addr+4                                        PC-Hold(S578,S730,S731)
	S734= CtrlIAddrReg=0                                        Premise(F325)
	S735= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S580,S734)
	S736= CtrlIMMUHitReg=0                                      Premise(F326)
	S737= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S582,S736)
	S738= CtrlICache=0                                          Premise(F327)
	S739= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S584,S738)
	S740= CtrlICacheReg=0                                       Premise(F328)
	S741= CtrlICacheHitReg=0                                    Premise(F329)
	S742= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S587,S741)
	S743= CtrlIMem=0                                            Premise(F330)
	S744= IMem[{pid,addr}]={31,rT,rA,rB,1104}                   IMem-Hold(S589,S743)
	S745= CtrlIRMux=0                                           Premise(F331)
	S746= CtrlIR=0                                              Premise(F332)
	S747= [IR]={31,rT,rA,rB,1104}                               IR-Hold(S592,S746)
	S748= CtrlGPRegs=0                                          Premise(F333)
	S749= GPRegs[rA]=a                                          GPRegs-Hold(S594,S748)
	S750= GPRegs[rB]=b                                          GPRegs-Hold(S595,S748)
	S751= CtrlA=0                                               Premise(F334)
	S752= [A]=a                                                 A-Hold(S597,S751)
	S753= CtrlB=0                                               Premise(F335)
	S754= [B]=b                                                 B-Hold(S599,S753)
	S755= CtrlALUOut=0                                          Premise(F336)
	S756= [ALUOut]=b-a                                          ALUOut-Hold(S601,S755)
	S757= CtrlOVReg=0                                           Premise(F337)
	S758= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S603,S757)
	S759= CtrlXERSO=0                                           Premise(F338)
	S760= XER[SO]=so                                            XER-SO-Hold(S605,S759)
	S761= CtrlXEROV=0                                           Premise(F339)
	S762= CtrlXERCA=0                                           Premise(F340)
	S763= CtrlDR1bit=0                                          Premise(F341)
	S764= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S609,S763)

DMMU2	S765= PIDReg.Out=pid                                        PIDReg-Out(S728)
	S766= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S728)
	S767= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S728)
	S768= PC.CIA=addr                                           PC-Out(S732)
	S769= PC.CIA31_28=addr[31:28]                               PC-Out(S732)
	S770= PC.Out=addr+4                                         PC-Out(S733)
	S771= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S735)
	S772= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S735)
	S773= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S735)
	S774= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S737)
	S775= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S737)
	S776= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S737)
	S777= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S742)
	S778= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S742)
	S779= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S742)
	S780= IR.Out0_5=31                                          IR-Out(S747)
	S781= IR.Out6_10=rT                                         IR-Out(S747)
	S782= IR.Out11_15=rA                                        IR-Out(S747)
	S783= IR.Out16_20=rB                                        IR-Out(S747)
	S784= IR.Out21_31=1104                                      IR-Out(S747)
	S785= A.Out=a                                               A-Out(S752)
	S786= A.Out26_31=a[26:31]                                   A-Out(S752)
	S787= A.Out30_31=a[30:31]                                   A-Out(S752)
	S788= B.Out=b                                               B-Out(S754)
	S789= B.Out26_31=b[26:31]                                   B-Out(S754)
	S790= B.Out30_31=b[30:31]                                   B-Out(S754)
	S791= ALUOut.Out=b-a                                        ALUOut-Out(S756)
	S792= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S756)
	S793= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S756)
	S794= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S758)
	S795= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S758)
	S796= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S758)
	S797= XER.SOOut=so                                          XER-SO-Out(S760)
	S798= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S764)
	S799= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S764)
	S800= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S764)
	S801= PIDReg.Out=>IMMU.PID                                  Premise(F342)
	S802= IMMU.PID=pid                                          Path(S765,S801)
	S803= PC.Out=>IMMU.IEA                                      Premise(F343)
	S804= IMMU.IEA=addr+4                                       Path(S770,S803)
	S805= IMMU.Addr={pid,addr+4}                                IMMU-Search(S802,S804)
	S806= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S802,S804)
	S807= IMMU.Addr=>IAddrReg.In                                Premise(F344)
	S808= IAddrReg.In={pid,addr+4}                              Path(S805,S807)
	S809= IMMU.Hit=>IMMUHitReg.In                               Premise(F345)
	S810= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S806,S809)
	S811= PC.Out=>ICache.IEA                                    Premise(F346)
	S812= ICache.IEA=addr+4                                     Path(S770,S811)
	S813= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S812)
	S814= ICache.Out=>ICacheReg.In                              Premise(F347)
	S815= ICache.Hit=>ICacheHitReg.In                           Premise(F348)
	S816= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S813,S815)
	S817= IMMUHitReg.Out=>CU.IMemHit                            Premise(F349)
	S818= CU.IMemHit=IMMUHit(pid,addr)                          Path(S774,S817)
	S819= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F350)
	S820= CU.ICacheHit=ICacheHit(addr)                          Path(S777,S819)
	S821= IAddrReg.Out=>IMem.RAddr                              Premise(F351)
	S822= IMem.RAddr={pid,addr}                                 Path(S771,S821)
	S823= IMem.Out={31,rT,rA,rB,1104}                           IMem-Read(S822,S744)
	S824= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S822,S744)
	S825= IMem.Out=>IRMux.MemData                               Premise(F352)
	S826= IRMux.MemData={31,rT,rA,rB,1104}                      Path(S823,S825)
	S827= IRMux.Out={31,rT,rA,rB,1104}                          IRMux-Select(S826)
	S828= ICacheReg.Out=>IRMux.CacheData                        Premise(F353)
	S829= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F354)
	S830= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S774,S829)
	S831= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F355)
	S832= IRMux.CacheSel=ICacheHit(addr)                        Path(S777,S831)
	S833= IRMux.Out=>IR.In                                      Premise(F356)
	S834= IR.In={31,rT,rA,rB,1104}                              Path(S827,S833)
	S835= IMem.MEM8WordOut=>ICache.WData                        Premise(F357)
	S836= ICache.WData=IMemGet8Word({pid,addr})                 Path(S824,S835)
	S837= PC.Out=>ICache.IEA                                    Premise(F358)
	S838= IR.Out0_5=>CU.Op                                      Premise(F359)
	S839= CU.Op=31                                              Path(S780,S838)
	S840= IR.Out11_15=>GPRegs.RReg1                             Premise(F360)
	S841= GPRegs.RReg1=rA                                       Path(S782,S840)
	S842= GPRegs.Rdata1=a                                       GPRegs-Read(S841,S749)
	S843= IR.Out16_20=>GPRegs.RReg2                             Premise(F361)
	S844= GPRegs.RReg2=rB                                       Path(S783,S843)
	S845= GPRegs.Rdata2=b                                       GPRegs-Read(S844,S750)
	S846= IR.Out21_31=>CU.IRFunc                                Premise(F362)
	S847= CU.IRFunc=1104                                        Path(S784,S846)
	S848= CU.Func=alu_subf                                      CU(S839,S847)
	S849= GPRegs.Rdata1=>A.In                                   Premise(F363)
	S850= A.In=a                                                Path(S842,S849)
	S851= GPRegs.Rdata2=>B.In                                   Premise(F364)
	S852= B.In=b                                                Path(S845,S851)
	S853= A.Out=>ALU.A                                          Premise(F365)
	S854= ALU.A=a                                               Path(S785,S853)
	S855= B.Out=>ALU.B                                          Premise(F366)
	S856= ALU.B=b                                               Path(S788,S855)
	S857= CU.Func=>ALU.Func                                     Premise(F367)
	S858= ALU.Func=alu_subf                                     Path(S848,S857)
	S859= ALU.Out=b-a                                           ALU(S854,S856)
	S860= ALU.CMP=Compare0(b-a)                                 ALU(S854,S856)
	S861= ALU.OV=OverFlow(b-a)                                  ALU(S854,S856)
	S862= ALU.CA=Carry(b-a)                                     ALU(S854,S856)
	S863= ALU.Out=>ALUOut.In                                    Premise(F368)
	S864= ALUOut.In=b-a                                         Path(S859,S863)
	S865= ALU.OV=>OVReg.In                                      Premise(F369)
	S866= OVReg.In=OverFlow(b-a)                                Path(S861,S865)
	S867= XER.SOOut=>ORGate.A                                   Premise(F370)
	S868= ORGate.A=so                                           Path(S797,S867)
	S869= ALU.OV=>ORGate.B                                      Premise(F371)
	S870= ORGate.B=OverFlow(b-a)                                Path(S861,S869)
	S871= ORGate.Out=so|OverFlow(b-a)                           ORGate(S868,S870)
	S872= ORGate.Out=>DR1bit.In                                 Premise(F372)
	S873= DR1bit.In=so|OverFlow(b-a)                            Path(S871,S872)
	S874= IR.Out6_10=>GPRegs.WReg                               Premise(F373)
	S875= GPRegs.WReg=rT                                        Path(S781,S874)
	S876= ALUOut.Out=>GPRegs.WData                              Premise(F374)
	S877= GPRegs.WData=b-a                                      Path(S791,S876)
	S878= DR1bit.Out=>XER.SOIn                                  Premise(F375)
	S879= XER.SOIn=so|OverFlow(b-a)                             Path(S798,S878)
	S880= OVReg.Out=>XER.OVIn                                   Premise(F376)
	S881= XER.OVIn=OverFlow(b-a)                                Path(S794,S880)
	S882= CtrlPIDReg=0                                          Premise(F377)
	S883= [PIDReg]=pid                                          PIDReg-Hold(S728,S882)
	S884= CtrlIMMU=0                                            Premise(F378)
	S885= CtrlPC=0                                              Premise(F379)
	S886= CtrlPCInc=0                                           Premise(F380)
	S887= PC[CIA]=addr                                          PC-Hold(S732,S886)
	S888= PC[Out]=addr+4                                        PC-Hold(S733,S885,S886)
	S889= CtrlIAddrReg=0                                        Premise(F381)
	S890= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S735,S889)
	S891= CtrlIMMUHitReg=0                                      Premise(F382)
	S892= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S737,S891)
	S893= CtrlICache=0                                          Premise(F383)
	S894= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S739,S893)
	S895= CtrlICacheReg=0                                       Premise(F384)
	S896= CtrlICacheHitReg=0                                    Premise(F385)
	S897= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S742,S896)
	S898= CtrlIMem=0                                            Premise(F386)
	S899= IMem[{pid,addr}]={31,rT,rA,rB,1104}                   IMem-Hold(S744,S898)
	S900= CtrlIRMux=0                                           Premise(F387)
	S901= CtrlIR=0                                              Premise(F388)
	S902= [IR]={31,rT,rA,rB,1104}                               IR-Hold(S747,S901)
	S903= CtrlGPRegs=0                                          Premise(F389)
	S904= GPRegs[rA]=a                                          GPRegs-Hold(S749,S903)
	S905= GPRegs[rB]=b                                          GPRegs-Hold(S750,S903)
	S906= CtrlA=0                                               Premise(F390)
	S907= [A]=a                                                 A-Hold(S752,S906)
	S908= CtrlB=0                                               Premise(F391)
	S909= [B]=b                                                 B-Hold(S754,S908)
	S910= CtrlALUOut=0                                          Premise(F392)
	S911= [ALUOut]=b-a                                          ALUOut-Hold(S756,S910)
	S912= CtrlOVReg=0                                           Premise(F393)
	S913= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S758,S912)
	S914= CtrlXERSO=0                                           Premise(F394)
	S915= XER[SO]=so                                            XER-SO-Hold(S760,S914)
	S916= CtrlXEROV=0                                           Premise(F395)
	S917= CtrlXERCA=0                                           Premise(F396)
	S918= CtrlDR1bit=0                                          Premise(F397)
	S919= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S764,S918)

WB	S920= PIDReg.Out=pid                                        PIDReg-Out(S883)
	S921= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S883)
	S922= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S883)
	S923= PC.CIA=addr                                           PC-Out(S887)
	S924= PC.CIA31_28=addr[31:28]                               PC-Out(S887)
	S925= PC.Out=addr+4                                         PC-Out(S888)
	S926= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S890)
	S927= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S890)
	S928= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S890)
	S929= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S892)
	S930= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S892)
	S931= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S892)
	S932= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S897)
	S933= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S897)
	S934= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S897)
	S935= IR.Out0_5=31                                          IR-Out(S902)
	S936= IR.Out6_10=rT                                         IR-Out(S902)
	S937= IR.Out11_15=rA                                        IR-Out(S902)
	S938= IR.Out16_20=rB                                        IR-Out(S902)
	S939= IR.Out21_31=1104                                      IR-Out(S902)
	S940= A.Out=a                                               A-Out(S907)
	S941= A.Out26_31=a[26:31]                                   A-Out(S907)
	S942= A.Out30_31=a[30:31]                                   A-Out(S907)
	S943= B.Out=b                                               B-Out(S909)
	S944= B.Out26_31=b[26:31]                                   B-Out(S909)
	S945= B.Out30_31=b[30:31]                                   B-Out(S909)
	S946= ALUOut.Out=b-a                                        ALUOut-Out(S911)
	S947= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S911)
	S948= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S911)
	S949= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S913)
	S950= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S913)
	S951= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S913)
	S952= XER.SOOut=so                                          XER-SO-Out(S915)
	S953= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S919)
	S954= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S919)
	S955= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S919)
	S956= PIDReg.Out=>IMMU.PID                                  Premise(F398)
	S957= IMMU.PID=pid                                          Path(S920,S956)
	S958= PC.Out=>IMMU.IEA                                      Premise(F399)
	S959= IMMU.IEA=addr+4                                       Path(S925,S958)
	S960= IMMU.Addr={pid,addr+4}                                IMMU-Search(S957,S959)
	S961= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S957,S959)
	S962= IMMU.Addr=>IAddrReg.In                                Premise(F400)
	S963= IAddrReg.In={pid,addr+4}                              Path(S960,S962)
	S964= IMMU.Hit=>IMMUHitReg.In                               Premise(F401)
	S965= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S961,S964)
	S966= PC.Out=>ICache.IEA                                    Premise(F402)
	S967= ICache.IEA=addr+4                                     Path(S925,S966)
	S968= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S967)
	S969= ICache.Out=>ICacheReg.In                              Premise(F403)
	S970= ICache.Hit=>ICacheHitReg.In                           Premise(F404)
	S971= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S968,S970)
	S972= IMMUHitReg.Out=>CU.IMemHit                            Premise(F405)
	S973= CU.IMemHit=IMMUHit(pid,addr)                          Path(S929,S972)
	S974= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F406)
	S975= CU.ICacheHit=ICacheHit(addr)                          Path(S932,S974)
	S976= IAddrReg.Out=>IMem.RAddr                              Premise(F407)
	S977= IMem.RAddr={pid,addr}                                 Path(S926,S976)
	S978= IMem.Out={31,rT,rA,rB,1104}                           IMem-Read(S977,S899)
	S979= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S977,S899)
	S980= IMem.Out=>IRMux.MemData                               Premise(F408)
	S981= IRMux.MemData={31,rT,rA,rB,1104}                      Path(S978,S980)
	S982= IRMux.Out={31,rT,rA,rB,1104}                          IRMux-Select(S981)
	S983= ICacheReg.Out=>IRMux.CacheData                        Premise(F409)
	S984= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F410)
	S985= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S929,S984)
	S986= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F411)
	S987= IRMux.CacheSel=ICacheHit(addr)                        Path(S932,S986)
	S988= IRMux.Out=>IR.In                                      Premise(F412)
	S989= IR.In={31,rT,rA,rB,1104}                              Path(S982,S988)
	S990= IMem.MEM8WordOut=>ICache.WData                        Premise(F413)
	S991= ICache.WData=IMemGet8Word({pid,addr})                 Path(S979,S990)
	S992= PC.Out=>ICache.IEA                                    Premise(F414)
	S993= IR.Out0_5=>CU.Op                                      Premise(F415)
	S994= CU.Op=31                                              Path(S935,S993)
	S995= IR.Out11_15=>GPRegs.RReg1                             Premise(F416)
	S996= GPRegs.RReg1=rA                                       Path(S937,S995)
	S997= GPRegs.Rdata1=a                                       GPRegs-Read(S996,S904)
	S998= IR.Out16_20=>GPRegs.RReg2                             Premise(F417)
	S999= GPRegs.RReg2=rB                                       Path(S938,S998)
	S1000= GPRegs.Rdata2=b                                      GPRegs-Read(S999,S905)
	S1001= IR.Out21_31=>CU.IRFunc                               Premise(F418)
	S1002= CU.IRFunc=1104                                       Path(S939,S1001)
	S1003= CU.Func=alu_subf                                     CU(S994,S1002)
	S1004= GPRegs.Rdata1=>A.In                                  Premise(F419)
	S1005= A.In=a                                               Path(S997,S1004)
	S1006= GPRegs.Rdata2=>B.In                                  Premise(F420)
	S1007= B.In=b                                               Path(S1000,S1006)
	S1008= A.Out=>ALU.A                                         Premise(F421)
	S1009= ALU.A=a                                              Path(S940,S1008)
	S1010= B.Out=>ALU.B                                         Premise(F422)
	S1011= ALU.B=b                                              Path(S943,S1010)
	S1012= CU.Func=>ALU.Func                                    Premise(F423)
	S1013= ALU.Func=alu_subf                                    Path(S1003,S1012)
	S1014= ALU.Out=b-a                                          ALU(S1009,S1011)
	S1015= ALU.CMP=Compare0(b-a)                                ALU(S1009,S1011)
	S1016= ALU.OV=OverFlow(b-a)                                 ALU(S1009,S1011)
	S1017= ALU.CA=Carry(b-a)                                    ALU(S1009,S1011)
	S1018= ALU.Out=>ALUOut.In                                   Premise(F424)
	S1019= ALUOut.In=b-a                                        Path(S1014,S1018)
	S1020= ALU.OV=>OVReg.In                                     Premise(F425)
	S1021= OVReg.In=OverFlow(b-a)                               Path(S1016,S1020)
	S1022= XER.SOOut=>ORGate.A                                  Premise(F426)
	S1023= ORGate.A=so                                          Path(S952,S1022)
	S1024= ALU.OV=>ORGate.B                                     Premise(F427)
	S1025= ORGate.B=OverFlow(b-a)                               Path(S1016,S1024)
	S1026= ORGate.Out=so|OverFlow(b-a)                          ORGate(S1023,S1025)
	S1027= ORGate.Out=>DR1bit.In                                Premise(F428)
	S1028= DR1bit.In=so|OverFlow(b-a)                           Path(S1026,S1027)
	S1029= IR.Out6_10=>GPRegs.WReg                              Premise(F429)
	S1030= GPRegs.WReg=rT                                       Path(S936,S1029)
	S1031= ALUOut.Out=>GPRegs.WData                             Premise(F430)
	S1032= GPRegs.WData=b-a                                     Path(S946,S1031)
	S1033= DR1bit.Out=>XER.SOIn                                 Premise(F431)
	S1034= XER.SOIn=so|OverFlow(b-a)                            Path(S953,S1033)
	S1035= OVReg.Out=>XER.OVIn                                  Premise(F432)
	S1036= XER.OVIn=OverFlow(b-a)                               Path(S949,S1035)
	S1037= CtrlPIDReg=0                                         Premise(F433)
	S1038= [PIDReg]=pid                                         PIDReg-Hold(S883,S1037)
	S1039= CtrlIMMU=0                                           Premise(F434)
	S1040= CtrlPC=0                                             Premise(F435)
	S1041= CtrlPCInc=0                                          Premise(F436)
	S1042= PC[CIA]=addr                                         PC-Hold(S887,S1041)
	S1043= PC[Out]=addr+4                                       PC-Hold(S888,S1040,S1041)
	S1044= CtrlIAddrReg=0                                       Premise(F437)
	S1045= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S890,S1044)
	S1046= CtrlIMMUHitReg=0                                     Premise(F438)
	S1047= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S892,S1046)
	S1048= CtrlICache=0                                         Premise(F439)
	S1049= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S894,S1048)
	S1050= CtrlICacheReg=0                                      Premise(F440)
	S1051= CtrlICacheHitReg=0                                   Premise(F441)
	S1052= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S897,S1051)
	S1053= CtrlIMem=0                                           Premise(F442)
	S1054= IMem[{pid,addr}]={31,rT,rA,rB,1104}                  IMem-Hold(S899,S1053)
	S1055= CtrlIRMux=0                                          Premise(F443)
	S1056= CtrlIR=0                                             Premise(F444)
	S1057= [IR]={31,rT,rA,rB,1104}                              IR-Hold(S902,S1056)
	S1058= CtrlGPRegs=1                                         Premise(F445)
	S1059= GPRegs[rT]=b-a                                       GPRegs-Write(S1030,S1032,S1058)
	S1060= CtrlA=0                                              Premise(F446)
	S1061= [A]=a                                                A-Hold(S907,S1060)
	S1062= CtrlB=0                                              Premise(F447)
	S1063= [B]=b                                                B-Hold(S909,S1062)
	S1064= CtrlALUOut=0                                         Premise(F448)
	S1065= [ALUOut]=b-a                                         ALUOut-Hold(S911,S1064)
	S1066= CtrlOVReg=0                                          Premise(F449)
	S1067= [OVReg]=OverFlow(b-a)                                OVReg-Hold(S913,S1066)
	S1068= CtrlXERSO=1                                          Premise(F450)
	S1069= XER[SO]=so|OverFlow(b-a)                             XER-SO-Write(S1034,S1068)
	S1070= CtrlXEROV=1                                          Premise(F451)
	S1071= XER[OV]=OverFlow(b-a)                                XER-OV-Write(S1036,S1070)
	S1072= CtrlXERCA=0                                          Premise(F452)
	S1073= CtrlDR1bit=0                                         Premise(F453)
	S1074= [DR1bit]=so|OverFlow(b-a)                            DR1bit-Hold(S919,S1073)

POST	S1038= [PIDReg]=pid                                         PIDReg-Hold(S883,S1037)
	S1042= PC[CIA]=addr                                         PC-Hold(S887,S1041)
	S1043= PC[Out]=addr+4                                       PC-Hold(S888,S1040,S1041)
	S1045= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S890,S1044)
	S1047= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S892,S1046)
	S1049= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S894,S1048)
	S1052= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S897,S1051)
	S1054= IMem[{pid,addr}]={31,rT,rA,rB,1104}                  IMem-Hold(S899,S1053)
	S1057= [IR]={31,rT,rA,rB,1104}                              IR-Hold(S902,S1056)
	S1059= GPRegs[rT]=b-a                                       GPRegs-Write(S1030,S1032,S1058)
	S1061= [A]=a                                                A-Hold(S907,S1060)
	S1063= [B]=b                                                B-Hold(S909,S1062)
	S1065= [ALUOut]=b-a                                         ALUOut-Hold(S911,S1064)
	S1067= [OVReg]=OverFlow(b-a)                                OVReg-Hold(S913,S1066)
	S1069= XER[SO]=so|OverFlow(b-a)                             XER-SO-Write(S1034,S1068)
	S1071= XER[OV]=OverFlow(b-a)                                XER-OV-Write(S1036,S1070)
	S1074= [DR1bit]=so|OverFlow(b-a)                            DR1bit-Hold(S919,S1073)

