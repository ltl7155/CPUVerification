
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,0,0,rD,0,18}                        Premise(F2)
	S3= [Lo]=lo                                                 Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= IMMU.Addr=>IAddrReg.In                                  Premise(F45)
	S7= PC.Out=>IMMU.IEA                                        Premise(F50)
	S8= IMMU.IEA=addr                                           Path(S5,S7)
	S9= CP0.ASID=>IMMU.PID                                      Premise(F51)
	S10= IMMU.PID=pid                                           Path(S4,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S10,S8)
	S12= IAddrReg.In={pid,addr}                                 Path(S11,S6)
	S13= CtrlLo=0                                               Premise(F99)
	S14= [Lo]=lo                                                Lo-Hold(S3,S13)
	S15= CtrlIAddrReg=1                                         Premise(F101)
	S16= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S15)
	S17= CtrlPC=0                                               Premise(F102)
	S18= CtrlPCInc=0                                            Premise(F103)
	S19= PC[Out]=addr                                           PC-Hold(S1,S17,S18)
	S20= CtrlIMem=0                                             Premise(F104)
	S21= IMem[{pid,addr}]={0,0,0,rD,0,18}                       IMem-Hold(S2,S20)

IMMU	S22= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S16)
	S23= PC.Out=addr                                            PC-Out(S19)
	S24= PC.Out=>ICache.IEA                                     Premise(F153)
	S25= ICache.IEA=addr                                        Path(S23,S24)
	S26= IMem.MEM8WordOut=>ICache.WData                         Premise(F155)
	S27= IAddrReg.Out=>IMem.RAddr                               Premise(F159)
	S28= IMem.RAddr={pid,addr}                                  Path(S22,S27)
	S29= IMem.Out={0,0,0,rD,0,18}                               IMem-Read(S28,S21)
	S30= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S28,S21)
	S31= ICache.WData=IMemGet8Word({pid,addr})                  Path(S30,S26)
	S32= IMem.Out=>IRMux.MemData                                Premise(F162)
	S33= IRMux.MemData={0,0,0,rD,0,18}                          Path(S29,S32)
	S34= IRMux.Out={0,0,0,rD,0,18}                              IRMux-Select2(S33)
	S35= IRMux.Out=>IR_ID.In                                    Premise(F168)
	S36= IR_ID.In={0,0,0,rD,0,18}                               Path(S34,S35)
	S37= CtrlICache=1                                           Premise(F197)
	S38= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S25,S31,S37)
	S39= CtrlIR_ID=1                                            Premise(F202)
	S40= [IR_ID]={0,0,0,rD,0,18}                                IR_ID-Write(S36,S39)
	S41= CtrlLo=0                                               Premise(F206)
	S42= [Lo]=lo                                                Lo-Hold(S14,S41)
	S43= CtrlPC=0                                               Premise(F209)
	S44= CtrlPCInc=1                                            Premise(F210)
	S45= PC[Out]=addr+4                                         PC-Inc(S19,S43,S44)

ID	S46= IR_ID.Out15_11=rD                                      IR-Out(S40)
	S47= Lo.Out=lo                                              Lo-Out(S42)
	S48= Lo.Out=>GPR.WData                                      Premise(F259)
	S49= GPR.WData=lo                                           Path(S47,S48)
	S50= IR_ID.Out15_11=>GPR.WReg                               Premise(F260)
	S51= GPR.WReg=rD                                            Path(S46,S50)
	S52= CtrlICache=0                                           Premise(F306)
	S53= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S38,S52)
	S54= CtrlGPR=1                                              Premise(F316)
	S55= GPR[rD]=lo                                             GPR-Write(S51,S49,S54)
	S56= CtrlPC=0                                               Premise(F318)
	S57= CtrlPCInc=0                                            Premise(F319)
	S58= PC[Out]=addr+4                                         PC-Hold(S45,S56,S57)

EX	S59= CtrlICache=0                                           Premise(F414)
	S60= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S53,S59)
	S61= CtrlGPR=0                                              Premise(F424)
	S62= GPR[rD]=lo                                             GPR-Hold(S55,S61)
	S63= CtrlPC=0                                               Premise(F426)
	S64= CtrlPCInc=0                                            Premise(F427)
	S65= PC[Out]=addr+4                                         PC-Hold(S58,S63,S64)

MEM	S66= CtrlICache=0                                           Premise(F522)
	S67= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S60,S66)
	S68= CtrlGPR=0                                              Premise(F532)
	S69= GPR[rD]=lo                                             GPR-Hold(S62,S68)
	S70= CtrlPC=0                                               Premise(F534)
	S71= CtrlPCInc=0                                            Premise(F535)
	S72= PC[Out]=addr+4                                         PC-Hold(S65,S70,S71)

DMMU1	S73= CtrlICache=0                                           Premise(F630)
	S74= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S67,S73)
	S75= CtrlGPR=0                                              Premise(F640)
	S76= GPR[rD]=lo                                             GPR-Hold(S69,S75)
	S77= CtrlPC=0                                               Premise(F642)
	S78= CtrlPCInc=0                                            Premise(F643)
	S79= PC[Out]=addr+4                                         PC-Hold(S72,S77,S78)

DMMU2	S80= CtrlICache=0                                           Premise(F738)
	S81= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S74,S80)
	S82= CtrlGPR=0                                              Premise(F748)
	S83= GPR[rD]=lo                                             GPR-Hold(S76,S82)
	S84= CtrlPC=0                                               Premise(F750)
	S85= CtrlPCInc=0                                            Premise(F751)
	S86= PC[Out]=addr+4                                         PC-Hold(S79,S84,S85)

WB	S87= CtrlICache=0                                           Premise(F846)
	S88= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S81,S87)
	S89= CtrlGPR=0                                              Premise(F856)
	S90= GPR[rD]=lo                                             GPR-Hold(S83,S89)
	S91= CtrlPC=0                                               Premise(F858)
	S92= CtrlPCInc=0                                            Premise(F859)
	S93= PC[Out]=addr+4                                         PC-Hold(S86,S91,S92)

POST	S88= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S81,S87)
	S90= GPR[rD]=lo                                             GPR-Hold(S83,S89)
	S93= PC[Out]=addr+4                                         PC-Hold(S86,S91,S92)

