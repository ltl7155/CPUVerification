
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                     Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= CP0.ASID=>IMMU.PID                                      Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S12= IAddrReg.In={pid,addr}                                 Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F17)
	S14= CtrlPCInc=0                                            Premise(F18)
	S15= PC[Out]=addr                                           PC-Hold(S1,S13,S14)
	S16= CtrlIAddrReg=1                                         Premise(F19)
	S17= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S16)
	S18= CtrlIMem=0                                             Premise(F23)
	S19= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                    IMem-Hold(S2,S18)
	S20= CtrlGPR=0                                              Premise(F25)
	S21= GPR[rS]=a                                              GPR-Hold(S3,S20)

IF(IMMU)	S22= PC.Out=addr                                            PC-Out(S15)
	S23= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S17)
	S24= IAddrReg.Out=>IMem.RAddr                               Premise(F28)
	S25= IMem.RAddr={pid,addr}                                  Path(S23,S24)
	S26= IMem.Out={0,rS,0,rD,hint,9}                            IMem-Read(S25,S19)
	S27= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S25,S19)
	S28= IMem.Out=>IRMux.MemData                                Premise(F29)
	S29= IRMux.MemData={0,rS,0,rD,hint,9}                       Path(S26,S28)
	S30= IRMux.Out={0,rS,0,rD,hint,9}                           IRMux-Select2(S29)
	S31= IRMux.Out=>IR.In                                       Premise(F33)
	S32= IR.In={0,rS,0,rD,hint,9}                               Path(S30,S31)
	S33= IMem.MEM8WordOut=>ICache.WData                         Premise(F34)
	S34= ICache.WData=IMemGet8Word({pid,addr})                  Path(S27,S33)
	S35= PC.Out=>ICache.IEA                                     Premise(F35)
	S36= ICache.IEA=addr                                        Path(S22,S35)
	S37= CtrlPC=0                                               Premise(F41)
	S38= CtrlPCInc=1                                            Premise(F42)
	S39= PC[Out]=addr+4                                         PC-Inc(S15,S37,S38)
	S40= CtrlICache=1                                           Premise(F44)
	S41= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S36,S34,S40)
	S42= CtrlIR=1                                               Premise(F45)
	S43= [IR]={0,rS,0,rD,hint,9}                                IR-Write(S32,S42)
	S44= CtrlGPR=0                                              Premise(F49)
	S45= GPR[rS]=a                                              GPR-Hold(S21,S44)

ID	S46= PC.Out=addr+4                                          PC-Out(S39)
	S47= IR.Out25_21=rS                                         IR-Out(S43)
	S48= IR.Out15_11=rD                                         IR-Out(S43)
	S49= IR.Out15_11=>GPR.WReg                                  Premise(F52)
	S50= GPR.WReg=rD                                            Path(S48,S49)
	S51= PC.Out=>GPR.WData                                      Premise(F53)
	S52= GPR.WData=addr+4                                       Path(S46,S51)
	S53= IR.Out25_21=>GPR.RReg1                                 Premise(F54)
	S54= GPR.RReg1=rS                                           Path(S47,S53)
	S55= GPR.Rdata1=a                                           GPR-Read(S54,S45)
	S56= GPR.Rdata1=>PC.In                                      Premise(F55)
	S57= PC.In=a                                                Path(S55,S56)
	S58= CtrlPC=1                                               Premise(F61)
	S59= CtrlPCInc=0                                            Premise(F62)
	S60= PC[Out]=a                                              PC-Write(S57,S58,S59)
	S61= CtrlICache=0                                           Premise(F64)
	S62= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S41,S61)
	S63= CtrlGPR=1                                              Premise(F69)
	S64= GPR[rD]=addr+4                                         GPR-Write(S50,S52,S63)

EX	S65= CtrlPC=0                                               Premise(F75)
	S66= CtrlPCInc=0                                            Premise(F76)
	S67= PC[Out]=a                                              PC-Hold(S60,S65,S66)
	S68= CtrlICache=0                                           Premise(F78)
	S69= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S62,S68)
	S70= CtrlGPR=0                                              Premise(F83)
	S71= GPR[rD]=addr+4                                         GPR-Hold(S64,S70)

MEM	S72= CtrlPC=0                                               Premise(F89)
	S73= CtrlPCInc=0                                            Premise(F90)
	S74= PC[Out]=a                                              PC-Hold(S67,S72,S73)
	S75= CtrlICache=0                                           Premise(F92)
	S76= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S69,S75)
	S77= CtrlGPR=0                                              Premise(F97)
	S78= GPR[rD]=addr+4                                         GPR-Hold(S71,S77)

WB	S79= CtrlPC=0                                               Premise(F131)
	S80= CtrlPCInc=0                                            Premise(F132)
	S81= PC[Out]=a                                              PC-Hold(S74,S79,S80)
	S82= CtrlICache=0                                           Premise(F134)
	S83= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S76,S82)
	S84= CtrlGPR=0                                              Premise(F139)
	S85= GPR[rD]=addr+4                                         GPR-Hold(S78,S84)

POST	S81= PC[Out]=a                                              PC-Hold(S74,S79,S80)
	S83= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S76,S82)
	S85= GPR[rD]=addr+4                                         GPR-Hold(S78,S84)

