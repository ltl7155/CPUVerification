
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rs,rt,code,50}                      Premise(F2)
	S3= GPR[rs]=a                                               Premise(F3)
	S4= GPR[rt]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PC.Out=>IMem.RAddr                                      Premise(F5)
	S8= IMem.RAddr=addr                                         Path(S6,S7)
	S9= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S10= IMem.ASID=pid                                          Path(S5,S9)
	S11= IMem.Out={0,rs,rt,code,50}                             IMem-Read(S10,S8,S2)
	S12= IMem.Out=>IR_ID.In                                     Premise(F8)
	S13= IR_ID.In={0,rs,rt,code,50}                             Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F44)
	S15= CtrlPCInc=1                                            Premise(F45)
	S16= PC[Out]=addr+4                                         PC-Inc(S1,S14,S15)
	S17= CtrlCP0=0                                              Premise(F48)
	S18= CP0[ASID]=pid                                          CP0-Hold(S0,S17)
	S19= CtrlIR_ID=1                                            Premise(F51)
	S20= [IR_ID]={0,rs,rt,code,50}                              IR_ID-Write(S13,S19)
	S21= CtrlGPR=0                                              Premise(F52)
	S22= GPR[rs]=a                                              GPR-Hold(S3,S21)
	S23= GPR[rt]=b                                              GPR-Hold(S4,S21)

ID	S24= IR_ID.Out25_21=rs                                      IR-Out(S20)
	S25= IR_ID.Out20_16=rt                                      IR-Out(S20)
	S26= IR_ID.Out25_21=>GPR.RReg1                              Premise(F69)
	S27= GPR.RReg1=rs                                           Path(S24,S26)
	S28= GPR.Rdata1=a                                           GPR-Read(S27,S22)
	S29= IR_ID.Out20_16=>GPR.RReg2                              Premise(F70)
	S30= GPR.RReg2=rt                                           Path(S25,S29)
	S31= GPR.Rdata2=b                                           GPR-Read(S30,S23)
	S32= GPR.Rdata1=>FU.InID1                                   Premise(F72)
	S33= FU.InID1=a                                             Path(S28,S32)
	S34= FU.OutID1=FU(a)                                        FU-Forward(S33)
	S35= FU.OutID1=>A_EX.In                                     Premise(F74)
	S36= A_EX.In=FU(a)                                          Path(S34,S35)
	S37= GPR.Rdata2=>FU.InID2                                   Premise(F75)
	S38= FU.InID2=b                                             Path(S31,S37)
	S39= FU.OutID2=FU(b)                                        FU-Forward(S38)
	S40= FU.OutID2=>B_EX.In                                     Premise(F77)
	S41= B_EX.In=FU(b)                                          Path(S39,S40)
	S42= CtrlPC=0                                               Premise(F100)
	S43= CtrlPCInc=0                                            Premise(F101)
	S44= PC[Out]=addr+4                                         PC-Hold(S16,S42,S43)
	S45= CtrlCP0=0                                              Premise(F104)
	S46= CP0[ASID]=pid                                          CP0-Hold(S18,S45)
	S47= CtrlA_EX=1                                             Premise(F109)
	S48= [A_EX]=FU(a)                                           A_EX-Write(S36,S47)
	S49= CtrlB_EX=1                                             Premise(F110)
	S50= [B_EX]=FU(b)                                           B_EX-Write(S41,S49)

EX	S51= A_EX.Out=FU(a)                                         A_EX-Out(S48)
	S52= B_EX.Out=FU(b)                                         B_EX-Out(S50)
	S53= A_EX.Out=>CMPU.A                                       Premise(F140)
	S54= CMPU.A=FU(a)                                           Path(S51,S53)
	S55= B_EX.Out=>CMPU.B                                       Premise(F141)
	S56= CMPU.B=FU(b)                                           Path(S52,S55)
	S57= CMPU.lt=CompareS(FU(a),FU(b))                          CMPU-CMPS(S54,S56)
	S58= CMPU.lt=>ConditionReg_MEM.In                           Premise(F143)
	S59= ConditionReg_MEM.In=CompareS(FU(a),FU(b))              Path(S57,S58)
	S60= CtrlPC=0                                               Premise(F158)
	S61= CtrlPCInc=0                                            Premise(F159)
	S62= PC[Out]=addr+4                                         PC-Hold(S44,S60,S61)
	S63= CtrlCP0=0                                              Premise(F162)
	S64= CP0[ASID]=pid                                          CP0-Hold(S46,S63)
	S65= CtrlConditionReg_MEM=1                                 Premise(F170)
	S66= [ConditionReg_MEM]=CompareS(FU(a),FU(b))               ConditionReg_MEM-Write(S59,S65)

MEM	S67= PC.Out=addr+4                                          PC-Out(S62)
	S68= CP0.ASID=pid                                           CP0-Read-ASID(S64)
	S69= ConditionReg_MEM.Out=CompareS(FU(a),FU(b))             ConditionReg_MEM-Out(S66)
	S70= PC.Out=>CP0.EPCIn                                      Premise(F205)
	S71= CP0.EPCIn=addr+4                                       Path(S67,S70)
	S72= CP0.ExCodeIn=5'h0d                                     Premise(F206)
	S73= CP0.ASID=>PIDReg.In                                    Premise(F208)
	S74= PIDReg.In=pid                                          Path(S68,S73)
	S75= ConditionReg_MEM.Out=>ConditionReg_WB.In               Premise(F211)
	S76= ConditionReg_WB.In=CompareS(FU(a),FU(b))               Path(S69,S75)
	S77= CtrlEPCIn=1                                            Premise(F221)
	S78= CP0[EPC]=addr+4                                        CP0-Write-EPC(S71,S77)
	S79= CtrlExCodeIn=1                                         Premise(F222)
	S80= CP0[ExCode]=5'h0d                                      CP0-Write-ExCode(S72,S79)
	S81= CtrlPIDReg=1                                           Premise(F230)
	S82= [PIDReg]=pid                                           PIDReg-Write(S74,S81)
	S83= CtrlConditionReg_WB=1                                  Premise(F232)
	S84= [ConditionReg_WB]=CompareS(FU(a),FU(b))                ConditionReg_WB-Write(S76,S83)

WB	S85= CtrlCP0=0                                              Premise(F277)
	S86= CP0[EPC]=addr+4                                        CP0-Hold(S78,S85)
	S87= CP0[ExCode]=5'h0d                                      CP0-Hold(S80,S85)
	S88= CtrlPIDReg=0                                           Premise(F287)
	S89= [PIDReg]=pid                                           PIDReg-Hold(S82,S88)
	S90= CtrlConditionReg_WB=0                                  Premise(F289)
	S91= [ConditionReg_WB]=CompareS(FU(a),FU(b))                ConditionReg_WB-Hold(S84,S90)

POST	S86= CP0[EPC]=addr+4                                        CP0-Hold(S78,S85)
	S87= CP0[ExCode]=5'h0d                                      CP0-Hold(S80,S85)
	S89= [PIDReg]=pid                                           PIDReg-Hold(S82,S88)
	S91= [ConditionReg_WB]=CompareS(FU(a),FU(b))                ConditionReg_WB-Hold(S84,S90)

