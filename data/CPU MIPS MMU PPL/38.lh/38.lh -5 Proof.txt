
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= ICache[addr]={33,rS,rT,offset}                          Premise(F3)

IF	S3= PC.Out=addr                                             PC-Out(S1)
	S4= PC.Out=>ICache.IEA                                      Premise(F78)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={33,rS,rT,offset}                            ICache-Search(S5,S2)
	S7= ICache.Out=>IR_ID.In                                    Premise(F86)
	S8= IR_ID.In={33,rS,rT,offset}                              Path(S6,S7)
	S9= CtrlCP0=0                                               Premise(F138)
	S10= CP0[ASID]=pid                                          CP0-Hold(S0,S9)
	S11= CtrlIR_ID=1                                            Premise(F147)
	S12= [IR_ID]={33,rS,rT,offset}                              IR_ID-Write(S8,S11)
	S13= CtrlPC=0                                               Premise(F153)
	S14= CtrlPCInc=1                                            Premise(F154)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= GPR[rS]=base                                           Premise(F158)

ID	S17= IR_ID.Out={33,rS,rT,offset}                            IR-Out(S12)
	S18= IR_ID.Out25_21=rS                                      IR-Out(S12)
	S19= IR_ID.Out15_0=offset                                   IR-Out(S12)
	S20= FU.OutID1=>A_EX.In                                     Premise(F319)
	S21= IMMEXT.Out=>B_EX.In                                    Premise(F320)
	S22= GPR.Rdata1=>FU.InID1                                   Premise(F378)
	S23= IR_ID.Out25_21=>GPR.RReg1                              Premise(F384)
	S24= GPR.RReg1=rS                                           Path(S18,S23)
	S25= GPR.Rdata1=base                                        GPR-Read(S24,S16)
	S26= FU.InID1=base                                          Path(S25,S22)
	S27= FU.OutID1=FU(base)                                     FU-Forward(S26)
	S28= A_EX.In=FU(base)                                       Path(S27,S20)
	S29= IR_ID.Out15_0=>IMMEXT.In                               Premise(F390)
	S30= IMMEXT.In=offset                                       Path(S19,S29)
	S31= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S30)
	S32= B_EX.In={16{offset[15]},offset}                        Path(S31,S21)
	S33= IR_ID.Out=>IR_EX.In                                    Premise(F395)
	S34= IR_EX.In={33,rS,rT,offset}                             Path(S17,S33)
	S35= CtrlA_EX=1                                             Premise(F426)
	S36= [A_EX]=FU(base)                                        A_EX-Write(S28,S35)
	S37= CtrlB_EX=1                                             Premise(F427)
	S38= [B_EX]={16{offset[15]},offset}                         B_EX-Write(S32,S37)
	S39= CtrlCP0=0                                              Premise(F448)
	S40= CP0[ASID]=pid                                          CP0-Hold(S10,S39)
	S41= CtrlIR_EX=1                                            Premise(F456)
	S42= [IR_EX]={33,rS,rT,offset}                              IR_EX-Write(S34,S41)
	S43= CtrlPC=0                                               Premise(F463)
	S44= CtrlPCInc=0                                            Premise(F464)
	S45= PC[Out]=addr+4                                         PC-Hold(S15,S43,S44)

EX	S46= A_EX.Out=FU(base)                                      A_EX-Out(S36)
	S47= B_EX.Out={16{offset[15]},offset}                       B_EX-Out(S38)
	S48= IR_EX.Out={33,rS,rT,offset}                            IR_EX-Out(S42)
	S49= A_EX.Out=>ALU.A                                        Premise(F468)
	S50= ALU.A=FU(base)                                         Path(S46,S49)
	S51= B_EX.Out=>ALU.B                                        Premise(F469)
	S52= ALU.B={16{offset[15]},offset}                          Path(S47,S51)
	S53= ALU.Out=FU(base)+{16{offset[15]},offset}               ALU(S50,S52)
	S54= ALU.Out=>ALUOut_MEM.In                                 Premise(F473)
	S55= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}         Path(S53,S54)
	S56= IR_EX.Out=>IR_MEM.In                                   Premise(F553)
	S57= IR_MEM.In={33,rS,rT,offset}                            Path(S48,S56)
	S58= CtrlALUOut_MEM=1                                       Premise(F583)
	S59= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}          ALUOut_MEM-Write(S55,S58)
	S60= CtrlCP0=0                                              Premise(F603)
	S61= CP0[ASID]=pid                                          CP0-Hold(S40,S60)
	S62= CtrlIR_MEM=1                                           Premise(F614)
	S63= [IR_MEM]={33,rS,rT,offset}                             IR_MEM-Write(S57,S62)
	S64= CtrlPC=0                                               Premise(F618)
	S65= CtrlPCInc=0                                            Premise(F619)
	S66= PC[Out]=addr+4                                         PC-Hold(S45,S64,S65)
	S67= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         Premise(F623)

MEM	S68= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}        ALUOut_MEM-Out(S59)
	S69= CP0.ASID=pid                                           CP0-Read-ASID(S61)
	S70= IR_MEM.Out={33,rS,rT,offset}                           IR_MEM-Out(S63)
	S71= ALUOut_MEM.Out=>ALUOut_DMMU1.In                        Premise(F627)
	S72= ALUOut_DMMU1.In=FU(base)+{16{offset[15]},offset}       Path(S68,S71)
	S73= DMMU.Addr=>DAddrReg_DMMU1.In                           Premise(F662)
	S74= ALUOut_MEM.Out=>DMMU.IEA                               Premise(F668)
	S75= DMMU.IEA=FU(base)+{16{offset[15]},offset}              Path(S68,S74)
	S76= CP0.ASID=>DMMU.PID                                     Premise(F670)
	S77= DMMU.PID=pid                                           Path(S69,S76)
	S78= DMMU.Addr={pid,FU(base)+{16{offset[15]},offset}}       DMMU-Search(S77,S75)
	S79= DAddrReg_DMMU1.In={pid,FU(base)+{16{offset[15]},offset}}Path(S78,S73)
	S80= IR_MEM.Out=>IR_DMMU1.In                                Premise(F704)
	S81= IR_DMMU1.In={33,rS,rT,offset}                          Path(S70,S80)
	S82= CtrlALUOut_DMMU1=1                                     Premise(F740)
	S83= [ALUOut_DMMU1]=FU(base)+{16{offset[15]},offset}        ALUOut_DMMU1-Write(S72,S82)
	S84= CtrlDAddrReg_DMMU1=1                                   Premise(F751)
	S85= [DAddrReg_DMMU1]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Write(S79,S84)
	S86= CtrlDMem=0                                             Premise(F755)
	S87= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S67,S86)
	S88= CtrlIR_DMMU1=1                                         Premise(F765)
	S89= [IR_DMMU1]={33,rS,rT,offset}                           IR_DMMU1-Write(S81,S88)
	S90= CtrlPC=0                                               Premise(F774)
	S91= CtrlPCInc=0                                            Premise(F775)
	S92= PC[Out]=addr+4                                         PC-Hold(S66,S90,S91)

DMMU1	S93= ALUOut_DMMU1.Out=FU(base)+{16{offset[15]},offset}      ALUOut_DMMU1-Out(S83)
	S94= DAddrReg_DMMU1.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Out(S85)
	S95= IR_DMMU1.Out={33,rS,rT,offset}                         IR_DMMU1-Out(S89)
	S96= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                      Premise(F782)
	S97= ALUOut_DMMU2.In=FU(base)+{16{offset[15]},offset}       Path(S93,S96)
	S98= DAddrReg_DMMU1.Out=>DAddrReg_DMMU2.In                  Premise(F817)
	S99= DAddrReg_DMMU2.In={pid,FU(base)+{16{offset[15]},offset}}Path(S94,S98)
	S100= IR_DMMU1.Out=>IR_DMMU2.In                             Premise(F859)
	S101= IR_DMMU2.In={33,rS,rT,offset}                         Path(S95,S100)
	S102= CtrlALUOut_DMMU2=1                                    Premise(F895)
	S103= [ALUOut_DMMU2]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU2-Write(S97,S102)
	S104= CtrlDAddrReg_DMMU2=1                                  Premise(F906)
	S105= [DAddrReg_DMMU2]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Write(S99,S104)
	S106= CtrlDMem=0                                            Premise(F909)
	S107= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S87,S106)
	S108= CtrlIR_DMMU2=1                                        Premise(F920)
	S109= [IR_DMMU2]={33,rS,rT,offset}                          IR_DMMU2-Write(S101,S108)
	S110= CtrlPC=0                                              Premise(F928)
	S111= CtrlPCInc=0                                           Premise(F929)
	S112= PC[Out]=addr+4                                        PC-Hold(S92,S110,S111)

DMMU2	S113= ALUOut_DMMU2.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU2-Out(S103)
	S114= DAddrReg_DMMU2.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Out(S105)
	S115= IR_DMMU2.Out={33,rS,rT,offset}                        IR_DMMU2-Out(S109)
	S116= ALUOut_DMMU2.Out=>ALUOut_WB.In                        Premise(F938)
	S117= ALUOut_WB.In=FU(base)+{16{offset[15]},offset}         Path(S113,S116)
	S118= ALUOut_DMMU2.Out=>DCache.IEA                          Premise(F972)
	S119= DCache.IEA=FU(base)+{16{offset[15]},offset}           Path(S113,S118)
	S120= DMem.MEM8WordOut=>DCache.WData                        Premise(F974)
	S121= DAddrReg_DMMU2.Out=>DMem.RAddr                        Premise(F982)
	S122= DMem.RAddr={pid,FU(base)+{16{offset[15]},offset}}     Path(S114,S121)
	S123= DMem.Out=>DR_WB.In                                    Premise(F985)
	S124= IR_DMMU2.Out=>IR_WB.In                                Premise(F1018)
	S125= IR_WB.In={33,rS,rT,offset}                            Path(S115,S124)
	S126= CtrlALUOut_WB=1                                       Premise(F1050)
	S127= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}          ALUOut_WB-Write(S117,S126)
	S128= CtrlDCache=1                                          Premise(F1055)
	S129= CtrlDMem=0                                            Premise(F1063)
	S130= CtrlDMem8Word=0                                       Premise(F1064)
	S131= DMem.Out=a                                            DMem-Read(S122,S107,S129,S130)
	S132= DR_WB.In=a                                            Path(S131,S123)
	S133= DMem.MEM8WordOut=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DMem-Read(S122,S107,S129,S130)
	S134= DCache.WData=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})Path(S133,S120)
	S135= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Write8Word(S119,S134,S128)
	S136= CtrlDR_WB=1                                           Premise(F1072)
	S137= [DR_WB]=a                                             DR_WB-Write(S132,S136)
	S138= CtrlIR_WB=1                                           Premise(F1079)
	S139= [IR_WB]={33,rS,rT,offset}                             IR_WB-Write(S125,S138)
	S140= CtrlPC=0                                              Premise(F1082)
	S141= CtrlPCInc=0                                           Premise(F1083)
	S142= PC[Out]=addr+4                                        PC-Hold(S112,S140,S141)

WB	S143= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S127)
	S144= DR_WB.Out=a                                           DR_WB-Out(S137)
	S145= IR_WB.Out20_16=rT                                     IR-Out(S139)
	S146= MemDataSelL.Out=>GPR.WData                            Premise(F1158)
	S147= IR_WB.Out20_16=>GPR.WReg                              Premise(F1159)
	S148= GPR.WReg=rT                                           Path(S145,S147)
	S149= ALUOut_WB.Out1_0=>MemDataSelL.Addr                    Premise(F1173)
	S150= MemDataSelL.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S143,S149)
	S151= DR_WB.Out=>MemDataSelL.In                             Premise(F1175)
	S152= MemDataSelL.In=a                                      Path(S144,S151)
	S153= MemDataSelL.Out={16{a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8][15]},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}MemDataSelL(S152,S150)
	S154= GPR.WData={16{a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8][15]},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}Path(S153,S146)
	S155= CtrlDCache=0                                          Premise(F1210)
	S156= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S135,S155)
	S157= CtrlGPR=1                                             Premise(F1235)
	S158= GPR[rT]={16{a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8][15]},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S148,S154,S157)
	S159= CtrlPC=0                                              Premise(F1237)
	S160= CtrlPCInc=0                                           Premise(F1238)
	S161= PC[Out]=addr+4                                        PC-Hold(S142,S159,S160)

POST	S156= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S135,S155)
	S158= GPR[rT]={16{a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8][15]},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S148,S154,S157)
	S161= PC[Out]=addr+4                                        PC-Hold(S142,S159,S160)

