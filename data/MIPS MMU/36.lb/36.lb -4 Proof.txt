
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= ICache[addr]={32,rS,rT,offset}                          Premise(F3)
	S3= GPR[rS]=base                                            Premise(F4)
	S4= DMem[{pid,base+{16{offset[15]},offset}}]=a              Premise(F5)

IF	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>ICache.IEA                                      Premise(F11)
	S7= ICache.IEA=addr                                         Path(S5,S6)
	S8= ICache.Out={32,rS,rT,offset}                            ICache-Search(S7,S2)
	S9= ICache.Out=>IR.In                                       Premise(F12)
	S10= IR.In={32,rS,rT,offset}                                Path(S8,S9)
	S11= CtrlCP0=0                                              Premise(F16)
	S12= CP0[ASID]=pid                                          CP0-Hold(S0,S11)
	S13= CtrlPC=0                                               Premise(F20)
	S14= CtrlPCInc=1                                            Premise(F21)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR=1                                               Premise(F24)
	S17= [IR]={32,rS,rT,offset}                                 IR-Write(S10,S16)
	S18= CtrlGPR=0                                              Premise(F28)
	S19= GPR[rS]=base                                           GPR-Hold(S3,S18)
	S20= CtrlDMem=0                                             Premise(F37)
	S21= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S4,S20)

ID	S22= IR.Out25_21=rS                                         IR-Out(S17)
	S23= IR.Out15_0=offset                                      IR-Out(S17)
	S24= IR.Out25_21=>GPR.RReg1                                 Premise(F64)
	S25= GPR.RReg1=rS                                           Path(S22,S24)
	S26= GPR.Rdata1=base                                        GPR-Read(S25,S19)
	S27= IR.Out15_0=>IMMEXT.In                                  Premise(F65)
	S28= IMMEXT.In=offset                                       Path(S23,S27)
	S29= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S28)
	S30= GPR.Rdata1=>A.In                                       Premise(F66)
	S31= A.In=base                                              Path(S26,S30)
	S32= IMMEXT.Out=>B.In                                       Premise(F67)
	S33= B.In={16{offset[15]},offset}                           Path(S29,S32)
	S34= CtrlCP0=0                                              Premise(F69)
	S35= CP0[ASID]=pid                                          CP0-Hold(S12,S34)
	S36= CtrlPC=0                                               Premise(F73)
	S37= CtrlPCInc=0                                            Premise(F74)
	S38= PC[Out]=addr+4                                         PC-Hold(S15,S36,S37)
	S39= CtrlIR=0                                               Premise(F77)
	S40= [IR]={32,rS,rT,offset}                                 IR-Hold(S17,S39)
	S41= CtrlA=1                                                Premise(F82)
	S42= [A]=base                                               A-Write(S31,S41)
	S43= CtrlB=1                                                Premise(F83)
	S44= [B]={16{offset[15]},offset}                            B-Write(S33,S43)
	S45= CtrlDMem=0                                             Premise(F90)
	S46= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S21,S45)

EX	S47= A.Out=base                                             A-Out(S42)
	S48= B.Out={16{offset[15]},offset}                          B-Out(S44)
	S49= A.Out=>ALU.A                                           Premise(F92)
	S50= ALU.A=base                                             Path(S47,S49)
	S51= B.Out=>ALU.B                                           Premise(F93)
	S52= ALU.B={16{offset[15]},offset}                          Path(S48,S51)
	S53= ALU.Out=base+{16{offset[15]},offset}                   ALU(S50,S52)
	S54= ALU.Out=>ALUOut.In                                     Premise(F95)
	S55= ALUOut.In=base+{16{offset[15]},offset}                 Path(S53,S54)
	S56= CtrlCP0=0                                              Premise(F97)
	S57= CP0[ASID]=pid                                          CP0-Hold(S35,S56)
	S58= CtrlPC=0                                               Premise(F101)
	S59= CtrlPCInc=0                                            Premise(F102)
	S60= PC[Out]=addr+4                                         PC-Hold(S38,S58,S59)
	S61= CtrlIR=0                                               Premise(F105)
	S62= [IR]={32,rS,rT,offset}                                 IR-Hold(S40,S61)
	S63= CtrlALUOut=1                                           Premise(F112)
	S64= [ALUOut]=base+{16{offset[15]},offset}                  ALUOut-Write(S55,S63)
	S65= CtrlDMem=0                                             Premise(F118)
	S66= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S46,S65)

MEM	S67= CP0.ASID=pid                                           CP0-Read-ASID(S57)
	S68= ALUOut.Out=base+{16{offset[15]},offset}                ALUOut-Out(S64)
	S69= CP0.ASID=>DMMU.PID                                     Premise(F120)
	S70= DMMU.PID=pid                                           Path(S67,S69)
	S71= ALUOut.Out=>DMMU.IEA                                   Premise(F121)
	S72= DMMU.IEA=base+{16{offset[15]},offset}                  Path(S68,S71)
	S73= DMMU.Addr={pid,base+{16{offset[15]},offset}}           DMMU-Search(S70,S72)
	S74= DMMU.Addr=>DAddrReg.In                                 Premise(F122)
	S75= DAddrReg.In={pid,base+{16{offset[15]},offset}}         Path(S73,S74)
	S76= CtrlCP0=0                                              Premise(F129)
	S77= CP0[ASID]=pid                                          CP0-Hold(S57,S76)
	S78= CtrlPC=0                                               Premise(F133)
	S79= CtrlPCInc=0                                            Premise(F134)
	S80= PC[Out]=addr+4                                         PC-Hold(S60,S78,S79)
	S81= CtrlIR=0                                               Premise(F137)
	S82= [IR]={32,rS,rT,offset}                                 IR-Hold(S62,S81)
	S83= CtrlALUOut=0                                           Premise(F144)
	S84= [ALUOut]=base+{16{offset[15]},offset}                  ALUOut-Hold(S64,S83)
	S85= CtrlDAddrReg=1                                         Premise(F146)
	S86= [DAddrReg]={pid,base+{16{offset[15]},offset}}          DAddrReg-Write(S75,S85)
	S87= CtrlDMem=0                                             Premise(F150)
	S88= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S66,S87)

MEM(DMMU1)	S89= CP0.ASID=pid                                           CP0-Read-ASID(S77)
	S90= DCache.RLineEA=DCacheRLineEA()                         DCache-WriteBack()
	S91= DCache.RLineData=DCacheRLineData()                     DCache-WriteBack()
	S92= CP0.ASID=>DMMU.PID                                     Premise(F156)
	S93= DMMU.PID=pid                                           Path(S89,S92)
	S94= DCache.RLineEA=>DMMU.IEAR                              Premise(F157)
	S95= DMMU.IEAR=DCacheRLineEA()                              Path(S90,S94)
	S96= DMMU.AddrR={pid,DCacheRLineEA()}                       DMMU-RSearch(S93,S95)
	S97= DMMU.AddrR=>DMem.MEM8WordWAddr                         Premise(F158)
	S98= DMem.MEM8WordWAddr={pid,DCacheRLineEA()}               Path(S96,S97)
	S99= DCache.RLineData=>DMem.MEM8WordWData                   Premise(F159)
	S100= DMem.MEM8WordWData=DCacheRLineData()                  Path(S91,S99)
	S101= CtrlPC=0                                              Premise(F165)
	S102= CtrlPCInc=0                                           Premise(F166)
	S103= PC[Out]=addr+4                                        PC-Hold(S80,S101,S102)
	S104= CtrlIR=0                                              Premise(F169)
	S105= [IR]={32,rS,rT,offset}                                IR-Hold(S82,S104)
	S106= CtrlALUOut=0                                          Premise(F176)
	S107= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S84,S106)
	S108= CtrlDAddrReg=0                                        Premise(F178)
	S109= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S86,S108)
	S110= CtrlDMem=0                                            Premise(F182)
	S111= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S88,S110)
	S112= CtrlDMem8Word=1                                       Premise(F183)
	S113= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Write8Word(S98,S100,S112)

MEM(DMMU2)	S114= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S107)
	S115= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S109)
	S116= ALUOut.Out=>DCache.IEA                                Premise(F184)
	S117= DCache.IEA=base+{16{offset[15]},offset}               Path(S114,S116)
	S118= DAddrReg.Out=>DMem.RAddr                              Premise(F185)
	S119= DMem.RAddr={pid,base+{16{offset[15]},offset}}         Path(S115,S118)
	S120= DMem.MEM8WordOut=>DCache.WData                        Premise(F186)
	S121= DMem.Out=>DR.In                                       Premise(F187)
	S122= CtrlPC=0                                              Premise(F193)
	S123= CtrlPCInc=0                                           Premise(F194)
	S124= PC[Out]=addr+4                                        PC-Hold(S103,S122,S123)
	S125= CtrlIR=0                                              Premise(F197)
	S126= [IR]={32,rS,rT,offset}                                IR-Hold(S105,S125)
	S127= CtrlALUOut=0                                          Premise(F204)
	S128= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S107,S127)
	S129= CtrlDCache=1                                          Premise(F207)
	S130= CtrlDR=1                                              Premise(F209)
	S131= CtrlDMem=0                                            Premise(F210)
	S132= CtrlDMem8Word=0                                       Premise(F211)
	S133= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S113,S132)
	S134= DMem.Out=a                                            DMem-Read(S119,S111,S131,S132)
	S135= DR.In=a                                               Path(S134,S121)
	S136= [DR]=a                                                DR-Write(S135,S130)
	S137= DMem.MEM8WordOut=DMemGet8Word({pid,base+{16{offset[15]},offset}})DMem-Read(S119,S111,S131,S132)
	S138= DCache.WData=DMemGet8Word({pid,base+{16{offset[15]},offset}})Path(S137,S120)
	S139= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Write8Word(S117,S138,S129)

WB	S140= IR.Out20_16=rT                                        IR-Out(S126)
	S141= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S128)
	S142= DR.Out=a                                              DR-Out(S136)
	S143= IR.Out20_16=>GPR.WReg                                 Premise(F212)
	S144= GPR.WReg=rT                                           Path(S140,S143)
	S145= DR.Out=>MemDataSelL.In                                Premise(F213)
	S146= MemDataSelL.In=a                                      Path(S142,S145)
	S147= ALUOut.Out1_0=>MemDataSelL.Addr                       Premise(F214)
	S148= MemDataSelL.Addr={base+{16{offset[15]},offset}}[1:0]  Path(S141,S147)
	S149= MemDataSelL.Out={24{a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8][7]},a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8]}MemDataSelL(S146,S148)
	S150= MemDataSelL.Out=>GPR.WData                            Premise(F216)
	S151= GPR.WData={24{a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8][7]},a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8]}Path(S149,S150)
	S152= CtrlPC=0                                              Premise(F222)
	S153= CtrlPCInc=0                                           Premise(F223)
	S154= PC[Out]=addr+4                                        PC-Hold(S124,S152,S153)
	S155= CtrlGPR=1                                             Premise(F230)
	S156= GPR[rT]={24{a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8][7]},a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S144,S151,S155)
	S157= CtrlDCache=0                                          Premise(F236)
	S158= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Hold(S139,S157)
	S159= CtrlDMem8Word=0                                       Premise(F240)
	S160= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S133,S159)

POST	S154= PC[Out]=addr+4                                        PC-Hold(S124,S152,S153)
	S156= GPR[rT]={24{a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8][7]},a[{base+{16{offset[15]},offset}}[1:0]*8+7,{base+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S144,S151,S155)
	S158= DCache[line_base+{16{offset[15]},offset}]=DMemGet8Word({pid,base+{16{offset[15]},offset}})DCache-Hold(S139,S157)
	S160= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S133,S159)

