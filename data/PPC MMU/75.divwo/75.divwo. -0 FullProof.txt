
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,2007}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S8= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S9= PC.Out=addr                                             PC-Out(S1)
	S10= XER.SOOut=so                                           XER-SO-Out(S5)
	S11= PIDReg.Out=>IMMU.PID                                   Premise(F6)
	S12= IMMU.PID=pid                                           Path(S6,S11)
	S13= PC.Out=>IMMU.IEA                                       Premise(F7)
	S14= IMMU.IEA=addr                                          Path(S9,S13)
	S15= IMMU.Addr={pid,addr}                                   IMMU-Search(S12,S14)
	S16= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S12,S14)
	S17= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S18= IAddrReg.In={pid,addr}                                 Path(S15,S17)
	S19= IMMU.Hit=>IMMUHitReg.In                                Premise(F9)
	S20= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S16,S19)
	S21= PC.Out=>ICache.IEA                                     Premise(F10)
	S22= ICache.IEA=addr                                        Path(S9,S21)
	S23= ICache.Hit=ICacheHit(addr)                             ICache-Search(S22)
	S24= ICache.Out=>ICacheReg.In                               Premise(F11)
	S25= ICache.Hit=>ICacheHitReg.In                            Premise(F12)
	S26= ICacheHitReg.In=ICacheHit(addr)                        Path(S23,S25)
	S27= IMMUHitReg.Out=>CU.IMemHit                             Premise(F13)
	S28= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F14)
	S29= IAddrReg.Out=>IMem.RAddr                               Premise(F15)
	S30= IMem.Out=>IRMux.MemData                                Premise(F16)
	S31= ICacheReg.Out=>IRMux.CacheData                         Premise(F17)
	S32= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F18)
	S33= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F19)
	S34= IRMux.Out=>IR.In                                       Premise(F20)
	S35= IMem.MEM8WordOut=>ICache.WData                         Premise(F21)
	S36= PC.Out=>ICache.IEA                                     Premise(F22)
	S37= IR.Out0_5=>CU.Op                                       Premise(F23)
	S38= IR.Out11_15=>GPRegs.RReg1                              Premise(F24)
	S39= IR.Out16_20=>GPRegs.RReg2                              Premise(F25)
	S40= IR.Out21_31=>CU.IRFunc                                 Premise(F26)
	S41= GPRegs.Rdata1=>A.In                                    Premise(F27)
	S42= GPRegs.Rdata2=>B.In                                    Premise(F28)
	S43= A.Out=>MDU.A                                           Premise(F29)
	S44= B.Out=>MDU.B                                           Premise(F30)
	S45= CU.Func=>MDU.Func                                      Premise(F31)
	S46= MDU.Out0_31=>MDUOut.In                                 Premise(F32)
	S47= XER.SOOut=>ORGate.A                                    Premise(F33)
	S48= ORGate.A=so                                            Path(S10,S47)
	S49= MDU.OV=>ORGate.B                                       Premise(F34)
	S50= MDU.OV=>OVReg.In                                       Premise(F35)
	S51= MDU.CMP=>DataCmb.A                                     Premise(F36)
	S52= ORGate.Out=>DataCmb.B                                  Premise(F37)
	S53= ORGate.Out=>DR1bit.In                                  Premise(F38)
	S54= DataCmb.Out=>DR4bit.In                                 Premise(F39)
	S55= IR.Out6_10=>GPRegs.WReg                                Premise(F40)
	S56= MDUOut.Out=>GPRegs.WData                               Premise(F41)
	S57= DR4bit.Out=>CRRegs.CR0In                               Premise(F42)
	S58= DR1bit.Out=>XER.SOIn                                   Premise(F43)
	S59= OVReg.Out=>XER.OVIn                                    Premise(F44)
	S60= CtrlPIDReg=0                                           Premise(F45)
	S61= [PIDReg]=pid                                           PIDReg-Hold(S0,S60)
	S62= CtrlIMMU=0                                             Premise(F46)
	S63= CtrlPC=0                                               Premise(F47)
	S64= CtrlPCInc=0                                            Premise(F48)
	S65= PC[Out]=addr                                           PC-Hold(S1,S63,S64)
	S66= CtrlIAddrReg=1                                         Premise(F49)
	S67= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S18,S66)
	S68= CtrlIMMUHitReg=1                                       Premise(F50)
	S69= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S20,S68)
	S70= CtrlICache=0                                           Premise(F51)
	S71= CtrlICacheReg=1                                        Premise(F52)
	S72= CtrlICacheHitReg=1                                     Premise(F53)
	S73= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S26,S72)
	S74= CtrlIMem=0                                             Premise(F54)
	S75= IMem[{pid,addr}]={31,rT,rA,rB,2007}                    IMem-Hold(S2,S74)
	S76= CtrlIRMux=0                                            Premise(F55)
	S77= CtrlIR=0                                               Premise(F56)
	S78= CtrlGPRegs=0                                           Premise(F57)
	S79= GPRegs[rA]=a                                           GPRegs-Hold(S3,S78)
	S80= GPRegs[rB]=b                                           GPRegs-Hold(S4,S78)
	S81= CtrlA=0                                                Premise(F58)
	S82= CtrlB=0                                                Premise(F59)
	S83= CtrlMDUOut=0                                           Premise(F60)
	S84= CtrlXERSO=0                                            Premise(F61)
	S85= XER[SO]=so                                             XER-SO-Hold(S5,S84)
	S86= CtrlXEROV=0                                            Premise(F62)
	S87= CtrlXERCA=0                                            Premise(F63)
	S88= CtrlOVReg=0                                            Premise(F64)
	S89= CtrlDR1bit=0                                           Premise(F65)
	S90= CtrlDR4bit=0                                           Premise(F66)
	S91= CtrlCRRegs=0                                           Premise(F67)
	S92= CtrlCRRegsCR0=0                                        Premise(F68)
	S93= CtrlCRRegsW4bitRegs=0                                  Premise(F69)
	S94= CtrlCRRegsW1bitRegs=0                                  Premise(F70)

IMMU	S95= PIDReg.Out=pid                                         PIDReg-Out(S61)
	S96= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S61)
	S97= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S61)
	S98= PC.Out=addr                                            PC-Out(S65)
	S99= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S67)
	S100= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S67)
	S101= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S67)
	S102= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S69)
	S103= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S69)
	S104= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S69)
	S105= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S73)
	S106= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S73)
	S107= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S73)
	S108= XER.SOOut=so                                          XER-SO-Out(S85)
	S109= PIDReg.Out=>IMMU.PID                                  Premise(F71)
	S110= IMMU.PID=pid                                          Path(S95,S109)
	S111= PC.Out=>IMMU.IEA                                      Premise(F72)
	S112= IMMU.IEA=addr                                         Path(S98,S111)
	S113= IMMU.Addr={pid,addr}                                  IMMU-Search(S110,S112)
	S114= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S110,S112)
	S115= IMMU.Addr=>IAddrReg.In                                Premise(F73)
	S116= IAddrReg.In={pid,addr}                                Path(S113,S115)
	S117= IMMU.Hit=>IMMUHitReg.In                               Premise(F74)
	S118= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S114,S117)
	S119= PC.Out=>ICache.IEA                                    Premise(F75)
	S120= ICache.IEA=addr                                       Path(S98,S119)
	S121= ICache.Hit=ICacheHit(addr)                            ICache-Search(S120)
	S122= ICache.Out=>ICacheReg.In                              Premise(F76)
	S123= ICache.Hit=>ICacheHitReg.In                           Premise(F77)
	S124= ICacheHitReg.In=ICacheHit(addr)                       Path(S121,S123)
	S125= IMMUHitReg.Out=>CU.IMemHit                            Premise(F78)
	S126= CU.IMemHit=IMMUHit(pid,addr)                          Path(S102,S125)
	S127= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F79)
	S128= CU.ICacheHit=ICacheHit(addr)                          Path(S105,S127)
	S129= IAddrReg.Out=>IMem.RAddr                              Premise(F80)
	S130= IMem.RAddr={pid,addr}                                 Path(S99,S129)
	S131= IMem.Out={31,rT,rA,rB,2007}                           IMem-Read(S130,S75)
	S132= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S130,S75)
	S133= IMem.Out=>IRMux.MemData                               Premise(F81)
	S134= IRMux.MemData={31,rT,rA,rB,2007}                      Path(S131,S133)
	S135= IRMux.Out={31,rT,rA,rB,2007}                          IRMux-Select(S134)
	S136= ICacheReg.Out=>IRMux.CacheData                        Premise(F82)
	S137= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F83)
	S138= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S102,S137)
	S139= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F84)
	S140= IRMux.CacheSel=ICacheHit(addr)                        Path(S105,S139)
	S141= IRMux.Out=>IR.In                                      Premise(F85)
	S142= IR.In={31,rT,rA,rB,2007}                              Path(S135,S141)
	S143= IMem.MEM8WordOut=>ICache.WData                        Premise(F86)
	S144= ICache.WData=IMemGet8Word({pid,addr})                 Path(S132,S143)
	S145= PC.Out=>ICache.IEA                                    Premise(F87)
	S146= IR.Out0_5=>CU.Op                                      Premise(F88)
	S147= IR.Out11_15=>GPRegs.RReg1                             Premise(F89)
	S148= IR.Out16_20=>GPRegs.RReg2                             Premise(F90)
	S149= IR.Out21_31=>CU.IRFunc                                Premise(F91)
	S150= GPRegs.Rdata1=>A.In                                   Premise(F92)
	S151= GPRegs.Rdata2=>B.In                                   Premise(F93)
	S152= A.Out=>MDU.A                                          Premise(F94)
	S153= B.Out=>MDU.B                                          Premise(F95)
	S154= CU.Func=>MDU.Func                                     Premise(F96)
	S155= MDU.Out0_31=>MDUOut.In                                Premise(F97)
	S156= XER.SOOut=>ORGate.A                                   Premise(F98)
	S157= ORGate.A=so                                           Path(S108,S156)
	S158= MDU.OV=>ORGate.B                                      Premise(F99)
	S159= MDU.OV=>OVReg.In                                      Premise(F100)
	S160= MDU.CMP=>DataCmb.A                                    Premise(F101)
	S161= ORGate.Out=>DataCmb.B                                 Premise(F102)
	S162= ORGate.Out=>DR1bit.In                                 Premise(F103)
	S163= DataCmb.Out=>DR4bit.In                                Premise(F104)
	S164= IR.Out6_10=>GPRegs.WReg                               Premise(F105)
	S165= MDUOut.Out=>GPRegs.WData                              Premise(F106)
	S166= DR4bit.Out=>CRRegs.CR0In                              Premise(F107)
	S167= DR1bit.Out=>XER.SOIn                                  Premise(F108)
	S168= OVReg.Out=>XER.OVIn                                   Premise(F109)
	S169= CtrlPIDReg=0                                          Premise(F110)
	S170= [PIDReg]=pid                                          PIDReg-Hold(S61,S169)
	S171= CtrlIMMU=0                                            Premise(F111)
	S172= CtrlPC=0                                              Premise(F112)
	S173= CtrlPCInc=1                                           Premise(F113)
	S174= PC[Out]=addr+4                                        PC-Inc(S65,S172,S173)
	S175= PC[CIA]=addr                                          PC-Inc(S65,S172,S173)
	S176= CtrlIAddrReg=0                                        Premise(F114)
	S177= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S67,S176)
	S178= CtrlIMMUHitReg=0                                      Premise(F115)
	S179= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S69,S178)
	S180= CtrlICache=1                                          Premise(F116)
	S181= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S120,S144,S180)
	S182= CtrlICacheReg=0                                       Premise(F117)
	S183= CtrlICacheHitReg=0                                    Premise(F118)
	S184= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S73,S183)
	S185= CtrlIMem=0                                            Premise(F119)
	S186= IMem[{pid,addr}]={31,rT,rA,rB,2007}                   IMem-Hold(S75,S185)
	S187= CtrlIRMux=0                                           Premise(F120)
	S188= CtrlIR=1                                              Premise(F121)
	S189= [IR]={31,rT,rA,rB,2007}                               IR-Write(S142,S188)
	S190= CtrlGPRegs=0                                          Premise(F122)
	S191= GPRegs[rA]=a                                          GPRegs-Hold(S79,S190)
	S192= GPRegs[rB]=b                                          GPRegs-Hold(S80,S190)
	S193= CtrlA=0                                               Premise(F123)
	S194= CtrlB=0                                               Premise(F124)
	S195= CtrlMDUOut=0                                          Premise(F125)
	S196= CtrlXERSO=0                                           Premise(F126)
	S197= XER[SO]=so                                            XER-SO-Hold(S85,S196)
	S198= CtrlXEROV=0                                           Premise(F127)
	S199= CtrlXERCA=0                                           Premise(F128)
	S200= CtrlOVReg=0                                           Premise(F129)
	S201= CtrlDR1bit=0                                          Premise(F130)
	S202= CtrlDR4bit=0                                          Premise(F131)
	S203= CtrlCRRegs=0                                          Premise(F132)
	S204= CtrlCRRegsCR0=0                                       Premise(F133)
	S205= CtrlCRRegsW4bitRegs=0                                 Premise(F134)
	S206= CtrlCRRegsW1bitRegs=0                                 Premise(F135)

ID	S207= PIDReg.Out=pid                                        PIDReg-Out(S170)
	S208= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S170)
	S209= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S170)
	S210= PC.Out=addr+4                                         PC-Out(S174)
	S211= PC.CIA=addr                                           PC-Out(S175)
	S212= PC.CIA31_28=addr[31:28]                               PC-Out(S175)
	S213= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S177)
	S214= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S177)
	S215= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S177)
	S216= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S179)
	S217= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S179)
	S218= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S179)
	S219= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S184)
	S220= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S184)
	S221= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S184)
	S222= IR.Out0_5=31                                          IR-Out(S189)
	S223= IR.Out6_10=rT                                         IR-Out(S189)
	S224= IR.Out11_15=rA                                        IR-Out(S189)
	S225= IR.Out16_20=rB                                        IR-Out(S189)
	S226= IR.Out21_31=2007                                      IR-Out(S189)
	S227= XER.SOOut=so                                          XER-SO-Out(S197)
	S228= PIDReg.Out=>IMMU.PID                                  Premise(F136)
	S229= IMMU.PID=pid                                          Path(S207,S228)
	S230= PC.Out=>IMMU.IEA                                      Premise(F137)
	S231= IMMU.IEA=addr+4                                       Path(S210,S230)
	S232= IMMU.Addr={pid,addr+4}                                IMMU-Search(S229,S231)
	S233= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S229,S231)
	S234= IMMU.Addr=>IAddrReg.In                                Premise(F138)
	S235= IAddrReg.In={pid,addr+4}                              Path(S232,S234)
	S236= IMMU.Hit=>IMMUHitReg.In                               Premise(F139)
	S237= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S233,S236)
	S238= PC.Out=>ICache.IEA                                    Premise(F140)
	S239= ICache.IEA=addr+4                                     Path(S210,S238)
	S240= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S239)
	S241= ICache.Out=>ICacheReg.In                              Premise(F141)
	S242= ICache.Hit=>ICacheHitReg.In                           Premise(F142)
	S243= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S240,S242)
	S244= IMMUHitReg.Out=>CU.IMemHit                            Premise(F143)
	S245= CU.IMemHit=IMMUHit(pid,addr)                          Path(S216,S244)
	S246= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F144)
	S247= CU.ICacheHit=ICacheHit(addr)                          Path(S219,S246)
	S248= IAddrReg.Out=>IMem.RAddr                              Premise(F145)
	S249= IMem.RAddr={pid,addr}                                 Path(S213,S248)
	S250= IMem.Out={31,rT,rA,rB,2007}                           IMem-Read(S249,S186)
	S251= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S249,S186)
	S252= IMem.Out=>IRMux.MemData                               Premise(F146)
	S253= IRMux.MemData={31,rT,rA,rB,2007}                      Path(S250,S252)
	S254= IRMux.Out={31,rT,rA,rB,2007}                          IRMux-Select(S253)
	S255= ICacheReg.Out=>IRMux.CacheData                        Premise(F147)
	S256= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F148)
	S257= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S216,S256)
	S258= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F149)
	S259= IRMux.CacheSel=ICacheHit(addr)                        Path(S219,S258)
	S260= IRMux.Out=>IR.In                                      Premise(F150)
	S261= IR.In={31,rT,rA,rB,2007}                              Path(S254,S260)
	S262= IMem.MEM8WordOut=>ICache.WData                        Premise(F151)
	S263= ICache.WData=IMemGet8Word({pid,addr})                 Path(S251,S262)
	S264= PC.Out=>ICache.IEA                                    Premise(F152)
	S265= IR.Out0_5=>CU.Op                                      Premise(F153)
	S266= CU.Op=31                                              Path(S222,S265)
	S267= IR.Out11_15=>GPRegs.RReg1                             Premise(F154)
	S268= GPRegs.RReg1=rA                                       Path(S224,S267)
	S269= GPRegs.Rdata1=a                                       GPRegs-Read(S268,S191)
	S270= IR.Out16_20=>GPRegs.RReg2                             Premise(F155)
	S271= GPRegs.RReg2=rB                                       Path(S225,S270)
	S272= GPRegs.Rdata2=b                                       GPRegs-Read(S271,S192)
	S273= IR.Out21_31=>CU.IRFunc                                Premise(F156)
	S274= CU.IRFunc=2007                                        Path(S226,S273)
	S275= CU.Func=mdu_div                                       CU(S266,S274)
	S276= GPRegs.Rdata1=>A.In                                   Premise(F157)
	S277= A.In=a                                                Path(S269,S276)
	S278= GPRegs.Rdata2=>B.In                                   Premise(F158)
	S279= B.In=b                                                Path(S272,S278)
	S280= A.Out=>MDU.A                                          Premise(F159)
	S281= B.Out=>MDU.B                                          Premise(F160)
	S282= CU.Func=>MDU.Func                                     Premise(F161)
	S283= MDU.Func=mdu_div                                      Path(S275,S282)
	S284= MDU.Out0_31=>MDUOut.In                                Premise(F162)
	S285= XER.SOOut=>ORGate.A                                   Premise(F163)
	S286= ORGate.A=so                                           Path(S227,S285)
	S287= MDU.OV=>ORGate.B                                      Premise(F164)
	S288= MDU.OV=>OVReg.In                                      Premise(F165)
	S289= MDU.CMP=>DataCmb.A                                    Premise(F166)
	S290= ORGate.Out=>DataCmb.B                                 Premise(F167)
	S291= ORGate.Out=>DR1bit.In                                 Premise(F168)
	S292= DataCmb.Out=>DR4bit.In                                Premise(F169)
	S293= IR.Out6_10=>GPRegs.WReg                               Premise(F170)
	S294= GPRegs.WReg=rT                                        Path(S223,S293)
	S295= MDUOut.Out=>GPRegs.WData                              Premise(F171)
	S296= DR4bit.Out=>CRRegs.CR0In                              Premise(F172)
	S297= DR1bit.Out=>XER.SOIn                                  Premise(F173)
	S298= OVReg.Out=>XER.OVIn                                   Premise(F174)
	S299= CtrlPIDReg=0                                          Premise(F175)
	S300= [PIDReg]=pid                                          PIDReg-Hold(S170,S299)
	S301= CtrlIMMU=0                                            Premise(F176)
	S302= CtrlPC=0                                              Premise(F177)
	S303= CtrlPCInc=0                                           Premise(F178)
	S304= PC[CIA]=addr                                          PC-Hold(S175,S303)
	S305= PC[Out]=addr+4                                        PC-Hold(S174,S302,S303)
	S306= CtrlIAddrReg=0                                        Premise(F179)
	S307= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S177,S306)
	S308= CtrlIMMUHitReg=0                                      Premise(F180)
	S309= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S179,S308)
	S310= CtrlICache=0                                          Premise(F181)
	S311= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S181,S310)
	S312= CtrlICacheReg=0                                       Premise(F182)
	S313= CtrlICacheHitReg=0                                    Premise(F183)
	S314= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S184,S313)
	S315= CtrlIMem=0                                            Premise(F184)
	S316= IMem[{pid,addr}]={31,rT,rA,rB,2007}                   IMem-Hold(S186,S315)
	S317= CtrlIRMux=0                                           Premise(F185)
	S318= CtrlIR=0                                              Premise(F186)
	S319= [IR]={31,rT,rA,rB,2007}                               IR-Hold(S189,S318)
	S320= CtrlGPRegs=0                                          Premise(F187)
	S321= GPRegs[rA]=a                                          GPRegs-Hold(S191,S320)
	S322= GPRegs[rB]=b                                          GPRegs-Hold(S192,S320)
	S323= CtrlA=1                                               Premise(F188)
	S324= [A]=a                                                 A-Write(S277,S323)
	S325= CtrlB=1                                               Premise(F189)
	S326= [B]=b                                                 B-Write(S279,S325)
	S327= CtrlMDUOut=0                                          Premise(F190)
	S328= CtrlXERSO=0                                           Premise(F191)
	S329= XER[SO]=so                                            XER-SO-Hold(S197,S328)
	S330= CtrlXEROV=0                                           Premise(F192)
	S331= CtrlXERCA=0                                           Premise(F193)
	S332= CtrlOVReg=0                                           Premise(F194)
	S333= CtrlDR1bit=0                                          Premise(F195)
	S334= CtrlDR4bit=0                                          Premise(F196)
	S335= CtrlCRRegs=0                                          Premise(F197)
	S336= CtrlCRRegsCR0=0                                       Premise(F198)
	S337= CtrlCRRegsW4bitRegs=0                                 Premise(F199)
	S338= CtrlCRRegsW1bitRegs=0                                 Premise(F200)

EX	S339= PIDReg.Out=pid                                        PIDReg-Out(S300)
	S340= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S300)
	S341= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S300)
	S342= PC.CIA=addr                                           PC-Out(S304)
	S343= PC.CIA31_28=addr[31:28]                               PC-Out(S304)
	S344= PC.Out=addr+4                                         PC-Out(S305)
	S345= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S307)
	S346= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S307)
	S347= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S307)
	S348= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S309)
	S349= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S309)
	S350= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S309)
	S351= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S314)
	S352= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S314)
	S353= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S314)
	S354= IR.Out0_5=31                                          IR-Out(S319)
	S355= IR.Out6_10=rT                                         IR-Out(S319)
	S356= IR.Out11_15=rA                                        IR-Out(S319)
	S357= IR.Out16_20=rB                                        IR-Out(S319)
	S358= IR.Out21_31=2007                                      IR-Out(S319)
	S359= A.Out=a                                               A-Out(S324)
	S360= A.Out26_31=a[26:31]                                   A-Out(S324)
	S361= A.Out30_31=a[30:31]                                   A-Out(S324)
	S362= B.Out=b                                               B-Out(S326)
	S363= B.Out26_31=b[26:31]                                   B-Out(S326)
	S364= B.Out30_31=b[30:31]                                   B-Out(S326)
	S365= XER.SOOut=so                                          XER-SO-Out(S329)
	S366= PIDReg.Out=>IMMU.PID                                  Premise(F201)
	S367= IMMU.PID=pid                                          Path(S339,S366)
	S368= PC.Out=>IMMU.IEA                                      Premise(F202)
	S369= IMMU.IEA=addr+4                                       Path(S344,S368)
	S370= IMMU.Addr={pid,addr+4}                                IMMU-Search(S367,S369)
	S371= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S367,S369)
	S372= IMMU.Addr=>IAddrReg.In                                Premise(F203)
	S373= IAddrReg.In={pid,addr+4}                              Path(S370,S372)
	S374= IMMU.Hit=>IMMUHitReg.In                               Premise(F204)
	S375= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S371,S374)
	S376= PC.Out=>ICache.IEA                                    Premise(F205)
	S377= ICache.IEA=addr+4                                     Path(S344,S376)
	S378= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S377)
	S379= ICache.Out=>ICacheReg.In                              Premise(F206)
	S380= ICache.Hit=>ICacheHitReg.In                           Premise(F207)
	S381= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S378,S380)
	S382= IMMUHitReg.Out=>CU.IMemHit                            Premise(F208)
	S383= CU.IMemHit=IMMUHit(pid,addr)                          Path(S348,S382)
	S384= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F209)
	S385= CU.ICacheHit=ICacheHit(addr)                          Path(S351,S384)
	S386= IAddrReg.Out=>IMem.RAddr                              Premise(F210)
	S387= IMem.RAddr={pid,addr}                                 Path(S345,S386)
	S388= IMem.Out={31,rT,rA,rB,2007}                           IMem-Read(S387,S316)
	S389= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S387,S316)
	S390= IMem.Out=>IRMux.MemData                               Premise(F211)
	S391= IRMux.MemData={31,rT,rA,rB,2007}                      Path(S388,S390)
	S392= IRMux.Out={31,rT,rA,rB,2007}                          IRMux-Select(S391)
	S393= ICacheReg.Out=>IRMux.CacheData                        Premise(F212)
	S394= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F213)
	S395= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S348,S394)
	S396= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F214)
	S397= IRMux.CacheSel=ICacheHit(addr)                        Path(S351,S396)
	S398= IRMux.Out=>IR.In                                      Premise(F215)
	S399= IR.In={31,rT,rA,rB,2007}                              Path(S392,S398)
	S400= IMem.MEM8WordOut=>ICache.WData                        Premise(F216)
	S401= ICache.WData=IMemGet8Word({pid,addr})                 Path(S389,S400)
	S402= PC.Out=>ICache.IEA                                    Premise(F217)
	S403= IR.Out0_5=>CU.Op                                      Premise(F218)
	S404= CU.Op=31                                              Path(S354,S403)
	S405= IR.Out11_15=>GPRegs.RReg1                             Premise(F219)
	S406= GPRegs.RReg1=rA                                       Path(S356,S405)
	S407= GPRegs.Rdata1=a                                       GPRegs-Read(S406,S321)
	S408= IR.Out16_20=>GPRegs.RReg2                             Premise(F220)
	S409= GPRegs.RReg2=rB                                       Path(S357,S408)
	S410= GPRegs.Rdata2=b                                       GPRegs-Read(S409,S322)
	S411= IR.Out21_31=>CU.IRFunc                                Premise(F221)
	S412= CU.IRFunc=2007                                        Path(S358,S411)
	S413= CU.Func=mdu_div                                       CU(S404,S412)
	S414= GPRegs.Rdata1=>A.In                                   Premise(F222)
	S415= A.In=a                                                Path(S407,S414)
	S416= GPRegs.Rdata2=>B.In                                   Premise(F223)
	S417= B.In=b                                                Path(S410,S416)
	S418= A.Out=>MDU.A                                          Premise(F224)
	S419= MDU.A=a                                               Path(S359,S418)
	S420= B.Out=>MDU.B                                          Premise(F225)
	S421= MDU.B=b                                               Path(S362,S420)
	S422= CU.Func=>MDU.Func                                     Premise(F226)
	S423= MDU.Func=mdu_div                                      Path(S413,S422)
	S424= MDU.Out0_31=a÷b                                       MDU(S419,S421)
	S425= MDU.CMP=Compare0(a÷b)                                 MDU(S419,S421)
	S426= MDU.OV=OverFlow(a÷b)                                  MDU(S419,S421)
	S427= MDU.Out0_31=>MDUOut.In                                Premise(F227)
	S428= MDUOut.In=a÷b                                         Path(S424,S427)
	S429= XER.SOOut=>ORGate.A                                   Premise(F228)
	S430= ORGate.A=so                                           Path(S365,S429)
	S431= MDU.OV=>ORGate.B                                      Premise(F229)
	S432= ORGate.B=OverFlow(a÷b)                                Path(S426,S431)
	S433= ORGate.Out=so|OverFlow(a÷b)                           ORGate(S430,S432)
	S434= MDU.OV=>OVReg.In                                      Premise(F230)
	S435= OVReg.In=OverFlow(a÷b)                                Path(S426,S434)
	S436= MDU.CMP=>DataCmb.A                                    Premise(F231)
	S437= DataCmb.A=Compare0(a÷b)                               Path(S425,S436)
	S438= ORGate.Out=>DataCmb.B                                 Premise(F232)
	S439= DataCmb.B=so|OverFlow(a÷b)                            Path(S433,S438)
	S440= DataCmb.Out={Compare0(a÷b),so|OverFlow(a÷b)}          DataCmb(S437,S439)
	S441= ORGate.Out=>DR1bit.In                                 Premise(F233)
	S442= DR1bit.In=so|OverFlow(a÷b)                            Path(S433,S441)
	S443= DataCmb.Out=>DR4bit.In                                Premise(F234)
	S444= DR4bit.In={Compare0(a÷b),so|OverFlow(a÷b)}            Path(S440,S443)
	S445= IR.Out6_10=>GPRegs.WReg                               Premise(F235)
	S446= GPRegs.WReg=rT                                        Path(S355,S445)
	S447= MDUOut.Out=>GPRegs.WData                              Premise(F236)
	S448= DR4bit.Out=>CRRegs.CR0In                              Premise(F237)
	S449= DR1bit.Out=>XER.SOIn                                  Premise(F238)
	S450= OVReg.Out=>XER.OVIn                                   Premise(F239)
	S451= CtrlPIDReg=0                                          Premise(F240)
	S452= [PIDReg]=pid                                          PIDReg-Hold(S300,S451)
	S453= CtrlIMMU=0                                            Premise(F241)
	S454= CtrlPC=0                                              Premise(F242)
	S455= CtrlPCInc=0                                           Premise(F243)
	S456= PC[CIA]=addr                                          PC-Hold(S304,S455)
	S457= PC[Out]=addr+4                                        PC-Hold(S305,S454,S455)
	S458= CtrlIAddrReg=0                                        Premise(F244)
	S459= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S307,S458)
	S460= CtrlIMMUHitReg=0                                      Premise(F245)
	S461= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S309,S460)
	S462= CtrlICache=0                                          Premise(F246)
	S463= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S311,S462)
	S464= CtrlICacheReg=0                                       Premise(F247)
	S465= CtrlICacheHitReg=0                                    Premise(F248)
	S466= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S314,S465)
	S467= CtrlIMem=0                                            Premise(F249)
	S468= IMem[{pid,addr}]={31,rT,rA,rB,2007}                   IMem-Hold(S316,S467)
	S469= CtrlIRMux=0                                           Premise(F250)
	S470= CtrlIR=0                                              Premise(F251)
	S471= [IR]={31,rT,rA,rB,2007}                               IR-Hold(S319,S470)
	S472= CtrlGPRegs=0                                          Premise(F252)
	S473= GPRegs[rA]=a                                          GPRegs-Hold(S321,S472)
	S474= GPRegs[rB]=b                                          GPRegs-Hold(S322,S472)
	S475= CtrlA=0                                               Premise(F253)
	S476= [A]=a                                                 A-Hold(S324,S475)
	S477= CtrlB=0                                               Premise(F254)
	S478= [B]=b                                                 B-Hold(S326,S477)
	S479= CtrlMDUOut=1                                          Premise(F255)
	S480= [MDUOut]=a÷b                                          MDUOut-Write(S428,S479)
	S481= CtrlXERSO=0                                           Premise(F256)
	S482= XER[SO]=so                                            XER-SO-Hold(S329,S481)
	S483= CtrlXEROV=0                                           Premise(F257)
	S484= CtrlXERCA=0                                           Premise(F258)
	S485= CtrlOVReg=1                                           Premise(F259)
	S486= [OVReg]=OverFlow(a÷b)                                 OVReg-Write(S435,S485)
	S487= CtrlDR1bit=1                                          Premise(F260)
	S488= [DR1bit]=so|OverFlow(a÷b)                             DR1bit-Write(S442,S487)
	S489= CtrlDR4bit=1                                          Premise(F261)
	S490= [DR4bit]={Compare0(a÷b),so|OverFlow(a÷b)}             DR4bit-Write(S444,S489)
	S491= CtrlCRRegs=0                                          Premise(F262)
	S492= CtrlCRRegsCR0=0                                       Premise(F263)
	S493= CtrlCRRegsW4bitRegs=0                                 Premise(F264)
	S494= CtrlCRRegsW1bitRegs=0                                 Premise(F265)

MEM	S495= PIDReg.Out=pid                                        PIDReg-Out(S452)
	S496= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S452)
	S497= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S452)
	S498= PC.CIA=addr                                           PC-Out(S456)
	S499= PC.CIA31_28=addr[31:28]                               PC-Out(S456)
	S500= PC.Out=addr+4                                         PC-Out(S457)
	S501= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S459)
	S502= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S459)
	S503= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S459)
	S504= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S461)
	S505= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S461)
	S506= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S461)
	S507= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S466)
	S508= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S466)
	S509= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S466)
	S510= IR.Out0_5=31                                          IR-Out(S471)
	S511= IR.Out6_10=rT                                         IR-Out(S471)
	S512= IR.Out11_15=rA                                        IR-Out(S471)
	S513= IR.Out16_20=rB                                        IR-Out(S471)
	S514= IR.Out21_31=2007                                      IR-Out(S471)
	S515= A.Out=a                                               A-Out(S476)
	S516= A.Out26_31=a[26:31]                                   A-Out(S476)
	S517= A.Out30_31=a[30:31]                                   A-Out(S476)
	S518= B.Out=b                                               B-Out(S478)
	S519= B.Out26_31=b[26:31]                                   B-Out(S478)
	S520= B.Out30_31=b[30:31]                                   B-Out(S478)
	S521= MDUOut.Out=a÷b                                        MDUOut-Out(S480)
	S522= MDUOut.Out26_31=a÷b[26:31]                            MDUOut-Out(S480)
	S523= MDUOut.Out30_31=a÷b[30:31]                            MDUOut-Out(S480)
	S524= XER.SOOut=so                                          XER-SO-Out(S482)
	S525= OVReg.Out=OverFlow(a÷b)                               OVReg-Out(S486)
	S526= OVReg.Out26_31=OverFlow(a÷b)[26:31]                   OVReg-Out(S486)
	S527= OVReg.Out30_31=OverFlow(a÷b)[30:31]                   OVReg-Out(S486)
	S528= DR1bit.Out=so|OverFlow(a÷b)                           DR1bit-Out(S488)
	S529= DR1bit.Out26_31=so|OverFlow(a÷b)[26:31]               DR1bit-Out(S488)
	S530= DR1bit.Out30_31=so|OverFlow(a÷b)[30:31]               DR1bit-Out(S488)
	S531= DR4bit.Out={Compare0(a÷b),so|OverFlow(a÷b)}           DR4bit-Out(S490)
	S532= DR4bit.Out26_31={Compare0(a÷b),so|OverFlow(a÷b)}[26:31]DR4bit-Out(S490)
	S533= DR4bit.Out30_31={Compare0(a÷b),so|OverFlow(a÷b)}[30:31]DR4bit-Out(S490)
	S534= PIDReg.Out=>IMMU.PID                                  Premise(F266)
	S535= IMMU.PID=pid                                          Path(S495,S534)
	S536= PC.Out=>IMMU.IEA                                      Premise(F267)
	S537= IMMU.IEA=addr+4                                       Path(S500,S536)
	S538= IMMU.Addr={pid,addr+4}                                IMMU-Search(S535,S537)
	S539= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S535,S537)
	S540= IMMU.Addr=>IAddrReg.In                                Premise(F268)
	S541= IAddrReg.In={pid,addr+4}                              Path(S538,S540)
	S542= IMMU.Hit=>IMMUHitReg.In                               Premise(F269)
	S543= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S539,S542)
	S544= PC.Out=>ICache.IEA                                    Premise(F270)
	S545= ICache.IEA=addr+4                                     Path(S500,S544)
	S546= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S545)
	S547= ICache.Out=>ICacheReg.In                              Premise(F271)
	S548= ICache.Hit=>ICacheHitReg.In                           Premise(F272)
	S549= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S546,S548)
	S550= IMMUHitReg.Out=>CU.IMemHit                            Premise(F273)
	S551= CU.IMemHit=IMMUHit(pid,addr)                          Path(S504,S550)
	S552= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F274)
	S553= CU.ICacheHit=ICacheHit(addr)                          Path(S507,S552)
	S554= IAddrReg.Out=>IMem.RAddr                              Premise(F275)
	S555= IMem.RAddr={pid,addr}                                 Path(S501,S554)
	S556= IMem.Out={31,rT,rA,rB,2007}                           IMem-Read(S555,S468)
	S557= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S555,S468)
	S558= IMem.Out=>IRMux.MemData                               Premise(F276)
	S559= IRMux.MemData={31,rT,rA,rB,2007}                      Path(S556,S558)
	S560= IRMux.Out={31,rT,rA,rB,2007}                          IRMux-Select(S559)
	S561= ICacheReg.Out=>IRMux.CacheData                        Premise(F277)
	S562= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F278)
	S563= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S504,S562)
	S564= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F279)
	S565= IRMux.CacheSel=ICacheHit(addr)                        Path(S507,S564)
	S566= IRMux.Out=>IR.In                                      Premise(F280)
	S567= IR.In={31,rT,rA,rB,2007}                              Path(S560,S566)
	S568= IMem.MEM8WordOut=>ICache.WData                        Premise(F281)
	S569= ICache.WData=IMemGet8Word({pid,addr})                 Path(S557,S568)
	S570= PC.Out=>ICache.IEA                                    Premise(F282)
	S571= IR.Out0_5=>CU.Op                                      Premise(F283)
	S572= CU.Op=31                                              Path(S510,S571)
	S573= IR.Out11_15=>GPRegs.RReg1                             Premise(F284)
	S574= GPRegs.RReg1=rA                                       Path(S512,S573)
	S575= GPRegs.Rdata1=a                                       GPRegs-Read(S574,S473)
	S576= IR.Out16_20=>GPRegs.RReg2                             Premise(F285)
	S577= GPRegs.RReg2=rB                                       Path(S513,S576)
	S578= GPRegs.Rdata2=b                                       GPRegs-Read(S577,S474)
	S579= IR.Out21_31=>CU.IRFunc                                Premise(F286)
	S580= CU.IRFunc=2007                                        Path(S514,S579)
	S581= CU.Func=mdu_div                                       CU(S572,S580)
	S582= GPRegs.Rdata1=>A.In                                   Premise(F287)
	S583= A.In=a                                                Path(S575,S582)
	S584= GPRegs.Rdata2=>B.In                                   Premise(F288)
	S585= B.In=b                                                Path(S578,S584)
	S586= A.Out=>MDU.A                                          Premise(F289)
	S587= MDU.A=a                                               Path(S515,S586)
	S588= B.Out=>MDU.B                                          Premise(F290)
	S589= MDU.B=b                                               Path(S518,S588)
	S590= CU.Func=>MDU.Func                                     Premise(F291)
	S591= MDU.Func=mdu_div                                      Path(S581,S590)
	S592= MDU.Out0_31=a÷b                                       MDU(S587,S589)
	S593= MDU.CMP=Compare0(a÷b)                                 MDU(S587,S589)
	S594= MDU.OV=OverFlow(a÷b)                                  MDU(S587,S589)
	S595= MDU.Out0_31=>MDUOut.In                                Premise(F292)
	S596= MDUOut.In=a÷b                                         Path(S592,S595)
	S597= XER.SOOut=>ORGate.A                                   Premise(F293)
	S598= ORGate.A=so                                           Path(S524,S597)
	S599= MDU.OV=>ORGate.B                                      Premise(F294)
	S600= ORGate.B=OverFlow(a÷b)                                Path(S594,S599)
	S601= ORGate.Out=so|OverFlow(a÷b)                           ORGate(S598,S600)
	S602= MDU.OV=>OVReg.In                                      Premise(F295)
	S603= OVReg.In=OverFlow(a÷b)                                Path(S594,S602)
	S604= MDU.CMP=>DataCmb.A                                    Premise(F296)
	S605= DataCmb.A=Compare0(a÷b)                               Path(S593,S604)
	S606= ORGate.Out=>DataCmb.B                                 Premise(F297)
	S607= DataCmb.B=so|OverFlow(a÷b)                            Path(S601,S606)
	S608= DataCmb.Out={Compare0(a÷b),so|OverFlow(a÷b)}          DataCmb(S605,S607)
	S609= ORGate.Out=>DR1bit.In                                 Premise(F298)
	S610= DR1bit.In=so|OverFlow(a÷b)                            Path(S601,S609)
	S611= DataCmb.Out=>DR4bit.In                                Premise(F299)
	S612= DR4bit.In={Compare0(a÷b),so|OverFlow(a÷b)}            Path(S608,S611)
	S613= IR.Out6_10=>GPRegs.WReg                               Premise(F300)
	S614= GPRegs.WReg=rT                                        Path(S511,S613)
	S615= MDUOut.Out=>GPRegs.WData                              Premise(F301)
	S616= GPRegs.WData=a÷b                                      Path(S521,S615)
	S617= DR4bit.Out=>CRRegs.CR0In                              Premise(F302)
	S618= CRRegs.CR0In={Compare0(a÷b),so|OverFlow(a÷b)}         Path(S531,S617)
	S619= DR1bit.Out=>XER.SOIn                                  Premise(F303)
	S620= XER.SOIn=so|OverFlow(a÷b)                             Path(S528,S619)
	S621= OVReg.Out=>XER.OVIn                                   Premise(F304)
	S622= XER.OVIn=OverFlow(a÷b)                                Path(S525,S621)
	S623= CtrlPIDReg=0                                          Premise(F305)
	S624= [PIDReg]=pid                                          PIDReg-Hold(S452,S623)
	S625= CtrlIMMU=0                                            Premise(F306)
	S626= CtrlPC=0                                              Premise(F307)
	S627= CtrlPCInc=0                                           Premise(F308)
	S628= PC[CIA]=addr                                          PC-Hold(S456,S627)
	S629= PC[Out]=addr+4                                        PC-Hold(S457,S626,S627)
	S630= CtrlIAddrReg=0                                        Premise(F309)
	S631= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S459,S630)
	S632= CtrlIMMUHitReg=0                                      Premise(F310)
	S633= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S461,S632)
	S634= CtrlICache=0                                          Premise(F311)
	S635= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S463,S634)
	S636= CtrlICacheReg=0                                       Premise(F312)
	S637= CtrlICacheHitReg=0                                    Premise(F313)
	S638= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S466,S637)
	S639= CtrlIMem=0                                            Premise(F314)
	S640= IMem[{pid,addr}]={31,rT,rA,rB,2007}                   IMem-Hold(S468,S639)
	S641= CtrlIRMux=0                                           Premise(F315)
	S642= CtrlIR=0                                              Premise(F316)
	S643= [IR]={31,rT,rA,rB,2007}                               IR-Hold(S471,S642)
	S644= CtrlGPRegs=0                                          Premise(F317)
	S645= GPRegs[rA]=a                                          GPRegs-Hold(S473,S644)
	S646= GPRegs[rB]=b                                          GPRegs-Hold(S474,S644)
	S647= CtrlA=0                                               Premise(F318)
	S648= [A]=a                                                 A-Hold(S476,S647)
	S649= CtrlB=0                                               Premise(F319)
	S650= [B]=b                                                 B-Hold(S478,S649)
	S651= CtrlMDUOut=0                                          Premise(F320)
	S652= [MDUOut]=a÷b                                          MDUOut-Hold(S480,S651)
	S653= CtrlXERSO=0                                           Premise(F321)
	S654= XER[SO]=so                                            XER-SO-Hold(S482,S653)
	S655= CtrlXEROV=0                                           Premise(F322)
	S656= CtrlXERCA=0                                           Premise(F323)
	S657= CtrlOVReg=0                                           Premise(F324)
	S658= [OVReg]=OverFlow(a÷b)                                 OVReg-Hold(S486,S657)
	S659= CtrlDR1bit=0                                          Premise(F325)
	S660= [DR1bit]=so|OverFlow(a÷b)                             DR1bit-Hold(S488,S659)
	S661= CtrlDR4bit=0                                          Premise(F326)
	S662= [DR4bit]={Compare0(a÷b),so|OverFlow(a÷b)}             DR4bit-Hold(S490,S661)
	S663= CtrlCRRegs=0                                          Premise(F327)
	S664= CtrlCRRegsCR0=0                                       Premise(F328)
	S665= CtrlCRRegsW4bitRegs=0                                 Premise(F329)
	S666= CtrlCRRegsW1bitRegs=0                                 Premise(F330)

DMMU1	S667= PIDReg.Out=pid                                        PIDReg-Out(S624)
	S668= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S624)
	S669= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S624)
	S670= PC.CIA=addr                                           PC-Out(S628)
	S671= PC.CIA31_28=addr[31:28]                               PC-Out(S628)
	S672= PC.Out=addr+4                                         PC-Out(S629)
	S673= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S631)
	S674= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S631)
	S675= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S631)
	S676= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S633)
	S677= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S633)
	S678= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S633)
	S679= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S638)
	S680= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S638)
	S681= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S638)
	S682= IR.Out0_5=31                                          IR-Out(S643)
	S683= IR.Out6_10=rT                                         IR-Out(S643)
	S684= IR.Out11_15=rA                                        IR-Out(S643)
	S685= IR.Out16_20=rB                                        IR-Out(S643)
	S686= IR.Out21_31=2007                                      IR-Out(S643)
	S687= A.Out=a                                               A-Out(S648)
	S688= A.Out26_31=a[26:31]                                   A-Out(S648)
	S689= A.Out30_31=a[30:31]                                   A-Out(S648)
	S690= B.Out=b                                               B-Out(S650)
	S691= B.Out26_31=b[26:31]                                   B-Out(S650)
	S692= B.Out30_31=b[30:31]                                   B-Out(S650)
	S693= MDUOut.Out=a÷b                                        MDUOut-Out(S652)
	S694= MDUOut.Out26_31=a÷b[26:31]                            MDUOut-Out(S652)
	S695= MDUOut.Out30_31=a÷b[30:31]                            MDUOut-Out(S652)
	S696= XER.SOOut=so                                          XER-SO-Out(S654)
	S697= OVReg.Out=OverFlow(a÷b)                               OVReg-Out(S658)
	S698= OVReg.Out26_31=OverFlow(a÷b)[26:31]                   OVReg-Out(S658)
	S699= OVReg.Out30_31=OverFlow(a÷b)[30:31]                   OVReg-Out(S658)
	S700= DR1bit.Out=so|OverFlow(a÷b)                           DR1bit-Out(S660)
	S701= DR1bit.Out26_31=so|OverFlow(a÷b)[26:31]               DR1bit-Out(S660)
	S702= DR1bit.Out30_31=so|OverFlow(a÷b)[30:31]               DR1bit-Out(S660)
	S703= DR4bit.Out={Compare0(a÷b),so|OverFlow(a÷b)}           DR4bit-Out(S662)
	S704= DR4bit.Out26_31={Compare0(a÷b),so|OverFlow(a÷b)}[26:31]DR4bit-Out(S662)
	S705= DR4bit.Out30_31={Compare0(a÷b),so|OverFlow(a÷b)}[30:31]DR4bit-Out(S662)
	S706= PIDReg.Out=>IMMU.PID                                  Premise(F331)
	S707= IMMU.PID=pid                                          Path(S667,S706)
	S708= PC.Out=>IMMU.IEA                                      Premise(F332)
	S709= IMMU.IEA=addr+4                                       Path(S672,S708)
	S710= IMMU.Addr={pid,addr+4}                                IMMU-Search(S707,S709)
	S711= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S707,S709)
	S712= IMMU.Addr=>IAddrReg.In                                Premise(F333)
	S713= IAddrReg.In={pid,addr+4}                              Path(S710,S712)
	S714= IMMU.Hit=>IMMUHitReg.In                               Premise(F334)
	S715= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S711,S714)
	S716= PC.Out=>ICache.IEA                                    Premise(F335)
	S717= ICache.IEA=addr+4                                     Path(S672,S716)
	S718= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S717)
	S719= ICache.Out=>ICacheReg.In                              Premise(F336)
	S720= ICache.Hit=>ICacheHitReg.In                           Premise(F337)
	S721= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S718,S720)
	S722= IMMUHitReg.Out=>CU.IMemHit                            Premise(F338)
	S723= CU.IMemHit=IMMUHit(pid,addr)                          Path(S676,S722)
	S724= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F339)
	S725= CU.ICacheHit=ICacheHit(addr)                          Path(S679,S724)
	S726= IAddrReg.Out=>IMem.RAddr                              Premise(F340)
	S727= IMem.RAddr={pid,addr}                                 Path(S673,S726)
	S728= IMem.Out={31,rT,rA,rB,2007}                           IMem-Read(S727,S640)
	S729= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S727,S640)
	S730= IMem.Out=>IRMux.MemData                               Premise(F341)
	S731= IRMux.MemData={31,rT,rA,rB,2007}                      Path(S728,S730)
	S732= IRMux.Out={31,rT,rA,rB,2007}                          IRMux-Select(S731)
	S733= ICacheReg.Out=>IRMux.CacheData                        Premise(F342)
	S734= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F343)
	S735= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S676,S734)
	S736= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F344)
	S737= IRMux.CacheSel=ICacheHit(addr)                        Path(S679,S736)
	S738= IRMux.Out=>IR.In                                      Premise(F345)
	S739= IR.In={31,rT,rA,rB,2007}                              Path(S732,S738)
	S740= IMem.MEM8WordOut=>ICache.WData                        Premise(F346)
	S741= ICache.WData=IMemGet8Word({pid,addr})                 Path(S729,S740)
	S742= PC.Out=>ICache.IEA                                    Premise(F347)
	S743= IR.Out0_5=>CU.Op                                      Premise(F348)
	S744= CU.Op=31                                              Path(S682,S743)
	S745= IR.Out11_15=>GPRegs.RReg1                             Premise(F349)
	S746= GPRegs.RReg1=rA                                       Path(S684,S745)
	S747= GPRegs.Rdata1=a                                       GPRegs-Read(S746,S645)
	S748= IR.Out16_20=>GPRegs.RReg2                             Premise(F350)
	S749= GPRegs.RReg2=rB                                       Path(S685,S748)
	S750= GPRegs.Rdata2=b                                       GPRegs-Read(S749,S646)
	S751= IR.Out21_31=>CU.IRFunc                                Premise(F351)
	S752= CU.IRFunc=2007                                        Path(S686,S751)
	S753= CU.Func=mdu_div                                       CU(S744,S752)
	S754= GPRegs.Rdata1=>A.In                                   Premise(F352)
	S755= A.In=a                                                Path(S747,S754)
	S756= GPRegs.Rdata2=>B.In                                   Premise(F353)
	S757= B.In=b                                                Path(S750,S756)
	S758= A.Out=>MDU.A                                          Premise(F354)
	S759= MDU.A=a                                               Path(S687,S758)
	S760= B.Out=>MDU.B                                          Premise(F355)
	S761= MDU.B=b                                               Path(S690,S760)
	S762= CU.Func=>MDU.Func                                     Premise(F356)
	S763= MDU.Func=mdu_div                                      Path(S753,S762)
	S764= MDU.Out0_31=a÷b                                       MDU(S759,S761)
	S765= MDU.CMP=Compare0(a÷b)                                 MDU(S759,S761)
	S766= MDU.OV=OverFlow(a÷b)                                  MDU(S759,S761)
	S767= MDU.Out0_31=>MDUOut.In                                Premise(F357)
	S768= MDUOut.In=a÷b                                         Path(S764,S767)
	S769= XER.SOOut=>ORGate.A                                   Premise(F358)
	S770= ORGate.A=so                                           Path(S696,S769)
	S771= MDU.OV=>ORGate.B                                      Premise(F359)
	S772= ORGate.B=OverFlow(a÷b)                                Path(S766,S771)
	S773= ORGate.Out=so|OverFlow(a÷b)                           ORGate(S770,S772)
	S774= MDU.OV=>OVReg.In                                      Premise(F360)
	S775= OVReg.In=OverFlow(a÷b)                                Path(S766,S774)
	S776= MDU.CMP=>DataCmb.A                                    Premise(F361)
	S777= DataCmb.A=Compare0(a÷b)                               Path(S765,S776)
	S778= ORGate.Out=>DataCmb.B                                 Premise(F362)
	S779= DataCmb.B=so|OverFlow(a÷b)                            Path(S773,S778)
	S780= DataCmb.Out={Compare0(a÷b),so|OverFlow(a÷b)}          DataCmb(S777,S779)
	S781= ORGate.Out=>DR1bit.In                                 Premise(F363)
	S782= DR1bit.In=so|OverFlow(a÷b)                            Path(S773,S781)
	S783= DataCmb.Out=>DR4bit.In                                Premise(F364)
	S784= DR4bit.In={Compare0(a÷b),so|OverFlow(a÷b)}            Path(S780,S783)
	S785= IR.Out6_10=>GPRegs.WReg                               Premise(F365)
	S786= GPRegs.WReg=rT                                        Path(S683,S785)
	S787= MDUOut.Out=>GPRegs.WData                              Premise(F366)
	S788= GPRegs.WData=a÷b                                      Path(S693,S787)
	S789= DR4bit.Out=>CRRegs.CR0In                              Premise(F367)
	S790= CRRegs.CR0In={Compare0(a÷b),so|OverFlow(a÷b)}         Path(S703,S789)
	S791= DR1bit.Out=>XER.SOIn                                  Premise(F368)
	S792= XER.SOIn=so|OverFlow(a÷b)                             Path(S700,S791)
	S793= OVReg.Out=>XER.OVIn                                   Premise(F369)
	S794= XER.OVIn=OverFlow(a÷b)                                Path(S697,S793)
	S795= CtrlPIDReg=0                                          Premise(F370)
	S796= [PIDReg]=pid                                          PIDReg-Hold(S624,S795)
	S797= CtrlIMMU=0                                            Premise(F371)
	S798= CtrlPC=0                                              Premise(F372)
	S799= CtrlPCInc=0                                           Premise(F373)
	S800= PC[CIA]=addr                                          PC-Hold(S628,S799)
	S801= PC[Out]=addr+4                                        PC-Hold(S629,S798,S799)
	S802= CtrlIAddrReg=0                                        Premise(F374)
	S803= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S631,S802)
	S804= CtrlIMMUHitReg=0                                      Premise(F375)
	S805= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S633,S804)
	S806= CtrlICache=0                                          Premise(F376)
	S807= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S635,S806)
	S808= CtrlICacheReg=0                                       Premise(F377)
	S809= CtrlICacheHitReg=0                                    Premise(F378)
	S810= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S638,S809)
	S811= CtrlIMem=0                                            Premise(F379)
	S812= IMem[{pid,addr}]={31,rT,rA,rB,2007}                   IMem-Hold(S640,S811)
	S813= CtrlIRMux=0                                           Premise(F380)
	S814= CtrlIR=0                                              Premise(F381)
	S815= [IR]={31,rT,rA,rB,2007}                               IR-Hold(S643,S814)
	S816= CtrlGPRegs=0                                          Premise(F382)
	S817= GPRegs[rA]=a                                          GPRegs-Hold(S645,S816)
	S818= GPRegs[rB]=b                                          GPRegs-Hold(S646,S816)
	S819= CtrlA=0                                               Premise(F383)
	S820= [A]=a                                                 A-Hold(S648,S819)
	S821= CtrlB=0                                               Premise(F384)
	S822= [B]=b                                                 B-Hold(S650,S821)
	S823= CtrlMDUOut=0                                          Premise(F385)
	S824= [MDUOut]=a÷b                                          MDUOut-Hold(S652,S823)
	S825= CtrlXERSO=0                                           Premise(F386)
	S826= XER[SO]=so                                            XER-SO-Hold(S654,S825)
	S827= CtrlXEROV=0                                           Premise(F387)
	S828= CtrlXERCA=0                                           Premise(F388)
	S829= CtrlOVReg=0                                           Premise(F389)
	S830= [OVReg]=OverFlow(a÷b)                                 OVReg-Hold(S658,S829)
	S831= CtrlDR1bit=0                                          Premise(F390)
	S832= [DR1bit]=so|OverFlow(a÷b)                             DR1bit-Hold(S660,S831)
	S833= CtrlDR4bit=0                                          Premise(F391)
	S834= [DR4bit]={Compare0(a÷b),so|OverFlow(a÷b)}             DR4bit-Hold(S662,S833)
	S835= CtrlCRRegs=0                                          Premise(F392)
	S836= CtrlCRRegsCR0=0                                       Premise(F393)
	S837= CtrlCRRegsW4bitRegs=0                                 Premise(F394)
	S838= CtrlCRRegsW1bitRegs=0                                 Premise(F395)

DMMU2	S839= PIDReg.Out=pid                                        PIDReg-Out(S796)
	S840= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S796)
	S841= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S796)
	S842= PC.CIA=addr                                           PC-Out(S800)
	S843= PC.CIA31_28=addr[31:28]                               PC-Out(S800)
	S844= PC.Out=addr+4                                         PC-Out(S801)
	S845= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S803)
	S846= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S803)
	S847= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S803)
	S848= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S805)
	S849= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S805)
	S850= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S805)
	S851= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S810)
	S852= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S810)
	S853= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S810)
	S854= IR.Out0_5=31                                          IR-Out(S815)
	S855= IR.Out6_10=rT                                         IR-Out(S815)
	S856= IR.Out11_15=rA                                        IR-Out(S815)
	S857= IR.Out16_20=rB                                        IR-Out(S815)
	S858= IR.Out21_31=2007                                      IR-Out(S815)
	S859= A.Out=a                                               A-Out(S820)
	S860= A.Out26_31=a[26:31]                                   A-Out(S820)
	S861= A.Out30_31=a[30:31]                                   A-Out(S820)
	S862= B.Out=b                                               B-Out(S822)
	S863= B.Out26_31=b[26:31]                                   B-Out(S822)
	S864= B.Out30_31=b[30:31]                                   B-Out(S822)
	S865= MDUOut.Out=a÷b                                        MDUOut-Out(S824)
	S866= MDUOut.Out26_31=a÷b[26:31]                            MDUOut-Out(S824)
	S867= MDUOut.Out30_31=a÷b[30:31]                            MDUOut-Out(S824)
	S868= XER.SOOut=so                                          XER-SO-Out(S826)
	S869= OVReg.Out=OverFlow(a÷b)                               OVReg-Out(S830)
	S870= OVReg.Out26_31=OverFlow(a÷b)[26:31]                   OVReg-Out(S830)
	S871= OVReg.Out30_31=OverFlow(a÷b)[30:31]                   OVReg-Out(S830)
	S872= DR1bit.Out=so|OverFlow(a÷b)                           DR1bit-Out(S832)
	S873= DR1bit.Out26_31=so|OverFlow(a÷b)[26:31]               DR1bit-Out(S832)
	S874= DR1bit.Out30_31=so|OverFlow(a÷b)[30:31]               DR1bit-Out(S832)
	S875= DR4bit.Out={Compare0(a÷b),so|OverFlow(a÷b)}           DR4bit-Out(S834)
	S876= DR4bit.Out26_31={Compare0(a÷b),so|OverFlow(a÷b)}[26:31]DR4bit-Out(S834)
	S877= DR4bit.Out30_31={Compare0(a÷b),so|OverFlow(a÷b)}[30:31]DR4bit-Out(S834)
	S878= PIDReg.Out=>IMMU.PID                                  Premise(F396)
	S879= IMMU.PID=pid                                          Path(S839,S878)
	S880= PC.Out=>IMMU.IEA                                      Premise(F397)
	S881= IMMU.IEA=addr+4                                       Path(S844,S880)
	S882= IMMU.Addr={pid,addr+4}                                IMMU-Search(S879,S881)
	S883= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S879,S881)
	S884= IMMU.Addr=>IAddrReg.In                                Premise(F398)
	S885= IAddrReg.In={pid,addr+4}                              Path(S882,S884)
	S886= IMMU.Hit=>IMMUHitReg.In                               Premise(F399)
	S887= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S883,S886)
	S888= PC.Out=>ICache.IEA                                    Premise(F400)
	S889= ICache.IEA=addr+4                                     Path(S844,S888)
	S890= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S889)
	S891= ICache.Out=>ICacheReg.In                              Premise(F401)
	S892= ICache.Hit=>ICacheHitReg.In                           Premise(F402)
	S893= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S890,S892)
	S894= IMMUHitReg.Out=>CU.IMemHit                            Premise(F403)
	S895= CU.IMemHit=IMMUHit(pid,addr)                          Path(S848,S894)
	S896= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F404)
	S897= CU.ICacheHit=ICacheHit(addr)                          Path(S851,S896)
	S898= IAddrReg.Out=>IMem.RAddr                              Premise(F405)
	S899= IMem.RAddr={pid,addr}                                 Path(S845,S898)
	S900= IMem.Out={31,rT,rA,rB,2007}                           IMem-Read(S899,S812)
	S901= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S899,S812)
	S902= IMem.Out=>IRMux.MemData                               Premise(F406)
	S903= IRMux.MemData={31,rT,rA,rB,2007}                      Path(S900,S902)
	S904= IRMux.Out={31,rT,rA,rB,2007}                          IRMux-Select(S903)
	S905= ICacheReg.Out=>IRMux.CacheData                        Premise(F407)
	S906= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F408)
	S907= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S848,S906)
	S908= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F409)
	S909= IRMux.CacheSel=ICacheHit(addr)                        Path(S851,S908)
	S910= IRMux.Out=>IR.In                                      Premise(F410)
	S911= IR.In={31,rT,rA,rB,2007}                              Path(S904,S910)
	S912= IMem.MEM8WordOut=>ICache.WData                        Premise(F411)
	S913= ICache.WData=IMemGet8Word({pid,addr})                 Path(S901,S912)
	S914= PC.Out=>ICache.IEA                                    Premise(F412)
	S915= IR.Out0_5=>CU.Op                                      Premise(F413)
	S916= CU.Op=31                                              Path(S854,S915)
	S917= IR.Out11_15=>GPRegs.RReg1                             Premise(F414)
	S918= GPRegs.RReg1=rA                                       Path(S856,S917)
	S919= GPRegs.Rdata1=a                                       GPRegs-Read(S918,S817)
	S920= IR.Out16_20=>GPRegs.RReg2                             Premise(F415)
	S921= GPRegs.RReg2=rB                                       Path(S857,S920)
	S922= GPRegs.Rdata2=b                                       GPRegs-Read(S921,S818)
	S923= IR.Out21_31=>CU.IRFunc                                Premise(F416)
	S924= CU.IRFunc=2007                                        Path(S858,S923)
	S925= CU.Func=mdu_div                                       CU(S916,S924)
	S926= GPRegs.Rdata1=>A.In                                   Premise(F417)
	S927= A.In=a                                                Path(S919,S926)
	S928= GPRegs.Rdata2=>B.In                                   Premise(F418)
	S929= B.In=b                                                Path(S922,S928)
	S930= A.Out=>MDU.A                                          Premise(F419)
	S931= MDU.A=a                                               Path(S859,S930)
	S932= B.Out=>MDU.B                                          Premise(F420)
	S933= MDU.B=b                                               Path(S862,S932)
	S934= CU.Func=>MDU.Func                                     Premise(F421)
	S935= MDU.Func=mdu_div                                      Path(S925,S934)
	S936= MDU.Out0_31=a÷b                                       MDU(S931,S933)
	S937= MDU.CMP=Compare0(a÷b)                                 MDU(S931,S933)
	S938= MDU.OV=OverFlow(a÷b)                                  MDU(S931,S933)
	S939= MDU.Out0_31=>MDUOut.In                                Premise(F422)
	S940= MDUOut.In=a÷b                                         Path(S936,S939)
	S941= XER.SOOut=>ORGate.A                                   Premise(F423)
	S942= ORGate.A=so                                           Path(S868,S941)
	S943= MDU.OV=>ORGate.B                                      Premise(F424)
	S944= ORGate.B=OverFlow(a÷b)                                Path(S938,S943)
	S945= ORGate.Out=so|OverFlow(a÷b)                           ORGate(S942,S944)
	S946= MDU.OV=>OVReg.In                                      Premise(F425)
	S947= OVReg.In=OverFlow(a÷b)                                Path(S938,S946)
	S948= MDU.CMP=>DataCmb.A                                    Premise(F426)
	S949= DataCmb.A=Compare0(a÷b)                               Path(S937,S948)
	S950= ORGate.Out=>DataCmb.B                                 Premise(F427)
	S951= DataCmb.B=so|OverFlow(a÷b)                            Path(S945,S950)
	S952= DataCmb.Out={Compare0(a÷b),so|OverFlow(a÷b)}          DataCmb(S949,S951)
	S953= ORGate.Out=>DR1bit.In                                 Premise(F428)
	S954= DR1bit.In=so|OverFlow(a÷b)                            Path(S945,S953)
	S955= DataCmb.Out=>DR4bit.In                                Premise(F429)
	S956= DR4bit.In={Compare0(a÷b),so|OverFlow(a÷b)}            Path(S952,S955)
	S957= IR.Out6_10=>GPRegs.WReg                               Premise(F430)
	S958= GPRegs.WReg=rT                                        Path(S855,S957)
	S959= MDUOut.Out=>GPRegs.WData                              Premise(F431)
	S960= GPRegs.WData=a÷b                                      Path(S865,S959)
	S961= DR4bit.Out=>CRRegs.CR0In                              Premise(F432)
	S962= CRRegs.CR0In={Compare0(a÷b),so|OverFlow(a÷b)}         Path(S875,S961)
	S963= DR1bit.Out=>XER.SOIn                                  Premise(F433)
	S964= XER.SOIn=so|OverFlow(a÷b)                             Path(S872,S963)
	S965= OVReg.Out=>XER.OVIn                                   Premise(F434)
	S966= XER.OVIn=OverFlow(a÷b)                                Path(S869,S965)
	S967= CtrlPIDReg=0                                          Premise(F435)
	S968= [PIDReg]=pid                                          PIDReg-Hold(S796,S967)
	S969= CtrlIMMU=0                                            Premise(F436)
	S970= CtrlPC=0                                              Premise(F437)
	S971= CtrlPCInc=0                                           Premise(F438)
	S972= PC[CIA]=addr                                          PC-Hold(S800,S971)
	S973= PC[Out]=addr+4                                        PC-Hold(S801,S970,S971)
	S974= CtrlIAddrReg=0                                        Premise(F439)
	S975= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S803,S974)
	S976= CtrlIMMUHitReg=0                                      Premise(F440)
	S977= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S805,S976)
	S978= CtrlICache=0                                          Premise(F441)
	S979= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S807,S978)
	S980= CtrlICacheReg=0                                       Premise(F442)
	S981= CtrlICacheHitReg=0                                    Premise(F443)
	S982= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S810,S981)
	S983= CtrlIMem=0                                            Premise(F444)
	S984= IMem[{pid,addr}]={31,rT,rA,rB,2007}                   IMem-Hold(S812,S983)
	S985= CtrlIRMux=0                                           Premise(F445)
	S986= CtrlIR=0                                              Premise(F446)
	S987= [IR]={31,rT,rA,rB,2007}                               IR-Hold(S815,S986)
	S988= CtrlGPRegs=0                                          Premise(F447)
	S989= GPRegs[rA]=a                                          GPRegs-Hold(S817,S988)
	S990= GPRegs[rB]=b                                          GPRegs-Hold(S818,S988)
	S991= CtrlA=0                                               Premise(F448)
	S992= [A]=a                                                 A-Hold(S820,S991)
	S993= CtrlB=0                                               Premise(F449)
	S994= [B]=b                                                 B-Hold(S822,S993)
	S995= CtrlMDUOut=0                                          Premise(F450)
	S996= [MDUOut]=a÷b                                          MDUOut-Hold(S824,S995)
	S997= CtrlXERSO=0                                           Premise(F451)
	S998= XER[SO]=so                                            XER-SO-Hold(S826,S997)
	S999= CtrlXEROV=0                                           Premise(F452)
	S1000= CtrlXERCA=0                                          Premise(F453)
	S1001= CtrlOVReg=0                                          Premise(F454)
	S1002= [OVReg]=OverFlow(a÷b)                                OVReg-Hold(S830,S1001)
	S1003= CtrlDR1bit=0                                         Premise(F455)
	S1004= [DR1bit]=so|OverFlow(a÷b)                            DR1bit-Hold(S832,S1003)
	S1005= CtrlDR4bit=0                                         Premise(F456)
	S1006= [DR4bit]={Compare0(a÷b),so|OverFlow(a÷b)}            DR4bit-Hold(S834,S1005)
	S1007= CtrlCRRegs=0                                         Premise(F457)
	S1008= CtrlCRRegsCR0=0                                      Premise(F458)
	S1009= CtrlCRRegsW4bitRegs=0                                Premise(F459)
	S1010= CtrlCRRegsW1bitRegs=0                                Premise(F460)

WB	S1011= PIDReg.Out=pid                                       PIDReg-Out(S968)
	S1012= PIDReg.Out26_31=pid[26:31]                           PIDReg-Out(S968)
	S1013= PIDReg.Out30_31=pid[30:31]                           PIDReg-Out(S968)
	S1014= PC.CIA=addr                                          PC-Out(S972)
	S1015= PC.CIA31_28=addr[31:28]                              PC-Out(S972)
	S1016= PC.Out=addr+4                                        PC-Out(S973)
	S1017= IAddrReg.Out={pid,addr}                              IAddrReg-Out(S975)
	S1018= IAddrReg.Out26_31={pid,addr}[26:31]                  IAddrReg-Out(S975)
	S1019= IAddrReg.Out30_31={pid,addr}[30:31]                  IAddrReg-Out(S975)
	S1020= IMMUHitReg.Out=IMMUHit(pid,addr)                     IMMUHitReg-Out(S977)
	S1021= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S977)
	S1022= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S977)
	S1023= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S982)
	S1024= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S982)
	S1025= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S982)
	S1026= IR.Out0_5=31                                         IR-Out(S987)
	S1027= IR.Out6_10=rT                                        IR-Out(S987)
	S1028= IR.Out11_15=rA                                       IR-Out(S987)
	S1029= IR.Out16_20=rB                                       IR-Out(S987)
	S1030= IR.Out21_31=2007                                     IR-Out(S987)
	S1031= A.Out=a                                              A-Out(S992)
	S1032= A.Out26_31=a[26:31]                                  A-Out(S992)
	S1033= A.Out30_31=a[30:31]                                  A-Out(S992)
	S1034= B.Out=b                                              B-Out(S994)
	S1035= B.Out26_31=b[26:31]                                  B-Out(S994)
	S1036= B.Out30_31=b[30:31]                                  B-Out(S994)
	S1037= MDUOut.Out=a÷b                                       MDUOut-Out(S996)
	S1038= MDUOut.Out26_31=a÷b[26:31]                           MDUOut-Out(S996)
	S1039= MDUOut.Out30_31=a÷b[30:31]                           MDUOut-Out(S996)
	S1040= XER.SOOut=so                                         XER-SO-Out(S998)
	S1041= OVReg.Out=OverFlow(a÷b)                              OVReg-Out(S1002)
	S1042= OVReg.Out26_31=OverFlow(a÷b)[26:31]                  OVReg-Out(S1002)
	S1043= OVReg.Out30_31=OverFlow(a÷b)[30:31]                  OVReg-Out(S1002)
	S1044= DR1bit.Out=so|OverFlow(a÷b)                          DR1bit-Out(S1004)
	S1045= DR1bit.Out26_31=so|OverFlow(a÷b)[26:31]              DR1bit-Out(S1004)
	S1046= DR1bit.Out30_31=so|OverFlow(a÷b)[30:31]              DR1bit-Out(S1004)
	S1047= DR4bit.Out={Compare0(a÷b),so|OverFlow(a÷b)}          DR4bit-Out(S1006)
	S1048= DR4bit.Out26_31={Compare0(a÷b),so|OverFlow(a÷b)}[26:31]DR4bit-Out(S1006)
	S1049= DR4bit.Out30_31={Compare0(a÷b),so|OverFlow(a÷b)}[30:31]DR4bit-Out(S1006)
	S1050= PIDReg.Out=>IMMU.PID                                 Premise(F461)
	S1051= IMMU.PID=pid                                         Path(S1011,S1050)
	S1052= PC.Out=>IMMU.IEA                                     Premise(F462)
	S1053= IMMU.IEA=addr+4                                      Path(S1016,S1052)
	S1054= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1051,S1053)
	S1055= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1051,S1053)
	S1056= IMMU.Addr=>IAddrReg.In                               Premise(F463)
	S1057= IAddrReg.In={pid,addr+4}                             Path(S1054,S1056)
	S1058= IMMU.Hit=>IMMUHitReg.In                              Premise(F464)
	S1059= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1055,S1058)
	S1060= PC.Out=>ICache.IEA                                   Premise(F465)
	S1061= ICache.IEA=addr+4                                    Path(S1016,S1060)
	S1062= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1061)
	S1063= ICache.Out=>ICacheReg.In                             Premise(F466)
	S1064= ICache.Hit=>ICacheHitReg.In                          Premise(F467)
	S1065= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1062,S1064)
	S1066= IMMUHitReg.Out=>CU.IMemHit                           Premise(F468)
	S1067= CU.IMemHit=IMMUHit(pid,addr)                         Path(S1020,S1066)
	S1068= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F469)
	S1069= CU.ICacheHit=ICacheHit(addr)                         Path(S1023,S1068)
	S1070= IAddrReg.Out=>IMem.RAddr                             Premise(F470)
	S1071= IMem.RAddr={pid,addr}                                Path(S1017,S1070)
	S1072= IMem.Out={31,rT,rA,rB,2007}                          IMem-Read(S1071,S984)
	S1073= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1071,S984)
	S1074= IMem.Out=>IRMux.MemData                              Premise(F471)
	S1075= IRMux.MemData={31,rT,rA,rB,2007}                     Path(S1072,S1074)
	S1076= IRMux.Out={31,rT,rA,rB,2007}                         IRMux-Select(S1075)
	S1077= ICacheReg.Out=>IRMux.CacheData                       Premise(F472)
	S1078= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F473)
	S1079= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S1020,S1078)
	S1080= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F474)
	S1081= IRMux.CacheSel=ICacheHit(addr)                       Path(S1023,S1080)
	S1082= IRMux.Out=>IR.In                                     Premise(F475)
	S1083= IR.In={31,rT,rA,rB,2007}                             Path(S1076,S1082)
	S1084= IMem.MEM8WordOut=>ICache.WData                       Premise(F476)
	S1085= ICache.WData=IMemGet8Word({pid,addr})                Path(S1073,S1084)
	S1086= PC.Out=>ICache.IEA                                   Premise(F477)
	S1087= IR.Out0_5=>CU.Op                                     Premise(F478)
	S1088= CU.Op=31                                             Path(S1026,S1087)
	S1089= IR.Out11_15=>GPRegs.RReg1                            Premise(F479)
	S1090= GPRegs.RReg1=rA                                      Path(S1028,S1089)
	S1091= GPRegs.Rdata1=a                                      GPRegs-Read(S1090,S989)
	S1092= IR.Out16_20=>GPRegs.RReg2                            Premise(F480)
	S1093= GPRegs.RReg2=rB                                      Path(S1029,S1092)
	S1094= GPRegs.Rdata2=b                                      GPRegs-Read(S1093,S990)
	S1095= IR.Out21_31=>CU.IRFunc                               Premise(F481)
	S1096= CU.IRFunc=2007                                       Path(S1030,S1095)
	S1097= CU.Func=mdu_div                                      CU(S1088,S1096)
	S1098= GPRegs.Rdata1=>A.In                                  Premise(F482)
	S1099= A.In=a                                               Path(S1091,S1098)
	S1100= GPRegs.Rdata2=>B.In                                  Premise(F483)
	S1101= B.In=b                                               Path(S1094,S1100)
	S1102= A.Out=>MDU.A                                         Premise(F484)
	S1103= MDU.A=a                                              Path(S1031,S1102)
	S1104= B.Out=>MDU.B                                         Premise(F485)
	S1105= MDU.B=b                                              Path(S1034,S1104)
	S1106= CU.Func=>MDU.Func                                    Premise(F486)
	S1107= MDU.Func=mdu_div                                     Path(S1097,S1106)
	S1108= MDU.Out0_31=a÷b                                      MDU(S1103,S1105)
	S1109= MDU.CMP=Compare0(a÷b)                                MDU(S1103,S1105)
	S1110= MDU.OV=OverFlow(a÷b)                                 MDU(S1103,S1105)
	S1111= MDU.Out0_31=>MDUOut.In                               Premise(F487)
	S1112= MDUOut.In=a÷b                                        Path(S1108,S1111)
	S1113= XER.SOOut=>ORGate.A                                  Premise(F488)
	S1114= ORGate.A=so                                          Path(S1040,S1113)
	S1115= MDU.OV=>ORGate.B                                     Premise(F489)
	S1116= ORGate.B=OverFlow(a÷b)                               Path(S1110,S1115)
	S1117= ORGate.Out=so|OverFlow(a÷b)                          ORGate(S1114,S1116)
	S1118= MDU.OV=>OVReg.In                                     Premise(F490)
	S1119= OVReg.In=OverFlow(a÷b)                               Path(S1110,S1118)
	S1120= MDU.CMP=>DataCmb.A                                   Premise(F491)
	S1121= DataCmb.A=Compare0(a÷b)                              Path(S1109,S1120)
	S1122= ORGate.Out=>DataCmb.B                                Premise(F492)
	S1123= DataCmb.B=so|OverFlow(a÷b)                           Path(S1117,S1122)
	S1124= DataCmb.Out={Compare0(a÷b),so|OverFlow(a÷b)}         DataCmb(S1121,S1123)
	S1125= ORGate.Out=>DR1bit.In                                Premise(F493)
	S1126= DR1bit.In=so|OverFlow(a÷b)                           Path(S1117,S1125)
	S1127= DataCmb.Out=>DR4bit.In                               Premise(F494)
	S1128= DR4bit.In={Compare0(a÷b),so|OverFlow(a÷b)}           Path(S1124,S1127)
	S1129= IR.Out6_10=>GPRegs.WReg                              Premise(F495)
	S1130= GPRegs.WReg=rT                                       Path(S1027,S1129)
	S1131= MDUOut.Out=>GPRegs.WData                             Premise(F496)
	S1132= GPRegs.WData=a÷b                                     Path(S1037,S1131)
	S1133= DR4bit.Out=>CRRegs.CR0In                             Premise(F497)
	S1134= CRRegs.CR0In={Compare0(a÷b),so|OverFlow(a÷b)}        Path(S1047,S1133)
	S1135= DR1bit.Out=>XER.SOIn                                 Premise(F498)
	S1136= XER.SOIn=so|OverFlow(a÷b)                            Path(S1044,S1135)
	S1137= OVReg.Out=>XER.OVIn                                  Premise(F499)
	S1138= XER.OVIn=OverFlow(a÷b)                               Path(S1041,S1137)
	S1139= CtrlPIDReg=0                                         Premise(F500)
	S1140= [PIDReg]=pid                                         PIDReg-Hold(S968,S1139)
	S1141= CtrlIMMU=0                                           Premise(F501)
	S1142= CtrlPC=0                                             Premise(F502)
	S1143= CtrlPCInc=0                                          Premise(F503)
	S1144= PC[CIA]=addr                                         PC-Hold(S972,S1143)
	S1145= PC[Out]=addr+4                                       PC-Hold(S973,S1142,S1143)
	S1146= CtrlIAddrReg=0                                       Premise(F504)
	S1147= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S975,S1146)
	S1148= CtrlIMMUHitReg=0                                     Premise(F505)
	S1149= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S977,S1148)
	S1150= CtrlICache=0                                         Premise(F506)
	S1151= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S979,S1150)
	S1152= CtrlICacheReg=0                                      Premise(F507)
	S1153= CtrlICacheHitReg=0                                   Premise(F508)
	S1154= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S982,S1153)
	S1155= CtrlIMem=0                                           Premise(F509)
	S1156= IMem[{pid,addr}]={31,rT,rA,rB,2007}                  IMem-Hold(S984,S1155)
	S1157= CtrlIRMux=0                                          Premise(F510)
	S1158= CtrlIR=0                                             Premise(F511)
	S1159= [IR]={31,rT,rA,rB,2007}                              IR-Hold(S987,S1158)
	S1160= CtrlGPRegs=1                                         Premise(F512)
	S1161= GPRegs[rT]=a÷b                                       GPRegs-Write(S1130,S1132,S1160)
	S1162= CtrlA=0                                              Premise(F513)
	S1163= [A]=a                                                A-Hold(S992,S1162)
	S1164= CtrlB=0                                              Premise(F514)
	S1165= [B]=b                                                B-Hold(S994,S1164)
	S1166= CtrlMDUOut=0                                         Premise(F515)
	S1167= [MDUOut]=a÷b                                         MDUOut-Hold(S996,S1166)
	S1168= CtrlXERSO=1                                          Premise(F516)
	S1169= XER[SO]=so|OverFlow(a÷b)                             XER-SO-Write(S1136,S1168)
	S1170= CtrlXEROV=1                                          Premise(F517)
	S1171= XER[OV]=OverFlow(a÷b)                                XER-OV-Write(S1138,S1170)
	S1172= CtrlXERCA=0                                          Premise(F518)
	S1173= CtrlOVReg=0                                          Premise(F519)
	S1174= [OVReg]=OverFlow(a÷b)                                OVReg-Hold(S1002,S1173)
	S1175= CtrlDR1bit=0                                         Premise(F520)
	S1176= [DR1bit]=so|OverFlow(a÷b)                            DR1bit-Hold(S1004,S1175)
	S1177= CtrlDR4bit=0                                         Premise(F521)
	S1178= [DR4bit]={Compare0(a÷b),so|OverFlow(a÷b)}            DR4bit-Hold(S1006,S1177)
	S1179= CtrlCRRegs=0                                         Premise(F522)
	S1180= CtrlCRRegsCR0=1                                      Premise(F523)
	S1181= CRRegs[CR0]={Compare0(a÷b),so|OverFlow(a÷b)}         CRRegs-CR0-Write(S1134,S1180)
	S1182= CtrlCRRegsW4bitRegs=0                                Premise(F524)
	S1183= CtrlCRRegsW1bitRegs=0                                Premise(F525)

POST	S1140= [PIDReg]=pid                                         PIDReg-Hold(S968,S1139)
	S1144= PC[CIA]=addr                                         PC-Hold(S972,S1143)
	S1145= PC[Out]=addr+4                                       PC-Hold(S973,S1142,S1143)
	S1147= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S975,S1146)
	S1149= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S977,S1148)
	S1151= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S979,S1150)
	S1154= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S982,S1153)
	S1156= IMem[{pid,addr}]={31,rT,rA,rB,2007}                  IMem-Hold(S984,S1155)
	S1159= [IR]={31,rT,rA,rB,2007}                              IR-Hold(S987,S1158)
	S1161= GPRegs[rT]=a÷b                                       GPRegs-Write(S1130,S1132,S1160)
	S1163= [A]=a                                                A-Hold(S992,S1162)
	S1165= [B]=b                                                B-Hold(S994,S1164)
	S1167= [MDUOut]=a÷b                                         MDUOut-Hold(S996,S1166)
	S1169= XER[SO]=so|OverFlow(a÷b)                             XER-SO-Write(S1136,S1168)
	S1171= XER[OV]=OverFlow(a÷b)                                XER-OV-Write(S1138,S1170)
	S1174= [OVReg]=OverFlow(a÷b)                                OVReg-Hold(S1002,S1173)
	S1176= [DR1bit]=so|OverFlow(a÷b)                            DR1bit-Hold(S1004,S1175)
	S1178= [DR4bit]={Compare0(a÷b),so|OverFlow(a÷b)}            DR4bit-Hold(S1006,S1177)
	S1181= CRRegs[CR0]={Compare0(a÷b),so|OverFlow(a÷b)}         CRRegs-CR0-Write(S1134,S1180)

