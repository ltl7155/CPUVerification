
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,rT,rD,0,35}                      Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= PC.Out=>IMem.RAddr                                      Premise(F3)
	S6= IMem.RAddr=addr                                         Path(S4,S5)
	S7= CP0.ASID=>IMem.ASID                                     Premise(F4)
	S8= IMem.ASID=pid                                           Path(S3,S7)
	S9= IMem.Out={0,rS,rT,rD,0,35}                              IMem-Read(S8,S6,S2)
	S10= IMem.Out=>IR_ID.In                                     Premise(F6)
	S11= IR_ID.In={0,rS,rT,rD,0,35}                             Path(S9,S10)
	S12= CtrlPC=0                                               Premise(F46)
	S13= CtrlPCInc=1                                            Premise(F47)
	S14= PC[Out]=addr+4                                         PC-Inc(S1,S12,S13)
	S15= CtrlIR_ID=1                                            Premise(F53)
	S16= [IR_ID]={0,rS,rT,rD,0,35}                              IR_ID-Write(S11,S15)
	S17= GPR[rS]=a                                              Premise(F62)
	S18= GPR[rT]=b                                              Premise(F63)

ID	S19= IR_ID.Out={0,rS,rT,rD,0,35}                            IR-Out(S16)
	S20= IR_ID.Out25_21=rS                                      IR-Out(S16)
	S21= IR_ID.Out20_16=rT                                      IR-Out(S16)
	S22= IR_ID.Out25_21=>GPR.RReg1                              Premise(F72)
	S23= GPR.RReg1=rS                                           Path(S20,S22)
	S24= GPR.Rdata1=a                                           GPR-Read(S23,S17)
	S25= IR_ID.Out20_16=>GPR.RReg2                              Premise(F73)
	S26= GPR.RReg2=rT                                           Path(S21,S25)
	S27= GPR.Rdata2=b                                           GPR-Read(S26,S18)
	S28= GPR.Rdata1=>FU.InID1                                   Premise(F75)
	S29= FU.InID1=a                                             Path(S24,S28)
	S30= FU.OutID1=FU(a)                                        FU-Forward(S29)
	S31= FU.OutID1=>A_EX.In                                     Premise(F77)
	S32= A_EX.In=FU(a)                                          Path(S30,S31)
	S33= GPR.Rdata2=>FU.InID2                                   Premise(F78)
	S34= FU.InID2=b                                             Path(S27,S33)
	S35= FU.OutID2=FU(b)                                        FU-Forward(S34)
	S36= FU.OutID2=>B_EX.In                                     Premise(F80)
	S37= B_EX.In=FU(b)                                          Path(S35,S36)
	S38= IR_ID.Out=>IR_EX.In                                    Premise(F81)
	S39= IR_EX.In={0,rS,rT,rD,0,35}                             Path(S19,S38)
	S40= CtrlPC=0                                               Premise(F107)
	S41= CtrlPCInc=0                                            Premise(F108)
	S42= PC[Out]=addr+4                                         PC-Hold(S14,S40,S41)
	S43= CtrlA_EX=1                                             Premise(F116)
	S44= [A_EX]=FU(a)                                           A_EX-Write(S32,S43)
	S45= CtrlB_EX=1                                             Premise(F117)
	S46= [B_EX]=FU(b)                                           B_EX-Write(S37,S45)
	S47= CtrlIR_EX=1                                            Premise(F118)
	S48= [IR_EX]={0,rS,rT,rD,0,35}                              IR_EX-Write(S39,S47)

EX	S49= A_EX.Out=FU(a)                                         A_EX-Out(S44)
	S50= B_EX.Out=FU(b)                                         B_EX-Out(S46)
	S51= IR_EX.Out={0,rS,rT,rD,0,35}                            IR_EX-Out(S48)
	S52= A_EX.Out=>ALU.A                                        Premise(F146)
	S53= ALU.A=FU(a)                                            Path(S49,S52)
	S54= B_EX.Out=>ALU.B                                        Premise(F147)
	S55= ALU.B=FU(b)                                            Path(S50,S54)
	S56= ALU.Out=FU(b)-FU(a)                                    ALU(S53,S55)
	S57= ALU.Out=>ALUOut_MEM.In                                 Premise(F149)
	S58= ALUOut_MEM.In=FU(b)-FU(a)                              Path(S56,S57)
	S59= IR_EX.Out=>IR_MEM.In                                   Premise(F152)
	S60= IR_MEM.In={0,rS,rT,rD,0,35}                            Path(S51,S59)
	S61= CtrlPC=0                                               Premise(F167)
	S62= CtrlPCInc=0                                            Premise(F168)
	S63= PC[Out]=addr+4                                         PC-Hold(S42,S61,S62)
	S64= CtrlALUOut_MEM=1                                       Premise(F179)
	S65= [ALUOut_MEM]=FU(b)-FU(a)                               ALUOut_MEM-Write(S58,S64)
	S66= CtrlIR_MEM=1                                           Premise(F180)
	S67= [IR_MEM]={0,rS,rT,rD,0,35}                             IR_MEM-Write(S60,S66)

MEM	S68= ALUOut_MEM.Out=FU(b)-FU(a)                             ALUOut_MEM-Out(S65)
	S69= IR_MEM.Out={0,rS,rT,rD,0,35}                           IR_MEM-Out(S67)
	S70= IR_MEM.Out=>IR_WB.In                                   Premise(F215)
	S71= IR_WB.In={0,rS,rT,rD,0,35}                             Path(S69,S70)
	S72= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F216)
	S73= ALUOut_WB.In=FU(b)-FU(a)                               Path(S68,S72)
	S74= CtrlPC=0                                               Premise(F226)
	S75= CtrlPCInc=0                                            Premise(F227)
	S76= PC[Out]=addr+4                                         PC-Hold(S63,S74,S75)
	S77= CtrlIR_WB=1                                            Premise(F240)
	S78= [IR_WB]={0,rS,rT,rD,0,35}                              IR_WB-Write(S71,S77)
	S79= CtrlALUOut_WB=1                                        Premise(F241)
	S80= [ALUOut_WB]=FU(b)-FU(a)                                ALUOut_WB-Write(S73,S79)

WB	S81= IR_WB.Out15_11=rD                                      IR-Out(S78)
	S82= ALUOut_WB.Out=FU(b)-FU(a)                              ALUOut_WB-Out(S80)
	S83= IR_WB.Out15_11=>GPR.WReg                               Premise(F281)
	S84= GPR.WReg=rD                                            Path(S81,S83)
	S85= ALUOut_WB.Out=>GPR.WData                               Premise(F282)
	S86= GPR.WData=FU(b)-FU(a)                                  Path(S82,S85)
	S87= CtrlPC=0                                               Premise(F285)
	S88= CtrlPCInc=0                                            Premise(F286)
	S89= PC[Out]=addr+4                                         PC-Hold(S76,S87,S88)
	S90= CtrlGPR=1                                              Premise(F293)
	S91= GPR[rD]=FU(b)-FU(a)                                    GPR-Write(S84,S86,S90)

POST	S89= PC[Out]=addr+4                                         PC-Hold(S76,S87,S88)
	S91= GPR[rD]=FU(b)-FU(a)                                    GPR-Write(S84,S86,S90)

