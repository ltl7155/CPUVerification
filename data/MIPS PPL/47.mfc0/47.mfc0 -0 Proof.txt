
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={16,0,rT,rD,0,sel}                     Premise(F2)
	S3= CP0[rD]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={16,0,rT,rD,0,sel}                            IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR_ID.In                                     Premise(F7)
	S12= IR_ID.In={16,0,rT,rD,0,sel}                            Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F38)
	S14= CtrlPCInc=1                                            Premise(F39)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlCP0=0                                              Premise(F42)
	S17= CP0[rD]=a                                              CP0-Hold(S3,S16)
	S18= CtrlIR_ID=1                                            Premise(F45)
	S19= [IR_ID]={16,0,rT,rD,0,sel}                             IR_ID-Write(S12,S18)

ID	S20= IR_ID.Out={16,0,rT,rD,0,sel}                           IR-Out(S19)
	S21= IR_ID.Out=>IR_EX.In                                    Premise(F61)
	S22= IR_EX.In={16,0,rT,rD,0,sel}                            Path(S20,S21)
	S23= CtrlPC=0                                               Premise(F88)
	S24= CtrlPCInc=0                                            Premise(F89)
	S25= PC[Out]=addr+4                                         PC-Hold(S15,S23,S24)
	S26= CtrlCP0=0                                              Premise(F92)
	S27= CP0[rD]=a                                              CP0-Hold(S17,S26)
	S28= CtrlIR_EX=1                                            Premise(F96)
	S29= [IR_EX]={16,0,rT,rD,0,sel}                             IR_EX-Write(S22,S28)

EX	S30= IR_EX.Out={16,0,rT,rD,0,sel}                           IR_EX-Out(S29)
	S31= IR_EX.Out15_11=rD                                      IR_EX-Out(S29)
	S32= IR_EX.Out15_11=>CP0.RReg                               Premise(F117)
	S33= CP0.RReg=rD                                            Path(S31,S32)
	S34= CP0.Rdata=a                                            CP0-Read(S33,S27)
	S35= CP0.Rdata=>ALUOut_MEM.In                               Premise(F118)
	S36= ALUOut_MEM.In=a                                        Path(S34,S35)
	S37= IR_EX.Out=>IR_MEM.In                                   Premise(F121)
	S38= IR_MEM.In={16,0,rT,rD,0,sel}                           Path(S30,S37)
	S39= CtrlPC=0                                               Premise(F136)
	S40= CtrlPCInc=0                                            Premise(F137)
	S41= PC[Out]=addr+4                                         PC-Hold(S25,S39,S40)
	S42= CtrlALUOut_MEM=1                                       Premise(F145)
	S43= [ALUOut_MEM]=a                                         ALUOut_MEM-Write(S36,S42)
	S44= CtrlIR_MEM=1                                           Premise(F146)
	S45= [IR_MEM]={16,0,rT,rD,0,sel}                            IR_MEM-Write(S38,S44)

MEM	S46= ALUOut_MEM.Out=a                                       ALUOut_MEM-Out(S43)
	S47= IR_MEM.Out={16,0,rT,rD,0,sel}                          IR_MEM-Out(S45)
	S48= IR_MEM.Out=>IR_WB.In                                   Premise(F173)
	S49= IR_WB.In={16,0,rT,rD,0,sel}                            Path(S47,S48)
	S50= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F174)
	S51= ALUOut_WB.In=a                                         Path(S46,S50)
	S52= CtrlPC=0                                               Premise(F184)
	S53= CtrlPCInc=0                                            Premise(F185)
	S54= PC[Out]=addr+4                                         PC-Hold(S41,S52,S53)
	S55= CtrlIR_WB=1                                            Premise(F195)
	S56= [IR_WB]={16,0,rT,rD,0,sel}                             IR_WB-Write(S49,S55)
	S57= CtrlALUOut_WB=1                                        Premise(F196)
	S58= [ALUOut_WB]=a                                          ALUOut_WB-Write(S51,S57)

WB	S59= IR_WB.Out20_16=rT                                      IR-Out(S56)
	S60= ALUOut_WB.Out=a                                        ALUOut_WB-Out(S58)
	S61= IR_WB.Out20_16=>GPR.WReg                               Premise(F228)
	S62= GPR.WReg=rT                                            Path(S59,S61)
	S63= ALUOut_WB.Out=>GPR.WData                               Premise(F229)
	S64= GPR.WData=a                                            Path(S60,S63)
	S65= CtrlPC=0                                               Premise(F232)
	S66= CtrlPCInc=0                                            Premise(F233)
	S67= PC[Out]=addr+4                                         PC-Hold(S54,S65,S66)
	S68= CtrlGPR=1                                              Premise(F245)
	S69= GPR[rT]=a                                              GPR-Write(S62,S64,S68)

POST	S67= PC[Out]=addr+4                                         PC-Hold(S54,S65,S66)
	S69= GPR[rT]=a                                              GPR-Write(S62,S64,S68)

