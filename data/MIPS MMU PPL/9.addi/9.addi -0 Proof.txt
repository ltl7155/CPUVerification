
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={8,rS,rT,SIMM}                         Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= CP0.ASID=>IMMU.PID                                      Premise(F3)
	S6= IMMU.PID=pid                                            Path(S3,S5)
	S7= PC.Out=>IMMU.IEA                                        Premise(F4)
	S8= IMMU.IEA=addr                                           Path(S4,S7)
	S9= IMMU.Addr={pid,addr}                                    IMMU-Search(S6,S8)
	S10= IMMU.Addr=>IAddrReg.In                                 Premise(F5)
	S11= IAddrReg.In={pid,addr}                                 Path(S9,S10)
	S12= CtrlPC=0                                               Premise(F24)
	S13= CtrlPCInc=0                                            Premise(F25)
	S14= PC[Out]=addr                                           PC-Hold(S1,S12,S13)
	S15= CtrlIAddrReg=1                                         Premise(F26)
	S16= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S11,S15)
	S17= CtrlIMem=0                                             Premise(F31)
	S18= IMem[{pid,addr}]={8,rS,rT,SIMM}                        IMem-Hold(S2,S17)

IF(IMMU)	S19= PC.Out=addr                                            PC-Out(S14)
	S20= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S16)
	S21= IAddrReg.Out=>IMem.RAddr                               Premise(F57)
	S22= IMem.RAddr={pid,addr}                                  Path(S20,S21)
	S23= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S22,S18)
	S24= IMem.MEM8WordOut=>ICache.WData                         Premise(F63)
	S25= ICache.WData=IMemGet8Word({pid,addr})                  Path(S23,S24)
	S26= PC.Out=>ICache.IEA                                     Premise(F64)
	S27= ICache.IEA=addr                                        Path(S19,S26)
	S28= CtrlPC=0                                               Premise(F72)
	S29= CtrlPCInc=1                                            Premise(F73)
	S30= PC[Out]=addr+4                                         PC-Inc(S14,S28,S29)
	S31= CtrlICache=1                                           Premise(F75)
	S32= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S27,S25,S31)

ID	S33= CtrlPC=0                                               Premise(F120)
	S34= CtrlPCInc=0                                            Premise(F121)
	S35= PC[Out]=addr+4                                         PC-Hold(S30,S33,S34)
	S36= CtrlICache=0                                           Premise(F123)
	S37= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S32,S36)

EX	S38= CtrlPC=0                                               Premise(F166)
	S39= CtrlPCInc=0                                            Premise(F167)
	S40= PC[Out]=addr+4                                         PC-Hold(S35,S38,S39)
	S41= CtrlICache=0                                           Premise(F169)
	S42= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S37,S41)

MEM	S43= CtrlPC=0                                               Premise(F218)
	S44= CtrlPCInc=0                                            Premise(F219)
	S45= PC[Out]=addr+4                                         PC-Hold(S40,S43,S44)
	S46= CtrlICache=0                                           Premise(F221)
	S47= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S42,S46)

WB	S48= CtrlPC=0                                               Premise(F348)
	S49= CtrlPCInc=0                                            Premise(F349)
	S50= PC[Out]=addr+4                                         PC-Hold(S45,S48,S49)
	S51= CtrlICache=0                                           Premise(F351)
	S52= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S47,S51)

POST	S50= PC[Out]=addr+4                                         PC-Hold(S45,S48,S49)
	S52= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S47,S51)

