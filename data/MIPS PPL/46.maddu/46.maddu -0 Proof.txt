
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={28,rS,rT,0,0,1}                       Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)
	S4= GPR[rT]=b                                               Premise(F4)
	S5= [Lo]=lo                                                 Premise(F5)
	S6= [Hi]=hi                                                 Premise(F6)

IF	S7= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S8= PC.Out=addr                                             PC-Out(S1)
	S9= PC.Out=>IMem.RAddr                                      Premise(F7)
	S10= IMem.RAddr=addr                                        Path(S8,S9)
	S11= CP0.ASID=>IMem.ASID                                    Premise(F8)
	S12= IMem.ASID=pid                                          Path(S7,S11)
	S13= IMem.Out={28,rS,rT,0,0,1}                              IMem-Read(S12,S10,S2)
	S14= IMem.Out=>IR_ID.In                                     Premise(F10)
	S15= IR_ID.In={28,rS,rT,0,0,1}                              Path(S13,S14)
	S16= CtrlPC=0                                               Premise(F44)
	S17= CtrlPCInc=1                                            Premise(F45)
	S18= PC[Out]=addr+4                                         PC-Inc(S1,S16,S17)
	S19= CtrlIR_ID=1                                            Premise(F51)
	S20= [IR_ID]={28,rS,rT,0,0,1}                               IR_ID-Write(S15,S19)
	S21= CtrlGPR=0                                              Premise(F52)
	S22= GPR[rS]=a                                              GPR-Hold(S3,S21)
	S23= GPR[rT]=b                                              GPR-Hold(S4,S21)
	S24= CtrlHi=0                                               Premise(F56)
	S25= [Hi]=hi                                                Hi-Hold(S6,S24)
	S26= CtrlLo=0                                               Premise(F57)
	S27= [Lo]=lo                                                Lo-Hold(S5,S26)

ID	S28= IR_ID.Out25_21=rS                                      IR-Out(S20)
	S29= IR_ID.Out20_16=rT                                      IR-Out(S20)
	S30= IR_ID.Out25_21=>GPR.RReg1                              Premise(F68)
	S31= GPR.RReg1=rS                                           Path(S28,S30)
	S32= GPR.Rdata1=a                                           GPR-Read(S31,S22)
	S33= IR_ID.Out20_16=>GPR.RReg2                              Premise(F69)
	S34= GPR.RReg2=rT                                           Path(S29,S33)
	S35= GPR.Rdata2=b                                           GPR-Read(S34,S23)
	S36= GPR.Rdata1=>FU.InID1                                   Premise(F71)
	S37= FU.InID1=a                                             Path(S32,S36)
	S38= FU.OutID1=FU(a)                                        FU-Forward(S37)
	S39= FU.OutID1=>A_EX.In                                     Premise(F73)
	S40= A_EX.In=FU(a)                                          Path(S38,S39)
	S41= GPR.Rdata2=>FU.InID2                                   Premise(F74)
	S42= FU.InID2=b                                             Path(S35,S41)
	S43= FU.OutID2=FU(b)                                        FU-Forward(S42)
	S44= FU.OutID2=>B_EX.In                                     Premise(F76)
	S45= B_EX.In=FU(b)                                          Path(S43,S44)
	S46= CtrlPC=0                                               Premise(F97)
	S47= CtrlPCInc=0                                            Premise(F98)
	S48= PC[Out]=addr+4                                         PC-Hold(S18,S46,S47)
	S49= CtrlA_EX=1                                             Premise(F106)
	S50= [A_EX]=FU(a)                                           A_EX-Write(S40,S49)
	S51= CtrlB_EX=1                                             Premise(F107)
	S52= [B_EX]=FU(b)                                           B_EX-Write(S45,S51)
	S53= CtrlHi=0                                               Premise(F109)
	S54= [Hi]=hi                                                Hi-Hold(S25,S53)
	S55= CtrlLo=0                                               Premise(F110)
	S56= [Lo]=lo                                                Lo-Hold(S27,S55)

EX	S57= A_EX.Out=FU(a)                                         A_EX-Out(S50)
	S58= B_EX.Out=FU(b)                                         B_EX-Out(S52)
	S59= Hi.Out=hi                                              Hi-Out(S54)
	S60= Lo.Out=lo                                              Lo-Out(S56)
	S61= Hi.Out=>MDU.Hi                                         Premise(F136)
	S62= MDU.Hi=hi                                              Path(S59,S61)
	S63= Lo.Out=>MDU.Lo                                         Premise(F137)
	S64= MDU.Lo=lo                                              Path(S60,S63)
	S65= A_EX.Out=>MDU.A                                        Premise(F138)
	S66= MDU.A=FU(a)                                            Path(S57,S65)
	S67= B_EX.Out=>MDU.B                                        Premise(F139)
	S68= MDU.B=FU(b)                                            Path(S58,S67)
	S69= MDU.lo=({hi,lo}+FU(a)*FU(b))[31:0]                     MDU(S66,S68,S62,S64)
	S70= MDU.hi=({hi,lo}+FU(a)*FU(b))[63:32]                    MDU(S66,S68,S62,S64)
	S71= MDU.hi=>Hi.In                                          Premise(F141)
	S72= Hi.In=({hi,lo}+FU(a)*FU(b))[63:32]                     Path(S70,S71)
	S73= MDU.lo=>Lo.In                                          Premise(F142)
	S74= Lo.In=({hi,lo}+FU(a)*FU(b))[31:0]                      Path(S69,S73)
	S75= CtrlPC=0                                               Premise(F152)
	S76= CtrlPCInc=0                                            Premise(F153)
	S77= PC[Out]=addr+4                                         PC-Hold(S48,S75,S76)
	S78= CtrlHi=1                                               Premise(F164)
	S79= [Hi]=({hi,lo}+FU(a)*FU(b))[63:32]                      Hi-Write(S72,S78)
	S80= CtrlLo=1                                               Premise(F165)
	S81= [Lo]=({hi,lo}+FU(a)*FU(b))[31:0]                       Lo-Write(S74,S80)

MEM	S82= CtrlPC=0                                               Premise(F206)
	S83= CtrlPCInc=0                                            Premise(F207)
	S84= PC[Out]=addr+4                                         PC-Hold(S77,S82,S83)
	S85= CtrlHi=0                                               Premise(F218)
	S86= [Hi]=({hi,lo}+FU(a)*FU(b))[63:32]                      Hi-Hold(S79,S85)
	S87= CtrlLo=0                                               Premise(F219)
	S88= [Lo]=({hi,lo}+FU(a)*FU(b))[31:0]                       Lo-Hold(S81,S87)

WB	S89= CtrlPC=0                                               Premise(F260)
	S90= CtrlPCInc=0                                            Premise(F261)
	S91= PC[Out]=addr+4                                         PC-Hold(S84,S89,S90)
	S92= CtrlHi=0                                               Premise(F272)
	S93= [Hi]=({hi,lo}+FU(a)*FU(b))[63:32]                      Hi-Hold(S86,S92)
	S94= CtrlLo=0                                               Premise(F273)
	S95= [Lo]=({hi,lo}+FU(a)*FU(b))[31:0]                       Lo-Hold(S88,S94)

POST	S91= PC[Out]=addr+4                                         PC-Hold(S84,S89,S90)
	S93= [Hi]=({hi,lo}+FU(a)*FU(b))[63:32]                      Hi-Hold(S86,S92)
	S95= [Lo]=({hi,lo}+FU(a)*FU(b))[31:0]                       Lo-Hold(S88,S94)

