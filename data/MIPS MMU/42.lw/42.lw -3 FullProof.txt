
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={35,rS,rT,offset}                      Premise(F2)
	S3= GPR[rS]=base                                            Premise(F3)
	S4= DMem[{pid,base+{16{offset[15]},offset}}]=a              Premise(F4)
	S5= DCache[base+{16{offset[15]},offset}]=a                  Premise(F5)
	S6= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataPremise(F6)

IF	S7= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S8= PC.Out=addr                                             PC-Out(S1)
	S9= CP0.ASID=>IMMU.PID                                      Premise(F7)
	S10= IMMU.PID=pid                                           Path(S7,S9)
	S11= PC.Out=>IMMU.IEA                                       Premise(F8)
	S12= IMMU.IEA=addr                                          Path(S8,S11)
	S13= IMMU.Addr={pid,addr}                                   IMMU-Search(S10,S12)
	S14= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S10,S12)
	S15= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S16= IAddrReg.In={pid,addr}                                 Path(S13,S15)
	S17= IMMU.Hit=>CU.IMMUHit                                   Premise(F10)
	S18= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S14,S17)
	S19= PC.Out=>ICache.IEA                                     Premise(F11)
	S20= ICache.IEA=addr                                        Path(S8,S19)
	S21= ICache.Hit=ICacheHit(addr)                             ICache-Search(S20)
	S22= ICache.Out=>IR.In                                      Premise(F12)
	S23= ICache.Out=>ICacheReg.In                               Premise(F13)
	S24= ICache.Hit=>CU.ICacheHit                               Premise(F14)
	S25= CU.ICacheHit=ICacheHit(addr)                           Path(S21,S24)
	S26= CtrlASIDIn=0                                           Premise(F15)
	S27= CtrlCP0=0                                              Premise(F16)
	S28= CP0[ASID]=pid                                          CP0-Hold(S0,S27)
	S29= CtrlEPCIn=0                                            Premise(F17)
	S30= CtrlExCodeIn=0                                         Premise(F18)
	S31= CtrlIMMU=0                                             Premise(F19)
	S32= CtrlPC=0                                               Premise(F20)
	S33= CtrlPCInc=0                                            Premise(F21)
	S34= PC[Out]=addr                                           PC-Hold(S1,S32,S33)
	S35= CtrlIAddrReg=1                                         Premise(F22)
	S36= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S16,S35)
	S37= CtrlICache=0                                           Premise(F23)
	S38= CtrlIR=0                                               Premise(F24)
	S39= CtrlICacheReg=1                                        Premise(F25)
	S40= CtrlIMem=0                                             Premise(F26)
	S41= IMem[{pid,addr}]={35,rS,rT,offset}                     IMem-Hold(S2,S40)
	S42= CtrlIRMux=0                                            Premise(F27)
	S43= CtrlGPR=0                                              Premise(F28)
	S44= GPR[rS]=base                                           GPR-Hold(S3,S43)
	S45= CtrlA=0                                                Premise(F29)
	S46= CtrlB=0                                                Premise(F30)
	S47= CtrlALUOut=0                                           Premise(F31)
	S48= CtrlDMMU=0                                             Premise(F32)
	S49= CtrlDAddrReg=0                                         Premise(F33)
	S50= CtrlDCache=0                                           Premise(F34)
	S51= DCache[base+{16{offset[15]},offset}]=a                 DCache-Hold(S5,S50)
	S52= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S6,S50)
	S53= CtrlDR=0                                               Premise(F35)
	S54= CtrlDCacheReg=0                                        Premise(F36)
	S55= CtrlDMem=0                                             Premise(F37)
	S56= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S4,S55)
	S57= CtrlDMem8Word=0                                        Premise(F38)

IF(IMMU)	S58= CP0.ASID=pid                                           CP0-Read-ASID(S28)
	S59= PC.Out=addr                                            PC-Out(S34)
	S60= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S36)
	S61= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S36)
	S62= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S36)
	S63= CU.IMMUHit=>CU.IMMUHit                                 Premise(F39)
	S64= CU.ICacheHit=>CU.ICacheHit                             Premise(F40)
	S65= IAddrReg.Out=>IMem.RAddr                               Premise(F41)
	S66= IMem.RAddr={pid,addr}                                  Path(S60,S65)
	S67= IMem.Out={35,rS,rT,offset}                             IMem-Read(S66,S41)
	S68= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S66,S41)
	S69= IMem.Out=>IRMux.MemData                                Premise(F42)
	S70= IRMux.MemData={35,rS,rT,offset}                        Path(S67,S69)
	S71= IRMux.Out={35,rS,rT,offset}                            IRMux-Select2(S70)
	S72= ICacheReg.Out=>IRMux.CacheData                         Premise(F43)
	S73= CU.IMMUHit=>IRMux.MemSel                               Premise(F44)
	S74= CU.ICacheHit=>IRMux.CacheSel                           Premise(F45)
	S75= IRMux.Out=>IR.In                                       Premise(F46)
	S76= IR.In={35,rS,rT,offset}                                Path(S71,S75)
	S77= IMem.MEM8WordOut=>ICache.WData                         Premise(F47)
	S78= ICache.WData=IMemGet8Word({pid,addr})                  Path(S68,S77)
	S79= PC.Out=>ICache.IEA                                     Premise(F48)
	S80= ICache.IEA=addr                                        Path(S59,S79)
	S81= ICache.Hit=ICacheHit(addr)                             ICache-Search(S80)
	S82= CtrlASIDIn=0                                           Premise(F49)
	S83= CtrlCP0=0                                              Premise(F50)
	S84= CP0[ASID]=pid                                          CP0-Hold(S28,S83)
	S85= CtrlEPCIn=0                                            Premise(F51)
	S86= CtrlExCodeIn=0                                         Premise(F52)
	S87= CtrlIMMU=0                                             Premise(F53)
	S88= CtrlPC=0                                               Premise(F54)
	S89= CtrlPCInc=1                                            Premise(F55)
	S90= PC[Out]=addr+4                                         PC-Inc(S34,S88,S89)
	S91= PC[CIA]=addr                                           PC-Inc(S34,S88,S89)
	S92= CtrlIAddrReg=0                                         Premise(F56)
	S93= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S36,S92)
	S94= CtrlICache=1                                           Premise(F57)
	S95= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S80,S78,S94)
	S96= CtrlIR=1                                               Premise(F58)
	S97= [IR]={35,rS,rT,offset}                                 IR-Write(S76,S96)
	S98= CtrlICacheReg=0                                        Premise(F59)
	S99= CtrlIMem=0                                             Premise(F60)
	S100= IMem[{pid,addr}]={35,rS,rT,offset}                    IMem-Hold(S41,S99)
	S101= CtrlIRMux=0                                           Premise(F61)
	S102= CtrlGPR=0                                             Premise(F62)
	S103= GPR[rS]=base                                          GPR-Hold(S44,S102)
	S104= CtrlA=0                                               Premise(F63)
	S105= CtrlB=0                                               Premise(F64)
	S106= CtrlALUOut=0                                          Premise(F65)
	S107= CtrlDMMU=0                                            Premise(F66)
	S108= CtrlDAddrReg=0                                        Premise(F67)
	S109= CtrlDCache=0                                          Premise(F68)
	S110= DCache[base+{16{offset[15]},offset}]=a                DCache-Hold(S51,S109)
	S111= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S52,S109)
	S112= CtrlDR=0                                              Premise(F69)
	S113= CtrlDCacheReg=0                                       Premise(F70)
	S114= CtrlDMem=0                                            Premise(F71)
	S115= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S56,S114)
	S116= CtrlDMem8Word=0                                       Premise(F72)

ID	S117= CP0.ASID=pid                                          CP0-Read-ASID(S84)
	S118= PC.Out=addr+4                                         PC-Out(S90)
	S119= PC.CIA=addr                                           PC-Out(S91)
	S120= PC.CIA31_28=addr[31:28]                               PC-Out(S91)
	S121= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S93)
	S122= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S93)
	S123= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S93)
	S124= IR.Out={35,rS,rT,offset}                              IR-Out(S97)
	S125= IR.Out31_26=35                                        IR-Out(S97)
	S126= IR.Out25_21=rS                                        IR-Out(S97)
	S127= IR.Out20_16=rT                                        IR-Out(S97)
	S128= IR.Out15_0=offset                                     IR-Out(S97)
	S129= IR.Out31_26=>CU.Op                                    Premise(F73)
	S130= CU.Op=35                                              Path(S125,S129)
	S131= CU.Func=alu_add                                       CU(S130)
	S132= CU.MemDataSelFunc=mds_lbz                             CU(S130)
	S133= IR.Out25_21=>GPR.RReg1                                Premise(F74)
	S134= GPR.RReg1=rS                                          Path(S126,S133)
	S135= GPR.Rdata1=base                                       GPR-Read(S134,S103)
	S136= IR.Out15_0=>IMMEXT.In                                 Premise(F75)
	S137= IMMEXT.In=offset                                      Path(S128,S136)
	S138= IMMEXT.Out={16{offset[15]},offset}                    IMMEXT(S137)
	S139= GPR.Rdata1=>A.In                                      Premise(F76)
	S140= A.In=base                                             Path(S135,S139)
	S141= IMMEXT.Out=>B.In                                      Premise(F77)
	S142= B.In={16{offset[15]},offset}                          Path(S138,S141)
	S143= CtrlASIDIn=0                                          Premise(F78)
	S144= CtrlCP0=0                                             Premise(F79)
	S145= CP0[ASID]=pid                                         CP0-Hold(S84,S144)
	S146= CtrlEPCIn=0                                           Premise(F80)
	S147= CtrlExCodeIn=0                                        Premise(F81)
	S148= CtrlIMMU=0                                            Premise(F82)
	S149= CtrlPC=0                                              Premise(F83)
	S150= CtrlPCInc=0                                           Premise(F84)
	S151= PC[CIA]=addr                                          PC-Hold(S91,S150)
	S152= PC[Out]=addr+4                                        PC-Hold(S90,S149,S150)
	S153= CtrlIAddrReg=0                                        Premise(F85)
	S154= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S93,S153)
	S155= CtrlICache=0                                          Premise(F86)
	S156= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S95,S155)
	S157= CtrlIR=0                                              Premise(F87)
	S158= [IR]={35,rS,rT,offset}                                IR-Hold(S97,S157)
	S159= CtrlICacheReg=0                                       Premise(F88)
	S160= CtrlIMem=0                                            Premise(F89)
	S161= IMem[{pid,addr}]={35,rS,rT,offset}                    IMem-Hold(S100,S160)
	S162= CtrlIRMux=0                                           Premise(F90)
	S163= CtrlGPR=0                                             Premise(F91)
	S164= GPR[rS]=base                                          GPR-Hold(S103,S163)
	S165= CtrlA=1                                               Premise(F92)
	S166= [A]=base                                              A-Write(S140,S165)
	S167= CtrlB=1                                               Premise(F93)
	S168= [B]={16{offset[15]},offset}                           B-Write(S142,S167)
	S169= CtrlALUOut=0                                          Premise(F94)
	S170= CtrlDMMU=0                                            Premise(F95)
	S171= CtrlDAddrReg=0                                        Premise(F96)
	S172= CtrlDCache=0                                          Premise(F97)
	S173= DCache[base+{16{offset[15]},offset}]=a                DCache-Hold(S110,S172)
	S174= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S111,S172)
	S175= CtrlDR=0                                              Premise(F98)
	S176= CtrlDCacheReg=0                                       Premise(F99)
	S177= CtrlDMem=0                                            Premise(F100)
	S178= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S115,S177)
	S179= CtrlDMem8Word=0                                       Premise(F101)

EX	S180= CP0.ASID=pid                                          CP0-Read-ASID(S145)
	S181= PC.CIA=addr                                           PC-Out(S151)
	S182= PC.CIA31_28=addr[31:28]                               PC-Out(S151)
	S183= PC.Out=addr+4                                         PC-Out(S152)
	S184= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S154)
	S185= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S154)
	S186= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S154)
	S187= IR.Out={35,rS,rT,offset}                              IR-Out(S158)
	S188= IR.Out31_26=35                                        IR-Out(S158)
	S189= IR.Out25_21=rS                                        IR-Out(S158)
	S190= IR.Out20_16=rT                                        IR-Out(S158)
	S191= IR.Out15_0=offset                                     IR-Out(S158)
	S192= A.Out=base                                            A-Out(S166)
	S193= A.Out1_0={base}[1:0]                                  A-Out(S166)
	S194= A.Out4_0={base}[4:0]                                  A-Out(S166)
	S195= B.Out={16{offset[15]},offset}                         B-Out(S168)
	S196= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S168)
	S197= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S168)
	S198= A.Out=>ALU.A                                          Premise(F102)
	S199= ALU.A=base                                            Path(S192,S198)
	S200= B.Out=>ALU.B                                          Premise(F103)
	S201= ALU.B={16{offset[15]},offset}                         Path(S195,S200)
	S202= ALU.Func=6'b010010                                    Premise(F104)
	S203= ALU.Out=base+{16{offset[15]},offset}                  ALU(S199,S201)
	S204= ALU.Out1_0={base+{16{offset[15]},offset}}[1:0]        ALU(S199,S201)
	S205= ALU.CMP=Compare0(base+{16{offset[15]},offset})        ALU(S199,S201)
	S206= ALU.OV=OverFlow(base+{16{offset[15]},offset})         ALU(S199,S201)
	S207= ALU.CA=Carry(base+{16{offset[15]},offset})            ALU(S199,S201)
	S208= ALU.Out=>ALUOut.In                                    Premise(F105)
	S209= ALUOut.In=base+{16{offset[15]},offset}                Path(S203,S208)
	S210= CtrlASIDIn=0                                          Premise(F106)
	S211= CtrlCP0=0                                             Premise(F107)
	S212= CP0[ASID]=pid                                         CP0-Hold(S145,S211)
	S213= CtrlEPCIn=0                                           Premise(F108)
	S214= CtrlExCodeIn=0                                        Premise(F109)
	S215= CtrlIMMU=0                                            Premise(F110)
	S216= CtrlPC=0                                              Premise(F111)
	S217= CtrlPCInc=0                                           Premise(F112)
	S218= PC[CIA]=addr                                          PC-Hold(S151,S217)
	S219= PC[Out]=addr+4                                        PC-Hold(S152,S216,S217)
	S220= CtrlIAddrReg=0                                        Premise(F113)
	S221= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S154,S220)
	S222= CtrlICache=0                                          Premise(F114)
	S223= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S156,S222)
	S224= CtrlIR=0                                              Premise(F115)
	S225= [IR]={35,rS,rT,offset}                                IR-Hold(S158,S224)
	S226= CtrlICacheReg=0                                       Premise(F116)
	S227= CtrlIMem=0                                            Premise(F117)
	S228= IMem[{pid,addr}]={35,rS,rT,offset}                    IMem-Hold(S161,S227)
	S229= CtrlIRMux=0                                           Premise(F118)
	S230= CtrlGPR=0                                             Premise(F119)
	S231= GPR[rS]=base                                          GPR-Hold(S164,S230)
	S232= CtrlA=0                                               Premise(F120)
	S233= [A]=base                                              A-Hold(S166,S232)
	S234= CtrlB=0                                               Premise(F121)
	S235= [B]={16{offset[15]},offset}                           B-Hold(S168,S234)
	S236= CtrlALUOut=1                                          Premise(F122)
	S237= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Write(S209,S236)
	S238= CtrlDMMU=0                                            Premise(F123)
	S239= CtrlDAddrReg=0                                        Premise(F124)
	S240= CtrlDCache=0                                          Premise(F125)
	S241= DCache[base+{16{offset[15]},offset}]=a                DCache-Hold(S173,S240)
	S242= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S174,S240)
	S243= CtrlDR=0                                              Premise(F126)
	S244= CtrlDCacheReg=0                                       Premise(F127)
	S245= CtrlDMem=0                                            Premise(F128)
	S246= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S178,S245)
	S247= CtrlDMem8Word=0                                       Premise(F129)

MEM	S248= CP0.ASID=pid                                          CP0-Read-ASID(S212)
	S249= PC.CIA=addr                                           PC-Out(S218)
	S250= PC.CIA31_28=addr[31:28]                               PC-Out(S218)
	S251= PC.Out=addr+4                                         PC-Out(S219)
	S252= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S221)
	S253= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S221)
	S254= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S221)
	S255= IR.Out={35,rS,rT,offset}                              IR-Out(S225)
	S256= IR.Out31_26=35                                        IR-Out(S225)
	S257= IR.Out25_21=rS                                        IR-Out(S225)
	S258= IR.Out20_16=rT                                        IR-Out(S225)
	S259= IR.Out15_0=offset                                     IR-Out(S225)
	S260= A.Out=base                                            A-Out(S233)
	S261= A.Out1_0={base}[1:0]                                  A-Out(S233)
	S262= A.Out4_0={base}[4:0]                                  A-Out(S233)
	S263= B.Out={16{offset[15]},offset}                         B-Out(S235)
	S264= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S235)
	S265= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S235)
	S266= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S237)
	S267= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S237)
	S268= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S237)
	S269= CP0.ASID=>DMMU.PID                                    Premise(F130)
	S270= DMMU.PID=pid                                          Path(S248,S269)
	S271= ALUOut.Out=>DMMU.IEA                                  Premise(F131)
	S272= DMMU.IEA=base+{16{offset[15]},offset}                 Path(S266,S271)
	S273= DMMU.Addr={pid,base+{16{offset[15]},offset}}          DMMU-Search(S270,S272)
	S274= DMMU.Hit=DMMUHit(pid,base+{16{offset[15]},offset})    DMMU-Search(S270,S272)
	S275= DMMU.Addr=>DAddrReg.In                                Premise(F132)
	S276= DAddrReg.In={pid,base+{16{offset[15]},offset}}        Path(S273,S275)
	S277= DMMU.Hit=>CU.DMMUHit                                  Premise(F133)
	S278= CU.DMMUHit=DMMUHit(pid,base+{16{offset[15]},offset})  Path(S274,S277)
	S279= ALUOut.Out=>DCache.IEA                                Premise(F134)
	S280= DCache.IEA=base+{16{offset[15]},offset}               Path(S266,S279)
	S281= DCache.Hit=DCacheHit(base+{16{offset[15]},offset})    DCache-Search(S280)
	S282= DCache.Out=a                                          DCache-Search(S280,S241)
	S283= DCache.Out=>DR.In                                     Premise(F135)
	S284= DR.In=a                                               Path(S282,S283)
	S285= DCache.Out=>DCacheReg.In                              Premise(F136)
	S286= DCacheReg.In=a                                        Path(S282,S285)
	S287= DCache.Hit=>CU.DCacheHit                              Premise(F137)
	S288= CU.DCacheHit=DCacheHit(base+{16{offset[15]},offset})  Path(S281,S287)
	S289= CtrlASIDIn=0                                          Premise(F138)
	S290= CtrlCP0=0                                             Premise(F139)
	S291= CP0[ASID]=pid                                         CP0-Hold(S212,S290)
	S292= CtrlEPCIn=0                                           Premise(F140)
	S293= CtrlExCodeIn=0                                        Premise(F141)
	S294= CtrlIMMU=0                                            Premise(F142)
	S295= CtrlPC=0                                              Premise(F143)
	S296= CtrlPCInc=0                                           Premise(F144)
	S297= PC[CIA]=addr                                          PC-Hold(S218,S296)
	S298= PC[Out]=addr+4                                        PC-Hold(S219,S295,S296)
	S299= CtrlIAddrReg=0                                        Premise(F145)
	S300= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S221,S299)
	S301= CtrlICache=0                                          Premise(F146)
	S302= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S223,S301)
	S303= CtrlIR=0                                              Premise(F147)
	S304= [IR]={35,rS,rT,offset}                                IR-Hold(S225,S303)
	S305= CtrlICacheReg=0                                       Premise(F148)
	S306= CtrlIMem=0                                            Premise(F149)
	S307= IMem[{pid,addr}]={35,rS,rT,offset}                    IMem-Hold(S228,S306)
	S308= CtrlIRMux=0                                           Premise(F150)
	S309= CtrlGPR=0                                             Premise(F151)
	S310= GPR[rS]=base                                          GPR-Hold(S231,S309)
	S311= CtrlA=0                                               Premise(F152)
	S312= [A]=base                                              A-Hold(S233,S311)
	S313= CtrlB=0                                               Premise(F153)
	S314= [B]={16{offset[15]},offset}                           B-Hold(S235,S313)
	S315= CtrlALUOut=0                                          Premise(F154)
	S316= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S237,S315)
	S317= CtrlDMMU=0                                            Premise(F155)
	S318= CtrlDAddrReg=0                                        Premise(F156)
	S319= CtrlDCache=0                                          Premise(F157)
	S320= DCache[base+{16{offset[15]},offset}]=a                DCache-Hold(S241,S319)
	S321= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S242,S319)
	S322= CtrlDR=1                                              Premise(F158)
	S323= [DR]=a                                                DR-Write(S284,S322)
	S324= CtrlDCacheReg=0                                       Premise(F159)
	S325= CtrlDMem=0                                            Premise(F160)
	S326= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S246,S325)
	S327= CtrlDMem8Word=0                                       Premise(F161)

WB	S328= CP0.ASID=pid                                          CP0-Read-ASID(S291)
	S329= PC.CIA=addr                                           PC-Out(S297)
	S330= PC.CIA31_28=addr[31:28]                               PC-Out(S297)
	S331= PC.Out=addr+4                                         PC-Out(S298)
	S332= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S300)
	S333= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S300)
	S334= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S300)
	S335= IR.Out={35,rS,rT,offset}                              IR-Out(S304)
	S336= IR.Out31_26=35                                        IR-Out(S304)
	S337= IR.Out25_21=rS                                        IR-Out(S304)
	S338= IR.Out20_16=rT                                        IR-Out(S304)
	S339= IR.Out15_0=offset                                     IR-Out(S304)
	S340= A.Out=base                                            A-Out(S312)
	S341= A.Out1_0={base}[1:0]                                  A-Out(S312)
	S342= A.Out4_0={base}[4:0]                                  A-Out(S312)
	S343= B.Out={16{offset[15]},offset}                         B-Out(S314)
	S344= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S314)
	S345= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S314)
	S346= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S316)
	S347= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S316)
	S348= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S316)
	S349= DR.Out=a                                              DR-Out(S323)
	S350= DR.Out1_0={a}[1:0]                                    DR-Out(S323)
	S351= DR.Out4_0={a}[4:0]                                    DR-Out(S323)
	S352= IR.Out20_16=>GPR.WReg                                 Premise(F210)
	S353= GPR.WReg=rT                                           Path(S338,S352)
	S354= DR.Out=>MemDataSelL.In                                Premise(F211)
	S355= MemDataSelL.In=a                                      Path(S349,S354)
	S356= ALUOut.Out1_0=>MemDataSelL.Addr                       Premise(F212)
	S357= MemDataSelL.Addr={base+{16{offset[15]},offset}}[1:0]  Path(S347,S356)
	S358= MemDataSelL.Func=6'b000101                            Premise(F213)
	S359= MemDataSelL.Out=a                                     MemDataSelL(S355,S357)
	S360= MemDataSelL.Out=>GPR.WData                            Premise(F214)
	S361= GPR.WData=a                                           Path(S359,S360)
	S362= CtrlASIDIn=0                                          Premise(F215)
	S363= CtrlCP0=0                                             Premise(F216)
	S364= CP0[ASID]=pid                                         CP0-Hold(S291,S363)
	S365= CtrlEPCIn=0                                           Premise(F217)
	S366= CtrlExCodeIn=0                                        Premise(F218)
	S367= CtrlIMMU=0                                            Premise(F219)
	S368= CtrlPC=0                                              Premise(F220)
	S369= CtrlPCInc=0                                           Premise(F221)
	S370= PC[CIA]=addr                                          PC-Hold(S297,S369)
	S371= PC[Out]=addr+4                                        PC-Hold(S298,S368,S369)
	S372= CtrlIAddrReg=0                                        Premise(F222)
	S373= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S300,S372)
	S374= CtrlICache=0                                          Premise(F223)
	S375= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S302,S374)
	S376= CtrlIR=0                                              Premise(F224)
	S377= [IR]={35,rS,rT,offset}                                IR-Hold(S304,S376)
	S378= CtrlICacheReg=0                                       Premise(F225)
	S379= CtrlIMem=0                                            Premise(F226)
	S380= IMem[{pid,addr}]={35,rS,rT,offset}                    IMem-Hold(S307,S379)
	S381= CtrlIRMux=0                                           Premise(F227)
	S382= CtrlGPR=1                                             Premise(F228)
	S383= GPR[rT]=a                                             GPR-Write(S353,S361,S382)
	S384= CtrlA=0                                               Premise(F229)
	S385= [A]=base                                              A-Hold(S312,S384)
	S386= CtrlB=0                                               Premise(F230)
	S387= [B]={16{offset[15]},offset}                           B-Hold(S314,S386)
	S388= CtrlALUOut=0                                          Premise(F231)
	S389= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S316,S388)
	S390= CtrlDMMU=0                                            Premise(F232)
	S391= CtrlDAddrReg=0                                        Premise(F233)
	S392= CtrlDCache=0                                          Premise(F234)
	S393= DCache[base+{16{offset[15]},offset}]=a                DCache-Hold(S320,S392)
	S394= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S321,S392)
	S395= CtrlDR=0                                              Premise(F235)
	S396= [DR]=a                                                DR-Hold(S323,S395)
	S397= CtrlDCacheReg=0                                       Premise(F236)
	S398= CtrlDMem=0                                            Premise(F237)
	S399= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S326,S398)
	S400= CtrlDMem8Word=0                                       Premise(F238)

POST	S364= CP0[ASID]=pid                                         CP0-Hold(S291,S363)
	S370= PC[CIA]=addr                                          PC-Hold(S297,S369)
	S371= PC[Out]=addr+4                                        PC-Hold(S298,S368,S369)
	S373= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S300,S372)
	S375= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S302,S374)
	S377= [IR]={35,rS,rT,offset}                                IR-Hold(S304,S376)
	S380= IMem[{pid,addr}]={35,rS,rT,offset}                    IMem-Hold(S307,S379)
	S383= GPR[rT]=a                                             GPR-Write(S353,S361,S382)
	S385= [A]=base                                              A-Hold(S312,S384)
	S387= [B]={16{offset[15]},offset}                           B-Hold(S314,S386)
	S389= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S316,S388)
	S393= DCache[base+{16{offset[15]},offset}]=a                DCache-Hold(S320,S392)
	S394= DCache[DCacheRLineEA(base+{16{offset[15]},offset})]=dataDCache-Hold(S321,S392)
	S396= [DR]=a                                                DR-Hold(S323,S395)
	S399= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S326,S398)

