
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,0,1233}                      Premise(F2)
	S3= ICache[addr]={31,rT,rA,0,1233}                          Premise(F3)
	S4= GPRegs[rA]=a                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S8= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S9= PC.Out=addr                                             PC-Out(S1)
	S10= XER.SOOut=so                                           XER-SO-Out(S5)
	S11= PIDReg.Out=>IMMU.PID                                   Premise(F6)
	S12= IMMU.PID=pid                                           Path(S6,S11)
	S13= PC.Out=>IMMU.IEA                                       Premise(F7)
	S14= IMMU.IEA=addr                                          Path(S9,S13)
	S15= IMMU.Addr={pid,addr}                                   IMMU-Search(S12,S14)
	S16= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S12,S14)
	S17= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S18= IAddrReg.In={pid,addr}                                 Path(S15,S17)
	S19= IMMU.Hit=>IMMUHitReg.In                                Premise(F9)
	S20= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S16,S19)
	S21= PC.Out=>ICache.IEA                                     Premise(F10)
	S22= ICache.IEA=addr                                        Path(S9,S21)
	S23= ICache.Hit=ICacheHit(addr)                             ICache-Search(S22)
	S24= ICache.Out={31,rT,rA,0,1233}                           ICache-Search(S22,S3)
	S25= ICache.Out=>ICacheReg.In                               Premise(F11)
	S26= ICacheReg.In={31,rT,rA,0,1233}                         Path(S24,S25)
	S27= ICache.Hit=>ICacheHitReg.In                            Premise(F12)
	S28= ICacheHitReg.In=ICacheHit(addr)                        Path(S23,S27)
	S29= IMMUHitReg.Out=>CU.IMemHit                             Premise(F13)
	S30= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F14)
	S31= IAddrReg.Out=>IMem.RAddr                               Premise(F15)
	S32= IMem.Out=>IRMux.MemData                                Premise(F16)
	S33= ICacheReg.Out=>IRMux.CacheData                         Premise(F17)
	S34= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F18)
	S35= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F19)
	S36= IRMux.Out=>IR.In                                       Premise(F20)
	S37= IMem.MEM8WordOut=>ICache.WData                         Premise(F21)
	S38= PC.Out=>ICache.IEA                                     Premise(F22)
	S39= IR.Out0_5=>CU.Op                                       Premise(F23)
	S40= IR.Out11_15=>GPRegs.RReg1                              Premise(F24)
	S41= IR.Out21_31=>CU.IRFunc                                 Premise(F25)
	S42= GPRegs.Rdata1=>A.In                                    Premise(F26)
	S43= A.Out=>ALU.A                                           Premise(F27)
	S44= B.Out=>ALU.B                                           Premise(F28)
	S45= CU.Func=>ALU.Func                                      Premise(F29)
	S46= ALU.Out=>ALUOut.In                                     Premise(F30)
	S47= ALU.CMP=>DataCmb.A                                     Premise(F31)
	S48= ORGate.Out=>DataCmb.B                                  Premise(F32)
	S49= ALU.OV=>OVReg.In                                       Premise(F33)
	S50= XER.SOOut=>ORGate.A                                    Premise(F34)
	S51= ORGate.A=so                                            Path(S10,S50)
	S52= ALU.OV=>ORGate.B                                       Premise(F35)
	S53= ORGate.Out=>DR1bit.In                                  Premise(F36)
	S54= DataCmb.Out=>DR4bit.In                                 Premise(F37)
	S55= IR.Out6_10=>GPRegs.WReg                                Premise(F38)
	S56= ALUOut.Out=>GPRegs.WData                               Premise(F39)
	S57= DR4bit.Out=>CRRegs.CR0In                               Premise(F40)
	S58= DR1bit.Out=>XER.SOIn                                   Premise(F41)
	S59= OVReg.Out=>XER.OVIn                                    Premise(F42)
	S60= CtrlPIDReg=0                                           Premise(F43)
	S61= [PIDReg]=pid                                           PIDReg-Hold(S0,S60)
	S62= CtrlIMMU=0                                             Premise(F44)
	S63= CtrlPC=0                                               Premise(F45)
	S64= CtrlPCInc=0                                            Premise(F46)
	S65= PC[Out]=addr                                           PC-Hold(S1,S63,S64)
	S66= CtrlIAddrReg=1                                         Premise(F47)
	S67= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S18,S66)
	S68= CtrlIMMUHitReg=1                                       Premise(F48)
	S69= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S20,S68)
	S70= CtrlICache=0                                           Premise(F49)
	S71= ICache[addr]={31,rT,rA,0,1233}                         ICache-Hold(S3,S70)
	S72= CtrlICacheReg=1                                        Premise(F50)
	S73= [ICacheReg]={31,rT,rA,0,1233}                          ICacheReg-Write(S26,S72)
	S74= CtrlICacheHitReg=1                                     Premise(F51)
	S75= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S28,S74)
	S76= CtrlIMem=0                                             Premise(F52)
	S77= IMem[{pid,addr}]={31,rT,rA,0,1233}                     IMem-Hold(S2,S76)
	S78= CtrlIRMux=0                                            Premise(F53)
	S79= CtrlIR=0                                               Premise(F54)
	S80= CtrlGPRegs=0                                           Premise(F55)
	S81= GPRegs[rA]=a                                           GPRegs-Hold(S4,S80)
	S82= CtrlA=0                                                Premise(F56)
	S83= CtrlB=0                                                Premise(F57)
	S84= CtrlALUOut=0                                           Premise(F58)
	S85= CtrlOVReg=0                                            Premise(F59)
	S86= CtrlXERSO=0                                            Premise(F60)
	S87= XER[SO]=so                                             XER-SO-Hold(S5,S86)
	S88= CtrlXEROV=0                                            Premise(F61)
	S89= CtrlXERCA=0                                            Premise(F62)
	S90= CtrlDR1bit=0                                           Premise(F63)
	S91= CtrlDR4bit=0                                           Premise(F64)
	S92= CtrlCRRegs=0                                           Premise(F65)
	S93= CtrlCRRegsCR0=0                                        Premise(F66)
	S94= CtrlCRRegsW4bitRegs=0                                  Premise(F67)
	S95= CtrlCRRegsW1bitRegs=0                                  Premise(F68)

IMMU	S96= PIDReg.Out=pid                                         PIDReg-Out(S61)
	S97= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S61)
	S98= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S61)
	S99= PC.Out=addr                                            PC-Out(S65)
	S100= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S67)
	S101= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S67)
	S102= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S67)
	S103= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S69)
	S104= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S69)
	S105= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S69)
	S106= ICacheReg.Out={31,rT,rA,0,1233}                       ICacheReg-Out(S73)
	S107= ICacheReg.Out26_31={31,rT,rA,0,1233}[26:31]           ICacheReg-Out(S73)
	S108= ICacheReg.Out30_31={31,rT,rA,0,1233}[30:31]           ICacheReg-Out(S73)
	S109= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S75)
	S110= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S75)
	S111= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S75)
	S112= XER.SOOut=so                                          XER-SO-Out(S87)
	S113= PIDReg.Out=>IMMU.PID                                  Premise(F69)
	S114= IMMU.PID=pid                                          Path(S96,S113)
	S115= PC.Out=>IMMU.IEA                                      Premise(F70)
	S116= IMMU.IEA=addr                                         Path(S99,S115)
	S117= IMMU.Addr={pid,addr}                                  IMMU-Search(S114,S116)
	S118= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S114,S116)
	S119= IMMU.Addr=>IAddrReg.In                                Premise(F71)
	S120= IAddrReg.In={pid,addr}                                Path(S117,S119)
	S121= IMMU.Hit=>IMMUHitReg.In                               Premise(F72)
	S122= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S118,S121)
	S123= PC.Out=>ICache.IEA                                    Premise(F73)
	S124= ICache.IEA=addr                                       Path(S99,S123)
	S125= ICache.Hit=ICacheHit(addr)                            ICache-Search(S124)
	S126= ICache.Out={31,rT,rA,0,1233}                          ICache-Search(S124,S71)
	S127= ICache.Out=>ICacheReg.In                              Premise(F74)
	S128= ICacheReg.In={31,rT,rA,0,1233}                        Path(S126,S127)
	S129= ICache.Hit=>ICacheHitReg.In                           Premise(F75)
	S130= ICacheHitReg.In=ICacheHit(addr)                       Path(S125,S129)
	S131= IMMUHitReg.Out=>CU.IMemHit                            Premise(F76)
	S132= CU.IMemHit=IMMUHit(pid,addr)                          Path(S103,S131)
	S133= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F77)
	S134= CU.ICacheHit=ICacheHit(addr)                          Path(S109,S133)
	S135= IAddrReg.Out=>IMem.RAddr                              Premise(F78)
	S136= IMem.RAddr={pid,addr}                                 Path(S100,S135)
	S137= IMem.Out={31,rT,rA,0,1233}                            IMem-Read(S136,S77)
	S138= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S136,S77)
	S139= IMem.Out=>IRMux.MemData                               Premise(F79)
	S140= IRMux.MemData={31,rT,rA,0,1233}                       Path(S137,S139)
	S141= ICacheReg.Out=>IRMux.CacheData                        Premise(F80)
	S142= IRMux.CacheData={31,rT,rA,0,1233}                     Path(S106,S141)
	S143= IRMux.Out={31,rT,rA,0,1233}                           IRMux-Select(S140,S142)
	S144= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F81)
	S145= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S103,S144)
	S146= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F82)
	S147= IRMux.CacheSel=ICacheHit(addr)                        Path(S109,S146)
	S148= IRMux.Out=>IR.In                                      Premise(F83)
	S149= IR.In={31,rT,rA,0,1233}                               Path(S143,S148)
	S150= IMem.MEM8WordOut=>ICache.WData                        Premise(F84)
	S151= ICache.WData=IMemGet8Word({pid,addr})                 Path(S138,S150)
	S152= PC.Out=>ICache.IEA                                    Premise(F85)
	S153= IR.Out0_5=>CU.Op                                      Premise(F86)
	S154= IR.Out11_15=>GPRegs.RReg1                             Premise(F87)
	S155= IR.Out21_31=>CU.IRFunc                                Premise(F88)
	S156= GPRegs.Rdata1=>A.In                                   Premise(F89)
	S157= A.Out=>ALU.A                                          Premise(F90)
	S158= B.Out=>ALU.B                                          Premise(F91)
	S159= CU.Func=>ALU.Func                                     Premise(F92)
	S160= ALU.Out=>ALUOut.In                                    Premise(F93)
	S161= ALU.CMP=>DataCmb.A                                    Premise(F94)
	S162= ORGate.Out=>DataCmb.B                                 Premise(F95)
	S163= ALU.OV=>OVReg.In                                      Premise(F96)
	S164= XER.SOOut=>ORGate.A                                   Premise(F97)
	S165= ORGate.A=so                                           Path(S112,S164)
	S166= ALU.OV=>ORGate.B                                      Premise(F98)
	S167= ORGate.Out=>DR1bit.In                                 Premise(F99)
	S168= DataCmb.Out=>DR4bit.In                                Premise(F100)
	S169= IR.Out6_10=>GPRegs.WReg                               Premise(F101)
	S170= ALUOut.Out=>GPRegs.WData                              Premise(F102)
	S171= DR4bit.Out=>CRRegs.CR0In                              Premise(F103)
	S172= DR1bit.Out=>XER.SOIn                                  Premise(F104)
	S173= OVReg.Out=>XER.OVIn                                   Premise(F105)
	S174= CtrlPIDReg=0                                          Premise(F106)
	S175= [PIDReg]=pid                                          PIDReg-Hold(S61,S174)
	S176= CtrlIMMU=0                                            Premise(F107)
	S177= CtrlPC=0                                              Premise(F108)
	S178= CtrlPCInc=1                                           Premise(F109)
	S179= PC[Out]=addr+4                                        PC-Inc(S65,S177,S178)
	S180= PC[CIA]=addr                                          PC-Inc(S65,S177,S178)
	S181= CtrlIAddrReg=0                                        Premise(F110)
	S182= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S67,S181)
	S183= CtrlIMMUHitReg=0                                      Premise(F111)
	S184= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S69,S183)
	S185= CtrlICache=0                                          Premise(F112)
	S186= ICache[addr]={31,rT,rA,0,1233}                        ICache-Hold(S71,S185)
	S187= CtrlICacheReg=0                                       Premise(F113)
	S188= [ICacheReg]={31,rT,rA,0,1233}                         ICacheReg-Hold(S73,S187)
	S189= CtrlICacheHitReg=0                                    Premise(F114)
	S190= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S75,S189)
	S191= CtrlIMem=0                                            Premise(F115)
	S192= IMem[{pid,addr}]={31,rT,rA,0,1233}                    IMem-Hold(S77,S191)
	S193= CtrlIRMux=0                                           Premise(F116)
	S194= CtrlIR=1                                              Premise(F117)
	S195= [IR]={31,rT,rA,0,1233}                                IR-Write(S149,S194)
	S196= CtrlGPRegs=0                                          Premise(F118)
	S197= GPRegs[rA]=a                                          GPRegs-Hold(S81,S196)
	S198= CtrlA=0                                               Premise(F119)
	S199= CtrlB=0                                               Premise(F120)
	S200= CtrlALUOut=0                                          Premise(F121)
	S201= CtrlOVReg=0                                           Premise(F122)
	S202= CtrlXERSO=0                                           Premise(F123)
	S203= XER[SO]=so                                            XER-SO-Hold(S87,S202)
	S204= CtrlXEROV=0                                           Premise(F124)
	S205= CtrlXERCA=0                                           Premise(F125)
	S206= CtrlDR1bit=0                                          Premise(F126)
	S207= CtrlDR4bit=0                                          Premise(F127)
	S208= CtrlCRRegs=0                                          Premise(F128)
	S209= CtrlCRRegsCR0=0                                       Premise(F129)
	S210= CtrlCRRegsW4bitRegs=0                                 Premise(F130)
	S211= CtrlCRRegsW1bitRegs=0                                 Premise(F131)

ID	S212= PIDReg.Out=pid                                        PIDReg-Out(S175)
	S213= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S175)
	S214= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S175)
	S215= PC.Out=addr+4                                         PC-Out(S179)
	S216= PC.CIA=addr                                           PC-Out(S180)
	S217= PC.CIA31_28=addr[31:28]                               PC-Out(S180)
	S218= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S182)
	S219= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S182)
	S220= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S182)
	S221= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S184)
	S222= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S184)
	S223= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S184)
	S224= ICacheReg.Out={31,rT,rA,0,1233}                       ICacheReg-Out(S188)
	S225= ICacheReg.Out26_31={31,rT,rA,0,1233}[26:31]           ICacheReg-Out(S188)
	S226= ICacheReg.Out30_31={31,rT,rA,0,1233}[30:31]           ICacheReg-Out(S188)
	S227= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S190)
	S228= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S190)
	S229= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S190)
	S230= IR.Out0_5=31                                          IR-Out(S195)
	S231= IR.Out6_10=rT                                         IR-Out(S195)
	S232= IR.Out11_15=rA                                        IR-Out(S195)
	S233= IR.Out16_20=0                                         IR-Out(S195)
	S234= IR.Out21_31=1233                                      IR-Out(S195)
	S235= XER.SOOut=so                                          XER-SO-Out(S203)
	S236= PIDReg.Out=>IMMU.PID                                  Premise(F132)
	S237= IMMU.PID=pid                                          Path(S212,S236)
	S238= PC.Out=>IMMU.IEA                                      Premise(F133)
	S239= IMMU.IEA=addr+4                                       Path(S215,S238)
	S240= IMMU.Addr={pid,addr+4}                                IMMU-Search(S237,S239)
	S241= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S237,S239)
	S242= IMMU.Addr=>IAddrReg.In                                Premise(F134)
	S243= IAddrReg.In={pid,addr+4}                              Path(S240,S242)
	S244= IMMU.Hit=>IMMUHitReg.In                               Premise(F135)
	S245= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S241,S244)
	S246= PC.Out=>ICache.IEA                                    Premise(F136)
	S247= ICache.IEA=addr+4                                     Path(S215,S246)
	S248= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S247)
	S249= ICache.Out=>ICacheReg.In                              Premise(F137)
	S250= ICache.Hit=>ICacheHitReg.In                           Premise(F138)
	S251= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S248,S250)
	S252= IMMUHitReg.Out=>CU.IMemHit                            Premise(F139)
	S253= CU.IMemHit=IMMUHit(pid,addr)                          Path(S221,S252)
	S254= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F140)
	S255= CU.ICacheHit=ICacheHit(addr)                          Path(S227,S254)
	S256= IAddrReg.Out=>IMem.RAddr                              Premise(F141)
	S257= IMem.RAddr={pid,addr}                                 Path(S218,S256)
	S258= IMem.Out={31,rT,rA,0,1233}                            IMem-Read(S257,S192)
	S259= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S257,S192)
	S260= IMem.Out=>IRMux.MemData                               Premise(F142)
	S261= IRMux.MemData={31,rT,rA,0,1233}                       Path(S258,S260)
	S262= ICacheReg.Out=>IRMux.CacheData                        Premise(F143)
	S263= IRMux.CacheData={31,rT,rA,0,1233}                     Path(S224,S262)
	S264= IRMux.Out={31,rT,rA,0,1233}                           IRMux-Select(S261,S263)
	S265= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F144)
	S266= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S221,S265)
	S267= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F145)
	S268= IRMux.CacheSel=ICacheHit(addr)                        Path(S227,S267)
	S269= IRMux.Out=>IR.In                                      Premise(F146)
	S270= IR.In={31,rT,rA,0,1233}                               Path(S264,S269)
	S271= IMem.MEM8WordOut=>ICache.WData                        Premise(F147)
	S272= ICache.WData=IMemGet8Word({pid,addr})                 Path(S259,S271)
	S273= PC.Out=>ICache.IEA                                    Premise(F148)
	S274= IR.Out0_5=>CU.Op                                      Premise(F149)
	S275= CU.Op=31                                              Path(S230,S274)
	S276= IR.Out11_15=>GPRegs.RReg1                             Premise(F150)
	S277= GPRegs.RReg1=rA                                       Path(S232,S276)
	S278= GPRegs.Rdata1=a                                       GPRegs-Read(S277,S197)
	S279= IR.Out21_31=>CU.IRFunc                                Premise(F151)
	S280= CU.IRFunc=1233                                        Path(S234,S279)
	S281= CU.Func=alu_neg                                       CU(S275,S280)
	S282= GPRegs.Rdata1=>A.In                                   Premise(F152)
	S283= A.In=a                                                Path(S278,S282)
	S284= B.In=32'b0                                            Premise(F153)
	S285= A.Out=>ALU.A                                          Premise(F154)
	S286= B.Out=>ALU.B                                          Premise(F155)
	S287= CU.Func=>ALU.Func                                     Premise(F156)
	S288= ALU.Func=alu_neg                                      Path(S281,S287)
	S289= ALU.Out=>ALUOut.In                                    Premise(F157)
	S290= ALU.CMP=>DataCmb.A                                    Premise(F158)
	S291= ORGate.Out=>DataCmb.B                                 Premise(F159)
	S292= ALU.OV=>OVReg.In                                      Premise(F160)
	S293= XER.SOOut=>ORGate.A                                   Premise(F161)
	S294= ORGate.A=so                                           Path(S235,S293)
	S295= ALU.OV=>ORGate.B                                      Premise(F162)
	S296= ORGate.Out=>DR1bit.In                                 Premise(F163)
	S297= DataCmb.Out=>DR4bit.In                                Premise(F164)
	S298= IR.Out6_10=>GPRegs.WReg                               Premise(F165)
	S299= GPRegs.WReg=rT                                        Path(S231,S298)
	S300= ALUOut.Out=>GPRegs.WData                              Premise(F166)
	S301= DR4bit.Out=>CRRegs.CR0In                              Premise(F167)
	S302= DR1bit.Out=>XER.SOIn                                  Premise(F168)
	S303= OVReg.Out=>XER.OVIn                                   Premise(F169)
	S304= CtrlPIDReg=0                                          Premise(F170)
	S305= [PIDReg]=pid                                          PIDReg-Hold(S175,S304)
	S306= CtrlIMMU=0                                            Premise(F171)
	S307= CtrlPC=0                                              Premise(F172)
	S308= CtrlPCInc=0                                           Premise(F173)
	S309= PC[CIA]=addr                                          PC-Hold(S180,S308)
	S310= PC[Out]=addr+4                                        PC-Hold(S179,S307,S308)
	S311= CtrlIAddrReg=0                                        Premise(F174)
	S312= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S182,S311)
	S313= CtrlIMMUHitReg=0                                      Premise(F175)
	S314= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S184,S313)
	S315= CtrlICache=0                                          Premise(F176)
	S316= ICache[addr]={31,rT,rA,0,1233}                        ICache-Hold(S186,S315)
	S317= CtrlICacheReg=0                                       Premise(F177)
	S318= [ICacheReg]={31,rT,rA,0,1233}                         ICacheReg-Hold(S188,S317)
	S319= CtrlICacheHitReg=0                                    Premise(F178)
	S320= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S190,S319)
	S321= CtrlIMem=0                                            Premise(F179)
	S322= IMem[{pid,addr}]={31,rT,rA,0,1233}                    IMem-Hold(S192,S321)
	S323= CtrlIRMux=0                                           Premise(F180)
	S324= CtrlIR=0                                              Premise(F181)
	S325= [IR]={31,rT,rA,0,1233}                                IR-Hold(S195,S324)
	S326= CtrlGPRegs=0                                          Premise(F182)
	S327= GPRegs[rA]=a                                          GPRegs-Hold(S197,S326)
	S328= CtrlA=1                                               Premise(F183)
	S329= [A]=a                                                 A-Write(S283,S328)
	S330= CtrlB=1                                               Premise(F184)
	S331= [B]=32'b0                                             B-Write(S284,S330)
	S332= CtrlALUOut=0                                          Premise(F185)
	S333= CtrlOVReg=0                                           Premise(F186)
	S334= CtrlXERSO=0                                           Premise(F187)
	S335= XER[SO]=so                                            XER-SO-Hold(S203,S334)
	S336= CtrlXEROV=0                                           Premise(F188)
	S337= CtrlXERCA=0                                           Premise(F189)
	S338= CtrlDR1bit=0                                          Premise(F190)
	S339= CtrlDR4bit=0                                          Premise(F191)
	S340= CtrlCRRegs=0                                          Premise(F192)
	S341= CtrlCRRegsCR0=0                                       Premise(F193)
	S342= CtrlCRRegsW4bitRegs=0                                 Premise(F194)
	S343= CtrlCRRegsW1bitRegs=0                                 Premise(F195)

EX	S344= PIDReg.Out=pid                                        PIDReg-Out(S305)
	S345= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S305)
	S346= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S305)
	S347= PC.CIA=addr                                           PC-Out(S309)
	S348= PC.CIA31_28=addr[31:28]                               PC-Out(S309)
	S349= PC.Out=addr+4                                         PC-Out(S310)
	S350= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S312)
	S351= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S312)
	S352= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S312)
	S353= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S314)
	S354= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S314)
	S355= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S314)
	S356= ICacheReg.Out={31,rT,rA,0,1233}                       ICacheReg-Out(S318)
	S357= ICacheReg.Out26_31={31,rT,rA,0,1233}[26:31]           ICacheReg-Out(S318)
	S358= ICacheReg.Out30_31={31,rT,rA,0,1233}[30:31]           ICacheReg-Out(S318)
	S359= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S320)
	S360= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S320)
	S361= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S320)
	S362= IR.Out0_5=31                                          IR-Out(S325)
	S363= IR.Out6_10=rT                                         IR-Out(S325)
	S364= IR.Out11_15=rA                                        IR-Out(S325)
	S365= IR.Out16_20=0                                         IR-Out(S325)
	S366= IR.Out21_31=1233                                      IR-Out(S325)
	S367= A.Out=a                                               A-Out(S329)
	S368= A.Out26_31=a[26:31]                                   A-Out(S329)
	S369= A.Out30_31=a[30:31]                                   A-Out(S329)
	S370= B.Out=32'b0                                           B-Out(S331)
	S371= B.Out26_31=32'b0[26:31]                               B-Out(S331)
	S372= B.Out30_31=32'b0[30:31]                               B-Out(S331)
	S373= XER.SOOut=so                                          XER-SO-Out(S335)
	S374= PIDReg.Out=>IMMU.PID                                  Premise(F196)
	S375= IMMU.PID=pid                                          Path(S344,S374)
	S376= PC.Out=>IMMU.IEA                                      Premise(F197)
	S377= IMMU.IEA=addr+4                                       Path(S349,S376)
	S378= IMMU.Addr={pid,addr+4}                                IMMU-Search(S375,S377)
	S379= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S375,S377)
	S380= IMMU.Addr=>IAddrReg.In                                Premise(F198)
	S381= IAddrReg.In={pid,addr+4}                              Path(S378,S380)
	S382= IMMU.Hit=>IMMUHitReg.In                               Premise(F199)
	S383= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S379,S382)
	S384= PC.Out=>ICache.IEA                                    Premise(F200)
	S385= ICache.IEA=addr+4                                     Path(S349,S384)
	S386= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S385)
	S387= ICache.Out=>ICacheReg.In                              Premise(F201)
	S388= ICache.Hit=>ICacheHitReg.In                           Premise(F202)
	S389= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S386,S388)
	S390= IMMUHitReg.Out=>CU.IMemHit                            Premise(F203)
	S391= CU.IMemHit=IMMUHit(pid,addr)                          Path(S353,S390)
	S392= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F204)
	S393= CU.ICacheHit=ICacheHit(addr)                          Path(S359,S392)
	S394= IAddrReg.Out=>IMem.RAddr                              Premise(F205)
	S395= IMem.RAddr={pid,addr}                                 Path(S350,S394)
	S396= IMem.Out={31,rT,rA,0,1233}                            IMem-Read(S395,S322)
	S397= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S395,S322)
	S398= IMem.Out=>IRMux.MemData                               Premise(F206)
	S399= IRMux.MemData={31,rT,rA,0,1233}                       Path(S396,S398)
	S400= ICacheReg.Out=>IRMux.CacheData                        Premise(F207)
	S401= IRMux.CacheData={31,rT,rA,0,1233}                     Path(S356,S400)
	S402= IRMux.Out={31,rT,rA,0,1233}                           IRMux-Select(S399,S401)
	S403= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F208)
	S404= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S353,S403)
	S405= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F209)
	S406= IRMux.CacheSel=ICacheHit(addr)                        Path(S359,S405)
	S407= IRMux.Out=>IR.In                                      Premise(F210)
	S408= IR.In={31,rT,rA,0,1233}                               Path(S402,S407)
	S409= IMem.MEM8WordOut=>ICache.WData                        Premise(F211)
	S410= ICache.WData=IMemGet8Word({pid,addr})                 Path(S397,S409)
	S411= PC.Out=>ICache.IEA                                    Premise(F212)
	S412= IR.Out0_5=>CU.Op                                      Premise(F213)
	S413= CU.Op=31                                              Path(S362,S412)
	S414= IR.Out11_15=>GPRegs.RReg1                             Premise(F214)
	S415= GPRegs.RReg1=rA                                       Path(S364,S414)
	S416= GPRegs.Rdata1=a                                       GPRegs-Read(S415,S327)
	S417= IR.Out21_31=>CU.IRFunc                                Premise(F215)
	S418= CU.IRFunc=1233                                        Path(S366,S417)
	S419= CU.Func=alu_neg                                       CU(S413,S418)
	S420= GPRegs.Rdata1=>A.In                                   Premise(F216)
	S421= A.In=a                                                Path(S416,S420)
	S422= A.Out=>ALU.A                                          Premise(F217)
	S423= ALU.A=a                                               Path(S367,S422)
	S424= B.Out=>ALU.B                                          Premise(F218)
	S425= ALU.B=32'b0                                           Path(S370,S424)
	S426= CU.Func=>ALU.Func                                     Premise(F219)
	S427= ALU.Func=alu_neg                                      Path(S419,S426)
	S428= ALU.Out=(-a)                                          ALU(S423)
	S429= ALU.CMP=Compare0((-a))                                ALU(S423)
	S430= ALU.OV=OverFlow((-a))                                 ALU(S423)
	S431= ALU.CA=Carry((-a))                                    ALU(S423)
	S432= ALU.Out=>ALUOut.In                                    Premise(F220)
	S433= ALUOut.In=(-a)                                        Path(S428,S432)
	S434= ALU.CMP=>DataCmb.A                                    Premise(F221)
	S435= DataCmb.A=Compare0((-a))                              Path(S429,S434)
	S436= ORGate.Out=>DataCmb.B                                 Premise(F222)
	S437= ALU.OV=>OVReg.In                                      Premise(F223)
	S438= OVReg.In=OverFlow((-a))                               Path(S430,S437)
	S439= XER.SOOut=>ORGate.A                                   Premise(F224)
	S440= ORGate.A=so                                           Path(S373,S439)
	S441= ALU.OV=>ORGate.B                                      Premise(F225)
	S442= ORGate.B=OverFlow((-a))                               Path(S430,S441)
	S443= ORGate.Out=so|OverFlow((-a))                          ORGate(S440,S442)
	S444= DataCmb.B=so|OverFlow((-a))                           Path(S443,S436)
	S445= DataCmb.Out={Compare0((-a)),so|OverFlow((-a))}        DataCmb(S435,S444)
	S446= ORGate.Out=>DR1bit.In                                 Premise(F226)
	S447= DR1bit.In=so|OverFlow((-a))                           Path(S443,S446)
	S448= DataCmb.Out=>DR4bit.In                                Premise(F227)
	S449= DR4bit.In={Compare0((-a)),so|OverFlow((-a))}          Path(S445,S448)
	S450= IR.Out6_10=>GPRegs.WReg                               Premise(F228)
	S451= GPRegs.WReg=rT                                        Path(S363,S450)
	S452= ALUOut.Out=>GPRegs.WData                              Premise(F229)
	S453= DR4bit.Out=>CRRegs.CR0In                              Premise(F230)
	S454= DR1bit.Out=>XER.SOIn                                  Premise(F231)
	S455= OVReg.Out=>XER.OVIn                                   Premise(F232)
	S456= CtrlPIDReg=0                                          Premise(F233)
	S457= [PIDReg]=pid                                          PIDReg-Hold(S305,S456)
	S458= CtrlIMMU=0                                            Premise(F234)
	S459= CtrlPC=0                                              Premise(F235)
	S460= CtrlPCInc=0                                           Premise(F236)
	S461= PC[CIA]=addr                                          PC-Hold(S309,S460)
	S462= PC[Out]=addr+4                                        PC-Hold(S310,S459,S460)
	S463= CtrlIAddrReg=0                                        Premise(F237)
	S464= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S312,S463)
	S465= CtrlIMMUHitReg=0                                      Premise(F238)
	S466= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S314,S465)
	S467= CtrlICache=0                                          Premise(F239)
	S468= ICache[addr]={31,rT,rA,0,1233}                        ICache-Hold(S316,S467)
	S469= CtrlICacheReg=0                                       Premise(F240)
	S470= [ICacheReg]={31,rT,rA,0,1233}                         ICacheReg-Hold(S318,S469)
	S471= CtrlICacheHitReg=0                                    Premise(F241)
	S472= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S320,S471)
	S473= CtrlIMem=0                                            Premise(F242)
	S474= IMem[{pid,addr}]={31,rT,rA,0,1233}                    IMem-Hold(S322,S473)
	S475= CtrlIRMux=0                                           Premise(F243)
	S476= CtrlIR=0                                              Premise(F244)
	S477= [IR]={31,rT,rA,0,1233}                                IR-Hold(S325,S476)
	S478= CtrlGPRegs=0                                          Premise(F245)
	S479= GPRegs[rA]=a                                          GPRegs-Hold(S327,S478)
	S480= CtrlA=0                                               Premise(F246)
	S481= [A]=a                                                 A-Hold(S329,S480)
	S482= CtrlB=0                                               Premise(F247)
	S483= [B]=32'b0                                             B-Hold(S331,S482)
	S484= CtrlALUOut=1                                          Premise(F248)
	S485= [ALUOut]=(-a)                                         ALUOut-Write(S433,S484)
	S486= CtrlOVReg=1                                           Premise(F249)
	S487= [OVReg]=OverFlow((-a))                                OVReg-Write(S438,S486)
	S488= CtrlXERSO=0                                           Premise(F250)
	S489= XER[SO]=so                                            XER-SO-Hold(S335,S488)
	S490= CtrlXEROV=0                                           Premise(F251)
	S491= CtrlXERCA=0                                           Premise(F252)
	S492= CtrlDR1bit=1                                          Premise(F253)
	S493= [DR1bit]=so|OverFlow((-a))                            DR1bit-Write(S447,S492)
	S494= CtrlDR4bit=1                                          Premise(F254)
	S495= [DR4bit]={Compare0((-a)),so|OverFlow((-a))}           DR4bit-Write(S449,S494)
	S496= CtrlCRRegs=0                                          Premise(F255)
	S497= CtrlCRRegsCR0=0                                       Premise(F256)
	S498= CtrlCRRegsW4bitRegs=0                                 Premise(F257)
	S499= CtrlCRRegsW1bitRegs=0                                 Premise(F258)

MEM	S500= PIDReg.Out=pid                                        PIDReg-Out(S457)
	S501= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S457)
	S502= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S457)
	S503= PC.CIA=addr                                           PC-Out(S461)
	S504= PC.CIA31_28=addr[31:28]                               PC-Out(S461)
	S505= PC.Out=addr+4                                         PC-Out(S462)
	S506= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S464)
	S507= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S464)
	S508= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S464)
	S509= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S466)
	S510= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S466)
	S511= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S466)
	S512= ICacheReg.Out={31,rT,rA,0,1233}                       ICacheReg-Out(S470)
	S513= ICacheReg.Out26_31={31,rT,rA,0,1233}[26:31]           ICacheReg-Out(S470)
	S514= ICacheReg.Out30_31={31,rT,rA,0,1233}[30:31]           ICacheReg-Out(S470)
	S515= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S472)
	S516= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S472)
	S517= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S472)
	S518= IR.Out0_5=31                                          IR-Out(S477)
	S519= IR.Out6_10=rT                                         IR-Out(S477)
	S520= IR.Out11_15=rA                                        IR-Out(S477)
	S521= IR.Out16_20=0                                         IR-Out(S477)
	S522= IR.Out21_31=1233                                      IR-Out(S477)
	S523= A.Out=a                                               A-Out(S481)
	S524= A.Out26_31=a[26:31]                                   A-Out(S481)
	S525= A.Out30_31=a[30:31]                                   A-Out(S481)
	S526= B.Out=32'b0                                           B-Out(S483)
	S527= B.Out26_31=32'b0[26:31]                               B-Out(S483)
	S528= B.Out30_31=32'b0[30:31]                               B-Out(S483)
	S529= ALUOut.Out=(-a)                                       ALUOut-Out(S485)
	S530= ALUOut.Out26_31=(-a)[26:31]                           ALUOut-Out(S485)
	S531= ALUOut.Out30_31=(-a)[30:31]                           ALUOut-Out(S485)
	S532= OVReg.Out=OverFlow((-a))                              OVReg-Out(S487)
	S533= OVReg.Out26_31=OverFlow((-a))[26:31]                  OVReg-Out(S487)
	S534= OVReg.Out30_31=OverFlow((-a))[30:31]                  OVReg-Out(S487)
	S535= XER.SOOut=so                                          XER-SO-Out(S489)
	S536= DR1bit.Out=so|OverFlow((-a))                          DR1bit-Out(S493)
	S537= DR1bit.Out26_31=so|OverFlow((-a))[26:31]              DR1bit-Out(S493)
	S538= DR1bit.Out30_31=so|OverFlow((-a))[30:31]              DR1bit-Out(S493)
	S539= DR4bit.Out={Compare0((-a)),so|OverFlow((-a))}         DR4bit-Out(S495)
	S540= DR4bit.Out26_31={Compare0((-a)),so|OverFlow((-a))}[26:31]DR4bit-Out(S495)
	S541= DR4bit.Out30_31={Compare0((-a)),so|OverFlow((-a))}[30:31]DR4bit-Out(S495)
	S542= PIDReg.Out=>IMMU.PID                                  Premise(F259)
	S543= IMMU.PID=pid                                          Path(S500,S542)
	S544= PC.Out=>IMMU.IEA                                      Premise(F260)
	S545= IMMU.IEA=addr+4                                       Path(S505,S544)
	S546= IMMU.Addr={pid,addr+4}                                IMMU-Search(S543,S545)
	S547= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S543,S545)
	S548= IMMU.Addr=>IAddrReg.In                                Premise(F261)
	S549= IAddrReg.In={pid,addr+4}                              Path(S546,S548)
	S550= IMMU.Hit=>IMMUHitReg.In                               Premise(F262)
	S551= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S547,S550)
	S552= PC.Out=>ICache.IEA                                    Premise(F263)
	S553= ICache.IEA=addr+4                                     Path(S505,S552)
	S554= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S553)
	S555= ICache.Out=>ICacheReg.In                              Premise(F264)
	S556= ICache.Hit=>ICacheHitReg.In                           Premise(F265)
	S557= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S554,S556)
	S558= IMMUHitReg.Out=>CU.IMemHit                            Premise(F266)
	S559= CU.IMemHit=IMMUHit(pid,addr)                          Path(S509,S558)
	S560= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F267)
	S561= CU.ICacheHit=ICacheHit(addr)                          Path(S515,S560)
	S562= IAddrReg.Out=>IMem.RAddr                              Premise(F268)
	S563= IMem.RAddr={pid,addr}                                 Path(S506,S562)
	S564= IMem.Out={31,rT,rA,0,1233}                            IMem-Read(S563,S474)
	S565= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S563,S474)
	S566= IMem.Out=>IRMux.MemData                               Premise(F269)
	S567= IRMux.MemData={31,rT,rA,0,1233}                       Path(S564,S566)
	S568= ICacheReg.Out=>IRMux.CacheData                        Premise(F270)
	S569= IRMux.CacheData={31,rT,rA,0,1233}                     Path(S512,S568)
	S570= IRMux.Out={31,rT,rA,0,1233}                           IRMux-Select(S567,S569)
	S571= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F271)
	S572= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S509,S571)
	S573= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F272)
	S574= IRMux.CacheSel=ICacheHit(addr)                        Path(S515,S573)
	S575= IRMux.Out=>IR.In                                      Premise(F273)
	S576= IR.In={31,rT,rA,0,1233}                               Path(S570,S575)
	S577= IMem.MEM8WordOut=>ICache.WData                        Premise(F274)
	S578= ICache.WData=IMemGet8Word({pid,addr})                 Path(S565,S577)
	S579= PC.Out=>ICache.IEA                                    Premise(F275)
	S580= IR.Out0_5=>CU.Op                                      Premise(F276)
	S581= CU.Op=31                                              Path(S518,S580)
	S582= IR.Out11_15=>GPRegs.RReg1                             Premise(F277)
	S583= GPRegs.RReg1=rA                                       Path(S520,S582)
	S584= GPRegs.Rdata1=a                                       GPRegs-Read(S583,S479)
	S585= IR.Out21_31=>CU.IRFunc                                Premise(F278)
	S586= CU.IRFunc=1233                                        Path(S522,S585)
	S587= CU.Func=alu_neg                                       CU(S581,S586)
	S588= GPRegs.Rdata1=>A.In                                   Premise(F279)
	S589= A.In=a                                                Path(S584,S588)
	S590= A.Out=>ALU.A                                          Premise(F280)
	S591= ALU.A=a                                               Path(S523,S590)
	S592= B.Out=>ALU.B                                          Premise(F281)
	S593= ALU.B=32'b0                                           Path(S526,S592)
	S594= CU.Func=>ALU.Func                                     Premise(F282)
	S595= ALU.Func=alu_neg                                      Path(S587,S594)
	S596= ALU.Out=(-a)                                          ALU(S591)
	S597= ALU.CMP=Compare0((-a))                                ALU(S591)
	S598= ALU.OV=OverFlow((-a))                                 ALU(S591)
	S599= ALU.CA=Carry((-a))                                    ALU(S591)
	S600= ALU.Out=>ALUOut.In                                    Premise(F283)
	S601= ALUOut.In=(-a)                                        Path(S596,S600)
	S602= ALU.CMP=>DataCmb.A                                    Premise(F284)
	S603= DataCmb.A=Compare0((-a))                              Path(S597,S602)
	S604= ORGate.Out=>DataCmb.B                                 Premise(F285)
	S605= ALU.OV=>OVReg.In                                      Premise(F286)
	S606= OVReg.In=OverFlow((-a))                               Path(S598,S605)
	S607= XER.SOOut=>ORGate.A                                   Premise(F287)
	S608= ORGate.A=so                                           Path(S535,S607)
	S609= ALU.OV=>ORGate.B                                      Premise(F288)
	S610= ORGate.B=OverFlow((-a))                               Path(S598,S609)
	S611= ORGate.Out=so|OverFlow((-a))                          ORGate(S608,S610)
	S612= DataCmb.B=so|OverFlow((-a))                           Path(S611,S604)
	S613= DataCmb.Out={Compare0((-a)),so|OverFlow((-a))}        DataCmb(S603,S612)
	S614= ORGate.Out=>DR1bit.In                                 Premise(F289)
	S615= DR1bit.In=so|OverFlow((-a))                           Path(S611,S614)
	S616= DataCmb.Out=>DR4bit.In                                Premise(F290)
	S617= DR4bit.In={Compare0((-a)),so|OverFlow((-a))}          Path(S613,S616)
	S618= IR.Out6_10=>GPRegs.WReg                               Premise(F291)
	S619= GPRegs.WReg=rT                                        Path(S519,S618)
	S620= ALUOut.Out=>GPRegs.WData                              Premise(F292)
	S621= GPRegs.WData=(-a)                                     Path(S529,S620)
	S622= DR4bit.Out=>CRRegs.CR0In                              Premise(F293)
	S623= CRRegs.CR0In={Compare0((-a)),so|OverFlow((-a))}       Path(S539,S622)
	S624= DR1bit.Out=>XER.SOIn                                  Premise(F294)
	S625= XER.SOIn=so|OverFlow((-a))                            Path(S536,S624)
	S626= OVReg.Out=>XER.OVIn                                   Premise(F295)
	S627= XER.OVIn=OverFlow((-a))                               Path(S532,S626)
	S628= CtrlPIDReg=0                                          Premise(F296)
	S629= [PIDReg]=pid                                          PIDReg-Hold(S457,S628)
	S630= CtrlIMMU=0                                            Premise(F297)
	S631= CtrlPC=0                                              Premise(F298)
	S632= CtrlPCInc=0                                           Premise(F299)
	S633= PC[CIA]=addr                                          PC-Hold(S461,S632)
	S634= PC[Out]=addr+4                                        PC-Hold(S462,S631,S632)
	S635= CtrlIAddrReg=0                                        Premise(F300)
	S636= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S464,S635)
	S637= CtrlIMMUHitReg=0                                      Premise(F301)
	S638= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S466,S637)
	S639= CtrlICache=0                                          Premise(F302)
	S640= ICache[addr]={31,rT,rA,0,1233}                        ICache-Hold(S468,S639)
	S641= CtrlICacheReg=0                                       Premise(F303)
	S642= [ICacheReg]={31,rT,rA,0,1233}                         ICacheReg-Hold(S470,S641)
	S643= CtrlICacheHitReg=0                                    Premise(F304)
	S644= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S472,S643)
	S645= CtrlIMem=0                                            Premise(F305)
	S646= IMem[{pid,addr}]={31,rT,rA,0,1233}                    IMem-Hold(S474,S645)
	S647= CtrlIRMux=0                                           Premise(F306)
	S648= CtrlIR=0                                              Premise(F307)
	S649= [IR]={31,rT,rA,0,1233}                                IR-Hold(S477,S648)
	S650= CtrlGPRegs=0                                          Premise(F308)
	S651= GPRegs[rA]=a                                          GPRegs-Hold(S479,S650)
	S652= CtrlA=0                                               Premise(F309)
	S653= [A]=a                                                 A-Hold(S481,S652)
	S654= CtrlB=0                                               Premise(F310)
	S655= [B]=32'b0                                             B-Hold(S483,S654)
	S656= CtrlALUOut=0                                          Premise(F311)
	S657= [ALUOut]=(-a)                                         ALUOut-Hold(S485,S656)
	S658= CtrlOVReg=0                                           Premise(F312)
	S659= [OVReg]=OverFlow((-a))                                OVReg-Hold(S487,S658)
	S660= CtrlXERSO=0                                           Premise(F313)
	S661= XER[SO]=so                                            XER-SO-Hold(S489,S660)
	S662= CtrlXEROV=0                                           Premise(F314)
	S663= CtrlXERCA=0                                           Premise(F315)
	S664= CtrlDR1bit=0                                          Premise(F316)
	S665= [DR1bit]=so|OverFlow((-a))                            DR1bit-Hold(S493,S664)
	S666= CtrlDR4bit=0                                          Premise(F317)
	S667= [DR4bit]={Compare0((-a)),so|OverFlow((-a))}           DR4bit-Hold(S495,S666)
	S668= CtrlCRRegs=0                                          Premise(F318)
	S669= CtrlCRRegsCR0=0                                       Premise(F319)
	S670= CtrlCRRegsW4bitRegs=0                                 Premise(F320)
	S671= CtrlCRRegsW1bitRegs=0                                 Premise(F321)

DMMU1	S672= PIDReg.Out=pid                                        PIDReg-Out(S629)
	S673= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S629)
	S674= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S629)
	S675= PC.CIA=addr                                           PC-Out(S633)
	S676= PC.CIA31_28=addr[31:28]                               PC-Out(S633)
	S677= PC.Out=addr+4                                         PC-Out(S634)
	S678= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S636)
	S679= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S636)
	S680= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S636)
	S681= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S638)
	S682= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S638)
	S683= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S638)
	S684= ICacheReg.Out={31,rT,rA,0,1233}                       ICacheReg-Out(S642)
	S685= ICacheReg.Out26_31={31,rT,rA,0,1233}[26:31]           ICacheReg-Out(S642)
	S686= ICacheReg.Out30_31={31,rT,rA,0,1233}[30:31]           ICacheReg-Out(S642)
	S687= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S644)
	S688= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S644)
	S689= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S644)
	S690= IR.Out0_5=31                                          IR-Out(S649)
	S691= IR.Out6_10=rT                                         IR-Out(S649)
	S692= IR.Out11_15=rA                                        IR-Out(S649)
	S693= IR.Out16_20=0                                         IR-Out(S649)
	S694= IR.Out21_31=1233                                      IR-Out(S649)
	S695= A.Out=a                                               A-Out(S653)
	S696= A.Out26_31=a[26:31]                                   A-Out(S653)
	S697= A.Out30_31=a[30:31]                                   A-Out(S653)
	S698= B.Out=32'b0                                           B-Out(S655)
	S699= B.Out26_31=32'b0[26:31]                               B-Out(S655)
	S700= B.Out30_31=32'b0[30:31]                               B-Out(S655)
	S701= ALUOut.Out=(-a)                                       ALUOut-Out(S657)
	S702= ALUOut.Out26_31=(-a)[26:31]                           ALUOut-Out(S657)
	S703= ALUOut.Out30_31=(-a)[30:31]                           ALUOut-Out(S657)
	S704= OVReg.Out=OverFlow((-a))                              OVReg-Out(S659)
	S705= OVReg.Out26_31=OverFlow((-a))[26:31]                  OVReg-Out(S659)
	S706= OVReg.Out30_31=OverFlow((-a))[30:31]                  OVReg-Out(S659)
	S707= XER.SOOut=so                                          XER-SO-Out(S661)
	S708= DR1bit.Out=so|OverFlow((-a))                          DR1bit-Out(S665)
	S709= DR1bit.Out26_31=so|OverFlow((-a))[26:31]              DR1bit-Out(S665)
	S710= DR1bit.Out30_31=so|OverFlow((-a))[30:31]              DR1bit-Out(S665)
	S711= DR4bit.Out={Compare0((-a)),so|OverFlow((-a))}         DR4bit-Out(S667)
	S712= DR4bit.Out26_31={Compare0((-a)),so|OverFlow((-a))}[26:31]DR4bit-Out(S667)
	S713= DR4bit.Out30_31={Compare0((-a)),so|OverFlow((-a))}[30:31]DR4bit-Out(S667)
	S714= PIDReg.Out=>IMMU.PID                                  Premise(F322)
	S715= IMMU.PID=pid                                          Path(S672,S714)
	S716= PC.Out=>IMMU.IEA                                      Premise(F323)
	S717= IMMU.IEA=addr+4                                       Path(S677,S716)
	S718= IMMU.Addr={pid,addr+4}                                IMMU-Search(S715,S717)
	S719= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S715,S717)
	S720= IMMU.Addr=>IAddrReg.In                                Premise(F324)
	S721= IAddrReg.In={pid,addr+4}                              Path(S718,S720)
	S722= IMMU.Hit=>IMMUHitReg.In                               Premise(F325)
	S723= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S719,S722)
	S724= PC.Out=>ICache.IEA                                    Premise(F326)
	S725= ICache.IEA=addr+4                                     Path(S677,S724)
	S726= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S725)
	S727= ICache.Out=>ICacheReg.In                              Premise(F327)
	S728= ICache.Hit=>ICacheHitReg.In                           Premise(F328)
	S729= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S726,S728)
	S730= IMMUHitReg.Out=>CU.IMemHit                            Premise(F329)
	S731= CU.IMemHit=IMMUHit(pid,addr)                          Path(S681,S730)
	S732= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F330)
	S733= CU.ICacheHit=ICacheHit(addr)                          Path(S687,S732)
	S734= IAddrReg.Out=>IMem.RAddr                              Premise(F331)
	S735= IMem.RAddr={pid,addr}                                 Path(S678,S734)
	S736= IMem.Out={31,rT,rA,0,1233}                            IMem-Read(S735,S646)
	S737= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S735,S646)
	S738= IMem.Out=>IRMux.MemData                               Premise(F332)
	S739= IRMux.MemData={31,rT,rA,0,1233}                       Path(S736,S738)
	S740= ICacheReg.Out=>IRMux.CacheData                        Premise(F333)
	S741= IRMux.CacheData={31,rT,rA,0,1233}                     Path(S684,S740)
	S742= IRMux.Out={31,rT,rA,0,1233}                           IRMux-Select(S739,S741)
	S743= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F334)
	S744= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S681,S743)
	S745= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F335)
	S746= IRMux.CacheSel=ICacheHit(addr)                        Path(S687,S745)
	S747= IRMux.Out=>IR.In                                      Premise(F336)
	S748= IR.In={31,rT,rA,0,1233}                               Path(S742,S747)
	S749= IMem.MEM8WordOut=>ICache.WData                        Premise(F337)
	S750= ICache.WData=IMemGet8Word({pid,addr})                 Path(S737,S749)
	S751= PC.Out=>ICache.IEA                                    Premise(F338)
	S752= IR.Out0_5=>CU.Op                                      Premise(F339)
	S753= CU.Op=31                                              Path(S690,S752)
	S754= IR.Out11_15=>GPRegs.RReg1                             Premise(F340)
	S755= GPRegs.RReg1=rA                                       Path(S692,S754)
	S756= GPRegs.Rdata1=a                                       GPRegs-Read(S755,S651)
	S757= IR.Out21_31=>CU.IRFunc                                Premise(F341)
	S758= CU.IRFunc=1233                                        Path(S694,S757)
	S759= CU.Func=alu_neg                                       CU(S753,S758)
	S760= GPRegs.Rdata1=>A.In                                   Premise(F342)
	S761= A.In=a                                                Path(S756,S760)
	S762= A.Out=>ALU.A                                          Premise(F343)
	S763= ALU.A=a                                               Path(S695,S762)
	S764= B.Out=>ALU.B                                          Premise(F344)
	S765= ALU.B=32'b0                                           Path(S698,S764)
	S766= CU.Func=>ALU.Func                                     Premise(F345)
	S767= ALU.Func=alu_neg                                      Path(S759,S766)
	S768= ALU.Out=(-a)                                          ALU(S763)
	S769= ALU.CMP=Compare0((-a))                                ALU(S763)
	S770= ALU.OV=OverFlow((-a))                                 ALU(S763)
	S771= ALU.CA=Carry((-a))                                    ALU(S763)
	S772= ALU.Out=>ALUOut.In                                    Premise(F346)
	S773= ALUOut.In=(-a)                                        Path(S768,S772)
	S774= ALU.CMP=>DataCmb.A                                    Premise(F347)
	S775= DataCmb.A=Compare0((-a))                              Path(S769,S774)
	S776= ORGate.Out=>DataCmb.B                                 Premise(F348)
	S777= ALU.OV=>OVReg.In                                      Premise(F349)
	S778= OVReg.In=OverFlow((-a))                               Path(S770,S777)
	S779= XER.SOOut=>ORGate.A                                   Premise(F350)
	S780= ORGate.A=so                                           Path(S707,S779)
	S781= ALU.OV=>ORGate.B                                      Premise(F351)
	S782= ORGate.B=OverFlow((-a))                               Path(S770,S781)
	S783= ORGate.Out=so|OverFlow((-a))                          ORGate(S780,S782)
	S784= DataCmb.B=so|OverFlow((-a))                           Path(S783,S776)
	S785= DataCmb.Out={Compare0((-a)),so|OverFlow((-a))}        DataCmb(S775,S784)
	S786= ORGate.Out=>DR1bit.In                                 Premise(F352)
	S787= DR1bit.In=so|OverFlow((-a))                           Path(S783,S786)
	S788= DataCmb.Out=>DR4bit.In                                Premise(F353)
	S789= DR4bit.In={Compare0((-a)),so|OverFlow((-a))}          Path(S785,S788)
	S790= IR.Out6_10=>GPRegs.WReg                               Premise(F354)
	S791= GPRegs.WReg=rT                                        Path(S691,S790)
	S792= ALUOut.Out=>GPRegs.WData                              Premise(F355)
	S793= GPRegs.WData=(-a)                                     Path(S701,S792)
	S794= DR4bit.Out=>CRRegs.CR0In                              Premise(F356)
	S795= CRRegs.CR0In={Compare0((-a)),so|OverFlow((-a))}       Path(S711,S794)
	S796= DR1bit.Out=>XER.SOIn                                  Premise(F357)
	S797= XER.SOIn=so|OverFlow((-a))                            Path(S708,S796)
	S798= OVReg.Out=>XER.OVIn                                   Premise(F358)
	S799= XER.OVIn=OverFlow((-a))                               Path(S704,S798)
	S800= CtrlPIDReg=0                                          Premise(F359)
	S801= [PIDReg]=pid                                          PIDReg-Hold(S629,S800)
	S802= CtrlIMMU=0                                            Premise(F360)
	S803= CtrlPC=0                                              Premise(F361)
	S804= CtrlPCInc=0                                           Premise(F362)
	S805= PC[CIA]=addr                                          PC-Hold(S633,S804)
	S806= PC[Out]=addr+4                                        PC-Hold(S634,S803,S804)
	S807= CtrlIAddrReg=0                                        Premise(F363)
	S808= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S636,S807)
	S809= CtrlIMMUHitReg=0                                      Premise(F364)
	S810= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S638,S809)
	S811= CtrlICache=0                                          Premise(F365)
	S812= ICache[addr]={31,rT,rA,0,1233}                        ICache-Hold(S640,S811)
	S813= CtrlICacheReg=0                                       Premise(F366)
	S814= [ICacheReg]={31,rT,rA,0,1233}                         ICacheReg-Hold(S642,S813)
	S815= CtrlICacheHitReg=0                                    Premise(F367)
	S816= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S644,S815)
	S817= CtrlIMem=0                                            Premise(F368)
	S818= IMem[{pid,addr}]={31,rT,rA,0,1233}                    IMem-Hold(S646,S817)
	S819= CtrlIRMux=0                                           Premise(F369)
	S820= CtrlIR=0                                              Premise(F370)
	S821= [IR]={31,rT,rA,0,1233}                                IR-Hold(S649,S820)
	S822= CtrlGPRegs=0                                          Premise(F371)
	S823= GPRegs[rA]=a                                          GPRegs-Hold(S651,S822)
	S824= CtrlA=0                                               Premise(F372)
	S825= [A]=a                                                 A-Hold(S653,S824)
	S826= CtrlB=0                                               Premise(F373)
	S827= [B]=32'b0                                             B-Hold(S655,S826)
	S828= CtrlALUOut=0                                          Premise(F374)
	S829= [ALUOut]=(-a)                                         ALUOut-Hold(S657,S828)
	S830= CtrlOVReg=0                                           Premise(F375)
	S831= [OVReg]=OverFlow((-a))                                OVReg-Hold(S659,S830)
	S832= CtrlXERSO=0                                           Premise(F376)
	S833= XER[SO]=so                                            XER-SO-Hold(S661,S832)
	S834= CtrlXEROV=0                                           Premise(F377)
	S835= CtrlXERCA=0                                           Premise(F378)
	S836= CtrlDR1bit=0                                          Premise(F379)
	S837= [DR1bit]=so|OverFlow((-a))                            DR1bit-Hold(S665,S836)
	S838= CtrlDR4bit=0                                          Premise(F380)
	S839= [DR4bit]={Compare0((-a)),so|OverFlow((-a))}           DR4bit-Hold(S667,S838)
	S840= CtrlCRRegs=0                                          Premise(F381)
	S841= CtrlCRRegsCR0=0                                       Premise(F382)
	S842= CtrlCRRegsW4bitRegs=0                                 Premise(F383)
	S843= CtrlCRRegsW1bitRegs=0                                 Premise(F384)

DMMU2	S844= PIDReg.Out=pid                                        PIDReg-Out(S801)
	S845= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S801)
	S846= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S801)
	S847= PC.CIA=addr                                           PC-Out(S805)
	S848= PC.CIA31_28=addr[31:28]                               PC-Out(S805)
	S849= PC.Out=addr+4                                         PC-Out(S806)
	S850= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S808)
	S851= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S808)
	S852= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S808)
	S853= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S810)
	S854= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S810)
	S855= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S810)
	S856= ICacheReg.Out={31,rT,rA,0,1233}                       ICacheReg-Out(S814)
	S857= ICacheReg.Out26_31={31,rT,rA,0,1233}[26:31]           ICacheReg-Out(S814)
	S858= ICacheReg.Out30_31={31,rT,rA,0,1233}[30:31]           ICacheReg-Out(S814)
	S859= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S816)
	S860= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S816)
	S861= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S816)
	S862= IR.Out0_5=31                                          IR-Out(S821)
	S863= IR.Out6_10=rT                                         IR-Out(S821)
	S864= IR.Out11_15=rA                                        IR-Out(S821)
	S865= IR.Out16_20=0                                         IR-Out(S821)
	S866= IR.Out21_31=1233                                      IR-Out(S821)
	S867= A.Out=a                                               A-Out(S825)
	S868= A.Out26_31=a[26:31]                                   A-Out(S825)
	S869= A.Out30_31=a[30:31]                                   A-Out(S825)
	S870= B.Out=32'b0                                           B-Out(S827)
	S871= B.Out26_31=32'b0[26:31]                               B-Out(S827)
	S872= B.Out30_31=32'b0[30:31]                               B-Out(S827)
	S873= ALUOut.Out=(-a)                                       ALUOut-Out(S829)
	S874= ALUOut.Out26_31=(-a)[26:31]                           ALUOut-Out(S829)
	S875= ALUOut.Out30_31=(-a)[30:31]                           ALUOut-Out(S829)
	S876= OVReg.Out=OverFlow((-a))                              OVReg-Out(S831)
	S877= OVReg.Out26_31=OverFlow((-a))[26:31]                  OVReg-Out(S831)
	S878= OVReg.Out30_31=OverFlow((-a))[30:31]                  OVReg-Out(S831)
	S879= XER.SOOut=so                                          XER-SO-Out(S833)
	S880= DR1bit.Out=so|OverFlow((-a))                          DR1bit-Out(S837)
	S881= DR1bit.Out26_31=so|OverFlow((-a))[26:31]              DR1bit-Out(S837)
	S882= DR1bit.Out30_31=so|OverFlow((-a))[30:31]              DR1bit-Out(S837)
	S883= DR4bit.Out={Compare0((-a)),so|OverFlow((-a))}         DR4bit-Out(S839)
	S884= DR4bit.Out26_31={Compare0((-a)),so|OverFlow((-a))}[26:31]DR4bit-Out(S839)
	S885= DR4bit.Out30_31={Compare0((-a)),so|OverFlow((-a))}[30:31]DR4bit-Out(S839)
	S886= PIDReg.Out=>IMMU.PID                                  Premise(F385)
	S887= IMMU.PID=pid                                          Path(S844,S886)
	S888= PC.Out=>IMMU.IEA                                      Premise(F386)
	S889= IMMU.IEA=addr+4                                       Path(S849,S888)
	S890= IMMU.Addr={pid,addr+4}                                IMMU-Search(S887,S889)
	S891= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S887,S889)
	S892= IMMU.Addr=>IAddrReg.In                                Premise(F387)
	S893= IAddrReg.In={pid,addr+4}                              Path(S890,S892)
	S894= IMMU.Hit=>IMMUHitReg.In                               Premise(F388)
	S895= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S891,S894)
	S896= PC.Out=>ICache.IEA                                    Premise(F389)
	S897= ICache.IEA=addr+4                                     Path(S849,S896)
	S898= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S897)
	S899= ICache.Out=>ICacheReg.In                              Premise(F390)
	S900= ICache.Hit=>ICacheHitReg.In                           Premise(F391)
	S901= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S898,S900)
	S902= IMMUHitReg.Out=>CU.IMemHit                            Premise(F392)
	S903= CU.IMemHit=IMMUHit(pid,addr)                          Path(S853,S902)
	S904= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F393)
	S905= CU.ICacheHit=ICacheHit(addr)                          Path(S859,S904)
	S906= IAddrReg.Out=>IMem.RAddr                              Premise(F394)
	S907= IMem.RAddr={pid,addr}                                 Path(S850,S906)
	S908= IMem.Out={31,rT,rA,0,1233}                            IMem-Read(S907,S818)
	S909= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S907,S818)
	S910= IMem.Out=>IRMux.MemData                               Premise(F395)
	S911= IRMux.MemData={31,rT,rA,0,1233}                       Path(S908,S910)
	S912= ICacheReg.Out=>IRMux.CacheData                        Premise(F396)
	S913= IRMux.CacheData={31,rT,rA,0,1233}                     Path(S856,S912)
	S914= IRMux.Out={31,rT,rA,0,1233}                           IRMux-Select(S911,S913)
	S915= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F397)
	S916= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S853,S915)
	S917= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F398)
	S918= IRMux.CacheSel=ICacheHit(addr)                        Path(S859,S917)
	S919= IRMux.Out=>IR.In                                      Premise(F399)
	S920= IR.In={31,rT,rA,0,1233}                               Path(S914,S919)
	S921= IMem.MEM8WordOut=>ICache.WData                        Premise(F400)
	S922= ICache.WData=IMemGet8Word({pid,addr})                 Path(S909,S921)
	S923= PC.Out=>ICache.IEA                                    Premise(F401)
	S924= IR.Out0_5=>CU.Op                                      Premise(F402)
	S925= CU.Op=31                                              Path(S862,S924)
	S926= IR.Out11_15=>GPRegs.RReg1                             Premise(F403)
	S927= GPRegs.RReg1=rA                                       Path(S864,S926)
	S928= GPRegs.Rdata1=a                                       GPRegs-Read(S927,S823)
	S929= IR.Out21_31=>CU.IRFunc                                Premise(F404)
	S930= CU.IRFunc=1233                                        Path(S866,S929)
	S931= CU.Func=alu_neg                                       CU(S925,S930)
	S932= GPRegs.Rdata1=>A.In                                   Premise(F405)
	S933= A.In=a                                                Path(S928,S932)
	S934= A.Out=>ALU.A                                          Premise(F406)
	S935= ALU.A=a                                               Path(S867,S934)
	S936= B.Out=>ALU.B                                          Premise(F407)
	S937= ALU.B=32'b0                                           Path(S870,S936)
	S938= CU.Func=>ALU.Func                                     Premise(F408)
	S939= ALU.Func=alu_neg                                      Path(S931,S938)
	S940= ALU.Out=(-a)                                          ALU(S935)
	S941= ALU.CMP=Compare0((-a))                                ALU(S935)
	S942= ALU.OV=OverFlow((-a))                                 ALU(S935)
	S943= ALU.CA=Carry((-a))                                    ALU(S935)
	S944= ALU.Out=>ALUOut.In                                    Premise(F409)
	S945= ALUOut.In=(-a)                                        Path(S940,S944)
	S946= ALU.CMP=>DataCmb.A                                    Premise(F410)
	S947= DataCmb.A=Compare0((-a))                              Path(S941,S946)
	S948= ORGate.Out=>DataCmb.B                                 Premise(F411)
	S949= ALU.OV=>OVReg.In                                      Premise(F412)
	S950= OVReg.In=OverFlow((-a))                               Path(S942,S949)
	S951= XER.SOOut=>ORGate.A                                   Premise(F413)
	S952= ORGate.A=so                                           Path(S879,S951)
	S953= ALU.OV=>ORGate.B                                      Premise(F414)
	S954= ORGate.B=OverFlow((-a))                               Path(S942,S953)
	S955= ORGate.Out=so|OverFlow((-a))                          ORGate(S952,S954)
	S956= DataCmb.B=so|OverFlow((-a))                           Path(S955,S948)
	S957= DataCmb.Out={Compare0((-a)),so|OverFlow((-a))}        DataCmb(S947,S956)
	S958= ORGate.Out=>DR1bit.In                                 Premise(F415)
	S959= DR1bit.In=so|OverFlow((-a))                           Path(S955,S958)
	S960= DataCmb.Out=>DR4bit.In                                Premise(F416)
	S961= DR4bit.In={Compare0((-a)),so|OverFlow((-a))}          Path(S957,S960)
	S962= IR.Out6_10=>GPRegs.WReg                               Premise(F417)
	S963= GPRegs.WReg=rT                                        Path(S863,S962)
	S964= ALUOut.Out=>GPRegs.WData                              Premise(F418)
	S965= GPRegs.WData=(-a)                                     Path(S873,S964)
	S966= DR4bit.Out=>CRRegs.CR0In                              Premise(F419)
	S967= CRRegs.CR0In={Compare0((-a)),so|OverFlow((-a))}       Path(S883,S966)
	S968= DR1bit.Out=>XER.SOIn                                  Premise(F420)
	S969= XER.SOIn=so|OverFlow((-a))                            Path(S880,S968)
	S970= OVReg.Out=>XER.OVIn                                   Premise(F421)
	S971= XER.OVIn=OverFlow((-a))                               Path(S876,S970)
	S972= CtrlPIDReg=0                                          Premise(F422)
	S973= [PIDReg]=pid                                          PIDReg-Hold(S801,S972)
	S974= CtrlIMMU=0                                            Premise(F423)
	S975= CtrlPC=0                                              Premise(F424)
	S976= CtrlPCInc=0                                           Premise(F425)
	S977= PC[CIA]=addr                                          PC-Hold(S805,S976)
	S978= PC[Out]=addr+4                                        PC-Hold(S806,S975,S976)
	S979= CtrlIAddrReg=0                                        Premise(F426)
	S980= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S808,S979)
	S981= CtrlIMMUHitReg=0                                      Premise(F427)
	S982= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S810,S981)
	S983= CtrlICache=0                                          Premise(F428)
	S984= ICache[addr]={31,rT,rA,0,1233}                        ICache-Hold(S812,S983)
	S985= CtrlICacheReg=0                                       Premise(F429)
	S986= [ICacheReg]={31,rT,rA,0,1233}                         ICacheReg-Hold(S814,S985)
	S987= CtrlICacheHitReg=0                                    Premise(F430)
	S988= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S816,S987)
	S989= CtrlIMem=0                                            Premise(F431)
	S990= IMem[{pid,addr}]={31,rT,rA,0,1233}                    IMem-Hold(S818,S989)
	S991= CtrlIRMux=0                                           Premise(F432)
	S992= CtrlIR=0                                              Premise(F433)
	S993= [IR]={31,rT,rA,0,1233}                                IR-Hold(S821,S992)
	S994= CtrlGPRegs=0                                          Premise(F434)
	S995= GPRegs[rA]=a                                          GPRegs-Hold(S823,S994)
	S996= CtrlA=0                                               Premise(F435)
	S997= [A]=a                                                 A-Hold(S825,S996)
	S998= CtrlB=0                                               Premise(F436)
	S999= [B]=32'b0                                             B-Hold(S827,S998)
	S1000= CtrlALUOut=0                                         Premise(F437)
	S1001= [ALUOut]=(-a)                                        ALUOut-Hold(S829,S1000)
	S1002= CtrlOVReg=0                                          Premise(F438)
	S1003= [OVReg]=OverFlow((-a))                               OVReg-Hold(S831,S1002)
	S1004= CtrlXERSO=0                                          Premise(F439)
	S1005= XER[SO]=so                                           XER-SO-Hold(S833,S1004)
	S1006= CtrlXEROV=0                                          Premise(F440)
	S1007= CtrlXERCA=0                                          Premise(F441)
	S1008= CtrlDR1bit=0                                         Premise(F442)
	S1009= [DR1bit]=so|OverFlow((-a))                           DR1bit-Hold(S837,S1008)
	S1010= CtrlDR4bit=0                                         Premise(F443)
	S1011= [DR4bit]={Compare0((-a)),so|OverFlow((-a))}          DR4bit-Hold(S839,S1010)
	S1012= CtrlCRRegs=0                                         Premise(F444)
	S1013= CtrlCRRegsCR0=0                                      Premise(F445)
	S1014= CtrlCRRegsW4bitRegs=0                                Premise(F446)
	S1015= CtrlCRRegsW1bitRegs=0                                Premise(F447)

WB	S1016= PIDReg.Out=pid                                       PIDReg-Out(S973)
	S1017= PIDReg.Out26_31=pid[26:31]                           PIDReg-Out(S973)
	S1018= PIDReg.Out30_31=pid[30:31]                           PIDReg-Out(S973)
	S1019= PC.CIA=addr                                          PC-Out(S977)
	S1020= PC.CIA31_28=addr[31:28]                              PC-Out(S977)
	S1021= PC.Out=addr+4                                        PC-Out(S978)
	S1022= IAddrReg.Out={pid,addr}                              IAddrReg-Out(S980)
	S1023= IAddrReg.Out26_31={pid,addr}[26:31]                  IAddrReg-Out(S980)
	S1024= IAddrReg.Out30_31={pid,addr}[30:31]                  IAddrReg-Out(S980)
	S1025= IMMUHitReg.Out=IMMUHit(pid,addr)                     IMMUHitReg-Out(S982)
	S1026= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S982)
	S1027= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S982)
	S1028= ICacheReg.Out={31,rT,rA,0,1233}                      ICacheReg-Out(S986)
	S1029= ICacheReg.Out26_31={31,rT,rA,0,1233}[26:31]          ICacheReg-Out(S986)
	S1030= ICacheReg.Out30_31={31,rT,rA,0,1233}[30:31]          ICacheReg-Out(S986)
	S1031= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S988)
	S1032= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S988)
	S1033= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S988)
	S1034= IR.Out0_5=31                                         IR-Out(S993)
	S1035= IR.Out6_10=rT                                        IR-Out(S993)
	S1036= IR.Out11_15=rA                                       IR-Out(S993)
	S1037= IR.Out16_20=0                                        IR-Out(S993)
	S1038= IR.Out21_31=1233                                     IR-Out(S993)
	S1039= A.Out=a                                              A-Out(S997)
	S1040= A.Out26_31=a[26:31]                                  A-Out(S997)
	S1041= A.Out30_31=a[30:31]                                  A-Out(S997)
	S1042= B.Out=32'b0                                          B-Out(S999)
	S1043= B.Out26_31=32'b0[26:31]                              B-Out(S999)
	S1044= B.Out30_31=32'b0[30:31]                              B-Out(S999)
	S1045= ALUOut.Out=(-a)                                      ALUOut-Out(S1001)
	S1046= ALUOut.Out26_31=(-a)[26:31]                          ALUOut-Out(S1001)
	S1047= ALUOut.Out30_31=(-a)[30:31]                          ALUOut-Out(S1001)
	S1048= OVReg.Out=OverFlow((-a))                             OVReg-Out(S1003)
	S1049= OVReg.Out26_31=OverFlow((-a))[26:31]                 OVReg-Out(S1003)
	S1050= OVReg.Out30_31=OverFlow((-a))[30:31]                 OVReg-Out(S1003)
	S1051= XER.SOOut=so                                         XER-SO-Out(S1005)
	S1052= DR1bit.Out=so|OverFlow((-a))                         DR1bit-Out(S1009)
	S1053= DR1bit.Out26_31=so|OverFlow((-a))[26:31]             DR1bit-Out(S1009)
	S1054= DR1bit.Out30_31=so|OverFlow((-a))[30:31]             DR1bit-Out(S1009)
	S1055= DR4bit.Out={Compare0((-a)),so|OverFlow((-a))}        DR4bit-Out(S1011)
	S1056= DR4bit.Out26_31={Compare0((-a)),so|OverFlow((-a))}[26:31]DR4bit-Out(S1011)
	S1057= DR4bit.Out30_31={Compare0((-a)),so|OverFlow((-a))}[30:31]DR4bit-Out(S1011)
	S1058= PIDReg.Out=>IMMU.PID                                 Premise(F448)
	S1059= IMMU.PID=pid                                         Path(S1016,S1058)
	S1060= PC.Out=>IMMU.IEA                                     Premise(F449)
	S1061= IMMU.IEA=addr+4                                      Path(S1021,S1060)
	S1062= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1059,S1061)
	S1063= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1059,S1061)
	S1064= IMMU.Addr=>IAddrReg.In                               Premise(F450)
	S1065= IAddrReg.In={pid,addr+4}                             Path(S1062,S1064)
	S1066= IMMU.Hit=>IMMUHitReg.In                              Premise(F451)
	S1067= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1063,S1066)
	S1068= PC.Out=>ICache.IEA                                   Premise(F452)
	S1069= ICache.IEA=addr+4                                    Path(S1021,S1068)
	S1070= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1069)
	S1071= ICache.Out=>ICacheReg.In                             Premise(F453)
	S1072= ICache.Hit=>ICacheHitReg.In                          Premise(F454)
	S1073= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1070,S1072)
	S1074= IMMUHitReg.Out=>CU.IMemHit                           Premise(F455)
	S1075= CU.IMemHit=IMMUHit(pid,addr)                         Path(S1025,S1074)
	S1076= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F456)
	S1077= CU.ICacheHit=ICacheHit(addr)                         Path(S1031,S1076)
	S1078= IAddrReg.Out=>IMem.RAddr                             Premise(F457)
	S1079= IMem.RAddr={pid,addr}                                Path(S1022,S1078)
	S1080= IMem.Out={31,rT,rA,0,1233}                           IMem-Read(S1079,S990)
	S1081= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1079,S990)
	S1082= IMem.Out=>IRMux.MemData                              Premise(F458)
	S1083= IRMux.MemData={31,rT,rA,0,1233}                      Path(S1080,S1082)
	S1084= ICacheReg.Out=>IRMux.CacheData                       Premise(F459)
	S1085= IRMux.CacheData={31,rT,rA,0,1233}                    Path(S1028,S1084)
	S1086= IRMux.Out={31,rT,rA,0,1233}                          IRMux-Select(S1083,S1085)
	S1087= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F460)
	S1088= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S1025,S1087)
	S1089= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F461)
	S1090= IRMux.CacheSel=ICacheHit(addr)                       Path(S1031,S1089)
	S1091= IRMux.Out=>IR.In                                     Premise(F462)
	S1092= IR.In={31,rT,rA,0,1233}                              Path(S1086,S1091)
	S1093= IMem.MEM8WordOut=>ICache.WData                       Premise(F463)
	S1094= ICache.WData=IMemGet8Word({pid,addr})                Path(S1081,S1093)
	S1095= PC.Out=>ICache.IEA                                   Premise(F464)
	S1096= IR.Out0_5=>CU.Op                                     Premise(F465)
	S1097= CU.Op=31                                             Path(S1034,S1096)
	S1098= IR.Out11_15=>GPRegs.RReg1                            Premise(F466)
	S1099= GPRegs.RReg1=rA                                      Path(S1036,S1098)
	S1100= GPRegs.Rdata1=a                                      GPRegs-Read(S1099,S995)
	S1101= IR.Out21_31=>CU.IRFunc                               Premise(F467)
	S1102= CU.IRFunc=1233                                       Path(S1038,S1101)
	S1103= CU.Func=alu_neg                                      CU(S1097,S1102)
	S1104= GPRegs.Rdata1=>A.In                                  Premise(F468)
	S1105= A.In=a                                               Path(S1100,S1104)
	S1106= A.Out=>ALU.A                                         Premise(F469)
	S1107= ALU.A=a                                              Path(S1039,S1106)
	S1108= B.Out=>ALU.B                                         Premise(F470)
	S1109= ALU.B=32'b0                                          Path(S1042,S1108)
	S1110= CU.Func=>ALU.Func                                    Premise(F471)
	S1111= ALU.Func=alu_neg                                     Path(S1103,S1110)
	S1112= ALU.Out=(-a)                                         ALU(S1107)
	S1113= ALU.CMP=Compare0((-a))                               ALU(S1107)
	S1114= ALU.OV=OverFlow((-a))                                ALU(S1107)
	S1115= ALU.CA=Carry((-a))                                   ALU(S1107)
	S1116= ALU.Out=>ALUOut.In                                   Premise(F472)
	S1117= ALUOut.In=(-a)                                       Path(S1112,S1116)
	S1118= ALU.CMP=>DataCmb.A                                   Premise(F473)
	S1119= DataCmb.A=Compare0((-a))                             Path(S1113,S1118)
	S1120= ORGate.Out=>DataCmb.B                                Premise(F474)
	S1121= ALU.OV=>OVReg.In                                     Premise(F475)
	S1122= OVReg.In=OverFlow((-a))                              Path(S1114,S1121)
	S1123= XER.SOOut=>ORGate.A                                  Premise(F476)
	S1124= ORGate.A=so                                          Path(S1051,S1123)
	S1125= ALU.OV=>ORGate.B                                     Premise(F477)
	S1126= ORGate.B=OverFlow((-a))                              Path(S1114,S1125)
	S1127= ORGate.Out=so|OverFlow((-a))                         ORGate(S1124,S1126)
	S1128= DataCmb.B=so|OverFlow((-a))                          Path(S1127,S1120)
	S1129= DataCmb.Out={Compare0((-a)),so|OverFlow((-a))}       DataCmb(S1119,S1128)
	S1130= ORGate.Out=>DR1bit.In                                Premise(F478)
	S1131= DR1bit.In=so|OverFlow((-a))                          Path(S1127,S1130)
	S1132= DataCmb.Out=>DR4bit.In                               Premise(F479)
	S1133= DR4bit.In={Compare0((-a)),so|OverFlow((-a))}         Path(S1129,S1132)
	S1134= IR.Out6_10=>GPRegs.WReg                              Premise(F480)
	S1135= GPRegs.WReg=rT                                       Path(S1035,S1134)
	S1136= ALUOut.Out=>GPRegs.WData                             Premise(F481)
	S1137= GPRegs.WData=(-a)                                    Path(S1045,S1136)
	S1138= DR4bit.Out=>CRRegs.CR0In                             Premise(F482)
	S1139= CRRegs.CR0In={Compare0((-a)),so|OverFlow((-a))}      Path(S1055,S1138)
	S1140= DR1bit.Out=>XER.SOIn                                 Premise(F483)
	S1141= XER.SOIn=so|OverFlow((-a))                           Path(S1052,S1140)
	S1142= OVReg.Out=>XER.OVIn                                  Premise(F484)
	S1143= XER.OVIn=OverFlow((-a))                              Path(S1048,S1142)
	S1144= CtrlPIDReg=0                                         Premise(F485)
	S1145= [PIDReg]=pid                                         PIDReg-Hold(S973,S1144)
	S1146= CtrlIMMU=0                                           Premise(F486)
	S1147= CtrlPC=0                                             Premise(F487)
	S1148= CtrlPCInc=0                                          Premise(F488)
	S1149= PC[CIA]=addr                                         PC-Hold(S977,S1148)
	S1150= PC[Out]=addr+4                                       PC-Hold(S978,S1147,S1148)
	S1151= CtrlIAddrReg=0                                       Premise(F489)
	S1152= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S980,S1151)
	S1153= CtrlIMMUHitReg=0                                     Premise(F490)
	S1154= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S982,S1153)
	S1155= CtrlICache=0                                         Premise(F491)
	S1156= ICache[addr]={31,rT,rA,0,1233}                       ICache-Hold(S984,S1155)
	S1157= CtrlICacheReg=0                                      Premise(F492)
	S1158= [ICacheReg]={31,rT,rA,0,1233}                        ICacheReg-Hold(S986,S1157)
	S1159= CtrlICacheHitReg=0                                   Premise(F493)
	S1160= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S988,S1159)
	S1161= CtrlIMem=0                                           Premise(F494)
	S1162= IMem[{pid,addr}]={31,rT,rA,0,1233}                   IMem-Hold(S990,S1161)
	S1163= CtrlIRMux=0                                          Premise(F495)
	S1164= CtrlIR=0                                             Premise(F496)
	S1165= [IR]={31,rT,rA,0,1233}                               IR-Hold(S993,S1164)
	S1166= CtrlGPRegs=1                                         Premise(F497)
	S1167= GPRegs[rT]=(-a)                                      GPRegs-Write(S1135,S1137,S1166)
	S1168= CtrlA=0                                              Premise(F498)
	S1169= [A]=a                                                A-Hold(S997,S1168)
	S1170= CtrlB=0                                              Premise(F499)
	S1171= [B]=32'b0                                            B-Hold(S999,S1170)
	S1172= CtrlALUOut=0                                         Premise(F500)
	S1173= [ALUOut]=(-a)                                        ALUOut-Hold(S1001,S1172)
	S1174= CtrlOVReg=0                                          Premise(F501)
	S1175= [OVReg]=OverFlow((-a))                               OVReg-Hold(S1003,S1174)
	S1176= CtrlXERSO=1                                          Premise(F502)
	S1177= XER[SO]=so|OverFlow((-a))                            XER-SO-Write(S1141,S1176)
	S1178= CtrlXEROV=1                                          Premise(F503)
	S1179= XER[OV]=OverFlow((-a))                               XER-OV-Write(S1143,S1178)
	S1180= CtrlXERCA=0                                          Premise(F504)
	S1181= CtrlDR1bit=0                                         Premise(F505)
	S1182= [DR1bit]=so|OverFlow((-a))                           DR1bit-Hold(S1009,S1181)
	S1183= CtrlDR4bit=0                                         Premise(F506)
	S1184= [DR4bit]={Compare0((-a)),so|OverFlow((-a))}          DR4bit-Hold(S1011,S1183)
	S1185= CtrlCRRegs=0                                         Premise(F507)
	S1186= CtrlCRRegsCR0=1                                      Premise(F508)
	S1187= CRRegs[CR0]={Compare0((-a)),so|OverFlow((-a))}       CRRegs-CR0-Write(S1139,S1186)
	S1188= CtrlCRRegsW4bitRegs=0                                Premise(F509)
	S1189= CtrlCRRegsW1bitRegs=0                                Premise(F510)

POST	S1145= [PIDReg]=pid                                         PIDReg-Hold(S973,S1144)
	S1149= PC[CIA]=addr                                         PC-Hold(S977,S1148)
	S1150= PC[Out]=addr+4                                       PC-Hold(S978,S1147,S1148)
	S1152= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S980,S1151)
	S1154= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S982,S1153)
	S1156= ICache[addr]={31,rT,rA,0,1233}                       ICache-Hold(S984,S1155)
	S1158= [ICacheReg]={31,rT,rA,0,1233}                        ICacheReg-Hold(S986,S1157)
	S1160= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S988,S1159)
	S1162= IMem[{pid,addr}]={31,rT,rA,0,1233}                   IMem-Hold(S990,S1161)
	S1165= [IR]={31,rT,rA,0,1233}                               IR-Hold(S993,S1164)
	S1167= GPRegs[rT]=(-a)                                      GPRegs-Write(S1135,S1137,S1166)
	S1169= [A]=a                                                A-Hold(S997,S1168)
	S1171= [B]=32'b0                                            B-Hold(S999,S1170)
	S1173= [ALUOut]=(-a)                                        ALUOut-Hold(S1001,S1172)
	S1175= [OVReg]=OverFlow((-a))                               OVReg-Hold(S1003,S1174)
	S1177= XER[SO]=so|OverFlow((-a))                            XER-SO-Write(S1141,S1176)
	S1179= XER[OV]=OverFlow((-a))                               XER-OV-Write(S1143,S1178)
	S1182= [DR1bit]=so|OverFlow((-a))                           DR1bit-Hold(S1009,S1181)
	S1184= [DR4bit]={Compare0((-a)),so|OverFlow((-a))}          DR4bit-Hold(S1011,S1183)
	S1187= CRRegs[CR0]={Compare0((-a)),so|OverFlow((-a))}       CRRegs-CR0-Write(S1139,S1186)

