
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,0,1492}                      Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[CA]=ca                                              Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S8= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S9= PC.Out=addr                                             PC-Out(S1)
	S10= XER.CAOut=ca                                           XER-CA-Out(S4)
	S11= XER.SOOut=so                                           XER-SO-Out(S5)
	S12= PIDReg.Out=>IMMU.PID                                   Premise(F6)
	S13= IMMU.PID=pid                                           Path(S6,S12)
	S14= PC.Out=>IMMU.IEA                                       Premise(F7)
	S15= IMMU.IEA=addr                                          Path(S9,S14)
	S16= IMMU.Addr={pid,addr}                                   IMMU-Search(S13,S15)
	S17= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S13,S15)
	S18= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S19= IAddrReg.In={pid,addr}                                 Path(S16,S18)
	S20= IMMU.Hit=>IMMUHitReg.In                                Premise(F9)
	S21= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S17,S20)
	S22= PC.Out=>ICache.IEA                                     Premise(F10)
	S23= ICache.IEA=addr                                        Path(S9,S22)
	S24= ICache.Hit=ICacheHit(addr)                             ICache-Search(S23)
	S25= ICache.Out=>ICacheReg.In                               Premise(F11)
	S26= ICache.Hit=>ICacheHitReg.In                            Premise(F12)
	S27= ICacheHitReg.In=ICacheHit(addr)                        Path(S24,S26)
	S28= IMMUHitReg.Out=>CU.IMemHit                             Premise(F13)
	S29= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F14)
	S30= IAddrReg.Out=>IMem.RAddr                               Premise(F15)
	S31= IMem.Out=>IRMux.MemData                                Premise(F16)
	S32= ICacheReg.Out=>IRMux.CacheData                         Premise(F17)
	S33= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F18)
	S34= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F19)
	S35= IRMux.Out=>IR.In                                       Premise(F20)
	S36= IMem.MEM8WordOut=>ICache.WData                         Premise(F21)
	S37= PC.Out=>ICache.IEA                                     Premise(F22)
	S38= IR.Out0_5=>CU.Op                                       Premise(F23)
	S39= IR.Out11_15=>GPRegs.RReg1                              Premise(F24)
	S40= IR.Out21_31=>CU.IRFunc                                 Premise(F25)
	S41= GPRegs.Rdata1=>A.In                                    Premise(F26)
	S42= A.Out=>ALU.A                                           Premise(F27)
	S43= B.Out=>ALU.B                                           Premise(F28)
	S44= XER.CAOut=>ALU.CAIn                                    Premise(F29)
	S45= ALU.CAIn=ca                                            Path(S10,S44)
	S46= CU.Func=>ALU.Func                                      Premise(F30)
	S47= ALU.Out=>ALUOut.In                                     Premise(F31)
	S48= ALU.CA=>CAReg.In                                       Premise(F32)
	S49= ALU.OV=>OVReg.In                                       Premise(F33)
	S50= XER.SOOut=>ORGate.A                                    Premise(F34)
	S51= ORGate.A=so                                            Path(S11,S50)
	S52= ALU.OV=>ORGate.B                                       Premise(F35)
	S53= ORGate.Out=>DR1bit.In                                  Premise(F36)
	S54= IR.Out6_10=>GPRegs.WReg                                Premise(F37)
	S55= ALUOut.Out=>GPRegs.WData                               Premise(F38)
	S56= DR1bit.Out=>XER.SOIn                                   Premise(F39)
	S57= CAReg.Out=>XER.CAIn                                    Premise(F40)
	S58= OVReg.Out=>XER.OVIn                                    Premise(F41)
	S59= CtrlPIDReg=0                                           Premise(F42)
	S60= [PIDReg]=pid                                           PIDReg-Hold(S0,S59)
	S61= CtrlIMMU=0                                             Premise(F43)
	S62= CtrlPC=0                                               Premise(F44)
	S63= CtrlPCInc=0                                            Premise(F45)
	S64= PC[Out]=addr                                           PC-Hold(S1,S62,S63)
	S65= CtrlIAddrReg=1                                         Premise(F46)
	S66= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S19,S65)
	S67= CtrlIMMUHitReg=1                                       Premise(F47)
	S68= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S21,S67)
	S69= CtrlICache=0                                           Premise(F48)
	S70= CtrlICacheReg=1                                        Premise(F49)
	S71= CtrlICacheHitReg=1                                     Premise(F50)
	S72= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S27,S71)
	S73= CtrlIMem=0                                             Premise(F51)
	S74= IMem[{pid,addr}]={31,rT,rA,0,1492}                     IMem-Hold(S2,S73)
	S75= CtrlIRMux=0                                            Premise(F52)
	S76= CtrlIR=0                                               Premise(F53)
	S77= CtrlGPRegs=0                                           Premise(F54)
	S78= GPRegs[rA]=a                                           GPRegs-Hold(S3,S77)
	S79= CtrlA=0                                                Premise(F55)
	S80= CtrlB=0                                                Premise(F56)
	S81= CtrlXERSO=0                                            Premise(F57)
	S82= XER[SO]=so                                             XER-SO-Hold(S5,S81)
	S83= CtrlXEROV=0                                            Premise(F58)
	S84= CtrlXERCA=0                                            Premise(F59)
	S85= XER[CA]=ca                                             XER-CA-Hold(S4,S84)
	S86= CtrlALUOut=0                                           Premise(F60)
	S87= CtrlCAReg=0                                            Premise(F61)
	S88= CtrlOVReg=0                                            Premise(F62)
	S89= CtrlDR1bit=0                                           Premise(F63)

IMMU	S90= PIDReg.Out=pid                                         PIDReg-Out(S60)
	S91= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S60)
	S92= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S60)
	S93= PC.Out=addr                                            PC-Out(S64)
	S94= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S66)
	S95= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S66)
	S96= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S66)
	S97= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S68)
	S98= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S68)
	S99= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]           IMMUHitReg-Out(S68)
	S100= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S72)
	S101= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S72)
	S102= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S72)
	S103= XER.SOOut=so                                          XER-SO-Out(S82)
	S104= XER.CAOut=ca                                          XER-CA-Out(S85)
	S105= PIDReg.Out=>IMMU.PID                                  Premise(F64)
	S106= IMMU.PID=pid                                          Path(S90,S105)
	S107= PC.Out=>IMMU.IEA                                      Premise(F65)
	S108= IMMU.IEA=addr                                         Path(S93,S107)
	S109= IMMU.Addr={pid,addr}                                  IMMU-Search(S106,S108)
	S110= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S106,S108)
	S111= IMMU.Addr=>IAddrReg.In                                Premise(F66)
	S112= IAddrReg.In={pid,addr}                                Path(S109,S111)
	S113= IMMU.Hit=>IMMUHitReg.In                               Premise(F67)
	S114= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S110,S113)
	S115= PC.Out=>ICache.IEA                                    Premise(F68)
	S116= ICache.IEA=addr                                       Path(S93,S115)
	S117= ICache.Hit=ICacheHit(addr)                            ICache-Search(S116)
	S118= ICache.Out=>ICacheReg.In                              Premise(F69)
	S119= ICache.Hit=>ICacheHitReg.In                           Premise(F70)
	S120= ICacheHitReg.In=ICacheHit(addr)                       Path(S117,S119)
	S121= IMMUHitReg.Out=>CU.IMemHit                            Premise(F71)
	S122= CU.IMemHit=IMMUHit(pid,addr)                          Path(S97,S121)
	S123= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F72)
	S124= CU.ICacheHit=ICacheHit(addr)                          Path(S100,S123)
	S125= IAddrReg.Out=>IMem.RAddr                              Premise(F73)
	S126= IMem.RAddr={pid,addr}                                 Path(S94,S125)
	S127= IMem.Out={31,rT,rA,0,1492}                            IMem-Read(S126,S74)
	S128= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S126,S74)
	S129= IMem.Out=>IRMux.MemData                               Premise(F74)
	S130= IRMux.MemData={31,rT,rA,0,1492}                       Path(S127,S129)
	S131= IRMux.Out={31,rT,rA,0,1492}                           IRMux-Select(S130)
	S132= ICacheReg.Out=>IRMux.CacheData                        Premise(F75)
	S133= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F76)
	S134= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S97,S133)
	S135= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F77)
	S136= IRMux.CacheSel=ICacheHit(addr)                        Path(S100,S135)
	S137= IRMux.Out=>IR.In                                      Premise(F78)
	S138= IR.In={31,rT,rA,0,1492}                               Path(S131,S137)
	S139= IMem.MEM8WordOut=>ICache.WData                        Premise(F79)
	S140= ICache.WData=IMemGet8Word({pid,addr})                 Path(S128,S139)
	S141= PC.Out=>ICache.IEA                                    Premise(F80)
	S142= IR.Out0_5=>CU.Op                                      Premise(F81)
	S143= IR.Out11_15=>GPRegs.RReg1                             Premise(F82)
	S144= IR.Out21_31=>CU.IRFunc                                Premise(F83)
	S145= GPRegs.Rdata1=>A.In                                   Premise(F84)
	S146= A.Out=>ALU.A                                          Premise(F85)
	S147= B.Out=>ALU.B                                          Premise(F86)
	S148= XER.CAOut=>ALU.CAIn                                   Premise(F87)
	S149= ALU.CAIn=ca                                           Path(S104,S148)
	S150= CU.Func=>ALU.Func                                     Premise(F88)
	S151= ALU.Out=>ALUOut.In                                    Premise(F89)
	S152= ALU.CA=>CAReg.In                                      Premise(F90)
	S153= ALU.OV=>OVReg.In                                      Premise(F91)
	S154= XER.SOOut=>ORGate.A                                   Premise(F92)
	S155= ORGate.A=so                                           Path(S103,S154)
	S156= ALU.OV=>ORGate.B                                      Premise(F93)
	S157= ORGate.Out=>DR1bit.In                                 Premise(F94)
	S158= IR.Out6_10=>GPRegs.WReg                               Premise(F95)
	S159= ALUOut.Out=>GPRegs.WData                              Premise(F96)
	S160= DR1bit.Out=>XER.SOIn                                  Premise(F97)
	S161= CAReg.Out=>XER.CAIn                                   Premise(F98)
	S162= OVReg.Out=>XER.OVIn                                   Premise(F99)
	S163= CtrlPIDReg=0                                          Premise(F100)
	S164= [PIDReg]=pid                                          PIDReg-Hold(S60,S163)
	S165= CtrlIMMU=0                                            Premise(F101)
	S166= CtrlPC=0                                              Premise(F102)
	S167= CtrlPCInc=1                                           Premise(F103)
	S168= PC[Out]=addr+4                                        PC-Inc(S64,S166,S167)
	S169= PC[CIA]=addr                                          PC-Inc(S64,S166,S167)
	S170= CtrlIAddrReg=0                                        Premise(F104)
	S171= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S66,S170)
	S172= CtrlIMMUHitReg=0                                      Premise(F105)
	S173= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S68,S172)
	S174= CtrlICache=1                                          Premise(F106)
	S175= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S116,S140,S174)
	S176= CtrlICacheReg=0                                       Premise(F107)
	S177= CtrlICacheHitReg=0                                    Premise(F108)
	S178= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S72,S177)
	S179= CtrlIMem=0                                            Premise(F109)
	S180= IMem[{pid,addr}]={31,rT,rA,0,1492}                    IMem-Hold(S74,S179)
	S181= CtrlIRMux=0                                           Premise(F110)
	S182= CtrlIR=1                                              Premise(F111)
	S183= [IR]={31,rT,rA,0,1492}                                IR-Write(S138,S182)
	S184= CtrlGPRegs=0                                          Premise(F112)
	S185= GPRegs[rA]=a                                          GPRegs-Hold(S78,S184)
	S186= CtrlA=0                                               Premise(F113)
	S187= CtrlB=0                                               Premise(F114)
	S188= CtrlXERSO=0                                           Premise(F115)
	S189= XER[SO]=so                                            XER-SO-Hold(S82,S188)
	S190= CtrlXEROV=0                                           Premise(F116)
	S191= CtrlXERCA=0                                           Premise(F117)
	S192= XER[CA]=ca                                            XER-CA-Hold(S85,S191)
	S193= CtrlALUOut=0                                          Premise(F118)
	S194= CtrlCAReg=0                                           Premise(F119)
	S195= CtrlOVReg=0                                           Premise(F120)
	S196= CtrlDR1bit=0                                          Premise(F121)

ID	S197= PIDReg.Out=pid                                        PIDReg-Out(S164)
	S198= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S164)
	S199= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S164)
	S200= PC.Out=addr+4                                         PC-Out(S168)
	S201= PC.CIA=addr                                           PC-Out(S169)
	S202= PC.CIA31_28=addr[31:28]                               PC-Out(S169)
	S203= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S171)
	S204= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S171)
	S205= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S171)
	S206= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S173)
	S207= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S173)
	S208= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S173)
	S209= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S178)
	S210= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S178)
	S211= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S178)
	S212= IR.Out0_5=31                                          IR-Out(S183)
	S213= IR.Out6_10=rT                                         IR-Out(S183)
	S214= IR.Out11_15=rA                                        IR-Out(S183)
	S215= IR.Out16_20=0                                         IR-Out(S183)
	S216= IR.Out21_31=1492                                      IR-Out(S183)
	S217= XER.SOOut=so                                          XER-SO-Out(S189)
	S218= XER.CAOut=ca                                          XER-CA-Out(S192)
	S219= PIDReg.Out=>IMMU.PID                                  Premise(F122)
	S220= IMMU.PID=pid                                          Path(S197,S219)
	S221= PC.Out=>IMMU.IEA                                      Premise(F123)
	S222= IMMU.IEA=addr+4                                       Path(S200,S221)
	S223= IMMU.Addr={pid,addr+4}                                IMMU-Search(S220,S222)
	S224= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S220,S222)
	S225= IMMU.Addr=>IAddrReg.In                                Premise(F124)
	S226= IAddrReg.In={pid,addr+4}                              Path(S223,S225)
	S227= IMMU.Hit=>IMMUHitReg.In                               Premise(F125)
	S228= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S224,S227)
	S229= PC.Out=>ICache.IEA                                    Premise(F126)
	S230= ICache.IEA=addr+4                                     Path(S200,S229)
	S231= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S230)
	S232= ICache.Out=>ICacheReg.In                              Premise(F127)
	S233= ICache.Hit=>ICacheHitReg.In                           Premise(F128)
	S234= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S231,S233)
	S235= IMMUHitReg.Out=>CU.IMemHit                            Premise(F129)
	S236= CU.IMemHit=IMMUHit(pid,addr)                          Path(S206,S235)
	S237= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F130)
	S238= CU.ICacheHit=ICacheHit(addr)                          Path(S209,S237)
	S239= IAddrReg.Out=>IMem.RAddr                              Premise(F131)
	S240= IMem.RAddr={pid,addr}                                 Path(S203,S239)
	S241= IMem.Out={31,rT,rA,0,1492}                            IMem-Read(S240,S180)
	S242= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S240,S180)
	S243= IMem.Out=>IRMux.MemData                               Premise(F132)
	S244= IRMux.MemData={31,rT,rA,0,1492}                       Path(S241,S243)
	S245= IRMux.Out={31,rT,rA,0,1492}                           IRMux-Select(S244)
	S246= ICacheReg.Out=>IRMux.CacheData                        Premise(F133)
	S247= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F134)
	S248= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S206,S247)
	S249= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F135)
	S250= IRMux.CacheSel=ICacheHit(addr)                        Path(S209,S249)
	S251= IRMux.Out=>IR.In                                      Premise(F136)
	S252= IR.In={31,rT,rA,0,1492}                               Path(S245,S251)
	S253= IMem.MEM8WordOut=>ICache.WData                        Premise(F137)
	S254= ICache.WData=IMemGet8Word({pid,addr})                 Path(S242,S253)
	S255= PC.Out=>ICache.IEA                                    Premise(F138)
	S256= IR.Out0_5=>CU.Op                                      Premise(F139)
	S257= CU.Op=31                                              Path(S212,S256)
	S258= IR.Out11_15=>GPRegs.RReg1                             Premise(F140)
	S259= GPRegs.RReg1=rA                                       Path(S214,S258)
	S260= GPRegs.Rdata1=a                                       GPRegs-Read(S259,S185)
	S261= IR.Out21_31=>CU.IRFunc                                Premise(F141)
	S262= CU.IRFunc=1492                                        Path(S216,S261)
	S263= CU.Func=alu_adde                                      CU(S257,S262)
	S264= GPRegs.Rdata1=>A.In                                   Premise(F142)
	S265= A.In=a                                                Path(S260,S264)
	S266= B.In=32'hFFFFFFFF                                     Premise(F143)
	S267= A.Out=>ALU.A                                          Premise(F144)
	S268= B.Out=>ALU.B                                          Premise(F145)
	S269= XER.CAOut=>ALU.CAIn                                   Premise(F146)
	S270= ALU.CAIn=ca                                           Path(S218,S269)
	S271= CU.Func=>ALU.Func                                     Premise(F147)
	S272= ALU.Func=alu_adde                                     Path(S263,S271)
	S273= ALU.Out=>ALUOut.In                                    Premise(F148)
	S274= ALU.CA=>CAReg.In                                      Premise(F149)
	S275= ALU.OV=>OVReg.In                                      Premise(F150)
	S276= XER.SOOut=>ORGate.A                                   Premise(F151)
	S277= ORGate.A=so                                           Path(S217,S276)
	S278= ALU.OV=>ORGate.B                                      Premise(F152)
	S279= ORGate.Out=>DR1bit.In                                 Premise(F153)
	S280= IR.Out6_10=>GPRegs.WReg                               Premise(F154)
	S281= GPRegs.WReg=rT                                        Path(S213,S280)
	S282= ALUOut.Out=>GPRegs.WData                              Premise(F155)
	S283= DR1bit.Out=>XER.SOIn                                  Premise(F156)
	S284= CAReg.Out=>XER.CAIn                                   Premise(F157)
	S285= OVReg.Out=>XER.OVIn                                   Premise(F158)
	S286= CtrlPIDReg=0                                          Premise(F159)
	S287= [PIDReg]=pid                                          PIDReg-Hold(S164,S286)
	S288= CtrlIMMU=0                                            Premise(F160)
	S289= CtrlPC=0                                              Premise(F161)
	S290= CtrlPCInc=0                                           Premise(F162)
	S291= PC[CIA]=addr                                          PC-Hold(S169,S290)
	S292= PC[Out]=addr+4                                        PC-Hold(S168,S289,S290)
	S293= CtrlIAddrReg=0                                        Premise(F163)
	S294= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S171,S293)
	S295= CtrlIMMUHitReg=0                                      Premise(F164)
	S296= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S173,S295)
	S297= CtrlICache=0                                          Premise(F165)
	S298= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S175,S297)
	S299= CtrlICacheReg=0                                       Premise(F166)
	S300= CtrlICacheHitReg=0                                    Premise(F167)
	S301= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S178,S300)
	S302= CtrlIMem=0                                            Premise(F168)
	S303= IMem[{pid,addr}]={31,rT,rA,0,1492}                    IMem-Hold(S180,S302)
	S304= CtrlIRMux=0                                           Premise(F169)
	S305= CtrlIR=0                                              Premise(F170)
	S306= [IR]={31,rT,rA,0,1492}                                IR-Hold(S183,S305)
	S307= CtrlGPRegs=0                                          Premise(F171)
	S308= GPRegs[rA]=a                                          GPRegs-Hold(S185,S307)
	S309= CtrlA=1                                               Premise(F172)
	S310= [A]=a                                                 A-Write(S265,S309)
	S311= CtrlB=1                                               Premise(F173)
	S312= [B]=32'hFFFFFFFF                                      B-Write(S266,S311)
	S313= CtrlXERSO=0                                           Premise(F174)
	S314= XER[SO]=so                                            XER-SO-Hold(S189,S313)
	S315= CtrlXEROV=0                                           Premise(F175)
	S316= CtrlXERCA=0                                           Premise(F176)
	S317= XER[CA]=ca                                            XER-CA-Hold(S192,S316)
	S318= CtrlALUOut=0                                          Premise(F177)
	S319= CtrlCAReg=0                                           Premise(F178)
	S320= CtrlOVReg=0                                           Premise(F179)
	S321= CtrlDR1bit=0                                          Premise(F180)

EX	S322= PIDReg.Out=pid                                        PIDReg-Out(S287)
	S323= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S287)
	S324= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S287)
	S325= PC.CIA=addr                                           PC-Out(S291)
	S326= PC.CIA31_28=addr[31:28]                               PC-Out(S291)
	S327= PC.Out=addr+4                                         PC-Out(S292)
	S328= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S294)
	S329= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S294)
	S330= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S294)
	S331= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S296)
	S332= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S296)
	S333= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S296)
	S334= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S301)
	S335= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S301)
	S336= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S301)
	S337= IR.Out0_5=31                                          IR-Out(S306)
	S338= IR.Out6_10=rT                                         IR-Out(S306)
	S339= IR.Out11_15=rA                                        IR-Out(S306)
	S340= IR.Out16_20=0                                         IR-Out(S306)
	S341= IR.Out21_31=1492                                      IR-Out(S306)
	S342= A.Out=a                                               A-Out(S310)
	S343= A.Out26_31=a[26:31]                                   A-Out(S310)
	S344= A.Out30_31=a[30:31]                                   A-Out(S310)
	S345= B.Out=32'hFFFFFFFF                                    B-Out(S312)
	S346= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S312)
	S347= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S312)
	S348= XER.SOOut=so                                          XER-SO-Out(S314)
	S349= XER.CAOut=ca                                          XER-CA-Out(S317)
	S350= PIDReg.Out=>IMMU.PID                                  Premise(F181)
	S351= IMMU.PID=pid                                          Path(S322,S350)
	S352= PC.Out=>IMMU.IEA                                      Premise(F182)
	S353= IMMU.IEA=addr+4                                       Path(S327,S352)
	S354= IMMU.Addr={pid,addr+4}                                IMMU-Search(S351,S353)
	S355= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S351,S353)
	S356= IMMU.Addr=>IAddrReg.In                                Premise(F183)
	S357= IAddrReg.In={pid,addr+4}                              Path(S354,S356)
	S358= IMMU.Hit=>IMMUHitReg.In                               Premise(F184)
	S359= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S355,S358)
	S360= PC.Out=>ICache.IEA                                    Premise(F185)
	S361= ICache.IEA=addr+4                                     Path(S327,S360)
	S362= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S361)
	S363= ICache.Out=>ICacheReg.In                              Premise(F186)
	S364= ICache.Hit=>ICacheHitReg.In                           Premise(F187)
	S365= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S362,S364)
	S366= IMMUHitReg.Out=>CU.IMemHit                            Premise(F188)
	S367= CU.IMemHit=IMMUHit(pid,addr)                          Path(S331,S366)
	S368= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F189)
	S369= CU.ICacheHit=ICacheHit(addr)                          Path(S334,S368)
	S370= IAddrReg.Out=>IMem.RAddr                              Premise(F190)
	S371= IMem.RAddr={pid,addr}                                 Path(S328,S370)
	S372= IMem.Out={31,rT,rA,0,1492}                            IMem-Read(S371,S303)
	S373= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S371,S303)
	S374= IMem.Out=>IRMux.MemData                               Premise(F191)
	S375= IRMux.MemData={31,rT,rA,0,1492}                       Path(S372,S374)
	S376= IRMux.Out={31,rT,rA,0,1492}                           IRMux-Select(S375)
	S377= ICacheReg.Out=>IRMux.CacheData                        Premise(F192)
	S378= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F193)
	S379= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S331,S378)
	S380= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F194)
	S381= IRMux.CacheSel=ICacheHit(addr)                        Path(S334,S380)
	S382= IRMux.Out=>IR.In                                      Premise(F195)
	S383= IR.In={31,rT,rA,0,1492}                               Path(S376,S382)
	S384= IMem.MEM8WordOut=>ICache.WData                        Premise(F196)
	S385= ICache.WData=IMemGet8Word({pid,addr})                 Path(S373,S384)
	S386= PC.Out=>ICache.IEA                                    Premise(F197)
	S387= IR.Out0_5=>CU.Op                                      Premise(F198)
	S388= CU.Op=31                                              Path(S337,S387)
	S389= IR.Out11_15=>GPRegs.RReg1                             Premise(F199)
	S390= GPRegs.RReg1=rA                                       Path(S339,S389)
	S391= GPRegs.Rdata1=a                                       GPRegs-Read(S390,S308)
	S392= IR.Out21_31=>CU.IRFunc                                Premise(F200)
	S393= CU.IRFunc=1492                                        Path(S341,S392)
	S394= CU.Func=alu_adde                                      CU(S388,S393)
	S395= GPRegs.Rdata1=>A.In                                   Premise(F201)
	S396= A.In=a                                                Path(S391,S395)
	S397= A.Out=>ALU.A                                          Premise(F202)
	S398= ALU.A=a                                               Path(S342,S397)
	S399= B.Out=>ALU.B                                          Premise(F203)
	S400= ALU.B=32'hFFFFFFFF                                    Path(S345,S399)
	S401= XER.CAOut=>ALU.CAIn                                   Premise(F204)
	S402= ALU.CAIn=ca                                           Path(S349,S401)
	S403= CU.Func=>ALU.Func                                     Premise(F205)
	S404= ALU.Func=alu_adde                                     Path(S394,S403)
	S405= ALU.Out=a+32'hFFFFFFFF+ca                             ALU(S398,S400,S402)
	S406= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                   ALU(S398,S400,S402)
	S407= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                    ALU(S398,S400,S402)
	S408= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                       ALU(S398,S400,S402)
	S409= ALU.Out=>ALUOut.In                                    Premise(F206)
	S410= ALUOut.In=a+32'hFFFFFFFF+ca                           Path(S405,S409)
	S411= ALU.CA=>CAReg.In                                      Premise(F207)
	S412= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                     Path(S408,S411)
	S413= ALU.OV=>OVReg.In                                      Premise(F208)
	S414= OVReg.In=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S407,S413)
	S415= XER.SOOut=>ORGate.A                                   Premise(F209)
	S416= ORGate.A=so                                           Path(S348,S415)
	S417= ALU.OV=>ORGate.B                                      Premise(F210)
	S418= ORGate.B=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S407,S417)
	S419= ORGate.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             ORGate(S416,S418)
	S420= ORGate.Out=>DR1bit.In                                 Premise(F211)
	S421= DR1bit.In=so|OverFlow(a+32'hFFFFFFFF+ca)              Path(S419,S420)
	S422= IR.Out6_10=>GPRegs.WReg                               Premise(F212)
	S423= GPRegs.WReg=rT                                        Path(S338,S422)
	S424= ALUOut.Out=>GPRegs.WData                              Premise(F213)
	S425= DR1bit.Out=>XER.SOIn                                  Premise(F214)
	S426= CAReg.Out=>XER.CAIn                                   Premise(F215)
	S427= OVReg.Out=>XER.OVIn                                   Premise(F216)
	S428= CtrlPIDReg=0                                          Premise(F217)
	S429= [PIDReg]=pid                                          PIDReg-Hold(S287,S428)
	S430= CtrlIMMU=0                                            Premise(F218)
	S431= CtrlPC=0                                              Premise(F219)
	S432= CtrlPCInc=0                                           Premise(F220)
	S433= PC[CIA]=addr                                          PC-Hold(S291,S432)
	S434= PC[Out]=addr+4                                        PC-Hold(S292,S431,S432)
	S435= CtrlIAddrReg=0                                        Premise(F221)
	S436= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S294,S435)
	S437= CtrlIMMUHitReg=0                                      Premise(F222)
	S438= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S296,S437)
	S439= CtrlICache=0                                          Premise(F223)
	S440= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S298,S439)
	S441= CtrlICacheReg=0                                       Premise(F224)
	S442= CtrlICacheHitReg=0                                    Premise(F225)
	S443= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S301,S442)
	S444= CtrlIMem=0                                            Premise(F226)
	S445= IMem[{pid,addr}]={31,rT,rA,0,1492}                    IMem-Hold(S303,S444)
	S446= CtrlIRMux=0                                           Premise(F227)
	S447= CtrlIR=0                                              Premise(F228)
	S448= [IR]={31,rT,rA,0,1492}                                IR-Hold(S306,S447)
	S449= CtrlGPRegs=0                                          Premise(F229)
	S450= GPRegs[rA]=a                                          GPRegs-Hold(S308,S449)
	S451= CtrlA=0                                               Premise(F230)
	S452= [A]=a                                                 A-Hold(S310,S451)
	S453= CtrlB=0                                               Premise(F231)
	S454= [B]=32'hFFFFFFFF                                      B-Hold(S312,S453)
	S455= CtrlXERSO=0                                           Premise(F232)
	S456= XER[SO]=so                                            XER-SO-Hold(S314,S455)
	S457= CtrlXEROV=0                                           Premise(F233)
	S458= CtrlXERCA=0                                           Premise(F234)
	S459= XER[CA]=ca                                            XER-CA-Hold(S317,S458)
	S460= CtrlALUOut=1                                          Premise(F235)
	S461= [ALUOut]=a+32'hFFFFFFFF+ca                            ALUOut-Write(S410,S460)
	S462= CtrlCAReg=1                                           Premise(F236)
	S463= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                      CAReg-Write(S412,S462)
	S464= CtrlOVReg=1                                           Premise(F237)
	S465= [OVReg]=OverFlow(a+32'hFFFFFFFF+ca)                   OVReg-Write(S414,S464)
	S466= CtrlDR1bit=1                                          Premise(F238)
	S467= [DR1bit]=so|OverFlow(a+32'hFFFFFFFF+ca)               DR1bit-Write(S421,S466)

MEM	S468= PIDReg.Out=pid                                        PIDReg-Out(S429)
	S469= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S429)
	S470= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S429)
	S471= PC.CIA=addr                                           PC-Out(S433)
	S472= PC.CIA31_28=addr[31:28]                               PC-Out(S433)
	S473= PC.Out=addr+4                                         PC-Out(S434)
	S474= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S436)
	S475= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S436)
	S476= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S436)
	S477= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S438)
	S478= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S438)
	S479= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S438)
	S480= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S443)
	S481= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S443)
	S482= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S443)
	S483= IR.Out0_5=31                                          IR-Out(S448)
	S484= IR.Out6_10=rT                                         IR-Out(S448)
	S485= IR.Out11_15=rA                                        IR-Out(S448)
	S486= IR.Out16_20=0                                         IR-Out(S448)
	S487= IR.Out21_31=1492                                      IR-Out(S448)
	S488= A.Out=a                                               A-Out(S452)
	S489= A.Out26_31=a[26:31]                                   A-Out(S452)
	S490= A.Out30_31=a[30:31]                                   A-Out(S452)
	S491= B.Out=32'hFFFFFFFF                                    B-Out(S454)
	S492= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S454)
	S493= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S454)
	S494= XER.SOOut=so                                          XER-SO-Out(S456)
	S495= XER.CAOut=ca                                          XER-CA-Out(S459)
	S496= ALUOut.Out=a+32'hFFFFFFFF+ca                          ALUOut-Out(S461)
	S497= ALUOut.Out26_31=a+32'hFFFFFFFF+ca[26:31]              ALUOut-Out(S461)
	S498= ALUOut.Out30_31=a+32'hFFFFFFFF+ca[30:31]              ALUOut-Out(S461)
	S499= CAReg.Out=Carry(a+32'hFFFFFFFF+ca)                    CAReg-Out(S463)
	S500= CAReg.Out26_31=Carry(a+32'hFFFFFFFF+ca)[26:31]        CAReg-Out(S463)
	S501= CAReg.Out30_31=Carry(a+32'hFFFFFFFF+ca)[30:31]        CAReg-Out(S463)
	S502= OVReg.Out=OverFlow(a+32'hFFFFFFFF+ca)                 OVReg-Out(S465)
	S503= OVReg.Out26_31=OverFlow(a+32'hFFFFFFFF+ca)[26:31]     OVReg-Out(S465)
	S504= OVReg.Out30_31=OverFlow(a+32'hFFFFFFFF+ca)[30:31]     OVReg-Out(S465)
	S505= DR1bit.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             DR1bit-Out(S467)
	S506= DR1bit.Out26_31=so|OverFlow(a+32'hFFFFFFFF+ca)[26:31] DR1bit-Out(S467)
	S507= DR1bit.Out30_31=so|OverFlow(a+32'hFFFFFFFF+ca)[30:31] DR1bit-Out(S467)
	S508= PIDReg.Out=>IMMU.PID                                  Premise(F239)
	S509= IMMU.PID=pid                                          Path(S468,S508)
	S510= PC.Out=>IMMU.IEA                                      Premise(F240)
	S511= IMMU.IEA=addr+4                                       Path(S473,S510)
	S512= IMMU.Addr={pid,addr+4}                                IMMU-Search(S509,S511)
	S513= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S509,S511)
	S514= IMMU.Addr=>IAddrReg.In                                Premise(F241)
	S515= IAddrReg.In={pid,addr+4}                              Path(S512,S514)
	S516= IMMU.Hit=>IMMUHitReg.In                               Premise(F242)
	S517= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S513,S516)
	S518= PC.Out=>ICache.IEA                                    Premise(F243)
	S519= ICache.IEA=addr+4                                     Path(S473,S518)
	S520= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S519)
	S521= ICache.Out=>ICacheReg.In                              Premise(F244)
	S522= ICache.Hit=>ICacheHitReg.In                           Premise(F245)
	S523= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S520,S522)
	S524= IMMUHitReg.Out=>CU.IMemHit                            Premise(F246)
	S525= CU.IMemHit=IMMUHit(pid,addr)                          Path(S477,S524)
	S526= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F247)
	S527= CU.ICacheHit=ICacheHit(addr)                          Path(S480,S526)
	S528= IAddrReg.Out=>IMem.RAddr                              Premise(F248)
	S529= IMem.RAddr={pid,addr}                                 Path(S474,S528)
	S530= IMem.Out={31,rT,rA,0,1492}                            IMem-Read(S529,S445)
	S531= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S529,S445)
	S532= IMem.Out=>IRMux.MemData                               Premise(F249)
	S533= IRMux.MemData={31,rT,rA,0,1492}                       Path(S530,S532)
	S534= IRMux.Out={31,rT,rA,0,1492}                           IRMux-Select(S533)
	S535= ICacheReg.Out=>IRMux.CacheData                        Premise(F250)
	S536= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F251)
	S537= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S477,S536)
	S538= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F252)
	S539= IRMux.CacheSel=ICacheHit(addr)                        Path(S480,S538)
	S540= IRMux.Out=>IR.In                                      Premise(F253)
	S541= IR.In={31,rT,rA,0,1492}                               Path(S534,S540)
	S542= IMem.MEM8WordOut=>ICache.WData                        Premise(F254)
	S543= ICache.WData=IMemGet8Word({pid,addr})                 Path(S531,S542)
	S544= PC.Out=>ICache.IEA                                    Premise(F255)
	S545= IR.Out0_5=>CU.Op                                      Premise(F256)
	S546= CU.Op=31                                              Path(S483,S545)
	S547= IR.Out11_15=>GPRegs.RReg1                             Premise(F257)
	S548= GPRegs.RReg1=rA                                       Path(S485,S547)
	S549= GPRegs.Rdata1=a                                       GPRegs-Read(S548,S450)
	S550= IR.Out21_31=>CU.IRFunc                                Premise(F258)
	S551= CU.IRFunc=1492                                        Path(S487,S550)
	S552= CU.Func=alu_adde                                      CU(S546,S551)
	S553= GPRegs.Rdata1=>A.In                                   Premise(F259)
	S554= A.In=a                                                Path(S549,S553)
	S555= A.Out=>ALU.A                                          Premise(F260)
	S556= ALU.A=a                                               Path(S488,S555)
	S557= B.Out=>ALU.B                                          Premise(F261)
	S558= ALU.B=32'hFFFFFFFF                                    Path(S491,S557)
	S559= XER.CAOut=>ALU.CAIn                                   Premise(F262)
	S560= ALU.CAIn=ca                                           Path(S495,S559)
	S561= CU.Func=>ALU.Func                                     Premise(F263)
	S562= ALU.Func=alu_adde                                     Path(S552,S561)
	S563= ALU.Out=a+32'hFFFFFFFF+ca                             ALU(S556,S558,S560)
	S564= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                   ALU(S556,S558,S560)
	S565= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                    ALU(S556,S558,S560)
	S566= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                       ALU(S556,S558,S560)
	S567= ALU.Out=>ALUOut.In                                    Premise(F264)
	S568= ALUOut.In=a+32'hFFFFFFFF+ca                           Path(S563,S567)
	S569= ALU.CA=>CAReg.In                                      Premise(F265)
	S570= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                     Path(S566,S569)
	S571= ALU.OV=>OVReg.In                                      Premise(F266)
	S572= OVReg.In=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S565,S571)
	S573= XER.SOOut=>ORGate.A                                   Premise(F267)
	S574= ORGate.A=so                                           Path(S494,S573)
	S575= ALU.OV=>ORGate.B                                      Premise(F268)
	S576= ORGate.B=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S565,S575)
	S577= ORGate.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             ORGate(S574,S576)
	S578= ORGate.Out=>DR1bit.In                                 Premise(F269)
	S579= DR1bit.In=so|OverFlow(a+32'hFFFFFFFF+ca)              Path(S577,S578)
	S580= IR.Out6_10=>GPRegs.WReg                               Premise(F270)
	S581= GPRegs.WReg=rT                                        Path(S484,S580)
	S582= ALUOut.Out=>GPRegs.WData                              Premise(F271)
	S583= GPRegs.WData=a+32'hFFFFFFFF+ca                        Path(S496,S582)
	S584= DR1bit.Out=>XER.SOIn                                  Premise(F272)
	S585= XER.SOIn=so|OverFlow(a+32'hFFFFFFFF+ca)               Path(S505,S584)
	S586= CAReg.Out=>XER.CAIn                                   Premise(F273)
	S587= XER.CAIn=Carry(a+32'hFFFFFFFF+ca)                     Path(S499,S586)
	S588= OVReg.Out=>XER.OVIn                                   Premise(F274)
	S589= XER.OVIn=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S502,S588)
	S590= CtrlPIDReg=0                                          Premise(F275)
	S591= [PIDReg]=pid                                          PIDReg-Hold(S429,S590)
	S592= CtrlIMMU=0                                            Premise(F276)
	S593= CtrlPC=0                                              Premise(F277)
	S594= CtrlPCInc=0                                           Premise(F278)
	S595= PC[CIA]=addr                                          PC-Hold(S433,S594)
	S596= PC[Out]=addr+4                                        PC-Hold(S434,S593,S594)
	S597= CtrlIAddrReg=0                                        Premise(F279)
	S598= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S436,S597)
	S599= CtrlIMMUHitReg=0                                      Premise(F280)
	S600= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S438,S599)
	S601= CtrlICache=0                                          Premise(F281)
	S602= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S440,S601)
	S603= CtrlICacheReg=0                                       Premise(F282)
	S604= CtrlICacheHitReg=0                                    Premise(F283)
	S605= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S443,S604)
	S606= CtrlIMem=0                                            Premise(F284)
	S607= IMem[{pid,addr}]={31,rT,rA,0,1492}                    IMem-Hold(S445,S606)
	S608= CtrlIRMux=0                                           Premise(F285)
	S609= CtrlIR=0                                              Premise(F286)
	S610= [IR]={31,rT,rA,0,1492}                                IR-Hold(S448,S609)
	S611= CtrlGPRegs=0                                          Premise(F287)
	S612= GPRegs[rA]=a                                          GPRegs-Hold(S450,S611)
	S613= CtrlA=0                                               Premise(F288)
	S614= [A]=a                                                 A-Hold(S452,S613)
	S615= CtrlB=0                                               Premise(F289)
	S616= [B]=32'hFFFFFFFF                                      B-Hold(S454,S615)
	S617= CtrlXERSO=0                                           Premise(F290)
	S618= XER[SO]=so                                            XER-SO-Hold(S456,S617)
	S619= CtrlXEROV=0                                           Premise(F291)
	S620= CtrlXERCA=0                                           Premise(F292)
	S621= XER[CA]=ca                                            XER-CA-Hold(S459,S620)
	S622= CtrlALUOut=0                                          Premise(F293)
	S623= [ALUOut]=a+32'hFFFFFFFF+ca                            ALUOut-Hold(S461,S622)
	S624= CtrlCAReg=0                                           Premise(F294)
	S625= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                      CAReg-Hold(S463,S624)
	S626= CtrlOVReg=0                                           Premise(F295)
	S627= [OVReg]=OverFlow(a+32'hFFFFFFFF+ca)                   OVReg-Hold(S465,S626)
	S628= CtrlDR1bit=0                                          Premise(F296)
	S629= [DR1bit]=so|OverFlow(a+32'hFFFFFFFF+ca)               DR1bit-Hold(S467,S628)

DMMU1	S630= PIDReg.Out=pid                                        PIDReg-Out(S591)
	S631= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S591)
	S632= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S591)
	S633= PC.CIA=addr                                           PC-Out(S595)
	S634= PC.CIA31_28=addr[31:28]                               PC-Out(S595)
	S635= PC.Out=addr+4                                         PC-Out(S596)
	S636= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S598)
	S637= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S598)
	S638= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S598)
	S639= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S600)
	S640= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S600)
	S641= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S600)
	S642= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S605)
	S643= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S605)
	S644= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S605)
	S645= IR.Out0_5=31                                          IR-Out(S610)
	S646= IR.Out6_10=rT                                         IR-Out(S610)
	S647= IR.Out11_15=rA                                        IR-Out(S610)
	S648= IR.Out16_20=0                                         IR-Out(S610)
	S649= IR.Out21_31=1492                                      IR-Out(S610)
	S650= A.Out=a                                               A-Out(S614)
	S651= A.Out26_31=a[26:31]                                   A-Out(S614)
	S652= A.Out30_31=a[30:31]                                   A-Out(S614)
	S653= B.Out=32'hFFFFFFFF                                    B-Out(S616)
	S654= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S616)
	S655= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S616)
	S656= XER.SOOut=so                                          XER-SO-Out(S618)
	S657= XER.CAOut=ca                                          XER-CA-Out(S621)
	S658= ALUOut.Out=a+32'hFFFFFFFF+ca                          ALUOut-Out(S623)
	S659= ALUOut.Out26_31=a+32'hFFFFFFFF+ca[26:31]              ALUOut-Out(S623)
	S660= ALUOut.Out30_31=a+32'hFFFFFFFF+ca[30:31]              ALUOut-Out(S623)
	S661= CAReg.Out=Carry(a+32'hFFFFFFFF+ca)                    CAReg-Out(S625)
	S662= CAReg.Out26_31=Carry(a+32'hFFFFFFFF+ca)[26:31]        CAReg-Out(S625)
	S663= CAReg.Out30_31=Carry(a+32'hFFFFFFFF+ca)[30:31]        CAReg-Out(S625)
	S664= OVReg.Out=OverFlow(a+32'hFFFFFFFF+ca)                 OVReg-Out(S627)
	S665= OVReg.Out26_31=OverFlow(a+32'hFFFFFFFF+ca)[26:31]     OVReg-Out(S627)
	S666= OVReg.Out30_31=OverFlow(a+32'hFFFFFFFF+ca)[30:31]     OVReg-Out(S627)
	S667= DR1bit.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             DR1bit-Out(S629)
	S668= DR1bit.Out26_31=so|OverFlow(a+32'hFFFFFFFF+ca)[26:31] DR1bit-Out(S629)
	S669= DR1bit.Out30_31=so|OverFlow(a+32'hFFFFFFFF+ca)[30:31] DR1bit-Out(S629)
	S670= PIDReg.Out=>IMMU.PID                                  Premise(F297)
	S671= IMMU.PID=pid                                          Path(S630,S670)
	S672= PC.Out=>IMMU.IEA                                      Premise(F298)
	S673= IMMU.IEA=addr+4                                       Path(S635,S672)
	S674= IMMU.Addr={pid,addr+4}                                IMMU-Search(S671,S673)
	S675= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S671,S673)
	S676= IMMU.Addr=>IAddrReg.In                                Premise(F299)
	S677= IAddrReg.In={pid,addr+4}                              Path(S674,S676)
	S678= IMMU.Hit=>IMMUHitReg.In                               Premise(F300)
	S679= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S675,S678)
	S680= PC.Out=>ICache.IEA                                    Premise(F301)
	S681= ICache.IEA=addr+4                                     Path(S635,S680)
	S682= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S681)
	S683= ICache.Out=>ICacheReg.In                              Premise(F302)
	S684= ICache.Hit=>ICacheHitReg.In                           Premise(F303)
	S685= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S682,S684)
	S686= IMMUHitReg.Out=>CU.IMemHit                            Premise(F304)
	S687= CU.IMemHit=IMMUHit(pid,addr)                          Path(S639,S686)
	S688= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F305)
	S689= CU.ICacheHit=ICacheHit(addr)                          Path(S642,S688)
	S690= IAddrReg.Out=>IMem.RAddr                              Premise(F306)
	S691= IMem.RAddr={pid,addr}                                 Path(S636,S690)
	S692= IMem.Out={31,rT,rA,0,1492}                            IMem-Read(S691,S607)
	S693= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S691,S607)
	S694= IMem.Out=>IRMux.MemData                               Premise(F307)
	S695= IRMux.MemData={31,rT,rA,0,1492}                       Path(S692,S694)
	S696= IRMux.Out={31,rT,rA,0,1492}                           IRMux-Select(S695)
	S697= ICacheReg.Out=>IRMux.CacheData                        Premise(F308)
	S698= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F309)
	S699= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S639,S698)
	S700= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F310)
	S701= IRMux.CacheSel=ICacheHit(addr)                        Path(S642,S700)
	S702= IRMux.Out=>IR.In                                      Premise(F311)
	S703= IR.In={31,rT,rA,0,1492}                               Path(S696,S702)
	S704= IMem.MEM8WordOut=>ICache.WData                        Premise(F312)
	S705= ICache.WData=IMemGet8Word({pid,addr})                 Path(S693,S704)
	S706= PC.Out=>ICache.IEA                                    Premise(F313)
	S707= IR.Out0_5=>CU.Op                                      Premise(F314)
	S708= CU.Op=31                                              Path(S645,S707)
	S709= IR.Out11_15=>GPRegs.RReg1                             Premise(F315)
	S710= GPRegs.RReg1=rA                                       Path(S647,S709)
	S711= GPRegs.Rdata1=a                                       GPRegs-Read(S710,S612)
	S712= IR.Out21_31=>CU.IRFunc                                Premise(F316)
	S713= CU.IRFunc=1492                                        Path(S649,S712)
	S714= CU.Func=alu_adde                                      CU(S708,S713)
	S715= GPRegs.Rdata1=>A.In                                   Premise(F317)
	S716= A.In=a                                                Path(S711,S715)
	S717= A.Out=>ALU.A                                          Premise(F318)
	S718= ALU.A=a                                               Path(S650,S717)
	S719= B.Out=>ALU.B                                          Premise(F319)
	S720= ALU.B=32'hFFFFFFFF                                    Path(S653,S719)
	S721= XER.CAOut=>ALU.CAIn                                   Premise(F320)
	S722= ALU.CAIn=ca                                           Path(S657,S721)
	S723= CU.Func=>ALU.Func                                     Premise(F321)
	S724= ALU.Func=alu_adde                                     Path(S714,S723)
	S725= ALU.Out=a+32'hFFFFFFFF+ca                             ALU(S718,S720,S722)
	S726= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                   ALU(S718,S720,S722)
	S727= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                    ALU(S718,S720,S722)
	S728= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                       ALU(S718,S720,S722)
	S729= ALU.Out=>ALUOut.In                                    Premise(F322)
	S730= ALUOut.In=a+32'hFFFFFFFF+ca                           Path(S725,S729)
	S731= ALU.CA=>CAReg.In                                      Premise(F323)
	S732= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                     Path(S728,S731)
	S733= ALU.OV=>OVReg.In                                      Premise(F324)
	S734= OVReg.In=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S727,S733)
	S735= XER.SOOut=>ORGate.A                                   Premise(F325)
	S736= ORGate.A=so                                           Path(S656,S735)
	S737= ALU.OV=>ORGate.B                                      Premise(F326)
	S738= ORGate.B=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S727,S737)
	S739= ORGate.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             ORGate(S736,S738)
	S740= ORGate.Out=>DR1bit.In                                 Premise(F327)
	S741= DR1bit.In=so|OverFlow(a+32'hFFFFFFFF+ca)              Path(S739,S740)
	S742= IR.Out6_10=>GPRegs.WReg                               Premise(F328)
	S743= GPRegs.WReg=rT                                        Path(S646,S742)
	S744= ALUOut.Out=>GPRegs.WData                              Premise(F329)
	S745= GPRegs.WData=a+32'hFFFFFFFF+ca                        Path(S658,S744)
	S746= DR1bit.Out=>XER.SOIn                                  Premise(F330)
	S747= XER.SOIn=so|OverFlow(a+32'hFFFFFFFF+ca)               Path(S667,S746)
	S748= CAReg.Out=>XER.CAIn                                   Premise(F331)
	S749= XER.CAIn=Carry(a+32'hFFFFFFFF+ca)                     Path(S661,S748)
	S750= OVReg.Out=>XER.OVIn                                   Premise(F332)
	S751= XER.OVIn=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S664,S750)
	S752= CtrlPIDReg=0                                          Premise(F333)
	S753= [PIDReg]=pid                                          PIDReg-Hold(S591,S752)
	S754= CtrlIMMU=0                                            Premise(F334)
	S755= CtrlPC=0                                              Premise(F335)
	S756= CtrlPCInc=0                                           Premise(F336)
	S757= PC[CIA]=addr                                          PC-Hold(S595,S756)
	S758= PC[Out]=addr+4                                        PC-Hold(S596,S755,S756)
	S759= CtrlIAddrReg=0                                        Premise(F337)
	S760= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S598,S759)
	S761= CtrlIMMUHitReg=0                                      Premise(F338)
	S762= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S600,S761)
	S763= CtrlICache=0                                          Premise(F339)
	S764= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S602,S763)
	S765= CtrlICacheReg=0                                       Premise(F340)
	S766= CtrlICacheHitReg=0                                    Premise(F341)
	S767= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S605,S766)
	S768= CtrlIMem=0                                            Premise(F342)
	S769= IMem[{pid,addr}]={31,rT,rA,0,1492}                    IMem-Hold(S607,S768)
	S770= CtrlIRMux=0                                           Premise(F343)
	S771= CtrlIR=0                                              Premise(F344)
	S772= [IR]={31,rT,rA,0,1492}                                IR-Hold(S610,S771)
	S773= CtrlGPRegs=0                                          Premise(F345)
	S774= GPRegs[rA]=a                                          GPRegs-Hold(S612,S773)
	S775= CtrlA=0                                               Premise(F346)
	S776= [A]=a                                                 A-Hold(S614,S775)
	S777= CtrlB=0                                               Premise(F347)
	S778= [B]=32'hFFFFFFFF                                      B-Hold(S616,S777)
	S779= CtrlXERSO=0                                           Premise(F348)
	S780= XER[SO]=so                                            XER-SO-Hold(S618,S779)
	S781= CtrlXEROV=0                                           Premise(F349)
	S782= CtrlXERCA=0                                           Premise(F350)
	S783= XER[CA]=ca                                            XER-CA-Hold(S621,S782)
	S784= CtrlALUOut=0                                          Premise(F351)
	S785= [ALUOut]=a+32'hFFFFFFFF+ca                            ALUOut-Hold(S623,S784)
	S786= CtrlCAReg=0                                           Premise(F352)
	S787= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                      CAReg-Hold(S625,S786)
	S788= CtrlOVReg=0                                           Premise(F353)
	S789= [OVReg]=OverFlow(a+32'hFFFFFFFF+ca)                   OVReg-Hold(S627,S788)
	S790= CtrlDR1bit=0                                          Premise(F354)
	S791= [DR1bit]=so|OverFlow(a+32'hFFFFFFFF+ca)               DR1bit-Hold(S629,S790)

DMMU2	S792= PIDReg.Out=pid                                        PIDReg-Out(S753)
	S793= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S753)
	S794= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S753)
	S795= PC.CIA=addr                                           PC-Out(S757)
	S796= PC.CIA31_28=addr[31:28]                               PC-Out(S757)
	S797= PC.Out=addr+4                                         PC-Out(S758)
	S798= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S760)
	S799= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S760)
	S800= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S760)
	S801= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S762)
	S802= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S762)
	S803= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S762)
	S804= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S767)
	S805= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S767)
	S806= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S767)
	S807= IR.Out0_5=31                                          IR-Out(S772)
	S808= IR.Out6_10=rT                                         IR-Out(S772)
	S809= IR.Out11_15=rA                                        IR-Out(S772)
	S810= IR.Out16_20=0                                         IR-Out(S772)
	S811= IR.Out21_31=1492                                      IR-Out(S772)
	S812= A.Out=a                                               A-Out(S776)
	S813= A.Out26_31=a[26:31]                                   A-Out(S776)
	S814= A.Out30_31=a[30:31]                                   A-Out(S776)
	S815= B.Out=32'hFFFFFFFF                                    B-Out(S778)
	S816= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S778)
	S817= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S778)
	S818= XER.SOOut=so                                          XER-SO-Out(S780)
	S819= XER.CAOut=ca                                          XER-CA-Out(S783)
	S820= ALUOut.Out=a+32'hFFFFFFFF+ca                          ALUOut-Out(S785)
	S821= ALUOut.Out26_31=a+32'hFFFFFFFF+ca[26:31]              ALUOut-Out(S785)
	S822= ALUOut.Out30_31=a+32'hFFFFFFFF+ca[30:31]              ALUOut-Out(S785)
	S823= CAReg.Out=Carry(a+32'hFFFFFFFF+ca)                    CAReg-Out(S787)
	S824= CAReg.Out26_31=Carry(a+32'hFFFFFFFF+ca)[26:31]        CAReg-Out(S787)
	S825= CAReg.Out30_31=Carry(a+32'hFFFFFFFF+ca)[30:31]        CAReg-Out(S787)
	S826= OVReg.Out=OverFlow(a+32'hFFFFFFFF+ca)                 OVReg-Out(S789)
	S827= OVReg.Out26_31=OverFlow(a+32'hFFFFFFFF+ca)[26:31]     OVReg-Out(S789)
	S828= OVReg.Out30_31=OverFlow(a+32'hFFFFFFFF+ca)[30:31]     OVReg-Out(S789)
	S829= DR1bit.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             DR1bit-Out(S791)
	S830= DR1bit.Out26_31=so|OverFlow(a+32'hFFFFFFFF+ca)[26:31] DR1bit-Out(S791)
	S831= DR1bit.Out30_31=so|OverFlow(a+32'hFFFFFFFF+ca)[30:31] DR1bit-Out(S791)
	S832= PIDReg.Out=>IMMU.PID                                  Premise(F355)
	S833= IMMU.PID=pid                                          Path(S792,S832)
	S834= PC.Out=>IMMU.IEA                                      Premise(F356)
	S835= IMMU.IEA=addr+4                                       Path(S797,S834)
	S836= IMMU.Addr={pid,addr+4}                                IMMU-Search(S833,S835)
	S837= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S833,S835)
	S838= IMMU.Addr=>IAddrReg.In                                Premise(F357)
	S839= IAddrReg.In={pid,addr+4}                              Path(S836,S838)
	S840= IMMU.Hit=>IMMUHitReg.In                               Premise(F358)
	S841= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S837,S840)
	S842= PC.Out=>ICache.IEA                                    Premise(F359)
	S843= ICache.IEA=addr+4                                     Path(S797,S842)
	S844= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S843)
	S845= ICache.Out=>ICacheReg.In                              Premise(F360)
	S846= ICache.Hit=>ICacheHitReg.In                           Premise(F361)
	S847= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S844,S846)
	S848= IMMUHitReg.Out=>CU.IMemHit                            Premise(F362)
	S849= CU.IMemHit=IMMUHit(pid,addr)                          Path(S801,S848)
	S850= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F363)
	S851= CU.ICacheHit=ICacheHit(addr)                          Path(S804,S850)
	S852= IAddrReg.Out=>IMem.RAddr                              Premise(F364)
	S853= IMem.RAddr={pid,addr}                                 Path(S798,S852)
	S854= IMem.Out={31,rT,rA,0,1492}                            IMem-Read(S853,S769)
	S855= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S853,S769)
	S856= IMem.Out=>IRMux.MemData                               Premise(F365)
	S857= IRMux.MemData={31,rT,rA,0,1492}                       Path(S854,S856)
	S858= IRMux.Out={31,rT,rA,0,1492}                           IRMux-Select(S857)
	S859= ICacheReg.Out=>IRMux.CacheData                        Premise(F366)
	S860= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F367)
	S861= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S801,S860)
	S862= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F368)
	S863= IRMux.CacheSel=ICacheHit(addr)                        Path(S804,S862)
	S864= IRMux.Out=>IR.In                                      Premise(F369)
	S865= IR.In={31,rT,rA,0,1492}                               Path(S858,S864)
	S866= IMem.MEM8WordOut=>ICache.WData                        Premise(F370)
	S867= ICache.WData=IMemGet8Word({pid,addr})                 Path(S855,S866)
	S868= PC.Out=>ICache.IEA                                    Premise(F371)
	S869= IR.Out0_5=>CU.Op                                      Premise(F372)
	S870= CU.Op=31                                              Path(S807,S869)
	S871= IR.Out11_15=>GPRegs.RReg1                             Premise(F373)
	S872= GPRegs.RReg1=rA                                       Path(S809,S871)
	S873= GPRegs.Rdata1=a                                       GPRegs-Read(S872,S774)
	S874= IR.Out21_31=>CU.IRFunc                                Premise(F374)
	S875= CU.IRFunc=1492                                        Path(S811,S874)
	S876= CU.Func=alu_adde                                      CU(S870,S875)
	S877= GPRegs.Rdata1=>A.In                                   Premise(F375)
	S878= A.In=a                                                Path(S873,S877)
	S879= A.Out=>ALU.A                                          Premise(F376)
	S880= ALU.A=a                                               Path(S812,S879)
	S881= B.Out=>ALU.B                                          Premise(F377)
	S882= ALU.B=32'hFFFFFFFF                                    Path(S815,S881)
	S883= XER.CAOut=>ALU.CAIn                                   Premise(F378)
	S884= ALU.CAIn=ca                                           Path(S819,S883)
	S885= CU.Func=>ALU.Func                                     Premise(F379)
	S886= ALU.Func=alu_adde                                     Path(S876,S885)
	S887= ALU.Out=a+32'hFFFFFFFF+ca                             ALU(S880,S882,S884)
	S888= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                   ALU(S880,S882,S884)
	S889= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                    ALU(S880,S882,S884)
	S890= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                       ALU(S880,S882,S884)
	S891= ALU.Out=>ALUOut.In                                    Premise(F380)
	S892= ALUOut.In=a+32'hFFFFFFFF+ca                           Path(S887,S891)
	S893= ALU.CA=>CAReg.In                                      Premise(F381)
	S894= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                     Path(S890,S893)
	S895= ALU.OV=>OVReg.In                                      Premise(F382)
	S896= OVReg.In=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S889,S895)
	S897= XER.SOOut=>ORGate.A                                   Premise(F383)
	S898= ORGate.A=so                                           Path(S818,S897)
	S899= ALU.OV=>ORGate.B                                      Premise(F384)
	S900= ORGate.B=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S889,S899)
	S901= ORGate.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             ORGate(S898,S900)
	S902= ORGate.Out=>DR1bit.In                                 Premise(F385)
	S903= DR1bit.In=so|OverFlow(a+32'hFFFFFFFF+ca)              Path(S901,S902)
	S904= IR.Out6_10=>GPRegs.WReg                               Premise(F386)
	S905= GPRegs.WReg=rT                                        Path(S808,S904)
	S906= ALUOut.Out=>GPRegs.WData                              Premise(F387)
	S907= GPRegs.WData=a+32'hFFFFFFFF+ca                        Path(S820,S906)
	S908= DR1bit.Out=>XER.SOIn                                  Premise(F388)
	S909= XER.SOIn=so|OverFlow(a+32'hFFFFFFFF+ca)               Path(S829,S908)
	S910= CAReg.Out=>XER.CAIn                                   Premise(F389)
	S911= XER.CAIn=Carry(a+32'hFFFFFFFF+ca)                     Path(S823,S910)
	S912= OVReg.Out=>XER.OVIn                                   Premise(F390)
	S913= XER.OVIn=OverFlow(a+32'hFFFFFFFF+ca)                  Path(S826,S912)
	S914= CtrlPIDReg=0                                          Premise(F391)
	S915= [PIDReg]=pid                                          PIDReg-Hold(S753,S914)
	S916= CtrlIMMU=0                                            Premise(F392)
	S917= CtrlPC=0                                              Premise(F393)
	S918= CtrlPCInc=0                                           Premise(F394)
	S919= PC[CIA]=addr                                          PC-Hold(S757,S918)
	S920= PC[Out]=addr+4                                        PC-Hold(S758,S917,S918)
	S921= CtrlIAddrReg=0                                        Premise(F395)
	S922= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S760,S921)
	S923= CtrlIMMUHitReg=0                                      Premise(F396)
	S924= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S762,S923)
	S925= CtrlICache=0                                          Premise(F397)
	S926= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S764,S925)
	S927= CtrlICacheReg=0                                       Premise(F398)
	S928= CtrlICacheHitReg=0                                    Premise(F399)
	S929= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S767,S928)
	S930= CtrlIMem=0                                            Premise(F400)
	S931= IMem[{pid,addr}]={31,rT,rA,0,1492}                    IMem-Hold(S769,S930)
	S932= CtrlIRMux=0                                           Premise(F401)
	S933= CtrlIR=0                                              Premise(F402)
	S934= [IR]={31,rT,rA,0,1492}                                IR-Hold(S772,S933)
	S935= CtrlGPRegs=0                                          Premise(F403)
	S936= GPRegs[rA]=a                                          GPRegs-Hold(S774,S935)
	S937= CtrlA=0                                               Premise(F404)
	S938= [A]=a                                                 A-Hold(S776,S937)
	S939= CtrlB=0                                               Premise(F405)
	S940= [B]=32'hFFFFFFFF                                      B-Hold(S778,S939)
	S941= CtrlXERSO=0                                           Premise(F406)
	S942= XER[SO]=so                                            XER-SO-Hold(S780,S941)
	S943= CtrlXEROV=0                                           Premise(F407)
	S944= CtrlXERCA=0                                           Premise(F408)
	S945= XER[CA]=ca                                            XER-CA-Hold(S783,S944)
	S946= CtrlALUOut=0                                          Premise(F409)
	S947= [ALUOut]=a+32'hFFFFFFFF+ca                            ALUOut-Hold(S785,S946)
	S948= CtrlCAReg=0                                           Premise(F410)
	S949= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                      CAReg-Hold(S787,S948)
	S950= CtrlOVReg=0                                           Premise(F411)
	S951= [OVReg]=OverFlow(a+32'hFFFFFFFF+ca)                   OVReg-Hold(S789,S950)
	S952= CtrlDR1bit=0                                          Premise(F412)
	S953= [DR1bit]=so|OverFlow(a+32'hFFFFFFFF+ca)               DR1bit-Hold(S791,S952)

WB	S954= PIDReg.Out=pid                                        PIDReg-Out(S915)
	S955= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S915)
	S956= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S915)
	S957= PC.CIA=addr                                           PC-Out(S919)
	S958= PC.CIA31_28=addr[31:28]                               PC-Out(S919)
	S959= PC.Out=addr+4                                         PC-Out(S920)
	S960= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S922)
	S961= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S922)
	S962= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S922)
	S963= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S924)
	S964= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S924)
	S965= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S924)
	S966= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S929)
	S967= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S929)
	S968= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S929)
	S969= IR.Out0_5=31                                          IR-Out(S934)
	S970= IR.Out6_10=rT                                         IR-Out(S934)
	S971= IR.Out11_15=rA                                        IR-Out(S934)
	S972= IR.Out16_20=0                                         IR-Out(S934)
	S973= IR.Out21_31=1492                                      IR-Out(S934)
	S974= A.Out=a                                               A-Out(S938)
	S975= A.Out26_31=a[26:31]                                   A-Out(S938)
	S976= A.Out30_31=a[30:31]                                   A-Out(S938)
	S977= B.Out=32'hFFFFFFFF                                    B-Out(S940)
	S978= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S940)
	S979= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S940)
	S980= XER.SOOut=so                                          XER-SO-Out(S942)
	S981= XER.CAOut=ca                                          XER-CA-Out(S945)
	S982= ALUOut.Out=a+32'hFFFFFFFF+ca                          ALUOut-Out(S947)
	S983= ALUOut.Out26_31=a+32'hFFFFFFFF+ca[26:31]              ALUOut-Out(S947)
	S984= ALUOut.Out30_31=a+32'hFFFFFFFF+ca[30:31]              ALUOut-Out(S947)
	S985= CAReg.Out=Carry(a+32'hFFFFFFFF+ca)                    CAReg-Out(S949)
	S986= CAReg.Out26_31=Carry(a+32'hFFFFFFFF+ca)[26:31]        CAReg-Out(S949)
	S987= CAReg.Out30_31=Carry(a+32'hFFFFFFFF+ca)[30:31]        CAReg-Out(S949)
	S988= OVReg.Out=OverFlow(a+32'hFFFFFFFF+ca)                 OVReg-Out(S951)
	S989= OVReg.Out26_31=OverFlow(a+32'hFFFFFFFF+ca)[26:31]     OVReg-Out(S951)
	S990= OVReg.Out30_31=OverFlow(a+32'hFFFFFFFF+ca)[30:31]     OVReg-Out(S951)
	S991= DR1bit.Out=so|OverFlow(a+32'hFFFFFFFF+ca)             DR1bit-Out(S953)
	S992= DR1bit.Out26_31=so|OverFlow(a+32'hFFFFFFFF+ca)[26:31] DR1bit-Out(S953)
	S993= DR1bit.Out30_31=so|OverFlow(a+32'hFFFFFFFF+ca)[30:31] DR1bit-Out(S953)
	S994= PIDReg.Out=>IMMU.PID                                  Premise(F413)
	S995= IMMU.PID=pid                                          Path(S954,S994)
	S996= PC.Out=>IMMU.IEA                                      Premise(F414)
	S997= IMMU.IEA=addr+4                                       Path(S959,S996)
	S998= IMMU.Addr={pid,addr+4}                                IMMU-Search(S995,S997)
	S999= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S995,S997)
	S1000= IMMU.Addr=>IAddrReg.In                               Premise(F415)
	S1001= IAddrReg.In={pid,addr+4}                             Path(S998,S1000)
	S1002= IMMU.Hit=>IMMUHitReg.In                              Premise(F416)
	S1003= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S999,S1002)
	S1004= PC.Out=>ICache.IEA                                   Premise(F417)
	S1005= ICache.IEA=addr+4                                    Path(S959,S1004)
	S1006= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1005)
	S1007= ICache.Out=>ICacheReg.In                             Premise(F418)
	S1008= ICache.Hit=>ICacheHitReg.In                          Premise(F419)
	S1009= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1006,S1008)
	S1010= IMMUHitReg.Out=>CU.IMemHit                           Premise(F420)
	S1011= CU.IMemHit=IMMUHit(pid,addr)                         Path(S963,S1010)
	S1012= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F421)
	S1013= CU.ICacheHit=ICacheHit(addr)                         Path(S966,S1012)
	S1014= IAddrReg.Out=>IMem.RAddr                             Premise(F422)
	S1015= IMem.RAddr={pid,addr}                                Path(S960,S1014)
	S1016= IMem.Out={31,rT,rA,0,1492}                           IMem-Read(S1015,S931)
	S1017= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1015,S931)
	S1018= IMem.Out=>IRMux.MemData                              Premise(F423)
	S1019= IRMux.MemData={31,rT,rA,0,1492}                      Path(S1016,S1018)
	S1020= IRMux.Out={31,rT,rA,0,1492}                          IRMux-Select(S1019)
	S1021= ICacheReg.Out=>IRMux.CacheData                       Premise(F424)
	S1022= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F425)
	S1023= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S963,S1022)
	S1024= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F426)
	S1025= IRMux.CacheSel=ICacheHit(addr)                       Path(S966,S1024)
	S1026= IRMux.Out=>IR.In                                     Premise(F427)
	S1027= IR.In={31,rT,rA,0,1492}                              Path(S1020,S1026)
	S1028= IMem.MEM8WordOut=>ICache.WData                       Premise(F428)
	S1029= ICache.WData=IMemGet8Word({pid,addr})                Path(S1017,S1028)
	S1030= PC.Out=>ICache.IEA                                   Premise(F429)
	S1031= IR.Out0_5=>CU.Op                                     Premise(F430)
	S1032= CU.Op=31                                             Path(S969,S1031)
	S1033= IR.Out11_15=>GPRegs.RReg1                            Premise(F431)
	S1034= GPRegs.RReg1=rA                                      Path(S971,S1033)
	S1035= GPRegs.Rdata1=a                                      GPRegs-Read(S1034,S936)
	S1036= IR.Out21_31=>CU.IRFunc                               Premise(F432)
	S1037= CU.IRFunc=1492                                       Path(S973,S1036)
	S1038= CU.Func=alu_adde                                     CU(S1032,S1037)
	S1039= GPRegs.Rdata1=>A.In                                  Premise(F433)
	S1040= A.In=a                                               Path(S1035,S1039)
	S1041= A.Out=>ALU.A                                         Premise(F434)
	S1042= ALU.A=a                                              Path(S974,S1041)
	S1043= B.Out=>ALU.B                                         Premise(F435)
	S1044= ALU.B=32'hFFFFFFFF                                   Path(S977,S1043)
	S1045= XER.CAOut=>ALU.CAIn                                  Premise(F436)
	S1046= ALU.CAIn=ca                                          Path(S981,S1045)
	S1047= CU.Func=>ALU.Func                                    Premise(F437)
	S1048= ALU.Func=alu_adde                                    Path(S1038,S1047)
	S1049= ALU.Out=a+32'hFFFFFFFF+ca                            ALU(S1042,S1044,S1046)
	S1050= ALU.CMP=Compare0(a+32'hFFFFFFFF+ca)                  ALU(S1042,S1044,S1046)
	S1051= ALU.OV=OverFlow(a+32'hFFFFFFFF+ca)                   ALU(S1042,S1044,S1046)
	S1052= ALU.CA=Carry(a+32'hFFFFFFFF+ca)                      ALU(S1042,S1044,S1046)
	S1053= ALU.Out=>ALUOut.In                                   Premise(F438)
	S1054= ALUOut.In=a+32'hFFFFFFFF+ca                          Path(S1049,S1053)
	S1055= ALU.CA=>CAReg.In                                     Premise(F439)
	S1056= CAReg.In=Carry(a+32'hFFFFFFFF+ca)                    Path(S1052,S1055)
	S1057= ALU.OV=>OVReg.In                                     Premise(F440)
	S1058= OVReg.In=OverFlow(a+32'hFFFFFFFF+ca)                 Path(S1051,S1057)
	S1059= XER.SOOut=>ORGate.A                                  Premise(F441)
	S1060= ORGate.A=so                                          Path(S980,S1059)
	S1061= ALU.OV=>ORGate.B                                     Premise(F442)
	S1062= ORGate.B=OverFlow(a+32'hFFFFFFFF+ca)                 Path(S1051,S1061)
	S1063= ORGate.Out=so|OverFlow(a+32'hFFFFFFFF+ca)            ORGate(S1060,S1062)
	S1064= ORGate.Out=>DR1bit.In                                Premise(F443)
	S1065= DR1bit.In=so|OverFlow(a+32'hFFFFFFFF+ca)             Path(S1063,S1064)
	S1066= IR.Out6_10=>GPRegs.WReg                              Premise(F444)
	S1067= GPRegs.WReg=rT                                       Path(S970,S1066)
	S1068= ALUOut.Out=>GPRegs.WData                             Premise(F445)
	S1069= GPRegs.WData=a+32'hFFFFFFFF+ca                       Path(S982,S1068)
	S1070= DR1bit.Out=>XER.SOIn                                 Premise(F446)
	S1071= XER.SOIn=so|OverFlow(a+32'hFFFFFFFF+ca)              Path(S991,S1070)
	S1072= CAReg.Out=>XER.CAIn                                  Premise(F447)
	S1073= XER.CAIn=Carry(a+32'hFFFFFFFF+ca)                    Path(S985,S1072)
	S1074= OVReg.Out=>XER.OVIn                                  Premise(F448)
	S1075= XER.OVIn=OverFlow(a+32'hFFFFFFFF+ca)                 Path(S988,S1074)
	S1076= CtrlPIDReg=0                                         Premise(F449)
	S1077= [PIDReg]=pid                                         PIDReg-Hold(S915,S1076)
	S1078= CtrlIMMU=0                                           Premise(F450)
	S1079= CtrlPC=0                                             Premise(F451)
	S1080= CtrlPCInc=0                                          Premise(F452)
	S1081= PC[CIA]=addr                                         PC-Hold(S919,S1080)
	S1082= PC[Out]=addr+4                                       PC-Hold(S920,S1079,S1080)
	S1083= CtrlIAddrReg=0                                       Premise(F453)
	S1084= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S922,S1083)
	S1085= CtrlIMMUHitReg=0                                     Premise(F454)
	S1086= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S924,S1085)
	S1087= CtrlICache=0                                         Premise(F455)
	S1088= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S926,S1087)
	S1089= CtrlICacheReg=0                                      Premise(F456)
	S1090= CtrlICacheHitReg=0                                   Premise(F457)
	S1091= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S929,S1090)
	S1092= CtrlIMem=0                                           Premise(F458)
	S1093= IMem[{pid,addr}]={31,rT,rA,0,1492}                   IMem-Hold(S931,S1092)
	S1094= CtrlIRMux=0                                          Premise(F459)
	S1095= CtrlIR=0                                             Premise(F460)
	S1096= [IR]={31,rT,rA,0,1492}                               IR-Hold(S934,S1095)
	S1097= CtrlGPRegs=1                                         Premise(F461)
	S1098= GPRegs[rT]=a+32'hFFFFFFFF+ca                         GPRegs-Write(S1067,S1069,S1097)
	S1099= CtrlA=0                                              Premise(F462)
	S1100= [A]=a                                                A-Hold(S938,S1099)
	S1101= CtrlB=0                                              Premise(F463)
	S1102= [B]=32'hFFFFFFFF                                     B-Hold(S940,S1101)
	S1103= CtrlXERSO=1                                          Premise(F464)
	S1104= XER[SO]=so|OverFlow(a+32'hFFFFFFFF+ca)               XER-SO-Write(S1071,S1103)
	S1105= CtrlXEROV=1                                          Premise(F465)
	S1106= XER[OV]=OverFlow(a+32'hFFFFFFFF+ca)                  XER-OV-Write(S1075,S1105)
	S1107= CtrlXERCA=1                                          Premise(F466)
	S1108= XER[CA]=Carry(a+32'hFFFFFFFF+ca)                     XER-CA-Write(S1073,S1107)
	S1109= CtrlALUOut=0                                         Premise(F467)
	S1110= [ALUOut]=a+32'hFFFFFFFF+ca                           ALUOut-Hold(S947,S1109)
	S1111= CtrlCAReg=0                                          Premise(F468)
	S1112= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                     CAReg-Hold(S949,S1111)
	S1113= CtrlOVReg=0                                          Premise(F469)
	S1114= [OVReg]=OverFlow(a+32'hFFFFFFFF+ca)                  OVReg-Hold(S951,S1113)
	S1115= CtrlDR1bit=0                                         Premise(F470)
	S1116= [DR1bit]=so|OverFlow(a+32'hFFFFFFFF+ca)              DR1bit-Hold(S953,S1115)

POST	S1077= [PIDReg]=pid                                         PIDReg-Hold(S915,S1076)
	S1081= PC[CIA]=addr                                         PC-Hold(S919,S1080)
	S1082= PC[Out]=addr+4                                       PC-Hold(S920,S1079,S1080)
	S1084= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S922,S1083)
	S1086= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S924,S1085)
	S1088= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S926,S1087)
	S1091= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S929,S1090)
	S1093= IMem[{pid,addr}]={31,rT,rA,0,1492}                   IMem-Hold(S931,S1092)
	S1096= [IR]={31,rT,rA,0,1492}                               IR-Hold(S934,S1095)
	S1098= GPRegs[rT]=a+32'hFFFFFFFF+ca                         GPRegs-Write(S1067,S1069,S1097)
	S1100= [A]=a                                                A-Hold(S938,S1099)
	S1102= [B]=32'hFFFFFFFF                                     B-Hold(S940,S1101)
	S1104= XER[SO]=so|OverFlow(a+32'hFFFFFFFF+ca)               XER-SO-Write(S1071,S1103)
	S1106= XER[OV]=OverFlow(a+32'hFFFFFFFF+ca)                  XER-OV-Write(S1075,S1105)
	S1108= XER[CA]=Carry(a+32'hFFFFFFFF+ca)                     XER-CA-Write(S1073,S1107)
	S1110= [ALUOut]=a+32'hFFFFFFFF+ca                           ALUOut-Hold(S947,S1109)
	S1112= [CAReg]=Carry(a+32'hFFFFFFFF+ca)                     CAReg-Hold(S949,S1111)
	S1114= [OVReg]=OverFlow(a+32'hFFFFFFFF+ca)                  OVReg-Hold(S951,S1113)
	S1116= [DR1bit]=so|OverFlow(a+32'hFFFFFFFF+ca)              DR1bit-Hold(S953,S1115)

