
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={1,rs,11,imm}                              Premise(F3)
	S2= GPR[rs]=a                                               Premise(F4)

IF	S3= PC.Out=addr                                             PC-Out(S0)
	S4= PC.Out=>ICache.IEA                                      Premise(F56)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={1,rs,11,imm}                                ICache-Search(S5,S1)
	S7= ICache.Out=>IR_ID.In                                    Premise(F64)
	S8= IR_ID.In={1,rs,11,imm}                                  Path(S6,S7)
	S9= CtrlIR_ID=1                                             Premise(F116)
	S10= [IR_ID]={1,rs,11,imm}                                  IR_ID-Write(S8,S9)
	S11= CtrlGPR=0                                              Premise(F120)
	S12= GPR[rs]=a                                              GPR-Hold(S2,S11)

ID	S13= IR_ID.Out25_21=rs                                      IR-Out(S10)
	S14= IR_ID.Out15_0=imm                                      IR-Out(S10)
	S15= FU.OutID1=>A_EX.In                                     Premise(F247)
	S16= IMMEXT.Out=>B_EX.In                                    Premise(F249)
	S17= GPR.Rdata1=>FU.InID1                                   Premise(F294)
	S18= IR_ID.Out25_21=>GPR.RReg1                              Premise(F297)
	S19= GPR.RReg1=rs                                           Path(S13,S18)
	S20= GPR.Rdata1=a                                           GPR-Read(S19,S12)
	S21= FU.InID1=a                                             Path(S20,S17)
	S22= FU.OutID1=FU(a)                                        FU-Forward(S21)
	S23= A_EX.In=FU(a)                                          Path(S22,S15)
	S24= IR_ID.Out15_0=>IMMEXT.In                               Premise(F301)
	S25= IMMEXT.In=imm                                          Path(S14,S24)
	S26= IMMEXT.Out={16{imm[15]},imm}                           IMMEXT(S25)
	S27= B_EX.In={16{imm[15]},imm}                              Path(S26,S16)
	S28= CtrlA_EX=1                                             Premise(F338)
	S29= [A_EX]=FU(a)                                           A_EX-Write(S23,S28)
	S30= CtrlB_EX=1                                             Premise(F341)
	S31= [B_EX]={16{imm[15]},imm}                               B_EX-Write(S27,S30)

EX	S32= A_EX.Out=FU(a)                                         A_EX-Out(S29)
	S33= B_EX.Out={16{imm[15]},imm}                             B_EX-Out(S31)
	S34= A_EX.Out=>CMPU.A                                       Premise(F373)
	S35= CMPU.A=FU(a)                                           Path(S32,S34)
	S36= B_EX.Out=>CMPU.B                                       Premise(F374)
	S37= CMPU.B={16{imm[15]},imm}                               Path(S33,S36)
	S38= CMPU.lt=CompareU(FU(a),{16{imm[15]},imm})              CMPU-CMPU(S35,S37)
	S39= CMPU.lt=>ConditionReg_MEM.In                           Premise(F406)
	S40= ConditionReg_MEM.In=CompareU(FU(a),{16{imm[15]},imm})  Path(S38,S39)
	S41= CtrlConditionReg_MEM=1                                 Premise(F475)
	S42= [ConditionReg_MEM]=CompareU(FU(a),{16{imm[15]},imm})   ConditionReg_MEM-Write(S40,S41)

MEM	S43= ConditionReg_MEM.Out=CompareU(FU(a),{16{imm[15]},imm}) ConditionReg_MEM-Out(S42)
	S44= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In            Premise(F527)
	S45= ConditionReg_DMMU1.In=CompareU(FU(a),{16{imm[15]},imm})Path(S43,S44)
	S46= CtrlConditionReg_DMMU1=1                               Premise(F599)
	S47= [ConditionReg_DMMU1]=CompareU(FU(a),{16{imm[15]},imm}) ConditionReg_DMMU1-Write(S45,S46)

DMMU1	S48= ConditionReg_DMMU1.Out=CompareU(FU(a),{16{imm[15]},imm})ConditionReg_DMMU1-Out(S47)
	S49= ConditionReg_DMMU1.Out=>ConditionReg_DMMU2.In          Premise(F650)
	S50= ConditionReg_DMMU2.In=CompareU(FU(a),{16{imm[15]},imm})Path(S48,S49)
	S51= CtrlConditionReg_DMMU2=1                               Premise(F722)
	S52= [ConditionReg_DMMU2]=CompareU(FU(a),{16{imm[15]},imm}) ConditionReg_DMMU2-Write(S50,S51)

DMMU2	S53= ConditionReg_DMMU2.Out=CompareU(FU(a),{16{imm[15]},imm})ConditionReg_DMMU2-Out(S52)
	S54= ConditionReg_DMMU2.Out=>ConditionReg_WB.In             Premise(F774)
	S55= ConditionReg_WB.In=CompareU(FU(a),{16{imm[15]},imm})   Path(S53,S54)
	S56= CtrlConditionReg_WB=1                                  Premise(F845)
	S57= [ConditionReg_WB]=CompareU(FU(a),{16{imm[15]},imm})    ConditionReg_WB-Write(S55,S56)

WB	S58= CtrlConditionReg_WB=0                                  Premise(F967)
	S59= [ConditionReg_WB]=CompareU(FU(a),{16{imm[15]},imm})    ConditionReg_WB-Hold(S57,S58)

POST	S59= [ConditionReg_WB]=CompareU(FU(a),{16{imm[15]},imm})    ConditionReg_WB-Hold(S57,S58)

