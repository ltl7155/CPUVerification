
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={10,rS,rT,imm}                             Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)

IF	S3= PC.Out=addr                                             PC-Out(S0)
	S4= PC.Out=>ICache.IEA                                      Premise(F66)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={10,rS,rT,imm}                               ICache-Search(S5,S1)
	S7= ICache.Out=>IR_ID.In                                    Premise(F74)
	S8= IR_ID.In={10,rS,rT,imm}                                 Path(S6,S7)
	S9= CtrlIR_ID=1                                             Premise(F118)
	S10= [IR_ID]={10,rS,rT,imm}                                 IR_ID-Write(S8,S9)
	S11= CtrlGPR=0                                              Premise(F122)
	S12= GPR[rS]=a                                              GPR-Hold(S2,S11)
	S13= CtrlPC=0                                               Premise(F124)
	S14= CtrlPCInc=1                                            Premise(F125)
	S15= PC[Out]=addr+4                                         PC-Inc(S0,S13,S14)

ID	S16= IR_ID.Out={10,rS,rT,imm}                               IR-Out(S10)
	S17= IR_ID.Out25_21=rS                                      IR-Out(S10)
	S18= IR_ID.Out15_0=imm                                      IR-Out(S10)
	S19= FU.OutID1=>A_EX.In                                     Premise(F268)
	S20= IMMEXT.Out=>B_EX.In                                    Premise(F270)
	S21= GPR.Rdata1=>FU.InID1                                   Premise(F312)
	S22= IR_ID.Out25_21=>GPR.RReg1                              Premise(F319)
	S23= GPR.RReg1=rS                                           Path(S17,S22)
	S24= GPR.Rdata1=a                                           GPR-Read(S23,S12)
	S25= FU.InID1=a                                             Path(S24,S21)
	S26= FU.OutID1=FU(a)                                        FU-Forward(S25)
	S27= A_EX.In=FU(a)                                          Path(S26,S19)
	S28= IR_ID.Out15_0=>IMMEXT.In                               Premise(F325)
	S29= IMMEXT.In=imm                                          Path(S18,S28)
	S30= IMMEXT.Out={16{imm[15]},imm}                           IMMEXT(S29)
	S31= B_EX.In={16{imm[15]},imm}                              Path(S30,S20)
	S32= IR_ID.Out=>IR_EX.In                                    Premise(F330)
	S33= IR_EX.In={10,rS,rT,imm}                                Path(S16,S32)
	S34= CtrlA_EX=1                                             Premise(F360)
	S35= [A_EX]=FU(a)                                           A_EX-Write(S27,S34)
	S36= CtrlB_EX=1                                             Premise(F361)
	S37= [B_EX]={16{imm[15]},imm}                               B_EX-Write(S31,S36)
	S38= CtrlIR_EX=1                                            Premise(F374)
	S39= [IR_EX]={10,rS,rT,imm}                                 IR_EX-Write(S33,S38)
	S40= CtrlPC=0                                               Premise(F381)
	S41= CtrlPCInc=0                                            Premise(F382)
	S42= PC[Out]=addr+4                                         PC-Hold(S15,S40,S41)

EX	S43= A_EX.Out=FU(a)                                         A_EX-Out(S35)
	S44= B_EX.Out={16{imm[15]},imm}                             B_EX-Out(S37)
	S45= IR_EX.Out={10,rS,rT,imm}                               IR_EX-Out(S39)
	S46= A_EX.Out=>ALU.A                                        Premise(F390)
	S47= ALU.A=FU(a)                                            Path(S43,S46)
	S48= B_EX.Out=>ALU.B                                        Premise(F391)
	S49= ALU.B={16{imm[15]},imm}                                Path(S44,S48)
	S50= ALU.Out={31{0},(FU(a)<{16{imm[15]},imm})}              ALU(S47,S49)
	S51= ALU.Out=>ALUOut_MEM.In                                 Premise(F395)
	S52= ALUOut_MEM.In={31{0},(FU(a)<{16{imm[15]},imm})}        Path(S50,S51)
	S53= IR_EX.Out=>IR_MEM.In                                   Premise(F462)
	S54= IR_MEM.In={10,rS,rT,imm}                               Path(S45,S53)
	S55= CtrlALUOut_MEM=1                                       Premise(F491)
	S56= [ALUOut_MEM]={31{0},(FU(a)<{16{imm[15]},imm})}         ALUOut_MEM-Write(S52,S55)
	S57= CtrlIR_MEM=1                                           Premise(F506)
	S58= [IR_MEM]={10,rS,rT,imm}                                IR_MEM-Write(S54,S57)
	S59= CtrlPC=0                                               Premise(F510)
	S60= CtrlPCInc=0                                            Premise(F511)
	S61= PC[Out]=addr+4                                         PC-Hold(S42,S59,S60)

MEM	S62= ALUOut_MEM.Out={31{0},(FU(a)<{16{imm[15]},imm})}       ALUOut_MEM-Out(S56)
	S63= IR_MEM.Out={10,rS,rT,imm}                              IR_MEM-Out(S58)
	S64= ALUOut_MEM.Out=>ALUOut_DMMU1.In                        Premise(F521)
	S65= ALUOut_DMMU1.In={31{0},(FU(a)<{16{imm[15]},imm})}      Path(S62,S64)
	S66= IR_MEM.Out=>IR_DMMU1.In                                Premise(F585)
	S67= IR_DMMU1.In={10,rS,rT,imm}                             Path(S63,S66)
	S68= CtrlALUOut_DMMU1=1                                     Premise(F620)
	S69= [ALUOut_DMMU1]={31{0},(FU(a)<{16{imm[15]},imm})}       ALUOut_DMMU1-Write(S65,S68)
	S70= CtrlIR_DMMU1=1                                         Premise(F629)
	S71= [IR_DMMU1]={10,rS,rT,imm}                              IR_DMMU1-Write(S67,S70)
	S72= CtrlPC=0                                               Premise(F638)
	S73= CtrlPCInc=0                                            Premise(F639)
	S74= PC[Out]=addr+4                                         PC-Hold(S61,S72,S73)

DMMU1	S75= ALUOut_DMMU1.Out={31{0},(FU(a)<{16{imm[15]},imm})}     ALUOut_DMMU1-Out(S69)
	S76= IR_DMMU1.Out={10,rS,rT,imm}                            IR_DMMU1-Out(S71)
	S77= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                      Premise(F650)
	S78= ALUOut_DMMU2.In={31{0},(FU(a)<{16{imm[15]},imm})}      Path(S75,S77)
	S79= IR_DMMU1.Out=>IR_DMMU2.In                              Premise(F714)
	S80= IR_DMMU2.In={10,rS,rT,imm}                             Path(S76,S79)
	S81= CtrlALUOut_DMMU2=1                                     Premise(F749)
	S82= [ALUOut_DMMU2]={31{0},(FU(a)<{16{imm[15]},imm})}       ALUOut_DMMU2-Write(S78,S81)
	S83= CtrlIR_DMMU2=1                                         Premise(F758)
	S84= [IR_DMMU2]={10,rS,rT,imm}                              IR_DMMU2-Write(S80,S83)
	S85= CtrlPC=0                                               Premise(F766)
	S86= CtrlPCInc=0                                            Premise(F767)
	S87= PC[Out]=addr+4                                         PC-Hold(S74,S85,S86)

DMMU2	S88= ALUOut_DMMU2.Out={31{0},(FU(a)<{16{imm[15]},imm})}     ALUOut_DMMU2-Out(S82)
	S89= IR_DMMU2.Out={10,rS,rT,imm}                            IR_DMMU2-Out(S84)
	S90= ALUOut_DMMU2.Out=>ALUOut_WB.In                         Premise(F780)
	S91= ALUOut_WB.In={31{0},(FU(a)<{16{imm[15]},imm})}         Path(S88,S90)
	S92= IR_DMMU2.Out=>IR_WB.In                                 Premise(F847)
	S93= IR_WB.In={10,rS,rT,imm}                                Path(S89,S92)
	S94= CtrlALUOut_WB=1                                        Premise(F878)
	S95= [ALUOut_WB]={31{0},(FU(a)<{16{imm[15]},imm})}          ALUOut_WB-Write(S91,S94)
	S96= CtrlIR_WB=1                                            Premise(F891)
	S97= [IR_WB]={10,rS,rT,imm}                                 IR_WB-Write(S93,S96)
	S98= CtrlPC=0                                               Premise(F894)
	S99= CtrlPCInc=0                                            Premise(F895)
	S100= PC[Out]=addr+4                                        PC-Hold(S87,S98,S99)

WB	S101= ALUOut_WB.Out={31{0},(FU(a)<{16{imm[15]},imm})}       ALUOut_WB-Out(S95)
	S102= IR_WB.Out20_16=rT                                     IR-Out(S97)
	S103= ALUOut_WB.Out=>GPR.WData                              Premise(F961)
	S104= GPR.WData={31{0},(FU(a)<{16{imm[15]},imm})}           Path(S101,S103)
	S105= IR_WB.Out20_16=>GPR.WReg                              Premise(F962)
	S106= GPR.WReg=rT                                           Path(S102,S105)
	S107= CtrlGPR=1                                             Premise(F1020)
	S108= GPR[rT]={31{0},(FU(a)<{16{imm[15]},imm})}             GPR-Write(S106,S104,S107)
	S109= CtrlPC=0                                              Premise(F1022)
	S110= CtrlPCInc=0                                           Premise(F1023)
	S111= PC[Out]=addr+4                                        PC-Hold(S100,S109,S110)

POST	S108= GPR[rT]={31{0},(FU(a)<{16{imm[15]},imm})}             GPR-Write(S106,S104,S107)
	S111= PC[Out]=addr+4                                        PC-Hold(S100,S109,S110)

