
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={16,1,0,24}                            Premise(F2)
	S3= CP0[EPC]=epc                                            Premise(F3)
	S4= [PIDReg]=a                                              Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.EPC=epc                                             CP0-Read-EPC(S3)
	S8= PIDReg.Out=a                                            PIDReg-Out(S4)
	S9= PIDReg.Out1_0={a}[1:0]                                  PIDReg-Out(S4)
	S10= PIDReg.Out4_0={a}[4:0]                                 PIDReg-Out(S4)
	S11= PC.Out=>IMem.RAddr                                     Premise(F5)
	S12= IMem.RAddr=addr                                        Path(S6,S11)
	S13= CP0.ASID=>IMem.ASID                                    Premise(F6)
	S14= IMem.ASID=pid                                          Path(S5,S13)
	S15= IMem.Out={16,1,0,24}                                   IMem-Read(S14,S12,S2)
	S16= IMem.Out=>IR.In                                        Premise(F7)
	S17= IR.In={16,1,0,24}                                      Path(S15,S16)
	S18= CtrlPC=0                                               Premise(F8)
	S19= CtrlPCInc=1                                            Premise(F9)
	S20= PC[Out]=addr+4                                         PC-Inc(S1,S18,S19)
	S21= PC[CIA]=addr                                           PC-Inc(S1,S18,S19)
	S22= CtrlIMem=0                                             Premise(F10)
	S23= IMem[{pid,addr}]={16,1,0,24}                           IMem-Hold(S2,S22)
	S24= CtrlASIDIn=0                                           Premise(F11)
	S25= CtrlCP0=0                                              Premise(F12)
	S26= CP0[ASID]=pid                                          CP0-Hold(S0,S25)
	S27= CP0[EPC]=epc                                           CP0-Hold(S3,S25)
	S28= CtrlEPCIn=0                                            Premise(F13)
	S29= CtrlExCodeIn=0                                         Premise(F14)
	S30= CtrlIR=1                                               Premise(F15)
	S31= [IR]={16,1,0,24}                                       IR-Write(S17,S30)
	S32= CtrlPIDReg=0                                           Premise(F16)
	S33= [PIDReg]=a                                             PIDReg-Hold(S4,S32)

ID	S34= PC.Out=addr+4                                          PC-Out(S20)
	S35= PC.CIA=addr                                            PC-Out(S21)
	S36= PC.CIA31_28=addr[31:28]                                PC-Out(S21)
	S37= CP0.ASID=pid                                           CP0-Read-ASID(S26)
	S38= CP0.EPC=epc                                            CP0-Read-EPC(S27)
	S39= IR.Out={16,1,0,24}                                     IR-Out(S31)
	S40= IR.Out31_26=16                                         IR-Out(S31)
	S41= IR.Out25=1                                             IR-Out(S31)
	S42= IR.Out24_6=0                                           IR-Out(S31)
	S43= IR.Out5_0=24                                           IR-Out(S31)
	S44= PIDReg.Out=a                                           PIDReg-Out(S33)
	S45= PIDReg.Out1_0={a}[1:0]                                 PIDReg-Out(S33)
	S46= PIDReg.Out4_0={a}[4:0]                                 PIDReg-Out(S33)
	S47= IR.Out31_26=>CU.Op                                     Premise(F17)
	S48= CU.Op=16                                               Path(S40,S47)
	S49= IR.Out5_0=>CU.IRFunc                                   Premise(F18)
	S50= CU.IRFunc=24                                           Path(S43,S49)
	S51= PIDReg.Out=>CP0.ASIDIn                                 Premise(F19)
	S52= CP0.ASIDIn=a                                           Path(S44,S51)
	S53= CP0.EPC=>PC.In                                         Premise(F20)
	S54= PC.In=epc                                              Path(S38,S53)
	S55= CtrlPC=1                                               Premise(F21)
	S56= CtrlPCInc=0                                            Premise(F22)
	S57= PC[CIA]=addr                                           PC-Hold(S21,S56)
	S58= PC[Out]=epc                                            PC-Write(S54,S55,S56)
	S59= CtrlIMem=0                                             Premise(F23)
	S60= IMem[{pid,addr}]={16,1,0,24}                           IMem-Hold(S23,S59)
	S61= CtrlASIDIn=1                                           Premise(F24)
	S62= CP0[ASID]=a                                            CP0-Write-ASID(S52,S61)
	S63= CtrlCP0=0                                              Premise(F25)
	S64= CtrlEPCIn=0                                            Premise(F26)
	S65= CtrlExCodeIn=0                                         Premise(F27)
	S66= CtrlIR=0                                               Premise(F28)
	S67= [IR]={16,1,0,24}                                       IR-Hold(S31,S66)
	S68= CtrlPIDReg=0                                           Premise(F29)
	S69= [PIDReg]=a                                             PIDReg-Hold(S33,S68)

EX	S70= PC.CIA=addr                                            PC-Out(S57)
	S71= PC.CIA31_28=addr[31:28]                                PC-Out(S57)
	S72= PC.Out=epc                                             PC-Out(S58)
	S73= CP0.ASID=a                                             CP0-Read-ASID(S62)
	S74= IR.Out={16,1,0,24}                                     IR-Out(S67)
	S75= IR.Out31_26=16                                         IR-Out(S67)
	S76= IR.Out25=1                                             IR-Out(S67)
	S77= IR.Out24_6=0                                           IR-Out(S67)
	S78= IR.Out5_0=24                                           IR-Out(S67)
	S79= PIDReg.Out=a                                           PIDReg-Out(S69)
	S80= PIDReg.Out1_0={a}[1:0]                                 PIDReg-Out(S69)
	S81= PIDReg.Out4_0={a}[4:0]                                 PIDReg-Out(S69)
	S82= CtrlPC=0                                               Premise(F30)
	S83= CtrlPCInc=0                                            Premise(F31)
	S84= PC[CIA]=addr                                           PC-Hold(S57,S83)
	S85= PC[Out]=epc                                            PC-Hold(S58,S82,S83)
	S86= CtrlIMem=0                                             Premise(F32)
	S87= IMem[{pid,addr}]={16,1,0,24}                           IMem-Hold(S60,S86)
	S88= CtrlASIDIn=0                                           Premise(F33)
	S89= CtrlCP0=0                                              Premise(F34)
	S90= CP0[ASID]=a                                            CP0-Hold(S62,S89)
	S91= CtrlEPCIn=0                                            Premise(F35)
	S92= CtrlExCodeIn=0                                         Premise(F36)
	S93= CtrlIR=0                                               Premise(F37)
	S94= [IR]={16,1,0,24}                                       IR-Hold(S67,S93)
	S95= CtrlPIDReg=0                                           Premise(F38)
	S96= [PIDReg]=a                                             PIDReg-Hold(S69,S95)

MEM	S97= PC.CIA=addr                                            PC-Out(S84)
	S98= PC.CIA31_28=addr[31:28]                                PC-Out(S84)
	S99= PC.Out=epc                                             PC-Out(S85)
	S100= CP0.ASID=a                                            CP0-Read-ASID(S90)
	S101= IR.Out={16,1,0,24}                                    IR-Out(S94)
	S102= IR.Out31_26=16                                        IR-Out(S94)
	S103= IR.Out25=1                                            IR-Out(S94)
	S104= IR.Out24_6=0                                          IR-Out(S94)
	S105= IR.Out5_0=24                                          IR-Out(S94)
	S106= PIDReg.Out=a                                          PIDReg-Out(S96)
	S107= PIDReg.Out1_0={a}[1:0]                                PIDReg-Out(S96)
	S108= PIDReg.Out4_0={a}[4:0]                                PIDReg-Out(S96)
	S109= CtrlPC=0                                              Premise(F39)
	S110= CtrlPCInc=0                                           Premise(F40)
	S111= PC[CIA]=addr                                          PC-Hold(S84,S110)
	S112= PC[Out]=epc                                           PC-Hold(S85,S109,S110)
	S113= CtrlIMem=0                                            Premise(F41)
	S114= IMem[{pid,addr}]={16,1,0,24}                          IMem-Hold(S87,S113)
	S115= CtrlASIDIn=0                                          Premise(F42)
	S116= CtrlCP0=0                                             Premise(F43)
	S117= CP0[ASID]=a                                           CP0-Hold(S90,S116)
	S118= CtrlEPCIn=0                                           Premise(F44)
	S119= CtrlExCodeIn=0                                        Premise(F45)
	S120= CtrlIR=0                                              Premise(F46)
	S121= [IR]={16,1,0,24}                                      IR-Hold(S94,S120)
	S122= CtrlPIDReg=0                                          Premise(F47)
	S123= [PIDReg]=a                                            PIDReg-Hold(S96,S122)

WB	S124= PC.CIA=addr                                           PC-Out(S111)
	S125= PC.CIA31_28=addr[31:28]                               PC-Out(S111)
	S126= PC.Out=epc                                            PC-Out(S112)
	S127= CP0.ASID=a                                            CP0-Read-ASID(S117)
	S128= IR.Out={16,1,0,24}                                    IR-Out(S121)
	S129= IR.Out31_26=16                                        IR-Out(S121)
	S130= IR.Out25=1                                            IR-Out(S121)
	S131= IR.Out24_6=0                                          IR-Out(S121)
	S132= IR.Out5_0=24                                          IR-Out(S121)
	S133= PIDReg.Out=a                                          PIDReg-Out(S123)
	S134= PIDReg.Out1_0={a}[1:0]                                PIDReg-Out(S123)
	S135= PIDReg.Out4_0={a}[4:0]                                PIDReg-Out(S123)
	S136= CtrlPC=0                                              Premise(F48)
	S137= CtrlPCInc=0                                           Premise(F49)
	S138= PC[CIA]=addr                                          PC-Hold(S111,S137)
	S139= PC[Out]=epc                                           PC-Hold(S112,S136,S137)
	S140= CtrlIMem=0                                            Premise(F50)
	S141= IMem[{pid,addr}]={16,1,0,24}                          IMem-Hold(S114,S140)
	S142= CtrlASIDIn=0                                          Premise(F51)
	S143= CtrlCP0=0                                             Premise(F52)
	S144= CP0[ASID]=a                                           CP0-Hold(S117,S143)
	S145= CtrlEPCIn=0                                           Premise(F53)
	S146= CtrlExCodeIn=0                                        Premise(F54)
	S147= CtrlIR=0                                              Premise(F55)
	S148= [IR]={16,1,0,24}                                      IR-Hold(S121,S147)
	S149= CtrlPIDReg=0                                          Premise(F56)
	S150= [PIDReg]=a                                            PIDReg-Hold(S123,S149)

POST	S138= PC[CIA]=addr                                          PC-Hold(S111,S137)
	S139= PC[Out]=epc                                           PC-Hold(S112,S136,S137)
	S141= IMem[{pid,addr}]={16,1,0,24}                          IMem-Hold(S114,S140)
	S144= CP0[ASID]=a                                           CP0-Hold(S117,S143)
	S148= [IR]={16,1,0,24}                                      IR-Hold(S121,S147)
	S150= [PIDReg]=a                                            PIDReg-Hold(S123,S149)

