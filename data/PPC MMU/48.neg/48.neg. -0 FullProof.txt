
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,0,209}                       Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[SO]=so                                              Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S7= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S8= PC.Out=addr                                             PC-Out(S1)
	S9= XER.SOOut=so                                            XER-SO-Out(S4)
	S10= PIDReg.Out=>IMMU.PID                                   Premise(F5)
	S11= IMMU.PID=pid                                           Path(S5,S10)
	S12= PC.Out=>IMMU.IEA                                       Premise(F6)
	S13= IMMU.IEA=addr                                          Path(S8,S12)
	S14= IMMU.Addr={pid,addr}                                   IMMU-Search(S11,S13)
	S15= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S11,S13)
	S16= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S17= IAddrReg.In={pid,addr}                                 Path(S14,S16)
	S18= IMMU.Hit=>IMMUHitReg.In                                Premise(F8)
	S19= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S15,S18)
	S20= PC.Out=>ICache.IEA                                     Premise(F9)
	S21= ICache.IEA=addr                                        Path(S8,S20)
	S22= ICache.Hit=ICacheHit(addr)                             ICache-Search(S21)
	S23= ICache.Out=>ICacheReg.In                               Premise(F10)
	S24= ICache.Hit=>ICacheHitReg.In                            Premise(F11)
	S25= ICacheHitReg.In=ICacheHit(addr)                        Path(S22,S24)
	S26= IMMUHitReg.Out=>CU.IMemHit                             Premise(F12)
	S27= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F13)
	S28= IAddrReg.Out=>IMem.RAddr                               Premise(F14)
	S29= IMem.Out=>IRMux.MemData                                Premise(F15)
	S30= ICacheReg.Out=>IRMux.CacheData                         Premise(F16)
	S31= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F17)
	S32= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F18)
	S33= IRMux.Out=>IR.In                                       Premise(F19)
	S34= IMem.MEM8WordOut=>ICache.WData                         Premise(F20)
	S35= PC.Out=>ICache.IEA                                     Premise(F21)
	S36= IR.Out0_5=>CU.Op                                       Premise(F22)
	S37= IR.Out11_15=>GPRegs.RReg1                              Premise(F23)
	S38= IR.Out21_31=>CU.IRFunc                                 Premise(F24)
	S39= GPRegs.Rdata1=>A.In                                    Premise(F25)
	S40= A.Out=>ALU.A                                           Premise(F26)
	S41= B.Out=>ALU.B                                           Premise(F27)
	S42= CU.Func=>ALU.Func                                      Premise(F28)
	S43= ALU.Out=>ALUOut.In                                     Premise(F29)
	S44= ALU.CMP=>DataCmb.A                                     Premise(F30)
	S45= XER.SOOut=>DataCmb.B                                   Premise(F31)
	S46= DataCmb.B=so                                           Path(S9,S45)
	S47= DataCmb.Out=>DR4bit.In                                 Premise(F32)
	S48= IR.Out6_10=>GPRegs.WReg                                Premise(F33)
	S49= ALUOut.Out=>GPRegs.WData                               Premise(F34)
	S50= DR4bit.Out=>CRRegs.CR0In                               Premise(F35)
	S51= CtrlPIDReg=0                                           Premise(F36)
	S52= [PIDReg]=pid                                           PIDReg-Hold(S0,S51)
	S53= CtrlIMMU=0                                             Premise(F37)
	S54= CtrlPC=0                                               Premise(F38)
	S55= CtrlPCInc=0                                            Premise(F39)
	S56= PC[Out]=addr                                           PC-Hold(S1,S54,S55)
	S57= CtrlIAddrReg=1                                         Premise(F40)
	S58= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S17,S57)
	S59= CtrlIMMUHitReg=1                                       Premise(F41)
	S60= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S19,S59)
	S61= CtrlICache=0                                           Premise(F42)
	S62= CtrlICacheReg=1                                        Premise(F43)
	S63= CtrlICacheHitReg=1                                     Premise(F44)
	S64= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S25,S63)
	S65= CtrlIMem=0                                             Premise(F45)
	S66= IMem[{pid,addr}]={31,rT,rA,0,209}                      IMem-Hold(S2,S65)
	S67= CtrlIRMux=0                                            Premise(F46)
	S68= CtrlIR=0                                               Premise(F47)
	S69= CtrlGPRegs=0                                           Premise(F48)
	S70= GPRegs[rA]=a                                           GPRegs-Hold(S3,S69)
	S71= CtrlA=0                                                Premise(F49)
	S72= CtrlB=0                                                Premise(F50)
	S73= CtrlALUOut=0                                           Premise(F51)
	S74= CtrlXERSO=0                                            Premise(F52)
	S75= XER[SO]=so                                             XER-SO-Hold(S4,S74)
	S76= CtrlXEROV=0                                            Premise(F53)
	S77= CtrlXERCA=0                                            Premise(F54)
	S78= CtrlDR4bit=0                                           Premise(F55)
	S79= CtrlCRRegs=0                                           Premise(F56)
	S80= CtrlCRRegsCR0=0                                        Premise(F57)
	S81= CtrlCRRegsW4bitRegs=0                                  Premise(F58)
	S82= CtrlCRRegsW1bitRegs=0                                  Premise(F59)

IMMU	S83= PIDReg.Out=pid                                         PIDReg-Out(S52)
	S84= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S52)
	S85= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S52)
	S86= PC.Out=addr                                            PC-Out(S56)
	S87= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S58)
	S88= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S58)
	S89= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S58)
	S90= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S60)
	S91= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S60)
	S92= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]           IMMUHitReg-Out(S60)
	S93= ICacheHitReg.Out=ICacheHit(addr)                       ICacheHitReg-Out(S64)
	S94= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]           ICacheHitReg-Out(S64)
	S95= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]           ICacheHitReg-Out(S64)
	S96= XER.SOOut=so                                           XER-SO-Out(S75)
	S97= PIDReg.Out=>IMMU.PID                                   Premise(F60)
	S98= IMMU.PID=pid                                           Path(S83,S97)
	S99= PC.Out=>IMMU.IEA                                       Premise(F61)
	S100= IMMU.IEA=addr                                         Path(S86,S99)
	S101= IMMU.Addr={pid,addr}                                  IMMU-Search(S98,S100)
	S102= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S98,S100)
	S103= IMMU.Addr=>IAddrReg.In                                Premise(F62)
	S104= IAddrReg.In={pid,addr}                                Path(S101,S103)
	S105= IMMU.Hit=>IMMUHitReg.In                               Premise(F63)
	S106= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S102,S105)
	S107= PC.Out=>ICache.IEA                                    Premise(F64)
	S108= ICache.IEA=addr                                       Path(S86,S107)
	S109= ICache.Hit=ICacheHit(addr)                            ICache-Search(S108)
	S110= ICache.Out=>ICacheReg.In                              Premise(F65)
	S111= ICache.Hit=>ICacheHitReg.In                           Premise(F66)
	S112= ICacheHitReg.In=ICacheHit(addr)                       Path(S109,S111)
	S113= IMMUHitReg.Out=>CU.IMemHit                            Premise(F67)
	S114= CU.IMemHit=IMMUHit(pid,addr)                          Path(S90,S113)
	S115= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F68)
	S116= CU.ICacheHit=ICacheHit(addr)                          Path(S93,S115)
	S117= IAddrReg.Out=>IMem.RAddr                              Premise(F69)
	S118= IMem.RAddr={pid,addr}                                 Path(S87,S117)
	S119= IMem.Out={31,rT,rA,0,209}                             IMem-Read(S118,S66)
	S120= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S118,S66)
	S121= IMem.Out=>IRMux.MemData                               Premise(F70)
	S122= IRMux.MemData={31,rT,rA,0,209}                        Path(S119,S121)
	S123= IRMux.Out={31,rT,rA,0,209}                            IRMux-Select(S122)
	S124= ICacheReg.Out=>IRMux.CacheData                        Premise(F71)
	S125= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F72)
	S126= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S90,S125)
	S127= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F73)
	S128= IRMux.CacheSel=ICacheHit(addr)                        Path(S93,S127)
	S129= IRMux.Out=>IR.In                                      Premise(F74)
	S130= IR.In={31,rT,rA,0,209}                                Path(S123,S129)
	S131= IMem.MEM8WordOut=>ICache.WData                        Premise(F75)
	S132= ICache.WData=IMemGet8Word({pid,addr})                 Path(S120,S131)
	S133= PC.Out=>ICache.IEA                                    Premise(F76)
	S134= IR.Out0_5=>CU.Op                                      Premise(F77)
	S135= IR.Out11_15=>GPRegs.RReg1                             Premise(F78)
	S136= IR.Out21_31=>CU.IRFunc                                Premise(F79)
	S137= GPRegs.Rdata1=>A.In                                   Premise(F80)
	S138= A.Out=>ALU.A                                          Premise(F81)
	S139= B.Out=>ALU.B                                          Premise(F82)
	S140= CU.Func=>ALU.Func                                     Premise(F83)
	S141= ALU.Out=>ALUOut.In                                    Premise(F84)
	S142= ALU.CMP=>DataCmb.A                                    Premise(F85)
	S143= XER.SOOut=>DataCmb.B                                  Premise(F86)
	S144= DataCmb.B=so                                          Path(S96,S143)
	S145= DataCmb.Out=>DR4bit.In                                Premise(F87)
	S146= IR.Out6_10=>GPRegs.WReg                               Premise(F88)
	S147= ALUOut.Out=>GPRegs.WData                              Premise(F89)
	S148= DR4bit.Out=>CRRegs.CR0In                              Premise(F90)
	S149= CtrlPIDReg=0                                          Premise(F91)
	S150= [PIDReg]=pid                                          PIDReg-Hold(S52,S149)
	S151= CtrlIMMU=0                                            Premise(F92)
	S152= CtrlPC=0                                              Premise(F93)
	S153= CtrlPCInc=1                                           Premise(F94)
	S154= PC[Out]=addr+4                                        PC-Inc(S56,S152,S153)
	S155= PC[CIA]=addr                                          PC-Inc(S56,S152,S153)
	S156= CtrlIAddrReg=0                                        Premise(F95)
	S157= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S58,S156)
	S158= CtrlIMMUHitReg=0                                      Premise(F96)
	S159= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S60,S158)
	S160= CtrlICache=1                                          Premise(F97)
	S161= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S108,S132,S160)
	S162= CtrlICacheReg=0                                       Premise(F98)
	S163= CtrlICacheHitReg=0                                    Premise(F99)
	S164= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S64,S163)
	S165= CtrlIMem=0                                            Premise(F100)
	S166= IMem[{pid,addr}]={31,rT,rA,0,209}                     IMem-Hold(S66,S165)
	S167= CtrlIRMux=0                                           Premise(F101)
	S168= CtrlIR=1                                              Premise(F102)
	S169= [IR]={31,rT,rA,0,209}                                 IR-Write(S130,S168)
	S170= CtrlGPRegs=0                                          Premise(F103)
	S171= GPRegs[rA]=a                                          GPRegs-Hold(S70,S170)
	S172= CtrlA=0                                               Premise(F104)
	S173= CtrlB=0                                               Premise(F105)
	S174= CtrlALUOut=0                                          Premise(F106)
	S175= CtrlXERSO=0                                           Premise(F107)
	S176= XER[SO]=so                                            XER-SO-Hold(S75,S175)
	S177= CtrlXEROV=0                                           Premise(F108)
	S178= CtrlXERCA=0                                           Premise(F109)
	S179= CtrlDR4bit=0                                          Premise(F110)
	S180= CtrlCRRegs=0                                          Premise(F111)
	S181= CtrlCRRegsCR0=0                                       Premise(F112)
	S182= CtrlCRRegsW4bitRegs=0                                 Premise(F113)
	S183= CtrlCRRegsW1bitRegs=0                                 Premise(F114)

ID	S184= PIDReg.Out=pid                                        PIDReg-Out(S150)
	S185= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S150)
	S186= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S150)
	S187= PC.Out=addr+4                                         PC-Out(S154)
	S188= PC.CIA=addr                                           PC-Out(S155)
	S189= PC.CIA31_28=addr[31:28]                               PC-Out(S155)
	S190= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S157)
	S191= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S157)
	S192= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S157)
	S193= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S159)
	S194= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S159)
	S195= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S159)
	S196= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S164)
	S197= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S164)
	S198= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S164)
	S199= IR.Out0_5=31                                          IR-Out(S169)
	S200= IR.Out6_10=rT                                         IR-Out(S169)
	S201= IR.Out11_15=rA                                        IR-Out(S169)
	S202= IR.Out16_20=0                                         IR-Out(S169)
	S203= IR.Out21_31=209                                       IR-Out(S169)
	S204= XER.SOOut=so                                          XER-SO-Out(S176)
	S205= PIDReg.Out=>IMMU.PID                                  Premise(F115)
	S206= IMMU.PID=pid                                          Path(S184,S205)
	S207= PC.Out=>IMMU.IEA                                      Premise(F116)
	S208= IMMU.IEA=addr+4                                       Path(S187,S207)
	S209= IMMU.Addr={pid,addr+4}                                IMMU-Search(S206,S208)
	S210= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S206,S208)
	S211= IMMU.Addr=>IAddrReg.In                                Premise(F117)
	S212= IAddrReg.In={pid,addr+4}                              Path(S209,S211)
	S213= IMMU.Hit=>IMMUHitReg.In                               Premise(F118)
	S214= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S210,S213)
	S215= PC.Out=>ICache.IEA                                    Premise(F119)
	S216= ICache.IEA=addr+4                                     Path(S187,S215)
	S217= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S216)
	S218= ICache.Out=>ICacheReg.In                              Premise(F120)
	S219= ICache.Hit=>ICacheHitReg.In                           Premise(F121)
	S220= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S217,S219)
	S221= IMMUHitReg.Out=>CU.IMemHit                            Premise(F122)
	S222= CU.IMemHit=IMMUHit(pid,addr)                          Path(S193,S221)
	S223= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F123)
	S224= CU.ICacheHit=ICacheHit(addr)                          Path(S196,S223)
	S225= IAddrReg.Out=>IMem.RAddr                              Premise(F124)
	S226= IMem.RAddr={pid,addr}                                 Path(S190,S225)
	S227= IMem.Out={31,rT,rA,0,209}                             IMem-Read(S226,S166)
	S228= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S226,S166)
	S229= IMem.Out=>IRMux.MemData                               Premise(F125)
	S230= IRMux.MemData={31,rT,rA,0,209}                        Path(S227,S229)
	S231= IRMux.Out={31,rT,rA,0,209}                            IRMux-Select(S230)
	S232= ICacheReg.Out=>IRMux.CacheData                        Premise(F126)
	S233= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F127)
	S234= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S193,S233)
	S235= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F128)
	S236= IRMux.CacheSel=ICacheHit(addr)                        Path(S196,S235)
	S237= IRMux.Out=>IR.In                                      Premise(F129)
	S238= IR.In={31,rT,rA,0,209}                                Path(S231,S237)
	S239= IMem.MEM8WordOut=>ICache.WData                        Premise(F130)
	S240= ICache.WData=IMemGet8Word({pid,addr})                 Path(S228,S239)
	S241= PC.Out=>ICache.IEA                                    Premise(F131)
	S242= IR.Out0_5=>CU.Op                                      Premise(F132)
	S243= CU.Op=31                                              Path(S199,S242)
	S244= IR.Out11_15=>GPRegs.RReg1                             Premise(F133)
	S245= GPRegs.RReg1=rA                                       Path(S201,S244)
	S246= GPRegs.Rdata1=a                                       GPRegs-Read(S245,S171)
	S247= IR.Out21_31=>CU.IRFunc                                Premise(F134)
	S248= CU.IRFunc=209                                         Path(S203,S247)
	S249= CU.Func=alu_neg                                       CU(S243,S248)
	S250= GPRegs.Rdata1=>A.In                                   Premise(F135)
	S251= A.In=a                                                Path(S246,S250)
	S252= B.In=32'b0                                            Premise(F136)
	S253= A.Out=>ALU.A                                          Premise(F137)
	S254= B.Out=>ALU.B                                          Premise(F138)
	S255= CU.Func=>ALU.Func                                     Premise(F139)
	S256= ALU.Func=alu_neg                                      Path(S249,S255)
	S257= ALU.Out=>ALUOut.In                                    Premise(F140)
	S258= ALU.CMP=>DataCmb.A                                    Premise(F141)
	S259= XER.SOOut=>DataCmb.B                                  Premise(F142)
	S260= DataCmb.B=so                                          Path(S204,S259)
	S261= DataCmb.Out=>DR4bit.In                                Premise(F143)
	S262= IR.Out6_10=>GPRegs.WReg                               Premise(F144)
	S263= GPRegs.WReg=rT                                        Path(S200,S262)
	S264= ALUOut.Out=>GPRegs.WData                              Premise(F145)
	S265= DR4bit.Out=>CRRegs.CR0In                              Premise(F146)
	S266= CtrlPIDReg=0                                          Premise(F147)
	S267= [PIDReg]=pid                                          PIDReg-Hold(S150,S266)
	S268= CtrlIMMU=0                                            Premise(F148)
	S269= CtrlPC=0                                              Premise(F149)
	S270= CtrlPCInc=0                                           Premise(F150)
	S271= PC[CIA]=addr                                          PC-Hold(S155,S270)
	S272= PC[Out]=addr+4                                        PC-Hold(S154,S269,S270)
	S273= CtrlIAddrReg=0                                        Premise(F151)
	S274= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S157,S273)
	S275= CtrlIMMUHitReg=0                                      Premise(F152)
	S276= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S159,S275)
	S277= CtrlICache=0                                          Premise(F153)
	S278= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S161,S277)
	S279= CtrlICacheReg=0                                       Premise(F154)
	S280= CtrlICacheHitReg=0                                    Premise(F155)
	S281= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S164,S280)
	S282= CtrlIMem=0                                            Premise(F156)
	S283= IMem[{pid,addr}]={31,rT,rA,0,209}                     IMem-Hold(S166,S282)
	S284= CtrlIRMux=0                                           Premise(F157)
	S285= CtrlIR=0                                              Premise(F158)
	S286= [IR]={31,rT,rA,0,209}                                 IR-Hold(S169,S285)
	S287= CtrlGPRegs=0                                          Premise(F159)
	S288= GPRegs[rA]=a                                          GPRegs-Hold(S171,S287)
	S289= CtrlA=1                                               Premise(F160)
	S290= [A]=a                                                 A-Write(S251,S289)
	S291= CtrlB=1                                               Premise(F161)
	S292= [B]=32'b0                                             B-Write(S252,S291)
	S293= CtrlALUOut=0                                          Premise(F162)
	S294= CtrlXERSO=0                                           Premise(F163)
	S295= XER[SO]=so                                            XER-SO-Hold(S176,S294)
	S296= CtrlXEROV=0                                           Premise(F164)
	S297= CtrlXERCA=0                                           Premise(F165)
	S298= CtrlDR4bit=0                                          Premise(F166)
	S299= CtrlCRRegs=0                                          Premise(F167)
	S300= CtrlCRRegsCR0=0                                       Premise(F168)
	S301= CtrlCRRegsW4bitRegs=0                                 Premise(F169)
	S302= CtrlCRRegsW1bitRegs=0                                 Premise(F170)

EX	S303= PIDReg.Out=pid                                        PIDReg-Out(S267)
	S304= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S267)
	S305= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S267)
	S306= PC.CIA=addr                                           PC-Out(S271)
	S307= PC.CIA31_28=addr[31:28]                               PC-Out(S271)
	S308= PC.Out=addr+4                                         PC-Out(S272)
	S309= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S274)
	S310= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S274)
	S311= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S274)
	S312= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S276)
	S313= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S276)
	S314= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S276)
	S315= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S281)
	S316= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S281)
	S317= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S281)
	S318= IR.Out0_5=31                                          IR-Out(S286)
	S319= IR.Out6_10=rT                                         IR-Out(S286)
	S320= IR.Out11_15=rA                                        IR-Out(S286)
	S321= IR.Out16_20=0                                         IR-Out(S286)
	S322= IR.Out21_31=209                                       IR-Out(S286)
	S323= A.Out=a                                               A-Out(S290)
	S324= A.Out26_31=a[26:31]                                   A-Out(S290)
	S325= A.Out30_31=a[30:31]                                   A-Out(S290)
	S326= B.Out=32'b0                                           B-Out(S292)
	S327= B.Out26_31=32'b0[26:31]                               B-Out(S292)
	S328= B.Out30_31=32'b0[30:31]                               B-Out(S292)
	S329= XER.SOOut=so                                          XER-SO-Out(S295)
	S330= PIDReg.Out=>IMMU.PID                                  Premise(F171)
	S331= IMMU.PID=pid                                          Path(S303,S330)
	S332= PC.Out=>IMMU.IEA                                      Premise(F172)
	S333= IMMU.IEA=addr+4                                       Path(S308,S332)
	S334= IMMU.Addr={pid,addr+4}                                IMMU-Search(S331,S333)
	S335= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S331,S333)
	S336= IMMU.Addr=>IAddrReg.In                                Premise(F173)
	S337= IAddrReg.In={pid,addr+4}                              Path(S334,S336)
	S338= IMMU.Hit=>IMMUHitReg.In                               Premise(F174)
	S339= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S335,S338)
	S340= PC.Out=>ICache.IEA                                    Premise(F175)
	S341= ICache.IEA=addr+4                                     Path(S308,S340)
	S342= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S341)
	S343= ICache.Out=>ICacheReg.In                              Premise(F176)
	S344= ICache.Hit=>ICacheHitReg.In                           Premise(F177)
	S345= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S342,S344)
	S346= IMMUHitReg.Out=>CU.IMemHit                            Premise(F178)
	S347= CU.IMemHit=IMMUHit(pid,addr)                          Path(S312,S346)
	S348= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F179)
	S349= CU.ICacheHit=ICacheHit(addr)                          Path(S315,S348)
	S350= IAddrReg.Out=>IMem.RAddr                              Premise(F180)
	S351= IMem.RAddr={pid,addr}                                 Path(S309,S350)
	S352= IMem.Out={31,rT,rA,0,209}                             IMem-Read(S351,S283)
	S353= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S351,S283)
	S354= IMem.Out=>IRMux.MemData                               Premise(F181)
	S355= IRMux.MemData={31,rT,rA,0,209}                        Path(S352,S354)
	S356= IRMux.Out={31,rT,rA,0,209}                            IRMux-Select(S355)
	S357= ICacheReg.Out=>IRMux.CacheData                        Premise(F182)
	S358= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F183)
	S359= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S312,S358)
	S360= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F184)
	S361= IRMux.CacheSel=ICacheHit(addr)                        Path(S315,S360)
	S362= IRMux.Out=>IR.In                                      Premise(F185)
	S363= IR.In={31,rT,rA,0,209}                                Path(S356,S362)
	S364= IMem.MEM8WordOut=>ICache.WData                        Premise(F186)
	S365= ICache.WData=IMemGet8Word({pid,addr})                 Path(S353,S364)
	S366= PC.Out=>ICache.IEA                                    Premise(F187)
	S367= IR.Out0_5=>CU.Op                                      Premise(F188)
	S368= CU.Op=31                                              Path(S318,S367)
	S369= IR.Out11_15=>GPRegs.RReg1                             Premise(F189)
	S370= GPRegs.RReg1=rA                                       Path(S320,S369)
	S371= GPRegs.Rdata1=a                                       GPRegs-Read(S370,S288)
	S372= IR.Out21_31=>CU.IRFunc                                Premise(F190)
	S373= CU.IRFunc=209                                         Path(S322,S372)
	S374= CU.Func=alu_neg                                       CU(S368,S373)
	S375= GPRegs.Rdata1=>A.In                                   Premise(F191)
	S376= A.In=a                                                Path(S371,S375)
	S377= A.Out=>ALU.A                                          Premise(F192)
	S378= ALU.A=a                                               Path(S323,S377)
	S379= B.Out=>ALU.B                                          Premise(F193)
	S380= ALU.B=32'b0                                           Path(S326,S379)
	S381= CU.Func=>ALU.Func                                     Premise(F194)
	S382= ALU.Func=alu_neg                                      Path(S374,S381)
	S383= ALU.Out=(-a)                                          ALU(S378)
	S384= ALU.CMP=Compare0((-a))                                ALU(S378)
	S385= ALU.OV=OverFlow((-a))                                 ALU(S378)
	S386= ALU.CA=Carry((-a))                                    ALU(S378)
	S387= ALU.Out=>ALUOut.In                                    Premise(F195)
	S388= ALUOut.In=(-a)                                        Path(S383,S387)
	S389= ALU.CMP=>DataCmb.A                                    Premise(F196)
	S390= DataCmb.A=Compare0((-a))                              Path(S384,S389)
	S391= XER.SOOut=>DataCmb.B                                  Premise(F197)
	S392= DataCmb.B=so                                          Path(S329,S391)
	S393= DataCmb.Out={Compare0((-a)),so}                       DataCmb(S390,S392)
	S394= DataCmb.Out=>DR4bit.In                                Premise(F198)
	S395= DR4bit.In={Compare0((-a)),so}                         Path(S393,S394)
	S396= IR.Out6_10=>GPRegs.WReg                               Premise(F199)
	S397= GPRegs.WReg=rT                                        Path(S319,S396)
	S398= ALUOut.Out=>GPRegs.WData                              Premise(F200)
	S399= DR4bit.Out=>CRRegs.CR0In                              Premise(F201)
	S400= CtrlPIDReg=0                                          Premise(F202)
	S401= [PIDReg]=pid                                          PIDReg-Hold(S267,S400)
	S402= CtrlIMMU=0                                            Premise(F203)
	S403= CtrlPC=0                                              Premise(F204)
	S404= CtrlPCInc=0                                           Premise(F205)
	S405= PC[CIA]=addr                                          PC-Hold(S271,S404)
	S406= PC[Out]=addr+4                                        PC-Hold(S272,S403,S404)
	S407= CtrlIAddrReg=0                                        Premise(F206)
	S408= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S274,S407)
	S409= CtrlIMMUHitReg=0                                      Premise(F207)
	S410= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S276,S409)
	S411= CtrlICache=0                                          Premise(F208)
	S412= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S278,S411)
	S413= CtrlICacheReg=0                                       Premise(F209)
	S414= CtrlICacheHitReg=0                                    Premise(F210)
	S415= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S281,S414)
	S416= CtrlIMem=0                                            Premise(F211)
	S417= IMem[{pid,addr}]={31,rT,rA,0,209}                     IMem-Hold(S283,S416)
	S418= CtrlIRMux=0                                           Premise(F212)
	S419= CtrlIR=0                                              Premise(F213)
	S420= [IR]={31,rT,rA,0,209}                                 IR-Hold(S286,S419)
	S421= CtrlGPRegs=0                                          Premise(F214)
	S422= GPRegs[rA]=a                                          GPRegs-Hold(S288,S421)
	S423= CtrlA=0                                               Premise(F215)
	S424= [A]=a                                                 A-Hold(S290,S423)
	S425= CtrlB=0                                               Premise(F216)
	S426= [B]=32'b0                                             B-Hold(S292,S425)
	S427= CtrlALUOut=1                                          Premise(F217)
	S428= [ALUOut]=(-a)                                         ALUOut-Write(S388,S427)
	S429= CtrlXERSO=0                                           Premise(F218)
	S430= XER[SO]=so                                            XER-SO-Hold(S295,S429)
	S431= CtrlXEROV=0                                           Premise(F219)
	S432= CtrlXERCA=0                                           Premise(F220)
	S433= CtrlDR4bit=1                                          Premise(F221)
	S434= [DR4bit]={Compare0((-a)),so}                          DR4bit-Write(S395,S433)
	S435= CtrlCRRegs=0                                          Premise(F222)
	S436= CtrlCRRegsCR0=0                                       Premise(F223)
	S437= CtrlCRRegsW4bitRegs=0                                 Premise(F224)
	S438= CtrlCRRegsW1bitRegs=0                                 Premise(F225)

MEM	S439= PIDReg.Out=pid                                        PIDReg-Out(S401)
	S440= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S401)
	S441= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S401)
	S442= PC.CIA=addr                                           PC-Out(S405)
	S443= PC.CIA31_28=addr[31:28]                               PC-Out(S405)
	S444= PC.Out=addr+4                                         PC-Out(S406)
	S445= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S408)
	S446= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S408)
	S447= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S408)
	S448= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S410)
	S449= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S410)
	S450= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S410)
	S451= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S415)
	S452= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S415)
	S453= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S415)
	S454= IR.Out0_5=31                                          IR-Out(S420)
	S455= IR.Out6_10=rT                                         IR-Out(S420)
	S456= IR.Out11_15=rA                                        IR-Out(S420)
	S457= IR.Out16_20=0                                         IR-Out(S420)
	S458= IR.Out21_31=209                                       IR-Out(S420)
	S459= A.Out=a                                               A-Out(S424)
	S460= A.Out26_31=a[26:31]                                   A-Out(S424)
	S461= A.Out30_31=a[30:31]                                   A-Out(S424)
	S462= B.Out=32'b0                                           B-Out(S426)
	S463= B.Out26_31=32'b0[26:31]                               B-Out(S426)
	S464= B.Out30_31=32'b0[30:31]                               B-Out(S426)
	S465= ALUOut.Out=(-a)                                       ALUOut-Out(S428)
	S466= ALUOut.Out26_31=(-a)[26:31]                           ALUOut-Out(S428)
	S467= ALUOut.Out30_31=(-a)[30:31]                           ALUOut-Out(S428)
	S468= XER.SOOut=so                                          XER-SO-Out(S430)
	S469= DR4bit.Out={Compare0((-a)),so}                        DR4bit-Out(S434)
	S470= DR4bit.Out26_31={Compare0((-a)),so}[26:31]            DR4bit-Out(S434)
	S471= DR4bit.Out30_31={Compare0((-a)),so}[30:31]            DR4bit-Out(S434)
	S472= PIDReg.Out=>IMMU.PID                                  Premise(F226)
	S473= IMMU.PID=pid                                          Path(S439,S472)
	S474= PC.Out=>IMMU.IEA                                      Premise(F227)
	S475= IMMU.IEA=addr+4                                       Path(S444,S474)
	S476= IMMU.Addr={pid,addr+4}                                IMMU-Search(S473,S475)
	S477= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S473,S475)
	S478= IMMU.Addr=>IAddrReg.In                                Premise(F228)
	S479= IAddrReg.In={pid,addr+4}                              Path(S476,S478)
	S480= IMMU.Hit=>IMMUHitReg.In                               Premise(F229)
	S481= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S477,S480)
	S482= PC.Out=>ICache.IEA                                    Premise(F230)
	S483= ICache.IEA=addr+4                                     Path(S444,S482)
	S484= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S483)
	S485= ICache.Out=>ICacheReg.In                              Premise(F231)
	S486= ICache.Hit=>ICacheHitReg.In                           Premise(F232)
	S487= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S484,S486)
	S488= IMMUHitReg.Out=>CU.IMemHit                            Premise(F233)
	S489= CU.IMemHit=IMMUHit(pid,addr)                          Path(S448,S488)
	S490= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F234)
	S491= CU.ICacheHit=ICacheHit(addr)                          Path(S451,S490)
	S492= IAddrReg.Out=>IMem.RAddr                              Premise(F235)
	S493= IMem.RAddr={pid,addr}                                 Path(S445,S492)
	S494= IMem.Out={31,rT,rA,0,209}                             IMem-Read(S493,S417)
	S495= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S493,S417)
	S496= IMem.Out=>IRMux.MemData                               Premise(F236)
	S497= IRMux.MemData={31,rT,rA,0,209}                        Path(S494,S496)
	S498= IRMux.Out={31,rT,rA,0,209}                            IRMux-Select(S497)
	S499= ICacheReg.Out=>IRMux.CacheData                        Premise(F237)
	S500= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F238)
	S501= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S448,S500)
	S502= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F239)
	S503= IRMux.CacheSel=ICacheHit(addr)                        Path(S451,S502)
	S504= IRMux.Out=>IR.In                                      Premise(F240)
	S505= IR.In={31,rT,rA,0,209}                                Path(S498,S504)
	S506= IMem.MEM8WordOut=>ICache.WData                        Premise(F241)
	S507= ICache.WData=IMemGet8Word({pid,addr})                 Path(S495,S506)
	S508= PC.Out=>ICache.IEA                                    Premise(F242)
	S509= IR.Out0_5=>CU.Op                                      Premise(F243)
	S510= CU.Op=31                                              Path(S454,S509)
	S511= IR.Out11_15=>GPRegs.RReg1                             Premise(F244)
	S512= GPRegs.RReg1=rA                                       Path(S456,S511)
	S513= GPRegs.Rdata1=a                                       GPRegs-Read(S512,S422)
	S514= IR.Out21_31=>CU.IRFunc                                Premise(F245)
	S515= CU.IRFunc=209                                         Path(S458,S514)
	S516= CU.Func=alu_neg                                       CU(S510,S515)
	S517= GPRegs.Rdata1=>A.In                                   Premise(F246)
	S518= A.In=a                                                Path(S513,S517)
	S519= A.Out=>ALU.A                                          Premise(F247)
	S520= ALU.A=a                                               Path(S459,S519)
	S521= B.Out=>ALU.B                                          Premise(F248)
	S522= ALU.B=32'b0                                           Path(S462,S521)
	S523= CU.Func=>ALU.Func                                     Premise(F249)
	S524= ALU.Func=alu_neg                                      Path(S516,S523)
	S525= ALU.Out=(-a)                                          ALU(S520)
	S526= ALU.CMP=Compare0((-a))                                ALU(S520)
	S527= ALU.OV=OverFlow((-a))                                 ALU(S520)
	S528= ALU.CA=Carry((-a))                                    ALU(S520)
	S529= ALU.Out=>ALUOut.In                                    Premise(F250)
	S530= ALUOut.In=(-a)                                        Path(S525,S529)
	S531= ALU.CMP=>DataCmb.A                                    Premise(F251)
	S532= DataCmb.A=Compare0((-a))                              Path(S526,S531)
	S533= XER.SOOut=>DataCmb.B                                  Premise(F252)
	S534= DataCmb.B=so                                          Path(S468,S533)
	S535= DataCmb.Out={Compare0((-a)),so}                       DataCmb(S532,S534)
	S536= DataCmb.Out=>DR4bit.In                                Premise(F253)
	S537= DR4bit.In={Compare0((-a)),so}                         Path(S535,S536)
	S538= IR.Out6_10=>GPRegs.WReg                               Premise(F254)
	S539= GPRegs.WReg=rT                                        Path(S455,S538)
	S540= ALUOut.Out=>GPRegs.WData                              Premise(F255)
	S541= GPRegs.WData=(-a)                                     Path(S465,S540)
	S542= DR4bit.Out=>CRRegs.CR0In                              Premise(F256)
	S543= CRRegs.CR0In={Compare0((-a)),so}                      Path(S469,S542)
	S544= CtrlPIDReg=0                                          Premise(F257)
	S545= [PIDReg]=pid                                          PIDReg-Hold(S401,S544)
	S546= CtrlIMMU=0                                            Premise(F258)
	S547= CtrlPC=0                                              Premise(F259)
	S548= CtrlPCInc=0                                           Premise(F260)
	S549= PC[CIA]=addr                                          PC-Hold(S405,S548)
	S550= PC[Out]=addr+4                                        PC-Hold(S406,S547,S548)
	S551= CtrlIAddrReg=0                                        Premise(F261)
	S552= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S408,S551)
	S553= CtrlIMMUHitReg=0                                      Premise(F262)
	S554= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S410,S553)
	S555= CtrlICache=0                                          Premise(F263)
	S556= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S412,S555)
	S557= CtrlICacheReg=0                                       Premise(F264)
	S558= CtrlICacheHitReg=0                                    Premise(F265)
	S559= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S415,S558)
	S560= CtrlIMem=0                                            Premise(F266)
	S561= IMem[{pid,addr}]={31,rT,rA,0,209}                     IMem-Hold(S417,S560)
	S562= CtrlIRMux=0                                           Premise(F267)
	S563= CtrlIR=0                                              Premise(F268)
	S564= [IR]={31,rT,rA,0,209}                                 IR-Hold(S420,S563)
	S565= CtrlGPRegs=0                                          Premise(F269)
	S566= GPRegs[rA]=a                                          GPRegs-Hold(S422,S565)
	S567= CtrlA=0                                               Premise(F270)
	S568= [A]=a                                                 A-Hold(S424,S567)
	S569= CtrlB=0                                               Premise(F271)
	S570= [B]=32'b0                                             B-Hold(S426,S569)
	S571= CtrlALUOut=0                                          Premise(F272)
	S572= [ALUOut]=(-a)                                         ALUOut-Hold(S428,S571)
	S573= CtrlXERSO=0                                           Premise(F273)
	S574= XER[SO]=so                                            XER-SO-Hold(S430,S573)
	S575= CtrlXEROV=0                                           Premise(F274)
	S576= CtrlXERCA=0                                           Premise(F275)
	S577= CtrlDR4bit=0                                          Premise(F276)
	S578= [DR4bit]={Compare0((-a)),so}                          DR4bit-Hold(S434,S577)
	S579= CtrlCRRegs=0                                          Premise(F277)
	S580= CtrlCRRegsCR0=0                                       Premise(F278)
	S581= CtrlCRRegsW4bitRegs=0                                 Premise(F279)
	S582= CtrlCRRegsW1bitRegs=0                                 Premise(F280)

DMMU1	S583= PIDReg.Out=pid                                        PIDReg-Out(S545)
	S584= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S545)
	S585= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S545)
	S586= PC.CIA=addr                                           PC-Out(S549)
	S587= PC.CIA31_28=addr[31:28]                               PC-Out(S549)
	S588= PC.Out=addr+4                                         PC-Out(S550)
	S589= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S552)
	S590= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S552)
	S591= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S552)
	S592= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S554)
	S593= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S554)
	S594= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S554)
	S595= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S559)
	S596= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S559)
	S597= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S559)
	S598= IR.Out0_5=31                                          IR-Out(S564)
	S599= IR.Out6_10=rT                                         IR-Out(S564)
	S600= IR.Out11_15=rA                                        IR-Out(S564)
	S601= IR.Out16_20=0                                         IR-Out(S564)
	S602= IR.Out21_31=209                                       IR-Out(S564)
	S603= A.Out=a                                               A-Out(S568)
	S604= A.Out26_31=a[26:31]                                   A-Out(S568)
	S605= A.Out30_31=a[30:31]                                   A-Out(S568)
	S606= B.Out=32'b0                                           B-Out(S570)
	S607= B.Out26_31=32'b0[26:31]                               B-Out(S570)
	S608= B.Out30_31=32'b0[30:31]                               B-Out(S570)
	S609= ALUOut.Out=(-a)                                       ALUOut-Out(S572)
	S610= ALUOut.Out26_31=(-a)[26:31]                           ALUOut-Out(S572)
	S611= ALUOut.Out30_31=(-a)[30:31]                           ALUOut-Out(S572)
	S612= XER.SOOut=so                                          XER-SO-Out(S574)
	S613= DR4bit.Out={Compare0((-a)),so}                        DR4bit-Out(S578)
	S614= DR4bit.Out26_31={Compare0((-a)),so}[26:31]            DR4bit-Out(S578)
	S615= DR4bit.Out30_31={Compare0((-a)),so}[30:31]            DR4bit-Out(S578)
	S616= PIDReg.Out=>IMMU.PID                                  Premise(F281)
	S617= IMMU.PID=pid                                          Path(S583,S616)
	S618= PC.Out=>IMMU.IEA                                      Premise(F282)
	S619= IMMU.IEA=addr+4                                       Path(S588,S618)
	S620= IMMU.Addr={pid,addr+4}                                IMMU-Search(S617,S619)
	S621= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S617,S619)
	S622= IMMU.Addr=>IAddrReg.In                                Premise(F283)
	S623= IAddrReg.In={pid,addr+4}                              Path(S620,S622)
	S624= IMMU.Hit=>IMMUHitReg.In                               Premise(F284)
	S625= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S621,S624)
	S626= PC.Out=>ICache.IEA                                    Premise(F285)
	S627= ICache.IEA=addr+4                                     Path(S588,S626)
	S628= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S627)
	S629= ICache.Out=>ICacheReg.In                              Premise(F286)
	S630= ICache.Hit=>ICacheHitReg.In                           Premise(F287)
	S631= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S628,S630)
	S632= IMMUHitReg.Out=>CU.IMemHit                            Premise(F288)
	S633= CU.IMemHit=IMMUHit(pid,addr)                          Path(S592,S632)
	S634= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F289)
	S635= CU.ICacheHit=ICacheHit(addr)                          Path(S595,S634)
	S636= IAddrReg.Out=>IMem.RAddr                              Premise(F290)
	S637= IMem.RAddr={pid,addr}                                 Path(S589,S636)
	S638= IMem.Out={31,rT,rA,0,209}                             IMem-Read(S637,S561)
	S639= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S637,S561)
	S640= IMem.Out=>IRMux.MemData                               Premise(F291)
	S641= IRMux.MemData={31,rT,rA,0,209}                        Path(S638,S640)
	S642= IRMux.Out={31,rT,rA,0,209}                            IRMux-Select(S641)
	S643= ICacheReg.Out=>IRMux.CacheData                        Premise(F292)
	S644= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F293)
	S645= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S592,S644)
	S646= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F294)
	S647= IRMux.CacheSel=ICacheHit(addr)                        Path(S595,S646)
	S648= IRMux.Out=>IR.In                                      Premise(F295)
	S649= IR.In={31,rT,rA,0,209}                                Path(S642,S648)
	S650= IMem.MEM8WordOut=>ICache.WData                        Premise(F296)
	S651= ICache.WData=IMemGet8Word({pid,addr})                 Path(S639,S650)
	S652= PC.Out=>ICache.IEA                                    Premise(F297)
	S653= IR.Out0_5=>CU.Op                                      Premise(F298)
	S654= CU.Op=31                                              Path(S598,S653)
	S655= IR.Out11_15=>GPRegs.RReg1                             Premise(F299)
	S656= GPRegs.RReg1=rA                                       Path(S600,S655)
	S657= GPRegs.Rdata1=a                                       GPRegs-Read(S656,S566)
	S658= IR.Out21_31=>CU.IRFunc                                Premise(F300)
	S659= CU.IRFunc=209                                         Path(S602,S658)
	S660= CU.Func=alu_neg                                       CU(S654,S659)
	S661= GPRegs.Rdata1=>A.In                                   Premise(F301)
	S662= A.In=a                                                Path(S657,S661)
	S663= A.Out=>ALU.A                                          Premise(F302)
	S664= ALU.A=a                                               Path(S603,S663)
	S665= B.Out=>ALU.B                                          Premise(F303)
	S666= ALU.B=32'b0                                           Path(S606,S665)
	S667= CU.Func=>ALU.Func                                     Premise(F304)
	S668= ALU.Func=alu_neg                                      Path(S660,S667)
	S669= ALU.Out=(-a)                                          ALU(S664)
	S670= ALU.CMP=Compare0((-a))                                ALU(S664)
	S671= ALU.OV=OverFlow((-a))                                 ALU(S664)
	S672= ALU.CA=Carry((-a))                                    ALU(S664)
	S673= ALU.Out=>ALUOut.In                                    Premise(F305)
	S674= ALUOut.In=(-a)                                        Path(S669,S673)
	S675= ALU.CMP=>DataCmb.A                                    Premise(F306)
	S676= DataCmb.A=Compare0((-a))                              Path(S670,S675)
	S677= XER.SOOut=>DataCmb.B                                  Premise(F307)
	S678= DataCmb.B=so                                          Path(S612,S677)
	S679= DataCmb.Out={Compare0((-a)),so}                       DataCmb(S676,S678)
	S680= DataCmb.Out=>DR4bit.In                                Premise(F308)
	S681= DR4bit.In={Compare0((-a)),so}                         Path(S679,S680)
	S682= IR.Out6_10=>GPRegs.WReg                               Premise(F309)
	S683= GPRegs.WReg=rT                                        Path(S599,S682)
	S684= ALUOut.Out=>GPRegs.WData                              Premise(F310)
	S685= GPRegs.WData=(-a)                                     Path(S609,S684)
	S686= DR4bit.Out=>CRRegs.CR0In                              Premise(F311)
	S687= CRRegs.CR0In={Compare0((-a)),so}                      Path(S613,S686)
	S688= CtrlPIDReg=0                                          Premise(F312)
	S689= [PIDReg]=pid                                          PIDReg-Hold(S545,S688)
	S690= CtrlIMMU=0                                            Premise(F313)
	S691= CtrlPC=0                                              Premise(F314)
	S692= CtrlPCInc=0                                           Premise(F315)
	S693= PC[CIA]=addr                                          PC-Hold(S549,S692)
	S694= PC[Out]=addr+4                                        PC-Hold(S550,S691,S692)
	S695= CtrlIAddrReg=0                                        Premise(F316)
	S696= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S552,S695)
	S697= CtrlIMMUHitReg=0                                      Premise(F317)
	S698= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S554,S697)
	S699= CtrlICache=0                                          Premise(F318)
	S700= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S556,S699)
	S701= CtrlICacheReg=0                                       Premise(F319)
	S702= CtrlICacheHitReg=0                                    Premise(F320)
	S703= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S559,S702)
	S704= CtrlIMem=0                                            Premise(F321)
	S705= IMem[{pid,addr}]={31,rT,rA,0,209}                     IMem-Hold(S561,S704)
	S706= CtrlIRMux=0                                           Premise(F322)
	S707= CtrlIR=0                                              Premise(F323)
	S708= [IR]={31,rT,rA,0,209}                                 IR-Hold(S564,S707)
	S709= CtrlGPRegs=0                                          Premise(F324)
	S710= GPRegs[rA]=a                                          GPRegs-Hold(S566,S709)
	S711= CtrlA=0                                               Premise(F325)
	S712= [A]=a                                                 A-Hold(S568,S711)
	S713= CtrlB=0                                               Premise(F326)
	S714= [B]=32'b0                                             B-Hold(S570,S713)
	S715= CtrlALUOut=0                                          Premise(F327)
	S716= [ALUOut]=(-a)                                         ALUOut-Hold(S572,S715)
	S717= CtrlXERSO=0                                           Premise(F328)
	S718= XER[SO]=so                                            XER-SO-Hold(S574,S717)
	S719= CtrlXEROV=0                                           Premise(F329)
	S720= CtrlXERCA=0                                           Premise(F330)
	S721= CtrlDR4bit=0                                          Premise(F331)
	S722= [DR4bit]={Compare0((-a)),so}                          DR4bit-Hold(S578,S721)
	S723= CtrlCRRegs=0                                          Premise(F332)
	S724= CtrlCRRegsCR0=0                                       Premise(F333)
	S725= CtrlCRRegsW4bitRegs=0                                 Premise(F334)
	S726= CtrlCRRegsW1bitRegs=0                                 Premise(F335)

DMMU2	S727= PIDReg.Out=pid                                        PIDReg-Out(S689)
	S728= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S689)
	S729= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S689)
	S730= PC.CIA=addr                                           PC-Out(S693)
	S731= PC.CIA31_28=addr[31:28]                               PC-Out(S693)
	S732= PC.Out=addr+4                                         PC-Out(S694)
	S733= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S696)
	S734= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S696)
	S735= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S696)
	S736= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S698)
	S737= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S698)
	S738= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S698)
	S739= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S703)
	S740= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S703)
	S741= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S703)
	S742= IR.Out0_5=31                                          IR-Out(S708)
	S743= IR.Out6_10=rT                                         IR-Out(S708)
	S744= IR.Out11_15=rA                                        IR-Out(S708)
	S745= IR.Out16_20=0                                         IR-Out(S708)
	S746= IR.Out21_31=209                                       IR-Out(S708)
	S747= A.Out=a                                               A-Out(S712)
	S748= A.Out26_31=a[26:31]                                   A-Out(S712)
	S749= A.Out30_31=a[30:31]                                   A-Out(S712)
	S750= B.Out=32'b0                                           B-Out(S714)
	S751= B.Out26_31=32'b0[26:31]                               B-Out(S714)
	S752= B.Out30_31=32'b0[30:31]                               B-Out(S714)
	S753= ALUOut.Out=(-a)                                       ALUOut-Out(S716)
	S754= ALUOut.Out26_31=(-a)[26:31]                           ALUOut-Out(S716)
	S755= ALUOut.Out30_31=(-a)[30:31]                           ALUOut-Out(S716)
	S756= XER.SOOut=so                                          XER-SO-Out(S718)
	S757= DR4bit.Out={Compare0((-a)),so}                        DR4bit-Out(S722)
	S758= DR4bit.Out26_31={Compare0((-a)),so}[26:31]            DR4bit-Out(S722)
	S759= DR4bit.Out30_31={Compare0((-a)),so}[30:31]            DR4bit-Out(S722)
	S760= PIDReg.Out=>IMMU.PID                                  Premise(F336)
	S761= IMMU.PID=pid                                          Path(S727,S760)
	S762= PC.Out=>IMMU.IEA                                      Premise(F337)
	S763= IMMU.IEA=addr+4                                       Path(S732,S762)
	S764= IMMU.Addr={pid,addr+4}                                IMMU-Search(S761,S763)
	S765= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S761,S763)
	S766= IMMU.Addr=>IAddrReg.In                                Premise(F338)
	S767= IAddrReg.In={pid,addr+4}                              Path(S764,S766)
	S768= IMMU.Hit=>IMMUHitReg.In                               Premise(F339)
	S769= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S765,S768)
	S770= PC.Out=>ICache.IEA                                    Premise(F340)
	S771= ICache.IEA=addr+4                                     Path(S732,S770)
	S772= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S771)
	S773= ICache.Out=>ICacheReg.In                              Premise(F341)
	S774= ICache.Hit=>ICacheHitReg.In                           Premise(F342)
	S775= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S772,S774)
	S776= IMMUHitReg.Out=>CU.IMemHit                            Premise(F343)
	S777= CU.IMemHit=IMMUHit(pid,addr)                          Path(S736,S776)
	S778= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F344)
	S779= CU.ICacheHit=ICacheHit(addr)                          Path(S739,S778)
	S780= IAddrReg.Out=>IMem.RAddr                              Premise(F345)
	S781= IMem.RAddr={pid,addr}                                 Path(S733,S780)
	S782= IMem.Out={31,rT,rA,0,209}                             IMem-Read(S781,S705)
	S783= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S781,S705)
	S784= IMem.Out=>IRMux.MemData                               Premise(F346)
	S785= IRMux.MemData={31,rT,rA,0,209}                        Path(S782,S784)
	S786= IRMux.Out={31,rT,rA,0,209}                            IRMux-Select(S785)
	S787= ICacheReg.Out=>IRMux.CacheData                        Premise(F347)
	S788= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F348)
	S789= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S736,S788)
	S790= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F349)
	S791= IRMux.CacheSel=ICacheHit(addr)                        Path(S739,S790)
	S792= IRMux.Out=>IR.In                                      Premise(F350)
	S793= IR.In={31,rT,rA,0,209}                                Path(S786,S792)
	S794= IMem.MEM8WordOut=>ICache.WData                        Premise(F351)
	S795= ICache.WData=IMemGet8Word({pid,addr})                 Path(S783,S794)
	S796= PC.Out=>ICache.IEA                                    Premise(F352)
	S797= IR.Out0_5=>CU.Op                                      Premise(F353)
	S798= CU.Op=31                                              Path(S742,S797)
	S799= IR.Out11_15=>GPRegs.RReg1                             Premise(F354)
	S800= GPRegs.RReg1=rA                                       Path(S744,S799)
	S801= GPRegs.Rdata1=a                                       GPRegs-Read(S800,S710)
	S802= IR.Out21_31=>CU.IRFunc                                Premise(F355)
	S803= CU.IRFunc=209                                         Path(S746,S802)
	S804= CU.Func=alu_neg                                       CU(S798,S803)
	S805= GPRegs.Rdata1=>A.In                                   Premise(F356)
	S806= A.In=a                                                Path(S801,S805)
	S807= A.Out=>ALU.A                                          Premise(F357)
	S808= ALU.A=a                                               Path(S747,S807)
	S809= B.Out=>ALU.B                                          Premise(F358)
	S810= ALU.B=32'b0                                           Path(S750,S809)
	S811= CU.Func=>ALU.Func                                     Premise(F359)
	S812= ALU.Func=alu_neg                                      Path(S804,S811)
	S813= ALU.Out=(-a)                                          ALU(S808)
	S814= ALU.CMP=Compare0((-a))                                ALU(S808)
	S815= ALU.OV=OverFlow((-a))                                 ALU(S808)
	S816= ALU.CA=Carry((-a))                                    ALU(S808)
	S817= ALU.Out=>ALUOut.In                                    Premise(F360)
	S818= ALUOut.In=(-a)                                        Path(S813,S817)
	S819= ALU.CMP=>DataCmb.A                                    Premise(F361)
	S820= DataCmb.A=Compare0((-a))                              Path(S814,S819)
	S821= XER.SOOut=>DataCmb.B                                  Premise(F362)
	S822= DataCmb.B=so                                          Path(S756,S821)
	S823= DataCmb.Out={Compare0((-a)),so}                       DataCmb(S820,S822)
	S824= DataCmb.Out=>DR4bit.In                                Premise(F363)
	S825= DR4bit.In={Compare0((-a)),so}                         Path(S823,S824)
	S826= IR.Out6_10=>GPRegs.WReg                               Premise(F364)
	S827= GPRegs.WReg=rT                                        Path(S743,S826)
	S828= ALUOut.Out=>GPRegs.WData                              Premise(F365)
	S829= GPRegs.WData=(-a)                                     Path(S753,S828)
	S830= DR4bit.Out=>CRRegs.CR0In                              Premise(F366)
	S831= CRRegs.CR0In={Compare0((-a)),so}                      Path(S757,S830)
	S832= CtrlPIDReg=0                                          Premise(F367)
	S833= [PIDReg]=pid                                          PIDReg-Hold(S689,S832)
	S834= CtrlIMMU=0                                            Premise(F368)
	S835= CtrlPC=0                                              Premise(F369)
	S836= CtrlPCInc=0                                           Premise(F370)
	S837= PC[CIA]=addr                                          PC-Hold(S693,S836)
	S838= PC[Out]=addr+4                                        PC-Hold(S694,S835,S836)
	S839= CtrlIAddrReg=0                                        Premise(F371)
	S840= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S696,S839)
	S841= CtrlIMMUHitReg=0                                      Premise(F372)
	S842= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S698,S841)
	S843= CtrlICache=0                                          Premise(F373)
	S844= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S700,S843)
	S845= CtrlICacheReg=0                                       Premise(F374)
	S846= CtrlICacheHitReg=0                                    Premise(F375)
	S847= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S703,S846)
	S848= CtrlIMem=0                                            Premise(F376)
	S849= IMem[{pid,addr}]={31,rT,rA,0,209}                     IMem-Hold(S705,S848)
	S850= CtrlIRMux=0                                           Premise(F377)
	S851= CtrlIR=0                                              Premise(F378)
	S852= [IR]={31,rT,rA,0,209}                                 IR-Hold(S708,S851)
	S853= CtrlGPRegs=0                                          Premise(F379)
	S854= GPRegs[rA]=a                                          GPRegs-Hold(S710,S853)
	S855= CtrlA=0                                               Premise(F380)
	S856= [A]=a                                                 A-Hold(S712,S855)
	S857= CtrlB=0                                               Premise(F381)
	S858= [B]=32'b0                                             B-Hold(S714,S857)
	S859= CtrlALUOut=0                                          Premise(F382)
	S860= [ALUOut]=(-a)                                         ALUOut-Hold(S716,S859)
	S861= CtrlXERSO=0                                           Premise(F383)
	S862= XER[SO]=so                                            XER-SO-Hold(S718,S861)
	S863= CtrlXEROV=0                                           Premise(F384)
	S864= CtrlXERCA=0                                           Premise(F385)
	S865= CtrlDR4bit=0                                          Premise(F386)
	S866= [DR4bit]={Compare0((-a)),so}                          DR4bit-Hold(S722,S865)
	S867= CtrlCRRegs=0                                          Premise(F387)
	S868= CtrlCRRegsCR0=0                                       Premise(F388)
	S869= CtrlCRRegsW4bitRegs=0                                 Premise(F389)
	S870= CtrlCRRegsW1bitRegs=0                                 Premise(F390)

WB	S871= PIDReg.Out=pid                                        PIDReg-Out(S833)
	S872= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S833)
	S873= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S833)
	S874= PC.CIA=addr                                           PC-Out(S837)
	S875= PC.CIA31_28=addr[31:28]                               PC-Out(S837)
	S876= PC.Out=addr+4                                         PC-Out(S838)
	S877= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S840)
	S878= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S840)
	S879= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S840)
	S880= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S842)
	S881= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S842)
	S882= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S842)
	S883= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S847)
	S884= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S847)
	S885= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S847)
	S886= IR.Out0_5=31                                          IR-Out(S852)
	S887= IR.Out6_10=rT                                         IR-Out(S852)
	S888= IR.Out11_15=rA                                        IR-Out(S852)
	S889= IR.Out16_20=0                                         IR-Out(S852)
	S890= IR.Out21_31=209                                       IR-Out(S852)
	S891= A.Out=a                                               A-Out(S856)
	S892= A.Out26_31=a[26:31]                                   A-Out(S856)
	S893= A.Out30_31=a[30:31]                                   A-Out(S856)
	S894= B.Out=32'b0                                           B-Out(S858)
	S895= B.Out26_31=32'b0[26:31]                               B-Out(S858)
	S896= B.Out30_31=32'b0[30:31]                               B-Out(S858)
	S897= ALUOut.Out=(-a)                                       ALUOut-Out(S860)
	S898= ALUOut.Out26_31=(-a)[26:31]                           ALUOut-Out(S860)
	S899= ALUOut.Out30_31=(-a)[30:31]                           ALUOut-Out(S860)
	S900= XER.SOOut=so                                          XER-SO-Out(S862)
	S901= DR4bit.Out={Compare0((-a)),so}                        DR4bit-Out(S866)
	S902= DR4bit.Out26_31={Compare0((-a)),so}[26:31]            DR4bit-Out(S866)
	S903= DR4bit.Out30_31={Compare0((-a)),so}[30:31]            DR4bit-Out(S866)
	S904= PIDReg.Out=>IMMU.PID                                  Premise(F391)
	S905= IMMU.PID=pid                                          Path(S871,S904)
	S906= PC.Out=>IMMU.IEA                                      Premise(F392)
	S907= IMMU.IEA=addr+4                                       Path(S876,S906)
	S908= IMMU.Addr={pid,addr+4}                                IMMU-Search(S905,S907)
	S909= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S905,S907)
	S910= IMMU.Addr=>IAddrReg.In                                Premise(F393)
	S911= IAddrReg.In={pid,addr+4}                              Path(S908,S910)
	S912= IMMU.Hit=>IMMUHitReg.In                               Premise(F394)
	S913= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S909,S912)
	S914= PC.Out=>ICache.IEA                                    Premise(F395)
	S915= ICache.IEA=addr+4                                     Path(S876,S914)
	S916= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S915)
	S917= ICache.Out=>ICacheReg.In                              Premise(F396)
	S918= ICache.Hit=>ICacheHitReg.In                           Premise(F397)
	S919= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S916,S918)
	S920= IMMUHitReg.Out=>CU.IMemHit                            Premise(F398)
	S921= CU.IMemHit=IMMUHit(pid,addr)                          Path(S880,S920)
	S922= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F399)
	S923= CU.ICacheHit=ICacheHit(addr)                          Path(S883,S922)
	S924= IAddrReg.Out=>IMem.RAddr                              Premise(F400)
	S925= IMem.RAddr={pid,addr}                                 Path(S877,S924)
	S926= IMem.Out={31,rT,rA,0,209}                             IMem-Read(S925,S849)
	S927= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S925,S849)
	S928= IMem.Out=>IRMux.MemData                               Premise(F401)
	S929= IRMux.MemData={31,rT,rA,0,209}                        Path(S926,S928)
	S930= IRMux.Out={31,rT,rA,0,209}                            IRMux-Select(S929)
	S931= ICacheReg.Out=>IRMux.CacheData                        Premise(F402)
	S932= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F403)
	S933= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S880,S932)
	S934= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F404)
	S935= IRMux.CacheSel=ICacheHit(addr)                        Path(S883,S934)
	S936= IRMux.Out=>IR.In                                      Premise(F405)
	S937= IR.In={31,rT,rA,0,209}                                Path(S930,S936)
	S938= IMem.MEM8WordOut=>ICache.WData                        Premise(F406)
	S939= ICache.WData=IMemGet8Word({pid,addr})                 Path(S927,S938)
	S940= PC.Out=>ICache.IEA                                    Premise(F407)
	S941= IR.Out0_5=>CU.Op                                      Premise(F408)
	S942= CU.Op=31                                              Path(S886,S941)
	S943= IR.Out11_15=>GPRegs.RReg1                             Premise(F409)
	S944= GPRegs.RReg1=rA                                       Path(S888,S943)
	S945= GPRegs.Rdata1=a                                       GPRegs-Read(S944,S854)
	S946= IR.Out21_31=>CU.IRFunc                                Premise(F410)
	S947= CU.IRFunc=209                                         Path(S890,S946)
	S948= CU.Func=alu_neg                                       CU(S942,S947)
	S949= GPRegs.Rdata1=>A.In                                   Premise(F411)
	S950= A.In=a                                                Path(S945,S949)
	S951= A.Out=>ALU.A                                          Premise(F412)
	S952= ALU.A=a                                               Path(S891,S951)
	S953= B.Out=>ALU.B                                          Premise(F413)
	S954= ALU.B=32'b0                                           Path(S894,S953)
	S955= CU.Func=>ALU.Func                                     Premise(F414)
	S956= ALU.Func=alu_neg                                      Path(S948,S955)
	S957= ALU.Out=(-a)                                          ALU(S952)
	S958= ALU.CMP=Compare0((-a))                                ALU(S952)
	S959= ALU.OV=OverFlow((-a))                                 ALU(S952)
	S960= ALU.CA=Carry((-a))                                    ALU(S952)
	S961= ALU.Out=>ALUOut.In                                    Premise(F415)
	S962= ALUOut.In=(-a)                                        Path(S957,S961)
	S963= ALU.CMP=>DataCmb.A                                    Premise(F416)
	S964= DataCmb.A=Compare0((-a))                              Path(S958,S963)
	S965= XER.SOOut=>DataCmb.B                                  Premise(F417)
	S966= DataCmb.B=so                                          Path(S900,S965)
	S967= DataCmb.Out={Compare0((-a)),so}                       DataCmb(S964,S966)
	S968= DataCmb.Out=>DR4bit.In                                Premise(F418)
	S969= DR4bit.In={Compare0((-a)),so}                         Path(S967,S968)
	S970= IR.Out6_10=>GPRegs.WReg                               Premise(F419)
	S971= GPRegs.WReg=rT                                        Path(S887,S970)
	S972= ALUOut.Out=>GPRegs.WData                              Premise(F420)
	S973= GPRegs.WData=(-a)                                     Path(S897,S972)
	S974= DR4bit.Out=>CRRegs.CR0In                              Premise(F421)
	S975= CRRegs.CR0In={Compare0((-a)),so}                      Path(S901,S974)
	S976= CtrlPIDReg=0                                          Premise(F422)
	S977= [PIDReg]=pid                                          PIDReg-Hold(S833,S976)
	S978= CtrlIMMU=0                                            Premise(F423)
	S979= CtrlPC=0                                              Premise(F424)
	S980= CtrlPCInc=0                                           Premise(F425)
	S981= PC[CIA]=addr                                          PC-Hold(S837,S980)
	S982= PC[Out]=addr+4                                        PC-Hold(S838,S979,S980)
	S983= CtrlIAddrReg=0                                        Premise(F426)
	S984= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S840,S983)
	S985= CtrlIMMUHitReg=0                                      Premise(F427)
	S986= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S842,S985)
	S987= CtrlICache=0                                          Premise(F428)
	S988= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S844,S987)
	S989= CtrlICacheReg=0                                       Premise(F429)
	S990= CtrlICacheHitReg=0                                    Premise(F430)
	S991= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S847,S990)
	S992= CtrlIMem=0                                            Premise(F431)
	S993= IMem[{pid,addr}]={31,rT,rA,0,209}                     IMem-Hold(S849,S992)
	S994= CtrlIRMux=0                                           Premise(F432)
	S995= CtrlIR=0                                              Premise(F433)
	S996= [IR]={31,rT,rA,0,209}                                 IR-Hold(S852,S995)
	S997= CtrlGPRegs=1                                          Premise(F434)
	S998= GPRegs[rT]=(-a)                                       GPRegs-Write(S971,S973,S997)
	S999= CtrlA=0                                               Premise(F435)
	S1000= [A]=a                                                A-Hold(S856,S999)
	S1001= CtrlB=0                                              Premise(F436)
	S1002= [B]=32'b0                                            B-Hold(S858,S1001)
	S1003= CtrlALUOut=0                                         Premise(F437)
	S1004= [ALUOut]=(-a)                                        ALUOut-Hold(S860,S1003)
	S1005= CtrlXERSO=0                                          Premise(F438)
	S1006= XER[SO]=so                                           XER-SO-Hold(S862,S1005)
	S1007= CtrlXEROV=0                                          Premise(F439)
	S1008= CtrlXERCA=0                                          Premise(F440)
	S1009= CtrlDR4bit=0                                         Premise(F441)
	S1010= [DR4bit]={Compare0((-a)),so}                         DR4bit-Hold(S866,S1009)
	S1011= CtrlCRRegs=0                                         Premise(F442)
	S1012= CtrlCRRegsCR0=1                                      Premise(F443)
	S1013= CRRegs[CR0]={Compare0((-a)),so}                      CRRegs-CR0-Write(S975,S1012)
	S1014= CtrlCRRegsW4bitRegs=0                                Premise(F444)
	S1015= CtrlCRRegsW1bitRegs=0                                Premise(F445)

POST	S977= [PIDReg]=pid                                          PIDReg-Hold(S833,S976)
	S981= PC[CIA]=addr                                          PC-Hold(S837,S980)
	S982= PC[Out]=addr+4                                        PC-Hold(S838,S979,S980)
	S984= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S840,S983)
	S986= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S842,S985)
	S988= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S844,S987)
	S991= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S847,S990)
	S993= IMem[{pid,addr}]={31,rT,rA,0,209}                     IMem-Hold(S849,S992)
	S996= [IR]={31,rT,rA,0,209}                                 IR-Hold(S852,S995)
	S998= GPRegs[rT]=(-a)                                       GPRegs-Write(S971,S973,S997)
	S1000= [A]=a                                                A-Hold(S856,S999)
	S1002= [B]=32'b0                                            B-Hold(S858,S1001)
	S1004= [ALUOut]=(-a)                                        ALUOut-Hold(S860,S1003)
	S1006= XER[SO]=so                                           XER-SO-Hold(S862,S1005)
	S1010= [DR4bit]={Compare0((-a)),so}                         DR4bit-Hold(S866,S1009)
	S1013= CRRegs[CR0]={Compare0((-a)),so}                      CRRegs-CR0-Write(S975,S1012)

