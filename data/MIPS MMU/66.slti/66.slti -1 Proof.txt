
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={10,rS,rT,imm}                             Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)

IF	S3= PC.Out=addr                                             PC-Out(S0)
	S4= PC.Out=>ICache.IEA                                      Premise(F9)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={10,rS,rT,imm}                               ICache-Search(S5,S1)
	S7= ICache.Out=>IR.In                                       Premise(F10)
	S8= IR.In={10,rS,rT,imm}                                    Path(S6,S7)
	S9= CtrlPC=0                                                Premise(F18)
	S10= CtrlPCInc=1                                            Premise(F19)
	S11= PC[Out]=addr+4                                         PC-Inc(S0,S9,S10)
	S12= CtrlIR=1                                               Premise(F22)
	S13= [IR]={10,rS,rT,imm}                                    IR-Write(S8,S12)
	S14= CtrlGPR=0                                              Premise(F26)
	S15= GPR[rS]=a                                              GPR-Hold(S2,S14)

ID	S16= IR.Out25_21=rS                                         IR-Out(S13)
	S17= IR.Out15_0=imm                                         IR-Out(S13)
	S18= IR.Out25_21=>GPR.RReg1                                 Premise(F48)
	S19= GPR.RReg1=rS                                           Path(S16,S18)
	S20= GPR.Rdata1=a                                           GPR-Read(S19,S15)
	S21= IR.Out15_0=>IMMEXT.In                                  Premise(F49)
	S22= IMMEXT.In=imm                                          Path(S17,S21)
	S23= IMMEXT.Out={16{imm[15]},imm}                           IMMEXT(S22)
	S24= GPR.Rdata1=>A.In                                       Premise(F50)
	S25= A.In=a                                                 Path(S20,S24)
	S26= IMMEXT.Out=>B.In                                       Premise(F51)
	S27= B.In={16{imm[15]},imm}                                 Path(S23,S26)
	S28= CtrlPC=0                                               Premise(F57)
	S29= CtrlPCInc=0                                            Premise(F58)
	S30= PC[Out]=addr+4                                         PC-Hold(S11,S28,S29)
	S31= CtrlIR=0                                               Premise(F61)
	S32= [IR]={10,rS,rT,imm}                                    IR-Hold(S13,S31)
	S33= CtrlA=1                                                Premise(F66)
	S34= [A]=a                                                  A-Write(S25,S33)
	S35= CtrlB=1                                                Premise(F67)
	S36= [B]={16{imm[15]},imm}                                  B-Write(S27,S35)

EX	S37= A.Out=a                                                A-Out(S34)
	S38= B.Out={16{imm[15]},imm}                                B-Out(S36)
	S39= A.Out=>ALU.A                                           Premise(F69)
	S40= ALU.A=a                                                Path(S37,S39)
	S41= B.Out=>ALU.B                                           Premise(F70)
	S42= ALU.B={16{imm[15]},imm}                                Path(S38,S41)
	S43= ALU.Out={31{0},(a<{16{imm[15]},imm})}                  ALU(S40,S42)
	S44= ALU.Out=>ALUOut.In                                     Premise(F72)
	S45= ALUOut.In={31{0},(a<{16{imm[15]},imm})}                Path(S43,S44)
	S46= CtrlPC=0                                               Premise(F78)
	S47= CtrlPCInc=0                                            Premise(F79)
	S48= PC[Out]=addr+4                                         PC-Hold(S30,S46,S47)
	S49= CtrlIR=0                                               Premise(F82)
	S50= [IR]={10,rS,rT,imm}                                    IR-Hold(S32,S49)
	S51= CtrlALUOut=1                                           Premise(F89)
	S52= [ALUOut]={31{0},(a<{16{imm[15]},imm})}                 ALUOut-Write(S45,S51)

MEM	S53= CtrlPC=0                                               Premise(F95)
	S54= CtrlPCInc=0                                            Premise(F96)
	S55= PC[Out]=addr+4                                         PC-Hold(S48,S53,S54)
	S56= CtrlIR=0                                               Premise(F99)
	S57= [IR]={10,rS,rT,imm}                                    IR-Hold(S50,S56)
	S58= CtrlALUOut=0                                           Premise(F106)
	S59= [ALUOut]={31{0},(a<{16{imm[15]},imm})}                 ALUOut-Hold(S52,S58)

MEM(DMMU1)	S60= CtrlPC=0                                               Premise(F112)
	S61= CtrlPCInc=0                                            Premise(F113)
	S62= PC[Out]=addr+4                                         PC-Hold(S55,S60,S61)
	S63= CtrlIR=0                                               Premise(F116)
	S64= [IR]={10,rS,rT,imm}                                    IR-Hold(S57,S63)
	S65= CtrlALUOut=0                                           Premise(F123)
	S66= [ALUOut]={31{0},(a<{16{imm[15]},imm})}                 ALUOut-Hold(S59,S65)

MEM(DMMU2)	S67= CtrlPC=0                                               Premise(F129)
	S68= CtrlPCInc=0                                            Premise(F130)
	S69= PC[Out]=addr+4                                         PC-Hold(S62,S67,S68)
	S70= CtrlIR=0                                               Premise(F133)
	S71= [IR]={10,rS,rT,imm}                                    IR-Hold(S64,S70)
	S72= CtrlALUOut=0                                           Premise(F140)
	S73= [ALUOut]={31{0},(a<{16{imm[15]},imm})}                 ALUOut-Hold(S66,S72)

WB	S74= IR.Out20_16=rT                                         IR-Out(S71)
	S75= ALUOut.Out={31{0},(a<{16{imm[15]},imm})}               ALUOut-Out(S73)
	S76= IR.Out20_16=>GPR.WReg                                  Premise(F141)
	S77= GPR.WReg=rT                                            Path(S74,S76)
	S78= ALUOut.Out=>GPR.WData                                  Premise(F142)
	S79= GPR.WData={31{0},(a<{16{imm[15]},imm})}                Path(S75,S78)
	S80= CtrlPC=0                                               Premise(F148)
	S81= CtrlPCInc=0                                            Premise(F149)
	S82= PC[Out]=addr+4                                         PC-Hold(S69,S80,S81)
	S83= CtrlGPR=1                                              Premise(F156)
	S84= GPR[rT]={31{0},(a<{16{imm[15]},imm})}                  GPR-Write(S77,S79,S83)

POST	S82= PC[Out]=addr+4                                         PC-Hold(S69,S80,S81)
	S84= GPR[rT]={31{0},(a<{16{imm[15]},imm})}                  GPR-Write(S77,S79,S83)

