
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={28,rS,rT,0,0,0}                       Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)
	S4= GPR[rT]=b                                               Premise(F4)
	S5= [Lo]=lo                                                 Premise(F5)
	S6= [Hi]=hi                                                 Premise(F6)

IF	S7= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S8= PC.Out=addr                                             PC-Out(S1)
	S9= Lo.Out=lo                                               Lo-Out(S5)
	S10= Lo.Out1_0={lo}[1:0]                                    Lo-Out(S5)
	S11= Lo.Out4_0={lo}[4:0]                                    Lo-Out(S5)
	S12= Hi.Out=hi                                              Hi-Out(S6)
	S13= Hi.Out1_0={hi}[1:0]                                    Hi-Out(S6)
	S14= Hi.Out4_0={hi}[4:0]                                    Hi-Out(S6)
	S15= CP0.ASID=>IMMU.PID                                     Premise(F7)
	S16= IMMU.PID=pid                                           Path(S7,S15)
	S17= PC.Out=>IMMU.IEA                                       Premise(F8)
	S18= IMMU.IEA=addr                                          Path(S8,S17)
	S19= IMMU.Addr={pid,addr}                                   IMMU-Search(S16,S18)
	S20= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S16,S18)
	S21= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S22= IAddrReg.In={pid,addr}                                 Path(S19,S21)
	S23= IMMU.Hit=>CU.IMMUHit                                   Premise(F10)
	S24= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S20,S23)
	S25= PC.Out=>ICache.IEA                                     Premise(F11)
	S26= ICache.IEA=addr                                        Path(S8,S25)
	S27= ICache.Hit=ICacheHit(addr)                             ICache-Search(S26)
	S28= ICache.Out=>IR.In                                      Premise(F12)
	S29= ICache.Out=>ICacheReg.In                               Premise(F13)
	S30= ICache.Hit=>CU.ICacheHit                               Premise(F14)
	S31= CU.ICacheHit=ICacheHit(addr)                           Path(S27,S30)
	S32= CtrlASIDIn=0                                           Premise(F15)
	S33= CtrlCP0=0                                              Premise(F16)
	S34= CP0[ASID]=pid                                          CP0-Hold(S0,S33)
	S35= CtrlEPCIn=0                                            Premise(F17)
	S36= CtrlExCodeIn=0                                         Premise(F18)
	S37= CtrlIMMU=0                                             Premise(F19)
	S38= CtrlPC=0                                               Premise(F20)
	S39= CtrlPCInc=0                                            Premise(F21)
	S40= PC[Out]=addr                                           PC-Hold(S1,S38,S39)
	S41= CtrlIAddrReg=1                                         Premise(F22)
	S42= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S22,S41)
	S43= CtrlICache=0                                           Premise(F23)
	S44= CtrlIR=0                                               Premise(F24)
	S45= CtrlICacheReg=1                                        Premise(F25)
	S46= CtrlIMem=0                                             Premise(F26)
	S47= IMem[{pid,addr}]={28,rS,rT,0,0,0}                      IMem-Hold(S2,S46)
	S48= CtrlIRMux=0                                            Premise(F27)
	S49= CtrlGPR=0                                              Premise(F28)
	S50= GPR[rS]=a                                              GPR-Hold(S3,S49)
	S51= GPR[rT]=b                                              GPR-Hold(S4,S49)
	S52= CtrlA=0                                                Premise(F29)
	S53= CtrlB=0                                                Premise(F30)
	S54= CtrlHi=0                                               Premise(F31)
	S55= [Hi]=hi                                                Hi-Hold(S6,S54)
	S56= CtrlLo=0                                               Premise(F32)
	S57= [Lo]=lo                                                Lo-Hold(S5,S56)

IF(IMMU)	S58= CP0.ASID=pid                                           CP0-Read-ASID(S34)
	S59= PC.Out=addr                                            PC-Out(S40)
	S60= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S42)
	S61= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S42)
	S62= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S42)
	S63= Hi.Out=hi                                              Hi-Out(S55)
	S64= Hi.Out1_0={hi}[1:0]                                    Hi-Out(S55)
	S65= Hi.Out4_0={hi}[4:0]                                    Hi-Out(S55)
	S66= Lo.Out=lo                                              Lo-Out(S57)
	S67= Lo.Out1_0={lo}[1:0]                                    Lo-Out(S57)
	S68= Lo.Out4_0={lo}[4:0]                                    Lo-Out(S57)
	S69= CU.IMMUHit=>CU.IMMUHit                                 Premise(F33)
	S70= CU.ICacheHit=>CU.ICacheHit                             Premise(F34)
	S71= IAddrReg.Out=>IMem.RAddr                               Premise(F35)
	S72= IMem.RAddr={pid,addr}                                  Path(S60,S71)
	S73= IMem.Out={28,rS,rT,0,0,0}                              IMem-Read(S72,S47)
	S74= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S72,S47)
	S75= IMem.Out=>IRMux.MemData                                Premise(F36)
	S76= IRMux.MemData={28,rS,rT,0,0,0}                         Path(S73,S75)
	S77= IRMux.Out={28,rS,rT,0,0,0}                             IRMux-Select2(S76)
	S78= ICacheReg.Out=>IRMux.CacheData                         Premise(F37)
	S79= CU.IMMUHit=>IRMux.MemSel                               Premise(F38)
	S80= CU.ICacheHit=>IRMux.CacheSel                           Premise(F39)
	S81= IRMux.Out=>IR.In                                       Premise(F40)
	S82= IR.In={28,rS,rT,0,0,0}                                 Path(S77,S81)
	S83= IMem.MEM8WordOut=>ICache.WData                         Premise(F41)
	S84= ICache.WData=IMemGet8Word({pid,addr})                  Path(S74,S83)
	S85= PC.Out=>ICache.IEA                                     Premise(F42)
	S86= ICache.IEA=addr                                        Path(S59,S85)
	S87= ICache.Hit=ICacheHit(addr)                             ICache-Search(S86)
	S88= CtrlASIDIn=0                                           Premise(F43)
	S89= CtrlCP0=0                                              Premise(F44)
	S90= CP0[ASID]=pid                                          CP0-Hold(S34,S89)
	S91= CtrlEPCIn=0                                            Premise(F45)
	S92= CtrlExCodeIn=0                                         Premise(F46)
	S93= CtrlIMMU=0                                             Premise(F47)
	S94= CtrlPC=0                                               Premise(F48)
	S95= CtrlPCInc=1                                            Premise(F49)
	S96= PC[Out]=addr+4                                         PC-Inc(S40,S94,S95)
	S97= PC[CIA]=addr                                           PC-Inc(S40,S94,S95)
	S98= CtrlIAddrReg=0                                         Premise(F50)
	S99= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S42,S98)
	S100= CtrlICache=1                                          Premise(F51)
	S101= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S86,S84,S100)
	S102= CtrlIR=1                                              Premise(F52)
	S103= [IR]={28,rS,rT,0,0,0}                                 IR-Write(S82,S102)
	S104= CtrlICacheReg=0                                       Premise(F53)
	S105= CtrlIMem=0                                            Premise(F54)
	S106= IMem[{pid,addr}]={28,rS,rT,0,0,0}                     IMem-Hold(S47,S105)
	S107= CtrlIRMux=0                                           Premise(F55)
	S108= CtrlGPR=0                                             Premise(F56)
	S109= GPR[rS]=a                                             GPR-Hold(S50,S108)
	S110= GPR[rT]=b                                             GPR-Hold(S51,S108)
	S111= CtrlA=0                                               Premise(F57)
	S112= CtrlB=0                                               Premise(F58)
	S113= CtrlHi=0                                              Premise(F59)
	S114= [Hi]=hi                                               Hi-Hold(S55,S113)
	S115= CtrlLo=0                                              Premise(F60)
	S116= [Lo]=lo                                               Lo-Hold(S57,S115)

ID	S117= CP0.ASID=pid                                          CP0-Read-ASID(S90)
	S118= PC.Out=addr+4                                         PC-Out(S96)
	S119= PC.CIA=addr                                           PC-Out(S97)
	S120= PC.CIA31_28=addr[31:28]                               PC-Out(S97)
	S121= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S99)
	S122= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S99)
	S123= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S99)
	S124= IR.Out={28,rS,rT,0,0,0}                               IR-Out(S103)
	S125= IR.Out31_26=28                                        IR-Out(S103)
	S126= IR.Out25_21=rS                                        IR-Out(S103)
	S127= IR.Out20_16=rT                                        IR-Out(S103)
	S128= IR.Out15_11=0                                         IR-Out(S103)
	S129= IR.Out10_6=0                                          IR-Out(S103)
	S130= IR.Out5_0=0                                           IR-Out(S103)
	S131= Hi.Out=hi                                             Hi-Out(S114)
	S132= Hi.Out1_0={hi}[1:0]                                   Hi-Out(S114)
	S133= Hi.Out4_0={hi}[4:0]                                   Hi-Out(S114)
	S134= Lo.Out=lo                                             Lo-Out(S116)
	S135= Lo.Out1_0={lo}[1:0]                                   Lo-Out(S116)
	S136= Lo.Out4_0={lo}[4:0]                                   Lo-Out(S116)
	S137= IR.Out31_26=>CU.Op                                    Premise(F61)
	S138= CU.Op=28                                              Path(S125,S137)
	S139= CU.Func=alu_and                                       CU(S138)
	S140= IR.Out25_21=>GPR.RReg1                                Premise(F62)
	S141= GPR.RReg1=rS                                          Path(S126,S140)
	S142= GPR.Rdata1=a                                          GPR-Read(S141,S109)
	S143= IR.Out20_16=>GPR.RReg2                                Premise(F63)
	S144= GPR.RReg2=rT                                          Path(S127,S143)
	S145= GPR.Rdata2=b                                          GPR-Read(S144,S110)
	S146= IR.Out5_0=>CU.IRFunc                                  Premise(F64)
	S147= CU.IRFunc=0                                           Path(S130,S146)
	S148= GPR.Rdata1=>A.In                                      Premise(F65)
	S149= A.In=a                                                Path(S142,S148)
	S150= GPR.Rdata2=>B.In                                      Premise(F66)
	S151= B.In=b                                                Path(S145,S150)
	S152= CtrlASIDIn=0                                          Premise(F67)
	S153= CtrlCP0=0                                             Premise(F68)
	S154= CP0[ASID]=pid                                         CP0-Hold(S90,S153)
	S155= CtrlEPCIn=0                                           Premise(F69)
	S156= CtrlExCodeIn=0                                        Premise(F70)
	S157= CtrlIMMU=0                                            Premise(F71)
	S158= CtrlPC=0                                              Premise(F72)
	S159= CtrlPCInc=0                                           Premise(F73)
	S160= PC[CIA]=addr                                          PC-Hold(S97,S159)
	S161= PC[Out]=addr+4                                        PC-Hold(S96,S158,S159)
	S162= CtrlIAddrReg=0                                        Premise(F74)
	S163= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S99,S162)
	S164= CtrlICache=0                                          Premise(F75)
	S165= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S101,S164)
	S166= CtrlIR=0                                              Premise(F76)
	S167= [IR]={28,rS,rT,0,0,0}                                 IR-Hold(S103,S166)
	S168= CtrlICacheReg=0                                       Premise(F77)
	S169= CtrlIMem=0                                            Premise(F78)
	S170= IMem[{pid,addr}]={28,rS,rT,0,0,0}                     IMem-Hold(S106,S169)
	S171= CtrlIRMux=0                                           Premise(F79)
	S172= CtrlGPR=0                                             Premise(F80)
	S173= GPR[rS]=a                                             GPR-Hold(S109,S172)
	S174= GPR[rT]=b                                             GPR-Hold(S110,S172)
	S175= CtrlA=1                                               Premise(F81)
	S176= [A]=a                                                 A-Write(S149,S175)
	S177= CtrlB=1                                               Premise(F82)
	S178= [B]=b                                                 B-Write(S151,S177)
	S179= CtrlHi=0                                              Premise(F83)
	S180= [Hi]=hi                                               Hi-Hold(S114,S179)
	S181= CtrlLo=0                                              Premise(F84)
	S182= [Lo]=lo                                               Lo-Hold(S116,S181)

EX	S183= CP0.ASID=pid                                          CP0-Read-ASID(S154)
	S184= PC.CIA=addr                                           PC-Out(S160)
	S185= PC.CIA31_28=addr[31:28]                               PC-Out(S160)
	S186= PC.Out=addr+4                                         PC-Out(S161)
	S187= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S163)
	S188= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S163)
	S189= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S163)
	S190= IR.Out={28,rS,rT,0,0,0}                               IR-Out(S167)
	S191= IR.Out31_26=28                                        IR-Out(S167)
	S192= IR.Out25_21=rS                                        IR-Out(S167)
	S193= IR.Out20_16=rT                                        IR-Out(S167)
	S194= IR.Out15_11=0                                         IR-Out(S167)
	S195= IR.Out10_6=0                                          IR-Out(S167)
	S196= IR.Out5_0=0                                           IR-Out(S167)
	S197= A.Out=a                                               A-Out(S176)
	S198= A.Out1_0={a}[1:0]                                     A-Out(S176)
	S199= A.Out4_0={a}[4:0]                                     A-Out(S176)
	S200= B.Out=b                                               B-Out(S178)
	S201= B.Out1_0={b}[1:0]                                     B-Out(S178)
	S202= B.Out4_0={b}[4:0]                                     B-Out(S178)
	S203= Hi.Out=hi                                             Hi-Out(S180)
	S204= Hi.Out1_0={hi}[1:0]                                   Hi-Out(S180)
	S205= Hi.Out4_0={hi}[4:0]                                   Hi-Out(S180)
	S206= Lo.Out=lo                                             Lo-Out(S182)
	S207= Lo.Out1_0={lo}[1:0]                                   Lo-Out(S182)
	S208= Lo.Out4_0={lo}[4:0]                                   Lo-Out(S182)
	S209= Hi.Out=>MDU.Hi                                        Premise(F85)
	S210= MDU.Hi=hi                                             Path(S203,S209)
	S211= Lo.Out=>MDU.Lo                                        Premise(F86)
	S212= MDU.Lo=lo                                             Path(S206,S211)
	S213= A.Out=>MDU.A                                          Premise(F87)
	S214= MDU.A=a                                               Path(S197,S213)
	S215= B.Out=>MDU.B                                          Premise(F88)
	S216= MDU.B=b                                               Path(S200,S215)
	S217= MDU.Func=6'b000101                                    Premise(F89)
	S218= MDU.lo=({hi,lo}+a×b)[31:0]                            MDU(S214,S216,S210,S212)
	S219= MDU.hi=({hi,lo}+a×b)[63:32]                           MDU(S214,S216,S210,S212)
	S220= MDU.CMP=Compare0({hi,lo}+a×b)                         MDU(S214,S216,S210,S212)
	S221= MDU.OV=OverFlow({hi,lo}+a×b)                          MDU(S214,S216,S210,S212)
	S222= MDU.hi=>Hi.In                                         Premise(F90)
	S223= Hi.In=({hi,lo}+a×b)[63:32]                            Path(S219,S222)
	S224= MDU.lo=>Lo.In                                         Premise(F91)
	S225= Lo.In=({hi,lo}+a×b)[31:0]                             Path(S218,S224)
	S226= CtrlASIDIn=0                                          Premise(F92)
	S227= CtrlCP0=0                                             Premise(F93)
	S228= CP0[ASID]=pid                                         CP0-Hold(S154,S227)
	S229= CtrlEPCIn=0                                           Premise(F94)
	S230= CtrlExCodeIn=0                                        Premise(F95)
	S231= CtrlIMMU=0                                            Premise(F96)
	S232= CtrlPC=0                                              Premise(F97)
	S233= CtrlPCInc=0                                           Premise(F98)
	S234= PC[CIA]=addr                                          PC-Hold(S160,S233)
	S235= PC[Out]=addr+4                                        PC-Hold(S161,S232,S233)
	S236= CtrlIAddrReg=0                                        Premise(F99)
	S237= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S163,S236)
	S238= CtrlICache=0                                          Premise(F100)
	S239= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S165,S238)
	S240= CtrlIR=0                                              Premise(F101)
	S241= [IR]={28,rS,rT,0,0,0}                                 IR-Hold(S167,S240)
	S242= CtrlICacheReg=0                                       Premise(F102)
	S243= CtrlIMem=0                                            Premise(F103)
	S244= IMem[{pid,addr}]={28,rS,rT,0,0,0}                     IMem-Hold(S170,S243)
	S245= CtrlIRMux=0                                           Premise(F104)
	S246= CtrlGPR=0                                             Premise(F105)
	S247= GPR[rS]=a                                             GPR-Hold(S173,S246)
	S248= GPR[rT]=b                                             GPR-Hold(S174,S246)
	S249= CtrlA=0                                               Premise(F106)
	S250= [A]=a                                                 A-Hold(S176,S249)
	S251= CtrlB=0                                               Premise(F107)
	S252= [B]=b                                                 B-Hold(S178,S251)
	S253= CtrlHi=1                                              Premise(F108)
	S254= [Hi]=({hi,lo}+a×b)[63:32]                             Hi-Write(S223,S253)
	S255= CtrlLo=1                                              Premise(F109)
	S256= [Lo]=({hi,lo}+a×b)[31:0]                              Lo-Write(S225,S255)

MEM	S257= CP0.ASID=pid                                          CP0-Read-ASID(S228)
	S258= PC.CIA=addr                                           PC-Out(S234)
	S259= PC.CIA31_28=addr[31:28]                               PC-Out(S234)
	S260= PC.Out=addr+4                                         PC-Out(S235)
	S261= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S237)
	S262= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S237)
	S263= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S237)
	S264= IR.Out={28,rS,rT,0,0,0}                               IR-Out(S241)
	S265= IR.Out31_26=28                                        IR-Out(S241)
	S266= IR.Out25_21=rS                                        IR-Out(S241)
	S267= IR.Out20_16=rT                                        IR-Out(S241)
	S268= IR.Out15_11=0                                         IR-Out(S241)
	S269= IR.Out10_6=0                                          IR-Out(S241)
	S270= IR.Out5_0=0                                           IR-Out(S241)
	S271= A.Out=a                                               A-Out(S250)
	S272= A.Out1_0={a}[1:0]                                     A-Out(S250)
	S273= A.Out4_0={a}[4:0]                                     A-Out(S250)
	S274= B.Out=b                                               B-Out(S252)
	S275= B.Out1_0={b}[1:0]                                     B-Out(S252)
	S276= B.Out4_0={b}[4:0]                                     B-Out(S252)
	S277= Hi.Out=({hi,lo}+a×b)[63:32]                           Hi-Out(S254)
	S278= Hi.Out1_0={({hi,lo}+a×b)[63:32]}[1:0]                 Hi-Out(S254)
	S279= Hi.Out4_0={({hi,lo}+a×b)[63:32]}[4:0]                 Hi-Out(S254)
	S280= Lo.Out=({hi,lo}+a×b)[31:0]                            Lo-Out(S256)
	S281= Lo.Out1_0={({hi,lo}+a×b)[31:0]}[1:0]                  Lo-Out(S256)
	S282= Lo.Out4_0={({hi,lo}+a×b)[31:0]}[4:0]                  Lo-Out(S256)
	S283= CtrlASIDIn=0                                          Premise(F110)
	S284= CtrlCP0=0                                             Premise(F111)
	S285= CP0[ASID]=pid                                         CP0-Hold(S228,S284)
	S286= CtrlEPCIn=0                                           Premise(F112)
	S287= CtrlExCodeIn=0                                        Premise(F113)
	S288= CtrlIMMU=0                                            Premise(F114)
	S289= CtrlPC=0                                              Premise(F115)
	S290= CtrlPCInc=0                                           Premise(F116)
	S291= PC[CIA]=addr                                          PC-Hold(S234,S290)
	S292= PC[Out]=addr+4                                        PC-Hold(S235,S289,S290)
	S293= CtrlIAddrReg=0                                        Premise(F117)
	S294= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S237,S293)
	S295= CtrlICache=0                                          Premise(F118)
	S296= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S239,S295)
	S297= CtrlIR=0                                              Premise(F119)
	S298= [IR]={28,rS,rT,0,0,0}                                 IR-Hold(S241,S297)
	S299= CtrlICacheReg=0                                       Premise(F120)
	S300= CtrlIMem=0                                            Premise(F121)
	S301= IMem[{pid,addr}]={28,rS,rT,0,0,0}                     IMem-Hold(S244,S300)
	S302= CtrlIRMux=0                                           Premise(F122)
	S303= CtrlGPR=0                                             Premise(F123)
	S304= GPR[rS]=a                                             GPR-Hold(S247,S303)
	S305= GPR[rT]=b                                             GPR-Hold(S248,S303)
	S306= CtrlA=0                                               Premise(F124)
	S307= [A]=a                                                 A-Hold(S250,S306)
	S308= CtrlB=0                                               Premise(F125)
	S309= [B]=b                                                 B-Hold(S252,S308)
	S310= CtrlHi=0                                              Premise(F126)
	S311= [Hi]=({hi,lo}+a×b)[63:32]                             Hi-Hold(S254,S310)
	S312= CtrlLo=0                                              Premise(F127)
	S313= [Lo]=({hi,lo}+a×b)[31:0]                              Lo-Hold(S256,S312)

MEM(DMMU1)	S314= CP0.ASID=pid                                          CP0-Read-ASID(S285)
	S315= PC.CIA=addr                                           PC-Out(S291)
	S316= PC.CIA31_28=addr[31:28]                               PC-Out(S291)
	S317= PC.Out=addr+4                                         PC-Out(S292)
	S318= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S294)
	S319= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S294)
	S320= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S294)
	S321= IR.Out={28,rS,rT,0,0,0}                               IR-Out(S298)
	S322= IR.Out31_26=28                                        IR-Out(S298)
	S323= IR.Out25_21=rS                                        IR-Out(S298)
	S324= IR.Out20_16=rT                                        IR-Out(S298)
	S325= IR.Out15_11=0                                         IR-Out(S298)
	S326= IR.Out10_6=0                                          IR-Out(S298)
	S327= IR.Out5_0=0                                           IR-Out(S298)
	S328= A.Out=a                                               A-Out(S307)
	S329= A.Out1_0={a}[1:0]                                     A-Out(S307)
	S330= A.Out4_0={a}[4:0]                                     A-Out(S307)
	S331= B.Out=b                                               B-Out(S309)
	S332= B.Out1_0={b}[1:0]                                     B-Out(S309)
	S333= B.Out4_0={b}[4:0]                                     B-Out(S309)
	S334= Hi.Out=({hi,lo}+a×b)[63:32]                           Hi-Out(S311)
	S335= Hi.Out1_0={({hi,lo}+a×b)[63:32]}[1:0]                 Hi-Out(S311)
	S336= Hi.Out4_0={({hi,lo}+a×b)[63:32]}[4:0]                 Hi-Out(S311)
	S337= Lo.Out=({hi,lo}+a×b)[31:0]                            Lo-Out(S313)
	S338= Lo.Out1_0={({hi,lo}+a×b)[31:0]}[1:0]                  Lo-Out(S313)
	S339= Lo.Out4_0={({hi,lo}+a×b)[31:0]}[4:0]                  Lo-Out(S313)
	S340= CtrlASIDIn=0                                          Premise(F128)
	S341= CtrlCP0=0                                             Premise(F129)
	S342= CP0[ASID]=pid                                         CP0-Hold(S285,S341)
	S343= CtrlEPCIn=0                                           Premise(F130)
	S344= CtrlExCodeIn=0                                        Premise(F131)
	S345= CtrlIMMU=0                                            Premise(F132)
	S346= CtrlPC=0                                              Premise(F133)
	S347= CtrlPCInc=0                                           Premise(F134)
	S348= PC[CIA]=addr                                          PC-Hold(S291,S347)
	S349= PC[Out]=addr+4                                        PC-Hold(S292,S346,S347)
	S350= CtrlIAddrReg=0                                        Premise(F135)
	S351= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S294,S350)
	S352= CtrlICache=0                                          Premise(F136)
	S353= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S296,S352)
	S354= CtrlIR=0                                              Premise(F137)
	S355= [IR]={28,rS,rT,0,0,0}                                 IR-Hold(S298,S354)
	S356= CtrlICacheReg=0                                       Premise(F138)
	S357= CtrlIMem=0                                            Premise(F139)
	S358= IMem[{pid,addr}]={28,rS,rT,0,0,0}                     IMem-Hold(S301,S357)
	S359= CtrlIRMux=0                                           Premise(F140)
	S360= CtrlGPR=0                                             Premise(F141)
	S361= GPR[rS]=a                                             GPR-Hold(S304,S360)
	S362= GPR[rT]=b                                             GPR-Hold(S305,S360)
	S363= CtrlA=0                                               Premise(F142)
	S364= [A]=a                                                 A-Hold(S307,S363)
	S365= CtrlB=0                                               Premise(F143)
	S366= [B]=b                                                 B-Hold(S309,S365)
	S367= CtrlHi=0                                              Premise(F144)
	S368= [Hi]=({hi,lo}+a×b)[63:32]                             Hi-Hold(S311,S367)
	S369= CtrlLo=0                                              Premise(F145)
	S370= [Lo]=({hi,lo}+a×b)[31:0]                              Lo-Hold(S313,S369)

MEM(DMMU2)	S371= CP0.ASID=pid                                          CP0-Read-ASID(S342)
	S372= PC.CIA=addr                                           PC-Out(S348)
	S373= PC.CIA31_28=addr[31:28]                               PC-Out(S348)
	S374= PC.Out=addr+4                                         PC-Out(S349)
	S375= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S351)
	S376= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S351)
	S377= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S351)
	S378= IR.Out={28,rS,rT,0,0,0}                               IR-Out(S355)
	S379= IR.Out31_26=28                                        IR-Out(S355)
	S380= IR.Out25_21=rS                                        IR-Out(S355)
	S381= IR.Out20_16=rT                                        IR-Out(S355)
	S382= IR.Out15_11=0                                         IR-Out(S355)
	S383= IR.Out10_6=0                                          IR-Out(S355)
	S384= IR.Out5_0=0                                           IR-Out(S355)
	S385= A.Out=a                                               A-Out(S364)
	S386= A.Out1_0={a}[1:0]                                     A-Out(S364)
	S387= A.Out4_0={a}[4:0]                                     A-Out(S364)
	S388= B.Out=b                                               B-Out(S366)
	S389= B.Out1_0={b}[1:0]                                     B-Out(S366)
	S390= B.Out4_0={b}[4:0]                                     B-Out(S366)
	S391= Hi.Out=({hi,lo}+a×b)[63:32]                           Hi-Out(S368)
	S392= Hi.Out1_0={({hi,lo}+a×b)[63:32]}[1:0]                 Hi-Out(S368)
	S393= Hi.Out4_0={({hi,lo}+a×b)[63:32]}[4:0]                 Hi-Out(S368)
	S394= Lo.Out=({hi,lo}+a×b)[31:0]                            Lo-Out(S370)
	S395= Lo.Out1_0={({hi,lo}+a×b)[31:0]}[1:0]                  Lo-Out(S370)
	S396= Lo.Out4_0={({hi,lo}+a×b)[31:0]}[4:0]                  Lo-Out(S370)
	S397= CtrlASIDIn=0                                          Premise(F146)
	S398= CtrlCP0=0                                             Premise(F147)
	S399= CP0[ASID]=pid                                         CP0-Hold(S342,S398)
	S400= CtrlEPCIn=0                                           Premise(F148)
	S401= CtrlExCodeIn=0                                        Premise(F149)
	S402= CtrlIMMU=0                                            Premise(F150)
	S403= CtrlPC=0                                              Premise(F151)
	S404= CtrlPCInc=0                                           Premise(F152)
	S405= PC[CIA]=addr                                          PC-Hold(S348,S404)
	S406= PC[Out]=addr+4                                        PC-Hold(S349,S403,S404)
	S407= CtrlIAddrReg=0                                        Premise(F153)
	S408= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S351,S407)
	S409= CtrlICache=0                                          Premise(F154)
	S410= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S353,S409)
	S411= CtrlIR=0                                              Premise(F155)
	S412= [IR]={28,rS,rT,0,0,0}                                 IR-Hold(S355,S411)
	S413= CtrlICacheReg=0                                       Premise(F156)
	S414= CtrlIMem=0                                            Premise(F157)
	S415= IMem[{pid,addr}]={28,rS,rT,0,0,0}                     IMem-Hold(S358,S414)
	S416= CtrlIRMux=0                                           Premise(F158)
	S417= CtrlGPR=0                                             Premise(F159)
	S418= GPR[rS]=a                                             GPR-Hold(S361,S417)
	S419= GPR[rT]=b                                             GPR-Hold(S362,S417)
	S420= CtrlA=0                                               Premise(F160)
	S421= [A]=a                                                 A-Hold(S364,S420)
	S422= CtrlB=0                                               Premise(F161)
	S423= [B]=b                                                 B-Hold(S366,S422)
	S424= CtrlHi=0                                              Premise(F162)
	S425= [Hi]=({hi,lo}+a×b)[63:32]                             Hi-Hold(S368,S424)
	S426= CtrlLo=0                                              Premise(F163)
	S427= [Lo]=({hi,lo}+a×b)[31:0]                              Lo-Hold(S370,S426)

WB	S428= CP0.ASID=pid                                          CP0-Read-ASID(S399)
	S429= PC.CIA=addr                                           PC-Out(S405)
	S430= PC.CIA31_28=addr[31:28]                               PC-Out(S405)
	S431= PC.Out=addr+4                                         PC-Out(S406)
	S432= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S408)
	S433= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S408)
	S434= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S408)
	S435= IR.Out={28,rS,rT,0,0,0}                               IR-Out(S412)
	S436= IR.Out31_26=28                                        IR-Out(S412)
	S437= IR.Out25_21=rS                                        IR-Out(S412)
	S438= IR.Out20_16=rT                                        IR-Out(S412)
	S439= IR.Out15_11=0                                         IR-Out(S412)
	S440= IR.Out10_6=0                                          IR-Out(S412)
	S441= IR.Out5_0=0                                           IR-Out(S412)
	S442= A.Out=a                                               A-Out(S421)
	S443= A.Out1_0={a}[1:0]                                     A-Out(S421)
	S444= A.Out4_0={a}[4:0]                                     A-Out(S421)
	S445= B.Out=b                                               B-Out(S423)
	S446= B.Out1_0={b}[1:0]                                     B-Out(S423)
	S447= B.Out4_0={b}[4:0]                                     B-Out(S423)
	S448= Hi.Out=({hi,lo}+a×b)[63:32]                           Hi-Out(S425)
	S449= Hi.Out1_0={({hi,lo}+a×b)[63:32]}[1:0]                 Hi-Out(S425)
	S450= Hi.Out4_0={({hi,lo}+a×b)[63:32]}[4:0]                 Hi-Out(S425)
	S451= Lo.Out=({hi,lo}+a×b)[31:0]                            Lo-Out(S427)
	S452= Lo.Out1_0={({hi,lo}+a×b)[31:0]}[1:0]                  Lo-Out(S427)
	S453= Lo.Out4_0={({hi,lo}+a×b)[31:0]}[4:0]                  Lo-Out(S427)
	S454= CtrlASIDIn=0                                          Premise(F164)
	S455= CtrlCP0=0                                             Premise(F165)
	S456= CP0[ASID]=pid                                         CP0-Hold(S399,S455)
	S457= CtrlEPCIn=0                                           Premise(F166)
	S458= CtrlExCodeIn=0                                        Premise(F167)
	S459= CtrlIMMU=0                                            Premise(F168)
	S460= CtrlPC=0                                              Premise(F169)
	S461= CtrlPCInc=0                                           Premise(F170)
	S462= PC[CIA]=addr                                          PC-Hold(S405,S461)
	S463= PC[Out]=addr+4                                        PC-Hold(S406,S460,S461)
	S464= CtrlIAddrReg=0                                        Premise(F171)
	S465= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S408,S464)
	S466= CtrlICache=0                                          Premise(F172)
	S467= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S410,S466)
	S468= CtrlIR=0                                              Premise(F173)
	S469= [IR]={28,rS,rT,0,0,0}                                 IR-Hold(S412,S468)
	S470= CtrlICacheReg=0                                       Premise(F174)
	S471= CtrlIMem=0                                            Premise(F175)
	S472= IMem[{pid,addr}]={28,rS,rT,0,0,0}                     IMem-Hold(S415,S471)
	S473= CtrlIRMux=0                                           Premise(F176)
	S474= CtrlGPR=0                                             Premise(F177)
	S475= GPR[rS]=a                                             GPR-Hold(S418,S474)
	S476= GPR[rT]=b                                             GPR-Hold(S419,S474)
	S477= CtrlA=0                                               Premise(F178)
	S478= [A]=a                                                 A-Hold(S421,S477)
	S479= CtrlB=0                                               Premise(F179)
	S480= [B]=b                                                 B-Hold(S423,S479)
	S481= CtrlHi=0                                              Premise(F180)
	S482= [Hi]=({hi,lo}+a×b)[63:32]                             Hi-Hold(S425,S481)
	S483= CtrlLo=0                                              Premise(F181)
	S484= [Lo]=({hi,lo}+a×b)[31:0]                              Lo-Hold(S427,S483)

POST	S456= CP0[ASID]=pid                                         CP0-Hold(S399,S455)
	S462= PC[CIA]=addr                                          PC-Hold(S405,S461)
	S463= PC[Out]=addr+4                                        PC-Hold(S406,S460,S461)
	S465= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S408,S464)
	S467= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S410,S466)
	S469= [IR]={28,rS,rT,0,0,0}                                 IR-Hold(S412,S468)
	S472= IMem[{pid,addr}]={28,rS,rT,0,0,0}                     IMem-Hold(S415,S471)
	S475= GPR[rS]=a                                             GPR-Hold(S418,S474)
	S476= GPR[rT]=b                                             GPR-Hold(S419,S474)
	S478= [A]=a                                                 A-Hold(S421,S477)
	S480= [B]=b                                                 B-Hold(S423,S479)
	S482= [Hi]=({hi,lo}+a×b)[63:32]                             Hi-Hold(S425,S481)
	S484= [Lo]=({hi,lo}+a×b)[31:0]                              Lo-Hold(S427,S483)

