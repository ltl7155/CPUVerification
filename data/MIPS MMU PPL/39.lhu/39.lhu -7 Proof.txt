
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={37,rS,rT,offset}                          Premise(F3)

IF	S2= PC.Out=addr                                             PC-Out(S0)
	S3= PC.Out=>ICache.IEA                                      Premise(F8)
	S4= ICache.IEA=addr                                         Path(S2,S3)
	S5= ICache.Out={37,rS,rT,offset}                            ICache-Search(S4,S1)
	S6= ICache.Out=>IR_ID.In                                    Premise(F12)
	S7= IR_ID.In={37,rS,rT,offset}                              Path(S5,S6)
	S8= CtrlPC=0                                                Premise(F25)
	S9= CtrlPCInc=1                                             Premise(F26)
	S10= PC[Out]=addr+4                                         PC-Inc(S0,S8,S9)
	S11= CtrlIR_ID=1                                            Premise(F31)
	S12= [IR_ID]={37,rS,rT,offset}                              IR_ID-Write(S7,S11)
	S13= GPR[rS]=base                                           Premise(F62)

ID	S14= IR_ID.Out={37,rS,rT,offset}                            IR-Out(S12)
	S15= IR_ID.Out25_21=rS                                      IR-Out(S12)
	S16= IR_ID.Out15_0=offset                                   IR-Out(S12)
	S17= IR_ID.Out25_21=>GPR.RReg1                              Premise(F109)
	S18= GPR.RReg1=rS                                           Path(S15,S17)
	S19= GPR.Rdata1=base                                        GPR-Read(S18,S13)
	S20= IR_ID.Out15_0=>IMMEXT.In                               Premise(F110)
	S21= IMMEXT.In=offset                                       Path(S16,S20)
	S22= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S21)
	S23= GPR.Rdata1=>FU.InID1                                   Premise(F111)
	S24= FU.InID1=base                                          Path(S19,S23)
	S25= FU.OutID1=FU(base)                                     FU-Forward(S24)
	S26= FU.OutID1=>A_EX.In                                     Premise(F113)
	S27= A_EX.In=FU(base)                                       Path(S25,S26)
	S28= IMMEXT.Out=>B_EX.In                                    Premise(F114)
	S29= B_EX.In={16{offset[15]},offset}                        Path(S22,S28)
	S30= IR_ID.Out=>IR_EX.In                                    Premise(F115)
	S31= IR_EX.In={37,rS,rT,offset}                             Path(S14,S30)
	S32= CtrlPC=0                                               Premise(F124)
	S33= CtrlPCInc=0                                            Premise(F125)
	S34= PC[Out]=addr+4                                         PC-Hold(S10,S32,S33)
	S35= CtrlA_EX=1                                             Premise(F134)
	S36= [A_EX]=FU(base)                                        A_EX-Write(S27,S35)
	S37= CtrlB_EX=1                                             Premise(F135)
	S38= [B_EX]={16{offset[15]},offset}                         B_EX-Write(S29,S37)
	S39= CtrlIR_EX=1                                            Premise(F136)
	S40= [IR_EX]={37,rS,rT,offset}                              IR_EX-Write(S31,S39)

EX	S41= A_EX.Out=FU(base)                                      A_EX-Out(S36)
	S42= B_EX.Out={16{offset[15]},offset}                       B_EX-Out(S38)
	S43= IR_EX.Out={37,rS,rT,offset}                            IR_EX-Out(S40)
	S44= A_EX.Out=>ALU.A                                        Premise(F165)
	S45= ALU.A=FU(base)                                         Path(S41,S44)
	S46= B_EX.Out=>ALU.B                                        Premise(F166)
	S47= ALU.B={16{offset[15]},offset}                          Path(S42,S46)
	S48= ALU.Out=FU(base)+{16{offset[15]},offset}               ALU(S45,S47)
	S49= ALU.Out=>ALUOut_MEM.In                                 Premise(F168)
	S50= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}         Path(S48,S49)
	S51= IR_EX.Out=>IR_MEM.In                                   Premise(F169)
	S52= IR_MEM.In={37,rS,rT,offset}                            Path(S43,S51)
	S53= CtrlPC=0                                               Premise(F176)
	S54= CtrlPCInc=0                                            Premise(F177)
	S55= PC[Out]=addr+4                                         PC-Hold(S34,S53,S54)
	S56= CtrlALUOut_MEM=1                                       Premise(F189)
	S57= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}          ALUOut_MEM-Write(S50,S56)
	S58= CtrlIR_MEM=1                                           Premise(F190)
	S59= [IR_MEM]={37,rS,rT,offset}                             IR_MEM-Write(S52,S58)
	S60= DCache[FU(base)+{16{offset[15]},offset}]=a             Premise(F214)

MEM	S61= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}        ALUOut_MEM-Out(S57)
	S62= IR_MEM.Out={37,rS,rT,offset}                           IR_MEM-Out(S59)
	S63= ALUOut_MEM.Out=>DCache.IEA                             Premise(F226)
	S64= DCache.IEA=FU(base)+{16{offset[15]},offset}            Path(S61,S63)
	S65= DCache.Out=a                                           DCache-Search(S64,S60)
	S66= IR_MEM.Out=>IR_WB.In                                   Premise(F231)
	S67= IR_WB.In={37,rS,rT,offset}                             Path(S62,S66)
	S68= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F235)
	S69= ALUOut_WB.In=FU(base)+{16{offset[15]},offset}          Path(S61,S68)
	S70= DCache.Out=>DR_WB.In                                   Premise(F236)
	S71= DR_WB.In=a                                             Path(S65,S70)
	S72= CtrlPC=0                                               Premise(F248)
	S73= CtrlPCInc=0                                            Premise(F249)
	S74= PC[Out]=addr+4                                         PC-Hold(S55,S72,S73)
	S75= CtrlIR_WB=1                                            Premise(F269)
	S76= [IR_WB]={37,rS,rT,offset}                              IR_WB-Write(S67,S75)
	S77= CtrlALUOut_WB=1                                        Premise(F275)
	S78= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}           ALUOut_WB-Write(S69,S77)
	S79= CtrlDR_WB=1                                            Premise(F276)
	S80= [DR_WB]=a                                              DR_WB-Write(S71,S79)

WB	S81= IR_WB.Out20_16=rT                                      IR-Out(S76)
	S82= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S78)
	S83= DR_WB.Out=a                                            DR_WB-Out(S80)
	S84= IR_WB.Out20_16=>GPR.WReg                               Premise(F371)
	S85= GPR.WReg=rT                                            Path(S81,S84)
	S86= DR_WB.Out=>MemDataSelL.In                              Premise(F372)
	S87= MemDataSelL.In=a                                       Path(S83,S86)
	S88= ALUOut_WB.Out1_0=>MemDataSelL.Addr                     Premise(F373)
	S89= MemDataSelL.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S82,S88)
	S90= MemDataSelL.Out={16{0},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}MemDataSelL(S87,S89)
	S91= MemDataSelL.Out=>GPR.WData                             Premise(F375)
	S92= GPR.WData={16{0},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}Path(S90,S91)
	S93= CtrlPC=0                                               Premise(F383)
	S94= CtrlPCInc=0                                            Premise(F384)
	S95= PC[Out]=addr+4                                         PC-Hold(S74,S93,S94)
	S96= CtrlGPR=1                                              Premise(F392)
	S97= GPR[rT]={16{0},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S85,S92,S96)

POST	S95= PC[Out]=addr+4                                         PC-Hold(S74,S93,S94)
	S97= GPR[rT]={16{0},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S85,S92,S96)

