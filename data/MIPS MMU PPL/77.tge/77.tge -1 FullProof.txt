
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rs,rt,code,48}                      Premise(F2)
	S3= GPR[rs]=a                                               Premise(F3)
	S4= GPR[rt]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S8,S10)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S14= IAddrReg.In={pid,addr}                                 Path(S11,S13)
	S15= IMMU.Hit=>CU_IF.IMMUHit                                Premise(F8)
	S16= CU_IF.IMMUHit=IMMUHit(pid,addr)                        Path(S12,S15)
	S17= PC.Out=>ICache.IEA                                     Premise(F9)
	S18= ICache.IEA=addr                                        Path(S6,S17)
	S19= ICache.Hit=ICacheHit(addr)                             ICache-Search(S18)
	S20= ICache.Out=>IR_IMMU.In                                 Premise(F10)
	S21= ICache.Out=>ICacheReg.In                               Premise(F11)
	S22= ICache.Hit=>CU_IF.ICacheHit                            Premise(F12)
	S23= CU_IF.ICacheHit=ICacheHit(addr)                        Path(S19,S22)
	S24= ICache.Out=>IR_ID.In                                   Premise(F13)
	S25= CU_IF.IMMUHitOut=>CU_ID.IMMUHit                        Premise(F14)
	S26= CU_IF.ICacheHitOut=>CU_ID.ICacheHit                    Premise(F15)
	S27= CU_IF.IMMUHitOut=>CU_IMMU.IMMUHit                      Premise(F16)
	S28= CU_IF.ICacheHitOut=>CU_IMMU.ICacheHit                  Premise(F17)
	S29= ICache.Hit=>FU.ICacheHit                               Premise(F18)
	S30= FU.ICacheHit=ICacheHit(addr)                           Path(S19,S29)
	S31= FU.Halt_IF=>CU_IF.Halt                                 Premise(F19)
	S32= FU.Bub_IF=>CU_IF.Bub                                   Premise(F20)
	S33= CtrlASIDIn=0                                           Premise(F21)
	S34= CtrlCP0=0                                              Premise(F22)
	S35= CP0[ASID]=pid                                          CP0-Hold(S0,S34)
	S36= CtrlEPCIn=0                                            Premise(F23)
	S37= CtrlExCodeIn=0                                         Premise(F24)
	S38= CtrlIMMU=0                                             Premise(F25)
	S39= CtrlPC=0                                               Premise(F26)
	S40= CtrlPCInc=0                                            Premise(F27)
	S41= PC[Out]=addr                                           PC-Hold(S1,S39,S40)
	S42= CtrlIAddrReg=1                                         Premise(F28)
	S43= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S14,S42)
	S44= CtrlICache=0                                           Premise(F29)
	S45= CtrlIR_IMMU=1                                          Premise(F30)
	S46= CtrlICacheReg=1                                        Premise(F31)
	S47= CtrlIR_ID=0                                            Premise(F32)
	S48= CtrlIMem=0                                             Premise(F33)
	S49= IMem[{pid,addr}]={0,rs,rt,code,48}                     IMem-Hold(S2,S48)
	S50= CtrlIRMux=0                                            Premise(F34)
	S51= CtrlGPR=0                                              Premise(F35)
	S52= GPR[rs]=a                                              GPR-Hold(S3,S51)
	S53= GPR[rt]=b                                              GPR-Hold(S4,S51)
	S54= CtrlA_EX=0                                             Premise(F36)
	S55= CtrlB_EX=0                                             Premise(F37)
	S56= CtrlIR_EX=0                                            Premise(F38)
	S57= CtrlConditionReg_MEM=0                                 Premise(F39)
	S58= CtrlIR_MEM=0                                           Premise(F40)
	S59= CtrlPIDReg=0                                           Premise(F41)
	S60= CtrlIR_DMMU1=0                                         Premise(F42)
	S61= CtrlIR_WB=0                                            Premise(F43)
	S62= CtrlA_MEM=0                                            Premise(F44)
	S63= CtrlA_WB=0                                             Premise(F45)
	S64= CtrlB_MEM=0                                            Premise(F46)
	S65= CtrlB_WB=0                                             Premise(F47)
	S66= CtrlConditionReg_DMMU1=0                               Premise(F48)
	S67= CtrlConditionReg_WB=0                                  Premise(F49)
	S68= CtrlIR_DMMU2=0                                         Premise(F50)
	S69= CtrlConditionReg_DMMU2=0                               Premise(F51)

IF(IMMU)	S70= CP0.ASID=pid                                           CP0-Read-ASID(S35)
	S71= PC.Out=addr                                            PC-Out(S41)
	S72= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S43)
	S73= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S43)
	S74= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S43)
	S75= IR_IMMU.Out=>FU.IR_IMMU                                Premise(F52)
	S76= CU_ID.IMMUHitOut=>CU_ID.IMMUHit                        Premise(F53)
	S77= CU_ID.ICacheHitOut=>CU_ID.ICacheHit                    Premise(F54)
	S78= IAddrReg.Out=>IMem.RAddr                               Premise(F55)
	S79= IMem.RAddr={pid,addr}                                  Path(S72,S78)
	S80= IMem.Out={0,rs,rt,code,48}                             IMem-Read(S79,S49)
	S81= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S79,S49)
	S82= IMem.Out=>IRMux.MemData                                Premise(F56)
	S83= IRMux.MemData={0,rs,rt,code,48}                        Path(S80,S82)
	S84= IRMux.Out={0,rs,rt,code,48}                            IRMux-Select2(S83)
	S85= ICacheReg.Out=>IRMux.CacheData                         Premise(F57)
	S86= CU_IMMU.IMMUHit=>IRMux.MemSel                          Premise(F58)
	S87= CU_IMMU.ICacheHit=>IRMux.CacheSel                      Premise(F59)
	S88= IRMux.Out=>IR_ID.In                                    Premise(F60)
	S89= IR_ID.In={0,rs,rt,code,48}                             Path(S84,S88)
	S90= IMem.MEM8WordOut=>ICache.WData                         Premise(F61)
	S91= ICache.WData=IMemGet8Word({pid,addr})                  Path(S81,S90)
	S92= PC.Out=>ICache.IEA                                     Premise(F62)
	S93= ICache.IEA=addr                                        Path(S71,S92)
	S94= ICache.Hit=ICacheHit(addr)                             ICache-Search(S93)
	S95= FU.Halt_IMMU=>CU_IMMU.Halt                             Premise(F63)
	S96= FU.Bub_IMMU=>CU_IMMU.Bub                               Premise(F64)
	S97= CtrlASIDIn=0                                           Premise(F65)
	S98= CtrlCP0=0                                              Premise(F66)
	S99= CP0[ASID]=pid                                          CP0-Hold(S35,S98)
	S100= CtrlEPCIn=0                                           Premise(F67)
	S101= CtrlExCodeIn=0                                        Premise(F68)
	S102= CtrlIMMU=0                                            Premise(F69)
	S103= CtrlPC=0                                              Premise(F70)
	S104= CtrlPCInc=1                                           Premise(F71)
	S105= PC[Out]=addr+4                                        PC-Inc(S41,S103,S104)
	S106= PC[CIA]=addr                                          PC-Inc(S41,S103,S104)
	S107= CtrlIAddrReg=0                                        Premise(F72)
	S108= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S43,S107)
	S109= CtrlICache=1                                          Premise(F73)
	S110= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S93,S91,S109)
	S111= CtrlIR_IMMU=0                                         Premise(F74)
	S112= CtrlICacheReg=0                                       Premise(F75)
	S113= CtrlIR_ID=1                                           Premise(F76)
	S114= [IR_ID]={0,rs,rt,code,48}                             IR_ID-Write(S89,S113)
	S115= CtrlIMem=0                                            Premise(F77)
	S116= IMem[{pid,addr}]={0,rs,rt,code,48}                    IMem-Hold(S49,S115)
	S117= CtrlIRMux=0                                           Premise(F78)
	S118= CtrlGPR=0                                             Premise(F79)
	S119= GPR[rs]=a                                             GPR-Hold(S52,S118)
	S120= GPR[rt]=b                                             GPR-Hold(S53,S118)
	S121= CtrlA_EX=0                                            Premise(F80)
	S122= CtrlB_EX=0                                            Premise(F81)
	S123= CtrlIR_EX=0                                           Premise(F82)
	S124= CtrlConditionReg_MEM=0                                Premise(F83)
	S125= CtrlIR_MEM=0                                          Premise(F84)
	S126= CtrlPIDReg=0                                          Premise(F85)
	S127= CtrlIR_DMMU1=0                                        Premise(F86)
	S128= CtrlIR_WB=0                                           Premise(F87)
	S129= CtrlA_MEM=0                                           Premise(F88)
	S130= CtrlA_WB=0                                            Premise(F89)
	S131= CtrlB_MEM=0                                           Premise(F90)
	S132= CtrlB_WB=0                                            Premise(F91)
	S133= CtrlConditionReg_DMMU1=0                              Premise(F92)
	S134= CtrlConditionReg_WB=0                                 Premise(F93)
	S135= CtrlIR_DMMU2=0                                        Premise(F94)
	S136= CtrlConditionReg_DMMU2=0                              Premise(F95)

ID	S137= CP0.ASID=pid                                          CP0-Read-ASID(S99)
	S138= PC.Out=addr+4                                         PC-Out(S105)
	S139= PC.CIA=addr                                           PC-Out(S106)
	S140= PC.CIA31_28=addr[31:28]                               PC-Out(S106)
	S141= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S108)
	S142= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S108)
	S143= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S108)
	S144= IR_ID.Out={0,rs,rt,code,48}                           IR-Out(S114)
	S145= IR_ID.Out31_26=0                                      IR-Out(S114)
	S146= IR_ID.Out25_21=rs                                     IR-Out(S114)
	S147= IR_ID.Out20_16=rt                                     IR-Out(S114)
	S148= IR_ID.Out15_6=code                                    IR-Out(S114)
	S149= IR_ID.Out5_0=48                                       IR-Out(S114)
	S150= IR_ID.Out=>FU.IR_ID                                   Premise(F96)
	S151= FU.IR_ID={0,rs,rt,code,48}                            Path(S144,S150)
	S152= CU_ID.IMMUHitOut=>CU_EX.IMMUHit                       Premise(F97)
	S153= CU_ID.ICacheHitOut=>CU_EX.ICacheHit                   Premise(F98)
	S154= IR_ID.Out31_26=>CU_ID.Op                              Premise(F99)
	S155= CU_ID.Op=0                                            Path(S145,S154)
	S156= IR_ID.Out25_21=>GPR.RReg1                             Premise(F100)
	S157= GPR.RReg1=rs                                          Path(S146,S156)
	S158= GPR.Rdata1=a                                          GPR-Read(S157,S119)
	S159= IR_ID.Out20_16=>GPR.RReg2                             Premise(F101)
	S160= GPR.RReg2=rt                                          Path(S147,S159)
	S161= GPR.Rdata2=b                                          GPR-Read(S160,S120)
	S162= IR_ID.Out5_0=>CU_ID.IRFunc                            Premise(F102)
	S163= CU_ID.IRFunc=48                                       Path(S149,S162)
	S164= GPR.Rdata1=>FU.InID1                                  Premise(F103)
	S165= FU.InID1=a                                            Path(S158,S164)
	S166= FU.OutID1=FU(a)                                       FU-Forward(S165)
	S167= IR_ID.Out25_21=>FU.InID1_RReg                         Premise(F104)
	S168= FU.InID1_RReg=rs                                      Path(S146,S167)
	S169= FU.OutID1=>A_EX.In                                    Premise(F105)
	S170= A_EX.In=FU(a)                                         Path(S166,S169)
	S171= GPR.Rdata2=>FU.InID2                                  Premise(F106)
	S172= FU.InID2=b                                            Path(S161,S171)
	S173= FU.OutID2=FU(b)                                       FU-Forward(S172)
	S174= IR_ID.Out20_16=>FU.InID2_RReg                         Premise(F107)
	S175= FU.InID2_RReg=rt                                      Path(S147,S174)
	S176= FU.OutID2=>B_EX.In                                    Premise(F108)
	S177= B_EX.In=FU(b)                                         Path(S173,S176)
	S178= IR_ID.Out=>IR_EX.In                                   Premise(F109)
	S179= IR_EX.In={0,rs,rt,code,48}                            Path(S144,S178)
	S180= FU.Halt_ID=>CU_ID.Halt                                Premise(F110)
	S181= FU.Bub_ID=>CU_ID.Bub                                  Premise(F111)
	S182= CtrlASIDIn=0                                          Premise(F112)
	S183= CtrlCP0=0                                             Premise(F113)
	S184= CP0[ASID]=pid                                         CP0-Hold(S99,S183)
	S185= CtrlEPCIn=0                                           Premise(F114)
	S186= CtrlExCodeIn=0                                        Premise(F115)
	S187= CtrlIMMU=0                                            Premise(F116)
	S188= CtrlPC=0                                              Premise(F117)
	S189= CtrlPCInc=0                                           Premise(F118)
	S190= PC[CIA]=addr                                          PC-Hold(S106,S189)
	S191= PC[Out]=addr+4                                        PC-Hold(S105,S188,S189)
	S192= CtrlIAddrReg=0                                        Premise(F119)
	S193= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S108,S192)
	S194= CtrlICache=0                                          Premise(F120)
	S195= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S110,S194)
	S196= CtrlIR_IMMU=0                                         Premise(F121)
	S197= CtrlICacheReg=0                                       Premise(F122)
	S198= CtrlIR_ID=0                                           Premise(F123)
	S199= [IR_ID]={0,rs,rt,code,48}                             IR_ID-Hold(S114,S198)
	S200= CtrlIMem=0                                            Premise(F124)
	S201= IMem[{pid,addr}]={0,rs,rt,code,48}                    IMem-Hold(S116,S200)
	S202= CtrlIRMux=0                                           Premise(F125)
	S203= CtrlGPR=0                                             Premise(F126)
	S204= GPR[rs]=a                                             GPR-Hold(S119,S203)
	S205= GPR[rt]=b                                             GPR-Hold(S120,S203)
	S206= CtrlA_EX=1                                            Premise(F127)
	S207= [A_EX]=FU(a)                                          A_EX-Write(S170,S206)
	S208= CtrlB_EX=1                                            Premise(F128)
	S209= [B_EX]=FU(b)                                          B_EX-Write(S177,S208)
	S210= CtrlIR_EX=1                                           Premise(F129)
	S211= [IR_EX]={0,rs,rt,code,48}                             IR_EX-Write(S179,S210)
	S212= CtrlConditionReg_MEM=0                                Premise(F130)
	S213= CtrlIR_MEM=0                                          Premise(F131)
	S214= CtrlPIDReg=0                                          Premise(F132)
	S215= CtrlIR_DMMU1=0                                        Premise(F133)
	S216= CtrlIR_WB=0                                           Premise(F134)
	S217= CtrlA_MEM=0                                           Premise(F135)
	S218= CtrlA_WB=0                                            Premise(F136)
	S219= CtrlB_MEM=0                                           Premise(F137)
	S220= CtrlB_WB=0                                            Premise(F138)
	S221= CtrlConditionReg_DMMU1=0                              Premise(F139)
	S222= CtrlConditionReg_WB=0                                 Premise(F140)
	S223= CtrlIR_DMMU2=0                                        Premise(F141)
	S224= CtrlConditionReg_DMMU2=0                              Premise(F142)

EX	S225= CP0.ASID=pid                                          CP0-Read-ASID(S184)
	S226= PC.CIA=addr                                           PC-Out(S190)
	S227= PC.CIA31_28=addr[31:28]                               PC-Out(S190)
	S228= PC.Out=addr+4                                         PC-Out(S191)
	S229= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S193)
	S230= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S193)
	S231= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S193)
	S232= IR_ID.Out={0,rs,rt,code,48}                           IR-Out(S199)
	S233= IR_ID.Out31_26=0                                      IR-Out(S199)
	S234= IR_ID.Out25_21=rs                                     IR-Out(S199)
	S235= IR_ID.Out20_16=rt                                     IR-Out(S199)
	S236= IR_ID.Out15_6=code                                    IR-Out(S199)
	S237= IR_ID.Out5_0=48                                       IR-Out(S199)
	S238= A_EX.Out=FU(a)                                        A_EX-Out(S207)
	S239= A_EX.Out1_0={FU(a)}[1:0]                              A_EX-Out(S207)
	S240= A_EX.Out4_0={FU(a)}[4:0]                              A_EX-Out(S207)
	S241= B_EX.Out=FU(b)                                        B_EX-Out(S209)
	S242= B_EX.Out1_0={FU(b)}[1:0]                              B_EX-Out(S209)
	S243= B_EX.Out4_0={FU(b)}[4:0]                              B_EX-Out(S209)
	S244= IR_EX.Out={0,rs,rt,code,48}                           IR_EX-Out(S211)
	S245= IR_EX.Out31_26=0                                      IR_EX-Out(S211)
	S246= IR_EX.Out25_21=rs                                     IR_EX-Out(S211)
	S247= IR_EX.Out20_16=rt                                     IR_EX-Out(S211)
	S248= IR_EX.Out15_6=code                                    IR_EX-Out(S211)
	S249= IR_EX.Out5_0=48                                       IR_EX-Out(S211)
	S250= IR_EX.Out=>FU.IR_EX                                   Premise(F143)
	S251= FU.IR_EX={0,rs,rt,code,48}                            Path(S244,S250)
	S252= CU_EX.IMMUHitOut=>CU_MEM.IMMUHit                      Premise(F144)
	S253= CU_EX.ICacheHitOut=>CU_MEM.ICacheHit                  Premise(F145)
	S254= IR_EX.Out31_26=>CU_EX.Op                              Premise(F146)
	S255= CU_EX.Op=0                                            Path(S245,S254)
	S256= IR_EX.Out5_0=>CU_EX.IRFunc                            Premise(F147)
	S257= CU_EX.IRFunc=48                                       Path(S249,S256)
	S258= A_EX.Out=>CMPU.A                                      Premise(F148)
	S259= CMPU.A=FU(a)                                          Path(S238,S258)
	S260= B_EX.Out=>CMPU.B                                      Premise(F149)
	S261= CMPU.B=FU(b)                                          Path(S241,S260)
	S262= CMPU.Func=6'b000011                                   Premise(F150)
	S263= CMPU.Out=CompareS(FU(a),FU(b))                        CMPU-CMPS(S259,S261)
	S264= CMPU.zero=CompareS(FU(a),FU(b))                       CMPU-CMPS(S259,S261)
	S265= CMPU.gt=CompareS(FU(a),FU(b))                         CMPU-CMPS(S259,S261)
	S266= CMPU.lt=CompareS(FU(a),FU(b))                         CMPU-CMPS(S259,S261)
	S267= CMPU.lt=>ConditionReg_MEM.In                          Premise(F151)
	S268= ConditionReg_MEM.In=CompareS(FU(a),FU(b))             Path(S266,S267)
	S269= IR_EX.Out=>IR_MEM.In                                  Premise(F152)
	S270= IR_MEM.In={0,rs,rt,code,48}                           Path(S244,S269)
	S271= FU.InEX_WReg=5'b00000                                 Premise(F153)
	S272= CtrlASIDIn=0                                          Premise(F154)
	S273= CtrlCP0=0                                             Premise(F155)
	S274= CP0[ASID]=pid                                         CP0-Hold(S184,S273)
	S275= CtrlEPCIn=0                                           Premise(F156)
	S276= CtrlExCodeIn=0                                        Premise(F157)
	S277= CtrlIMMU=0                                            Premise(F158)
	S278= CtrlPC=0                                              Premise(F159)
	S279= CtrlPCInc=0                                           Premise(F160)
	S280= PC[CIA]=addr                                          PC-Hold(S190,S279)
	S281= PC[Out]=addr+4                                        PC-Hold(S191,S278,S279)
	S282= CtrlIAddrReg=0                                        Premise(F161)
	S283= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S193,S282)
	S284= CtrlICache=0                                          Premise(F162)
	S285= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S195,S284)
	S286= CtrlIR_IMMU=0                                         Premise(F163)
	S287= CtrlICacheReg=0                                       Premise(F164)
	S288= CtrlIR_ID=0                                           Premise(F165)
	S289= [IR_ID]={0,rs,rt,code,48}                             IR_ID-Hold(S199,S288)
	S290= CtrlIMem=0                                            Premise(F166)
	S291= IMem[{pid,addr}]={0,rs,rt,code,48}                    IMem-Hold(S201,S290)
	S292= CtrlIRMux=0                                           Premise(F167)
	S293= CtrlGPR=0                                             Premise(F168)
	S294= GPR[rs]=a                                             GPR-Hold(S204,S293)
	S295= GPR[rt]=b                                             GPR-Hold(S205,S293)
	S296= CtrlA_EX=0                                            Premise(F169)
	S297= [A_EX]=FU(a)                                          A_EX-Hold(S207,S296)
	S298= CtrlB_EX=0                                            Premise(F170)
	S299= [B_EX]=FU(b)                                          B_EX-Hold(S209,S298)
	S300= CtrlIR_EX=0                                           Premise(F171)
	S301= [IR_EX]={0,rs,rt,code,48}                             IR_EX-Hold(S211,S300)
	S302= CtrlConditionReg_MEM=1                                Premise(F172)
	S303= [ConditionReg_MEM]=CompareS(FU(a),FU(b))              ConditionReg_MEM-Write(S268,S302)
	S304= CtrlIR_MEM=1                                          Premise(F173)
	S305= [IR_MEM]={0,rs,rt,code,48}                            IR_MEM-Write(S270,S304)
	S306= CtrlPIDReg=0                                          Premise(F174)
	S307= CtrlIR_DMMU1=0                                        Premise(F175)
	S308= CtrlIR_WB=0                                           Premise(F176)
	S309= CtrlA_MEM=0                                           Premise(F177)
	S310= CtrlA_WB=0                                            Premise(F178)
	S311= CtrlB_MEM=0                                           Premise(F179)
	S312= CtrlB_WB=0                                            Premise(F180)
	S313= CtrlConditionReg_DMMU1=0                              Premise(F181)
	S314= CtrlConditionReg_WB=0                                 Premise(F182)
	S315= CtrlIR_DMMU2=0                                        Premise(F183)
	S316= CtrlConditionReg_DMMU2=0                              Premise(F184)

MEM	S317= CP0.ASID=pid                                          CP0-Read-ASID(S274)
	S318= PC.CIA=addr                                           PC-Out(S280)
	S319= PC.CIA31_28=addr[31:28]                               PC-Out(S280)
	S320= PC.Out=addr+4                                         PC-Out(S281)
	S321= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S283)
	S322= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S283)
	S323= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S283)
	S324= IR_ID.Out={0,rs,rt,code,48}                           IR-Out(S289)
	S325= IR_ID.Out31_26=0                                      IR-Out(S289)
	S326= IR_ID.Out25_21=rs                                     IR-Out(S289)
	S327= IR_ID.Out20_16=rt                                     IR-Out(S289)
	S328= IR_ID.Out15_6=code                                    IR-Out(S289)
	S329= IR_ID.Out5_0=48                                       IR-Out(S289)
	S330= A_EX.Out=FU(a)                                        A_EX-Out(S297)
	S331= A_EX.Out1_0={FU(a)}[1:0]                              A_EX-Out(S297)
	S332= A_EX.Out4_0={FU(a)}[4:0]                              A_EX-Out(S297)
	S333= B_EX.Out=FU(b)                                        B_EX-Out(S299)
	S334= B_EX.Out1_0={FU(b)}[1:0]                              B_EX-Out(S299)
	S335= B_EX.Out4_0={FU(b)}[4:0]                              B_EX-Out(S299)
	S336= IR_EX.Out={0,rs,rt,code,48}                           IR_EX-Out(S301)
	S337= IR_EX.Out31_26=0                                      IR_EX-Out(S301)
	S338= IR_EX.Out25_21=rs                                     IR_EX-Out(S301)
	S339= IR_EX.Out20_16=rt                                     IR_EX-Out(S301)
	S340= IR_EX.Out15_6=code                                    IR_EX-Out(S301)
	S341= IR_EX.Out5_0=48                                       IR_EX-Out(S301)
	S342= ConditionReg_MEM.Out=CompareS(FU(a),FU(b))            ConditionReg_MEM-Out(S303)
	S343= ConditionReg_MEM.Out1_0={CompareS(FU(a),FU(b))}[1:0]  ConditionReg_MEM-Out(S303)
	S344= ConditionReg_MEM.Out4_0={CompareS(FU(a),FU(b))}[4:0]  ConditionReg_MEM-Out(S303)
	S345= IR_MEM.Out={0,rs,rt,code,48}                          IR_MEM-Out(S305)
	S346= IR_MEM.Out31_26=0                                     IR_MEM-Out(S305)
	S347= IR_MEM.Out25_21=rs                                    IR_MEM-Out(S305)
	S348= IR_MEM.Out20_16=rt                                    IR_MEM-Out(S305)
	S349= IR_MEM.Out15_6=code                                   IR_MEM-Out(S305)
	S350= IR_MEM.Out5_0=48                                      IR_MEM-Out(S305)
	S351= IR_MEM.Out=>FU.IR_MEM                                 Premise(F185)
	S352= FU.IR_MEM={0,rs,rt,code,48}                           Path(S345,S351)
	S353= CU_MEM.IMMUHitOut=>CU_DMMU1.IMMUHit                   Premise(F186)
	S354= CU_MEM.ICacheHitOut=>CU_DMMU1.ICacheHit               Premise(F187)
	S355= CU_MEM.DMMUHitOut=>CU_DMMU1.DMMUHit                   Premise(F188)
	S356= CU_MEM.DCacheHitOut=>CU_DMMU1.DCacheHit               Premise(F189)
	S357= IR_MEM.Out31_26=>CU_MEM.Op                            Premise(F190)
	S358= CU_MEM.Op=0                                           Path(S346,S357)
	S359= IR_MEM.Out5_0=>CU_MEM.IRFunc                          Premise(F191)
	S360= CU_MEM.IRFunc=48                                      Path(S350,S359)
	S361= PC.Out=>CP0.EPCIn                                     Premise(F192)
	S362= CP0.EPCIn=addr+4                                      Path(S320,S361)
	S363= CP0.ExCodeIn=5'h0d                                    Premise(F193)
	S364= CU_MEM.TrapAddr=>PC.In                                Premise(F194)
	S365= CP0.ASID=>PIDReg.In                                   Premise(F195)
	S366= PIDReg.In=pid                                         Path(S317,S365)
	S367= ConditionReg_MEM.Out=>CU_MEM.lt                       Premise(F196)
	S368= CU_MEM.lt=CompareS(FU(a),FU(b))                       Path(S342,S367)
	S369= IR_MEM.Out=>IR_DMMU1.In                               Premise(F197)
	S370= IR_DMMU1.In={0,rs,rt,code,48}                         Path(S345,S369)
	S371= IR_MEM.Out=>IR_WB.In                                  Premise(F198)
	S372= IR_WB.In={0,rs,rt,code,48}                            Path(S345,S371)
	S373= A_MEM.Out=>A_WB.In                                    Premise(F199)
	S374= B_MEM.Out=>B_WB.In                                    Premise(F200)
	S375= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In           Premise(F201)
	S376= ConditionReg_DMMU1.In=CompareS(FU(a),FU(b))           Path(S342,S375)
	S377= ConditionReg_MEM.Out=>ConditionReg_WB.In              Premise(F202)
	S378= ConditionReg_WB.In=CompareS(FU(a),FU(b))              Path(S342,S377)
	S379= CU_MEM.IMMUHitOut=>CU_WB.IMMUHit                      Premise(F203)
	S380= CU_MEM.ICacheHitOut=>CU_WB.ICacheHit                  Premise(F204)
	S381= FU.InMEM_WReg=5'b00000                                Premise(F205)
	S382= CtrlASIDIn=0                                          Premise(F206)
	S383= CtrlCP0=0                                             Premise(F207)
	S384= CP0[ASID]=pid                                         CP0-Hold(S274,S383)
	S385= CtrlEPCIn=1                                           Premise(F208)
	S386= CP0[EPC]=addr+4                                       CP0-Write-EPC(S362,S385)
	S387= CtrlExCodeIn=1                                        Premise(F209)
	S388= CP0[ExCode]=5'h0d                                     CP0-Write-ExCode(S363,S387)
	S389= CtrlIMMU=0                                            Premise(F210)
	S390= CtrlPC=1                                              Premise(F211)
	S391= CtrlPCInc=0                                           Premise(F212)
	S392= PC[CIA]=addr                                          PC-Hold(S280,S391)
	S393= CtrlIAddrReg=0                                        Premise(F213)
	S394= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S283,S393)
	S395= CtrlICache=0                                          Premise(F214)
	S396= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S285,S395)
	S397= CtrlIR_IMMU=0                                         Premise(F215)
	S398= CtrlICacheReg=0                                       Premise(F216)
	S399= CtrlIR_ID=0                                           Premise(F217)
	S400= [IR_ID]={0,rs,rt,code,48}                             IR_ID-Hold(S289,S399)
	S401= CtrlIMem=0                                            Premise(F218)
	S402= IMem[{pid,addr}]={0,rs,rt,code,48}                    IMem-Hold(S291,S401)
	S403= CtrlIRMux=0                                           Premise(F219)
	S404= CtrlGPR=0                                             Premise(F220)
	S405= GPR[rs]=a                                             GPR-Hold(S294,S404)
	S406= GPR[rt]=b                                             GPR-Hold(S295,S404)
	S407= CtrlA_EX=0                                            Premise(F221)
	S408= [A_EX]=FU(a)                                          A_EX-Hold(S297,S407)
	S409= CtrlB_EX=0                                            Premise(F222)
	S410= [B_EX]=FU(b)                                          B_EX-Hold(S299,S409)
	S411= CtrlIR_EX=0                                           Premise(F223)
	S412= [IR_EX]={0,rs,rt,code,48}                             IR_EX-Hold(S301,S411)
	S413= CtrlConditionReg_MEM=0                                Premise(F224)
	S414= [ConditionReg_MEM]=CompareS(FU(a),FU(b))              ConditionReg_MEM-Hold(S303,S413)
	S415= CtrlIR_MEM=0                                          Premise(F225)
	S416= [IR_MEM]={0,rs,rt,code,48}                            IR_MEM-Hold(S305,S415)
	S417= CtrlPIDReg=1                                          Premise(F226)
	S418= [PIDReg]=pid                                          PIDReg-Write(S366,S417)
	S419= CtrlIR_DMMU1=1                                        Premise(F227)
	S420= [IR_DMMU1]={0,rs,rt,code,48}                          IR_DMMU1-Write(S370,S419)
	S421= CtrlIR_WB=1                                           Premise(F228)
	S422= [IR_WB]={0,rs,rt,code,48}                             IR_WB-Write(S372,S421)
	S423= CtrlA_MEM=0                                           Premise(F229)
	S424= CtrlA_WB=1                                            Premise(F230)
	S425= CtrlB_MEM=0                                           Premise(F231)
	S426= CtrlB_WB=1                                            Premise(F232)
	S427= CtrlConditionReg_DMMU1=1                              Premise(F233)
	S428= [ConditionReg_DMMU1]=CompareS(FU(a),FU(b))            ConditionReg_DMMU1-Write(S376,S427)
	S429= CtrlConditionReg_WB=1                                 Premise(F234)
	S430= [ConditionReg_WB]=CompareS(FU(a),FU(b))               ConditionReg_WB-Write(S378,S429)
	S431= CtrlIR_DMMU2=0                                        Premise(F235)
	S432= CtrlConditionReg_DMMU2=0                              Premise(F236)

MEM(DMMU1)	S433= CP0.ASID=pid                                          CP0-Read-ASID(S384)
	S434= CP0.EPC=addr+4                                        CP0-Read-EPC(S386)
	S435= PC.CIA=addr                                           PC-Out(S392)
	S436= PC.CIA31_28=addr[31:28]                               PC-Out(S392)
	S437= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S394)
	S438= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S394)
	S439= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S394)
	S440= IR_ID.Out={0,rs,rt,code,48}                           IR-Out(S400)
	S441= IR_ID.Out31_26=0                                      IR-Out(S400)
	S442= IR_ID.Out25_21=rs                                     IR-Out(S400)
	S443= IR_ID.Out20_16=rt                                     IR-Out(S400)
	S444= IR_ID.Out15_6=code                                    IR-Out(S400)
	S445= IR_ID.Out5_0=48                                       IR-Out(S400)
	S446= A_EX.Out=FU(a)                                        A_EX-Out(S408)
	S447= A_EX.Out1_0={FU(a)}[1:0]                              A_EX-Out(S408)
	S448= A_EX.Out4_0={FU(a)}[4:0]                              A_EX-Out(S408)
	S449= B_EX.Out=FU(b)                                        B_EX-Out(S410)
	S450= B_EX.Out1_0={FU(b)}[1:0]                              B_EX-Out(S410)
	S451= B_EX.Out4_0={FU(b)}[4:0]                              B_EX-Out(S410)
	S452= IR_EX.Out={0,rs,rt,code,48}                           IR_EX-Out(S412)
	S453= IR_EX.Out31_26=0                                      IR_EX-Out(S412)
	S454= IR_EX.Out25_21=rs                                     IR_EX-Out(S412)
	S455= IR_EX.Out20_16=rt                                     IR_EX-Out(S412)
	S456= IR_EX.Out15_6=code                                    IR_EX-Out(S412)
	S457= IR_EX.Out5_0=48                                       IR_EX-Out(S412)
	S458= ConditionReg_MEM.Out=CompareS(FU(a),FU(b))            ConditionReg_MEM-Out(S414)
	S459= ConditionReg_MEM.Out1_0={CompareS(FU(a),FU(b))}[1:0]  ConditionReg_MEM-Out(S414)
	S460= ConditionReg_MEM.Out4_0={CompareS(FU(a),FU(b))}[4:0]  ConditionReg_MEM-Out(S414)
	S461= IR_MEM.Out={0,rs,rt,code,48}                          IR_MEM-Out(S416)
	S462= IR_MEM.Out31_26=0                                     IR_MEM-Out(S416)
	S463= IR_MEM.Out25_21=rs                                    IR_MEM-Out(S416)
	S464= IR_MEM.Out20_16=rt                                    IR_MEM-Out(S416)
	S465= IR_MEM.Out15_6=code                                   IR_MEM-Out(S416)
	S466= IR_MEM.Out5_0=48                                      IR_MEM-Out(S416)
	S467= PIDReg.Out=pid                                        PIDReg-Out(S418)
	S468= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S418)
	S469= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S418)
	S470= IR_DMMU1.Out={0,rs,rt,code,48}                        IR_DMMU1-Out(S420)
	S471= IR_DMMU1.Out31_26=0                                   IR_DMMU1-Out(S420)
	S472= IR_DMMU1.Out25_21=rs                                  IR_DMMU1-Out(S420)
	S473= IR_DMMU1.Out20_16=rt                                  IR_DMMU1-Out(S420)
	S474= IR_DMMU1.Out15_6=code                                 IR_DMMU1-Out(S420)
	S475= IR_DMMU1.Out5_0=48                                    IR_DMMU1-Out(S420)
	S476= IR_WB.Out={0,rs,rt,code,48}                           IR-Out(S422)
	S477= IR_WB.Out31_26=0                                      IR-Out(S422)
	S478= IR_WB.Out25_21=rs                                     IR-Out(S422)
	S479= IR_WB.Out20_16=rt                                     IR-Out(S422)
	S480= IR_WB.Out15_6=code                                    IR-Out(S422)
	S481= IR_WB.Out5_0=48                                       IR-Out(S422)
	S482= ConditionReg_DMMU1.Out=CompareS(FU(a),FU(b))          ConditionReg_DMMU1-Out(S428)
	S483= ConditionReg_DMMU1.Out1_0={CompareS(FU(a),FU(b))}[1:0]ConditionReg_DMMU1-Out(S428)
	S484= ConditionReg_DMMU1.Out4_0={CompareS(FU(a),FU(b))}[4:0]ConditionReg_DMMU1-Out(S428)
	S485= ConditionReg_WB.Out=CompareS(FU(a),FU(b))             ConditionReg_WB-Out(S430)
	S486= ConditionReg_WB.Out1_0={CompareS(FU(a),FU(b))}[1:0]   ConditionReg_WB-Out(S430)
	S487= ConditionReg_WB.Out4_0={CompareS(FU(a),FU(b))}[4:0]   ConditionReg_WB-Out(S430)
	S488= IR_DMMU1.Out=>FU.IR_DMMU1                             Premise(F237)
	S489= FU.IR_DMMU1={0,rs,rt,code,48}                         Path(S470,S488)
	S490= CU_DMMU1.IMMUHitOut=>CU_DMMU2.IMMUHit                 Premise(F238)
	S491= CU_DMMU1.ICacheHitOut=>CU_DMMU2.ICacheHit             Premise(F239)
	S492= CU_DMMU1.DMMUHitOut=>CU_DMMU2.DMMUHit                 Premise(F240)
	S493= CU_DMMU1.DCacheHitOut=>CU_DMMU2.DCacheHit             Premise(F241)
	S494= CU_DMMU1.DCacheHitOut=>FU.DCacheHit2                  Premise(F242)
	S495= IR_DMMU1.Out31_26=>CU_DMMU1.Op                        Premise(F243)
	S496= CU_DMMU1.Op=0                                         Path(S471,S495)
	S497= IR_DMMU1.Out5_0=>CU_DMMU1.IRFunc                      Premise(F244)
	S498= CU_DMMU1.IRFunc=48                                    Path(S475,S497)
	S499= IR_DMMU1.Out=>IR_DMMU2.In                             Premise(F245)
	S500= IR_DMMU2.In={0,rs,rt,code,48}                         Path(S470,S499)
	S501= ConditionReg_DMMU1.Out=>ConditionReg_DMMU2.In         Premise(F246)
	S502= ConditionReg_DMMU2.In=CompareS(FU(a),FU(b))           Path(S482,S501)
	S503= FU.InDMMU1_WReg=5'b00000                              Premise(F247)
	S504= CtrlASIDIn=0                                          Premise(F248)
	S505= CtrlCP0=0                                             Premise(F249)
	S506= CP0[ASID]=pid                                         CP0-Hold(S384,S505)
	S507= CP0[EPC]=addr+4                                       CP0-Hold(S386,S505)
	S508= CP0[ExCode]=5'h0d                                     CP0-Hold(S388,S505)
	S509= CtrlEPCIn=0                                           Premise(F250)
	S510= CtrlExCodeIn=0                                        Premise(F251)
	S511= CtrlIMMU=0                                            Premise(F252)
	S512= CtrlPC=0                                              Premise(F253)
	S513= CtrlPCInc=0                                           Premise(F254)
	S514= PC[CIA]=addr                                          PC-Hold(S392,S513)
	S515= CtrlIAddrReg=0                                        Premise(F255)
	S516= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S394,S515)
	S517= CtrlICache=0                                          Premise(F256)
	S518= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S396,S517)
	S519= CtrlIR_IMMU=0                                         Premise(F257)
	S520= CtrlICacheReg=0                                       Premise(F258)
	S521= CtrlIR_ID=0                                           Premise(F259)
	S522= [IR_ID]={0,rs,rt,code,48}                             IR_ID-Hold(S400,S521)
	S523= CtrlIMem=0                                            Premise(F260)
	S524= IMem[{pid,addr}]={0,rs,rt,code,48}                    IMem-Hold(S402,S523)
	S525= CtrlIRMux=0                                           Premise(F261)
	S526= CtrlGPR=0                                             Premise(F262)
	S527= GPR[rs]=a                                             GPR-Hold(S405,S526)
	S528= GPR[rt]=b                                             GPR-Hold(S406,S526)
	S529= CtrlA_EX=0                                            Premise(F263)
	S530= [A_EX]=FU(a)                                          A_EX-Hold(S408,S529)
	S531= CtrlB_EX=0                                            Premise(F264)
	S532= [B_EX]=FU(b)                                          B_EX-Hold(S410,S531)
	S533= CtrlIR_EX=0                                           Premise(F265)
	S534= [IR_EX]={0,rs,rt,code,48}                             IR_EX-Hold(S412,S533)
	S535= CtrlConditionReg_MEM=0                                Premise(F266)
	S536= [ConditionReg_MEM]=CompareS(FU(a),FU(b))              ConditionReg_MEM-Hold(S414,S535)
	S537= CtrlIR_MEM=0                                          Premise(F267)
	S538= [IR_MEM]={0,rs,rt,code,48}                            IR_MEM-Hold(S416,S537)
	S539= CtrlPIDReg=0                                          Premise(F268)
	S540= [PIDReg]=pid                                          PIDReg-Hold(S418,S539)
	S541= CtrlIR_DMMU1=0                                        Premise(F269)
	S542= [IR_DMMU1]={0,rs,rt,code,48}                          IR_DMMU1-Hold(S420,S541)
	S543= CtrlIR_WB=0                                           Premise(F270)
	S544= [IR_WB]={0,rs,rt,code,48}                             IR_WB-Hold(S422,S543)
	S545= CtrlA_MEM=0                                           Premise(F271)
	S546= CtrlA_WB=0                                            Premise(F272)
	S547= CtrlB_MEM=0                                           Premise(F273)
	S548= CtrlB_WB=0                                            Premise(F274)
	S549= CtrlConditionReg_DMMU1=0                              Premise(F275)
	S550= [ConditionReg_DMMU1]=CompareS(FU(a),FU(b))            ConditionReg_DMMU1-Hold(S428,S549)
	S551= CtrlConditionReg_WB=0                                 Premise(F276)
	S552= [ConditionReg_WB]=CompareS(FU(a),FU(b))               ConditionReg_WB-Hold(S430,S551)
	S553= CtrlIR_DMMU2=1                                        Premise(F277)
	S554= [IR_DMMU2]={0,rs,rt,code,48}                          IR_DMMU2-Write(S500,S553)
	S555= CtrlConditionReg_DMMU2=1                              Premise(F278)
	S556= [ConditionReg_DMMU2]=CompareS(FU(a),FU(b))            ConditionReg_DMMU2-Write(S502,S555)

MEM(DMMU2)	S557= CP0.ASID=pid                                          CP0-Read-ASID(S506)
	S558= CP0.EPC=addr+4                                        CP0-Read-EPC(S507)
	S559= PC.CIA=addr                                           PC-Out(S514)
	S560= PC.CIA31_28=addr[31:28]                               PC-Out(S514)
	S561= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S516)
	S562= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S516)
	S563= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S516)
	S564= IR_ID.Out={0,rs,rt,code,48}                           IR-Out(S522)
	S565= IR_ID.Out31_26=0                                      IR-Out(S522)
	S566= IR_ID.Out25_21=rs                                     IR-Out(S522)
	S567= IR_ID.Out20_16=rt                                     IR-Out(S522)
	S568= IR_ID.Out15_6=code                                    IR-Out(S522)
	S569= IR_ID.Out5_0=48                                       IR-Out(S522)
	S570= A_EX.Out=FU(a)                                        A_EX-Out(S530)
	S571= A_EX.Out1_0={FU(a)}[1:0]                              A_EX-Out(S530)
	S572= A_EX.Out4_0={FU(a)}[4:0]                              A_EX-Out(S530)
	S573= B_EX.Out=FU(b)                                        B_EX-Out(S532)
	S574= B_EX.Out1_0={FU(b)}[1:0]                              B_EX-Out(S532)
	S575= B_EX.Out4_0={FU(b)}[4:0]                              B_EX-Out(S532)
	S576= IR_EX.Out={0,rs,rt,code,48}                           IR_EX-Out(S534)
	S577= IR_EX.Out31_26=0                                      IR_EX-Out(S534)
	S578= IR_EX.Out25_21=rs                                     IR_EX-Out(S534)
	S579= IR_EX.Out20_16=rt                                     IR_EX-Out(S534)
	S580= IR_EX.Out15_6=code                                    IR_EX-Out(S534)
	S581= IR_EX.Out5_0=48                                       IR_EX-Out(S534)
	S582= ConditionReg_MEM.Out=CompareS(FU(a),FU(b))            ConditionReg_MEM-Out(S536)
	S583= ConditionReg_MEM.Out1_0={CompareS(FU(a),FU(b))}[1:0]  ConditionReg_MEM-Out(S536)
	S584= ConditionReg_MEM.Out4_0={CompareS(FU(a),FU(b))}[4:0]  ConditionReg_MEM-Out(S536)
	S585= IR_MEM.Out={0,rs,rt,code,48}                          IR_MEM-Out(S538)
	S586= IR_MEM.Out31_26=0                                     IR_MEM-Out(S538)
	S587= IR_MEM.Out25_21=rs                                    IR_MEM-Out(S538)
	S588= IR_MEM.Out20_16=rt                                    IR_MEM-Out(S538)
	S589= IR_MEM.Out15_6=code                                   IR_MEM-Out(S538)
	S590= IR_MEM.Out5_0=48                                      IR_MEM-Out(S538)
	S591= PIDReg.Out=pid                                        PIDReg-Out(S540)
	S592= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S540)
	S593= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S540)
	S594= IR_DMMU1.Out={0,rs,rt,code,48}                        IR_DMMU1-Out(S542)
	S595= IR_DMMU1.Out31_26=0                                   IR_DMMU1-Out(S542)
	S596= IR_DMMU1.Out25_21=rs                                  IR_DMMU1-Out(S542)
	S597= IR_DMMU1.Out20_16=rt                                  IR_DMMU1-Out(S542)
	S598= IR_DMMU1.Out15_6=code                                 IR_DMMU1-Out(S542)
	S599= IR_DMMU1.Out5_0=48                                    IR_DMMU1-Out(S542)
	S600= IR_WB.Out={0,rs,rt,code,48}                           IR-Out(S544)
	S601= IR_WB.Out31_26=0                                      IR-Out(S544)
	S602= IR_WB.Out25_21=rs                                     IR-Out(S544)
	S603= IR_WB.Out20_16=rt                                     IR-Out(S544)
	S604= IR_WB.Out15_6=code                                    IR-Out(S544)
	S605= IR_WB.Out5_0=48                                       IR-Out(S544)
	S606= ConditionReg_DMMU1.Out=CompareS(FU(a),FU(b))          ConditionReg_DMMU1-Out(S550)
	S607= ConditionReg_DMMU1.Out1_0={CompareS(FU(a),FU(b))}[1:0]ConditionReg_DMMU1-Out(S550)
	S608= ConditionReg_DMMU1.Out4_0={CompareS(FU(a),FU(b))}[4:0]ConditionReg_DMMU1-Out(S550)
	S609= ConditionReg_WB.Out=CompareS(FU(a),FU(b))             ConditionReg_WB-Out(S552)
	S610= ConditionReg_WB.Out1_0={CompareS(FU(a),FU(b))}[1:0]   ConditionReg_WB-Out(S552)
	S611= ConditionReg_WB.Out4_0={CompareS(FU(a),FU(b))}[4:0]   ConditionReg_WB-Out(S552)
	S612= IR_DMMU2.Out={0,rs,rt,code,48}                        IR_DMMU2-Out(S554)
	S613= IR_DMMU2.Out31_26=0                                   IR_DMMU2-Out(S554)
	S614= IR_DMMU2.Out25_21=rs                                  IR_DMMU2-Out(S554)
	S615= IR_DMMU2.Out20_16=rt                                  IR_DMMU2-Out(S554)
	S616= IR_DMMU2.Out15_6=code                                 IR_DMMU2-Out(S554)
	S617= IR_DMMU2.Out5_0=48                                    IR_DMMU2-Out(S554)
	S618= ConditionReg_DMMU2.Out=CompareS(FU(a),FU(b))          ConditionReg_DMMU2-Out(S556)
	S619= ConditionReg_DMMU2.Out1_0={CompareS(FU(a),FU(b))}[1:0]ConditionReg_DMMU2-Out(S556)
	S620= ConditionReg_DMMU2.Out4_0={CompareS(FU(a),FU(b))}[4:0]ConditionReg_DMMU2-Out(S556)
	S621= IR_DMMU2.Out=>FU.IR_DMMU2                             Premise(F279)
	S622= FU.IR_DMMU2={0,rs,rt,code,48}                         Path(S612,S621)
	S623= CU_DMMU2.IMMUHitOut=>CU_WB.IMMUHit                    Premise(F280)
	S624= CU_DMMU2.ICacheHitOut=>CU_WB.ICacheHit                Premise(F281)
	S625= IR_DMMU2.Out31_26=>CU_DMMU2.Op                        Premise(F282)
	S626= CU_DMMU2.Op=0                                         Path(S613,S625)
	S627= IR_DMMU2.Out5_0=>CU_DMMU2.IRFunc                      Premise(F283)
	S628= CU_DMMU2.IRFunc=48                                    Path(S617,S627)
	S629= IR_DMMU2.Out=>IR_WB.In                                Premise(F284)
	S630= IR_WB.In={0,rs,rt,code,48}                            Path(S612,S629)
	S631= ConditionReg_DMMU2.Out=>ConditionReg_WB.In            Premise(F285)
	S632= ConditionReg_WB.In=CompareS(FU(a),FU(b))              Path(S618,S631)
	S633= FU.InDMMU2_WReg=5'b00000                              Premise(F286)
	S634= CtrlASIDIn=0                                          Premise(F287)
	S635= CtrlCP0=0                                             Premise(F288)
	S636= CP0[ASID]=pid                                         CP0-Hold(S506,S635)
	S637= CP0[EPC]=addr+4                                       CP0-Hold(S507,S635)
	S638= CP0[ExCode]=5'h0d                                     CP0-Hold(S508,S635)
	S639= CtrlEPCIn=0                                           Premise(F289)
	S640= CtrlExCodeIn=0                                        Premise(F290)
	S641= CtrlIMMU=0                                            Premise(F291)
	S642= CtrlPC=0                                              Premise(F292)
	S643= CtrlPCInc=0                                           Premise(F293)
	S644= PC[CIA]=addr                                          PC-Hold(S514,S643)
	S645= CtrlIAddrReg=0                                        Premise(F294)
	S646= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S516,S645)
	S647= CtrlICache=0                                          Premise(F295)
	S648= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S518,S647)
	S649= CtrlIR_IMMU=0                                         Premise(F296)
	S650= CtrlICacheReg=0                                       Premise(F297)
	S651= CtrlIR_ID=0                                           Premise(F298)
	S652= [IR_ID]={0,rs,rt,code,48}                             IR_ID-Hold(S522,S651)
	S653= CtrlIMem=0                                            Premise(F299)
	S654= IMem[{pid,addr}]={0,rs,rt,code,48}                    IMem-Hold(S524,S653)
	S655= CtrlIRMux=0                                           Premise(F300)
	S656= CtrlGPR=0                                             Premise(F301)
	S657= GPR[rs]=a                                             GPR-Hold(S527,S656)
	S658= GPR[rt]=b                                             GPR-Hold(S528,S656)
	S659= CtrlA_EX=0                                            Premise(F302)
	S660= [A_EX]=FU(a)                                          A_EX-Hold(S530,S659)
	S661= CtrlB_EX=0                                            Premise(F303)
	S662= [B_EX]=FU(b)                                          B_EX-Hold(S532,S661)
	S663= CtrlIR_EX=0                                           Premise(F304)
	S664= [IR_EX]={0,rs,rt,code,48}                             IR_EX-Hold(S534,S663)
	S665= CtrlConditionReg_MEM=0                                Premise(F305)
	S666= [ConditionReg_MEM]=CompareS(FU(a),FU(b))              ConditionReg_MEM-Hold(S536,S665)
	S667= CtrlIR_MEM=0                                          Premise(F306)
	S668= [IR_MEM]={0,rs,rt,code,48}                            IR_MEM-Hold(S538,S667)
	S669= CtrlPIDReg=0                                          Premise(F307)
	S670= [PIDReg]=pid                                          PIDReg-Hold(S540,S669)
	S671= CtrlIR_DMMU1=0                                        Premise(F308)
	S672= [IR_DMMU1]={0,rs,rt,code,48}                          IR_DMMU1-Hold(S542,S671)
	S673= CtrlIR_WB=1                                           Premise(F309)
	S674= [IR_WB]={0,rs,rt,code,48}                             IR_WB-Write(S630,S673)
	S675= CtrlA_MEM=0                                           Premise(F310)
	S676= CtrlA_WB=0                                            Premise(F311)
	S677= CtrlB_MEM=0                                           Premise(F312)
	S678= CtrlB_WB=0                                            Premise(F313)
	S679= CtrlConditionReg_DMMU1=0                              Premise(F314)
	S680= [ConditionReg_DMMU1]=CompareS(FU(a),FU(b))            ConditionReg_DMMU1-Hold(S550,S679)
	S681= CtrlConditionReg_WB=1                                 Premise(F315)
	S682= [ConditionReg_WB]=CompareS(FU(a),FU(b))               ConditionReg_WB-Write(S632,S681)
	S683= CtrlIR_DMMU2=0                                        Premise(F316)
	S684= [IR_DMMU2]={0,rs,rt,code,48}                          IR_DMMU2-Hold(S554,S683)
	S685= CtrlConditionReg_DMMU2=0                              Premise(F317)
	S686= [ConditionReg_DMMU2]=CompareS(FU(a),FU(b))            ConditionReg_DMMU2-Hold(S556,S685)

WB	S687= CP0.ASID=pid                                          CP0-Read-ASID(S636)
	S688= CP0.EPC=addr+4                                        CP0-Read-EPC(S637)
	S689= PC.CIA=addr                                           PC-Out(S644)
	S690= PC.CIA31_28=addr[31:28]                               PC-Out(S644)
	S691= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S646)
	S692= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S646)
	S693= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S646)
	S694= IR_ID.Out={0,rs,rt,code,48}                           IR-Out(S652)
	S695= IR_ID.Out31_26=0                                      IR-Out(S652)
	S696= IR_ID.Out25_21=rs                                     IR-Out(S652)
	S697= IR_ID.Out20_16=rt                                     IR-Out(S652)
	S698= IR_ID.Out15_6=code                                    IR-Out(S652)
	S699= IR_ID.Out5_0=48                                       IR-Out(S652)
	S700= A_EX.Out=FU(a)                                        A_EX-Out(S660)
	S701= A_EX.Out1_0={FU(a)}[1:0]                              A_EX-Out(S660)
	S702= A_EX.Out4_0={FU(a)}[4:0]                              A_EX-Out(S660)
	S703= B_EX.Out=FU(b)                                        B_EX-Out(S662)
	S704= B_EX.Out1_0={FU(b)}[1:0]                              B_EX-Out(S662)
	S705= B_EX.Out4_0={FU(b)}[4:0]                              B_EX-Out(S662)
	S706= IR_EX.Out={0,rs,rt,code,48}                           IR_EX-Out(S664)
	S707= IR_EX.Out31_26=0                                      IR_EX-Out(S664)
	S708= IR_EX.Out25_21=rs                                     IR_EX-Out(S664)
	S709= IR_EX.Out20_16=rt                                     IR_EX-Out(S664)
	S710= IR_EX.Out15_6=code                                    IR_EX-Out(S664)
	S711= IR_EX.Out5_0=48                                       IR_EX-Out(S664)
	S712= ConditionReg_MEM.Out=CompareS(FU(a),FU(b))            ConditionReg_MEM-Out(S666)
	S713= ConditionReg_MEM.Out1_0={CompareS(FU(a),FU(b))}[1:0]  ConditionReg_MEM-Out(S666)
	S714= ConditionReg_MEM.Out4_0={CompareS(FU(a),FU(b))}[4:0]  ConditionReg_MEM-Out(S666)
	S715= IR_MEM.Out={0,rs,rt,code,48}                          IR_MEM-Out(S668)
	S716= IR_MEM.Out31_26=0                                     IR_MEM-Out(S668)
	S717= IR_MEM.Out25_21=rs                                    IR_MEM-Out(S668)
	S718= IR_MEM.Out20_16=rt                                    IR_MEM-Out(S668)
	S719= IR_MEM.Out15_6=code                                   IR_MEM-Out(S668)
	S720= IR_MEM.Out5_0=48                                      IR_MEM-Out(S668)
	S721= PIDReg.Out=pid                                        PIDReg-Out(S670)
	S722= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S670)
	S723= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S670)
	S724= IR_DMMU1.Out={0,rs,rt,code,48}                        IR_DMMU1-Out(S672)
	S725= IR_DMMU1.Out31_26=0                                   IR_DMMU1-Out(S672)
	S726= IR_DMMU1.Out25_21=rs                                  IR_DMMU1-Out(S672)
	S727= IR_DMMU1.Out20_16=rt                                  IR_DMMU1-Out(S672)
	S728= IR_DMMU1.Out15_6=code                                 IR_DMMU1-Out(S672)
	S729= IR_DMMU1.Out5_0=48                                    IR_DMMU1-Out(S672)
	S730= IR_WB.Out={0,rs,rt,code,48}                           IR-Out(S674)
	S731= IR_WB.Out31_26=0                                      IR-Out(S674)
	S732= IR_WB.Out25_21=rs                                     IR-Out(S674)
	S733= IR_WB.Out20_16=rt                                     IR-Out(S674)
	S734= IR_WB.Out15_6=code                                    IR-Out(S674)
	S735= IR_WB.Out5_0=48                                       IR-Out(S674)
	S736= ConditionReg_DMMU1.Out=CompareS(FU(a),FU(b))          ConditionReg_DMMU1-Out(S680)
	S737= ConditionReg_DMMU1.Out1_0={CompareS(FU(a),FU(b))}[1:0]ConditionReg_DMMU1-Out(S680)
	S738= ConditionReg_DMMU1.Out4_0={CompareS(FU(a),FU(b))}[4:0]ConditionReg_DMMU1-Out(S680)
	S739= ConditionReg_WB.Out=CompareS(FU(a),FU(b))             ConditionReg_WB-Out(S682)
	S740= ConditionReg_WB.Out1_0={CompareS(FU(a),FU(b))}[1:0]   ConditionReg_WB-Out(S682)
	S741= ConditionReg_WB.Out4_0={CompareS(FU(a),FU(b))}[4:0]   ConditionReg_WB-Out(S682)
	S742= IR_DMMU2.Out={0,rs,rt,code,48}                        IR_DMMU2-Out(S684)
	S743= IR_DMMU2.Out31_26=0                                   IR_DMMU2-Out(S684)
	S744= IR_DMMU2.Out25_21=rs                                  IR_DMMU2-Out(S684)
	S745= IR_DMMU2.Out20_16=rt                                  IR_DMMU2-Out(S684)
	S746= IR_DMMU2.Out15_6=code                                 IR_DMMU2-Out(S684)
	S747= IR_DMMU2.Out5_0=48                                    IR_DMMU2-Out(S684)
	S748= ConditionReg_DMMU2.Out=CompareS(FU(a),FU(b))          ConditionReg_DMMU2-Out(S686)
	S749= ConditionReg_DMMU2.Out1_0={CompareS(FU(a),FU(b))}[1:0]ConditionReg_DMMU2-Out(S686)
	S750= ConditionReg_DMMU2.Out4_0={CompareS(FU(a),FU(b))}[4:0]ConditionReg_DMMU2-Out(S686)
	S751= IR_WB.Out=>FU.IR_WB                                   Premise(F318)
	S752= FU.IR_WB={0,rs,rt,code,48}                            Path(S730,S751)
	S753= IR_WB.Out31_26=>CU_WB.Op                              Premise(F319)
	S754= CU_WB.Op=0                                            Path(S731,S753)
	S755= IR_WB.Out5_0=>CU_WB.IRFunc                            Premise(F320)
	S756= CU_WB.IRFunc=48                                       Path(S735,S755)
	S757= FU.InWB_WReg=5'b00000                                 Premise(F321)
	S758= CtrlASIDIn=0                                          Premise(F322)
	S759= CtrlCP0=0                                             Premise(F323)
	S760= CP0[ASID]=pid                                         CP0-Hold(S636,S759)
	S761= CP0[EPC]=addr+4                                       CP0-Hold(S637,S759)
	S762= CP0[ExCode]=5'h0d                                     CP0-Hold(S638,S759)
	S763= CtrlEPCIn=0                                           Premise(F324)
	S764= CtrlExCodeIn=0                                        Premise(F325)
	S765= CtrlIMMU=0                                            Premise(F326)
	S766= CtrlPC=0                                              Premise(F327)
	S767= CtrlPCInc=0                                           Premise(F328)
	S768= PC[CIA]=addr                                          PC-Hold(S644,S767)
	S769= CtrlIAddrReg=0                                        Premise(F329)
	S770= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S646,S769)
	S771= CtrlICache=0                                          Premise(F330)
	S772= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S648,S771)
	S773= CtrlIR_IMMU=0                                         Premise(F331)
	S774= CtrlICacheReg=0                                       Premise(F332)
	S775= CtrlIR_ID=0                                           Premise(F333)
	S776= [IR_ID]={0,rs,rt,code,48}                             IR_ID-Hold(S652,S775)
	S777= CtrlIMem=0                                            Premise(F334)
	S778= IMem[{pid,addr}]={0,rs,rt,code,48}                    IMem-Hold(S654,S777)
	S779= CtrlIRMux=0                                           Premise(F335)
	S780= CtrlGPR=0                                             Premise(F336)
	S781= GPR[rs]=a                                             GPR-Hold(S657,S780)
	S782= GPR[rt]=b                                             GPR-Hold(S658,S780)
	S783= CtrlA_EX=0                                            Premise(F337)
	S784= [A_EX]=FU(a)                                          A_EX-Hold(S660,S783)
	S785= CtrlB_EX=0                                            Premise(F338)
	S786= [B_EX]=FU(b)                                          B_EX-Hold(S662,S785)
	S787= CtrlIR_EX=0                                           Premise(F339)
	S788= [IR_EX]={0,rs,rt,code,48}                             IR_EX-Hold(S664,S787)
	S789= CtrlConditionReg_MEM=0                                Premise(F340)
	S790= [ConditionReg_MEM]=CompareS(FU(a),FU(b))              ConditionReg_MEM-Hold(S666,S789)
	S791= CtrlIR_MEM=0                                          Premise(F341)
	S792= [IR_MEM]={0,rs,rt,code,48}                            IR_MEM-Hold(S668,S791)
	S793= CtrlPIDReg=0                                          Premise(F342)
	S794= [PIDReg]=pid                                          PIDReg-Hold(S670,S793)
	S795= CtrlIR_DMMU1=0                                        Premise(F343)
	S796= [IR_DMMU1]={0,rs,rt,code,48}                          IR_DMMU1-Hold(S672,S795)
	S797= CtrlIR_WB=0                                           Premise(F344)
	S798= [IR_WB]={0,rs,rt,code,48}                             IR_WB-Hold(S674,S797)
	S799= CtrlA_MEM=0                                           Premise(F345)
	S800= CtrlA_WB=0                                            Premise(F346)
	S801= CtrlB_MEM=0                                           Premise(F347)
	S802= CtrlB_WB=0                                            Premise(F348)
	S803= CtrlConditionReg_DMMU1=0                              Premise(F349)
	S804= [ConditionReg_DMMU1]=CompareS(FU(a),FU(b))            ConditionReg_DMMU1-Hold(S680,S803)
	S805= CtrlConditionReg_WB=0                                 Premise(F350)
	S806= [ConditionReg_WB]=CompareS(FU(a),FU(b))               ConditionReg_WB-Hold(S682,S805)
	S807= CtrlIR_DMMU2=0                                        Premise(F351)
	S808= [IR_DMMU2]={0,rs,rt,code,48}                          IR_DMMU2-Hold(S684,S807)
	S809= CtrlConditionReg_DMMU2=0                              Premise(F352)
	S810= [ConditionReg_DMMU2]=CompareS(FU(a),FU(b))            ConditionReg_DMMU2-Hold(S686,S809)

POST	S760= CP0[ASID]=pid                                         CP0-Hold(S636,S759)
	S761= CP0[EPC]=addr+4                                       CP0-Hold(S637,S759)
	S762= CP0[ExCode]=5'h0d                                     CP0-Hold(S638,S759)
	S768= PC[CIA]=addr                                          PC-Hold(S644,S767)
	S770= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S646,S769)
	S772= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S648,S771)
	S776= [IR_ID]={0,rs,rt,code,48}                             IR_ID-Hold(S652,S775)
	S778= IMem[{pid,addr}]={0,rs,rt,code,48}                    IMem-Hold(S654,S777)
	S781= GPR[rs]=a                                             GPR-Hold(S657,S780)
	S782= GPR[rt]=b                                             GPR-Hold(S658,S780)
	S784= [A_EX]=FU(a)                                          A_EX-Hold(S660,S783)
	S786= [B_EX]=FU(b)                                          B_EX-Hold(S662,S785)
	S788= [IR_EX]={0,rs,rt,code,48}                             IR_EX-Hold(S664,S787)
	S790= [ConditionReg_MEM]=CompareS(FU(a),FU(b))              ConditionReg_MEM-Hold(S666,S789)
	S792= [IR_MEM]={0,rs,rt,code,48}                            IR_MEM-Hold(S668,S791)
	S794= [PIDReg]=pid                                          PIDReg-Hold(S670,S793)
	S796= [IR_DMMU1]={0,rs,rt,code,48}                          IR_DMMU1-Hold(S672,S795)
	S798= [IR_WB]={0,rs,rt,code,48}                             IR_WB-Hold(S674,S797)
	S804= [ConditionReg_DMMU1]=CompareS(FU(a),FU(b))            ConditionReg_DMMU1-Hold(S680,S803)
	S806= [ConditionReg_WB]=CompareS(FU(a),FU(b))               ConditionReg_WB-Hold(S682,S805)
	S808= [IR_DMMU2]={0,rs,rt,code,48}                          IR_DMMU2-Hold(S684,S807)
	S810= [ConditionReg_DMMU2]=CompareS(FU(a),FU(b))            ConditionReg_DMMU2-Hold(S686,S809)

