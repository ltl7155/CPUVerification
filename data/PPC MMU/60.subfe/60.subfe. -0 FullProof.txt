
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,273}                      Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)
	S6= XER[CA]=ca                                              Premise(F6)

IF	S7= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S8= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S9= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S10= PC.Out=addr                                            PC-Out(S1)
	S11= XER.SOOut=so                                           XER-SO-Out(S5)
	S12= XER.CAOut=ca                                           XER-CA-Out(S6)
	S13= PIDReg.Out=>IMMU.PID                                   Premise(F7)
	S14= IMMU.PID=pid                                           Path(S7,S13)
	S15= PC.Out=>IMMU.IEA                                       Premise(F8)
	S16= IMMU.IEA=addr                                          Path(S10,S15)
	S17= IMMU.Addr={pid,addr}                                   IMMU-Search(S14,S16)
	S18= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S14,S16)
	S19= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S20= IAddrReg.In={pid,addr}                                 Path(S17,S19)
	S21= IMMU.Hit=>IMMUHitReg.In                                Premise(F10)
	S22= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S18,S21)
	S23= PC.Out=>ICache.IEA                                     Premise(F11)
	S24= ICache.IEA=addr                                        Path(S10,S23)
	S25= ICache.Hit=ICacheHit(addr)                             ICache-Search(S24)
	S26= ICache.Out=>ICacheReg.In                               Premise(F12)
	S27= ICache.Hit=>ICacheHitReg.In                            Premise(F13)
	S28= ICacheHitReg.In=ICacheHit(addr)                        Path(S25,S27)
	S29= IMMUHitReg.Out=>CU.IMemHit                             Premise(F14)
	S30= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F15)
	S31= IAddrReg.Out=>IMem.RAddr                               Premise(F16)
	S32= IMem.Out=>IRMux.MemData                                Premise(F17)
	S33= ICacheReg.Out=>IRMux.CacheData                         Premise(F18)
	S34= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F19)
	S35= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F20)
	S36= IRMux.Out=>IR.In                                       Premise(F21)
	S37= IMem.MEM8WordOut=>ICache.WData                         Premise(F22)
	S38= PC.Out=>ICache.IEA                                     Premise(F23)
	S39= IR.Out0_5=>CU.Op                                       Premise(F24)
	S40= IR.Out11_15=>GPRegs.RReg1                              Premise(F25)
	S41= IR.Out16_20=>GPRegs.RReg2                              Premise(F26)
	S42= IR.Out21_31=>CU.IRFunc                                 Premise(F27)
	S43= GPRegs.Rdata1=>A.In                                    Premise(F28)
	S44= GPRegs.Rdata2=>B.In                                    Premise(F29)
	S45= A.Out=>ALU.A                                           Premise(F30)
	S46= B.Out=>ALU.B                                           Premise(F31)
	S47= XER.CAOut=>ALU.CAIn                                    Premise(F32)
	S48= ALU.CAIn=ca                                            Path(S12,S47)
	S49= CU.Func=>ALU.Func                                      Premise(F33)
	S50= ALU.Out=>ALUOut.In                                     Premise(F34)
	S51= ALU.CA=>CAReg.In                                       Premise(F35)
	S52= ALU.CMP=>DataCmb.A                                     Premise(F36)
	S53= XER.SOOut=>DataCmb.B                                   Premise(F37)
	S54= DataCmb.B=so                                           Path(S11,S53)
	S55= DataCmb.Out=>DR4bit.In                                 Premise(F38)
	S56= IR.Out6_10=>GPRegs.WReg                                Premise(F39)
	S57= ALUOut.Out=>GPRegs.WData                               Premise(F40)
	S58= DR4bit.Out=>CRRegs.CR0In                               Premise(F41)
	S59= CAReg.Out=>XER.CAIn                                    Premise(F42)
	S60= CtrlPIDReg=0                                           Premise(F43)
	S61= [PIDReg]=pid                                           PIDReg-Hold(S0,S60)
	S62= CtrlIMMU=0                                             Premise(F44)
	S63= CtrlPC=0                                               Premise(F45)
	S64= CtrlPCInc=0                                            Premise(F46)
	S65= PC[Out]=addr                                           PC-Hold(S1,S63,S64)
	S66= CtrlIAddrReg=1                                         Premise(F47)
	S67= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S20,S66)
	S68= CtrlIMMUHitReg=1                                       Premise(F48)
	S69= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S22,S68)
	S70= CtrlICache=0                                           Premise(F49)
	S71= CtrlICacheReg=1                                        Premise(F50)
	S72= CtrlICacheHitReg=1                                     Premise(F51)
	S73= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S28,S72)
	S74= CtrlIMem=0                                             Premise(F52)
	S75= IMem[{pid,addr}]={31,rT,rA,rB,273}                     IMem-Hold(S2,S74)
	S76= CtrlIRMux=0                                            Premise(F53)
	S77= CtrlIR=0                                               Premise(F54)
	S78= CtrlGPRegs=0                                           Premise(F55)
	S79= GPRegs[rA]=a                                           GPRegs-Hold(S3,S78)
	S80= GPRegs[rB]=b                                           GPRegs-Hold(S4,S78)
	S81= CtrlA=0                                                Premise(F56)
	S82= CtrlB=0                                                Premise(F57)
	S83= CtrlXERSO=0                                            Premise(F58)
	S84= XER[SO]=so                                             XER-SO-Hold(S5,S83)
	S85= CtrlXEROV=0                                            Premise(F59)
	S86= CtrlXERCA=0                                            Premise(F60)
	S87= XER[CA]=ca                                             XER-CA-Hold(S6,S86)
	S88= CtrlALUOut=0                                           Premise(F61)
	S89= CtrlCAReg=0                                            Premise(F62)
	S90= CtrlDR4bit=0                                           Premise(F63)
	S91= CtrlCRRegs=0                                           Premise(F64)
	S92= CtrlCRRegsCR0=0                                        Premise(F65)
	S93= CtrlCRRegsW4bitRegs=0                                  Premise(F66)
	S94= CtrlCRRegsW1bitRegs=0                                  Premise(F67)

IMMU	S95= PIDReg.Out=pid                                         PIDReg-Out(S61)
	S96= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S61)
	S97= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S61)
	S98= PC.Out=addr                                            PC-Out(S65)
	S99= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S67)
	S100= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S67)
	S101= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S67)
	S102= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S69)
	S103= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S69)
	S104= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S69)
	S105= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S73)
	S106= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S73)
	S107= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S73)
	S108= XER.SOOut=so                                          XER-SO-Out(S84)
	S109= XER.CAOut=ca                                          XER-CA-Out(S87)
	S110= PIDReg.Out=>IMMU.PID                                  Premise(F68)
	S111= IMMU.PID=pid                                          Path(S95,S110)
	S112= PC.Out=>IMMU.IEA                                      Premise(F69)
	S113= IMMU.IEA=addr                                         Path(S98,S112)
	S114= IMMU.Addr={pid,addr}                                  IMMU-Search(S111,S113)
	S115= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S111,S113)
	S116= IMMU.Addr=>IAddrReg.In                                Premise(F70)
	S117= IAddrReg.In={pid,addr}                                Path(S114,S116)
	S118= IMMU.Hit=>IMMUHitReg.In                               Premise(F71)
	S119= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S115,S118)
	S120= PC.Out=>ICache.IEA                                    Premise(F72)
	S121= ICache.IEA=addr                                       Path(S98,S120)
	S122= ICache.Hit=ICacheHit(addr)                            ICache-Search(S121)
	S123= ICache.Out=>ICacheReg.In                              Premise(F73)
	S124= ICache.Hit=>ICacheHitReg.In                           Premise(F74)
	S125= ICacheHitReg.In=ICacheHit(addr)                       Path(S122,S124)
	S126= IMMUHitReg.Out=>CU.IMemHit                            Premise(F75)
	S127= CU.IMemHit=IMMUHit(pid,addr)                          Path(S102,S126)
	S128= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F76)
	S129= CU.ICacheHit=ICacheHit(addr)                          Path(S105,S128)
	S130= IAddrReg.Out=>IMem.RAddr                              Premise(F77)
	S131= IMem.RAddr={pid,addr}                                 Path(S99,S130)
	S132= IMem.Out={31,rT,rA,rB,273}                            IMem-Read(S131,S75)
	S133= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S131,S75)
	S134= IMem.Out=>IRMux.MemData                               Premise(F78)
	S135= IRMux.MemData={31,rT,rA,rB,273}                       Path(S132,S134)
	S136= IRMux.Out={31,rT,rA,rB,273}                           IRMux-Select(S135)
	S137= ICacheReg.Out=>IRMux.CacheData                        Premise(F79)
	S138= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F80)
	S139= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S102,S138)
	S140= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F81)
	S141= IRMux.CacheSel=ICacheHit(addr)                        Path(S105,S140)
	S142= IRMux.Out=>IR.In                                      Premise(F82)
	S143= IR.In={31,rT,rA,rB,273}                               Path(S136,S142)
	S144= IMem.MEM8WordOut=>ICache.WData                        Premise(F83)
	S145= ICache.WData=IMemGet8Word({pid,addr})                 Path(S133,S144)
	S146= PC.Out=>ICache.IEA                                    Premise(F84)
	S147= IR.Out0_5=>CU.Op                                      Premise(F85)
	S148= IR.Out11_15=>GPRegs.RReg1                             Premise(F86)
	S149= IR.Out16_20=>GPRegs.RReg2                             Premise(F87)
	S150= IR.Out21_31=>CU.IRFunc                                Premise(F88)
	S151= GPRegs.Rdata1=>A.In                                   Premise(F89)
	S152= GPRegs.Rdata2=>B.In                                   Premise(F90)
	S153= A.Out=>ALU.A                                          Premise(F91)
	S154= B.Out=>ALU.B                                          Premise(F92)
	S155= XER.CAOut=>ALU.CAIn                                   Premise(F93)
	S156= ALU.CAIn=ca                                           Path(S109,S155)
	S157= CU.Func=>ALU.Func                                     Premise(F94)
	S158= ALU.Out=>ALUOut.In                                    Premise(F95)
	S159= ALU.CA=>CAReg.In                                      Premise(F96)
	S160= ALU.CMP=>DataCmb.A                                    Premise(F97)
	S161= XER.SOOut=>DataCmb.B                                  Premise(F98)
	S162= DataCmb.B=so                                          Path(S108,S161)
	S163= DataCmb.Out=>DR4bit.In                                Premise(F99)
	S164= IR.Out6_10=>GPRegs.WReg                               Premise(F100)
	S165= ALUOut.Out=>GPRegs.WData                              Premise(F101)
	S166= DR4bit.Out=>CRRegs.CR0In                              Premise(F102)
	S167= CAReg.Out=>XER.CAIn                                   Premise(F103)
	S168= CtrlPIDReg=0                                          Premise(F104)
	S169= [PIDReg]=pid                                          PIDReg-Hold(S61,S168)
	S170= CtrlIMMU=0                                            Premise(F105)
	S171= CtrlPC=0                                              Premise(F106)
	S172= CtrlPCInc=1                                           Premise(F107)
	S173= PC[Out]=addr+4                                        PC-Inc(S65,S171,S172)
	S174= PC[CIA]=addr                                          PC-Inc(S65,S171,S172)
	S175= CtrlIAddrReg=0                                        Premise(F108)
	S176= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S67,S175)
	S177= CtrlIMMUHitReg=0                                      Premise(F109)
	S178= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S69,S177)
	S179= CtrlICache=1                                          Premise(F110)
	S180= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S121,S145,S179)
	S181= CtrlICacheReg=0                                       Premise(F111)
	S182= CtrlICacheHitReg=0                                    Premise(F112)
	S183= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S73,S182)
	S184= CtrlIMem=0                                            Premise(F113)
	S185= IMem[{pid,addr}]={31,rT,rA,rB,273}                    IMem-Hold(S75,S184)
	S186= CtrlIRMux=0                                           Premise(F114)
	S187= CtrlIR=1                                              Premise(F115)
	S188= [IR]={31,rT,rA,rB,273}                                IR-Write(S143,S187)
	S189= CtrlGPRegs=0                                          Premise(F116)
	S190= GPRegs[rA]=a                                          GPRegs-Hold(S79,S189)
	S191= GPRegs[rB]=b                                          GPRegs-Hold(S80,S189)
	S192= CtrlA=0                                               Premise(F117)
	S193= CtrlB=0                                               Premise(F118)
	S194= CtrlXERSO=0                                           Premise(F119)
	S195= XER[SO]=so                                            XER-SO-Hold(S84,S194)
	S196= CtrlXEROV=0                                           Premise(F120)
	S197= CtrlXERCA=0                                           Premise(F121)
	S198= XER[CA]=ca                                            XER-CA-Hold(S87,S197)
	S199= CtrlALUOut=0                                          Premise(F122)
	S200= CtrlCAReg=0                                           Premise(F123)
	S201= CtrlDR4bit=0                                          Premise(F124)
	S202= CtrlCRRegs=0                                          Premise(F125)
	S203= CtrlCRRegsCR0=0                                       Premise(F126)
	S204= CtrlCRRegsW4bitRegs=0                                 Premise(F127)
	S205= CtrlCRRegsW1bitRegs=0                                 Premise(F128)

ID	S206= PIDReg.Out=pid                                        PIDReg-Out(S169)
	S207= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S169)
	S208= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S169)
	S209= PC.Out=addr+4                                         PC-Out(S173)
	S210= PC.CIA=addr                                           PC-Out(S174)
	S211= PC.CIA31_28=addr[31:28]                               PC-Out(S174)
	S212= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S176)
	S213= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S176)
	S214= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S176)
	S215= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S178)
	S216= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S178)
	S217= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S178)
	S218= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S183)
	S219= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S183)
	S220= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S183)
	S221= IR.Out0_5=31                                          IR-Out(S188)
	S222= IR.Out6_10=rT                                         IR-Out(S188)
	S223= IR.Out11_15=rA                                        IR-Out(S188)
	S224= IR.Out16_20=rB                                        IR-Out(S188)
	S225= IR.Out21_31=273                                       IR-Out(S188)
	S226= XER.SOOut=so                                          XER-SO-Out(S195)
	S227= XER.CAOut=ca                                          XER-CA-Out(S198)
	S228= PIDReg.Out=>IMMU.PID                                  Premise(F129)
	S229= IMMU.PID=pid                                          Path(S206,S228)
	S230= PC.Out=>IMMU.IEA                                      Premise(F130)
	S231= IMMU.IEA=addr+4                                       Path(S209,S230)
	S232= IMMU.Addr={pid,addr+4}                                IMMU-Search(S229,S231)
	S233= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S229,S231)
	S234= IMMU.Addr=>IAddrReg.In                                Premise(F131)
	S235= IAddrReg.In={pid,addr+4}                              Path(S232,S234)
	S236= IMMU.Hit=>IMMUHitReg.In                               Premise(F132)
	S237= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S233,S236)
	S238= PC.Out=>ICache.IEA                                    Premise(F133)
	S239= ICache.IEA=addr+4                                     Path(S209,S238)
	S240= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S239)
	S241= ICache.Out=>ICacheReg.In                              Premise(F134)
	S242= ICache.Hit=>ICacheHitReg.In                           Premise(F135)
	S243= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S240,S242)
	S244= IMMUHitReg.Out=>CU.IMemHit                            Premise(F136)
	S245= CU.IMemHit=IMMUHit(pid,addr)                          Path(S215,S244)
	S246= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F137)
	S247= CU.ICacheHit=ICacheHit(addr)                          Path(S218,S246)
	S248= IAddrReg.Out=>IMem.RAddr                              Premise(F138)
	S249= IMem.RAddr={pid,addr}                                 Path(S212,S248)
	S250= IMem.Out={31,rT,rA,rB,273}                            IMem-Read(S249,S185)
	S251= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S249,S185)
	S252= IMem.Out=>IRMux.MemData                               Premise(F139)
	S253= IRMux.MemData={31,rT,rA,rB,273}                       Path(S250,S252)
	S254= IRMux.Out={31,rT,rA,rB,273}                           IRMux-Select(S253)
	S255= ICacheReg.Out=>IRMux.CacheData                        Premise(F140)
	S256= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F141)
	S257= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S215,S256)
	S258= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F142)
	S259= IRMux.CacheSel=ICacheHit(addr)                        Path(S218,S258)
	S260= IRMux.Out=>IR.In                                      Premise(F143)
	S261= IR.In={31,rT,rA,rB,273}                               Path(S254,S260)
	S262= IMem.MEM8WordOut=>ICache.WData                        Premise(F144)
	S263= ICache.WData=IMemGet8Word({pid,addr})                 Path(S251,S262)
	S264= PC.Out=>ICache.IEA                                    Premise(F145)
	S265= IR.Out0_5=>CU.Op                                      Premise(F146)
	S266= CU.Op=31                                              Path(S221,S265)
	S267= IR.Out11_15=>GPRegs.RReg1                             Premise(F147)
	S268= GPRegs.RReg1=rA                                       Path(S223,S267)
	S269= GPRegs.Rdata1=a                                       GPRegs-Read(S268,S190)
	S270= IR.Out16_20=>GPRegs.RReg2                             Premise(F148)
	S271= GPRegs.RReg2=rB                                       Path(S224,S270)
	S272= GPRegs.Rdata2=b                                       GPRegs-Read(S271,S191)
	S273= IR.Out21_31=>CU.IRFunc                                Premise(F149)
	S274= CU.IRFunc=273                                         Path(S225,S273)
	S275= CU.Func=alu_subfe                                     CU(S266,S274)
	S276= GPRegs.Rdata1=>A.In                                   Premise(F150)
	S277= A.In=a                                                Path(S269,S276)
	S278= GPRegs.Rdata2=>B.In                                   Premise(F151)
	S279= B.In=b                                                Path(S272,S278)
	S280= A.Out=>ALU.A                                          Premise(F152)
	S281= B.Out=>ALU.B                                          Premise(F153)
	S282= XER.CAOut=>ALU.CAIn                                   Premise(F154)
	S283= ALU.CAIn=ca                                           Path(S227,S282)
	S284= CU.Func=>ALU.Func                                     Premise(F155)
	S285= ALU.Func=alu_subfe                                    Path(S275,S284)
	S286= ALU.Out=>ALUOut.In                                    Premise(F156)
	S287= ALU.CA=>CAReg.In                                      Premise(F157)
	S288= ALU.CMP=>DataCmb.A                                    Premise(F158)
	S289= XER.SOOut=>DataCmb.B                                  Premise(F159)
	S290= DataCmb.B=so                                          Path(S226,S289)
	S291= DataCmb.Out=>DR4bit.In                                Premise(F160)
	S292= IR.Out6_10=>GPRegs.WReg                               Premise(F161)
	S293= GPRegs.WReg=rT                                        Path(S222,S292)
	S294= ALUOut.Out=>GPRegs.WData                              Premise(F162)
	S295= DR4bit.Out=>CRRegs.CR0In                              Premise(F163)
	S296= CAReg.Out=>XER.CAIn                                   Premise(F164)
	S297= CtrlPIDReg=0                                          Premise(F165)
	S298= [PIDReg]=pid                                          PIDReg-Hold(S169,S297)
	S299= CtrlIMMU=0                                            Premise(F166)
	S300= CtrlPC=0                                              Premise(F167)
	S301= CtrlPCInc=0                                           Premise(F168)
	S302= PC[CIA]=addr                                          PC-Hold(S174,S301)
	S303= PC[Out]=addr+4                                        PC-Hold(S173,S300,S301)
	S304= CtrlIAddrReg=0                                        Premise(F169)
	S305= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S176,S304)
	S306= CtrlIMMUHitReg=0                                      Premise(F170)
	S307= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S178,S306)
	S308= CtrlICache=0                                          Premise(F171)
	S309= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S180,S308)
	S310= CtrlICacheReg=0                                       Premise(F172)
	S311= CtrlICacheHitReg=0                                    Premise(F173)
	S312= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S183,S311)
	S313= CtrlIMem=0                                            Premise(F174)
	S314= IMem[{pid,addr}]={31,rT,rA,rB,273}                    IMem-Hold(S185,S313)
	S315= CtrlIRMux=0                                           Premise(F175)
	S316= CtrlIR=0                                              Premise(F176)
	S317= [IR]={31,rT,rA,rB,273}                                IR-Hold(S188,S316)
	S318= CtrlGPRegs=0                                          Premise(F177)
	S319= GPRegs[rA]=a                                          GPRegs-Hold(S190,S318)
	S320= GPRegs[rB]=b                                          GPRegs-Hold(S191,S318)
	S321= CtrlA=1                                               Premise(F178)
	S322= [A]=a                                                 A-Write(S277,S321)
	S323= CtrlB=1                                               Premise(F179)
	S324= [B]=b                                                 B-Write(S279,S323)
	S325= CtrlXERSO=0                                           Premise(F180)
	S326= XER[SO]=so                                            XER-SO-Hold(S195,S325)
	S327= CtrlXEROV=0                                           Premise(F181)
	S328= CtrlXERCA=0                                           Premise(F182)
	S329= XER[CA]=ca                                            XER-CA-Hold(S198,S328)
	S330= CtrlALUOut=0                                          Premise(F183)
	S331= CtrlCAReg=0                                           Premise(F184)
	S332= CtrlDR4bit=0                                          Premise(F185)
	S333= CtrlCRRegs=0                                          Premise(F186)
	S334= CtrlCRRegsCR0=0                                       Premise(F187)
	S335= CtrlCRRegsW4bitRegs=0                                 Premise(F188)
	S336= CtrlCRRegsW1bitRegs=0                                 Premise(F189)

EX	S337= PIDReg.Out=pid                                        PIDReg-Out(S298)
	S338= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S298)
	S339= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S298)
	S340= PC.CIA=addr                                           PC-Out(S302)
	S341= PC.CIA31_28=addr[31:28]                               PC-Out(S302)
	S342= PC.Out=addr+4                                         PC-Out(S303)
	S343= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S305)
	S344= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S305)
	S345= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S305)
	S346= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S307)
	S347= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S307)
	S348= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S307)
	S349= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S312)
	S350= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S312)
	S351= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S312)
	S352= IR.Out0_5=31                                          IR-Out(S317)
	S353= IR.Out6_10=rT                                         IR-Out(S317)
	S354= IR.Out11_15=rA                                        IR-Out(S317)
	S355= IR.Out16_20=rB                                        IR-Out(S317)
	S356= IR.Out21_31=273                                       IR-Out(S317)
	S357= A.Out=a                                               A-Out(S322)
	S358= A.Out26_31=a[26:31]                                   A-Out(S322)
	S359= A.Out30_31=a[30:31]                                   A-Out(S322)
	S360= B.Out=b                                               B-Out(S324)
	S361= B.Out26_31=b[26:31]                                   B-Out(S324)
	S362= B.Out30_31=b[30:31]                                   B-Out(S324)
	S363= XER.SOOut=so                                          XER-SO-Out(S326)
	S364= XER.CAOut=ca                                          XER-CA-Out(S329)
	S365= PIDReg.Out=>IMMU.PID                                  Premise(F190)
	S366= IMMU.PID=pid                                          Path(S337,S365)
	S367= PC.Out=>IMMU.IEA                                      Premise(F191)
	S368= IMMU.IEA=addr+4                                       Path(S342,S367)
	S369= IMMU.Addr={pid,addr+4}                                IMMU-Search(S366,S368)
	S370= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S366,S368)
	S371= IMMU.Addr=>IAddrReg.In                                Premise(F192)
	S372= IAddrReg.In={pid,addr+4}                              Path(S369,S371)
	S373= IMMU.Hit=>IMMUHitReg.In                               Premise(F193)
	S374= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S370,S373)
	S375= PC.Out=>ICache.IEA                                    Premise(F194)
	S376= ICache.IEA=addr+4                                     Path(S342,S375)
	S377= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S376)
	S378= ICache.Out=>ICacheReg.In                              Premise(F195)
	S379= ICache.Hit=>ICacheHitReg.In                           Premise(F196)
	S380= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S377,S379)
	S381= IMMUHitReg.Out=>CU.IMemHit                            Premise(F197)
	S382= CU.IMemHit=IMMUHit(pid,addr)                          Path(S346,S381)
	S383= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F198)
	S384= CU.ICacheHit=ICacheHit(addr)                          Path(S349,S383)
	S385= IAddrReg.Out=>IMem.RAddr                              Premise(F199)
	S386= IMem.RAddr={pid,addr}                                 Path(S343,S385)
	S387= IMem.Out={31,rT,rA,rB,273}                            IMem-Read(S386,S314)
	S388= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S386,S314)
	S389= IMem.Out=>IRMux.MemData                               Premise(F200)
	S390= IRMux.MemData={31,rT,rA,rB,273}                       Path(S387,S389)
	S391= IRMux.Out={31,rT,rA,rB,273}                           IRMux-Select(S390)
	S392= ICacheReg.Out=>IRMux.CacheData                        Premise(F201)
	S393= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F202)
	S394= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S346,S393)
	S395= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F203)
	S396= IRMux.CacheSel=ICacheHit(addr)                        Path(S349,S395)
	S397= IRMux.Out=>IR.In                                      Premise(F204)
	S398= IR.In={31,rT,rA,rB,273}                               Path(S391,S397)
	S399= IMem.MEM8WordOut=>ICache.WData                        Premise(F205)
	S400= ICache.WData=IMemGet8Word({pid,addr})                 Path(S388,S399)
	S401= PC.Out=>ICache.IEA                                    Premise(F206)
	S402= IR.Out0_5=>CU.Op                                      Premise(F207)
	S403= CU.Op=31                                              Path(S352,S402)
	S404= IR.Out11_15=>GPRegs.RReg1                             Premise(F208)
	S405= GPRegs.RReg1=rA                                       Path(S354,S404)
	S406= GPRegs.Rdata1=a                                       GPRegs-Read(S405,S319)
	S407= IR.Out16_20=>GPRegs.RReg2                             Premise(F209)
	S408= GPRegs.RReg2=rB                                       Path(S355,S407)
	S409= GPRegs.Rdata2=b                                       GPRegs-Read(S408,S320)
	S410= IR.Out21_31=>CU.IRFunc                                Premise(F210)
	S411= CU.IRFunc=273                                         Path(S356,S410)
	S412= CU.Func=alu_subfe                                     CU(S403,S411)
	S413= GPRegs.Rdata1=>A.In                                   Premise(F211)
	S414= A.In=a                                                Path(S406,S413)
	S415= GPRegs.Rdata2=>B.In                                   Premise(F212)
	S416= B.In=b                                                Path(S409,S415)
	S417= A.Out=>ALU.A                                          Premise(F213)
	S418= ALU.A=a                                               Path(S357,S417)
	S419= B.Out=>ALU.B                                          Premise(F214)
	S420= ALU.B=b                                               Path(S360,S419)
	S421= XER.CAOut=>ALU.CAIn                                   Premise(F215)
	S422= ALU.CAIn=ca                                           Path(S364,S421)
	S423= CU.Func=>ALU.Func                                     Premise(F216)
	S424= ALU.Func=alu_subfe                                    Path(S412,S423)
	S425= ALU.Out=b-a+ca                                        ALU(S418,S420,S422)
	S426= ALU.CMP=Compare0(b-a+ca)                              ALU(S418,S420,S422)
	S427= ALU.OV=OverFlow(b-a+ca)                               ALU(S418,S420,S422)
	S428= ALU.CA=Carry(b-a+ca)                                  ALU(S418,S420,S422)
	S429= ALU.Out=>ALUOut.In                                    Premise(F217)
	S430= ALUOut.In=b-a+ca                                      Path(S425,S429)
	S431= ALU.CA=>CAReg.In                                      Premise(F218)
	S432= CAReg.In=Carry(b-a+ca)                                Path(S428,S431)
	S433= ALU.CMP=>DataCmb.A                                    Premise(F219)
	S434= DataCmb.A=Compare0(b-a+ca)                            Path(S426,S433)
	S435= XER.SOOut=>DataCmb.B                                  Premise(F220)
	S436= DataCmb.B=so                                          Path(S363,S435)
	S437= DataCmb.Out={Compare0(b-a+ca),so}                     DataCmb(S434,S436)
	S438= DataCmb.Out=>DR4bit.In                                Premise(F221)
	S439= DR4bit.In={Compare0(b-a+ca),so}                       Path(S437,S438)
	S440= IR.Out6_10=>GPRegs.WReg                               Premise(F222)
	S441= GPRegs.WReg=rT                                        Path(S353,S440)
	S442= ALUOut.Out=>GPRegs.WData                              Premise(F223)
	S443= DR4bit.Out=>CRRegs.CR0In                              Premise(F224)
	S444= CAReg.Out=>XER.CAIn                                   Premise(F225)
	S445= CtrlPIDReg=0                                          Premise(F226)
	S446= [PIDReg]=pid                                          PIDReg-Hold(S298,S445)
	S447= CtrlIMMU=0                                            Premise(F227)
	S448= CtrlPC=0                                              Premise(F228)
	S449= CtrlPCInc=0                                           Premise(F229)
	S450= PC[CIA]=addr                                          PC-Hold(S302,S449)
	S451= PC[Out]=addr+4                                        PC-Hold(S303,S448,S449)
	S452= CtrlIAddrReg=0                                        Premise(F230)
	S453= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S305,S452)
	S454= CtrlIMMUHitReg=0                                      Premise(F231)
	S455= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S307,S454)
	S456= CtrlICache=0                                          Premise(F232)
	S457= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S309,S456)
	S458= CtrlICacheReg=0                                       Premise(F233)
	S459= CtrlICacheHitReg=0                                    Premise(F234)
	S460= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S312,S459)
	S461= CtrlIMem=0                                            Premise(F235)
	S462= IMem[{pid,addr}]={31,rT,rA,rB,273}                    IMem-Hold(S314,S461)
	S463= CtrlIRMux=0                                           Premise(F236)
	S464= CtrlIR=0                                              Premise(F237)
	S465= [IR]={31,rT,rA,rB,273}                                IR-Hold(S317,S464)
	S466= CtrlGPRegs=0                                          Premise(F238)
	S467= GPRegs[rA]=a                                          GPRegs-Hold(S319,S466)
	S468= GPRegs[rB]=b                                          GPRegs-Hold(S320,S466)
	S469= CtrlA=0                                               Premise(F239)
	S470= [A]=a                                                 A-Hold(S322,S469)
	S471= CtrlB=0                                               Premise(F240)
	S472= [B]=b                                                 B-Hold(S324,S471)
	S473= CtrlXERSO=0                                           Premise(F241)
	S474= XER[SO]=so                                            XER-SO-Hold(S326,S473)
	S475= CtrlXEROV=0                                           Premise(F242)
	S476= CtrlXERCA=0                                           Premise(F243)
	S477= XER[CA]=ca                                            XER-CA-Hold(S329,S476)
	S478= CtrlALUOut=1                                          Premise(F244)
	S479= [ALUOut]=b-a+ca                                       ALUOut-Write(S430,S478)
	S480= CtrlCAReg=1                                           Premise(F245)
	S481= [CAReg]=Carry(b-a+ca)                                 CAReg-Write(S432,S480)
	S482= CtrlDR4bit=1                                          Premise(F246)
	S483= [DR4bit]={Compare0(b-a+ca),so}                        DR4bit-Write(S439,S482)
	S484= CtrlCRRegs=0                                          Premise(F247)
	S485= CtrlCRRegsCR0=0                                       Premise(F248)
	S486= CtrlCRRegsW4bitRegs=0                                 Premise(F249)
	S487= CtrlCRRegsW1bitRegs=0                                 Premise(F250)

MEM	S488= PIDReg.Out=pid                                        PIDReg-Out(S446)
	S489= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S446)
	S490= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S446)
	S491= PC.CIA=addr                                           PC-Out(S450)
	S492= PC.CIA31_28=addr[31:28]                               PC-Out(S450)
	S493= PC.Out=addr+4                                         PC-Out(S451)
	S494= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S453)
	S495= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S453)
	S496= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S453)
	S497= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S455)
	S498= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S455)
	S499= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S455)
	S500= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S460)
	S501= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S460)
	S502= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S460)
	S503= IR.Out0_5=31                                          IR-Out(S465)
	S504= IR.Out6_10=rT                                         IR-Out(S465)
	S505= IR.Out11_15=rA                                        IR-Out(S465)
	S506= IR.Out16_20=rB                                        IR-Out(S465)
	S507= IR.Out21_31=273                                       IR-Out(S465)
	S508= A.Out=a                                               A-Out(S470)
	S509= A.Out26_31=a[26:31]                                   A-Out(S470)
	S510= A.Out30_31=a[30:31]                                   A-Out(S470)
	S511= B.Out=b                                               B-Out(S472)
	S512= B.Out26_31=b[26:31]                                   B-Out(S472)
	S513= B.Out30_31=b[30:31]                                   B-Out(S472)
	S514= XER.SOOut=so                                          XER-SO-Out(S474)
	S515= XER.CAOut=ca                                          XER-CA-Out(S477)
	S516= ALUOut.Out=b-a+ca                                     ALUOut-Out(S479)
	S517= ALUOut.Out26_31=b-a+ca[26:31]                         ALUOut-Out(S479)
	S518= ALUOut.Out30_31=b-a+ca[30:31]                         ALUOut-Out(S479)
	S519= CAReg.Out=Carry(b-a+ca)                               CAReg-Out(S481)
	S520= CAReg.Out26_31=Carry(b-a+ca)[26:31]                   CAReg-Out(S481)
	S521= CAReg.Out30_31=Carry(b-a+ca)[30:31]                   CAReg-Out(S481)
	S522= DR4bit.Out={Compare0(b-a+ca),so}                      DR4bit-Out(S483)
	S523= DR4bit.Out26_31={Compare0(b-a+ca),so}[26:31]          DR4bit-Out(S483)
	S524= DR4bit.Out30_31={Compare0(b-a+ca),so}[30:31]          DR4bit-Out(S483)
	S525= PIDReg.Out=>IMMU.PID                                  Premise(F251)
	S526= IMMU.PID=pid                                          Path(S488,S525)
	S527= PC.Out=>IMMU.IEA                                      Premise(F252)
	S528= IMMU.IEA=addr+4                                       Path(S493,S527)
	S529= IMMU.Addr={pid,addr+4}                                IMMU-Search(S526,S528)
	S530= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S526,S528)
	S531= IMMU.Addr=>IAddrReg.In                                Premise(F253)
	S532= IAddrReg.In={pid,addr+4}                              Path(S529,S531)
	S533= IMMU.Hit=>IMMUHitReg.In                               Premise(F254)
	S534= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S530,S533)
	S535= PC.Out=>ICache.IEA                                    Premise(F255)
	S536= ICache.IEA=addr+4                                     Path(S493,S535)
	S537= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S536)
	S538= ICache.Out=>ICacheReg.In                              Premise(F256)
	S539= ICache.Hit=>ICacheHitReg.In                           Premise(F257)
	S540= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S537,S539)
	S541= IMMUHitReg.Out=>CU.IMemHit                            Premise(F258)
	S542= CU.IMemHit=IMMUHit(pid,addr)                          Path(S497,S541)
	S543= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F259)
	S544= CU.ICacheHit=ICacheHit(addr)                          Path(S500,S543)
	S545= IAddrReg.Out=>IMem.RAddr                              Premise(F260)
	S546= IMem.RAddr={pid,addr}                                 Path(S494,S545)
	S547= IMem.Out={31,rT,rA,rB,273}                            IMem-Read(S546,S462)
	S548= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S546,S462)
	S549= IMem.Out=>IRMux.MemData                               Premise(F261)
	S550= IRMux.MemData={31,rT,rA,rB,273}                       Path(S547,S549)
	S551= IRMux.Out={31,rT,rA,rB,273}                           IRMux-Select(S550)
	S552= ICacheReg.Out=>IRMux.CacheData                        Premise(F262)
	S553= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F263)
	S554= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S497,S553)
	S555= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F264)
	S556= IRMux.CacheSel=ICacheHit(addr)                        Path(S500,S555)
	S557= IRMux.Out=>IR.In                                      Premise(F265)
	S558= IR.In={31,rT,rA,rB,273}                               Path(S551,S557)
	S559= IMem.MEM8WordOut=>ICache.WData                        Premise(F266)
	S560= ICache.WData=IMemGet8Word({pid,addr})                 Path(S548,S559)
	S561= PC.Out=>ICache.IEA                                    Premise(F267)
	S562= IR.Out0_5=>CU.Op                                      Premise(F268)
	S563= CU.Op=31                                              Path(S503,S562)
	S564= IR.Out11_15=>GPRegs.RReg1                             Premise(F269)
	S565= GPRegs.RReg1=rA                                       Path(S505,S564)
	S566= GPRegs.Rdata1=a                                       GPRegs-Read(S565,S467)
	S567= IR.Out16_20=>GPRegs.RReg2                             Premise(F270)
	S568= GPRegs.RReg2=rB                                       Path(S506,S567)
	S569= GPRegs.Rdata2=b                                       GPRegs-Read(S568,S468)
	S570= IR.Out21_31=>CU.IRFunc                                Premise(F271)
	S571= CU.IRFunc=273                                         Path(S507,S570)
	S572= CU.Func=alu_subfe                                     CU(S563,S571)
	S573= GPRegs.Rdata1=>A.In                                   Premise(F272)
	S574= A.In=a                                                Path(S566,S573)
	S575= GPRegs.Rdata2=>B.In                                   Premise(F273)
	S576= B.In=b                                                Path(S569,S575)
	S577= A.Out=>ALU.A                                          Premise(F274)
	S578= ALU.A=a                                               Path(S508,S577)
	S579= B.Out=>ALU.B                                          Premise(F275)
	S580= ALU.B=b                                               Path(S511,S579)
	S581= XER.CAOut=>ALU.CAIn                                   Premise(F276)
	S582= ALU.CAIn=ca                                           Path(S515,S581)
	S583= CU.Func=>ALU.Func                                     Premise(F277)
	S584= ALU.Func=alu_subfe                                    Path(S572,S583)
	S585= ALU.Out=b-a+ca                                        ALU(S578,S580,S582)
	S586= ALU.CMP=Compare0(b-a+ca)                              ALU(S578,S580,S582)
	S587= ALU.OV=OverFlow(b-a+ca)                               ALU(S578,S580,S582)
	S588= ALU.CA=Carry(b-a+ca)                                  ALU(S578,S580,S582)
	S589= ALU.Out=>ALUOut.In                                    Premise(F278)
	S590= ALUOut.In=b-a+ca                                      Path(S585,S589)
	S591= ALU.CA=>CAReg.In                                      Premise(F279)
	S592= CAReg.In=Carry(b-a+ca)                                Path(S588,S591)
	S593= ALU.CMP=>DataCmb.A                                    Premise(F280)
	S594= DataCmb.A=Compare0(b-a+ca)                            Path(S586,S593)
	S595= XER.SOOut=>DataCmb.B                                  Premise(F281)
	S596= DataCmb.B=so                                          Path(S514,S595)
	S597= DataCmb.Out={Compare0(b-a+ca),so}                     DataCmb(S594,S596)
	S598= DataCmb.Out=>DR4bit.In                                Premise(F282)
	S599= DR4bit.In={Compare0(b-a+ca),so}                       Path(S597,S598)
	S600= IR.Out6_10=>GPRegs.WReg                               Premise(F283)
	S601= GPRegs.WReg=rT                                        Path(S504,S600)
	S602= ALUOut.Out=>GPRegs.WData                              Premise(F284)
	S603= GPRegs.WData=b-a+ca                                   Path(S516,S602)
	S604= DR4bit.Out=>CRRegs.CR0In                              Premise(F285)
	S605= CRRegs.CR0In={Compare0(b-a+ca),so}                    Path(S522,S604)
	S606= CAReg.Out=>XER.CAIn                                   Premise(F286)
	S607= XER.CAIn=Carry(b-a+ca)                                Path(S519,S606)
	S608= CtrlPIDReg=0                                          Premise(F287)
	S609= [PIDReg]=pid                                          PIDReg-Hold(S446,S608)
	S610= CtrlIMMU=0                                            Premise(F288)
	S611= CtrlPC=0                                              Premise(F289)
	S612= CtrlPCInc=0                                           Premise(F290)
	S613= PC[CIA]=addr                                          PC-Hold(S450,S612)
	S614= PC[Out]=addr+4                                        PC-Hold(S451,S611,S612)
	S615= CtrlIAddrReg=0                                        Premise(F291)
	S616= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S453,S615)
	S617= CtrlIMMUHitReg=0                                      Premise(F292)
	S618= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S455,S617)
	S619= CtrlICache=0                                          Premise(F293)
	S620= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S457,S619)
	S621= CtrlICacheReg=0                                       Premise(F294)
	S622= CtrlICacheHitReg=0                                    Premise(F295)
	S623= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S460,S622)
	S624= CtrlIMem=0                                            Premise(F296)
	S625= IMem[{pid,addr}]={31,rT,rA,rB,273}                    IMem-Hold(S462,S624)
	S626= CtrlIRMux=0                                           Premise(F297)
	S627= CtrlIR=0                                              Premise(F298)
	S628= [IR]={31,rT,rA,rB,273}                                IR-Hold(S465,S627)
	S629= CtrlGPRegs=0                                          Premise(F299)
	S630= GPRegs[rA]=a                                          GPRegs-Hold(S467,S629)
	S631= GPRegs[rB]=b                                          GPRegs-Hold(S468,S629)
	S632= CtrlA=0                                               Premise(F300)
	S633= [A]=a                                                 A-Hold(S470,S632)
	S634= CtrlB=0                                               Premise(F301)
	S635= [B]=b                                                 B-Hold(S472,S634)
	S636= CtrlXERSO=0                                           Premise(F302)
	S637= XER[SO]=so                                            XER-SO-Hold(S474,S636)
	S638= CtrlXEROV=0                                           Premise(F303)
	S639= CtrlXERCA=0                                           Premise(F304)
	S640= XER[CA]=ca                                            XER-CA-Hold(S477,S639)
	S641= CtrlALUOut=0                                          Premise(F305)
	S642= [ALUOut]=b-a+ca                                       ALUOut-Hold(S479,S641)
	S643= CtrlCAReg=0                                           Premise(F306)
	S644= [CAReg]=Carry(b-a+ca)                                 CAReg-Hold(S481,S643)
	S645= CtrlDR4bit=0                                          Premise(F307)
	S646= [DR4bit]={Compare0(b-a+ca),so}                        DR4bit-Hold(S483,S645)
	S647= CtrlCRRegs=0                                          Premise(F308)
	S648= CtrlCRRegsCR0=0                                       Premise(F309)
	S649= CtrlCRRegsW4bitRegs=0                                 Premise(F310)
	S650= CtrlCRRegsW1bitRegs=0                                 Premise(F311)

DMMU1	S651= PIDReg.Out=pid                                        PIDReg-Out(S609)
	S652= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S609)
	S653= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S609)
	S654= PC.CIA=addr                                           PC-Out(S613)
	S655= PC.CIA31_28=addr[31:28]                               PC-Out(S613)
	S656= PC.Out=addr+4                                         PC-Out(S614)
	S657= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S616)
	S658= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S616)
	S659= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S616)
	S660= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S618)
	S661= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S618)
	S662= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S618)
	S663= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S623)
	S664= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S623)
	S665= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S623)
	S666= IR.Out0_5=31                                          IR-Out(S628)
	S667= IR.Out6_10=rT                                         IR-Out(S628)
	S668= IR.Out11_15=rA                                        IR-Out(S628)
	S669= IR.Out16_20=rB                                        IR-Out(S628)
	S670= IR.Out21_31=273                                       IR-Out(S628)
	S671= A.Out=a                                               A-Out(S633)
	S672= A.Out26_31=a[26:31]                                   A-Out(S633)
	S673= A.Out30_31=a[30:31]                                   A-Out(S633)
	S674= B.Out=b                                               B-Out(S635)
	S675= B.Out26_31=b[26:31]                                   B-Out(S635)
	S676= B.Out30_31=b[30:31]                                   B-Out(S635)
	S677= XER.SOOut=so                                          XER-SO-Out(S637)
	S678= XER.CAOut=ca                                          XER-CA-Out(S640)
	S679= ALUOut.Out=b-a+ca                                     ALUOut-Out(S642)
	S680= ALUOut.Out26_31=b-a+ca[26:31]                         ALUOut-Out(S642)
	S681= ALUOut.Out30_31=b-a+ca[30:31]                         ALUOut-Out(S642)
	S682= CAReg.Out=Carry(b-a+ca)                               CAReg-Out(S644)
	S683= CAReg.Out26_31=Carry(b-a+ca)[26:31]                   CAReg-Out(S644)
	S684= CAReg.Out30_31=Carry(b-a+ca)[30:31]                   CAReg-Out(S644)
	S685= DR4bit.Out={Compare0(b-a+ca),so}                      DR4bit-Out(S646)
	S686= DR4bit.Out26_31={Compare0(b-a+ca),so}[26:31]          DR4bit-Out(S646)
	S687= DR4bit.Out30_31={Compare0(b-a+ca),so}[30:31]          DR4bit-Out(S646)
	S688= PIDReg.Out=>IMMU.PID                                  Premise(F312)
	S689= IMMU.PID=pid                                          Path(S651,S688)
	S690= PC.Out=>IMMU.IEA                                      Premise(F313)
	S691= IMMU.IEA=addr+4                                       Path(S656,S690)
	S692= IMMU.Addr={pid,addr+4}                                IMMU-Search(S689,S691)
	S693= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S689,S691)
	S694= IMMU.Addr=>IAddrReg.In                                Premise(F314)
	S695= IAddrReg.In={pid,addr+4}                              Path(S692,S694)
	S696= IMMU.Hit=>IMMUHitReg.In                               Premise(F315)
	S697= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S693,S696)
	S698= PC.Out=>ICache.IEA                                    Premise(F316)
	S699= ICache.IEA=addr+4                                     Path(S656,S698)
	S700= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S699)
	S701= ICache.Out=>ICacheReg.In                              Premise(F317)
	S702= ICache.Hit=>ICacheHitReg.In                           Premise(F318)
	S703= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S700,S702)
	S704= IMMUHitReg.Out=>CU.IMemHit                            Premise(F319)
	S705= CU.IMemHit=IMMUHit(pid,addr)                          Path(S660,S704)
	S706= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F320)
	S707= CU.ICacheHit=ICacheHit(addr)                          Path(S663,S706)
	S708= IAddrReg.Out=>IMem.RAddr                              Premise(F321)
	S709= IMem.RAddr={pid,addr}                                 Path(S657,S708)
	S710= IMem.Out={31,rT,rA,rB,273}                            IMem-Read(S709,S625)
	S711= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S709,S625)
	S712= IMem.Out=>IRMux.MemData                               Premise(F322)
	S713= IRMux.MemData={31,rT,rA,rB,273}                       Path(S710,S712)
	S714= IRMux.Out={31,rT,rA,rB,273}                           IRMux-Select(S713)
	S715= ICacheReg.Out=>IRMux.CacheData                        Premise(F323)
	S716= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F324)
	S717= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S660,S716)
	S718= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F325)
	S719= IRMux.CacheSel=ICacheHit(addr)                        Path(S663,S718)
	S720= IRMux.Out=>IR.In                                      Premise(F326)
	S721= IR.In={31,rT,rA,rB,273}                               Path(S714,S720)
	S722= IMem.MEM8WordOut=>ICache.WData                        Premise(F327)
	S723= ICache.WData=IMemGet8Word({pid,addr})                 Path(S711,S722)
	S724= PC.Out=>ICache.IEA                                    Premise(F328)
	S725= IR.Out0_5=>CU.Op                                      Premise(F329)
	S726= CU.Op=31                                              Path(S666,S725)
	S727= IR.Out11_15=>GPRegs.RReg1                             Premise(F330)
	S728= GPRegs.RReg1=rA                                       Path(S668,S727)
	S729= GPRegs.Rdata1=a                                       GPRegs-Read(S728,S630)
	S730= IR.Out16_20=>GPRegs.RReg2                             Premise(F331)
	S731= GPRegs.RReg2=rB                                       Path(S669,S730)
	S732= GPRegs.Rdata2=b                                       GPRegs-Read(S731,S631)
	S733= IR.Out21_31=>CU.IRFunc                                Premise(F332)
	S734= CU.IRFunc=273                                         Path(S670,S733)
	S735= CU.Func=alu_subfe                                     CU(S726,S734)
	S736= GPRegs.Rdata1=>A.In                                   Premise(F333)
	S737= A.In=a                                                Path(S729,S736)
	S738= GPRegs.Rdata2=>B.In                                   Premise(F334)
	S739= B.In=b                                                Path(S732,S738)
	S740= A.Out=>ALU.A                                          Premise(F335)
	S741= ALU.A=a                                               Path(S671,S740)
	S742= B.Out=>ALU.B                                          Premise(F336)
	S743= ALU.B=b                                               Path(S674,S742)
	S744= XER.CAOut=>ALU.CAIn                                   Premise(F337)
	S745= ALU.CAIn=ca                                           Path(S678,S744)
	S746= CU.Func=>ALU.Func                                     Premise(F338)
	S747= ALU.Func=alu_subfe                                    Path(S735,S746)
	S748= ALU.Out=b-a+ca                                        ALU(S741,S743,S745)
	S749= ALU.CMP=Compare0(b-a+ca)                              ALU(S741,S743,S745)
	S750= ALU.OV=OverFlow(b-a+ca)                               ALU(S741,S743,S745)
	S751= ALU.CA=Carry(b-a+ca)                                  ALU(S741,S743,S745)
	S752= ALU.Out=>ALUOut.In                                    Premise(F339)
	S753= ALUOut.In=b-a+ca                                      Path(S748,S752)
	S754= ALU.CA=>CAReg.In                                      Premise(F340)
	S755= CAReg.In=Carry(b-a+ca)                                Path(S751,S754)
	S756= ALU.CMP=>DataCmb.A                                    Premise(F341)
	S757= DataCmb.A=Compare0(b-a+ca)                            Path(S749,S756)
	S758= XER.SOOut=>DataCmb.B                                  Premise(F342)
	S759= DataCmb.B=so                                          Path(S677,S758)
	S760= DataCmb.Out={Compare0(b-a+ca),so}                     DataCmb(S757,S759)
	S761= DataCmb.Out=>DR4bit.In                                Premise(F343)
	S762= DR4bit.In={Compare0(b-a+ca),so}                       Path(S760,S761)
	S763= IR.Out6_10=>GPRegs.WReg                               Premise(F344)
	S764= GPRegs.WReg=rT                                        Path(S667,S763)
	S765= ALUOut.Out=>GPRegs.WData                              Premise(F345)
	S766= GPRegs.WData=b-a+ca                                   Path(S679,S765)
	S767= DR4bit.Out=>CRRegs.CR0In                              Premise(F346)
	S768= CRRegs.CR0In={Compare0(b-a+ca),so}                    Path(S685,S767)
	S769= CAReg.Out=>XER.CAIn                                   Premise(F347)
	S770= XER.CAIn=Carry(b-a+ca)                                Path(S682,S769)
	S771= CtrlPIDReg=0                                          Premise(F348)
	S772= [PIDReg]=pid                                          PIDReg-Hold(S609,S771)
	S773= CtrlIMMU=0                                            Premise(F349)
	S774= CtrlPC=0                                              Premise(F350)
	S775= CtrlPCInc=0                                           Premise(F351)
	S776= PC[CIA]=addr                                          PC-Hold(S613,S775)
	S777= PC[Out]=addr+4                                        PC-Hold(S614,S774,S775)
	S778= CtrlIAddrReg=0                                        Premise(F352)
	S779= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S616,S778)
	S780= CtrlIMMUHitReg=0                                      Premise(F353)
	S781= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S618,S780)
	S782= CtrlICache=0                                          Premise(F354)
	S783= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S620,S782)
	S784= CtrlICacheReg=0                                       Premise(F355)
	S785= CtrlICacheHitReg=0                                    Premise(F356)
	S786= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S623,S785)
	S787= CtrlIMem=0                                            Premise(F357)
	S788= IMem[{pid,addr}]={31,rT,rA,rB,273}                    IMem-Hold(S625,S787)
	S789= CtrlIRMux=0                                           Premise(F358)
	S790= CtrlIR=0                                              Premise(F359)
	S791= [IR]={31,rT,rA,rB,273}                                IR-Hold(S628,S790)
	S792= CtrlGPRegs=0                                          Premise(F360)
	S793= GPRegs[rA]=a                                          GPRegs-Hold(S630,S792)
	S794= GPRegs[rB]=b                                          GPRegs-Hold(S631,S792)
	S795= CtrlA=0                                               Premise(F361)
	S796= [A]=a                                                 A-Hold(S633,S795)
	S797= CtrlB=0                                               Premise(F362)
	S798= [B]=b                                                 B-Hold(S635,S797)
	S799= CtrlXERSO=0                                           Premise(F363)
	S800= XER[SO]=so                                            XER-SO-Hold(S637,S799)
	S801= CtrlXEROV=0                                           Premise(F364)
	S802= CtrlXERCA=0                                           Premise(F365)
	S803= XER[CA]=ca                                            XER-CA-Hold(S640,S802)
	S804= CtrlALUOut=0                                          Premise(F366)
	S805= [ALUOut]=b-a+ca                                       ALUOut-Hold(S642,S804)
	S806= CtrlCAReg=0                                           Premise(F367)
	S807= [CAReg]=Carry(b-a+ca)                                 CAReg-Hold(S644,S806)
	S808= CtrlDR4bit=0                                          Premise(F368)
	S809= [DR4bit]={Compare0(b-a+ca),so}                        DR4bit-Hold(S646,S808)
	S810= CtrlCRRegs=0                                          Premise(F369)
	S811= CtrlCRRegsCR0=0                                       Premise(F370)
	S812= CtrlCRRegsW4bitRegs=0                                 Premise(F371)
	S813= CtrlCRRegsW1bitRegs=0                                 Premise(F372)

DMMU2	S814= PIDReg.Out=pid                                        PIDReg-Out(S772)
	S815= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S772)
	S816= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S772)
	S817= PC.CIA=addr                                           PC-Out(S776)
	S818= PC.CIA31_28=addr[31:28]                               PC-Out(S776)
	S819= PC.Out=addr+4                                         PC-Out(S777)
	S820= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S779)
	S821= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S779)
	S822= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S779)
	S823= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S781)
	S824= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S781)
	S825= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S781)
	S826= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S786)
	S827= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S786)
	S828= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S786)
	S829= IR.Out0_5=31                                          IR-Out(S791)
	S830= IR.Out6_10=rT                                         IR-Out(S791)
	S831= IR.Out11_15=rA                                        IR-Out(S791)
	S832= IR.Out16_20=rB                                        IR-Out(S791)
	S833= IR.Out21_31=273                                       IR-Out(S791)
	S834= A.Out=a                                               A-Out(S796)
	S835= A.Out26_31=a[26:31]                                   A-Out(S796)
	S836= A.Out30_31=a[30:31]                                   A-Out(S796)
	S837= B.Out=b                                               B-Out(S798)
	S838= B.Out26_31=b[26:31]                                   B-Out(S798)
	S839= B.Out30_31=b[30:31]                                   B-Out(S798)
	S840= XER.SOOut=so                                          XER-SO-Out(S800)
	S841= XER.CAOut=ca                                          XER-CA-Out(S803)
	S842= ALUOut.Out=b-a+ca                                     ALUOut-Out(S805)
	S843= ALUOut.Out26_31=b-a+ca[26:31]                         ALUOut-Out(S805)
	S844= ALUOut.Out30_31=b-a+ca[30:31]                         ALUOut-Out(S805)
	S845= CAReg.Out=Carry(b-a+ca)                               CAReg-Out(S807)
	S846= CAReg.Out26_31=Carry(b-a+ca)[26:31]                   CAReg-Out(S807)
	S847= CAReg.Out30_31=Carry(b-a+ca)[30:31]                   CAReg-Out(S807)
	S848= DR4bit.Out={Compare0(b-a+ca),so}                      DR4bit-Out(S809)
	S849= DR4bit.Out26_31={Compare0(b-a+ca),so}[26:31]          DR4bit-Out(S809)
	S850= DR4bit.Out30_31={Compare0(b-a+ca),so}[30:31]          DR4bit-Out(S809)
	S851= PIDReg.Out=>IMMU.PID                                  Premise(F373)
	S852= IMMU.PID=pid                                          Path(S814,S851)
	S853= PC.Out=>IMMU.IEA                                      Premise(F374)
	S854= IMMU.IEA=addr+4                                       Path(S819,S853)
	S855= IMMU.Addr={pid,addr+4}                                IMMU-Search(S852,S854)
	S856= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S852,S854)
	S857= IMMU.Addr=>IAddrReg.In                                Premise(F375)
	S858= IAddrReg.In={pid,addr+4}                              Path(S855,S857)
	S859= IMMU.Hit=>IMMUHitReg.In                               Premise(F376)
	S860= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S856,S859)
	S861= PC.Out=>ICache.IEA                                    Premise(F377)
	S862= ICache.IEA=addr+4                                     Path(S819,S861)
	S863= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S862)
	S864= ICache.Out=>ICacheReg.In                              Premise(F378)
	S865= ICache.Hit=>ICacheHitReg.In                           Premise(F379)
	S866= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S863,S865)
	S867= IMMUHitReg.Out=>CU.IMemHit                            Premise(F380)
	S868= CU.IMemHit=IMMUHit(pid,addr)                          Path(S823,S867)
	S869= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F381)
	S870= CU.ICacheHit=ICacheHit(addr)                          Path(S826,S869)
	S871= IAddrReg.Out=>IMem.RAddr                              Premise(F382)
	S872= IMem.RAddr={pid,addr}                                 Path(S820,S871)
	S873= IMem.Out={31,rT,rA,rB,273}                            IMem-Read(S872,S788)
	S874= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S872,S788)
	S875= IMem.Out=>IRMux.MemData                               Premise(F383)
	S876= IRMux.MemData={31,rT,rA,rB,273}                       Path(S873,S875)
	S877= IRMux.Out={31,rT,rA,rB,273}                           IRMux-Select(S876)
	S878= ICacheReg.Out=>IRMux.CacheData                        Premise(F384)
	S879= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F385)
	S880= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S823,S879)
	S881= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F386)
	S882= IRMux.CacheSel=ICacheHit(addr)                        Path(S826,S881)
	S883= IRMux.Out=>IR.In                                      Premise(F387)
	S884= IR.In={31,rT,rA,rB,273}                               Path(S877,S883)
	S885= IMem.MEM8WordOut=>ICache.WData                        Premise(F388)
	S886= ICache.WData=IMemGet8Word({pid,addr})                 Path(S874,S885)
	S887= PC.Out=>ICache.IEA                                    Premise(F389)
	S888= IR.Out0_5=>CU.Op                                      Premise(F390)
	S889= CU.Op=31                                              Path(S829,S888)
	S890= IR.Out11_15=>GPRegs.RReg1                             Premise(F391)
	S891= GPRegs.RReg1=rA                                       Path(S831,S890)
	S892= GPRegs.Rdata1=a                                       GPRegs-Read(S891,S793)
	S893= IR.Out16_20=>GPRegs.RReg2                             Premise(F392)
	S894= GPRegs.RReg2=rB                                       Path(S832,S893)
	S895= GPRegs.Rdata2=b                                       GPRegs-Read(S894,S794)
	S896= IR.Out21_31=>CU.IRFunc                                Premise(F393)
	S897= CU.IRFunc=273                                         Path(S833,S896)
	S898= CU.Func=alu_subfe                                     CU(S889,S897)
	S899= GPRegs.Rdata1=>A.In                                   Premise(F394)
	S900= A.In=a                                                Path(S892,S899)
	S901= GPRegs.Rdata2=>B.In                                   Premise(F395)
	S902= B.In=b                                                Path(S895,S901)
	S903= A.Out=>ALU.A                                          Premise(F396)
	S904= ALU.A=a                                               Path(S834,S903)
	S905= B.Out=>ALU.B                                          Premise(F397)
	S906= ALU.B=b                                               Path(S837,S905)
	S907= XER.CAOut=>ALU.CAIn                                   Premise(F398)
	S908= ALU.CAIn=ca                                           Path(S841,S907)
	S909= CU.Func=>ALU.Func                                     Premise(F399)
	S910= ALU.Func=alu_subfe                                    Path(S898,S909)
	S911= ALU.Out=b-a+ca                                        ALU(S904,S906,S908)
	S912= ALU.CMP=Compare0(b-a+ca)                              ALU(S904,S906,S908)
	S913= ALU.OV=OverFlow(b-a+ca)                               ALU(S904,S906,S908)
	S914= ALU.CA=Carry(b-a+ca)                                  ALU(S904,S906,S908)
	S915= ALU.Out=>ALUOut.In                                    Premise(F400)
	S916= ALUOut.In=b-a+ca                                      Path(S911,S915)
	S917= ALU.CA=>CAReg.In                                      Premise(F401)
	S918= CAReg.In=Carry(b-a+ca)                                Path(S914,S917)
	S919= ALU.CMP=>DataCmb.A                                    Premise(F402)
	S920= DataCmb.A=Compare0(b-a+ca)                            Path(S912,S919)
	S921= XER.SOOut=>DataCmb.B                                  Premise(F403)
	S922= DataCmb.B=so                                          Path(S840,S921)
	S923= DataCmb.Out={Compare0(b-a+ca),so}                     DataCmb(S920,S922)
	S924= DataCmb.Out=>DR4bit.In                                Premise(F404)
	S925= DR4bit.In={Compare0(b-a+ca),so}                       Path(S923,S924)
	S926= IR.Out6_10=>GPRegs.WReg                               Premise(F405)
	S927= GPRegs.WReg=rT                                        Path(S830,S926)
	S928= ALUOut.Out=>GPRegs.WData                              Premise(F406)
	S929= GPRegs.WData=b-a+ca                                   Path(S842,S928)
	S930= DR4bit.Out=>CRRegs.CR0In                              Premise(F407)
	S931= CRRegs.CR0In={Compare0(b-a+ca),so}                    Path(S848,S930)
	S932= CAReg.Out=>XER.CAIn                                   Premise(F408)
	S933= XER.CAIn=Carry(b-a+ca)                                Path(S845,S932)
	S934= CtrlPIDReg=0                                          Premise(F409)
	S935= [PIDReg]=pid                                          PIDReg-Hold(S772,S934)
	S936= CtrlIMMU=0                                            Premise(F410)
	S937= CtrlPC=0                                              Premise(F411)
	S938= CtrlPCInc=0                                           Premise(F412)
	S939= PC[CIA]=addr                                          PC-Hold(S776,S938)
	S940= PC[Out]=addr+4                                        PC-Hold(S777,S937,S938)
	S941= CtrlIAddrReg=0                                        Premise(F413)
	S942= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S779,S941)
	S943= CtrlIMMUHitReg=0                                      Premise(F414)
	S944= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S781,S943)
	S945= CtrlICache=0                                          Premise(F415)
	S946= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S783,S945)
	S947= CtrlICacheReg=0                                       Premise(F416)
	S948= CtrlICacheHitReg=0                                    Premise(F417)
	S949= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S786,S948)
	S950= CtrlIMem=0                                            Premise(F418)
	S951= IMem[{pid,addr}]={31,rT,rA,rB,273}                    IMem-Hold(S788,S950)
	S952= CtrlIRMux=0                                           Premise(F419)
	S953= CtrlIR=0                                              Premise(F420)
	S954= [IR]={31,rT,rA,rB,273}                                IR-Hold(S791,S953)
	S955= CtrlGPRegs=0                                          Premise(F421)
	S956= GPRegs[rA]=a                                          GPRegs-Hold(S793,S955)
	S957= GPRegs[rB]=b                                          GPRegs-Hold(S794,S955)
	S958= CtrlA=0                                               Premise(F422)
	S959= [A]=a                                                 A-Hold(S796,S958)
	S960= CtrlB=0                                               Premise(F423)
	S961= [B]=b                                                 B-Hold(S798,S960)
	S962= CtrlXERSO=0                                           Premise(F424)
	S963= XER[SO]=so                                            XER-SO-Hold(S800,S962)
	S964= CtrlXEROV=0                                           Premise(F425)
	S965= CtrlXERCA=0                                           Premise(F426)
	S966= XER[CA]=ca                                            XER-CA-Hold(S803,S965)
	S967= CtrlALUOut=0                                          Premise(F427)
	S968= [ALUOut]=b-a+ca                                       ALUOut-Hold(S805,S967)
	S969= CtrlCAReg=0                                           Premise(F428)
	S970= [CAReg]=Carry(b-a+ca)                                 CAReg-Hold(S807,S969)
	S971= CtrlDR4bit=0                                          Premise(F429)
	S972= [DR4bit]={Compare0(b-a+ca),so}                        DR4bit-Hold(S809,S971)
	S973= CtrlCRRegs=0                                          Premise(F430)
	S974= CtrlCRRegsCR0=0                                       Premise(F431)
	S975= CtrlCRRegsW4bitRegs=0                                 Premise(F432)
	S976= CtrlCRRegsW1bitRegs=0                                 Premise(F433)

WB	S977= PIDReg.Out=pid                                        PIDReg-Out(S935)
	S978= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S935)
	S979= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S935)
	S980= PC.CIA=addr                                           PC-Out(S939)
	S981= PC.CIA31_28=addr[31:28]                               PC-Out(S939)
	S982= PC.Out=addr+4                                         PC-Out(S940)
	S983= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S942)
	S984= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S942)
	S985= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S942)
	S986= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S944)
	S987= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S944)
	S988= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S944)
	S989= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S949)
	S990= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S949)
	S991= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S949)
	S992= IR.Out0_5=31                                          IR-Out(S954)
	S993= IR.Out6_10=rT                                         IR-Out(S954)
	S994= IR.Out11_15=rA                                        IR-Out(S954)
	S995= IR.Out16_20=rB                                        IR-Out(S954)
	S996= IR.Out21_31=273                                       IR-Out(S954)
	S997= A.Out=a                                               A-Out(S959)
	S998= A.Out26_31=a[26:31]                                   A-Out(S959)
	S999= A.Out30_31=a[30:31]                                   A-Out(S959)
	S1000= B.Out=b                                              B-Out(S961)
	S1001= B.Out26_31=b[26:31]                                  B-Out(S961)
	S1002= B.Out30_31=b[30:31]                                  B-Out(S961)
	S1003= XER.SOOut=so                                         XER-SO-Out(S963)
	S1004= XER.CAOut=ca                                         XER-CA-Out(S966)
	S1005= ALUOut.Out=b-a+ca                                    ALUOut-Out(S968)
	S1006= ALUOut.Out26_31=b-a+ca[26:31]                        ALUOut-Out(S968)
	S1007= ALUOut.Out30_31=b-a+ca[30:31]                        ALUOut-Out(S968)
	S1008= CAReg.Out=Carry(b-a+ca)                              CAReg-Out(S970)
	S1009= CAReg.Out26_31=Carry(b-a+ca)[26:31]                  CAReg-Out(S970)
	S1010= CAReg.Out30_31=Carry(b-a+ca)[30:31]                  CAReg-Out(S970)
	S1011= DR4bit.Out={Compare0(b-a+ca),so}                     DR4bit-Out(S972)
	S1012= DR4bit.Out26_31={Compare0(b-a+ca),so}[26:31]         DR4bit-Out(S972)
	S1013= DR4bit.Out30_31={Compare0(b-a+ca),so}[30:31]         DR4bit-Out(S972)
	S1014= PIDReg.Out=>IMMU.PID                                 Premise(F434)
	S1015= IMMU.PID=pid                                         Path(S977,S1014)
	S1016= PC.Out=>IMMU.IEA                                     Premise(F435)
	S1017= IMMU.IEA=addr+4                                      Path(S982,S1016)
	S1018= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1015,S1017)
	S1019= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1015,S1017)
	S1020= IMMU.Addr=>IAddrReg.In                               Premise(F436)
	S1021= IAddrReg.In={pid,addr+4}                             Path(S1018,S1020)
	S1022= IMMU.Hit=>IMMUHitReg.In                              Premise(F437)
	S1023= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1019,S1022)
	S1024= PC.Out=>ICache.IEA                                   Premise(F438)
	S1025= ICache.IEA=addr+4                                    Path(S982,S1024)
	S1026= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1025)
	S1027= ICache.Out=>ICacheReg.In                             Premise(F439)
	S1028= ICache.Hit=>ICacheHitReg.In                          Premise(F440)
	S1029= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1026,S1028)
	S1030= IMMUHitReg.Out=>CU.IMemHit                           Premise(F441)
	S1031= CU.IMemHit=IMMUHit(pid,addr)                         Path(S986,S1030)
	S1032= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F442)
	S1033= CU.ICacheHit=ICacheHit(addr)                         Path(S989,S1032)
	S1034= IAddrReg.Out=>IMem.RAddr                             Premise(F443)
	S1035= IMem.RAddr={pid,addr}                                Path(S983,S1034)
	S1036= IMem.Out={31,rT,rA,rB,273}                           IMem-Read(S1035,S951)
	S1037= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1035,S951)
	S1038= IMem.Out=>IRMux.MemData                              Premise(F444)
	S1039= IRMux.MemData={31,rT,rA,rB,273}                      Path(S1036,S1038)
	S1040= IRMux.Out={31,rT,rA,rB,273}                          IRMux-Select(S1039)
	S1041= ICacheReg.Out=>IRMux.CacheData                       Premise(F445)
	S1042= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F446)
	S1043= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S986,S1042)
	S1044= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F447)
	S1045= IRMux.CacheSel=ICacheHit(addr)                       Path(S989,S1044)
	S1046= IRMux.Out=>IR.In                                     Premise(F448)
	S1047= IR.In={31,rT,rA,rB,273}                              Path(S1040,S1046)
	S1048= IMem.MEM8WordOut=>ICache.WData                       Premise(F449)
	S1049= ICache.WData=IMemGet8Word({pid,addr})                Path(S1037,S1048)
	S1050= PC.Out=>ICache.IEA                                   Premise(F450)
	S1051= IR.Out0_5=>CU.Op                                     Premise(F451)
	S1052= CU.Op=31                                             Path(S992,S1051)
	S1053= IR.Out11_15=>GPRegs.RReg1                            Premise(F452)
	S1054= GPRegs.RReg1=rA                                      Path(S994,S1053)
	S1055= GPRegs.Rdata1=a                                      GPRegs-Read(S1054,S956)
	S1056= IR.Out16_20=>GPRegs.RReg2                            Premise(F453)
	S1057= GPRegs.RReg2=rB                                      Path(S995,S1056)
	S1058= GPRegs.Rdata2=b                                      GPRegs-Read(S1057,S957)
	S1059= IR.Out21_31=>CU.IRFunc                               Premise(F454)
	S1060= CU.IRFunc=273                                        Path(S996,S1059)
	S1061= CU.Func=alu_subfe                                    CU(S1052,S1060)
	S1062= GPRegs.Rdata1=>A.In                                  Premise(F455)
	S1063= A.In=a                                               Path(S1055,S1062)
	S1064= GPRegs.Rdata2=>B.In                                  Premise(F456)
	S1065= B.In=b                                               Path(S1058,S1064)
	S1066= A.Out=>ALU.A                                         Premise(F457)
	S1067= ALU.A=a                                              Path(S997,S1066)
	S1068= B.Out=>ALU.B                                         Premise(F458)
	S1069= ALU.B=b                                              Path(S1000,S1068)
	S1070= XER.CAOut=>ALU.CAIn                                  Premise(F459)
	S1071= ALU.CAIn=ca                                          Path(S1004,S1070)
	S1072= CU.Func=>ALU.Func                                    Premise(F460)
	S1073= ALU.Func=alu_subfe                                   Path(S1061,S1072)
	S1074= ALU.Out=b-a+ca                                       ALU(S1067,S1069,S1071)
	S1075= ALU.CMP=Compare0(b-a+ca)                             ALU(S1067,S1069,S1071)
	S1076= ALU.OV=OverFlow(b-a+ca)                              ALU(S1067,S1069,S1071)
	S1077= ALU.CA=Carry(b-a+ca)                                 ALU(S1067,S1069,S1071)
	S1078= ALU.Out=>ALUOut.In                                   Premise(F461)
	S1079= ALUOut.In=b-a+ca                                     Path(S1074,S1078)
	S1080= ALU.CA=>CAReg.In                                     Premise(F462)
	S1081= CAReg.In=Carry(b-a+ca)                               Path(S1077,S1080)
	S1082= ALU.CMP=>DataCmb.A                                   Premise(F463)
	S1083= DataCmb.A=Compare0(b-a+ca)                           Path(S1075,S1082)
	S1084= XER.SOOut=>DataCmb.B                                 Premise(F464)
	S1085= DataCmb.B=so                                         Path(S1003,S1084)
	S1086= DataCmb.Out={Compare0(b-a+ca),so}                    DataCmb(S1083,S1085)
	S1087= DataCmb.Out=>DR4bit.In                               Premise(F465)
	S1088= DR4bit.In={Compare0(b-a+ca),so}                      Path(S1086,S1087)
	S1089= IR.Out6_10=>GPRegs.WReg                              Premise(F466)
	S1090= GPRegs.WReg=rT                                       Path(S993,S1089)
	S1091= ALUOut.Out=>GPRegs.WData                             Premise(F467)
	S1092= GPRegs.WData=b-a+ca                                  Path(S1005,S1091)
	S1093= DR4bit.Out=>CRRegs.CR0In                             Premise(F468)
	S1094= CRRegs.CR0In={Compare0(b-a+ca),so}                   Path(S1011,S1093)
	S1095= CAReg.Out=>XER.CAIn                                  Premise(F469)
	S1096= XER.CAIn=Carry(b-a+ca)                               Path(S1008,S1095)
	S1097= CtrlPIDReg=0                                         Premise(F470)
	S1098= [PIDReg]=pid                                         PIDReg-Hold(S935,S1097)
	S1099= CtrlIMMU=0                                           Premise(F471)
	S1100= CtrlPC=0                                             Premise(F472)
	S1101= CtrlPCInc=0                                          Premise(F473)
	S1102= PC[CIA]=addr                                         PC-Hold(S939,S1101)
	S1103= PC[Out]=addr+4                                       PC-Hold(S940,S1100,S1101)
	S1104= CtrlIAddrReg=0                                       Premise(F474)
	S1105= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S942,S1104)
	S1106= CtrlIMMUHitReg=0                                     Premise(F475)
	S1107= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S944,S1106)
	S1108= CtrlICache=0                                         Premise(F476)
	S1109= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S946,S1108)
	S1110= CtrlICacheReg=0                                      Premise(F477)
	S1111= CtrlICacheHitReg=0                                   Premise(F478)
	S1112= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S949,S1111)
	S1113= CtrlIMem=0                                           Premise(F479)
	S1114= IMem[{pid,addr}]={31,rT,rA,rB,273}                   IMem-Hold(S951,S1113)
	S1115= CtrlIRMux=0                                          Premise(F480)
	S1116= CtrlIR=0                                             Premise(F481)
	S1117= [IR]={31,rT,rA,rB,273}                               IR-Hold(S954,S1116)
	S1118= CtrlGPRegs=1                                         Premise(F482)
	S1119= GPRegs[rT]=b-a+ca                                    GPRegs-Write(S1090,S1092,S1118)
	S1120= CtrlA=0                                              Premise(F483)
	S1121= [A]=a                                                A-Hold(S959,S1120)
	S1122= CtrlB=0                                              Premise(F484)
	S1123= [B]=b                                                B-Hold(S961,S1122)
	S1124= CtrlXERSO=0                                          Premise(F485)
	S1125= XER[SO]=so                                           XER-SO-Hold(S963,S1124)
	S1126= CtrlXEROV=0                                          Premise(F486)
	S1127= CtrlXERCA=1                                          Premise(F487)
	S1128= XER[CA]=Carry(b-a+ca)                                XER-CA-Write(S1096,S1127)
	S1129= CtrlALUOut=0                                         Premise(F488)
	S1130= [ALUOut]=b-a+ca                                      ALUOut-Hold(S968,S1129)
	S1131= CtrlCAReg=0                                          Premise(F489)
	S1132= [CAReg]=Carry(b-a+ca)                                CAReg-Hold(S970,S1131)
	S1133= CtrlDR4bit=0                                         Premise(F490)
	S1134= [DR4bit]={Compare0(b-a+ca),so}                       DR4bit-Hold(S972,S1133)
	S1135= CtrlCRRegs=0                                         Premise(F491)
	S1136= CtrlCRRegsCR0=1                                      Premise(F492)
	S1137= CRRegs[CR0]={Compare0(b-a+ca),so}                    CRRegs-CR0-Write(S1094,S1136)
	S1138= CtrlCRRegsW4bitRegs=0                                Premise(F493)
	S1139= CtrlCRRegsW1bitRegs=0                                Premise(F494)

POST	S1098= [PIDReg]=pid                                         PIDReg-Hold(S935,S1097)
	S1102= PC[CIA]=addr                                         PC-Hold(S939,S1101)
	S1103= PC[Out]=addr+4                                       PC-Hold(S940,S1100,S1101)
	S1105= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S942,S1104)
	S1107= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S944,S1106)
	S1109= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S946,S1108)
	S1112= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S949,S1111)
	S1114= IMem[{pid,addr}]={31,rT,rA,rB,273}                   IMem-Hold(S951,S1113)
	S1117= [IR]={31,rT,rA,rB,273}                               IR-Hold(S954,S1116)
	S1119= GPRegs[rT]=b-a+ca                                    GPRegs-Write(S1090,S1092,S1118)
	S1121= [A]=a                                                A-Hold(S959,S1120)
	S1123= [B]=b                                                B-Hold(S961,S1122)
	S1125= XER[SO]=so                                           XER-SO-Hold(S963,S1124)
	S1128= XER[CA]=Carry(b-a+ca)                                XER-CA-Write(S1096,S1127)
	S1130= [ALUOut]=b-a+ca                                      ALUOut-Hold(S968,S1129)
	S1132= [CAReg]=Carry(b-a+ca)                                CAReg-Hold(S970,S1131)
	S1134= [DR4bit]={Compare0(b-a+ca),so}                       DR4bit-Hold(S972,S1133)
	S1137= CRRegs[CR0]={Compare0(b-a+ca),so}                    CRRegs-CR0-Write(S1094,S1136)

