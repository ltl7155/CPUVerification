
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={11,rS,rT,imm}                             Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)

IF	S3= PC.Out=addr                                             PC-Out(S0)
	S4= PC.Out=>ICache.IEA                                      Premise(F10)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={11,rS,rT,imm}                               ICache-Search(S5,S1)
	S7= ICache.Out=>IR_ID.In                                    Premise(F13)
	S8= IR_ID.In={11,rS,rT,imm}                                 Path(S6,S7)
	S9= CtrlPC=0                                                Premise(F26)
	S10= CtrlPCInc=1                                            Premise(F27)
	S11= PC[Out]=addr+4                                         PC-Inc(S0,S9,S10)
	S12= CtrlIR_ID=1                                            Premise(F32)
	S13= [IR_ID]={11,rS,rT,imm}                                 IR_ID-Write(S8,S12)
	S14= CtrlGPR=0                                              Premise(F35)
	S15= GPR[rS]=a                                              GPR-Hold(S2,S14)

ID	S16= IR_ID.Out={11,rS,rT,imm}                               IR-Out(S13)
	S17= IR_ID.Out25_21=rS                                      IR-Out(S13)
	S18= IR_ID.Out15_0=imm                                      IR-Out(S13)
	S19= IR_ID.Out25_21=>GPR.RReg1                              Premise(F85)
	S20= GPR.RReg1=rS                                           Path(S17,S19)
	S21= GPR.Rdata1=a                                           GPR-Read(S20,S15)
	S22= IR_ID.Out15_0=>LIMMEXT.In                              Premise(F86)
	S23= LIMMEXT.In=imm                                         Path(S18,S22)
	S24= LIMMEXT.Out={16{0},imm}                                LIMMEXT(S23)
	S25= GPR.Rdata1=>FU.InID1                                   Premise(F87)
	S26= FU.InID1=a                                             Path(S21,S25)
	S27= FU.OutID1=FU(a)                                        FU-Forward(S26)
	S28= FU.OutID1=>A_EX.In                                     Premise(F89)
	S29= A_EX.In=FU(a)                                          Path(S27,S28)
	S30= LIMMEXT.Out=>B_EX.In                                   Premise(F90)
	S31= B_EX.In={16{0},imm}                                    Path(S24,S30)
	S32= IR_ID.Out=>IR_EX.In                                    Premise(F91)
	S33= IR_EX.In={11,rS,rT,imm}                                Path(S16,S32)
	S34= CtrlPC=0                                               Premise(F100)
	S35= CtrlPCInc=0                                            Premise(F101)
	S36= PC[Out]=addr+4                                         PC-Hold(S11,S34,S35)
	S37= CtrlA_EX=1                                             Premise(F110)
	S38= [A_EX]=FU(a)                                           A_EX-Write(S29,S37)
	S39= CtrlB_EX=1                                             Premise(F111)
	S40= [B_EX]={16{0},imm}                                     B_EX-Write(S31,S39)
	S41= CtrlIR_EX=1                                            Premise(F112)
	S42= [IR_EX]={11,rS,rT,imm}                                 IR_EX-Write(S33,S41)

EX	S43= A_EX.Out=FU(a)                                         A_EX-Out(S38)
	S44= B_EX.Out={16{0},imm}                                   B_EX-Out(S40)
	S45= IR_EX.Out={11,rS,rT,imm}                               IR_EX-Out(S42)
	S46= A_EX.Out=>ALU.A                                        Premise(F129)
	S47= ALU.A=FU(a)                                            Path(S43,S46)
	S48= B_EX.Out=>ALU.B                                        Premise(F130)
	S49= ALU.B={16{0},imm}                                      Path(S44,S48)
	S50= ALU.Out={31{0},(FU(a)<u{16{0},imm})}                   ALU(S47,S49)
	S51= ALU.Out=>ALUOut_MEM.In                                 Premise(F132)
	S52= ALUOut_MEM.In={31{0},(FU(a)<u{16{0},imm})}             Path(S50,S51)
	S53= IR_EX.Out=>IR_MEM.In                                   Premise(F135)
	S54= IR_MEM.In={11,rS,rT,imm}                               Path(S45,S53)
	S55= CtrlPC=0                                               Premise(F141)
	S56= CtrlPCInc=0                                            Premise(F142)
	S57= PC[Out]=addr+4                                         PC-Hold(S36,S55,S56)
	S58= CtrlALUOut_MEM=1                                       Premise(F154)
	S59= [ALUOut_MEM]={31{0},(FU(a)<u{16{0},imm})}              ALUOut_MEM-Write(S52,S58)
	S60= CtrlIR_MEM=1                                           Premise(F155)
	S61= [IR_MEM]={11,rS,rT,imm}                                IR_MEM-Write(S54,S60)

MEM	S62= ALUOut_MEM.Out={31{0},(FU(a)<u{16{0},imm})}            ALUOut_MEM-Out(S59)
	S63= IR_MEM.Out={11,rS,rT,imm}                              IR_MEM-Out(S61)
	S64= IR_MEM.Out=>IR_DMMU1.In                                Premise(F172)
	S65= IR_DMMU1.In={11,rS,rT,imm}                             Path(S63,S64)
	S66= ALUOut_MEM.Out=>ALUOut_DMMU1.In                        Premise(F176)
	S67= ALUOut_DMMU1.In={31{0},(FU(a)<u{16{0},imm})}           Path(S62,S66)
	S68= CtrlPC=0                                               Premise(F187)
	S69= CtrlPCInc=0                                            Premise(F188)
	S70= PC[Out]=addr+4                                         PC-Hold(S57,S68,S69)
	S71= CtrlIR_DMMU1=1                                         Premise(F202)
	S72= [IR_DMMU1]={11,rS,rT,imm}                              IR_DMMU1-Write(S65,S71)
	S73= CtrlALUOut_DMMU1=1                                     Premise(F208)
	S74= [ALUOut_DMMU1]={31{0},(FU(a)<u{16{0},imm})}            ALUOut_DMMU1-Write(S67,S73)

MEM(DMMU1)	S75= IR_DMMU1.Out={11,rS,rT,imm}                            IR_DMMU1-Out(S72)
	S76= ALUOut_DMMU1.Out={31{0},(FU(a)<u{16{0},imm})}          ALUOut_DMMU1-Out(S74)
	S77= IR_DMMU1.Out=>IR_DMMU2.In                              Premise(F219)
	S78= IR_DMMU2.In={11,rS,rT,imm}                             Path(S75,S77)
	S79= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                      Premise(F220)
	S80= ALUOut_DMMU2.In={31{0},(FU(a)<u{16{0},imm})}           Path(S76,S79)
	S81= CtrlPC=0                                               Premise(F228)
	S82= CtrlPCInc=0                                            Premise(F229)
	S83= PC[Out]=addr+4                                         PC-Hold(S70,S81,S82)
	S84= CtrlIR_DMMU2=1                                         Premise(F251)
	S85= [IR_DMMU2]={11,rS,rT,imm}                              IR_DMMU2-Write(S78,S84)
	S86= CtrlALUOut_DMMU2=1                                     Premise(F252)
	S87= [ALUOut_DMMU2]={31{0},(FU(a)<u{16{0},imm})}            ALUOut_DMMU2-Write(S80,S86)

MEM(DMMU2)	S88= IR_DMMU2.Out={11,rS,rT,imm}                            IR_DMMU2-Out(S85)
	S89= ALUOut_DMMU2.Out={31{0},(FU(a)<u{16{0},imm})}          ALUOut_DMMU2-Out(S87)
	S90= IR_DMMU2.Out=>IR_WB.In                                 Premise(F257)
	S91= IR_WB.In={11,rS,rT,imm}                                Path(S88,S90)
	S92= ALUOut_DMMU2.Out=>ALUOut_WB.In                         Premise(F258)
	S93= ALUOut_WB.In={31{0},(FU(a)<u{16{0},imm})}              Path(S89,S92)
	S94= CtrlPC=0                                               Premise(F266)
	S95= CtrlPCInc=0                                            Premise(F267)
	S96= PC[Out]=addr+4                                         PC-Hold(S83,S94,S95)
	S97= CtrlIR_WB=1                                            Premise(F282)
	S98= [IR_WB]={11,rS,rT,imm}                                 IR_WB-Write(S91,S97)
	S99= CtrlALUOut_WB=1                                        Premise(F288)
	S100= [ALUOut_WB]={31{0},(FU(a)<u{16{0},imm})}              ALUOut_WB-Write(S93,S99)

WB	S101= IR_WB.Out20_16=rT                                     IR-Out(S98)
	S102= ALUOut_WB.Out={31{0},(FU(a)<u{16{0},imm})}            ALUOut_WB-Out(S100)
	S103= IR_WB.Out20_16=>GPR.WReg                              Premise(F293)
	S104= GPR.WReg=rT                                           Path(S101,S103)
	S105= ALUOut_WB.Out=>GPR.WData                              Premise(F294)
	S106= GPR.WData={31{0},(FU(a)<u{16{0},imm})}                Path(S102,S105)
	S107= CtrlPC=0                                              Premise(F302)
	S108= CtrlPCInc=0                                           Premise(F303)
	S109= PC[Out]=addr+4                                        PC-Hold(S96,S107,S108)
	S110= CtrlGPR=1                                             Premise(F311)
	S111= GPR[rT]={31{0},(FU(a)<u{16{0},imm})}                  GPR-Write(S104,S106,S110)

POST	S109= PC[Out]=addr+4                                        PC-Hold(S96,S107,S108)
	S111= GPR[rT]={31{0},(FU(a)<u{16{0},imm})}                  GPR-Write(S104,S106,S110)

