
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,rT,rD,0,11}                      Premise(F2)
	S3= GPR[rT]=b                                               Premise(F4)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= IMMU.Addr=>IAddrReg.In                                  Premise(F73)
	S7= PC.Out=>IMMU.IEA                                        Premise(F78)
	S8= IMMU.IEA=addr                                           Path(S5,S7)
	S9= CP0.ASID=>IMMU.PID                                      Premise(F79)
	S10= IMMU.PID=pid                                           Path(S4,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S10,S8)
	S12= IAddrReg.In={pid,addr}                                 Path(S11,S6)
	S13= CtrlGPR=0                                              Premise(F139)
	S14= GPR[rT]=b                                              GPR-Hold(S3,S13)
	S15= CtrlIAddrReg=1                                         Premise(F140)
	S16= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S15)
	S17= CtrlPC=0                                               Premise(F141)
	S18= CtrlPCInc=0                                            Premise(F142)
	S19= PC[Out]=addr                                           PC-Hold(S1,S17,S18)
	S20= CtrlIMem=0                                             Premise(F143)
	S21= IMem[{pid,addr}]={0,rS,rT,rD,0,11}                     IMem-Hold(S2,S20)

IMMU	S22= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S16)
	S23= PC.Out=addr                                            PC-Out(S19)
	S24= PC.Out=>ICache.IEA                                     Premise(F219)
	S25= ICache.IEA=addr                                        Path(S23,S24)
	S26= IMem.MEM8WordOut=>ICache.WData                         Premise(F221)
	S27= IAddrReg.Out=>IMem.RAddr                               Premise(F225)
	S28= IMem.RAddr={pid,addr}                                  Path(S22,S27)
	S29= IMem.Out={0,rS,rT,rD,0,11}                             IMem-Read(S28,S21)
	S30= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S28,S21)
	S31= ICache.WData=IMemGet8Word({pid,addr})                  Path(S30,S26)
	S32= IMem.Out=>IRMux.MemData                                Premise(F228)
	S33= IRMux.MemData={0,rS,rT,rD,0,11}                        Path(S29,S32)
	S34= IRMux.Out={0,rS,rT,rD,0,11}                            IRMux-Select2(S33)
	S35= IRMux.Out=>IR_ID.In                                    Premise(F234)
	S36= IR_ID.In={0,rS,rT,rD,0,11}                             Path(S34,S35)
	S37= CtrlICache=1                                           Premise(F271)
	S38= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S25,S31,S37)
	S39= CtrlIR_ID=1                                            Premise(F280)
	S40= [IR_ID]={0,rS,rT,rD,0,11}                              IR_ID-Write(S36,S39)
	S41= CtrlGPR=0                                              Premise(F284)
	S42= GPR[rT]=b                                              GPR-Hold(S14,S41)
	S43= CtrlPC=0                                               Premise(F286)
	S44= CtrlPCInc=1                                            Premise(F287)
	S45= PC[Out]=addr+4                                         PC-Inc(S19,S43,S44)

ID	S46= IR_ID.Out20_16=rT                                      IR-Out(S40)
	S47= FU.OutID2=>B_EX.In                                     Premise(F301)
	S48= GPR.Rdata2=>FU.InID2                                   Premise(F354)
	S49= IR_ID.Out20_16=>GPR.RReg2                              Premise(F360)
	S50= GPR.RReg2=rT                                           Path(S46,S49)
	S51= GPR.Rdata2=b                                           GPR-Read(S50,S42)
	S52= FU.InID2=b                                             Path(S51,S48)
	S53= FU.OutID2=FU(b)                                        FU-Forward(S52)
	S54= B_EX.In=FU(b)                                          Path(S53,S47)
	S55= CtrlB_EX=1                                             Premise(F413)
	S56= [B_EX]=FU(b)                                           B_EX-Write(S54,S55)
	S57= CtrlICache=0                                           Premise(F416)
	S58= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S38,S57)
	S59= CtrlPC=0                                               Premise(F431)
	S60= CtrlPCInc=0                                            Premise(F432)
	S61= PC[Out]=addr+4                                         PC-Hold(S45,S59,S60)

EX	S62= B_EX.Out=FU(b)                                         B_EX-Out(S56)
	S63= CMPU.A=32'b0                                           Premise(F448)
	S64= B_EX.Out=>CMPU.B                                       Premise(F449)
	S65= CMPU.B=FU(b)                                           Path(S62,S64)
	S66= CMPU.zero=CompareS(32'b0,FU(b))                        CMPU-CMPS(S63,S65)
	S67= CMPU.zero=>ConditionReg_MEM.In                         Premise(F484)
	S68= ConditionReg_MEM.In=CompareS(32'b0,FU(b))              Path(S66,S67)
	S69= CtrlICache=0                                           Premise(F563)
	S70= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S58,S69)
	S71= CtrlConditionReg_MEM=1                                 Premise(F566)
	S72= [ConditionReg_MEM]=CompareS(32'b0,FU(b))               ConditionReg_MEM-Write(S68,S71)
	S73= CtrlPC=0                                               Premise(F578)
	S74= CtrlPCInc=0                                            Premise(F579)
	S75= PC[Out]=addr+4                                         PC-Hold(S61,S73,S74)

MEM	S76= ConditionReg_MEM.Out=CompareS(32'b0,FU(b))             ConditionReg_MEM-Out(S72)
	S77= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In            Premise(F627)
	S78= ConditionReg_DMMU1.In=CompareS(32'b0,FU(b))            Path(S76,S77)
	S79= CtrlICache=0                                           Premise(F708)
	S80= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S70,S79)
	S81= CtrlConditionReg_DMMU1=1                               Premise(F712)
	S82= [ConditionReg_DMMU1]=CompareS(32'b0,FU(b))             ConditionReg_DMMU1-Write(S78,S81)
	S83= CtrlPC=0                                               Premise(F723)
	S84= CtrlPCInc=0                                            Premise(F724)
	S85= PC[Out]=addr+4                                         PC-Hold(S75,S83,S84)

DMMU1	S86= ConditionReg_DMMU1.Out=CompareS(32'b0,FU(b))           ConditionReg_DMMU1-Out(S82)
	S87= ConditionReg_DMMU1.Out=>ConditionReg_DMMU2.In          Premise(F773)
	S88= ConditionReg_DMMU2.In=CompareS(32'b0,FU(b))            Path(S86,S87)
	S89= CtrlICache=0                                           Premise(F853)
	S90= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S80,S89)
	S91= CtrlConditionReg_DMMU2=1                               Premise(F858)
	S92= [ConditionReg_DMMU2]=CompareS(32'b0,FU(b))             ConditionReg_DMMU2-Write(S88,S91)
	S93= CtrlPC=0                                               Premise(F868)
	S94= CtrlPCInc=0                                            Premise(F869)
	S95= PC[Out]=addr+4                                         PC-Hold(S85,S93,S94)

DMMU2	S96= ConditionReg_DMMU2.Out=CompareS(32'b0,FU(b))           ConditionReg_DMMU2-Out(S92)
	S97= ConditionReg_DMMU2.Out=>ConditionReg_WB.In             Premise(F920)
	S98= ConditionReg_WB.In=CompareS(32'b0,FU(b))               Path(S96,S97)
	S99= CtrlICache=0                                           Premise(F998)
	S100= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S90,S99)
	S101= CtrlConditionReg_WB=1                                 Premise(F1000)
	S102= [ConditionReg_WB]=CompareS(32'b0,FU(b))               ConditionReg_WB-Write(S98,S101)
	S103= CtrlPC=0                                              Premise(F1013)
	S104= CtrlPCInc=0                                           Premise(F1014)
	S105= PC[Out]=addr+4                                        PC-Hold(S95,S103,S104)

WB	S106= CtrlICache=0                                          Premise(F1143)
	S107= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S100,S106)
	S108= CtrlConditionReg_WB=0                                 Premise(F1145)
	S109= [ConditionReg_WB]=CompareS(32'b0,FU(b))               ConditionReg_WB-Hold(S102,S108)
	S110= CtrlPC=0                                              Premise(F1158)
	S111= CtrlPCInc=0                                           Premise(F1159)
	S112= PC[Out]=addr+4                                        PC-Hold(S105,S110,S111)

POST	S107= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S100,S106)
	S109= [ConditionReg_WB]=CompareS(32'b0,FU(b))               ConditionReg_WB-Hold(S102,S108)
	S112= PC[Out]=addr+4                                        PC-Hold(S105,S110,S111)

