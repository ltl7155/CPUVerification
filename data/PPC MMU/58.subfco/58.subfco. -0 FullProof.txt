
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,1041}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S8= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S9= PC.Out=addr                                             PC-Out(S1)
	S10= XER.SOOut=so                                           XER-SO-Out(S5)
	S11= PIDReg.Out=>IMMU.PID                                   Premise(F6)
	S12= IMMU.PID=pid                                           Path(S6,S11)
	S13= PC.Out=>IMMU.IEA                                       Premise(F7)
	S14= IMMU.IEA=addr                                          Path(S9,S13)
	S15= IMMU.Addr={pid,addr}                                   IMMU-Search(S12,S14)
	S16= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S12,S14)
	S17= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S18= IAddrReg.In={pid,addr}                                 Path(S15,S17)
	S19= IMMU.Hit=>IMMUHitReg.In                                Premise(F9)
	S20= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S16,S19)
	S21= PC.Out=>ICache.IEA                                     Premise(F10)
	S22= ICache.IEA=addr                                        Path(S9,S21)
	S23= ICache.Hit=ICacheHit(addr)                             ICache-Search(S22)
	S24= ICache.Out=>ICacheReg.In                               Premise(F11)
	S25= ICache.Hit=>ICacheHitReg.In                            Premise(F12)
	S26= ICacheHitReg.In=ICacheHit(addr)                        Path(S23,S25)
	S27= IMMUHitReg.Out=>CU.IMemHit                             Premise(F13)
	S28= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F14)
	S29= IAddrReg.Out=>IMem.RAddr                               Premise(F15)
	S30= IMem.Out=>IRMux.MemData                                Premise(F16)
	S31= ICacheReg.Out=>IRMux.CacheData                         Premise(F17)
	S32= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F18)
	S33= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F19)
	S34= IRMux.Out=>IR.In                                       Premise(F20)
	S35= IMem.MEM8WordOut=>ICache.WData                         Premise(F21)
	S36= PC.Out=>ICache.IEA                                     Premise(F22)
	S37= IR.Out0_5=>CU.Op                                       Premise(F23)
	S38= IR.Out11_15=>GPRegs.RReg1                              Premise(F24)
	S39= IR.Out16_20=>GPRegs.RReg2                              Premise(F25)
	S40= IR.Out21_31=>CU.IRFunc                                 Premise(F26)
	S41= GPRegs.Rdata1=>A.In                                    Premise(F27)
	S42= GPRegs.Rdata2=>B.In                                    Premise(F28)
	S43= A.Out=>ALU.A                                           Premise(F29)
	S44= B.Out=>ALU.B                                           Premise(F30)
	S45= CU.Func=>ALU.Func                                      Premise(F31)
	S46= ALU.Out=>ALUOut.In                                     Premise(F32)
	S47= ALU.CA=>CAReg.In                                       Premise(F33)
	S48= ALU.CMP=>DataCmb.A                                     Premise(F34)
	S49= ORGate.Out=>DataCmb.B                                  Premise(F35)
	S50= ALU.OV=>OVReg.In                                       Premise(F36)
	S51= XER.SOOut=>ORGate.A                                    Premise(F37)
	S52= ORGate.A=so                                            Path(S10,S51)
	S53= ALU.OV=>ORGate.B                                       Premise(F38)
	S54= ORGate.Out=>DR1bit.In                                  Premise(F39)
	S55= DataCmb.Out=>DR4bit.In                                 Premise(F40)
	S56= IR.Out6_10=>GPRegs.WReg                                Premise(F41)
	S57= ALUOut.Out=>GPRegs.WData                               Premise(F42)
	S58= DR4bit.Out=>CRRegs.CR0In                               Premise(F43)
	S59= DR1bit.Out=>XER.SOIn                                   Premise(F44)
	S60= CAReg.Out=>XER.CAIn                                    Premise(F45)
	S61= OVReg.Out=>XER.OVIn                                    Premise(F46)
	S62= CtrlPIDReg=0                                           Premise(F47)
	S63= [PIDReg]=pid                                           PIDReg-Hold(S0,S62)
	S64= CtrlIMMU=0                                             Premise(F48)
	S65= CtrlPC=0                                               Premise(F49)
	S66= CtrlPCInc=0                                            Premise(F50)
	S67= PC[Out]=addr                                           PC-Hold(S1,S65,S66)
	S68= CtrlIAddrReg=1                                         Premise(F51)
	S69= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S18,S68)
	S70= CtrlIMMUHitReg=1                                       Premise(F52)
	S71= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S20,S70)
	S72= CtrlICache=0                                           Premise(F53)
	S73= CtrlICacheReg=1                                        Premise(F54)
	S74= CtrlICacheHitReg=1                                     Premise(F55)
	S75= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S26,S74)
	S76= CtrlIMem=0                                             Premise(F56)
	S77= IMem[{pid,addr}]={31,rT,rA,rB,1041}                    IMem-Hold(S2,S76)
	S78= CtrlIRMux=0                                            Premise(F57)
	S79= CtrlIR=0                                               Premise(F58)
	S80= CtrlGPRegs=0                                           Premise(F59)
	S81= GPRegs[rA]=a                                           GPRegs-Hold(S3,S80)
	S82= GPRegs[rB]=b                                           GPRegs-Hold(S4,S80)
	S83= CtrlA=0                                                Premise(F60)
	S84= CtrlB=0                                                Premise(F61)
	S85= CtrlALUOut=0                                           Premise(F62)
	S86= CtrlCAReg=0                                            Premise(F63)
	S87= CtrlOVReg=0                                            Premise(F64)
	S88= CtrlXERSO=0                                            Premise(F65)
	S89= XER[SO]=so                                             XER-SO-Hold(S5,S88)
	S90= CtrlXEROV=0                                            Premise(F66)
	S91= CtrlXERCA=0                                            Premise(F67)
	S92= CtrlDR1bit=0                                           Premise(F68)
	S93= CtrlDR4bit=0                                           Premise(F69)
	S94= CtrlCRRegs=0                                           Premise(F70)
	S95= CtrlCRRegsCR0=0                                        Premise(F71)
	S96= CtrlCRRegsW4bitRegs=0                                  Premise(F72)
	S97= CtrlCRRegsW1bitRegs=0                                  Premise(F73)

IMMU	S98= PIDReg.Out=pid                                         PIDReg-Out(S63)
	S99= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S63)
	S100= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S63)
	S101= PC.Out=addr                                           PC-Out(S67)
	S102= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S69)
	S103= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S69)
	S104= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S69)
	S105= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S71)
	S106= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S71)
	S107= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S71)
	S108= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S75)
	S109= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S75)
	S110= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S75)
	S111= XER.SOOut=so                                          XER-SO-Out(S89)
	S112= PIDReg.Out=>IMMU.PID                                  Premise(F74)
	S113= IMMU.PID=pid                                          Path(S98,S112)
	S114= PC.Out=>IMMU.IEA                                      Premise(F75)
	S115= IMMU.IEA=addr                                         Path(S101,S114)
	S116= IMMU.Addr={pid,addr}                                  IMMU-Search(S113,S115)
	S117= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S113,S115)
	S118= IMMU.Addr=>IAddrReg.In                                Premise(F76)
	S119= IAddrReg.In={pid,addr}                                Path(S116,S118)
	S120= IMMU.Hit=>IMMUHitReg.In                               Premise(F77)
	S121= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S117,S120)
	S122= PC.Out=>ICache.IEA                                    Premise(F78)
	S123= ICache.IEA=addr                                       Path(S101,S122)
	S124= ICache.Hit=ICacheHit(addr)                            ICache-Search(S123)
	S125= ICache.Out=>ICacheReg.In                              Premise(F79)
	S126= ICache.Hit=>ICacheHitReg.In                           Premise(F80)
	S127= ICacheHitReg.In=ICacheHit(addr)                       Path(S124,S126)
	S128= IMMUHitReg.Out=>CU.IMemHit                            Premise(F81)
	S129= CU.IMemHit=IMMUHit(pid,addr)                          Path(S105,S128)
	S130= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F82)
	S131= CU.ICacheHit=ICacheHit(addr)                          Path(S108,S130)
	S132= IAddrReg.Out=>IMem.RAddr                              Premise(F83)
	S133= IMem.RAddr={pid,addr}                                 Path(S102,S132)
	S134= IMem.Out={31,rT,rA,rB,1041}                           IMem-Read(S133,S77)
	S135= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S133,S77)
	S136= IMem.Out=>IRMux.MemData                               Premise(F84)
	S137= IRMux.MemData={31,rT,rA,rB,1041}                      Path(S134,S136)
	S138= IRMux.Out={31,rT,rA,rB,1041}                          IRMux-Select(S137)
	S139= ICacheReg.Out=>IRMux.CacheData                        Premise(F85)
	S140= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F86)
	S141= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S105,S140)
	S142= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F87)
	S143= IRMux.CacheSel=ICacheHit(addr)                        Path(S108,S142)
	S144= IRMux.Out=>IR.In                                      Premise(F88)
	S145= IR.In={31,rT,rA,rB,1041}                              Path(S138,S144)
	S146= IMem.MEM8WordOut=>ICache.WData                        Premise(F89)
	S147= ICache.WData=IMemGet8Word({pid,addr})                 Path(S135,S146)
	S148= PC.Out=>ICache.IEA                                    Premise(F90)
	S149= IR.Out0_5=>CU.Op                                      Premise(F91)
	S150= IR.Out11_15=>GPRegs.RReg1                             Premise(F92)
	S151= IR.Out16_20=>GPRegs.RReg2                             Premise(F93)
	S152= IR.Out21_31=>CU.IRFunc                                Premise(F94)
	S153= GPRegs.Rdata1=>A.In                                   Premise(F95)
	S154= GPRegs.Rdata2=>B.In                                   Premise(F96)
	S155= A.Out=>ALU.A                                          Premise(F97)
	S156= B.Out=>ALU.B                                          Premise(F98)
	S157= CU.Func=>ALU.Func                                     Premise(F99)
	S158= ALU.Out=>ALUOut.In                                    Premise(F100)
	S159= ALU.CA=>CAReg.In                                      Premise(F101)
	S160= ALU.CMP=>DataCmb.A                                    Premise(F102)
	S161= ORGate.Out=>DataCmb.B                                 Premise(F103)
	S162= ALU.OV=>OVReg.In                                      Premise(F104)
	S163= XER.SOOut=>ORGate.A                                   Premise(F105)
	S164= ORGate.A=so                                           Path(S111,S163)
	S165= ALU.OV=>ORGate.B                                      Premise(F106)
	S166= ORGate.Out=>DR1bit.In                                 Premise(F107)
	S167= DataCmb.Out=>DR4bit.In                                Premise(F108)
	S168= IR.Out6_10=>GPRegs.WReg                               Premise(F109)
	S169= ALUOut.Out=>GPRegs.WData                              Premise(F110)
	S170= DR4bit.Out=>CRRegs.CR0In                              Premise(F111)
	S171= DR1bit.Out=>XER.SOIn                                  Premise(F112)
	S172= CAReg.Out=>XER.CAIn                                   Premise(F113)
	S173= OVReg.Out=>XER.OVIn                                   Premise(F114)
	S174= CtrlPIDReg=0                                          Premise(F115)
	S175= [PIDReg]=pid                                          PIDReg-Hold(S63,S174)
	S176= CtrlIMMU=0                                            Premise(F116)
	S177= CtrlPC=0                                              Premise(F117)
	S178= CtrlPCInc=1                                           Premise(F118)
	S179= PC[Out]=addr+4                                        PC-Inc(S67,S177,S178)
	S180= PC[CIA]=addr                                          PC-Inc(S67,S177,S178)
	S181= CtrlIAddrReg=0                                        Premise(F119)
	S182= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S69,S181)
	S183= CtrlIMMUHitReg=0                                      Premise(F120)
	S184= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S71,S183)
	S185= CtrlICache=1                                          Premise(F121)
	S186= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S123,S147,S185)
	S187= CtrlICacheReg=0                                       Premise(F122)
	S188= CtrlICacheHitReg=0                                    Premise(F123)
	S189= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S75,S188)
	S190= CtrlIMem=0                                            Premise(F124)
	S191= IMem[{pid,addr}]={31,rT,rA,rB,1041}                   IMem-Hold(S77,S190)
	S192= CtrlIRMux=0                                           Premise(F125)
	S193= CtrlIR=1                                              Premise(F126)
	S194= [IR]={31,rT,rA,rB,1041}                               IR-Write(S145,S193)
	S195= CtrlGPRegs=0                                          Premise(F127)
	S196= GPRegs[rA]=a                                          GPRegs-Hold(S81,S195)
	S197= GPRegs[rB]=b                                          GPRegs-Hold(S82,S195)
	S198= CtrlA=0                                               Premise(F128)
	S199= CtrlB=0                                               Premise(F129)
	S200= CtrlALUOut=0                                          Premise(F130)
	S201= CtrlCAReg=0                                           Premise(F131)
	S202= CtrlOVReg=0                                           Premise(F132)
	S203= CtrlXERSO=0                                           Premise(F133)
	S204= XER[SO]=so                                            XER-SO-Hold(S89,S203)
	S205= CtrlXEROV=0                                           Premise(F134)
	S206= CtrlXERCA=0                                           Premise(F135)
	S207= CtrlDR1bit=0                                          Premise(F136)
	S208= CtrlDR4bit=0                                          Premise(F137)
	S209= CtrlCRRegs=0                                          Premise(F138)
	S210= CtrlCRRegsCR0=0                                       Premise(F139)
	S211= CtrlCRRegsW4bitRegs=0                                 Premise(F140)
	S212= CtrlCRRegsW1bitRegs=0                                 Premise(F141)

ID	S213= PIDReg.Out=pid                                        PIDReg-Out(S175)
	S214= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S175)
	S215= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S175)
	S216= PC.Out=addr+4                                         PC-Out(S179)
	S217= PC.CIA=addr                                           PC-Out(S180)
	S218= PC.CIA31_28=addr[31:28]                               PC-Out(S180)
	S219= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S182)
	S220= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S182)
	S221= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S182)
	S222= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S184)
	S223= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S184)
	S224= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S184)
	S225= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S189)
	S226= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S189)
	S227= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S189)
	S228= IR.Out0_5=31                                          IR-Out(S194)
	S229= IR.Out6_10=rT                                         IR-Out(S194)
	S230= IR.Out11_15=rA                                        IR-Out(S194)
	S231= IR.Out16_20=rB                                        IR-Out(S194)
	S232= IR.Out21_31=1041                                      IR-Out(S194)
	S233= XER.SOOut=so                                          XER-SO-Out(S204)
	S234= PIDReg.Out=>IMMU.PID                                  Premise(F142)
	S235= IMMU.PID=pid                                          Path(S213,S234)
	S236= PC.Out=>IMMU.IEA                                      Premise(F143)
	S237= IMMU.IEA=addr+4                                       Path(S216,S236)
	S238= IMMU.Addr={pid,addr+4}                                IMMU-Search(S235,S237)
	S239= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S235,S237)
	S240= IMMU.Addr=>IAddrReg.In                                Premise(F144)
	S241= IAddrReg.In={pid,addr+4}                              Path(S238,S240)
	S242= IMMU.Hit=>IMMUHitReg.In                               Premise(F145)
	S243= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S239,S242)
	S244= PC.Out=>ICache.IEA                                    Premise(F146)
	S245= ICache.IEA=addr+4                                     Path(S216,S244)
	S246= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S245)
	S247= ICache.Out=>ICacheReg.In                              Premise(F147)
	S248= ICache.Hit=>ICacheHitReg.In                           Premise(F148)
	S249= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S246,S248)
	S250= IMMUHitReg.Out=>CU.IMemHit                            Premise(F149)
	S251= CU.IMemHit=IMMUHit(pid,addr)                          Path(S222,S250)
	S252= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F150)
	S253= CU.ICacheHit=ICacheHit(addr)                          Path(S225,S252)
	S254= IAddrReg.Out=>IMem.RAddr                              Premise(F151)
	S255= IMem.RAddr={pid,addr}                                 Path(S219,S254)
	S256= IMem.Out={31,rT,rA,rB,1041}                           IMem-Read(S255,S191)
	S257= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S255,S191)
	S258= IMem.Out=>IRMux.MemData                               Premise(F152)
	S259= IRMux.MemData={31,rT,rA,rB,1041}                      Path(S256,S258)
	S260= IRMux.Out={31,rT,rA,rB,1041}                          IRMux-Select(S259)
	S261= ICacheReg.Out=>IRMux.CacheData                        Premise(F153)
	S262= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F154)
	S263= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S222,S262)
	S264= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F155)
	S265= IRMux.CacheSel=ICacheHit(addr)                        Path(S225,S264)
	S266= IRMux.Out=>IR.In                                      Premise(F156)
	S267= IR.In={31,rT,rA,rB,1041}                              Path(S260,S266)
	S268= IMem.MEM8WordOut=>ICache.WData                        Premise(F157)
	S269= ICache.WData=IMemGet8Word({pid,addr})                 Path(S257,S268)
	S270= PC.Out=>ICache.IEA                                    Premise(F158)
	S271= IR.Out0_5=>CU.Op                                      Premise(F159)
	S272= CU.Op=31                                              Path(S228,S271)
	S273= IR.Out11_15=>GPRegs.RReg1                             Premise(F160)
	S274= GPRegs.RReg1=rA                                       Path(S230,S273)
	S275= GPRegs.Rdata1=a                                       GPRegs-Read(S274,S196)
	S276= IR.Out16_20=>GPRegs.RReg2                             Premise(F161)
	S277= GPRegs.RReg2=rB                                       Path(S231,S276)
	S278= GPRegs.Rdata2=b                                       GPRegs-Read(S277,S197)
	S279= IR.Out21_31=>CU.IRFunc                                Premise(F162)
	S280= CU.IRFunc=1041                                        Path(S232,S279)
	S281= CU.Func=alu_subf                                      CU(S272,S280)
	S282= GPRegs.Rdata1=>A.In                                   Premise(F163)
	S283= A.In=a                                                Path(S275,S282)
	S284= GPRegs.Rdata2=>B.In                                   Premise(F164)
	S285= B.In=b                                                Path(S278,S284)
	S286= A.Out=>ALU.A                                          Premise(F165)
	S287= B.Out=>ALU.B                                          Premise(F166)
	S288= CU.Func=>ALU.Func                                     Premise(F167)
	S289= ALU.Func=alu_subf                                     Path(S281,S288)
	S290= ALU.Out=>ALUOut.In                                    Premise(F168)
	S291= ALU.CA=>CAReg.In                                      Premise(F169)
	S292= ALU.CMP=>DataCmb.A                                    Premise(F170)
	S293= ORGate.Out=>DataCmb.B                                 Premise(F171)
	S294= ALU.OV=>OVReg.In                                      Premise(F172)
	S295= XER.SOOut=>ORGate.A                                   Premise(F173)
	S296= ORGate.A=so                                           Path(S233,S295)
	S297= ALU.OV=>ORGate.B                                      Premise(F174)
	S298= ORGate.Out=>DR1bit.In                                 Premise(F175)
	S299= DataCmb.Out=>DR4bit.In                                Premise(F176)
	S300= IR.Out6_10=>GPRegs.WReg                               Premise(F177)
	S301= GPRegs.WReg=rT                                        Path(S229,S300)
	S302= ALUOut.Out=>GPRegs.WData                              Premise(F178)
	S303= DR4bit.Out=>CRRegs.CR0In                              Premise(F179)
	S304= DR1bit.Out=>XER.SOIn                                  Premise(F180)
	S305= CAReg.Out=>XER.CAIn                                   Premise(F181)
	S306= OVReg.Out=>XER.OVIn                                   Premise(F182)
	S307= CtrlPIDReg=0                                          Premise(F183)
	S308= [PIDReg]=pid                                          PIDReg-Hold(S175,S307)
	S309= CtrlIMMU=0                                            Premise(F184)
	S310= CtrlPC=0                                              Premise(F185)
	S311= CtrlPCInc=0                                           Premise(F186)
	S312= PC[CIA]=addr                                          PC-Hold(S180,S311)
	S313= PC[Out]=addr+4                                        PC-Hold(S179,S310,S311)
	S314= CtrlIAddrReg=0                                        Premise(F187)
	S315= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S182,S314)
	S316= CtrlIMMUHitReg=0                                      Premise(F188)
	S317= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S184,S316)
	S318= CtrlICache=0                                          Premise(F189)
	S319= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S186,S318)
	S320= CtrlICacheReg=0                                       Premise(F190)
	S321= CtrlICacheHitReg=0                                    Premise(F191)
	S322= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S189,S321)
	S323= CtrlIMem=0                                            Premise(F192)
	S324= IMem[{pid,addr}]={31,rT,rA,rB,1041}                   IMem-Hold(S191,S323)
	S325= CtrlIRMux=0                                           Premise(F193)
	S326= CtrlIR=0                                              Premise(F194)
	S327= [IR]={31,rT,rA,rB,1041}                               IR-Hold(S194,S326)
	S328= CtrlGPRegs=0                                          Premise(F195)
	S329= GPRegs[rA]=a                                          GPRegs-Hold(S196,S328)
	S330= GPRegs[rB]=b                                          GPRegs-Hold(S197,S328)
	S331= CtrlA=1                                               Premise(F196)
	S332= [A]=a                                                 A-Write(S283,S331)
	S333= CtrlB=1                                               Premise(F197)
	S334= [B]=b                                                 B-Write(S285,S333)
	S335= CtrlALUOut=0                                          Premise(F198)
	S336= CtrlCAReg=0                                           Premise(F199)
	S337= CtrlOVReg=0                                           Premise(F200)
	S338= CtrlXERSO=0                                           Premise(F201)
	S339= XER[SO]=so                                            XER-SO-Hold(S204,S338)
	S340= CtrlXEROV=0                                           Premise(F202)
	S341= CtrlXERCA=0                                           Premise(F203)
	S342= CtrlDR1bit=0                                          Premise(F204)
	S343= CtrlDR4bit=0                                          Premise(F205)
	S344= CtrlCRRegs=0                                          Premise(F206)
	S345= CtrlCRRegsCR0=0                                       Premise(F207)
	S346= CtrlCRRegsW4bitRegs=0                                 Premise(F208)
	S347= CtrlCRRegsW1bitRegs=0                                 Premise(F209)

EX	S348= PIDReg.Out=pid                                        PIDReg-Out(S308)
	S349= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S308)
	S350= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S308)
	S351= PC.CIA=addr                                           PC-Out(S312)
	S352= PC.CIA31_28=addr[31:28]                               PC-Out(S312)
	S353= PC.Out=addr+4                                         PC-Out(S313)
	S354= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S315)
	S355= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S315)
	S356= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S315)
	S357= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S317)
	S358= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S317)
	S359= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S317)
	S360= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S322)
	S361= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S322)
	S362= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S322)
	S363= IR.Out0_5=31                                          IR-Out(S327)
	S364= IR.Out6_10=rT                                         IR-Out(S327)
	S365= IR.Out11_15=rA                                        IR-Out(S327)
	S366= IR.Out16_20=rB                                        IR-Out(S327)
	S367= IR.Out21_31=1041                                      IR-Out(S327)
	S368= A.Out=a                                               A-Out(S332)
	S369= A.Out26_31=a[26:31]                                   A-Out(S332)
	S370= A.Out30_31=a[30:31]                                   A-Out(S332)
	S371= B.Out=b                                               B-Out(S334)
	S372= B.Out26_31=b[26:31]                                   B-Out(S334)
	S373= B.Out30_31=b[30:31]                                   B-Out(S334)
	S374= XER.SOOut=so                                          XER-SO-Out(S339)
	S375= PIDReg.Out=>IMMU.PID                                  Premise(F210)
	S376= IMMU.PID=pid                                          Path(S348,S375)
	S377= PC.Out=>IMMU.IEA                                      Premise(F211)
	S378= IMMU.IEA=addr+4                                       Path(S353,S377)
	S379= IMMU.Addr={pid,addr+4}                                IMMU-Search(S376,S378)
	S380= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S376,S378)
	S381= IMMU.Addr=>IAddrReg.In                                Premise(F212)
	S382= IAddrReg.In={pid,addr+4}                              Path(S379,S381)
	S383= IMMU.Hit=>IMMUHitReg.In                               Premise(F213)
	S384= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S380,S383)
	S385= PC.Out=>ICache.IEA                                    Premise(F214)
	S386= ICache.IEA=addr+4                                     Path(S353,S385)
	S387= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S386)
	S388= ICache.Out=>ICacheReg.In                              Premise(F215)
	S389= ICache.Hit=>ICacheHitReg.In                           Premise(F216)
	S390= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S387,S389)
	S391= IMMUHitReg.Out=>CU.IMemHit                            Premise(F217)
	S392= CU.IMemHit=IMMUHit(pid,addr)                          Path(S357,S391)
	S393= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F218)
	S394= CU.ICacheHit=ICacheHit(addr)                          Path(S360,S393)
	S395= IAddrReg.Out=>IMem.RAddr                              Premise(F219)
	S396= IMem.RAddr={pid,addr}                                 Path(S354,S395)
	S397= IMem.Out={31,rT,rA,rB,1041}                           IMem-Read(S396,S324)
	S398= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S396,S324)
	S399= IMem.Out=>IRMux.MemData                               Premise(F220)
	S400= IRMux.MemData={31,rT,rA,rB,1041}                      Path(S397,S399)
	S401= IRMux.Out={31,rT,rA,rB,1041}                          IRMux-Select(S400)
	S402= ICacheReg.Out=>IRMux.CacheData                        Premise(F221)
	S403= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F222)
	S404= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S357,S403)
	S405= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F223)
	S406= IRMux.CacheSel=ICacheHit(addr)                        Path(S360,S405)
	S407= IRMux.Out=>IR.In                                      Premise(F224)
	S408= IR.In={31,rT,rA,rB,1041}                              Path(S401,S407)
	S409= IMem.MEM8WordOut=>ICache.WData                        Premise(F225)
	S410= ICache.WData=IMemGet8Word({pid,addr})                 Path(S398,S409)
	S411= PC.Out=>ICache.IEA                                    Premise(F226)
	S412= IR.Out0_5=>CU.Op                                      Premise(F227)
	S413= CU.Op=31                                              Path(S363,S412)
	S414= IR.Out11_15=>GPRegs.RReg1                             Premise(F228)
	S415= GPRegs.RReg1=rA                                       Path(S365,S414)
	S416= GPRegs.Rdata1=a                                       GPRegs-Read(S415,S329)
	S417= IR.Out16_20=>GPRegs.RReg2                             Premise(F229)
	S418= GPRegs.RReg2=rB                                       Path(S366,S417)
	S419= GPRegs.Rdata2=b                                       GPRegs-Read(S418,S330)
	S420= IR.Out21_31=>CU.IRFunc                                Premise(F230)
	S421= CU.IRFunc=1041                                        Path(S367,S420)
	S422= CU.Func=alu_subf                                      CU(S413,S421)
	S423= GPRegs.Rdata1=>A.In                                   Premise(F231)
	S424= A.In=a                                                Path(S416,S423)
	S425= GPRegs.Rdata2=>B.In                                   Premise(F232)
	S426= B.In=b                                                Path(S419,S425)
	S427= A.Out=>ALU.A                                          Premise(F233)
	S428= ALU.A=a                                               Path(S368,S427)
	S429= B.Out=>ALU.B                                          Premise(F234)
	S430= ALU.B=b                                               Path(S371,S429)
	S431= CU.Func=>ALU.Func                                     Premise(F235)
	S432= ALU.Func=alu_subf                                     Path(S422,S431)
	S433= ALU.Out=b-a                                           ALU(S428,S430)
	S434= ALU.CMP=Compare0(b-a)                                 ALU(S428,S430)
	S435= ALU.OV=OverFlow(b-a)                                  ALU(S428,S430)
	S436= ALU.CA=Carry(b-a)                                     ALU(S428,S430)
	S437= ALU.Out=>ALUOut.In                                    Premise(F236)
	S438= ALUOut.In=b-a                                         Path(S433,S437)
	S439= ALU.CA=>CAReg.In                                      Premise(F237)
	S440= CAReg.In=Carry(b-a)                                   Path(S436,S439)
	S441= ALU.CMP=>DataCmb.A                                    Premise(F238)
	S442= DataCmb.A=Compare0(b-a)                               Path(S434,S441)
	S443= ORGate.Out=>DataCmb.B                                 Premise(F239)
	S444= ALU.OV=>OVReg.In                                      Premise(F240)
	S445= OVReg.In=OverFlow(b-a)                                Path(S435,S444)
	S446= XER.SOOut=>ORGate.A                                   Premise(F241)
	S447= ORGate.A=so                                           Path(S374,S446)
	S448= ALU.OV=>ORGate.B                                      Premise(F242)
	S449= ORGate.B=OverFlow(b-a)                                Path(S435,S448)
	S450= ORGate.Out=so|OverFlow(b-a)                           ORGate(S447,S449)
	S451= DataCmb.B=so|OverFlow(b-a)                            Path(S450,S443)
	S452= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}          DataCmb(S442,S451)
	S453= ORGate.Out=>DR1bit.In                                 Premise(F243)
	S454= DR1bit.In=so|OverFlow(b-a)                            Path(S450,S453)
	S455= DataCmb.Out=>DR4bit.In                                Premise(F244)
	S456= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}            Path(S452,S455)
	S457= IR.Out6_10=>GPRegs.WReg                               Premise(F245)
	S458= GPRegs.WReg=rT                                        Path(S364,S457)
	S459= ALUOut.Out=>GPRegs.WData                              Premise(F246)
	S460= DR4bit.Out=>CRRegs.CR0In                              Premise(F247)
	S461= DR1bit.Out=>XER.SOIn                                  Premise(F248)
	S462= CAReg.Out=>XER.CAIn                                   Premise(F249)
	S463= OVReg.Out=>XER.OVIn                                   Premise(F250)
	S464= CtrlPIDReg=0                                          Premise(F251)
	S465= [PIDReg]=pid                                          PIDReg-Hold(S308,S464)
	S466= CtrlIMMU=0                                            Premise(F252)
	S467= CtrlPC=0                                              Premise(F253)
	S468= CtrlPCInc=0                                           Premise(F254)
	S469= PC[CIA]=addr                                          PC-Hold(S312,S468)
	S470= PC[Out]=addr+4                                        PC-Hold(S313,S467,S468)
	S471= CtrlIAddrReg=0                                        Premise(F255)
	S472= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S315,S471)
	S473= CtrlIMMUHitReg=0                                      Premise(F256)
	S474= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S317,S473)
	S475= CtrlICache=0                                          Premise(F257)
	S476= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S319,S475)
	S477= CtrlICacheReg=0                                       Premise(F258)
	S478= CtrlICacheHitReg=0                                    Premise(F259)
	S479= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S322,S478)
	S480= CtrlIMem=0                                            Premise(F260)
	S481= IMem[{pid,addr}]={31,rT,rA,rB,1041}                   IMem-Hold(S324,S480)
	S482= CtrlIRMux=0                                           Premise(F261)
	S483= CtrlIR=0                                              Premise(F262)
	S484= [IR]={31,rT,rA,rB,1041}                               IR-Hold(S327,S483)
	S485= CtrlGPRegs=0                                          Premise(F263)
	S486= GPRegs[rA]=a                                          GPRegs-Hold(S329,S485)
	S487= GPRegs[rB]=b                                          GPRegs-Hold(S330,S485)
	S488= CtrlA=0                                               Premise(F264)
	S489= [A]=a                                                 A-Hold(S332,S488)
	S490= CtrlB=0                                               Premise(F265)
	S491= [B]=b                                                 B-Hold(S334,S490)
	S492= CtrlALUOut=1                                          Premise(F266)
	S493= [ALUOut]=b-a                                          ALUOut-Write(S438,S492)
	S494= CtrlCAReg=1                                           Premise(F267)
	S495= [CAReg]=Carry(b-a)                                    CAReg-Write(S440,S494)
	S496= CtrlOVReg=1                                           Premise(F268)
	S497= [OVReg]=OverFlow(b-a)                                 OVReg-Write(S445,S496)
	S498= CtrlXERSO=0                                           Premise(F269)
	S499= XER[SO]=so                                            XER-SO-Hold(S339,S498)
	S500= CtrlXEROV=0                                           Premise(F270)
	S501= CtrlXERCA=0                                           Premise(F271)
	S502= CtrlDR1bit=1                                          Premise(F272)
	S503= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Write(S454,S502)
	S504= CtrlDR4bit=1                                          Premise(F273)
	S505= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}             DR4bit-Write(S456,S504)
	S506= CtrlCRRegs=0                                          Premise(F274)
	S507= CtrlCRRegsCR0=0                                       Premise(F275)
	S508= CtrlCRRegsW4bitRegs=0                                 Premise(F276)
	S509= CtrlCRRegsW1bitRegs=0                                 Premise(F277)

MEM	S510= PIDReg.Out=pid                                        PIDReg-Out(S465)
	S511= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S465)
	S512= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S465)
	S513= PC.CIA=addr                                           PC-Out(S469)
	S514= PC.CIA31_28=addr[31:28]                               PC-Out(S469)
	S515= PC.Out=addr+4                                         PC-Out(S470)
	S516= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S472)
	S517= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S472)
	S518= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S472)
	S519= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S474)
	S520= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S474)
	S521= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S474)
	S522= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S479)
	S523= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S479)
	S524= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S479)
	S525= IR.Out0_5=31                                          IR-Out(S484)
	S526= IR.Out6_10=rT                                         IR-Out(S484)
	S527= IR.Out11_15=rA                                        IR-Out(S484)
	S528= IR.Out16_20=rB                                        IR-Out(S484)
	S529= IR.Out21_31=1041                                      IR-Out(S484)
	S530= A.Out=a                                               A-Out(S489)
	S531= A.Out26_31=a[26:31]                                   A-Out(S489)
	S532= A.Out30_31=a[30:31]                                   A-Out(S489)
	S533= B.Out=b                                               B-Out(S491)
	S534= B.Out26_31=b[26:31]                                   B-Out(S491)
	S535= B.Out30_31=b[30:31]                                   B-Out(S491)
	S536= ALUOut.Out=b-a                                        ALUOut-Out(S493)
	S537= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S493)
	S538= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S493)
	S539= CAReg.Out=Carry(b-a)                                  CAReg-Out(S495)
	S540= CAReg.Out26_31=Carry(b-a)[26:31]                      CAReg-Out(S495)
	S541= CAReg.Out30_31=Carry(b-a)[30:31]                      CAReg-Out(S495)
	S542= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S497)
	S543= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S497)
	S544= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S497)
	S545= XER.SOOut=so                                          XER-SO-Out(S499)
	S546= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S503)
	S547= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S503)
	S548= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S503)
	S549= DR4bit.Out={Compare0(b-a),so|OverFlow(b-a)}           DR4bit-Out(S505)
	S550= DR4bit.Out26_31={Compare0(b-a),so|OverFlow(b-a)}[26:31]DR4bit-Out(S505)
	S551= DR4bit.Out30_31={Compare0(b-a),so|OverFlow(b-a)}[30:31]DR4bit-Out(S505)
	S552= PIDReg.Out=>IMMU.PID                                  Premise(F278)
	S553= IMMU.PID=pid                                          Path(S510,S552)
	S554= PC.Out=>IMMU.IEA                                      Premise(F279)
	S555= IMMU.IEA=addr+4                                       Path(S515,S554)
	S556= IMMU.Addr={pid,addr+4}                                IMMU-Search(S553,S555)
	S557= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S553,S555)
	S558= IMMU.Addr=>IAddrReg.In                                Premise(F280)
	S559= IAddrReg.In={pid,addr+4}                              Path(S556,S558)
	S560= IMMU.Hit=>IMMUHitReg.In                               Premise(F281)
	S561= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S557,S560)
	S562= PC.Out=>ICache.IEA                                    Premise(F282)
	S563= ICache.IEA=addr+4                                     Path(S515,S562)
	S564= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S563)
	S565= ICache.Out=>ICacheReg.In                              Premise(F283)
	S566= ICache.Hit=>ICacheHitReg.In                           Premise(F284)
	S567= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S564,S566)
	S568= IMMUHitReg.Out=>CU.IMemHit                            Premise(F285)
	S569= CU.IMemHit=IMMUHit(pid,addr)                          Path(S519,S568)
	S570= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F286)
	S571= CU.ICacheHit=ICacheHit(addr)                          Path(S522,S570)
	S572= IAddrReg.Out=>IMem.RAddr                              Premise(F287)
	S573= IMem.RAddr={pid,addr}                                 Path(S516,S572)
	S574= IMem.Out={31,rT,rA,rB,1041}                           IMem-Read(S573,S481)
	S575= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S573,S481)
	S576= IMem.Out=>IRMux.MemData                               Premise(F288)
	S577= IRMux.MemData={31,rT,rA,rB,1041}                      Path(S574,S576)
	S578= IRMux.Out={31,rT,rA,rB,1041}                          IRMux-Select(S577)
	S579= ICacheReg.Out=>IRMux.CacheData                        Premise(F289)
	S580= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F290)
	S581= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S519,S580)
	S582= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F291)
	S583= IRMux.CacheSel=ICacheHit(addr)                        Path(S522,S582)
	S584= IRMux.Out=>IR.In                                      Premise(F292)
	S585= IR.In={31,rT,rA,rB,1041}                              Path(S578,S584)
	S586= IMem.MEM8WordOut=>ICache.WData                        Premise(F293)
	S587= ICache.WData=IMemGet8Word({pid,addr})                 Path(S575,S586)
	S588= PC.Out=>ICache.IEA                                    Premise(F294)
	S589= IR.Out0_5=>CU.Op                                      Premise(F295)
	S590= CU.Op=31                                              Path(S525,S589)
	S591= IR.Out11_15=>GPRegs.RReg1                             Premise(F296)
	S592= GPRegs.RReg1=rA                                       Path(S527,S591)
	S593= GPRegs.Rdata1=a                                       GPRegs-Read(S592,S486)
	S594= IR.Out16_20=>GPRegs.RReg2                             Premise(F297)
	S595= GPRegs.RReg2=rB                                       Path(S528,S594)
	S596= GPRegs.Rdata2=b                                       GPRegs-Read(S595,S487)
	S597= IR.Out21_31=>CU.IRFunc                                Premise(F298)
	S598= CU.IRFunc=1041                                        Path(S529,S597)
	S599= CU.Func=alu_subf                                      CU(S590,S598)
	S600= GPRegs.Rdata1=>A.In                                   Premise(F299)
	S601= A.In=a                                                Path(S593,S600)
	S602= GPRegs.Rdata2=>B.In                                   Premise(F300)
	S603= B.In=b                                                Path(S596,S602)
	S604= A.Out=>ALU.A                                          Premise(F301)
	S605= ALU.A=a                                               Path(S530,S604)
	S606= B.Out=>ALU.B                                          Premise(F302)
	S607= ALU.B=b                                               Path(S533,S606)
	S608= CU.Func=>ALU.Func                                     Premise(F303)
	S609= ALU.Func=alu_subf                                     Path(S599,S608)
	S610= ALU.Out=b-a                                           ALU(S605,S607)
	S611= ALU.CMP=Compare0(b-a)                                 ALU(S605,S607)
	S612= ALU.OV=OverFlow(b-a)                                  ALU(S605,S607)
	S613= ALU.CA=Carry(b-a)                                     ALU(S605,S607)
	S614= ALU.Out=>ALUOut.In                                    Premise(F304)
	S615= ALUOut.In=b-a                                         Path(S610,S614)
	S616= ALU.CA=>CAReg.In                                      Premise(F305)
	S617= CAReg.In=Carry(b-a)                                   Path(S613,S616)
	S618= ALU.CMP=>DataCmb.A                                    Premise(F306)
	S619= DataCmb.A=Compare0(b-a)                               Path(S611,S618)
	S620= ORGate.Out=>DataCmb.B                                 Premise(F307)
	S621= ALU.OV=>OVReg.In                                      Premise(F308)
	S622= OVReg.In=OverFlow(b-a)                                Path(S612,S621)
	S623= XER.SOOut=>ORGate.A                                   Premise(F309)
	S624= ORGate.A=so                                           Path(S545,S623)
	S625= ALU.OV=>ORGate.B                                      Premise(F310)
	S626= ORGate.B=OverFlow(b-a)                                Path(S612,S625)
	S627= ORGate.Out=so|OverFlow(b-a)                           ORGate(S624,S626)
	S628= DataCmb.B=so|OverFlow(b-a)                            Path(S627,S620)
	S629= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}          DataCmb(S619,S628)
	S630= ORGate.Out=>DR1bit.In                                 Premise(F311)
	S631= DR1bit.In=so|OverFlow(b-a)                            Path(S627,S630)
	S632= DataCmb.Out=>DR4bit.In                                Premise(F312)
	S633= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}            Path(S629,S632)
	S634= IR.Out6_10=>GPRegs.WReg                               Premise(F313)
	S635= GPRegs.WReg=rT                                        Path(S526,S634)
	S636= ALUOut.Out=>GPRegs.WData                              Premise(F314)
	S637= GPRegs.WData=b-a                                      Path(S536,S636)
	S638= DR4bit.Out=>CRRegs.CR0In                              Premise(F315)
	S639= CRRegs.CR0In={Compare0(b-a),so|OverFlow(b-a)}         Path(S549,S638)
	S640= DR1bit.Out=>XER.SOIn                                  Premise(F316)
	S641= XER.SOIn=so|OverFlow(b-a)                             Path(S546,S640)
	S642= CAReg.Out=>XER.CAIn                                   Premise(F317)
	S643= XER.CAIn=Carry(b-a)                                   Path(S539,S642)
	S644= OVReg.Out=>XER.OVIn                                   Premise(F318)
	S645= XER.OVIn=OverFlow(b-a)                                Path(S542,S644)
	S646= CtrlPIDReg=0                                          Premise(F319)
	S647= [PIDReg]=pid                                          PIDReg-Hold(S465,S646)
	S648= CtrlIMMU=0                                            Premise(F320)
	S649= CtrlPC=0                                              Premise(F321)
	S650= CtrlPCInc=0                                           Premise(F322)
	S651= PC[CIA]=addr                                          PC-Hold(S469,S650)
	S652= PC[Out]=addr+4                                        PC-Hold(S470,S649,S650)
	S653= CtrlIAddrReg=0                                        Premise(F323)
	S654= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S472,S653)
	S655= CtrlIMMUHitReg=0                                      Premise(F324)
	S656= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S474,S655)
	S657= CtrlICache=0                                          Premise(F325)
	S658= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S476,S657)
	S659= CtrlICacheReg=0                                       Premise(F326)
	S660= CtrlICacheHitReg=0                                    Premise(F327)
	S661= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S479,S660)
	S662= CtrlIMem=0                                            Premise(F328)
	S663= IMem[{pid,addr}]={31,rT,rA,rB,1041}                   IMem-Hold(S481,S662)
	S664= CtrlIRMux=0                                           Premise(F329)
	S665= CtrlIR=0                                              Premise(F330)
	S666= [IR]={31,rT,rA,rB,1041}                               IR-Hold(S484,S665)
	S667= CtrlGPRegs=0                                          Premise(F331)
	S668= GPRegs[rA]=a                                          GPRegs-Hold(S486,S667)
	S669= GPRegs[rB]=b                                          GPRegs-Hold(S487,S667)
	S670= CtrlA=0                                               Premise(F332)
	S671= [A]=a                                                 A-Hold(S489,S670)
	S672= CtrlB=0                                               Premise(F333)
	S673= [B]=b                                                 B-Hold(S491,S672)
	S674= CtrlALUOut=0                                          Premise(F334)
	S675= [ALUOut]=b-a                                          ALUOut-Hold(S493,S674)
	S676= CtrlCAReg=0                                           Premise(F335)
	S677= [CAReg]=Carry(b-a)                                    CAReg-Hold(S495,S676)
	S678= CtrlOVReg=0                                           Premise(F336)
	S679= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S497,S678)
	S680= CtrlXERSO=0                                           Premise(F337)
	S681= XER[SO]=so                                            XER-SO-Hold(S499,S680)
	S682= CtrlXEROV=0                                           Premise(F338)
	S683= CtrlXERCA=0                                           Premise(F339)
	S684= CtrlDR1bit=0                                          Premise(F340)
	S685= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S503,S684)
	S686= CtrlDR4bit=0                                          Premise(F341)
	S687= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}             DR4bit-Hold(S505,S686)
	S688= CtrlCRRegs=0                                          Premise(F342)
	S689= CtrlCRRegsCR0=0                                       Premise(F343)
	S690= CtrlCRRegsW4bitRegs=0                                 Premise(F344)
	S691= CtrlCRRegsW1bitRegs=0                                 Premise(F345)

DMMU1	S692= PIDReg.Out=pid                                        PIDReg-Out(S647)
	S693= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S647)
	S694= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S647)
	S695= PC.CIA=addr                                           PC-Out(S651)
	S696= PC.CIA31_28=addr[31:28]                               PC-Out(S651)
	S697= PC.Out=addr+4                                         PC-Out(S652)
	S698= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S654)
	S699= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S654)
	S700= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S654)
	S701= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S656)
	S702= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S656)
	S703= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S656)
	S704= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S661)
	S705= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S661)
	S706= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S661)
	S707= IR.Out0_5=31                                          IR-Out(S666)
	S708= IR.Out6_10=rT                                         IR-Out(S666)
	S709= IR.Out11_15=rA                                        IR-Out(S666)
	S710= IR.Out16_20=rB                                        IR-Out(S666)
	S711= IR.Out21_31=1041                                      IR-Out(S666)
	S712= A.Out=a                                               A-Out(S671)
	S713= A.Out26_31=a[26:31]                                   A-Out(S671)
	S714= A.Out30_31=a[30:31]                                   A-Out(S671)
	S715= B.Out=b                                               B-Out(S673)
	S716= B.Out26_31=b[26:31]                                   B-Out(S673)
	S717= B.Out30_31=b[30:31]                                   B-Out(S673)
	S718= ALUOut.Out=b-a                                        ALUOut-Out(S675)
	S719= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S675)
	S720= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S675)
	S721= CAReg.Out=Carry(b-a)                                  CAReg-Out(S677)
	S722= CAReg.Out26_31=Carry(b-a)[26:31]                      CAReg-Out(S677)
	S723= CAReg.Out30_31=Carry(b-a)[30:31]                      CAReg-Out(S677)
	S724= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S679)
	S725= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S679)
	S726= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S679)
	S727= XER.SOOut=so                                          XER-SO-Out(S681)
	S728= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S685)
	S729= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S685)
	S730= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S685)
	S731= DR4bit.Out={Compare0(b-a),so|OverFlow(b-a)}           DR4bit-Out(S687)
	S732= DR4bit.Out26_31={Compare0(b-a),so|OverFlow(b-a)}[26:31]DR4bit-Out(S687)
	S733= DR4bit.Out30_31={Compare0(b-a),so|OverFlow(b-a)}[30:31]DR4bit-Out(S687)
	S734= PIDReg.Out=>IMMU.PID                                  Premise(F346)
	S735= IMMU.PID=pid                                          Path(S692,S734)
	S736= PC.Out=>IMMU.IEA                                      Premise(F347)
	S737= IMMU.IEA=addr+4                                       Path(S697,S736)
	S738= IMMU.Addr={pid,addr+4}                                IMMU-Search(S735,S737)
	S739= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S735,S737)
	S740= IMMU.Addr=>IAddrReg.In                                Premise(F348)
	S741= IAddrReg.In={pid,addr+4}                              Path(S738,S740)
	S742= IMMU.Hit=>IMMUHitReg.In                               Premise(F349)
	S743= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S739,S742)
	S744= PC.Out=>ICache.IEA                                    Premise(F350)
	S745= ICache.IEA=addr+4                                     Path(S697,S744)
	S746= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S745)
	S747= ICache.Out=>ICacheReg.In                              Premise(F351)
	S748= ICache.Hit=>ICacheHitReg.In                           Premise(F352)
	S749= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S746,S748)
	S750= IMMUHitReg.Out=>CU.IMemHit                            Premise(F353)
	S751= CU.IMemHit=IMMUHit(pid,addr)                          Path(S701,S750)
	S752= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F354)
	S753= CU.ICacheHit=ICacheHit(addr)                          Path(S704,S752)
	S754= IAddrReg.Out=>IMem.RAddr                              Premise(F355)
	S755= IMem.RAddr={pid,addr}                                 Path(S698,S754)
	S756= IMem.Out={31,rT,rA,rB,1041}                           IMem-Read(S755,S663)
	S757= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S755,S663)
	S758= IMem.Out=>IRMux.MemData                               Premise(F356)
	S759= IRMux.MemData={31,rT,rA,rB,1041}                      Path(S756,S758)
	S760= IRMux.Out={31,rT,rA,rB,1041}                          IRMux-Select(S759)
	S761= ICacheReg.Out=>IRMux.CacheData                        Premise(F357)
	S762= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F358)
	S763= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S701,S762)
	S764= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F359)
	S765= IRMux.CacheSel=ICacheHit(addr)                        Path(S704,S764)
	S766= IRMux.Out=>IR.In                                      Premise(F360)
	S767= IR.In={31,rT,rA,rB,1041}                              Path(S760,S766)
	S768= IMem.MEM8WordOut=>ICache.WData                        Premise(F361)
	S769= ICache.WData=IMemGet8Word({pid,addr})                 Path(S757,S768)
	S770= PC.Out=>ICache.IEA                                    Premise(F362)
	S771= IR.Out0_5=>CU.Op                                      Premise(F363)
	S772= CU.Op=31                                              Path(S707,S771)
	S773= IR.Out11_15=>GPRegs.RReg1                             Premise(F364)
	S774= GPRegs.RReg1=rA                                       Path(S709,S773)
	S775= GPRegs.Rdata1=a                                       GPRegs-Read(S774,S668)
	S776= IR.Out16_20=>GPRegs.RReg2                             Premise(F365)
	S777= GPRegs.RReg2=rB                                       Path(S710,S776)
	S778= GPRegs.Rdata2=b                                       GPRegs-Read(S777,S669)
	S779= IR.Out21_31=>CU.IRFunc                                Premise(F366)
	S780= CU.IRFunc=1041                                        Path(S711,S779)
	S781= CU.Func=alu_subf                                      CU(S772,S780)
	S782= GPRegs.Rdata1=>A.In                                   Premise(F367)
	S783= A.In=a                                                Path(S775,S782)
	S784= GPRegs.Rdata2=>B.In                                   Premise(F368)
	S785= B.In=b                                                Path(S778,S784)
	S786= A.Out=>ALU.A                                          Premise(F369)
	S787= ALU.A=a                                               Path(S712,S786)
	S788= B.Out=>ALU.B                                          Premise(F370)
	S789= ALU.B=b                                               Path(S715,S788)
	S790= CU.Func=>ALU.Func                                     Premise(F371)
	S791= ALU.Func=alu_subf                                     Path(S781,S790)
	S792= ALU.Out=b-a                                           ALU(S787,S789)
	S793= ALU.CMP=Compare0(b-a)                                 ALU(S787,S789)
	S794= ALU.OV=OverFlow(b-a)                                  ALU(S787,S789)
	S795= ALU.CA=Carry(b-a)                                     ALU(S787,S789)
	S796= ALU.Out=>ALUOut.In                                    Premise(F372)
	S797= ALUOut.In=b-a                                         Path(S792,S796)
	S798= ALU.CA=>CAReg.In                                      Premise(F373)
	S799= CAReg.In=Carry(b-a)                                   Path(S795,S798)
	S800= ALU.CMP=>DataCmb.A                                    Premise(F374)
	S801= DataCmb.A=Compare0(b-a)                               Path(S793,S800)
	S802= ORGate.Out=>DataCmb.B                                 Premise(F375)
	S803= ALU.OV=>OVReg.In                                      Premise(F376)
	S804= OVReg.In=OverFlow(b-a)                                Path(S794,S803)
	S805= XER.SOOut=>ORGate.A                                   Premise(F377)
	S806= ORGate.A=so                                           Path(S727,S805)
	S807= ALU.OV=>ORGate.B                                      Premise(F378)
	S808= ORGate.B=OverFlow(b-a)                                Path(S794,S807)
	S809= ORGate.Out=so|OverFlow(b-a)                           ORGate(S806,S808)
	S810= DataCmb.B=so|OverFlow(b-a)                            Path(S809,S802)
	S811= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}          DataCmb(S801,S810)
	S812= ORGate.Out=>DR1bit.In                                 Premise(F379)
	S813= DR1bit.In=so|OverFlow(b-a)                            Path(S809,S812)
	S814= DataCmb.Out=>DR4bit.In                                Premise(F380)
	S815= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}            Path(S811,S814)
	S816= IR.Out6_10=>GPRegs.WReg                               Premise(F381)
	S817= GPRegs.WReg=rT                                        Path(S708,S816)
	S818= ALUOut.Out=>GPRegs.WData                              Premise(F382)
	S819= GPRegs.WData=b-a                                      Path(S718,S818)
	S820= DR4bit.Out=>CRRegs.CR0In                              Premise(F383)
	S821= CRRegs.CR0In={Compare0(b-a),so|OverFlow(b-a)}         Path(S731,S820)
	S822= DR1bit.Out=>XER.SOIn                                  Premise(F384)
	S823= XER.SOIn=so|OverFlow(b-a)                             Path(S728,S822)
	S824= CAReg.Out=>XER.CAIn                                   Premise(F385)
	S825= XER.CAIn=Carry(b-a)                                   Path(S721,S824)
	S826= OVReg.Out=>XER.OVIn                                   Premise(F386)
	S827= XER.OVIn=OverFlow(b-a)                                Path(S724,S826)
	S828= CtrlPIDReg=0                                          Premise(F387)
	S829= [PIDReg]=pid                                          PIDReg-Hold(S647,S828)
	S830= CtrlIMMU=0                                            Premise(F388)
	S831= CtrlPC=0                                              Premise(F389)
	S832= CtrlPCInc=0                                           Premise(F390)
	S833= PC[CIA]=addr                                          PC-Hold(S651,S832)
	S834= PC[Out]=addr+4                                        PC-Hold(S652,S831,S832)
	S835= CtrlIAddrReg=0                                        Premise(F391)
	S836= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S654,S835)
	S837= CtrlIMMUHitReg=0                                      Premise(F392)
	S838= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S656,S837)
	S839= CtrlICache=0                                          Premise(F393)
	S840= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S658,S839)
	S841= CtrlICacheReg=0                                       Premise(F394)
	S842= CtrlICacheHitReg=0                                    Premise(F395)
	S843= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S661,S842)
	S844= CtrlIMem=0                                            Premise(F396)
	S845= IMem[{pid,addr}]={31,rT,rA,rB,1041}                   IMem-Hold(S663,S844)
	S846= CtrlIRMux=0                                           Premise(F397)
	S847= CtrlIR=0                                              Premise(F398)
	S848= [IR]={31,rT,rA,rB,1041}                               IR-Hold(S666,S847)
	S849= CtrlGPRegs=0                                          Premise(F399)
	S850= GPRegs[rA]=a                                          GPRegs-Hold(S668,S849)
	S851= GPRegs[rB]=b                                          GPRegs-Hold(S669,S849)
	S852= CtrlA=0                                               Premise(F400)
	S853= [A]=a                                                 A-Hold(S671,S852)
	S854= CtrlB=0                                               Premise(F401)
	S855= [B]=b                                                 B-Hold(S673,S854)
	S856= CtrlALUOut=0                                          Premise(F402)
	S857= [ALUOut]=b-a                                          ALUOut-Hold(S675,S856)
	S858= CtrlCAReg=0                                           Premise(F403)
	S859= [CAReg]=Carry(b-a)                                    CAReg-Hold(S677,S858)
	S860= CtrlOVReg=0                                           Premise(F404)
	S861= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S679,S860)
	S862= CtrlXERSO=0                                           Premise(F405)
	S863= XER[SO]=so                                            XER-SO-Hold(S681,S862)
	S864= CtrlXEROV=0                                           Premise(F406)
	S865= CtrlXERCA=0                                           Premise(F407)
	S866= CtrlDR1bit=0                                          Premise(F408)
	S867= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S685,S866)
	S868= CtrlDR4bit=0                                          Premise(F409)
	S869= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}             DR4bit-Hold(S687,S868)
	S870= CtrlCRRegs=0                                          Premise(F410)
	S871= CtrlCRRegsCR0=0                                       Premise(F411)
	S872= CtrlCRRegsW4bitRegs=0                                 Premise(F412)
	S873= CtrlCRRegsW1bitRegs=0                                 Premise(F413)

DMMU2	S874= PIDReg.Out=pid                                        PIDReg-Out(S829)
	S875= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S829)
	S876= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S829)
	S877= PC.CIA=addr                                           PC-Out(S833)
	S878= PC.CIA31_28=addr[31:28]                               PC-Out(S833)
	S879= PC.Out=addr+4                                         PC-Out(S834)
	S880= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S836)
	S881= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S836)
	S882= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S836)
	S883= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S838)
	S884= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S838)
	S885= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S838)
	S886= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S843)
	S887= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S843)
	S888= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S843)
	S889= IR.Out0_5=31                                          IR-Out(S848)
	S890= IR.Out6_10=rT                                         IR-Out(S848)
	S891= IR.Out11_15=rA                                        IR-Out(S848)
	S892= IR.Out16_20=rB                                        IR-Out(S848)
	S893= IR.Out21_31=1041                                      IR-Out(S848)
	S894= A.Out=a                                               A-Out(S853)
	S895= A.Out26_31=a[26:31]                                   A-Out(S853)
	S896= A.Out30_31=a[30:31]                                   A-Out(S853)
	S897= B.Out=b                                               B-Out(S855)
	S898= B.Out26_31=b[26:31]                                   B-Out(S855)
	S899= B.Out30_31=b[30:31]                                   B-Out(S855)
	S900= ALUOut.Out=b-a                                        ALUOut-Out(S857)
	S901= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S857)
	S902= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S857)
	S903= CAReg.Out=Carry(b-a)                                  CAReg-Out(S859)
	S904= CAReg.Out26_31=Carry(b-a)[26:31]                      CAReg-Out(S859)
	S905= CAReg.Out30_31=Carry(b-a)[30:31]                      CAReg-Out(S859)
	S906= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S861)
	S907= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S861)
	S908= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S861)
	S909= XER.SOOut=so                                          XER-SO-Out(S863)
	S910= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S867)
	S911= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S867)
	S912= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S867)
	S913= DR4bit.Out={Compare0(b-a),so|OverFlow(b-a)}           DR4bit-Out(S869)
	S914= DR4bit.Out26_31={Compare0(b-a),so|OverFlow(b-a)}[26:31]DR4bit-Out(S869)
	S915= DR4bit.Out30_31={Compare0(b-a),so|OverFlow(b-a)}[30:31]DR4bit-Out(S869)
	S916= PIDReg.Out=>IMMU.PID                                  Premise(F414)
	S917= IMMU.PID=pid                                          Path(S874,S916)
	S918= PC.Out=>IMMU.IEA                                      Premise(F415)
	S919= IMMU.IEA=addr+4                                       Path(S879,S918)
	S920= IMMU.Addr={pid,addr+4}                                IMMU-Search(S917,S919)
	S921= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S917,S919)
	S922= IMMU.Addr=>IAddrReg.In                                Premise(F416)
	S923= IAddrReg.In={pid,addr+4}                              Path(S920,S922)
	S924= IMMU.Hit=>IMMUHitReg.In                               Premise(F417)
	S925= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S921,S924)
	S926= PC.Out=>ICache.IEA                                    Premise(F418)
	S927= ICache.IEA=addr+4                                     Path(S879,S926)
	S928= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S927)
	S929= ICache.Out=>ICacheReg.In                              Premise(F419)
	S930= ICache.Hit=>ICacheHitReg.In                           Premise(F420)
	S931= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S928,S930)
	S932= IMMUHitReg.Out=>CU.IMemHit                            Premise(F421)
	S933= CU.IMemHit=IMMUHit(pid,addr)                          Path(S883,S932)
	S934= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F422)
	S935= CU.ICacheHit=ICacheHit(addr)                          Path(S886,S934)
	S936= IAddrReg.Out=>IMem.RAddr                              Premise(F423)
	S937= IMem.RAddr={pid,addr}                                 Path(S880,S936)
	S938= IMem.Out={31,rT,rA,rB,1041}                           IMem-Read(S937,S845)
	S939= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S937,S845)
	S940= IMem.Out=>IRMux.MemData                               Premise(F424)
	S941= IRMux.MemData={31,rT,rA,rB,1041}                      Path(S938,S940)
	S942= IRMux.Out={31,rT,rA,rB,1041}                          IRMux-Select(S941)
	S943= ICacheReg.Out=>IRMux.CacheData                        Premise(F425)
	S944= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F426)
	S945= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S883,S944)
	S946= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F427)
	S947= IRMux.CacheSel=ICacheHit(addr)                        Path(S886,S946)
	S948= IRMux.Out=>IR.In                                      Premise(F428)
	S949= IR.In={31,rT,rA,rB,1041}                              Path(S942,S948)
	S950= IMem.MEM8WordOut=>ICache.WData                        Premise(F429)
	S951= ICache.WData=IMemGet8Word({pid,addr})                 Path(S939,S950)
	S952= PC.Out=>ICache.IEA                                    Premise(F430)
	S953= IR.Out0_5=>CU.Op                                      Premise(F431)
	S954= CU.Op=31                                              Path(S889,S953)
	S955= IR.Out11_15=>GPRegs.RReg1                             Premise(F432)
	S956= GPRegs.RReg1=rA                                       Path(S891,S955)
	S957= GPRegs.Rdata1=a                                       GPRegs-Read(S956,S850)
	S958= IR.Out16_20=>GPRegs.RReg2                             Premise(F433)
	S959= GPRegs.RReg2=rB                                       Path(S892,S958)
	S960= GPRegs.Rdata2=b                                       GPRegs-Read(S959,S851)
	S961= IR.Out21_31=>CU.IRFunc                                Premise(F434)
	S962= CU.IRFunc=1041                                        Path(S893,S961)
	S963= CU.Func=alu_subf                                      CU(S954,S962)
	S964= GPRegs.Rdata1=>A.In                                   Premise(F435)
	S965= A.In=a                                                Path(S957,S964)
	S966= GPRegs.Rdata2=>B.In                                   Premise(F436)
	S967= B.In=b                                                Path(S960,S966)
	S968= A.Out=>ALU.A                                          Premise(F437)
	S969= ALU.A=a                                               Path(S894,S968)
	S970= B.Out=>ALU.B                                          Premise(F438)
	S971= ALU.B=b                                               Path(S897,S970)
	S972= CU.Func=>ALU.Func                                     Premise(F439)
	S973= ALU.Func=alu_subf                                     Path(S963,S972)
	S974= ALU.Out=b-a                                           ALU(S969,S971)
	S975= ALU.CMP=Compare0(b-a)                                 ALU(S969,S971)
	S976= ALU.OV=OverFlow(b-a)                                  ALU(S969,S971)
	S977= ALU.CA=Carry(b-a)                                     ALU(S969,S971)
	S978= ALU.Out=>ALUOut.In                                    Premise(F440)
	S979= ALUOut.In=b-a                                         Path(S974,S978)
	S980= ALU.CA=>CAReg.In                                      Premise(F441)
	S981= CAReg.In=Carry(b-a)                                   Path(S977,S980)
	S982= ALU.CMP=>DataCmb.A                                    Premise(F442)
	S983= DataCmb.A=Compare0(b-a)                               Path(S975,S982)
	S984= ORGate.Out=>DataCmb.B                                 Premise(F443)
	S985= ALU.OV=>OVReg.In                                      Premise(F444)
	S986= OVReg.In=OverFlow(b-a)                                Path(S976,S985)
	S987= XER.SOOut=>ORGate.A                                   Premise(F445)
	S988= ORGate.A=so                                           Path(S909,S987)
	S989= ALU.OV=>ORGate.B                                      Premise(F446)
	S990= ORGate.B=OverFlow(b-a)                                Path(S976,S989)
	S991= ORGate.Out=so|OverFlow(b-a)                           ORGate(S988,S990)
	S992= DataCmb.B=so|OverFlow(b-a)                            Path(S991,S984)
	S993= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}          DataCmb(S983,S992)
	S994= ORGate.Out=>DR1bit.In                                 Premise(F447)
	S995= DR1bit.In=so|OverFlow(b-a)                            Path(S991,S994)
	S996= DataCmb.Out=>DR4bit.In                                Premise(F448)
	S997= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}            Path(S993,S996)
	S998= IR.Out6_10=>GPRegs.WReg                               Premise(F449)
	S999= GPRegs.WReg=rT                                        Path(S890,S998)
	S1000= ALUOut.Out=>GPRegs.WData                             Premise(F450)
	S1001= GPRegs.WData=b-a                                     Path(S900,S1000)
	S1002= DR4bit.Out=>CRRegs.CR0In                             Premise(F451)
	S1003= CRRegs.CR0In={Compare0(b-a),so|OverFlow(b-a)}        Path(S913,S1002)
	S1004= DR1bit.Out=>XER.SOIn                                 Premise(F452)
	S1005= XER.SOIn=so|OverFlow(b-a)                            Path(S910,S1004)
	S1006= CAReg.Out=>XER.CAIn                                  Premise(F453)
	S1007= XER.CAIn=Carry(b-a)                                  Path(S903,S1006)
	S1008= OVReg.Out=>XER.OVIn                                  Premise(F454)
	S1009= XER.OVIn=OverFlow(b-a)                               Path(S906,S1008)
	S1010= CtrlPIDReg=0                                         Premise(F455)
	S1011= [PIDReg]=pid                                         PIDReg-Hold(S829,S1010)
	S1012= CtrlIMMU=0                                           Premise(F456)
	S1013= CtrlPC=0                                             Premise(F457)
	S1014= CtrlPCInc=0                                          Premise(F458)
	S1015= PC[CIA]=addr                                         PC-Hold(S833,S1014)
	S1016= PC[Out]=addr+4                                       PC-Hold(S834,S1013,S1014)
	S1017= CtrlIAddrReg=0                                       Premise(F459)
	S1018= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S836,S1017)
	S1019= CtrlIMMUHitReg=0                                     Premise(F460)
	S1020= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S838,S1019)
	S1021= CtrlICache=0                                         Premise(F461)
	S1022= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S840,S1021)
	S1023= CtrlICacheReg=0                                      Premise(F462)
	S1024= CtrlICacheHitReg=0                                   Premise(F463)
	S1025= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S843,S1024)
	S1026= CtrlIMem=0                                           Premise(F464)
	S1027= IMem[{pid,addr}]={31,rT,rA,rB,1041}                  IMem-Hold(S845,S1026)
	S1028= CtrlIRMux=0                                          Premise(F465)
	S1029= CtrlIR=0                                             Premise(F466)
	S1030= [IR]={31,rT,rA,rB,1041}                              IR-Hold(S848,S1029)
	S1031= CtrlGPRegs=0                                         Premise(F467)
	S1032= GPRegs[rA]=a                                         GPRegs-Hold(S850,S1031)
	S1033= GPRegs[rB]=b                                         GPRegs-Hold(S851,S1031)
	S1034= CtrlA=0                                              Premise(F468)
	S1035= [A]=a                                                A-Hold(S853,S1034)
	S1036= CtrlB=0                                              Premise(F469)
	S1037= [B]=b                                                B-Hold(S855,S1036)
	S1038= CtrlALUOut=0                                         Premise(F470)
	S1039= [ALUOut]=b-a                                         ALUOut-Hold(S857,S1038)
	S1040= CtrlCAReg=0                                          Premise(F471)
	S1041= [CAReg]=Carry(b-a)                                   CAReg-Hold(S859,S1040)
	S1042= CtrlOVReg=0                                          Premise(F472)
	S1043= [OVReg]=OverFlow(b-a)                                OVReg-Hold(S861,S1042)
	S1044= CtrlXERSO=0                                          Premise(F473)
	S1045= XER[SO]=so                                           XER-SO-Hold(S863,S1044)
	S1046= CtrlXEROV=0                                          Premise(F474)
	S1047= CtrlXERCA=0                                          Premise(F475)
	S1048= CtrlDR1bit=0                                         Premise(F476)
	S1049= [DR1bit]=so|OverFlow(b-a)                            DR1bit-Hold(S867,S1048)
	S1050= CtrlDR4bit=0                                         Premise(F477)
	S1051= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}            DR4bit-Hold(S869,S1050)
	S1052= CtrlCRRegs=0                                         Premise(F478)
	S1053= CtrlCRRegsCR0=0                                      Premise(F479)
	S1054= CtrlCRRegsW4bitRegs=0                                Premise(F480)
	S1055= CtrlCRRegsW1bitRegs=0                                Premise(F481)

WB	S1056= PIDReg.Out=pid                                       PIDReg-Out(S1011)
	S1057= PIDReg.Out26_31=pid[26:31]                           PIDReg-Out(S1011)
	S1058= PIDReg.Out30_31=pid[30:31]                           PIDReg-Out(S1011)
	S1059= PC.CIA=addr                                          PC-Out(S1015)
	S1060= PC.CIA31_28=addr[31:28]                              PC-Out(S1015)
	S1061= PC.Out=addr+4                                        PC-Out(S1016)
	S1062= IAddrReg.Out={pid,addr}                              IAddrReg-Out(S1018)
	S1063= IAddrReg.Out26_31={pid,addr}[26:31]                  IAddrReg-Out(S1018)
	S1064= IAddrReg.Out30_31={pid,addr}[30:31]                  IAddrReg-Out(S1018)
	S1065= IMMUHitReg.Out=IMMUHit(pid,addr)                     IMMUHitReg-Out(S1020)
	S1066= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S1020)
	S1067= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S1020)
	S1068= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S1025)
	S1069= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S1025)
	S1070= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S1025)
	S1071= IR.Out0_5=31                                         IR-Out(S1030)
	S1072= IR.Out6_10=rT                                        IR-Out(S1030)
	S1073= IR.Out11_15=rA                                       IR-Out(S1030)
	S1074= IR.Out16_20=rB                                       IR-Out(S1030)
	S1075= IR.Out21_31=1041                                     IR-Out(S1030)
	S1076= A.Out=a                                              A-Out(S1035)
	S1077= A.Out26_31=a[26:31]                                  A-Out(S1035)
	S1078= A.Out30_31=a[30:31]                                  A-Out(S1035)
	S1079= B.Out=b                                              B-Out(S1037)
	S1080= B.Out26_31=b[26:31]                                  B-Out(S1037)
	S1081= B.Out30_31=b[30:31]                                  B-Out(S1037)
	S1082= ALUOut.Out=b-a                                       ALUOut-Out(S1039)
	S1083= ALUOut.Out26_31=b-a[26:31]                           ALUOut-Out(S1039)
	S1084= ALUOut.Out30_31=b-a[30:31]                           ALUOut-Out(S1039)
	S1085= CAReg.Out=Carry(b-a)                                 CAReg-Out(S1041)
	S1086= CAReg.Out26_31=Carry(b-a)[26:31]                     CAReg-Out(S1041)
	S1087= CAReg.Out30_31=Carry(b-a)[30:31]                     CAReg-Out(S1041)
	S1088= OVReg.Out=OverFlow(b-a)                              OVReg-Out(S1043)
	S1089= OVReg.Out26_31=OverFlow(b-a)[26:31]                  OVReg-Out(S1043)
	S1090= OVReg.Out30_31=OverFlow(b-a)[30:31]                  OVReg-Out(S1043)
	S1091= XER.SOOut=so                                         XER-SO-Out(S1045)
	S1092= DR1bit.Out=so|OverFlow(b-a)                          DR1bit-Out(S1049)
	S1093= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]              DR1bit-Out(S1049)
	S1094= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]              DR1bit-Out(S1049)
	S1095= DR4bit.Out={Compare0(b-a),so|OverFlow(b-a)}          DR4bit-Out(S1051)
	S1096= DR4bit.Out26_31={Compare0(b-a),so|OverFlow(b-a)}[26:31]DR4bit-Out(S1051)
	S1097= DR4bit.Out30_31={Compare0(b-a),so|OverFlow(b-a)}[30:31]DR4bit-Out(S1051)
	S1098= PIDReg.Out=>IMMU.PID                                 Premise(F482)
	S1099= IMMU.PID=pid                                         Path(S1056,S1098)
	S1100= PC.Out=>IMMU.IEA                                     Premise(F483)
	S1101= IMMU.IEA=addr+4                                      Path(S1061,S1100)
	S1102= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1099,S1101)
	S1103= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1099,S1101)
	S1104= IMMU.Addr=>IAddrReg.In                               Premise(F484)
	S1105= IAddrReg.In={pid,addr+4}                             Path(S1102,S1104)
	S1106= IMMU.Hit=>IMMUHitReg.In                              Premise(F485)
	S1107= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1103,S1106)
	S1108= PC.Out=>ICache.IEA                                   Premise(F486)
	S1109= ICache.IEA=addr+4                                    Path(S1061,S1108)
	S1110= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1109)
	S1111= ICache.Out=>ICacheReg.In                             Premise(F487)
	S1112= ICache.Hit=>ICacheHitReg.In                          Premise(F488)
	S1113= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1110,S1112)
	S1114= IMMUHitReg.Out=>CU.IMemHit                           Premise(F489)
	S1115= CU.IMemHit=IMMUHit(pid,addr)                         Path(S1065,S1114)
	S1116= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F490)
	S1117= CU.ICacheHit=ICacheHit(addr)                         Path(S1068,S1116)
	S1118= IAddrReg.Out=>IMem.RAddr                             Premise(F491)
	S1119= IMem.RAddr={pid,addr}                                Path(S1062,S1118)
	S1120= IMem.Out={31,rT,rA,rB,1041}                          IMem-Read(S1119,S1027)
	S1121= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1119,S1027)
	S1122= IMem.Out=>IRMux.MemData                              Premise(F492)
	S1123= IRMux.MemData={31,rT,rA,rB,1041}                     Path(S1120,S1122)
	S1124= IRMux.Out={31,rT,rA,rB,1041}                         IRMux-Select(S1123)
	S1125= ICacheReg.Out=>IRMux.CacheData                       Premise(F493)
	S1126= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F494)
	S1127= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S1065,S1126)
	S1128= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F495)
	S1129= IRMux.CacheSel=ICacheHit(addr)                       Path(S1068,S1128)
	S1130= IRMux.Out=>IR.In                                     Premise(F496)
	S1131= IR.In={31,rT,rA,rB,1041}                             Path(S1124,S1130)
	S1132= IMem.MEM8WordOut=>ICache.WData                       Premise(F497)
	S1133= ICache.WData=IMemGet8Word({pid,addr})                Path(S1121,S1132)
	S1134= PC.Out=>ICache.IEA                                   Premise(F498)
	S1135= IR.Out0_5=>CU.Op                                     Premise(F499)
	S1136= CU.Op=31                                             Path(S1071,S1135)
	S1137= IR.Out11_15=>GPRegs.RReg1                            Premise(F500)
	S1138= GPRegs.RReg1=rA                                      Path(S1073,S1137)
	S1139= GPRegs.Rdata1=a                                      GPRegs-Read(S1138,S1032)
	S1140= IR.Out16_20=>GPRegs.RReg2                            Premise(F501)
	S1141= GPRegs.RReg2=rB                                      Path(S1074,S1140)
	S1142= GPRegs.Rdata2=b                                      GPRegs-Read(S1141,S1033)
	S1143= IR.Out21_31=>CU.IRFunc                               Premise(F502)
	S1144= CU.IRFunc=1041                                       Path(S1075,S1143)
	S1145= CU.Func=alu_subf                                     CU(S1136,S1144)
	S1146= GPRegs.Rdata1=>A.In                                  Premise(F503)
	S1147= A.In=a                                               Path(S1139,S1146)
	S1148= GPRegs.Rdata2=>B.In                                  Premise(F504)
	S1149= B.In=b                                               Path(S1142,S1148)
	S1150= A.Out=>ALU.A                                         Premise(F505)
	S1151= ALU.A=a                                              Path(S1076,S1150)
	S1152= B.Out=>ALU.B                                         Premise(F506)
	S1153= ALU.B=b                                              Path(S1079,S1152)
	S1154= CU.Func=>ALU.Func                                    Premise(F507)
	S1155= ALU.Func=alu_subf                                    Path(S1145,S1154)
	S1156= ALU.Out=b-a                                          ALU(S1151,S1153)
	S1157= ALU.CMP=Compare0(b-a)                                ALU(S1151,S1153)
	S1158= ALU.OV=OverFlow(b-a)                                 ALU(S1151,S1153)
	S1159= ALU.CA=Carry(b-a)                                    ALU(S1151,S1153)
	S1160= ALU.Out=>ALUOut.In                                   Premise(F508)
	S1161= ALUOut.In=b-a                                        Path(S1156,S1160)
	S1162= ALU.CA=>CAReg.In                                     Premise(F509)
	S1163= CAReg.In=Carry(b-a)                                  Path(S1159,S1162)
	S1164= ALU.CMP=>DataCmb.A                                   Premise(F510)
	S1165= DataCmb.A=Compare0(b-a)                              Path(S1157,S1164)
	S1166= ORGate.Out=>DataCmb.B                                Premise(F511)
	S1167= ALU.OV=>OVReg.In                                     Premise(F512)
	S1168= OVReg.In=OverFlow(b-a)                               Path(S1158,S1167)
	S1169= XER.SOOut=>ORGate.A                                  Premise(F513)
	S1170= ORGate.A=so                                          Path(S1091,S1169)
	S1171= ALU.OV=>ORGate.B                                     Premise(F514)
	S1172= ORGate.B=OverFlow(b-a)                               Path(S1158,S1171)
	S1173= ORGate.Out=so|OverFlow(b-a)                          ORGate(S1170,S1172)
	S1174= DataCmb.B=so|OverFlow(b-a)                           Path(S1173,S1166)
	S1175= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}         DataCmb(S1165,S1174)
	S1176= ORGate.Out=>DR1bit.In                                Premise(F515)
	S1177= DR1bit.In=so|OverFlow(b-a)                           Path(S1173,S1176)
	S1178= DataCmb.Out=>DR4bit.In                               Premise(F516)
	S1179= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}           Path(S1175,S1178)
	S1180= IR.Out6_10=>GPRegs.WReg                              Premise(F517)
	S1181= GPRegs.WReg=rT                                       Path(S1072,S1180)
	S1182= ALUOut.Out=>GPRegs.WData                             Premise(F518)
	S1183= GPRegs.WData=b-a                                     Path(S1082,S1182)
	S1184= DR4bit.Out=>CRRegs.CR0In                             Premise(F519)
	S1185= CRRegs.CR0In={Compare0(b-a),so|OverFlow(b-a)}        Path(S1095,S1184)
	S1186= DR1bit.Out=>XER.SOIn                                 Premise(F520)
	S1187= XER.SOIn=so|OverFlow(b-a)                            Path(S1092,S1186)
	S1188= CAReg.Out=>XER.CAIn                                  Premise(F521)
	S1189= XER.CAIn=Carry(b-a)                                  Path(S1085,S1188)
	S1190= OVReg.Out=>XER.OVIn                                  Premise(F522)
	S1191= XER.OVIn=OverFlow(b-a)                               Path(S1088,S1190)
	S1192= CtrlPIDReg=0                                         Premise(F523)
	S1193= [PIDReg]=pid                                         PIDReg-Hold(S1011,S1192)
	S1194= CtrlIMMU=0                                           Premise(F524)
	S1195= CtrlPC=0                                             Premise(F525)
	S1196= CtrlPCInc=0                                          Premise(F526)
	S1197= PC[CIA]=addr                                         PC-Hold(S1015,S1196)
	S1198= PC[Out]=addr+4                                       PC-Hold(S1016,S1195,S1196)
	S1199= CtrlIAddrReg=0                                       Premise(F527)
	S1200= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1018,S1199)
	S1201= CtrlIMMUHitReg=0                                     Premise(F528)
	S1202= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1020,S1201)
	S1203= CtrlICache=0                                         Premise(F529)
	S1204= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S1022,S1203)
	S1205= CtrlICacheReg=0                                      Premise(F530)
	S1206= CtrlICacheHitReg=0                                   Premise(F531)
	S1207= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1025,S1206)
	S1208= CtrlIMem=0                                           Premise(F532)
	S1209= IMem[{pid,addr}]={31,rT,rA,rB,1041}                  IMem-Hold(S1027,S1208)
	S1210= CtrlIRMux=0                                          Premise(F533)
	S1211= CtrlIR=0                                             Premise(F534)
	S1212= [IR]={31,rT,rA,rB,1041}                              IR-Hold(S1030,S1211)
	S1213= CtrlGPRegs=1                                         Premise(F535)
	S1214= GPRegs[rT]=b-a                                       GPRegs-Write(S1181,S1183,S1213)
	S1215= CtrlA=0                                              Premise(F536)
	S1216= [A]=a                                                A-Hold(S1035,S1215)
	S1217= CtrlB=0                                              Premise(F537)
	S1218= [B]=b                                                B-Hold(S1037,S1217)
	S1219= CtrlALUOut=0                                         Premise(F538)
	S1220= [ALUOut]=b-a                                         ALUOut-Hold(S1039,S1219)
	S1221= CtrlCAReg=0                                          Premise(F539)
	S1222= [CAReg]=Carry(b-a)                                   CAReg-Hold(S1041,S1221)
	S1223= CtrlOVReg=0                                          Premise(F540)
	S1224= [OVReg]=OverFlow(b-a)                                OVReg-Hold(S1043,S1223)
	S1225= CtrlXERSO=1                                          Premise(F541)
	S1226= XER[SO]=so|OverFlow(b-a)                             XER-SO-Write(S1187,S1225)
	S1227= CtrlXEROV=1                                          Premise(F542)
	S1228= XER[OV]=OverFlow(b-a)                                XER-OV-Write(S1191,S1227)
	S1229= CtrlXERCA=1                                          Premise(F543)
	S1230= XER[CA]=Carry(b-a)                                   XER-CA-Write(S1189,S1229)
	S1231= CtrlDR1bit=0                                         Premise(F544)
	S1232= [DR1bit]=so|OverFlow(b-a)                            DR1bit-Hold(S1049,S1231)
	S1233= CtrlDR4bit=0                                         Premise(F545)
	S1234= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}            DR4bit-Hold(S1051,S1233)
	S1235= CtrlCRRegs=0                                         Premise(F546)
	S1236= CtrlCRRegsCR0=1                                      Premise(F547)
	S1237= CRRegs[CR0]={Compare0(b-a),so|OverFlow(b-a)}         CRRegs-CR0-Write(S1185,S1236)
	S1238= CtrlCRRegsW4bitRegs=0                                Premise(F548)
	S1239= CtrlCRRegsW1bitRegs=0                                Premise(F549)

POST	S1193= [PIDReg]=pid                                         PIDReg-Hold(S1011,S1192)
	S1197= PC[CIA]=addr                                         PC-Hold(S1015,S1196)
	S1198= PC[Out]=addr+4                                       PC-Hold(S1016,S1195,S1196)
	S1200= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1018,S1199)
	S1202= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1020,S1201)
	S1204= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S1022,S1203)
	S1207= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1025,S1206)
	S1209= IMem[{pid,addr}]={31,rT,rA,rB,1041}                  IMem-Hold(S1027,S1208)
	S1212= [IR]={31,rT,rA,rB,1041}                              IR-Hold(S1030,S1211)
	S1214= GPRegs[rT]=b-a                                       GPRegs-Write(S1181,S1183,S1213)
	S1216= [A]=a                                                A-Hold(S1035,S1215)
	S1218= [B]=b                                                B-Hold(S1037,S1217)
	S1220= [ALUOut]=b-a                                         ALUOut-Hold(S1039,S1219)
	S1222= [CAReg]=Carry(b-a)                                   CAReg-Hold(S1041,S1221)
	S1224= [OVReg]=OverFlow(b-a)                                OVReg-Hold(S1043,S1223)
	S1226= XER[SO]=so|OverFlow(b-a)                             XER-SO-Write(S1187,S1225)
	S1228= XER[OV]=OverFlow(b-a)                                XER-OV-Write(S1191,S1227)
	S1230= XER[CA]=Carry(b-a)                                   XER-CA-Write(S1189,S1229)
	S1232= [DR1bit]=so|OverFlow(b-a)                            DR1bit-Hold(S1049,S1231)
	S1234= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}            DR4bit-Hold(S1051,S1233)
	S1237= CRRegs[CR0]={Compare0(b-a),so|OverFlow(b-a)}         CRRegs-CR0-Write(S1185,S1236)

