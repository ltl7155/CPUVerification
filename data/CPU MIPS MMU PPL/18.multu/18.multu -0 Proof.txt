
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,rT,0,0,25}                       Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= IMMU.Addr=>IAddrReg.In                                  Premise(F53)
	S6= PC.Out=>IMMU.IEA                                        Premise(F58)
	S7= IMMU.IEA=addr                                           Path(S4,S6)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F59)
	S9= IMMU.PID=pid                                            Path(S3,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S7)
	S11= IAddrReg.In={pid,addr}                                 Path(S10,S5)
	S12= CtrlIAddrReg=1                                         Premise(F118)
	S13= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S11,S12)
	S14= CtrlPC=0                                               Premise(F119)
	S15= CtrlPCInc=0                                            Premise(F120)
	S16= PC[Out]=addr                                           PC-Hold(S1,S14,S15)
	S17= CtrlIMem=0                                             Premise(F121)
	S18= IMem[{pid,addr}]={0,rS,rT,0,0,25}                      IMem-Hold(S2,S17)
	S19= GPR[rS]=a                                              Premise(F129)
	S20= GPR[rT]=b                                              Premise(F130)

IMMU	S21= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S13)
	S22= PC.Out=addr                                            PC-Out(S16)
	S23= PC.Out=>ICache.IEA                                     Premise(F182)
	S24= ICache.IEA=addr                                        Path(S22,S23)
	S25= IMem.MEM8WordOut=>ICache.WData                         Premise(F184)
	S26= IAddrReg.Out=>IMem.RAddr                               Premise(F188)
	S27= IMem.RAddr={pid,addr}                                  Path(S21,S26)
	S28= IMem.Out={0,rS,rT,0,0,25}                              IMem-Read(S27,S18)
	S29= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S27,S18)
	S30= ICache.WData=IMemGet8Word({pid,addr})                  Path(S29,S25)
	S31= IMem.Out=>IRMux.MemData                                Premise(F191)
	S32= IRMux.MemData={0,rS,rT,0,0,25}                         Path(S28,S31)
	S33= IRMux.Out={0,rS,rT,0,0,25}                             IRMux-Select2(S32)
	S34= IRMux.Out=>IR_ID.In                                    Premise(F197)
	S35= IR_ID.In={0,rS,rT,0,0,25}                              Path(S33,S34)
	S36= CtrlICache=1                                           Premise(F235)
	S37= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S24,S30,S36)
	S38= CtrlIR_ID=1                                            Premise(F240)
	S39= [IR_ID]={0,rS,rT,0,0,25}                               IR_ID-Write(S35,S38)
	S40= CtrlGPR=0                                              Premise(F244)
	S41= GPR[rS]=a                                              GPR-Hold(S19,S40)
	S42= GPR[rT]=b                                              GPR-Hold(S20,S40)
	S43= CtrlPC=0                                               Premise(F247)
	S44= CtrlPCInc=1                                            Premise(F248)
	S45= PC[Out]=addr+4                                         PC-Inc(S16,S43,S44)

ID	S46= IR_ID.Out25_21=rS                                      IR-Out(S39)
	S47= IR_ID.Out20_16=rT                                      IR-Out(S39)
	S48= FU.OutID1=>A_EX.In                                     Premise(F257)
	S49= FU.OutID2=>B_EX.In                                     Premise(F259)
	S50= GPR.Rdata1=>FU.InID1                                   Premise(F300)
	S51= GPR.Rdata2=>FU.InID2                                   Premise(F302)
	S52= IR_ID.Out25_21=>GPR.RReg1                              Premise(F304)
	S53= GPR.RReg1=rS                                           Path(S46,S52)
	S54= GPR.Rdata1=a                                           GPR-Read(S53,S41)
	S55= FU.InID1=a                                             Path(S54,S50)
	S56= FU.OutID1=FU(a)                                        FU-Forward(S55)
	S57= A_EX.In=FU(a)                                          Path(S56,S48)
	S58= IR_ID.Out20_16=>GPR.RReg2                              Premise(F305)
	S59= GPR.RReg2=rT                                           Path(S47,S58)
	S60= GPR.Rdata2=b                                           GPR-Read(S59,S42)
	S61= FU.InID2=b                                             Path(S60,S51)
	S62= FU.OutID2=FU(b)                                        FU-Forward(S61)
	S63= B_EX.In=FU(b)                                          Path(S62,S49)
	S64= CtrlA_EX=1                                             Premise(F355)
	S65= [A_EX]=FU(a)                                           A_EX-Write(S57,S64)
	S66= CtrlB_EX=1                                             Premise(F358)
	S67= [B_EX]=FU(b)                                           B_EX-Write(S63,S66)
	S68= CtrlICache=0                                           Premise(F361)
	S69= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S37,S68)
	S70= CtrlPC=0                                               Premise(F373)
	S71= CtrlPCInc=0                                            Premise(F374)
	S72= PC[Out]=addr+4                                         PC-Hold(S45,S70,S71)

EX	S73= A_EX.Out=FU(a)                                         A_EX-Out(S65)
	S74= B_EX.Out=FU(b)                                         B_EX-Out(S67)
	S75= MDU.hi=>Hi.In                                          Premise(F433)
	S76= MDU.lo=>Lo.In                                          Premise(F455)
	S77= A_EX.Out=>MDU.A                                        Premise(F456)
	S78= MDU.A=FU(a)                                            Path(S73,S77)
	S79= B_EX.Out=>MDU.B                                        Premise(F457)
	S80= MDU.B=FU(b)                                            Path(S74,S79)
	S81= MDU.lo=(FU(a)*FU(b))[31:0]                             MDU(S78,S80)
	S82= Lo.In=(FU(a)*FU(b))[31:0]                              Path(S81,S76)
	S83= MDU.hi=(FU(a)*FU(b))[63:32]                            MDU(S78,S80)
	S84= Hi.In=(FU(a)*FU(b))[63:32]                             Path(S83,S75)
	S85= CtrlICache=0                                           Premise(F489)
	S86= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S69,S85)
	S87= CtrlHi=1                                               Premise(F499)
	S88= [Hi]=(FU(a)*FU(b))[63:32]                              Hi-Write(S84,S87)
	S89= CtrlPC=0                                               Premise(F501)
	S90= CtrlPCInc=0                                            Premise(F502)
	S91= PC[Out]=addr+4                                         PC-Hold(S72,S89,S90)
	S92= CtrlLo=1                                               Premise(F510)
	S93= [Lo]=(FU(a)*FU(b))[31:0]                               Lo-Write(S82,S92)

MEM	S94= CtrlICache=0                                           Premise(F616)
	S95= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S86,S94)
	S96= CtrlHi=0                                               Premise(F626)
	S97= [Hi]=(FU(a)*FU(b))[63:32]                              Hi-Hold(S88,S96)
	S98= CtrlPC=0                                               Premise(F628)
	S99= CtrlPCInc=0                                            Premise(F629)
	S100= PC[Out]=addr+4                                        PC-Hold(S91,S98,S99)
	S101= CtrlLo=0                                              Premise(F637)
	S102= [Lo]=(FU(a)*FU(b))[31:0]                              Lo-Hold(S93,S101)

WB	S103= CtrlICache=0                                          Premise(F997)
	S104= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S95,S103)
	S105= CtrlHi=0                                              Premise(F1007)
	S106= [Hi]=(FU(a)*FU(b))[63:32]                             Hi-Hold(S97,S105)
	S107= CtrlPC=0                                              Premise(F1009)
	S108= CtrlPCInc=0                                           Premise(F1010)
	S109= PC[Out]=addr+4                                        PC-Hold(S100,S107,S108)
	S110= CtrlLo=0                                              Premise(F1018)
	S111= [Lo]=(FU(a)*FU(b))[31:0]                              Lo-Hold(S102,S110)

POST	S104= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S95,S103)
	S106= [Hi]=(FU(a)*FU(b))[63:32]                             Hi-Hold(S97,S105)
	S109= PC[Out]=addr+4                                        PC-Hold(S100,S107,S108)
	S111= [Lo]=(FU(a)*FU(b))[31:0]                              Lo-Hold(S102,S110)

