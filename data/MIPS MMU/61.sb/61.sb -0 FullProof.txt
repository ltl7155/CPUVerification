
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={40,rS,rT,offset}                      Premise(F2)
	S3= GPR[rS]=base                                            Premise(F3)
	S4= GPR[rT]=a                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S8,S10)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S14= IAddrReg.In={pid,addr}                                 Path(S11,S13)
	S15= IMMU.Hit=>CU.IMMUHit                                   Premise(F8)
	S16= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S12,S15)
	S17= PC.Out=>ICache.IEA                                     Premise(F9)
	S18= ICache.IEA=addr                                        Path(S6,S17)
	S19= ICache.Hit=ICacheHit(addr)                             ICache-Search(S18)
	S20= ICache.Out=>IR.In                                      Premise(F10)
	S21= ICache.Out=>ICacheReg.In                               Premise(F11)
	S22= ICache.Hit=>CU.ICacheHit                               Premise(F12)
	S23= CU.ICacheHit=ICacheHit(addr)                           Path(S19,S22)
	S24= CtrlASIDIn=0                                           Premise(F13)
	S25= CtrlCP0=0                                              Premise(F14)
	S26= CP0[ASID]=pid                                          CP0-Hold(S0,S25)
	S27= CtrlEPCIn=0                                            Premise(F15)
	S28= CtrlExCodeIn=0                                         Premise(F16)
	S29= CtrlIMMU=0                                             Premise(F17)
	S30= CtrlPC=0                                               Premise(F18)
	S31= CtrlPCInc=0                                            Premise(F19)
	S32= PC[Out]=addr                                           PC-Hold(S1,S30,S31)
	S33= CtrlIAddrReg=1                                         Premise(F20)
	S34= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S14,S33)
	S35= CtrlICache=0                                           Premise(F21)
	S36= CtrlIR=0                                               Premise(F22)
	S37= CtrlICacheReg=1                                        Premise(F23)
	S38= CtrlIMem=0                                             Premise(F24)
	S39= IMem[{pid,addr}]={40,rS,rT,offset}                     IMem-Hold(S2,S38)
	S40= CtrlIRMux=0                                            Premise(F25)
	S41= CtrlGPR=0                                              Premise(F26)
	S42= GPR[rS]=base                                           GPR-Hold(S3,S41)
	S43= GPR[rT]=a                                              GPR-Hold(S4,S41)
	S44= CtrlA=0                                                Premise(F27)
	S45= CtrlB=0                                                Premise(F28)
	S46= CtrlALUOut=0                                           Premise(F29)
	S47= CtrlDR=0                                               Premise(F30)
	S48= CtrlDMMU=0                                             Premise(F31)
	S49= CtrlDAddrReg=0                                         Premise(F32)
	S50= CtrlDCache=0                                           Premise(F33)
	S51= DCache.RLineEA=DCacheRLineEA()                         DCache-WriteBack()
	S52= DCache.RLineData=DCacheRLineData()                     DCache-WriteBack()
	S53= DCache.RLineDirty=DCacheRLineDirty()                   DCache-WriteBack()
	S54= CtrlDMem=0                                             Premise(F34)
	S55= CtrlDMem8Word=0                                        Premise(F35)

IF(IMMU)	S56= CP0.ASID=pid                                           CP0-Read-ASID(S26)
	S57= PC.Out=addr                                            PC-Out(S32)
	S58= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S34)
	S59= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S34)
	S60= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S34)
	S61= CU.IMMUHit=>CU.IMMUHit                                 Premise(F36)
	S62= CU.ICacheHit=>CU.ICacheHit                             Premise(F37)
	S63= IAddrReg.Out=>IMem.RAddr                               Premise(F38)
	S64= IMem.RAddr={pid,addr}                                  Path(S58,S63)
	S65= IMem.Out={40,rS,rT,offset}                             IMem-Read(S64,S39)
	S66= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S64,S39)
	S67= IMem.Out=>IRMux.MemData                                Premise(F39)
	S68= IRMux.MemData={40,rS,rT,offset}                        Path(S65,S67)
	S69= IRMux.Out={40,rS,rT,offset}                            IRMux-Select2(S68)
	S70= ICacheReg.Out=>IRMux.CacheData                         Premise(F40)
	S71= CU.IMMUHit=>IRMux.MemSel                               Premise(F41)
	S72= CU.ICacheHit=>IRMux.CacheSel                           Premise(F42)
	S73= IRMux.Out=>IR.In                                       Premise(F43)
	S74= IR.In={40,rS,rT,offset}                                Path(S69,S73)
	S75= IMem.MEM8WordOut=>ICache.WData                         Premise(F44)
	S76= ICache.WData=IMemGet8Word({pid,addr})                  Path(S66,S75)
	S77= PC.Out=>ICache.IEA                                     Premise(F45)
	S78= ICache.IEA=addr                                        Path(S57,S77)
	S79= ICache.Hit=ICacheHit(addr)                             ICache-Search(S78)
	S80= CtrlASIDIn=0                                           Premise(F46)
	S81= CtrlCP0=0                                              Premise(F47)
	S82= CP0[ASID]=pid                                          CP0-Hold(S26,S81)
	S83= CtrlEPCIn=0                                            Premise(F48)
	S84= CtrlExCodeIn=0                                         Premise(F49)
	S85= CtrlIMMU=0                                             Premise(F50)
	S86= CtrlPC=0                                               Premise(F51)
	S87= CtrlPCInc=1                                            Premise(F52)
	S88= PC[Out]=addr+4                                         PC-Inc(S32,S86,S87)
	S89= PC[CIA]=addr                                           PC-Inc(S32,S86,S87)
	S90= CtrlIAddrReg=0                                         Premise(F53)
	S91= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S34,S90)
	S92= CtrlICache=1                                           Premise(F54)
	S93= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S78,S76,S92)
	S94= CtrlIR=1                                               Premise(F55)
	S95= [IR]={40,rS,rT,offset}                                 IR-Write(S74,S94)
	S96= CtrlICacheReg=0                                        Premise(F56)
	S97= CtrlIMem=0                                             Premise(F57)
	S98= IMem[{pid,addr}]={40,rS,rT,offset}                     IMem-Hold(S39,S97)
	S99= CtrlIRMux=0                                            Premise(F58)
	S100= CtrlGPR=0                                             Premise(F59)
	S101= GPR[rS]=base                                          GPR-Hold(S42,S100)
	S102= GPR[rT]=a                                             GPR-Hold(S43,S100)
	S103= CtrlA=0                                               Premise(F60)
	S104= CtrlB=0                                               Premise(F61)
	S105= CtrlALUOut=0                                          Premise(F62)
	S106= CtrlDR=0                                              Premise(F63)
	S107= CtrlDMMU=0                                            Premise(F64)
	S108= CtrlDAddrReg=0                                        Premise(F65)
	S109= CtrlDCache=0                                          Premise(F66)
	S110= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S111= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S112= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S113= CtrlDMem=0                                            Premise(F67)
	S114= CtrlDMem8Word=0                                       Premise(F68)

ID	S115= CP0.ASID=pid                                          CP0-Read-ASID(S82)
	S116= PC.Out=addr+4                                         PC-Out(S88)
	S117= PC.CIA=addr                                           PC-Out(S89)
	S118= PC.CIA31_28=addr[31:28]                               PC-Out(S89)
	S119= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S91)
	S120= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S91)
	S121= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S91)
	S122= IR.Out={40,rS,rT,offset}                              IR-Out(S95)
	S123= IR.Out31_26=40                                        IR-Out(S95)
	S124= IR.Out25_21=rS                                        IR-Out(S95)
	S125= IR.Out20_16=rT                                        IR-Out(S95)
	S126= IR.Out15_0=offset                                     IR-Out(S95)
	S127= IR.Out31_26=>CU.Op                                    Premise(F69)
	S128= CU.Op=40                                              Path(S123,S127)
	S129= CU.Func=alu_add                                       CU(S128)
	S130= CU.MemDataSelFunc=mds_lhz                             CU(S128)
	S131= IR.Out25_21=>GPR.RReg1                                Premise(F70)
	S132= GPR.RReg1=rS                                          Path(S124,S131)
	S133= GPR.Rdata1=base                                       GPR-Read(S132,S101)
	S134= IR.Out15_0=>IMMEXT.In                                 Premise(F71)
	S135= IMMEXT.In=offset                                      Path(S126,S134)
	S136= IMMEXT.Out={16{offset[15]},offset}                    IMMEXT(S135)
	S137= GPR.Rdata1=>A.In                                      Premise(F72)
	S138= A.In=base                                             Path(S133,S137)
	S139= IMMEXT.Out=>B.In                                      Premise(F73)
	S140= B.In={16{offset[15]},offset}                          Path(S136,S139)
	S141= CtrlASIDIn=0                                          Premise(F74)
	S142= CtrlCP0=0                                             Premise(F75)
	S143= CP0[ASID]=pid                                         CP0-Hold(S82,S142)
	S144= CtrlEPCIn=0                                           Premise(F76)
	S145= CtrlExCodeIn=0                                        Premise(F77)
	S146= CtrlIMMU=0                                            Premise(F78)
	S147= CtrlPC=0                                              Premise(F79)
	S148= CtrlPCInc=0                                           Premise(F80)
	S149= PC[CIA]=addr                                          PC-Hold(S89,S148)
	S150= PC[Out]=addr+4                                        PC-Hold(S88,S147,S148)
	S151= CtrlIAddrReg=0                                        Premise(F81)
	S152= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S91,S151)
	S153= CtrlICache=0                                          Premise(F82)
	S154= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S93,S153)
	S155= CtrlIR=0                                              Premise(F83)
	S156= [IR]={40,rS,rT,offset}                                IR-Hold(S95,S155)
	S157= CtrlICacheReg=0                                       Premise(F84)
	S158= CtrlIMem=0                                            Premise(F85)
	S159= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S98,S158)
	S160= CtrlIRMux=0                                           Premise(F86)
	S161= CtrlGPR=0                                             Premise(F87)
	S162= GPR[rS]=base                                          GPR-Hold(S101,S161)
	S163= GPR[rT]=a                                             GPR-Hold(S102,S161)
	S164= CtrlA=1                                               Premise(F88)
	S165= [A]=base                                              A-Write(S138,S164)
	S166= CtrlB=1                                               Premise(F89)
	S167= [B]={16{offset[15]},offset}                           B-Write(S140,S166)
	S168= CtrlALUOut=0                                          Premise(F90)
	S169= CtrlDR=0                                              Premise(F91)
	S170= CtrlDMMU=0                                            Premise(F92)
	S171= CtrlDAddrReg=0                                        Premise(F93)
	S172= CtrlDCache=0                                          Premise(F94)
	S173= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S174= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S175= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S176= CtrlDMem=0                                            Premise(F95)
	S177= CtrlDMem8Word=0                                       Premise(F96)

EX	S178= CP0.ASID=pid                                          CP0-Read-ASID(S143)
	S179= PC.CIA=addr                                           PC-Out(S149)
	S180= PC.CIA31_28=addr[31:28]                               PC-Out(S149)
	S181= PC.Out=addr+4                                         PC-Out(S150)
	S182= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S152)
	S183= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S152)
	S184= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S152)
	S185= IR.Out={40,rS,rT,offset}                              IR-Out(S156)
	S186= IR.Out31_26=40                                        IR-Out(S156)
	S187= IR.Out25_21=rS                                        IR-Out(S156)
	S188= IR.Out20_16=rT                                        IR-Out(S156)
	S189= IR.Out15_0=offset                                     IR-Out(S156)
	S190= A.Out=base                                            A-Out(S165)
	S191= A.Out1_0={base}[1:0]                                  A-Out(S165)
	S192= A.Out4_0={base}[4:0]                                  A-Out(S165)
	S193= B.Out={16{offset[15]},offset}                         B-Out(S167)
	S194= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S167)
	S195= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S167)
	S196= A.Out=>ALU.A                                          Premise(F97)
	S197= ALU.A=base                                            Path(S190,S196)
	S198= B.Out=>ALU.B                                          Premise(F98)
	S199= ALU.B={16{offset[15]},offset}                         Path(S193,S198)
	S200= ALU.Func=6'b010010                                    Premise(F99)
	S201= ALU.Out=base+{16{offset[15]},offset}                  ALU(S197,S199)
	S202= ALU.Out1_0={base+{16{offset[15]},offset}}[1:0]        ALU(S197,S199)
	S203= ALU.CMP=Compare0(base+{16{offset[15]},offset})        ALU(S197,S199)
	S204= ALU.OV=OverFlow(base+{16{offset[15]},offset})         ALU(S197,S199)
	S205= ALU.CA=Carry(base+{16{offset[15]},offset})            ALU(S197,S199)
	S206= ALU.Out=>ALUOut.In                                    Premise(F100)
	S207= ALUOut.In=base+{16{offset[15]},offset}                Path(S201,S206)
	S208= IR.Out20_16=>GPR.RReg2                                Premise(F101)
	S209= GPR.RReg2=rT                                          Path(S188,S208)
	S210= GPR.Rdata2=a                                          GPR-Read(S209,S163)
	S211= GPR.Rdata2=>MemDataSelS.In                            Premise(F102)
	S212= MemDataSelS.In=a                                      Path(S210,S211)
	S213= ALU.Out1_0=>MemDataSelS.Addr                          Premise(F103)
	S214= MemDataSelS.Addr={base+{16{offset[15]},offset}}[1:0]  Path(S202,S213)
	S215= MemDataSelS.Func=6'b010000                            Premise(F104)
	S216= MemDataSelS.Out={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}MemDataSelS(S212,S214)
	S217= MemDataSelS.Out=>DR.In                                Premise(F105)
	S218= DR.In={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}Path(S216,S217)
	S219= CtrlASIDIn=0                                          Premise(F106)
	S220= CtrlCP0=0                                             Premise(F107)
	S221= CP0[ASID]=pid                                         CP0-Hold(S143,S220)
	S222= CtrlEPCIn=0                                           Premise(F108)
	S223= CtrlExCodeIn=0                                        Premise(F109)
	S224= CtrlIMMU=0                                            Premise(F110)
	S225= CtrlPC=0                                              Premise(F111)
	S226= CtrlPCInc=0                                           Premise(F112)
	S227= PC[CIA]=addr                                          PC-Hold(S149,S226)
	S228= PC[Out]=addr+4                                        PC-Hold(S150,S225,S226)
	S229= CtrlIAddrReg=0                                        Premise(F113)
	S230= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S152,S229)
	S231= CtrlICache=0                                          Premise(F114)
	S232= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S154,S231)
	S233= CtrlIR=0                                              Premise(F115)
	S234= [IR]={40,rS,rT,offset}                                IR-Hold(S156,S233)
	S235= CtrlICacheReg=0                                       Premise(F116)
	S236= CtrlIMem=0                                            Premise(F117)
	S237= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S159,S236)
	S238= CtrlIRMux=0                                           Premise(F118)
	S239= CtrlGPR=0                                             Premise(F119)
	S240= GPR[rS]=base                                          GPR-Hold(S162,S239)
	S241= GPR[rT]=a                                             GPR-Hold(S163,S239)
	S242= CtrlA=0                                               Premise(F120)
	S243= [A]=base                                              A-Hold(S165,S242)
	S244= CtrlB=0                                               Premise(F121)
	S245= [B]={16{offset[15]},offset}                           B-Hold(S167,S244)
	S246= CtrlALUOut=1                                          Premise(F122)
	S247= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Write(S207,S246)
	S248= CtrlDR=1                                              Premise(F123)
	S249= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Write(S218,S248)
	S250= CtrlDMMU=0                                            Premise(F124)
	S251= CtrlDAddrReg=0                                        Premise(F125)
	S252= CtrlDCache=0                                          Premise(F126)
	S253= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S254= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S255= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S256= CtrlDMem=0                                            Premise(F127)
	S257= CtrlDMem8Word=0                                       Premise(F128)

MEM	S258= CP0.ASID=pid                                          CP0-Read-ASID(S221)
	S259= PC.CIA=addr                                           PC-Out(S227)
	S260= PC.CIA31_28=addr[31:28]                               PC-Out(S227)
	S261= PC.Out=addr+4                                         PC-Out(S228)
	S262= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S230)
	S263= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S230)
	S264= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S230)
	S265= IR.Out={40,rS,rT,offset}                              IR-Out(S234)
	S266= IR.Out31_26=40                                        IR-Out(S234)
	S267= IR.Out25_21=rS                                        IR-Out(S234)
	S268= IR.Out20_16=rT                                        IR-Out(S234)
	S269= IR.Out15_0=offset                                     IR-Out(S234)
	S270= A.Out=base                                            A-Out(S243)
	S271= A.Out1_0={base}[1:0]                                  A-Out(S243)
	S272= A.Out4_0={base}[4:0]                                  A-Out(S243)
	S273= B.Out={16{offset[15]},offset}                         B-Out(S245)
	S274= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S245)
	S275= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S245)
	S276= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S247)
	S277= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S247)
	S278= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S247)
	S279= DR.Out={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Out(S249)
	S280= DR.Out1_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR-Out(S249)
	S281= DR.Out4_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR-Out(S249)
	S282= CP0.ASID=>DMMU.PID                                    Premise(F129)
	S283= DMMU.PID=pid                                          Path(S258,S282)
	S284= ALUOut.Out=>DMMU.IEA                                  Premise(F130)
	S285= DMMU.IEA=base+{16{offset[15]},offset}                 Path(S276,S284)
	S286= DMMU.Addr={pid,base+{16{offset[15]},offset}}          DMMU-Search(S283,S285)
	S287= DMMU.Hit=DMMUHit(pid,base+{16{offset[15]},offset})    DMMU-Search(S283,S285)
	S288= DMMU.Addr=>DAddrReg.In                                Premise(F131)
	S289= DAddrReg.In={pid,base+{16{offset[15]},offset}}        Path(S286,S288)
	S290= DMMU.Hit=>CU.DMMUHit                                  Premise(F132)
	S291= CU.DMMUHit=DMMUHit(pid,base+{16{offset[15]},offset})  Path(S287,S290)
	S292= ALUOut.Out=>DCache.IEA                                Premise(F133)
	S293= DCache.IEA=base+{16{offset[15]},offset}               Path(S276,S292)
	S294= DCache.Hit=DCacheHit(base+{16{offset[15]},offset})    DCache-Search(S293)
	S295= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S296= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S297= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S298= DCache.Hit=>CU.DCacheHit                              Premise(F134)
	S299= CU.DCacheHit=DCacheHit(base+{16{offset[15]},offset})  Path(S294,S298)
	S300= DR.Out=>DCache.In                                     Premise(F135)
	S301= DCache.In={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}Path(S279,S300)
	S302= CtrlASIDIn=0                                          Premise(F136)
	S303= CtrlCP0=0                                             Premise(F137)
	S304= CP0[ASID]=pid                                         CP0-Hold(S221,S303)
	S305= CtrlEPCIn=0                                           Premise(F138)
	S306= CtrlExCodeIn=0                                        Premise(F139)
	S307= CtrlIMMU=0                                            Premise(F140)
	S308= CtrlPC=0                                              Premise(F141)
	S309= CtrlPCInc=0                                           Premise(F142)
	S310= PC[CIA]=addr                                          PC-Hold(S227,S309)
	S311= PC[Out]=addr+4                                        PC-Hold(S228,S308,S309)
	S312= CtrlIAddrReg=0                                        Premise(F143)
	S313= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S230,S312)
	S314= CtrlICache=0                                          Premise(F144)
	S315= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S232,S314)
	S316= CtrlIR=0                                              Premise(F145)
	S317= [IR]={40,rS,rT,offset}                                IR-Hold(S234,S316)
	S318= CtrlICacheReg=0                                       Premise(F146)
	S319= CtrlIMem=0                                            Premise(F147)
	S320= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S237,S319)
	S321= CtrlIRMux=0                                           Premise(F148)
	S322= CtrlGPR=0                                             Premise(F149)
	S323= GPR[rS]=base                                          GPR-Hold(S240,S322)
	S324= GPR[rT]=a                                             GPR-Hold(S241,S322)
	S325= CtrlA=0                                               Premise(F150)
	S326= [A]=base                                              A-Hold(S243,S325)
	S327= CtrlB=0                                               Premise(F151)
	S328= [B]={16{offset[15]},offset}                           B-Hold(S245,S327)
	S329= CtrlALUOut=0                                          Premise(F152)
	S330= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S247,S329)
	S331= CtrlDR=0                                              Premise(F153)
	S332= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Hold(S249,S331)
	S333= CtrlDMMU=0                                            Premise(F154)
	S334= CtrlDAddrReg=1                                        Premise(F155)
	S335= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Write(S289,S334)
	S336= CtrlDCache=0                                          Premise(F156)
	S337= CtrlDMem=0                                            Premise(F157)
	S338= CtrlDMem8Word=0                                       Premise(F158)

MEM(DMMU1)	S339= CP0.ASID=pid                                          CP0-Read-ASID(S304)
	S340= PC.CIA=addr                                           PC-Out(S310)
	S341= PC.CIA31_28=addr[31:28]                               PC-Out(S310)
	S342= PC.Out=addr+4                                         PC-Out(S311)
	S343= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S313)
	S344= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S313)
	S345= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S313)
	S346= IR.Out={40,rS,rT,offset}                              IR-Out(S317)
	S347= IR.Out31_26=40                                        IR-Out(S317)
	S348= IR.Out25_21=rS                                        IR-Out(S317)
	S349= IR.Out20_16=rT                                        IR-Out(S317)
	S350= IR.Out15_0=offset                                     IR-Out(S317)
	S351= A.Out=base                                            A-Out(S326)
	S352= A.Out1_0={base}[1:0]                                  A-Out(S326)
	S353= A.Out4_0={base}[4:0]                                  A-Out(S326)
	S354= B.Out={16{offset[15]},offset}                         B-Out(S328)
	S355= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S328)
	S356= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S328)
	S357= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S330)
	S358= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S330)
	S359= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S330)
	S360= DR.Out={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Out(S332)
	S361= DR.Out1_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR-Out(S332)
	S362= DR.Out4_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR-Out(S332)
	S363= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S335)
	S364= DAddrReg.Out1_0={{pid,base+{16{offset[15]},offset}}}[1:0]DAddrReg-Out(S335)
	S365= DAddrReg.Out4_0={{pid,base+{16{offset[15]},offset}}}[4:0]DAddrReg-Out(S335)
	S366= CtrlASIDIn=0                                          Premise(F159)
	S367= CtrlCP0=0                                             Premise(F160)
	S368= CP0[ASID]=pid                                         CP0-Hold(S304,S367)
	S369= CtrlEPCIn=0                                           Premise(F161)
	S370= CtrlExCodeIn=0                                        Premise(F162)
	S371= CtrlIMMU=0                                            Premise(F163)
	S372= CtrlPC=0                                              Premise(F164)
	S373= CtrlPCInc=0                                           Premise(F165)
	S374= PC[CIA]=addr                                          PC-Hold(S310,S373)
	S375= PC[Out]=addr+4                                        PC-Hold(S311,S372,S373)
	S376= CtrlIAddrReg=0                                        Premise(F166)
	S377= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S313,S376)
	S378= CtrlICache=0                                          Premise(F167)
	S379= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S315,S378)
	S380= CtrlIR=0                                              Premise(F168)
	S381= [IR]={40,rS,rT,offset}                                IR-Hold(S317,S380)
	S382= CtrlICacheReg=0                                       Premise(F169)
	S383= CtrlIMem=0                                            Premise(F170)
	S384= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S320,S383)
	S385= CtrlIRMux=0                                           Premise(F171)
	S386= CtrlGPR=0                                             Premise(F172)
	S387= GPR[rS]=base                                          GPR-Hold(S323,S386)
	S388= GPR[rT]=a                                             GPR-Hold(S324,S386)
	S389= CtrlA=0                                               Premise(F173)
	S390= [A]=base                                              A-Hold(S326,S389)
	S391= CtrlB=0                                               Premise(F174)
	S392= [B]={16{offset[15]},offset}                           B-Hold(S328,S391)
	S393= CtrlALUOut=0                                          Premise(F175)
	S394= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S330,S393)
	S395= CtrlDR=0                                              Premise(F176)
	S396= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Hold(S332,S395)
	S397= CtrlDMMU=0                                            Premise(F177)
	S398= CtrlDAddrReg=0                                        Premise(F178)
	S399= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S335,S398)
	S400= CtrlDCache=0                                          Premise(F179)
	S401= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S402= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S403= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S404= CtrlDMem=0                                            Premise(F180)
	S405= CtrlDMem8Word=0                                       Premise(F181)

MEM(DMMU2)	S406= CP0.ASID=pid                                          CP0-Read-ASID(S368)
	S407= PC.CIA=addr                                           PC-Out(S374)
	S408= PC.CIA31_28=addr[31:28]                               PC-Out(S374)
	S409= PC.Out=addr+4                                         PC-Out(S375)
	S410= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S377)
	S411= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S377)
	S412= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S377)
	S413= IR.Out={40,rS,rT,offset}                              IR-Out(S381)
	S414= IR.Out31_26=40                                        IR-Out(S381)
	S415= IR.Out25_21=rS                                        IR-Out(S381)
	S416= IR.Out20_16=rT                                        IR-Out(S381)
	S417= IR.Out15_0=offset                                     IR-Out(S381)
	S418= A.Out=base                                            A-Out(S390)
	S419= A.Out1_0={base}[1:0]                                  A-Out(S390)
	S420= A.Out4_0={base}[4:0]                                  A-Out(S390)
	S421= B.Out={16{offset[15]},offset}                         B-Out(S392)
	S422= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S392)
	S423= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S392)
	S424= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S394)
	S425= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S394)
	S426= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S394)
	S427= DR.Out={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Out(S396)
	S428= DR.Out1_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR-Out(S396)
	S429= DR.Out4_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR-Out(S396)
	S430= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S399)
	S431= DAddrReg.Out1_0={{pid,base+{16{offset[15]},offset}}}[1:0]DAddrReg-Out(S399)
	S432= DAddrReg.Out4_0={{pid,base+{16{offset[15]},offset}}}[4:0]DAddrReg-Out(S399)
	S433= CU.DMMUHit=>CU.DMMUHit                                Premise(F182)
	S434= CU.DCacheHit=>CU.DCacheHit                            Premise(F183)
	S435= DAddrReg.Out=>DMem.WAddr                              Premise(F184)
	S436= DMem.WAddr={pid,base+{16{offset[15]},offset}}         Path(S430,S435)
	S437= DR.Out=>DMem.WData                                    Premise(F185)
	S438= DMem.WData={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}Path(S427,S437)
	S439= ALUOut.Out=>DCache.IEA                                Premise(F186)
	S440= DCache.IEA=base+{16{offset[15]},offset}               Path(S424,S439)
	S441= DCache.Hit=DCacheHit(base+{16{offset[15]},offset})    DCache-Search(S440)
	S442= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S443= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S444= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S445= DR.Out=>DCache.In                                     Premise(F187)
	S446= DCache.In={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}Path(S427,S445)
	S447= CtrlASIDIn=0                                          Premise(F188)
	S448= CtrlCP0=0                                             Premise(F189)
	S449= CP0[ASID]=pid                                         CP0-Hold(S368,S448)
	S450= CtrlEPCIn=0                                           Premise(F190)
	S451= CtrlExCodeIn=0                                        Premise(F191)
	S452= CtrlIMMU=0                                            Premise(F192)
	S453= CtrlPC=0                                              Premise(F193)
	S454= CtrlPCInc=0                                           Premise(F194)
	S455= PC[CIA]=addr                                          PC-Hold(S374,S454)
	S456= PC[Out]=addr+4                                        PC-Hold(S375,S453,S454)
	S457= CtrlIAddrReg=0                                        Premise(F195)
	S458= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S377,S457)
	S459= CtrlICache=0                                          Premise(F196)
	S460= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S379,S459)
	S461= CtrlIR=0                                              Premise(F197)
	S462= [IR]={40,rS,rT,offset}                                IR-Hold(S381,S461)
	S463= CtrlICacheReg=0                                       Premise(F198)
	S464= CtrlIMem=0                                            Premise(F199)
	S465= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S384,S464)
	S466= CtrlIRMux=0                                           Premise(F200)
	S467= CtrlGPR=0                                             Premise(F201)
	S468= GPR[rS]=base                                          GPR-Hold(S387,S467)
	S469= GPR[rT]=a                                             GPR-Hold(S388,S467)
	S470= CtrlA=0                                               Premise(F202)
	S471= [A]=base                                              A-Hold(S390,S470)
	S472= CtrlB=0                                               Premise(F203)
	S473= [B]={16{offset[15]},offset}                           B-Hold(S392,S472)
	S474= CtrlALUOut=0                                          Premise(F204)
	S475= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S394,S474)
	S476= CtrlDR=0                                              Premise(F205)
	S477= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Hold(S396,S476)
	S478= CtrlDMMU=0                                            Premise(F206)
	S479= CtrlDAddrReg=0                                        Premise(F207)
	S480= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S399,S479)
	S481= CtrlDCache=0                                          Premise(F208)
	S482= CtrlDMem=1                                            Premise(F209)
	S483= DMem[{pid,base+{16{offset[15]},offset}}]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DMem-Write(S436,S438,S482)
	S484= CtrlDMem8Word=0                                       Premise(F210)

WB	S485= CP0.ASID=pid                                          CP0-Read-ASID(S449)
	S486= PC.CIA=addr                                           PC-Out(S455)
	S487= PC.CIA31_28=addr[31:28]                               PC-Out(S455)
	S488= PC.Out=addr+4                                         PC-Out(S456)
	S489= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S458)
	S490= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S458)
	S491= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S458)
	S492= IR.Out={40,rS,rT,offset}                              IR-Out(S462)
	S493= IR.Out31_26=40                                        IR-Out(S462)
	S494= IR.Out25_21=rS                                        IR-Out(S462)
	S495= IR.Out20_16=rT                                        IR-Out(S462)
	S496= IR.Out15_0=offset                                     IR-Out(S462)
	S497= A.Out=base                                            A-Out(S471)
	S498= A.Out1_0={base}[1:0]                                  A-Out(S471)
	S499= A.Out4_0={base}[4:0]                                  A-Out(S471)
	S500= B.Out={16{offset[15]},offset}                         B-Out(S473)
	S501= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S473)
	S502= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S473)
	S503= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S475)
	S504= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S475)
	S505= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S475)
	S506= DR.Out={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Out(S477)
	S507= DR.Out1_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR-Out(S477)
	S508= DR.Out4_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR-Out(S477)
	S509= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S480)
	S510= DAddrReg.Out1_0={{pid,base+{16{offset[15]},offset}}}[1:0]DAddrReg-Out(S480)
	S511= DAddrReg.Out4_0={{pid,base+{16{offset[15]},offset}}}[4:0]DAddrReg-Out(S480)
	S512= CtrlASIDIn=0                                          Premise(F211)
	S513= CtrlCP0=0                                             Premise(F212)
	S514= CP0[ASID]=pid                                         CP0-Hold(S449,S513)
	S515= CtrlEPCIn=0                                           Premise(F213)
	S516= CtrlExCodeIn=0                                        Premise(F214)
	S517= CtrlIMMU=0                                            Premise(F215)
	S518= CtrlPC=0                                              Premise(F216)
	S519= CtrlPCInc=0                                           Premise(F217)
	S520= PC[CIA]=addr                                          PC-Hold(S455,S519)
	S521= PC[Out]=addr+4                                        PC-Hold(S456,S518,S519)
	S522= CtrlIAddrReg=0                                        Premise(F218)
	S523= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S458,S522)
	S524= CtrlICache=0                                          Premise(F219)
	S525= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S460,S524)
	S526= CtrlIR=0                                              Premise(F220)
	S527= [IR]={40,rS,rT,offset}                                IR-Hold(S462,S526)
	S528= CtrlICacheReg=0                                       Premise(F221)
	S529= CtrlIMem=0                                            Premise(F222)
	S530= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S465,S529)
	S531= CtrlIRMux=0                                           Premise(F223)
	S532= CtrlGPR=0                                             Premise(F224)
	S533= GPR[rS]=base                                          GPR-Hold(S468,S532)
	S534= GPR[rT]=a                                             GPR-Hold(S469,S532)
	S535= CtrlA=0                                               Premise(F225)
	S536= [A]=base                                              A-Hold(S471,S535)
	S537= CtrlB=0                                               Premise(F226)
	S538= [B]={16{offset[15]},offset}                           B-Hold(S473,S537)
	S539= CtrlALUOut=0                                          Premise(F227)
	S540= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S475,S539)
	S541= CtrlDR=0                                              Premise(F228)
	S542= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Hold(S477,S541)
	S543= CtrlDMMU=0                                            Premise(F229)
	S544= CtrlDAddrReg=0                                        Premise(F230)
	S545= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S480,S544)
	S546= CtrlDCache=0                                          Premise(F231)
	S547= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S548= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S549= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S550= CtrlDMem=0                                            Premise(F232)
	S551= DMem[{pid,base+{16{offset[15]},offset}}]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DMem-Hold(S483,S550)
	S552= CtrlDMem8Word=0                                       Premise(F233)

POST	S514= CP0[ASID]=pid                                         CP0-Hold(S449,S513)
	S520= PC[CIA]=addr                                          PC-Hold(S455,S519)
	S521= PC[Out]=addr+4                                        PC-Hold(S456,S518,S519)
	S523= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S458,S522)
	S525= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S460,S524)
	S527= [IR]={40,rS,rT,offset}                                IR-Hold(S462,S526)
	S530= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S465,S529)
	S533= GPR[rS]=base                                          GPR-Hold(S468,S532)
	S534= GPR[rT]=a                                             GPR-Hold(S469,S532)
	S536= [A]=base                                              A-Hold(S471,S535)
	S538= [B]={16{offset[15]},offset}                           B-Hold(S473,S537)
	S540= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S475,S539)
	S542= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Hold(S477,S541)
	S545= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S480,S544)
	S551= DMem[{pid,base+{16{offset[15]},offset}}]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DMem-Hold(S483,S550)

