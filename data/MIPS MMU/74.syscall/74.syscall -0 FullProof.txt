
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,code,12}                            Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= CP0.ASID=>IMMU.PID                                      Premise(F3)
	S6= IMMU.PID=pid                                            Path(S3,S5)
	S7= PC.Out=>IMMU.IEA                                        Premise(F4)
	S8= IMMU.IEA=addr                                           Path(S4,S7)
	S9= IMMU.Addr={pid,addr}                                    IMMU-Search(S6,S8)
	S10= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S6,S8)
	S11= IMMU.Addr=>IAddrReg.In                                 Premise(F5)
	S12= IAddrReg.In={pid,addr}                                 Path(S9,S11)
	S13= IMMU.Hit=>CU.IMMUHit                                   Premise(F6)
	S14= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S10,S13)
	S15= PC.Out=>ICache.IEA                                     Premise(F7)
	S16= ICache.IEA=addr                                        Path(S4,S15)
	S17= ICache.Hit=ICacheHit(addr)                             ICache-Search(S16)
	S18= ICache.Out=>IR.In                                      Premise(F8)
	S19= ICache.Out=>ICacheReg.In                               Premise(F9)
	S20= ICache.Hit=>CU.ICacheHit                               Premise(F10)
	S21= CU.ICacheHit=ICacheHit(addr)                           Path(S17,S20)
	S22= CtrlASIDIn=0                                           Premise(F11)
	S23= CtrlCP0=0                                              Premise(F12)
	S24= CP0[ASID]=pid                                          CP0-Hold(S0,S23)
	S25= CtrlEPCIn=0                                            Premise(F13)
	S26= CtrlExCodeIn=0                                         Premise(F14)
	S27= CtrlIMMU=0                                             Premise(F15)
	S28= CtrlPC=0                                               Premise(F16)
	S29= CtrlPCInc=0                                            Premise(F17)
	S30= PC[Out]=addr                                           PC-Hold(S1,S28,S29)
	S31= CtrlIAddrReg=1                                         Premise(F18)
	S32= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S31)
	S33= CtrlICache=0                                           Premise(F19)
	S34= CtrlIR=0                                               Premise(F20)
	S35= CtrlICacheReg=1                                        Premise(F21)
	S36= CtrlIMem=0                                             Premise(F22)
	S37= IMem[{pid,addr}]={0,code,12}                           IMem-Hold(S2,S36)
	S38= CtrlIRMux=0                                            Premise(F23)
	S39= CtrlPIDReg=0                                           Premise(F24)

IF(IMMU)	S40= CP0.ASID=pid                                           CP0-Read-ASID(S24)
	S41= PC.Out=addr                                            PC-Out(S30)
	S42= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S32)
	S43= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S32)
	S44= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S32)
	S45= CU.IMMUHit=>CU.IMMUHit                                 Premise(F25)
	S46= CU.ICacheHit=>CU.ICacheHit                             Premise(F26)
	S47= IAddrReg.Out=>IMem.RAddr                               Premise(F27)
	S48= IMem.RAddr={pid,addr}                                  Path(S42,S47)
	S49= IMem.Out={0,code,12}                                   IMem-Read(S48,S37)
	S50= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S48,S37)
	S51= IMem.Out=>IRMux.MemData                                Premise(F28)
	S52= IRMux.MemData={0,code,12}                              Path(S49,S51)
	S53= IRMux.Out={0,code,12}                                  IRMux-Select2(S52)
	S54= ICacheReg.Out=>IRMux.CacheData                         Premise(F29)
	S55= CU.IMMUHit=>IRMux.MemSel                               Premise(F30)
	S56= CU.ICacheHit=>IRMux.CacheSel                           Premise(F31)
	S57= IRMux.Out=>IR.In                                       Premise(F32)
	S58= IR.In={0,code,12}                                      Path(S53,S57)
	S59= IMem.MEM8WordOut=>ICache.WData                         Premise(F33)
	S60= ICache.WData=IMemGet8Word({pid,addr})                  Path(S50,S59)
	S61= PC.Out=>ICache.IEA                                     Premise(F34)
	S62= ICache.IEA=addr                                        Path(S41,S61)
	S63= ICache.Hit=ICacheHit(addr)                             ICache-Search(S62)
	S64= CtrlASIDIn=0                                           Premise(F35)
	S65= CtrlCP0=0                                              Premise(F36)
	S66= CP0[ASID]=pid                                          CP0-Hold(S24,S65)
	S67= CtrlEPCIn=0                                            Premise(F37)
	S68= CtrlExCodeIn=0                                         Premise(F38)
	S69= CtrlIMMU=0                                             Premise(F39)
	S70= CtrlPC=0                                               Premise(F40)
	S71= CtrlPCInc=1                                            Premise(F41)
	S72= PC[Out]=addr+4                                         PC-Inc(S30,S70,S71)
	S73= PC[CIA]=addr                                           PC-Inc(S30,S70,S71)
	S74= CtrlIAddrReg=0                                         Premise(F42)
	S75= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S32,S74)
	S76= CtrlICache=1                                           Premise(F43)
	S77= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S62,S60,S76)
	S78= CtrlIR=1                                               Premise(F44)
	S79= [IR]={0,code,12}                                       IR-Write(S58,S78)
	S80= CtrlICacheReg=0                                        Premise(F45)
	S81= CtrlIMem=0                                             Premise(F46)
	S82= IMem[{pid,addr}]={0,code,12}                           IMem-Hold(S37,S81)
	S83= CtrlIRMux=0                                            Premise(F47)
	S84= CtrlPIDReg=0                                           Premise(F48)

ID	S85= CP0.ASID=pid                                           CP0-Read-ASID(S66)
	S86= PC.Out=addr+4                                          PC-Out(S72)
	S87= PC.CIA=addr                                            PC-Out(S73)
	S88= PC.CIA31_28=addr[31:28]                                PC-Out(S73)
	S89= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S75)
	S90= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S75)
	S91= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S75)
	S92= IR.Out={0,code,12}                                     IR-Out(S79)
	S93= IR.Out31_26=0                                          IR-Out(S79)
	S94= IR.Out25_6=code                                        IR-Out(S79)
	S95= IR.Out5_0=12                                           IR-Out(S79)
	S96= IR.Out31_26=>CU.Op                                     Premise(F49)
	S97= CU.Op=0                                                Path(S93,S96)
	S98= IR.Out5_0=>CU.IRFunc                                   Premise(F50)
	S99= CU.IRFunc=12                                           Path(S95,S98)
	S100= PC.Out=>CP0.EPCIn                                     Premise(F51)
	S101= CP0.EPCIn=addr+4                                      Path(S86,S100)
	S102= CP0.ExCodeIn=5'h08                                    Premise(F52)
	S103= CU.TrapAddr=>PC.In                                    Premise(F53)
	S104= CP0.ASID=>PIDReg.In                                   Premise(F54)
	S105= PIDReg.In=pid                                         Path(S85,S104)
	S106= CtrlASIDIn=0                                          Premise(F55)
	S107= CtrlCP0=0                                             Premise(F56)
	S108= CP0[ASID]=pid                                         CP0-Hold(S66,S107)
	S109= CtrlEPCIn=1                                           Premise(F57)
	S110= CP0[EPC]=addr+4                                       CP0-Write-EPC(S101,S109)
	S111= CtrlExCodeIn=1                                        Premise(F58)
	S112= CP0[ExCode]=5'h08                                     CP0-Write-ExCode(S102,S111)
	S113= CtrlIMMU=0                                            Premise(F59)
	S114= CtrlPC=1                                              Premise(F60)
	S115= CtrlPCInc=0                                           Premise(F61)
	S116= PC[CIA]=addr                                          PC-Hold(S73,S115)
	S117= CtrlIAddrReg=0                                        Premise(F62)
	S118= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S75,S117)
	S119= CtrlICache=0                                          Premise(F63)
	S120= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S77,S119)
	S121= CtrlIR=0                                              Premise(F64)
	S122= [IR]={0,code,12}                                      IR-Hold(S79,S121)
	S123= CtrlICacheReg=0                                       Premise(F65)
	S124= CtrlIMem=0                                            Premise(F66)
	S125= IMem[{pid,addr}]={0,code,12}                          IMem-Hold(S82,S124)
	S126= CtrlIRMux=0                                           Premise(F67)
	S127= CtrlPIDReg=1                                          Premise(F68)
	S128= [PIDReg]=pid                                          PIDReg-Write(S105,S127)

EX	S129= CP0.ASID=pid                                          CP0-Read-ASID(S108)
	S130= CP0.EPC=addr+4                                        CP0-Read-EPC(S110)
	S131= PC.CIA=addr                                           PC-Out(S116)
	S132= PC.CIA31_28=addr[31:28]                               PC-Out(S116)
	S133= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S118)
	S134= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S118)
	S135= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S118)
	S136= IR.Out={0,code,12}                                    IR-Out(S122)
	S137= IR.Out31_26=0                                         IR-Out(S122)
	S138= IR.Out25_6=code                                       IR-Out(S122)
	S139= IR.Out5_0=12                                          IR-Out(S122)
	S140= PIDReg.Out=pid                                        PIDReg-Out(S128)
	S141= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S128)
	S142= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S128)
	S143= CtrlASIDIn=0                                          Premise(F69)
	S144= CtrlCP0=0                                             Premise(F70)
	S145= CP0[ASID]=pid                                         CP0-Hold(S108,S144)
	S146= CP0[EPC]=addr+4                                       CP0-Hold(S110,S144)
	S147= CP0[ExCode]=5'h08                                     CP0-Hold(S112,S144)
	S148= CtrlEPCIn=0                                           Premise(F71)
	S149= CtrlExCodeIn=0                                        Premise(F72)
	S150= CtrlIMMU=0                                            Premise(F73)
	S151= CtrlPC=0                                              Premise(F74)
	S152= CtrlPCInc=0                                           Premise(F75)
	S153= PC[CIA]=addr                                          PC-Hold(S116,S152)
	S154= CtrlIAddrReg=0                                        Premise(F76)
	S155= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S118,S154)
	S156= CtrlICache=0                                          Premise(F77)
	S157= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S120,S156)
	S158= CtrlIR=0                                              Premise(F78)
	S159= [IR]={0,code,12}                                      IR-Hold(S122,S158)
	S160= CtrlICacheReg=0                                       Premise(F79)
	S161= CtrlIMem=0                                            Premise(F80)
	S162= IMem[{pid,addr}]={0,code,12}                          IMem-Hold(S125,S161)
	S163= CtrlIRMux=0                                           Premise(F81)
	S164= CtrlPIDReg=0                                          Premise(F82)
	S165= [PIDReg]=pid                                          PIDReg-Hold(S128,S164)

MEM	S166= CP0.ASID=pid                                          CP0-Read-ASID(S145)
	S167= CP0.EPC=addr+4                                        CP0-Read-EPC(S146)
	S168= PC.CIA=addr                                           PC-Out(S153)
	S169= PC.CIA31_28=addr[31:28]                               PC-Out(S153)
	S170= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S155)
	S171= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S155)
	S172= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S155)
	S173= IR.Out={0,code,12}                                    IR-Out(S159)
	S174= IR.Out31_26=0                                         IR-Out(S159)
	S175= IR.Out25_6=code                                       IR-Out(S159)
	S176= IR.Out5_0=12                                          IR-Out(S159)
	S177= PIDReg.Out=pid                                        PIDReg-Out(S165)
	S178= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S165)
	S179= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S165)
	S180= CtrlASIDIn=0                                          Premise(F83)
	S181= CtrlCP0=0                                             Premise(F84)
	S182= CP0[ASID]=pid                                         CP0-Hold(S145,S181)
	S183= CP0[EPC]=addr+4                                       CP0-Hold(S146,S181)
	S184= CP0[ExCode]=5'h08                                     CP0-Hold(S147,S181)
	S185= CtrlEPCIn=0                                           Premise(F85)
	S186= CtrlExCodeIn=0                                        Premise(F86)
	S187= CtrlIMMU=0                                            Premise(F87)
	S188= CtrlPC=0                                              Premise(F88)
	S189= CtrlPCInc=0                                           Premise(F89)
	S190= PC[CIA]=addr                                          PC-Hold(S153,S189)
	S191= CtrlIAddrReg=0                                        Premise(F90)
	S192= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S155,S191)
	S193= CtrlICache=0                                          Premise(F91)
	S194= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S157,S193)
	S195= CtrlIR=0                                              Premise(F92)
	S196= [IR]={0,code,12}                                      IR-Hold(S159,S195)
	S197= CtrlICacheReg=0                                       Premise(F93)
	S198= CtrlIMem=0                                            Premise(F94)
	S199= IMem[{pid,addr}]={0,code,12}                          IMem-Hold(S162,S198)
	S200= CtrlIRMux=0                                           Premise(F95)
	S201= CtrlPIDReg=0                                          Premise(F96)
	S202= [PIDReg]=pid                                          PIDReg-Hold(S165,S201)

MEM(DMMU1)	S203= CP0.ASID=pid                                          CP0-Read-ASID(S182)
	S204= CP0.EPC=addr+4                                        CP0-Read-EPC(S183)
	S205= PC.CIA=addr                                           PC-Out(S190)
	S206= PC.CIA31_28=addr[31:28]                               PC-Out(S190)
	S207= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S192)
	S208= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S192)
	S209= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S192)
	S210= IR.Out={0,code,12}                                    IR-Out(S196)
	S211= IR.Out31_26=0                                         IR-Out(S196)
	S212= IR.Out25_6=code                                       IR-Out(S196)
	S213= IR.Out5_0=12                                          IR-Out(S196)
	S214= PIDReg.Out=pid                                        PIDReg-Out(S202)
	S215= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S202)
	S216= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S202)
	S217= CtrlASIDIn=0                                          Premise(F97)
	S218= CtrlCP0=0                                             Premise(F98)
	S219= CP0[ASID]=pid                                         CP0-Hold(S182,S218)
	S220= CP0[EPC]=addr+4                                       CP0-Hold(S183,S218)
	S221= CP0[ExCode]=5'h08                                     CP0-Hold(S184,S218)
	S222= CtrlEPCIn=0                                           Premise(F99)
	S223= CtrlExCodeIn=0                                        Premise(F100)
	S224= CtrlIMMU=0                                            Premise(F101)
	S225= CtrlPC=0                                              Premise(F102)
	S226= CtrlPCInc=0                                           Premise(F103)
	S227= PC[CIA]=addr                                          PC-Hold(S190,S226)
	S228= CtrlIAddrReg=0                                        Premise(F104)
	S229= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S192,S228)
	S230= CtrlICache=0                                          Premise(F105)
	S231= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S194,S230)
	S232= CtrlIR=0                                              Premise(F106)
	S233= [IR]={0,code,12}                                      IR-Hold(S196,S232)
	S234= CtrlICacheReg=0                                       Premise(F107)
	S235= CtrlIMem=0                                            Premise(F108)
	S236= IMem[{pid,addr}]={0,code,12}                          IMem-Hold(S199,S235)
	S237= CtrlIRMux=0                                           Premise(F109)
	S238= CtrlPIDReg=0                                          Premise(F110)
	S239= [PIDReg]=pid                                          PIDReg-Hold(S202,S238)

MEM(DMMU2)	S240= CP0.ASID=pid                                          CP0-Read-ASID(S219)
	S241= CP0.EPC=addr+4                                        CP0-Read-EPC(S220)
	S242= PC.CIA=addr                                           PC-Out(S227)
	S243= PC.CIA31_28=addr[31:28]                               PC-Out(S227)
	S244= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S229)
	S245= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S229)
	S246= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S229)
	S247= IR.Out={0,code,12}                                    IR-Out(S233)
	S248= IR.Out31_26=0                                         IR-Out(S233)
	S249= IR.Out25_6=code                                       IR-Out(S233)
	S250= IR.Out5_0=12                                          IR-Out(S233)
	S251= PIDReg.Out=pid                                        PIDReg-Out(S239)
	S252= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S239)
	S253= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S239)
	S254= CtrlASIDIn=0                                          Premise(F111)
	S255= CtrlCP0=0                                             Premise(F112)
	S256= CP0[ASID]=pid                                         CP0-Hold(S219,S255)
	S257= CP0[EPC]=addr+4                                       CP0-Hold(S220,S255)
	S258= CP0[ExCode]=5'h08                                     CP0-Hold(S221,S255)
	S259= CtrlEPCIn=0                                           Premise(F113)
	S260= CtrlExCodeIn=0                                        Premise(F114)
	S261= CtrlIMMU=0                                            Premise(F115)
	S262= CtrlPC=0                                              Premise(F116)
	S263= CtrlPCInc=0                                           Premise(F117)
	S264= PC[CIA]=addr                                          PC-Hold(S227,S263)
	S265= CtrlIAddrReg=0                                        Premise(F118)
	S266= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S229,S265)
	S267= CtrlICache=0                                          Premise(F119)
	S268= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S231,S267)
	S269= CtrlIR=0                                              Premise(F120)
	S270= [IR]={0,code,12}                                      IR-Hold(S233,S269)
	S271= CtrlICacheReg=0                                       Premise(F121)
	S272= CtrlIMem=0                                            Premise(F122)
	S273= IMem[{pid,addr}]={0,code,12}                          IMem-Hold(S236,S272)
	S274= CtrlIRMux=0                                           Premise(F123)
	S275= CtrlPIDReg=0                                          Premise(F124)
	S276= [PIDReg]=pid                                          PIDReg-Hold(S239,S275)

WB	S277= CP0.ASID=pid                                          CP0-Read-ASID(S256)
	S278= CP0.EPC=addr+4                                        CP0-Read-EPC(S257)
	S279= PC.CIA=addr                                           PC-Out(S264)
	S280= PC.CIA31_28=addr[31:28]                               PC-Out(S264)
	S281= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S266)
	S282= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S266)
	S283= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S266)
	S284= IR.Out={0,code,12}                                    IR-Out(S270)
	S285= IR.Out31_26=0                                         IR-Out(S270)
	S286= IR.Out25_6=code                                       IR-Out(S270)
	S287= IR.Out5_0=12                                          IR-Out(S270)
	S288= PIDReg.Out=pid                                        PIDReg-Out(S276)
	S289= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S276)
	S290= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S276)
	S291= CtrlASIDIn=0                                          Premise(F125)
	S292= CtrlCP0=0                                             Premise(F126)
	S293= CP0[ASID]=pid                                         CP0-Hold(S256,S292)
	S294= CP0[EPC]=addr+4                                       CP0-Hold(S257,S292)
	S295= CP0[ExCode]=5'h08                                     CP0-Hold(S258,S292)
	S296= CtrlEPCIn=0                                           Premise(F127)
	S297= CtrlExCodeIn=0                                        Premise(F128)
	S298= CtrlIMMU=0                                            Premise(F129)
	S299= CtrlPC=0                                              Premise(F130)
	S300= CtrlPCInc=0                                           Premise(F131)
	S301= PC[CIA]=addr                                          PC-Hold(S264,S300)
	S302= CtrlIAddrReg=0                                        Premise(F132)
	S303= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S266,S302)
	S304= CtrlICache=0                                          Premise(F133)
	S305= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S268,S304)
	S306= CtrlIR=0                                              Premise(F134)
	S307= [IR]={0,code,12}                                      IR-Hold(S270,S306)
	S308= CtrlICacheReg=0                                       Premise(F135)
	S309= CtrlIMem=0                                            Premise(F136)
	S310= IMem[{pid,addr}]={0,code,12}                          IMem-Hold(S273,S309)
	S311= CtrlIRMux=0                                           Premise(F137)
	S312= CtrlPIDReg=0                                          Premise(F138)
	S313= [PIDReg]=pid                                          PIDReg-Hold(S276,S312)

POST	S293= CP0[ASID]=pid                                         CP0-Hold(S256,S292)
	S294= CP0[EPC]=addr+4                                       CP0-Hold(S257,S292)
	S295= CP0[ExCode]=5'h08                                     CP0-Hold(S258,S292)
	S301= PC[CIA]=addr                                          PC-Hold(S264,S300)
	S303= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S266,S302)
	S305= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S268,S304)
	S307= [IR]={0,code,12}                                      IR-Hold(S270,S306)
	S310= IMem[{pid,addr}]={0,code,12}                          IMem-Hold(S273,S309)
	S313= [PIDReg]=pid                                          PIDReg-Hold(S276,S312)

