
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,code,12}                            Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= PC.Out=>IMem.RAddr                                      Premise(F3)
	S6= IMem.RAddr=addr                                         Path(S4,S5)
	S7= CP0.ASID=>IMem.ASID                                     Premise(F4)
	S8= IMem.ASID=pid                                           Path(S3,S7)
	S9= IMem.Out={0,code,12}                                    IMem-Read(S8,S6,S2)
	S10= IMem.Out=>FU.IR_IF                                     Premise(F5)
	S11= FU.IR_IF={0,code,12}                                   Path(S9,S10)
	S12= IMem.Out=>IR_ID.In                                     Premise(F6)
	S13= IR_ID.In={0,code,12}                                   Path(S9,S12)
	S14= FU.Halt_IF=>CU_IF.Halt                                 Premise(F7)
	S15= FU.Bub_IF=>CU_IF.Bub                                   Premise(F8)
	S16= IR_ID.Out=>FU.IR_ID                                    Premise(F9)
	S17= IR_ID.Out31_26=>CU_ID.Op                               Premise(F10)
	S18= IR_ID.Out5_0=>CU_ID.IRFunc                             Premise(F11)
	S19= PC.Out=>CP0.EPCIn                                      Premise(F12)
	S20= CP0.EPCIn=addr                                         Path(S4,S19)
	S21= CU_ID.TrapAddr=>PC.In                                  Premise(F13)
	S22= CP0.ASID=>PIDReg.In                                    Premise(F14)
	S23= PIDReg.In=pid                                          Path(S3,S22)
	S24= IR_ID.Out=>IR_EX.In                                    Premise(F15)
	S25= FU.Halt_ID=>CU_ID.Halt                                 Premise(F16)
	S26= FU.Bub_ID=>CU_ID.Bub                                   Premise(F17)
	S27= IR_EX.Out=>FU.IR_EX                                    Premise(F18)
	S28= IR_EX.Out31_26=>CU_EX.Op                               Premise(F19)
	S29= IR_EX.Out5_0=>CU_EX.IRFunc                             Premise(F20)
	S30= IR_EX.Out=>IR_MEM.In                                   Premise(F21)
	S31= IR_MEM.Out=>FU.IR_MEM                                  Premise(F22)
	S32= IR_MEM.Out31_26=>CU_MEM.Op                             Premise(F23)
	S33= IR_MEM.Out5_0=>CU_MEM.IRFunc                           Premise(F24)
	S34= IR_MEM.Out=>IR_WB.In                                   Premise(F25)
	S35= IR_WB.Out=>FU.IR_WB                                    Premise(F26)
	S36= IR_WB.Out31_26=>CU_WB.Op                               Premise(F27)
	S37= IR_WB.Out5_0=>CU_WB.IRFunc                             Premise(F28)
	S38= CtrlPC=0                                               Premise(F29)
	S39= CtrlPCInc=1                                            Premise(F30)
	S40= PC[Out]=addr+4                                         PC-Inc(S1,S38,S39)
	S41= PC[CIA]=addr                                           PC-Inc(S1,S38,S39)
	S42= CtrlIMem=0                                             Premise(F31)
	S43= IMem[{pid,addr}]={0,code,12}                           IMem-Hold(S2,S42)
	S44= CtrlASIDIn=0                                           Premise(F32)
	S45= CtrlCP0=0                                              Premise(F33)
	S46= CP0[ASID]=pid                                          CP0-Hold(S0,S45)
	S47= CtrlEPCIn=0                                            Premise(F34)
	S48= CtrlExCodeIn=0                                         Premise(F35)
	S49= CtrlIR_ID=1                                            Premise(F36)
	S50= [IR_ID]={0,code,12}                                    IR_ID-Write(S13,S49)
	S51= CtrlPIDReg=0                                           Premise(F37)
	S52= CtrlIR_EX=0                                            Premise(F38)
	S53= CtrlIR_MEM=0                                           Premise(F39)
	S54= CtrlIR_WB=0                                            Premise(F40)

ID	S55= PC.Out=addr+4                                          PC-Out(S40)
	S56= PC.CIA=addr                                            PC-Out(S41)
	S57= PC.CIA31_28=addr[31:28]                                PC-Out(S41)
	S58= CP0.ASID=pid                                           CP0-Read-ASID(S46)
	S59= IR_ID.Out={0,code,12}                                  IR-Out(S50)
	S60= IR_ID.Out31_26=0                                       IR-Out(S50)
	S61= IR_ID.Out25_6=code                                     IR-Out(S50)
	S62= IR_ID.Out5_0=12                                        IR-Out(S50)
	S63= PC.Out=>IMem.RAddr                                     Premise(F41)
	S64= IMem.RAddr=addr+4                                      Path(S55,S63)
	S65= CP0.ASID=>IMem.ASID                                    Premise(F42)
	S66= IMem.ASID=pid                                          Path(S58,S65)
	S67= IMem.Out=>FU.IR_IF                                     Premise(F43)
	S68= IMem.Out=>IR_ID.In                                     Premise(F44)
	S69= FU.Halt_IF=>CU_IF.Halt                                 Premise(F45)
	S70= FU.Bub_IF=>CU_IF.Bub                                   Premise(F46)
	S71= IR_ID.Out=>FU.IR_ID                                    Premise(F47)
	S72= FU.IR_ID={0,code,12}                                   Path(S59,S71)
	S73= IR_ID.Out31_26=>CU_ID.Op                               Premise(F48)
	S74= CU_ID.Op=0                                             Path(S60,S73)
	S75= IR_ID.Out5_0=>CU_ID.IRFunc                             Premise(F49)
	S76= CU_ID.IRFunc=12                                        Path(S62,S75)
	S77= PC.Out=>CP0.EPCIn                                      Premise(F50)
	S78= CP0.EPCIn=addr+4                                       Path(S55,S77)
	S79= CP0.ExCodeIn=5'h08                                     Premise(F51)
	S80= CU_ID.TrapAddr=>PC.In                                  Premise(F52)
	S81= CP0.ASID=>PIDReg.In                                    Premise(F53)
	S82= PIDReg.In=pid                                          Path(S58,S81)
	S83= IR_ID.Out=>IR_EX.In                                    Premise(F54)
	S84= IR_EX.In={0,code,12}                                   Path(S59,S83)
	S85= FU.Halt_ID=>CU_ID.Halt                                 Premise(F55)
	S86= FU.Bub_ID=>CU_ID.Bub                                   Premise(F56)
	S87= FU.InID1_RReg=5'b00000                                 Premise(F57)
	S88= FU.InID2_RReg=5'b00000                                 Premise(F58)
	S89= IR_EX.Out=>FU.IR_EX                                    Premise(F59)
	S90= IR_EX.Out31_26=>CU_EX.Op                               Premise(F60)
	S91= IR_EX.Out5_0=>CU_EX.IRFunc                             Premise(F61)
	S92= IR_EX.Out=>IR_MEM.In                                   Premise(F62)
	S93= IR_MEM.Out=>FU.IR_MEM                                  Premise(F63)
	S94= IR_MEM.Out31_26=>CU_MEM.Op                             Premise(F64)
	S95= IR_MEM.Out5_0=>CU_MEM.IRFunc                           Premise(F65)
	S96= IR_MEM.Out=>IR_WB.In                                   Premise(F66)
	S97= IR_WB.Out=>FU.IR_WB                                    Premise(F67)
	S98= IR_WB.Out31_26=>CU_WB.Op                               Premise(F68)
	S99= IR_WB.Out5_0=>CU_WB.IRFunc                             Premise(F69)
	S100= CtrlPC=1                                              Premise(F70)
	S101= CtrlPCInc=0                                           Premise(F71)
	S102= PC[CIA]=addr                                          PC-Hold(S41,S101)
	S103= CtrlIMem=0                                            Premise(F72)
	S104= IMem[{pid,addr}]={0,code,12}                          IMem-Hold(S43,S103)
	S105= CtrlASIDIn=0                                          Premise(F73)
	S106= CtrlCP0=0                                             Premise(F74)
	S107= CP0[ASID]=pid                                         CP0-Hold(S46,S106)
	S108= CtrlEPCIn=1                                           Premise(F75)
	S109= CP0[EPC]=addr+4                                       CP0-Write-EPC(S78,S108)
	S110= CtrlExCodeIn=1                                        Premise(F76)
	S111= CP0[ExCode]=5'h08                                     CP0-Write-ExCode(S79,S110)
	S112= CtrlIR_ID=0                                           Premise(F77)
	S113= [IR_ID]={0,code,12}                                   IR_ID-Hold(S50,S112)
	S114= CtrlPIDReg=1                                          Premise(F78)
	S115= [PIDReg]=pid                                          PIDReg-Write(S82,S114)
	S116= CtrlIR_EX=1                                           Premise(F79)
	S117= [IR_EX]={0,code,12}                                   IR_EX-Write(S84,S116)
	S118= CtrlIR_MEM=0                                          Premise(F80)
	S119= CtrlIR_WB=0                                           Premise(F81)

EX	S120= PC.CIA=addr                                           PC-Out(S102)
	S121= PC.CIA31_28=addr[31:28]                               PC-Out(S102)
	S122= CP0.ASID=pid                                          CP0-Read-ASID(S107)
	S123= CP0.EPC=addr+4                                        CP0-Read-EPC(S109)
	S124= IR_ID.Out={0,code,12}                                 IR-Out(S113)
	S125= IR_ID.Out31_26=0                                      IR-Out(S113)
	S126= IR_ID.Out25_6=code                                    IR-Out(S113)
	S127= IR_ID.Out5_0=12                                       IR-Out(S113)
	S128= PIDReg.Out=pid                                        PIDReg-Out(S115)
	S129= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S115)
	S130= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S115)
	S131= IR_EX.Out={0,code,12}                                 IR_EX-Out(S117)
	S132= IR_EX.Out31_26=0                                      IR_EX-Out(S117)
	S133= IR_EX.Out25_6=code                                    IR_EX-Out(S117)
	S134= IR_EX.Out5_0=12                                       IR_EX-Out(S117)
	S135= PC.Out=>IMem.RAddr                                    Premise(F82)
	S136= CP0.ASID=>IMem.ASID                                   Premise(F83)
	S137= IMem.ASID=pid                                         Path(S122,S136)
	S138= IMem.Out=>FU.IR_IF                                    Premise(F84)
	S139= IMem.Out=>IR_ID.In                                    Premise(F85)
	S140= FU.Halt_IF=>CU_IF.Halt                                Premise(F86)
	S141= FU.Bub_IF=>CU_IF.Bub                                  Premise(F87)
	S142= IR_ID.Out=>FU.IR_ID                                   Premise(F88)
	S143= FU.IR_ID={0,code,12}                                  Path(S124,S142)
	S144= IR_ID.Out31_26=>CU_ID.Op                              Premise(F89)
	S145= CU_ID.Op=0                                            Path(S125,S144)
	S146= IR_ID.Out5_0=>CU_ID.IRFunc                            Premise(F90)
	S147= CU_ID.IRFunc=12                                       Path(S127,S146)
	S148= PC.Out=>CP0.EPCIn                                     Premise(F91)
	S149= CU_ID.TrapAddr=>PC.In                                 Premise(F92)
	S150= CP0.ASID=>PIDReg.In                                   Premise(F93)
	S151= PIDReg.In=pid                                         Path(S122,S150)
	S152= IR_ID.Out=>IR_EX.In                                   Premise(F94)
	S153= IR_EX.In={0,code,12}                                  Path(S124,S152)
	S154= FU.Halt_ID=>CU_ID.Halt                                Premise(F95)
	S155= FU.Bub_ID=>CU_ID.Bub                                  Premise(F96)
	S156= IR_EX.Out=>FU.IR_EX                                   Premise(F97)
	S157= FU.IR_EX={0,code,12}                                  Path(S131,S156)
	S158= IR_EX.Out31_26=>CU_EX.Op                              Premise(F98)
	S159= CU_EX.Op=0                                            Path(S132,S158)
	S160= IR_EX.Out5_0=>CU_EX.IRFunc                            Premise(F99)
	S161= CU_EX.IRFunc=12                                       Path(S134,S160)
	S162= IR_EX.Out=>IR_MEM.In                                  Premise(F100)
	S163= IR_MEM.In={0,code,12}                                 Path(S131,S162)
	S164= FU.InEX_WReg=5'b00000                                 Premise(F101)
	S165= IR_MEM.Out=>FU.IR_MEM                                 Premise(F102)
	S166= IR_MEM.Out31_26=>CU_MEM.Op                            Premise(F103)
	S167= IR_MEM.Out5_0=>CU_MEM.IRFunc                          Premise(F104)
	S168= IR_MEM.Out=>IR_WB.In                                  Premise(F105)
	S169= IR_WB.Out=>FU.IR_WB                                   Premise(F106)
	S170= IR_WB.Out31_26=>CU_WB.Op                              Premise(F107)
	S171= IR_WB.Out5_0=>CU_WB.IRFunc                            Premise(F108)
	S172= CtrlPC=0                                              Premise(F109)
	S173= CtrlPCInc=0                                           Premise(F110)
	S174= PC[CIA]=addr                                          PC-Hold(S102,S173)
	S175= CtrlIMem=0                                            Premise(F111)
	S176= IMem[{pid,addr}]={0,code,12}                          IMem-Hold(S104,S175)
	S177= CtrlASIDIn=0                                          Premise(F112)
	S178= CtrlCP0=0                                             Premise(F113)
	S179= CP0[ASID]=pid                                         CP0-Hold(S107,S178)
	S180= CP0[EPC]=addr+4                                       CP0-Hold(S109,S178)
	S181= CP0[ExCode]=5'h08                                     CP0-Hold(S111,S178)
	S182= CtrlEPCIn=0                                           Premise(F114)
	S183= CtrlExCodeIn=0                                        Premise(F115)
	S184= CtrlIR_ID=0                                           Premise(F116)
	S185= [IR_ID]={0,code,12}                                   IR_ID-Hold(S113,S184)
	S186= CtrlPIDReg=0                                          Premise(F117)
	S187= [PIDReg]=pid                                          PIDReg-Hold(S115,S186)
	S188= CtrlIR_EX=0                                           Premise(F118)
	S189= [IR_EX]={0,code,12}                                   IR_EX-Hold(S117,S188)
	S190= CtrlIR_MEM=1                                          Premise(F119)
	S191= [IR_MEM]={0,code,12}                                  IR_MEM-Write(S163,S190)
	S192= CtrlIR_WB=0                                           Premise(F120)

MEM	S193= PC.CIA=addr                                           PC-Out(S174)
	S194= PC.CIA31_28=addr[31:28]                               PC-Out(S174)
	S195= CP0.ASID=pid                                          CP0-Read-ASID(S179)
	S196= CP0.EPC=addr+4                                        CP0-Read-EPC(S180)
	S197= IR_ID.Out={0,code,12}                                 IR-Out(S185)
	S198= IR_ID.Out31_26=0                                      IR-Out(S185)
	S199= IR_ID.Out25_6=code                                    IR-Out(S185)
	S200= IR_ID.Out5_0=12                                       IR-Out(S185)
	S201= PIDReg.Out=pid                                        PIDReg-Out(S187)
	S202= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S187)
	S203= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S187)
	S204= IR_EX.Out={0,code,12}                                 IR_EX-Out(S189)
	S205= IR_EX.Out31_26=0                                      IR_EX-Out(S189)
	S206= IR_EX.Out25_6=code                                    IR_EX-Out(S189)
	S207= IR_EX.Out5_0=12                                       IR_EX-Out(S189)
	S208= IR_MEM.Out={0,code,12}                                IR_MEM-Out(S191)
	S209= IR_MEM.Out31_26=0                                     IR_MEM-Out(S191)
	S210= IR_MEM.Out25_6=code                                   IR_MEM-Out(S191)
	S211= IR_MEM.Out5_0=12                                      IR_MEM-Out(S191)
	S212= PC.Out=>IMem.RAddr                                    Premise(F121)
	S213= CP0.ASID=>IMem.ASID                                   Premise(F122)
	S214= IMem.ASID=pid                                         Path(S195,S213)
	S215= IMem.Out=>FU.IR_IF                                    Premise(F123)
	S216= IMem.Out=>IR_ID.In                                    Premise(F124)
	S217= FU.Halt_IF=>CU_IF.Halt                                Premise(F125)
	S218= FU.Bub_IF=>CU_IF.Bub                                  Premise(F126)
	S219= IR_ID.Out=>FU.IR_ID                                   Premise(F127)
	S220= FU.IR_ID={0,code,12}                                  Path(S197,S219)
	S221= IR_ID.Out31_26=>CU_ID.Op                              Premise(F128)
	S222= CU_ID.Op=0                                            Path(S198,S221)
	S223= IR_ID.Out5_0=>CU_ID.IRFunc                            Premise(F129)
	S224= CU_ID.IRFunc=12                                       Path(S200,S223)
	S225= PC.Out=>CP0.EPCIn                                     Premise(F130)
	S226= CU_ID.TrapAddr=>PC.In                                 Premise(F131)
	S227= CP0.ASID=>PIDReg.In                                   Premise(F132)
	S228= PIDReg.In=pid                                         Path(S195,S227)
	S229= IR_ID.Out=>IR_EX.In                                   Premise(F133)
	S230= IR_EX.In={0,code,12}                                  Path(S197,S229)
	S231= FU.Halt_ID=>CU_ID.Halt                                Premise(F134)
	S232= FU.Bub_ID=>CU_ID.Bub                                  Premise(F135)
	S233= IR_EX.Out=>FU.IR_EX                                   Premise(F136)
	S234= FU.IR_EX={0,code,12}                                  Path(S204,S233)
	S235= IR_EX.Out31_26=>CU_EX.Op                              Premise(F137)
	S236= CU_EX.Op=0                                            Path(S205,S235)
	S237= IR_EX.Out5_0=>CU_EX.IRFunc                            Premise(F138)
	S238= CU_EX.IRFunc=12                                       Path(S207,S237)
	S239= IR_EX.Out=>IR_MEM.In                                  Premise(F139)
	S240= IR_MEM.In={0,code,12}                                 Path(S204,S239)
	S241= IR_MEM.Out=>FU.IR_MEM                                 Premise(F140)
	S242= FU.IR_MEM={0,code,12}                                 Path(S208,S241)
	S243= IR_MEM.Out31_26=>CU_MEM.Op                            Premise(F141)
	S244= CU_MEM.Op=0                                           Path(S209,S243)
	S245= IR_MEM.Out5_0=>CU_MEM.IRFunc                          Premise(F142)
	S246= CU_MEM.IRFunc=12                                      Path(S211,S245)
	S247= IR_MEM.Out=>IR_WB.In                                  Premise(F143)
	S248= IR_WB.In={0,code,12}                                  Path(S208,S247)
	S249= FU.InMEM_WReg=5'b00000                                Premise(F144)
	S250= IR_WB.Out=>FU.IR_WB                                   Premise(F145)
	S251= IR_WB.Out31_26=>CU_WB.Op                              Premise(F146)
	S252= IR_WB.Out5_0=>CU_WB.IRFunc                            Premise(F147)
	S253= CtrlPC=0                                              Premise(F148)
	S254= CtrlPCInc=0                                           Premise(F149)
	S255= PC[CIA]=addr                                          PC-Hold(S174,S254)
	S256= CtrlIMem=0                                            Premise(F150)
	S257= IMem[{pid,addr}]={0,code,12}                          IMem-Hold(S176,S256)
	S258= CtrlASIDIn=0                                          Premise(F151)
	S259= CtrlCP0=0                                             Premise(F152)
	S260= CP0[ASID]=pid                                         CP0-Hold(S179,S259)
	S261= CP0[EPC]=addr+4                                       CP0-Hold(S180,S259)
	S262= CP0[ExCode]=5'h08                                     CP0-Hold(S181,S259)
	S263= CtrlEPCIn=0                                           Premise(F153)
	S264= CtrlExCodeIn=0                                        Premise(F154)
	S265= CtrlIR_ID=0                                           Premise(F155)
	S266= [IR_ID]={0,code,12}                                   IR_ID-Hold(S185,S265)
	S267= CtrlPIDReg=0                                          Premise(F156)
	S268= [PIDReg]=pid                                          PIDReg-Hold(S187,S267)
	S269= CtrlIR_EX=0                                           Premise(F157)
	S270= [IR_EX]={0,code,12}                                   IR_EX-Hold(S189,S269)
	S271= CtrlIR_MEM=0                                          Premise(F158)
	S272= [IR_MEM]={0,code,12}                                  IR_MEM-Hold(S191,S271)
	S273= CtrlIR_WB=1                                           Premise(F159)
	S274= [IR_WB]={0,code,12}                                   IR_WB-Write(S248,S273)

WB	S275= PC.CIA=addr                                           PC-Out(S255)
	S276= PC.CIA31_28=addr[31:28]                               PC-Out(S255)
	S277= CP0.ASID=pid                                          CP0-Read-ASID(S260)
	S278= CP0.EPC=addr+4                                        CP0-Read-EPC(S261)
	S279= IR_ID.Out={0,code,12}                                 IR-Out(S266)
	S280= IR_ID.Out31_26=0                                      IR-Out(S266)
	S281= IR_ID.Out25_6=code                                    IR-Out(S266)
	S282= IR_ID.Out5_0=12                                       IR-Out(S266)
	S283= PIDReg.Out=pid                                        PIDReg-Out(S268)
	S284= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S268)
	S285= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S268)
	S286= IR_EX.Out={0,code,12}                                 IR_EX-Out(S270)
	S287= IR_EX.Out31_26=0                                      IR_EX-Out(S270)
	S288= IR_EX.Out25_6=code                                    IR_EX-Out(S270)
	S289= IR_EX.Out5_0=12                                       IR_EX-Out(S270)
	S290= IR_MEM.Out={0,code,12}                                IR_MEM-Out(S272)
	S291= IR_MEM.Out31_26=0                                     IR_MEM-Out(S272)
	S292= IR_MEM.Out25_6=code                                   IR_MEM-Out(S272)
	S293= IR_MEM.Out5_0=12                                      IR_MEM-Out(S272)
	S294= IR_WB.Out={0,code,12}                                 IR-Out(S274)
	S295= IR_WB.Out31_26=0                                      IR-Out(S274)
	S296= IR_WB.Out25_6=code                                    IR-Out(S274)
	S297= IR_WB.Out5_0=12                                       IR-Out(S274)
	S298= PC.Out=>IMem.RAddr                                    Premise(F160)
	S299= CP0.ASID=>IMem.ASID                                   Premise(F161)
	S300= IMem.ASID=pid                                         Path(S277,S299)
	S301= IMem.Out=>FU.IR_IF                                    Premise(F162)
	S302= IMem.Out=>IR_ID.In                                    Premise(F163)
	S303= FU.Halt_IF=>CU_IF.Halt                                Premise(F164)
	S304= FU.Bub_IF=>CU_IF.Bub                                  Premise(F165)
	S305= IR_ID.Out=>FU.IR_ID                                   Premise(F166)
	S306= FU.IR_ID={0,code,12}                                  Path(S279,S305)
	S307= IR_ID.Out31_26=>CU_ID.Op                              Premise(F167)
	S308= CU_ID.Op=0                                            Path(S280,S307)
	S309= IR_ID.Out5_0=>CU_ID.IRFunc                            Premise(F168)
	S310= CU_ID.IRFunc=12                                       Path(S282,S309)
	S311= PC.Out=>CP0.EPCIn                                     Premise(F169)
	S312= CU_ID.TrapAddr=>PC.In                                 Premise(F170)
	S313= CP0.ASID=>PIDReg.In                                   Premise(F171)
	S314= PIDReg.In=pid                                         Path(S277,S313)
	S315= IR_ID.Out=>IR_EX.In                                   Premise(F172)
	S316= IR_EX.In={0,code,12}                                  Path(S279,S315)
	S317= FU.Halt_ID=>CU_ID.Halt                                Premise(F173)
	S318= FU.Bub_ID=>CU_ID.Bub                                  Premise(F174)
	S319= IR_EX.Out=>FU.IR_EX                                   Premise(F175)
	S320= FU.IR_EX={0,code,12}                                  Path(S286,S319)
	S321= IR_EX.Out31_26=>CU_EX.Op                              Premise(F176)
	S322= CU_EX.Op=0                                            Path(S287,S321)
	S323= IR_EX.Out5_0=>CU_EX.IRFunc                            Premise(F177)
	S324= CU_EX.IRFunc=12                                       Path(S289,S323)
	S325= IR_EX.Out=>IR_MEM.In                                  Premise(F178)
	S326= IR_MEM.In={0,code,12}                                 Path(S286,S325)
	S327= IR_MEM.Out=>FU.IR_MEM                                 Premise(F179)
	S328= FU.IR_MEM={0,code,12}                                 Path(S290,S327)
	S329= IR_MEM.Out31_26=>CU_MEM.Op                            Premise(F180)
	S330= CU_MEM.Op=0                                           Path(S291,S329)
	S331= IR_MEM.Out5_0=>CU_MEM.IRFunc                          Premise(F181)
	S332= CU_MEM.IRFunc=12                                      Path(S293,S331)
	S333= IR_MEM.Out=>IR_WB.In                                  Premise(F182)
	S334= IR_WB.In={0,code,12}                                  Path(S290,S333)
	S335= IR_WB.Out=>FU.IR_WB                                   Premise(F183)
	S336= FU.IR_WB={0,code,12}                                  Path(S294,S335)
	S337= IR_WB.Out31_26=>CU_WB.Op                              Premise(F184)
	S338= CU_WB.Op=0                                            Path(S295,S337)
	S339= IR_WB.Out5_0=>CU_WB.IRFunc                            Premise(F185)
	S340= CU_WB.IRFunc=12                                       Path(S297,S339)
	S341= FU.InWB_WReg=5'b00000                                 Premise(F186)
	S342= CtrlPC=0                                              Premise(F187)
	S343= CtrlPCInc=0                                           Premise(F188)
	S344= PC[CIA]=addr                                          PC-Hold(S255,S343)
	S345= CtrlIMem=0                                            Premise(F189)
	S346= IMem[{pid,addr}]={0,code,12}                          IMem-Hold(S257,S345)
	S347= CtrlASIDIn=0                                          Premise(F190)
	S348= CtrlCP0=0                                             Premise(F191)
	S349= CP0[ASID]=pid                                         CP0-Hold(S260,S348)
	S350= CP0[EPC]=addr+4                                       CP0-Hold(S261,S348)
	S351= CP0[ExCode]=5'h08                                     CP0-Hold(S262,S348)
	S352= CtrlEPCIn=0                                           Premise(F192)
	S353= CtrlExCodeIn=0                                        Premise(F193)
	S354= CtrlIR_ID=0                                           Premise(F194)
	S355= [IR_ID]={0,code,12}                                   IR_ID-Hold(S266,S354)
	S356= CtrlPIDReg=0                                          Premise(F195)
	S357= [PIDReg]=pid                                          PIDReg-Hold(S268,S356)
	S358= CtrlIR_EX=0                                           Premise(F196)
	S359= [IR_EX]={0,code,12}                                   IR_EX-Hold(S270,S358)
	S360= CtrlIR_MEM=0                                          Premise(F197)
	S361= [IR_MEM]={0,code,12}                                  IR_MEM-Hold(S272,S360)
	S362= CtrlIR_WB=0                                           Premise(F198)
	S363= [IR_WB]={0,code,12}                                   IR_WB-Hold(S274,S362)

POST	S344= PC[CIA]=addr                                          PC-Hold(S255,S343)
	S346= IMem[{pid,addr}]={0,code,12}                          IMem-Hold(S257,S345)
	S349= CP0[ASID]=pid                                         CP0-Hold(S260,S348)
	S350= CP0[EPC]=addr+4                                       CP0-Hold(S261,S348)
	S351= CP0[ExCode]=5'h08                                     CP0-Hold(S262,S348)
	S355= [IR_ID]={0,code,12}                                   IR_ID-Hold(S266,S354)
	S357= [PIDReg]=pid                                          PIDReg-Hold(S268,S356)
	S359= [IR_EX]={0,code,12}                                   IR_EX-Hold(S270,S358)
	S361= [IR_MEM]={0,code,12}                                  IR_MEM-Hold(S272,S360)
	S363= [IR_WB]={0,code,12}                                   IR_WB-Hold(S274,S362)

