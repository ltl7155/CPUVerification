
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,cc,0,0,rD,0,1}                   Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= CP0.ASID=>IMMU.PID                                      Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S7,S9)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S13= IAddrReg.In={pid,addr}                                 Path(S10,S12)
	S14= IMMU.Hit=>CU.IMMUHit                                   Premise(F7)
	S15= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S11,S14)
	S16= PC.Out=>ICache.IEA                                     Premise(F8)
	S17= ICache.IEA=addr                                        Path(S5,S16)
	S18= ICache.Hit=ICacheHit(addr)                             ICache-Search(S17)
	S19= ICache.Out=>IR.In                                      Premise(F9)
	S20= ICache.Out=>ICacheReg.In                               Premise(F10)
	S21= ICache.Hit=>CU.ICacheHit                               Premise(F11)
	S22= CU.ICacheHit=ICacheHit(addr)                           Path(S18,S21)
	S23= CtrlASIDIn=0                                           Premise(F12)
	S24= CtrlCP0=0                                              Premise(F13)
	S25= CP0[ASID]=pid                                          CP0-Hold(S0,S24)
	S26= CtrlEPCIn=0                                            Premise(F14)
	S27= CtrlExCodeIn=0                                         Premise(F15)
	S28= CtrlIMMU=0                                             Premise(F16)
	S29= CtrlPC=0                                               Premise(F17)
	S30= CtrlPCInc=0                                            Premise(F18)
	S31= PC[Out]=addr                                           PC-Hold(S1,S29,S30)
	S32= CtrlIAddrReg=1                                         Premise(F19)
	S33= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S32)
	S34= CtrlICache=0                                           Premise(F20)
	S35= CtrlIR=0                                               Premise(F21)
	S36= CtrlICacheReg=1                                        Premise(F22)
	S37= CtrlIMem=0                                             Premise(F23)
	S38= IMem[{pid,addr}]={0,rS,cc,0,0,rD,0,1}                  IMem-Hold(S2,S37)
	S39= CtrlIRMux=0                                            Premise(F24)
	S40= CtrlGPR=0                                              Premise(F25)
	S41= GPR[rS]=a                                              GPR-Hold(S3,S40)
	S42= CtrlA=0                                                Premise(F26)
	S43= CtrlCP1=0                                              Premise(F27)
	S44= CtrlConditionReg=0                                     Premise(F28)

IF(IMMU)	S45= CP0.ASID=pid                                           CP0-Read-ASID(S25)
	S46= PC.Out=addr                                            PC-Out(S31)
	S47= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S33)
	S48= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S33)
	S49= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S33)
	S50= CU.IMMUHit=>CU.IMMUHit                                 Premise(F29)
	S51= CU.ICacheHit=>CU.ICacheHit                             Premise(F30)
	S52= IAddrReg.Out=>IMem.RAddr                               Premise(F31)
	S53= IMem.RAddr={pid,addr}                                  Path(S47,S52)
	S54= IMem.Out={0,rS,cc,0,0,rD,0,1}                          IMem-Read(S53,S38)
	S55= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S53,S38)
	S56= IMem.Out=>IRMux.MemData                                Premise(F32)
	S57= IRMux.MemData={0,rS,cc,0,0,rD,0,1}                     Path(S54,S56)
	S58= IRMux.Out={0,rS,cc,0,0,rD,0,1}                         IRMux-Select2(S57)
	S59= ICacheReg.Out=>IRMux.CacheData                         Premise(F33)
	S60= CU.IMMUHit=>IRMux.MemSel                               Premise(F34)
	S61= CU.ICacheHit=>IRMux.CacheSel                           Premise(F35)
	S62= IRMux.Out=>IR.In                                       Premise(F36)
	S63= IR.In={0,rS,cc,0,0,rD,0,1}                             Path(S58,S62)
	S64= IMem.MEM8WordOut=>ICache.WData                         Premise(F37)
	S65= ICache.WData=IMemGet8Word({pid,addr})                  Path(S55,S64)
	S66= PC.Out=>ICache.IEA                                     Premise(F38)
	S67= ICache.IEA=addr                                        Path(S46,S66)
	S68= ICache.Hit=ICacheHit(addr)                             ICache-Search(S67)
	S69= CtrlASIDIn=0                                           Premise(F39)
	S70= CtrlCP0=0                                              Premise(F40)
	S71= CP0[ASID]=pid                                          CP0-Hold(S25,S70)
	S72= CtrlEPCIn=0                                            Premise(F41)
	S73= CtrlExCodeIn=0                                         Premise(F42)
	S74= CtrlIMMU=0                                             Premise(F43)
	S75= CtrlPC=0                                               Premise(F44)
	S76= CtrlPCInc=1                                            Premise(F45)
	S77= PC[Out]=addr+4                                         PC-Inc(S31,S75,S76)
	S78= PC[CIA]=addr                                           PC-Inc(S31,S75,S76)
	S79= CtrlIAddrReg=0                                         Premise(F46)
	S80= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S33,S79)
	S81= CtrlICache=1                                           Premise(F47)
	S82= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S67,S65,S81)
	S83= CtrlIR=1                                               Premise(F48)
	S84= [IR]={0,rS,cc,0,0,rD,0,1}                              IR-Write(S63,S83)
	S85= CtrlICacheReg=0                                        Premise(F49)
	S86= CtrlIMem=0                                             Premise(F50)
	S87= IMem[{pid,addr}]={0,rS,cc,0,0,rD,0,1}                  IMem-Hold(S38,S86)
	S88= CtrlIRMux=0                                            Premise(F51)
	S89= CtrlGPR=0                                              Premise(F52)
	S90= GPR[rS]=a                                              GPR-Hold(S41,S89)
	S91= CtrlA=0                                                Premise(F53)
	S92= CtrlCP1=0                                              Premise(F54)
	S93= CtrlConditionReg=0                                     Premise(F55)

ID	S94= CP0.ASID=pid                                           CP0-Read-ASID(S71)
	S95= PC.Out=addr+4                                          PC-Out(S77)
	S96= PC.CIA=addr                                            PC-Out(S78)
	S97= PC.CIA31_28=addr[31:28]                                PC-Out(S78)
	S98= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S80)
	S99= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S80)
	S100= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S80)
	S101= IR.Out={0,rS,cc,0,0,rD,0,1}                           IR-Out(S84)
	S102= IR.Out31_26=0                                         IR-Out(S84)
	S103= IR.Out25_21=rS                                        IR-Out(S84)
	S104= IR.Out20_18=cc                                        IR-Out(S84)
	S105= IR.Out17=0                                            IR-Out(S84)
	S106= IR.Out16=0                                            IR-Out(S84)
	S107= IR.Out15_11=rD                                        IR-Out(S84)
	S108= IR.Out10_6=0                                          IR-Out(S84)
	S109= IR.Out5_0=1                                           IR-Out(S84)
	S110= IR.Out31_26=>CU.Op                                    Premise(F56)
	S111= CU.Op=0                                               Path(S102,S110)
	S112= IR.Out25_21=>GPR.RReg1                                Premise(F57)
	S113= GPR.RReg1=rS                                          Path(S103,S112)
	S114= GPR.Rdata1=a                                          GPR-Read(S113,S90)
	S115= IR.Out5_0=>CU.IRFunc                                  Premise(F58)
	S116= CU.IRFunc=1                                           Path(S109,S115)
	S117= GPR.Rdata1=>A.In                                      Premise(F59)
	S118= A.In=a                                                Path(S114,S117)
	S119= CtrlASIDIn=0                                          Premise(F60)
	S120= CtrlCP0=0                                             Premise(F61)
	S121= CP0[ASID]=pid                                         CP0-Hold(S71,S120)
	S122= CtrlEPCIn=0                                           Premise(F62)
	S123= CtrlExCodeIn=0                                        Premise(F63)
	S124= CtrlIMMU=0                                            Premise(F64)
	S125= CtrlPC=0                                              Premise(F65)
	S126= CtrlPCInc=0                                           Premise(F66)
	S127= PC[CIA]=addr                                          PC-Hold(S78,S126)
	S128= PC[Out]=addr+4                                        PC-Hold(S77,S125,S126)
	S129= CtrlIAddrReg=0                                        Premise(F67)
	S130= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S80,S129)
	S131= CtrlICache=0                                          Premise(F68)
	S132= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S82,S131)
	S133= CtrlIR=0                                              Premise(F69)
	S134= [IR]={0,rS,cc,0,0,rD,0,1}                             IR-Hold(S84,S133)
	S135= CtrlICacheReg=0                                       Premise(F70)
	S136= CtrlIMem=0                                            Premise(F71)
	S137= IMem[{pid,addr}]={0,rS,cc,0,0,rD,0,1}                 IMem-Hold(S87,S136)
	S138= CtrlIRMux=0                                           Premise(F72)
	S139= CtrlGPR=0                                             Premise(F73)
	S140= GPR[rS]=a                                             GPR-Hold(S90,S139)
	S141= CtrlA=1                                               Premise(F74)
	S142= [A]=a                                                 A-Write(S118,S141)
	S143= CtrlCP1=0                                             Premise(F75)
	S144= CtrlConditionReg=0                                    Premise(F76)

EX	S145= CP0.ASID=pid                                          CP0-Read-ASID(S121)
	S146= PC.CIA=addr                                           PC-Out(S127)
	S147= PC.CIA31_28=addr[31:28]                               PC-Out(S127)
	S148= PC.Out=addr+4                                         PC-Out(S128)
	S149= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S130)
	S150= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S130)
	S151= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S130)
	S152= IR.Out={0,rS,cc,0,0,rD,0,1}                           IR-Out(S134)
	S153= IR.Out31_26=0                                         IR-Out(S134)
	S154= IR.Out25_21=rS                                        IR-Out(S134)
	S155= IR.Out20_18=cc                                        IR-Out(S134)
	S156= IR.Out17=0                                            IR-Out(S134)
	S157= IR.Out16=0                                            IR-Out(S134)
	S158= IR.Out15_11=rD                                        IR-Out(S134)
	S159= IR.Out10_6=0                                          IR-Out(S134)
	S160= IR.Out5_0=1                                           IR-Out(S134)
	S161= A.Out=a                                               A-Out(S142)
	S162= A.Out1_0={a}[1:0]                                     A-Out(S142)
	S163= A.Out4_0={a}[4:0]                                     A-Out(S142)
	S164= IR.Out20_18=>CP1.cc                                   Premise(F77)
	S165= CP1.cc=cc                                             Path(S155,S164)
	S166= IR.Out16=>CP1.tf                                      Premise(F78)
	S167= CP1.tf=0                                              Path(S157,S166)
	S168= CP1.fp=FPConditionCode(cc,0)                          FP-PRODUCT(S165,S167)
	S169= CP1.fp=>ConditionReg.In                               Premise(F79)
	S170= ConditionReg.In=FPConditionCode(cc,0)                 Path(S168,S169)
	S171= CtrlASIDIn=0                                          Premise(F80)
	S172= CtrlCP0=0                                             Premise(F81)
	S173= CP0[ASID]=pid                                         CP0-Hold(S121,S172)
	S174= CtrlEPCIn=0                                           Premise(F82)
	S175= CtrlExCodeIn=0                                        Premise(F83)
	S176= CtrlIMMU=0                                            Premise(F84)
	S177= CtrlPC=0                                              Premise(F85)
	S178= CtrlPCInc=0                                           Premise(F86)
	S179= PC[CIA]=addr                                          PC-Hold(S127,S178)
	S180= PC[Out]=addr+4                                        PC-Hold(S128,S177,S178)
	S181= CtrlIAddrReg=0                                        Premise(F87)
	S182= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S130,S181)
	S183= CtrlICache=0                                          Premise(F88)
	S184= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S132,S183)
	S185= CtrlIR=0                                              Premise(F89)
	S186= [IR]={0,rS,cc,0,0,rD,0,1}                             IR-Hold(S134,S185)
	S187= CtrlICacheReg=0                                       Premise(F90)
	S188= CtrlIMem=0                                            Premise(F91)
	S189= IMem[{pid,addr}]={0,rS,cc,0,0,rD,0,1}                 IMem-Hold(S137,S188)
	S190= CtrlIRMux=0                                           Premise(F92)
	S191= CtrlGPR=0                                             Premise(F93)
	S192= GPR[rS]=a                                             GPR-Hold(S140,S191)
	S193= CtrlA=0                                               Premise(F94)
	S194= [A]=a                                                 A-Hold(S142,S193)
	S195= CtrlCP1=0                                             Premise(F95)
	S196= CtrlConditionReg=1                                    Premise(F96)
	S197= [ConditionReg]=FPConditionCode(cc,0)                  ConditionReg-Write(S170,S196)

MEM	S198= CP0.ASID=pid                                          CP0-Read-ASID(S173)
	S199= PC.CIA=addr                                           PC-Out(S179)
	S200= PC.CIA31_28=addr[31:28]                               PC-Out(S179)
	S201= PC.Out=addr+4                                         PC-Out(S180)
	S202= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S182)
	S203= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S182)
	S204= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S182)
	S205= IR.Out={0,rS,cc,0,0,rD,0,1}                           IR-Out(S186)
	S206= IR.Out31_26=0                                         IR-Out(S186)
	S207= IR.Out25_21=rS                                        IR-Out(S186)
	S208= IR.Out20_18=cc                                        IR-Out(S186)
	S209= IR.Out17=0                                            IR-Out(S186)
	S210= IR.Out16=0                                            IR-Out(S186)
	S211= IR.Out15_11=rD                                        IR-Out(S186)
	S212= IR.Out10_6=0                                          IR-Out(S186)
	S213= IR.Out5_0=1                                           IR-Out(S186)
	S214= A.Out=a                                               A-Out(S194)
	S215= A.Out1_0={a}[1:0]                                     A-Out(S194)
	S216= A.Out4_0={a}[4:0]                                     A-Out(S194)
	S217= ConditionReg.Out=FPConditionCode(cc,0)                ConditionReg-Out(S197)
	S218= ConditionReg.Out1_0={FPConditionCode(cc,0)}[1:0]      ConditionReg-Out(S197)
	S219= ConditionReg.Out4_0={FPConditionCode(cc,0)}[4:0]      ConditionReg-Out(S197)
	S220= CtrlASIDIn=0                                          Premise(F97)
	S221= CtrlCP0=0                                             Premise(F98)
	S222= CP0[ASID]=pid                                         CP0-Hold(S173,S221)
	S223= CtrlEPCIn=0                                           Premise(F99)
	S224= CtrlExCodeIn=0                                        Premise(F100)
	S225= CtrlIMMU=0                                            Premise(F101)
	S226= CtrlPC=0                                              Premise(F102)
	S227= CtrlPCInc=0                                           Premise(F103)
	S228= PC[CIA]=addr                                          PC-Hold(S179,S227)
	S229= PC[Out]=addr+4                                        PC-Hold(S180,S226,S227)
	S230= CtrlIAddrReg=0                                        Premise(F104)
	S231= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S182,S230)
	S232= CtrlICache=0                                          Premise(F105)
	S233= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S184,S232)
	S234= CtrlIR=0                                              Premise(F106)
	S235= [IR]={0,rS,cc,0,0,rD,0,1}                             IR-Hold(S186,S234)
	S236= CtrlICacheReg=0                                       Premise(F107)
	S237= CtrlIMem=0                                            Premise(F108)
	S238= IMem[{pid,addr}]={0,rS,cc,0,0,rD,0,1}                 IMem-Hold(S189,S237)
	S239= CtrlIRMux=0                                           Premise(F109)
	S240= CtrlGPR=0                                             Premise(F110)
	S241= GPR[rS]=a                                             GPR-Hold(S192,S240)
	S242= CtrlA=0                                               Premise(F111)
	S243= [A]=a                                                 A-Hold(S194,S242)
	S244= CtrlCP1=0                                             Premise(F112)
	S245= CtrlConditionReg=0                                    Premise(F113)
	S246= [ConditionReg]=FPConditionCode(cc,0)                  ConditionReg-Hold(S197,S245)

MEM(DMMU1)	S247= CP0.ASID=pid                                          CP0-Read-ASID(S222)
	S248= PC.CIA=addr                                           PC-Out(S228)
	S249= PC.CIA31_28=addr[31:28]                               PC-Out(S228)
	S250= PC.Out=addr+4                                         PC-Out(S229)
	S251= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S231)
	S252= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S231)
	S253= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S231)
	S254= IR.Out={0,rS,cc,0,0,rD,0,1}                           IR-Out(S235)
	S255= IR.Out31_26=0                                         IR-Out(S235)
	S256= IR.Out25_21=rS                                        IR-Out(S235)
	S257= IR.Out20_18=cc                                        IR-Out(S235)
	S258= IR.Out17=0                                            IR-Out(S235)
	S259= IR.Out16=0                                            IR-Out(S235)
	S260= IR.Out15_11=rD                                        IR-Out(S235)
	S261= IR.Out10_6=0                                          IR-Out(S235)
	S262= IR.Out5_0=1                                           IR-Out(S235)
	S263= A.Out=a                                               A-Out(S243)
	S264= A.Out1_0={a}[1:0]                                     A-Out(S243)
	S265= A.Out4_0={a}[4:0]                                     A-Out(S243)
	S266= ConditionReg.Out=FPConditionCode(cc,0)                ConditionReg-Out(S246)
	S267= ConditionReg.Out1_0={FPConditionCode(cc,0)}[1:0]      ConditionReg-Out(S246)
	S268= ConditionReg.Out4_0={FPConditionCode(cc,0)}[4:0]      ConditionReg-Out(S246)
	S269= CtrlASIDIn=0                                          Premise(F114)
	S270= CtrlCP0=0                                             Premise(F115)
	S271= CP0[ASID]=pid                                         CP0-Hold(S222,S270)
	S272= CtrlEPCIn=0                                           Premise(F116)
	S273= CtrlExCodeIn=0                                        Premise(F117)
	S274= CtrlIMMU=0                                            Premise(F118)
	S275= CtrlPC=0                                              Premise(F119)
	S276= CtrlPCInc=0                                           Premise(F120)
	S277= PC[CIA]=addr                                          PC-Hold(S228,S276)
	S278= PC[Out]=addr+4                                        PC-Hold(S229,S275,S276)
	S279= CtrlIAddrReg=0                                        Premise(F121)
	S280= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S231,S279)
	S281= CtrlICache=0                                          Premise(F122)
	S282= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S233,S281)
	S283= CtrlIR=0                                              Premise(F123)
	S284= [IR]={0,rS,cc,0,0,rD,0,1}                             IR-Hold(S235,S283)
	S285= CtrlICacheReg=0                                       Premise(F124)
	S286= CtrlIMem=0                                            Premise(F125)
	S287= IMem[{pid,addr}]={0,rS,cc,0,0,rD,0,1}                 IMem-Hold(S238,S286)
	S288= CtrlIRMux=0                                           Premise(F126)
	S289= CtrlGPR=0                                             Premise(F127)
	S290= GPR[rS]=a                                             GPR-Hold(S241,S289)
	S291= CtrlA=0                                               Premise(F128)
	S292= [A]=a                                                 A-Hold(S243,S291)
	S293= CtrlCP1=0                                             Premise(F129)
	S294= CtrlConditionReg=0                                    Premise(F130)
	S295= [ConditionReg]=FPConditionCode(cc,0)                  ConditionReg-Hold(S246,S294)

MEM(DMMU2)	S296= CP0.ASID=pid                                          CP0-Read-ASID(S271)
	S297= PC.CIA=addr                                           PC-Out(S277)
	S298= PC.CIA31_28=addr[31:28]                               PC-Out(S277)
	S299= PC.Out=addr+4                                         PC-Out(S278)
	S300= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S280)
	S301= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S280)
	S302= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S280)
	S303= IR.Out={0,rS,cc,0,0,rD,0,1}                           IR-Out(S284)
	S304= IR.Out31_26=0                                         IR-Out(S284)
	S305= IR.Out25_21=rS                                        IR-Out(S284)
	S306= IR.Out20_18=cc                                        IR-Out(S284)
	S307= IR.Out17=0                                            IR-Out(S284)
	S308= IR.Out16=0                                            IR-Out(S284)
	S309= IR.Out15_11=rD                                        IR-Out(S284)
	S310= IR.Out10_6=0                                          IR-Out(S284)
	S311= IR.Out5_0=1                                           IR-Out(S284)
	S312= A.Out=a                                               A-Out(S292)
	S313= A.Out1_0={a}[1:0]                                     A-Out(S292)
	S314= A.Out4_0={a}[4:0]                                     A-Out(S292)
	S315= ConditionReg.Out=FPConditionCode(cc,0)                ConditionReg-Out(S295)
	S316= ConditionReg.Out1_0={FPConditionCode(cc,0)}[1:0]      ConditionReg-Out(S295)
	S317= ConditionReg.Out4_0={FPConditionCode(cc,0)}[4:0]      ConditionReg-Out(S295)
	S318= CtrlASIDIn=0                                          Premise(F131)
	S319= CtrlCP0=0                                             Premise(F132)
	S320= CP0[ASID]=pid                                         CP0-Hold(S271,S319)
	S321= CtrlEPCIn=0                                           Premise(F133)
	S322= CtrlExCodeIn=0                                        Premise(F134)
	S323= CtrlIMMU=0                                            Premise(F135)
	S324= CtrlPC=0                                              Premise(F136)
	S325= CtrlPCInc=0                                           Premise(F137)
	S326= PC[CIA]=addr                                          PC-Hold(S277,S325)
	S327= PC[Out]=addr+4                                        PC-Hold(S278,S324,S325)
	S328= CtrlIAddrReg=0                                        Premise(F138)
	S329= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S280,S328)
	S330= CtrlICache=0                                          Premise(F139)
	S331= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S282,S330)
	S332= CtrlIR=0                                              Premise(F140)
	S333= [IR]={0,rS,cc,0,0,rD,0,1}                             IR-Hold(S284,S332)
	S334= CtrlICacheReg=0                                       Premise(F141)
	S335= CtrlIMem=0                                            Premise(F142)
	S336= IMem[{pid,addr}]={0,rS,cc,0,0,rD,0,1}                 IMem-Hold(S287,S335)
	S337= CtrlIRMux=0                                           Premise(F143)
	S338= CtrlGPR=0                                             Premise(F144)
	S339= GPR[rS]=a                                             GPR-Hold(S290,S338)
	S340= CtrlA=0                                               Premise(F145)
	S341= [A]=a                                                 A-Hold(S292,S340)
	S342= CtrlCP1=0                                             Premise(F146)
	S343= CtrlConditionReg=0                                    Premise(F147)
	S344= [ConditionReg]=FPConditionCode(cc,0)                  ConditionReg-Hold(S295,S343)

WB	S345= CP0.ASID=pid                                          CP0-Read-ASID(S320)
	S346= PC.CIA=addr                                           PC-Out(S326)
	S347= PC.CIA31_28=addr[31:28]                               PC-Out(S326)
	S348= PC.Out=addr+4                                         PC-Out(S327)
	S349= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S329)
	S350= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S329)
	S351= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S329)
	S352= IR.Out={0,rS,cc,0,0,rD,0,1}                           IR-Out(S333)
	S353= IR.Out31_26=0                                         IR-Out(S333)
	S354= IR.Out25_21=rS                                        IR-Out(S333)
	S355= IR.Out20_18=cc                                        IR-Out(S333)
	S356= IR.Out17=0                                            IR-Out(S333)
	S357= IR.Out16=0                                            IR-Out(S333)
	S358= IR.Out15_11=rD                                        IR-Out(S333)
	S359= IR.Out10_6=0                                          IR-Out(S333)
	S360= IR.Out5_0=1                                           IR-Out(S333)
	S361= A.Out=a                                               A-Out(S341)
	S362= A.Out1_0={a}[1:0]                                     A-Out(S341)
	S363= A.Out4_0={a}[4:0]                                     A-Out(S341)
	S364= ConditionReg.Out=FPConditionCode(cc,0)                ConditionReg-Out(S344)
	S365= ConditionReg.Out1_0={FPConditionCode(cc,0)}[1:0]      ConditionReg-Out(S344)
	S366= ConditionReg.Out4_0={FPConditionCode(cc,0)}[4:0]      ConditionReg-Out(S344)
	S367= IR.Out15_11=>GPR.WReg                                 Premise(F148)
	S368= GPR.WReg=rD                                           Path(S358,S367)
	S369= A.Out=>GPR.WData                                      Premise(F149)
	S370= GPR.WData=a                                           Path(S361,S369)
	S371= ConditionReg.Out=>CU.fp                               Premise(F150)
	S372= CU.fp=FPConditionCode(cc,0)                           Path(S364,S371)
	S373= CtrlASIDIn=0                                          Premise(F151)
	S374= CtrlCP0=0                                             Premise(F152)
	S375= CP0[ASID]=pid                                         CP0-Hold(S320,S374)
	S376= CtrlEPCIn=0                                           Premise(F153)
	S377= CtrlExCodeIn=0                                        Premise(F154)
	S378= CtrlIMMU=0                                            Premise(F155)
	S379= CtrlPC=0                                              Premise(F156)
	S380= CtrlPCInc=0                                           Premise(F157)
	S381= PC[CIA]=addr                                          PC-Hold(S326,S380)
	S382= PC[Out]=addr+4                                        PC-Hold(S327,S379,S380)
	S383= CtrlIAddrReg=0                                        Premise(F158)
	S384= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S329,S383)
	S385= CtrlICache=0                                          Premise(F159)
	S386= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S331,S385)
	S387= CtrlIR=0                                              Premise(F160)
	S388= [IR]={0,rS,cc,0,0,rD,0,1}                             IR-Hold(S333,S387)
	S389= CtrlICacheReg=0                                       Premise(F161)
	S390= CtrlIMem=0                                            Premise(F162)
	S391= IMem[{pid,addr}]={0,rS,cc,0,0,rD,0,1}                 IMem-Hold(S336,S390)
	S392= CtrlIRMux=0                                           Premise(F163)
	S393= CtrlGPR=1                                             Premise(F164)
	S394= GPR[rD]=a                                             GPR-Write(S368,S370,S393)
	S395= CtrlA=0                                               Premise(F165)
	S396= [A]=a                                                 A-Hold(S341,S395)
	S397= CtrlCP1=0                                             Premise(F166)
	S398= CtrlConditionReg=0                                    Premise(F167)
	S399= [ConditionReg]=FPConditionCode(cc,0)                  ConditionReg-Hold(S344,S398)

POST	S375= CP0[ASID]=pid                                         CP0-Hold(S320,S374)
	S381= PC[CIA]=addr                                          PC-Hold(S326,S380)
	S382= PC[Out]=addr+4                                        PC-Hold(S327,S379,S380)
	S384= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S329,S383)
	S386= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S331,S385)
	S388= [IR]={0,rS,cc,0,0,rD,0,1}                             IR-Hold(S333,S387)
	S391= IMem[{pid,addr}]={0,rS,cc,0,0,rD,0,1}                 IMem-Hold(S336,S390)
	S394= GPR[rD]=a                                             GPR-Write(S368,S370,S393)
	S396= [A]=a                                                 A-Hold(S341,S395)
	S399= [ConditionReg]=FPConditionCode(cc,0)                  ConditionReg-Hold(S344,S398)

