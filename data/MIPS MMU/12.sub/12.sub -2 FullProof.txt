
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,rT,rD,0,34}                      Premise(F2)
	S3= ICache[addr]={0,rS,rT,rD,0,34}                          Premise(F3)
	S4= GPR[rS]=a                                               Premise(F4)
	S5= GPR[rT]=b                                               Premise(F5)

IF	S6= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S7= PC.Out=addr                                             PC-Out(S1)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F6)
	S9= IMMU.PID=pid                                            Path(S6,S8)
	S10= PC.Out=>IMMU.IEA                                       Premise(F7)
	S11= IMMU.IEA=addr                                          Path(S7,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S11)
	S13= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S9,S11)
	S14= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S15= IAddrReg.In={pid,addr}                                 Path(S12,S14)
	S16= IMMU.Hit=>CU.IMMUHit                                   Premise(F9)
	S17= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S13,S16)
	S18= PC.Out=>ICache.IEA                                     Premise(F10)
	S19= ICache.IEA=addr                                        Path(S7,S18)
	S20= ICache.Hit=ICacheHit(addr)                             ICache-Search(S19)
	S21= ICache.Out={0,rS,rT,rD,0,34}                           ICache-Search(S19,S3)
	S22= ICache.Out=>IR.In                                      Premise(F11)
	S23= IR.In={0,rS,rT,rD,0,34}                                Path(S21,S22)
	S24= ICache.Out=>ICacheReg.In                               Premise(F12)
	S25= ICacheReg.In={0,rS,rT,rD,0,34}                         Path(S21,S24)
	S26= ICache.Hit=>CU.ICacheHit                               Premise(F13)
	S27= CU.ICacheHit=ICacheHit(addr)                           Path(S20,S26)
	S28= CtrlASIDIn=0                                           Premise(F14)
	S29= CtrlCP0=0                                              Premise(F15)
	S30= CP0[ASID]=pid                                          CP0-Hold(S0,S29)
	S31= CtrlEPCIn=0                                            Premise(F16)
	S32= CtrlExCodeIn=0                                         Premise(F17)
	S33= CtrlIMMU=0                                             Premise(F18)
	S34= CtrlPC=0                                               Premise(F19)
	S35= CtrlPCInc=1                                            Premise(F20)
	S36= PC[Out]=addr+4                                         PC-Inc(S1,S34,S35)
	S37= PC[CIA]=addr                                           PC-Inc(S1,S34,S35)
	S38= CtrlIAddrReg=0                                         Premise(F21)
	S39= CtrlICache=0                                           Premise(F22)
	S40= ICache[addr]={0,rS,rT,rD,0,34}                         ICache-Hold(S3,S39)
	S41= CtrlIR=1                                               Premise(F23)
	S42= [IR]={0,rS,rT,rD,0,34}                                 IR-Write(S23,S41)
	S43= CtrlICacheReg=0                                        Premise(F24)
	S44= CtrlIMem=0                                             Premise(F25)
	S45= IMem[{pid,addr}]={0,rS,rT,rD,0,34}                     IMem-Hold(S2,S44)
	S46= CtrlIRMux=0                                            Premise(F26)
	S47= CtrlGPR=0                                              Premise(F27)
	S48= GPR[rS]=a                                              GPR-Hold(S4,S47)
	S49= GPR[rT]=b                                              GPR-Hold(S5,S47)
	S50= CtrlA=0                                                Premise(F28)
	S51= CtrlB=0                                                Premise(F29)
	S52= CtrlALUOut=0                                           Premise(F30)
	S53= CtrlOVReg=0                                            Premise(F31)

ID	S54= CP0.ASID=pid                                           CP0-Read-ASID(S30)
	S55= PC.Out=addr+4                                          PC-Out(S36)
	S56= PC.CIA=addr                                            PC-Out(S37)
	S57= PC.CIA31_28=addr[31:28]                                PC-Out(S37)
	S58= IR.Out={0,rS,rT,rD,0,34}                               IR-Out(S42)
	S59= IR.Out31_26=0                                          IR-Out(S42)
	S60= IR.Out25_21=rS                                         IR-Out(S42)
	S61= IR.Out20_16=rT                                         IR-Out(S42)
	S62= IR.Out15_11=rD                                         IR-Out(S42)
	S63= IR.Out10_6=0                                           IR-Out(S42)
	S64= IR.Out5_0=34                                           IR-Out(S42)
	S65= IR.Out31_26=>CU.Op                                     Premise(F50)
	S66= CU.Op=0                                                Path(S59,S65)
	S67= IR.Out25_21=>GPR.RReg1                                 Premise(F51)
	S68= GPR.RReg1=rS                                           Path(S60,S67)
	S69= GPR.Rdata1=a                                           GPR-Read(S68,S48)
	S70= IR.Out20_16=>GPR.RReg2                                 Premise(F52)
	S71= GPR.RReg2=rT                                           Path(S61,S70)
	S72= GPR.Rdata2=b                                           GPR-Read(S71,S49)
	S73= IR.Out5_0=>CU.IRFunc                                   Premise(F53)
	S74= CU.IRFunc=34                                           Path(S64,S73)
	S75= GPR.Rdata1=>A.In                                       Premise(F54)
	S76= A.In=a                                                 Path(S69,S75)
	S77= GPR.Rdata2=>B.In                                       Premise(F55)
	S78= B.In=b                                                 Path(S72,S77)
	S79= CtrlASIDIn=0                                           Premise(F56)
	S80= CtrlCP0=0                                              Premise(F57)
	S81= CP0[ASID]=pid                                          CP0-Hold(S30,S80)
	S82= CtrlEPCIn=0                                            Premise(F58)
	S83= CtrlExCodeIn=0                                         Premise(F59)
	S84= CtrlIMMU=0                                             Premise(F60)
	S85= CtrlPC=0                                               Premise(F61)
	S86= CtrlPCInc=0                                            Premise(F62)
	S87= PC[CIA]=addr                                           PC-Hold(S37,S86)
	S88= PC[Out]=addr+4                                         PC-Hold(S36,S85,S86)
	S89= CtrlIAddrReg=0                                         Premise(F63)
	S90= CtrlICache=0                                           Premise(F64)
	S91= ICache[addr]={0,rS,rT,rD,0,34}                         ICache-Hold(S40,S90)
	S92= CtrlIR=0                                               Premise(F65)
	S93= [IR]={0,rS,rT,rD,0,34}                                 IR-Hold(S42,S92)
	S94= CtrlICacheReg=0                                        Premise(F66)
	S95= CtrlIMem=0                                             Premise(F67)
	S96= IMem[{pid,addr}]={0,rS,rT,rD,0,34}                     IMem-Hold(S45,S95)
	S97= CtrlIRMux=0                                            Premise(F68)
	S98= CtrlGPR=0                                              Premise(F69)
	S99= GPR[rS]=a                                              GPR-Hold(S48,S98)
	S100= GPR[rT]=b                                             GPR-Hold(S49,S98)
	S101= CtrlA=1                                               Premise(F70)
	S102= [A]=a                                                 A-Write(S76,S101)
	S103= CtrlB=1                                               Premise(F71)
	S104= [B]=b                                                 B-Write(S78,S103)
	S105= CtrlALUOut=0                                          Premise(F72)
	S106= CtrlOVReg=0                                           Premise(F73)

EX	S107= CP0.ASID=pid                                          CP0-Read-ASID(S81)
	S108= PC.CIA=addr                                           PC-Out(S87)
	S109= PC.CIA31_28=addr[31:28]                               PC-Out(S87)
	S110= PC.Out=addr+4                                         PC-Out(S88)
	S111= IR.Out={0,rS,rT,rD,0,34}                              IR-Out(S93)
	S112= IR.Out31_26=0                                         IR-Out(S93)
	S113= IR.Out25_21=rS                                        IR-Out(S93)
	S114= IR.Out20_16=rT                                        IR-Out(S93)
	S115= IR.Out15_11=rD                                        IR-Out(S93)
	S116= IR.Out10_6=0                                          IR-Out(S93)
	S117= IR.Out5_0=34                                          IR-Out(S93)
	S118= A.Out=a                                               A-Out(S102)
	S119= A.Out1_0={a}[1:0]                                     A-Out(S102)
	S120= A.Out4_0={a}[4:0]                                     A-Out(S102)
	S121= B.Out=b                                               B-Out(S104)
	S122= B.Out1_0={b}[1:0]                                     B-Out(S104)
	S123= B.Out4_0={b}[4:0]                                     B-Out(S104)
	S124= A.Out=>ALU.A                                          Premise(F74)
	S125= ALU.A=a                                               Path(S118,S124)
	S126= B.Out=>ALU.B                                          Premise(F75)
	S127= ALU.B=b                                               Path(S121,S126)
	S128= ALU.Func=6'b000110                                    Premise(F76)
	S129= ALU.Out=b-a                                           ALU(S125,S127)
	S130= ALU.Out1_0={b-a}[1:0]                                 ALU(S125,S127)
	S131= ALU.CMP=Compare0(b-a)                                 ALU(S125,S127)
	S132= ALU.OV=OverFlow(b-a)                                  ALU(S125,S127)
	S133= ALU.CA=Carry(b-a)                                     ALU(S125,S127)
	S134= ALU.Out=>ALUOut.In                                    Premise(F77)
	S135= ALUOut.In=b-a                                         Path(S129,S134)
	S136= ALU.OV=>OVReg.In                                      Premise(F78)
	S137= OVReg.In=OverFlow(b-a)                                Path(S132,S136)
	S138= CtrlASIDIn=0                                          Premise(F79)
	S139= CtrlCP0=0                                             Premise(F80)
	S140= CP0[ASID]=pid                                         CP0-Hold(S81,S139)
	S141= CtrlEPCIn=0                                           Premise(F81)
	S142= CtrlExCodeIn=0                                        Premise(F82)
	S143= CtrlIMMU=0                                            Premise(F83)
	S144= CtrlPC=0                                              Premise(F84)
	S145= CtrlPCInc=0                                           Premise(F85)
	S146= PC[CIA]=addr                                          PC-Hold(S87,S145)
	S147= PC[Out]=addr+4                                        PC-Hold(S88,S144,S145)
	S148= CtrlIAddrReg=0                                        Premise(F86)
	S149= CtrlICache=0                                          Premise(F87)
	S150= ICache[addr]={0,rS,rT,rD,0,34}                        ICache-Hold(S91,S149)
	S151= CtrlIR=0                                              Premise(F88)
	S152= [IR]={0,rS,rT,rD,0,34}                                IR-Hold(S93,S151)
	S153= CtrlICacheReg=0                                       Premise(F89)
	S154= CtrlIMem=0                                            Premise(F90)
	S155= IMem[{pid,addr}]={0,rS,rT,rD,0,34}                    IMem-Hold(S96,S154)
	S156= CtrlIRMux=0                                           Premise(F91)
	S157= CtrlGPR=0                                             Premise(F92)
	S158= GPR[rS]=a                                             GPR-Hold(S99,S157)
	S159= GPR[rT]=b                                             GPR-Hold(S100,S157)
	S160= CtrlA=0                                               Premise(F93)
	S161= [A]=a                                                 A-Hold(S102,S160)
	S162= CtrlB=0                                               Premise(F94)
	S163= [B]=b                                                 B-Hold(S104,S162)
	S164= CtrlALUOut=1                                          Premise(F95)
	S165= [ALUOut]=b-a                                          ALUOut-Write(S135,S164)
	S166= CtrlOVReg=1                                           Premise(F96)
	S167= [OVReg]=OverFlow(b-a)                                 OVReg-Write(S137,S166)

MEM	S168= CP0.ASID=pid                                          CP0-Read-ASID(S140)
	S169= PC.CIA=addr                                           PC-Out(S146)
	S170= PC.CIA31_28=addr[31:28]                               PC-Out(S146)
	S171= PC.Out=addr+4                                         PC-Out(S147)
	S172= IR.Out={0,rS,rT,rD,0,34}                              IR-Out(S152)
	S173= IR.Out31_26=0                                         IR-Out(S152)
	S174= IR.Out25_21=rS                                        IR-Out(S152)
	S175= IR.Out20_16=rT                                        IR-Out(S152)
	S176= IR.Out15_11=rD                                        IR-Out(S152)
	S177= IR.Out10_6=0                                          IR-Out(S152)
	S178= IR.Out5_0=34                                          IR-Out(S152)
	S179= A.Out=a                                               A-Out(S161)
	S180= A.Out1_0={a}[1:0]                                     A-Out(S161)
	S181= A.Out4_0={a}[4:0]                                     A-Out(S161)
	S182= B.Out=b                                               B-Out(S163)
	S183= B.Out1_0={b}[1:0]                                     B-Out(S163)
	S184= B.Out4_0={b}[4:0]                                     B-Out(S163)
	S185= ALUOut.Out=b-a                                        ALUOut-Out(S165)
	S186= ALUOut.Out1_0={b-a}[1:0]                              ALUOut-Out(S165)
	S187= ALUOut.Out4_0={b-a}[4:0]                              ALUOut-Out(S165)
	S188= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S167)
	S189= OVReg.Out1_0={OverFlow(b-a)}[1:0]                     OVReg-Out(S167)
	S190= OVReg.Out4_0={OverFlow(b-a)}[4:0]                     OVReg-Out(S167)
	S191= CtrlASIDIn=0                                          Premise(F97)
	S192= CtrlCP0=0                                             Premise(F98)
	S193= CP0[ASID]=pid                                         CP0-Hold(S140,S192)
	S194= CtrlEPCIn=0                                           Premise(F99)
	S195= CtrlExCodeIn=0                                        Premise(F100)
	S196= CtrlIMMU=0                                            Premise(F101)
	S197= CtrlPC=0                                              Premise(F102)
	S198= CtrlPCInc=0                                           Premise(F103)
	S199= PC[CIA]=addr                                          PC-Hold(S146,S198)
	S200= PC[Out]=addr+4                                        PC-Hold(S147,S197,S198)
	S201= CtrlIAddrReg=0                                        Premise(F104)
	S202= CtrlICache=0                                          Premise(F105)
	S203= ICache[addr]={0,rS,rT,rD,0,34}                        ICache-Hold(S150,S202)
	S204= CtrlIR=0                                              Premise(F106)
	S205= [IR]={0,rS,rT,rD,0,34}                                IR-Hold(S152,S204)
	S206= CtrlICacheReg=0                                       Premise(F107)
	S207= CtrlIMem=0                                            Premise(F108)
	S208= IMem[{pid,addr}]={0,rS,rT,rD,0,34}                    IMem-Hold(S155,S207)
	S209= CtrlIRMux=0                                           Premise(F109)
	S210= CtrlGPR=0                                             Premise(F110)
	S211= GPR[rS]=a                                             GPR-Hold(S158,S210)
	S212= GPR[rT]=b                                             GPR-Hold(S159,S210)
	S213= CtrlA=0                                               Premise(F111)
	S214= [A]=a                                                 A-Hold(S161,S213)
	S215= CtrlB=0                                               Premise(F112)
	S216= [B]=b                                                 B-Hold(S163,S215)
	S217= CtrlALUOut=0                                          Premise(F113)
	S218= [ALUOut]=b-a                                          ALUOut-Hold(S165,S217)
	S219= CtrlOVReg=0                                           Premise(F114)
	S220= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S167,S219)

WB	S221= CP0.ASID=pid                                          CP0-Read-ASID(S193)
	S222= PC.CIA=addr                                           PC-Out(S199)
	S223= PC.CIA31_28=addr[31:28]                               PC-Out(S199)
	S224= PC.Out=addr+4                                         PC-Out(S200)
	S225= IR.Out={0,rS,rT,rD,0,34}                              IR-Out(S205)
	S226= IR.Out31_26=0                                         IR-Out(S205)
	S227= IR.Out25_21=rS                                        IR-Out(S205)
	S228= IR.Out20_16=rT                                        IR-Out(S205)
	S229= IR.Out15_11=rD                                        IR-Out(S205)
	S230= IR.Out10_6=0                                          IR-Out(S205)
	S231= IR.Out5_0=34                                          IR-Out(S205)
	S232= A.Out=a                                               A-Out(S214)
	S233= A.Out1_0={a}[1:0]                                     A-Out(S214)
	S234= A.Out4_0={a}[4:0]                                     A-Out(S214)
	S235= B.Out=b                                               B-Out(S216)
	S236= B.Out1_0={b}[1:0]                                     B-Out(S216)
	S237= B.Out4_0={b}[4:0]                                     B-Out(S216)
	S238= ALUOut.Out=b-a                                        ALUOut-Out(S218)
	S239= ALUOut.Out1_0={b-a}[1:0]                              ALUOut-Out(S218)
	S240= ALUOut.Out4_0={b-a}[4:0]                              ALUOut-Out(S218)
	S241= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S220)
	S242= OVReg.Out1_0={OverFlow(b-a)}[1:0]                     OVReg-Out(S220)
	S243= OVReg.Out4_0={OverFlow(b-a)}[4:0]                     OVReg-Out(S220)
	S244= IR.Out15_11=>GPR.WReg                                 Premise(F151)
	S245= GPR.WReg=rD                                           Path(S229,S244)
	S246= ALUOut.Out=>GPR.WData                                 Premise(F152)
	S247= GPR.WData=b-a                                         Path(S238,S246)
	S248= OVReg.Out=>CU.OV                                      Premise(F153)
	S249= CU.OV=OverFlow(b-a)                                   Path(S241,S248)
	S250= CtrlASIDIn=0                                          Premise(F154)
	S251= CtrlCP0=0                                             Premise(F155)
	S252= CP0[ASID]=pid                                         CP0-Hold(S193,S251)
	S253= CtrlEPCIn=0                                           Premise(F156)
	S254= CtrlExCodeIn=0                                        Premise(F157)
	S255= CtrlIMMU=0                                            Premise(F158)
	S256= CtrlPC=0                                              Premise(F159)
	S257= CtrlPCInc=0                                           Premise(F160)
	S258= PC[CIA]=addr                                          PC-Hold(S199,S257)
	S259= PC[Out]=addr+4                                        PC-Hold(S200,S256,S257)
	S260= CtrlIAddrReg=0                                        Premise(F161)
	S261= CtrlICache=0                                          Premise(F162)
	S262= ICache[addr]={0,rS,rT,rD,0,34}                        ICache-Hold(S203,S261)
	S263= CtrlIR=0                                              Premise(F163)
	S264= [IR]={0,rS,rT,rD,0,34}                                IR-Hold(S205,S263)
	S265= CtrlICacheReg=0                                       Premise(F164)
	S266= CtrlIMem=0                                            Premise(F165)
	S267= IMem[{pid,addr}]={0,rS,rT,rD,0,34}                    IMem-Hold(S208,S266)
	S268= CtrlIRMux=0                                           Premise(F166)
	S269= CtrlGPR=0                                             Premise(F167)
	S270= GPR[rS]=a                                             GPR-Hold(S211,S269)
	S271= GPR[rT]=b                                             GPR-Hold(S212,S269)
	S272= CtrlA=0                                               Premise(F168)
	S273= [A]=a                                                 A-Hold(S214,S272)
	S274= CtrlB=0                                               Premise(F169)
	S275= [B]=b                                                 B-Hold(S216,S274)
	S276= CtrlALUOut=0                                          Premise(F170)
	S277= [ALUOut]=b-a                                          ALUOut-Hold(S218,S276)
	S278= CtrlOVReg=0                                           Premise(F171)
	S279= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S220,S278)

POST	S252= CP0[ASID]=pid                                         CP0-Hold(S193,S251)
	S258= PC[CIA]=addr                                          PC-Hold(S199,S257)
	S259= PC[Out]=addr+4                                        PC-Hold(S200,S256,S257)
	S262= ICache[addr]={0,rS,rT,rD,0,34}                        ICache-Hold(S203,S261)
	S264= [IR]={0,rS,rT,rD,0,34}                                IR-Hold(S205,S263)
	S267= IMem[{pid,addr}]={0,rS,rT,rD,0,34}                    IMem-Hold(S208,S266)
	S270= GPR[rS]=a                                             GPR-Hold(S211,S269)
	S271= GPR[rT]=b                                             GPR-Hold(S212,S269)
	S273= [A]=a                                                 A-Hold(S214,S272)
	S275= [B]=b                                                 B-Hold(S216,S274)
	S277= [ALUOut]=b-a                                          ALUOut-Hold(S218,S276)
	S279= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S220,S278)

