
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={10,rS,rT,imm}                         Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={10,rS,rT,imm}                                IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR.In                                        Premise(F6)
	S12= IR.In={10,rS,rT,imm}                                   Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F7)
	S14= CtrlPCInc=1                                            Premise(F8)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= PC[CIA]=addr                                           PC-Inc(S1,S13,S14)
	S17= CtrlIMem=0                                             Premise(F9)
	S18= IMem[{pid,addr}]={10,rS,rT,imm}                        IMem-Hold(S2,S17)
	S19= CtrlASIDIn=0                                           Premise(F10)
	S20= CtrlCP0=0                                              Premise(F11)
	S21= CP0[ASID]=pid                                          CP0-Hold(S0,S20)
	S22= CtrlEPCIn=0                                            Premise(F12)
	S23= CtrlExCodeIn=0                                         Premise(F13)
	S24= CtrlIR=1                                               Premise(F14)
	S25= [IR]={10,rS,rT,imm}                                    IR-Write(S12,S24)
	S26= CtrlGPR=0                                              Premise(F15)
	S27= GPR[rS]=a                                              GPR-Hold(S3,S26)
	S28= CtrlA=0                                                Premise(F16)
	S29= CtrlB=0                                                Premise(F17)
	S30= CtrlALUOut=0                                           Premise(F18)

ID	S31= PC.Out=addr+4                                          PC-Out(S15)
	S32= PC.CIA=addr                                            PC-Out(S16)
	S33= PC.CIA31_28=addr[31:28]                                PC-Out(S16)
	S34= CP0.ASID=pid                                           CP0-Read-ASID(S21)
	S35= IR.Out={10,rS,rT,imm}                                  IR-Out(S25)
	S36= IR.Out31_26=10                                         IR-Out(S25)
	S37= IR.Out25_21=rS                                         IR-Out(S25)
	S38= IR.Out20_16=rT                                         IR-Out(S25)
	S39= IR.Out15_0=imm                                         IR-Out(S25)
	S40= IR.Out31_26=>CU.Op                                     Premise(F19)
	S41= CU.Op=10                                               Path(S36,S40)
	S42= CU.Func=cmpu_cmpu                                      CU(S41)
	S43= IR.Out25_21=>GPR.RReg1                                 Premise(F20)
	S44= GPR.RReg1=rS                                           Path(S37,S43)
	S45= GPR.Rdata1=a                                           GPR-Read(S44,S27)
	S46= IR.Out15_0=>IMMEXT.In                                  Premise(F21)
	S47= IMMEXT.In=imm                                          Path(S39,S46)
	S48= IMMEXT.Out={16{imm[15]},imm}                           IMMEXT(S47)
	S49= GPR.Rdata1=>A.In                                       Premise(F22)
	S50= A.In=a                                                 Path(S45,S49)
	S51= IMMEXT.Out=>B.In                                       Premise(F23)
	S52= B.In={16{imm[15]},imm}                                 Path(S48,S51)
	S53= CtrlPC=0                                               Premise(F24)
	S54= CtrlPCInc=0                                            Premise(F25)
	S55= PC[CIA]=addr                                           PC-Hold(S16,S54)
	S56= PC[Out]=addr+4                                         PC-Hold(S15,S53,S54)
	S57= CtrlIMem=0                                             Premise(F26)
	S58= IMem[{pid,addr}]={10,rS,rT,imm}                        IMem-Hold(S18,S57)
	S59= CtrlASIDIn=0                                           Premise(F27)
	S60= CtrlCP0=0                                              Premise(F28)
	S61= CP0[ASID]=pid                                          CP0-Hold(S21,S60)
	S62= CtrlEPCIn=0                                            Premise(F29)
	S63= CtrlExCodeIn=0                                         Premise(F30)
	S64= CtrlIR=0                                               Premise(F31)
	S65= [IR]={10,rS,rT,imm}                                    IR-Hold(S25,S64)
	S66= CtrlGPR=0                                              Premise(F32)
	S67= GPR[rS]=a                                              GPR-Hold(S27,S66)
	S68= CtrlA=1                                                Premise(F33)
	S69= [A]=a                                                  A-Write(S50,S68)
	S70= CtrlB=1                                                Premise(F34)
	S71= [B]={16{imm[15]},imm}                                  B-Write(S52,S70)
	S72= CtrlALUOut=0                                           Premise(F35)

EX	S73= PC.CIA=addr                                            PC-Out(S55)
	S74= PC.CIA31_28=addr[31:28]                                PC-Out(S55)
	S75= PC.Out=addr+4                                          PC-Out(S56)
	S76= CP0.ASID=pid                                           CP0-Read-ASID(S61)
	S77= IR.Out={10,rS,rT,imm}                                  IR-Out(S65)
	S78= IR.Out31_26=10                                         IR-Out(S65)
	S79= IR.Out25_21=rS                                         IR-Out(S65)
	S80= IR.Out20_16=rT                                         IR-Out(S65)
	S81= IR.Out15_0=imm                                         IR-Out(S65)
	S82= A.Out=a                                                A-Out(S69)
	S83= A.Out1_0={a}[1:0]                                      A-Out(S69)
	S84= A.Out4_0={a}[4:0]                                      A-Out(S69)
	S85= B.Out={16{imm[15]},imm}                                B-Out(S71)
	S86= B.Out1_0={{16{imm[15]},imm}}[1:0]                      B-Out(S71)
	S87= B.Out4_0={{16{imm[15]},imm}}[4:0]                      B-Out(S71)
	S88= A.Out=>ALU.A                                           Premise(F36)
	S89= ALU.A=a                                                Path(S82,S88)
	S90= B.Out=>ALU.B                                           Premise(F37)
	S91= ALU.B={16{imm[15]},imm}                                Path(S85,S90)
	S92= ALU.Func=6'b010111                                     Premise(F38)
	S93= ALU.Out={31{0},(a<{16{imm[15]},imm})}                  ALU(S89,S91)
	S94= ALU.Out1_0={{31{0},(a<{16{imm[15]},imm})}}[1:0]        ALU(S89,S91)
	S95= ALU.CMP=Compare0({31{0},(a<{16{imm[15]},imm})})        ALU(S89,S91)
	S96= ALU.OV=OverFlow({31{0},(a<{16{imm[15]},imm})})         ALU(S89,S91)
	S97= ALU.CA=Carry({31{0},(a<{16{imm[15]},imm})})            ALU(S89,S91)
	S98= ALU.Out=>ALUOut.In                                     Premise(F39)
	S99= ALUOut.In={31{0},(a<{16{imm[15]},imm})}                Path(S93,S98)
	S100= CtrlPC=0                                              Premise(F40)
	S101= CtrlPCInc=0                                           Premise(F41)
	S102= PC[CIA]=addr                                          PC-Hold(S55,S101)
	S103= PC[Out]=addr+4                                        PC-Hold(S56,S100,S101)
	S104= CtrlIMem=0                                            Premise(F42)
	S105= IMem[{pid,addr}]={10,rS,rT,imm}                       IMem-Hold(S58,S104)
	S106= CtrlASIDIn=0                                          Premise(F43)
	S107= CtrlCP0=0                                             Premise(F44)
	S108= CP0[ASID]=pid                                         CP0-Hold(S61,S107)
	S109= CtrlEPCIn=0                                           Premise(F45)
	S110= CtrlExCodeIn=0                                        Premise(F46)
	S111= CtrlIR=0                                              Premise(F47)
	S112= [IR]={10,rS,rT,imm}                                   IR-Hold(S65,S111)
	S113= CtrlGPR=0                                             Premise(F48)
	S114= GPR[rS]=a                                             GPR-Hold(S67,S113)
	S115= CtrlA=0                                               Premise(F49)
	S116= [A]=a                                                 A-Hold(S69,S115)
	S117= CtrlB=0                                               Premise(F50)
	S118= [B]={16{imm[15]},imm}                                 B-Hold(S71,S117)
	S119= CtrlALUOut=1                                          Premise(F51)
	S120= [ALUOut]={31{0},(a<{16{imm[15]},imm})}                ALUOut-Write(S99,S119)

MEM	S121= PC.CIA=addr                                           PC-Out(S102)
	S122= PC.CIA31_28=addr[31:28]                               PC-Out(S102)
	S123= PC.Out=addr+4                                         PC-Out(S103)
	S124= CP0.ASID=pid                                          CP0-Read-ASID(S108)
	S125= IR.Out={10,rS,rT,imm}                                 IR-Out(S112)
	S126= IR.Out31_26=10                                        IR-Out(S112)
	S127= IR.Out25_21=rS                                        IR-Out(S112)
	S128= IR.Out20_16=rT                                        IR-Out(S112)
	S129= IR.Out15_0=imm                                        IR-Out(S112)
	S130= A.Out=a                                               A-Out(S116)
	S131= A.Out1_0={a}[1:0]                                     A-Out(S116)
	S132= A.Out4_0={a}[4:0]                                     A-Out(S116)
	S133= B.Out={16{imm[15]},imm}                               B-Out(S118)
	S134= B.Out1_0={{16{imm[15]},imm}}[1:0]                     B-Out(S118)
	S135= B.Out4_0={{16{imm[15]},imm}}[4:0]                     B-Out(S118)
	S136= ALUOut.Out={31{0},(a<{16{imm[15]},imm})}              ALUOut-Out(S120)
	S137= ALUOut.Out1_0={{31{0},(a<{16{imm[15]},imm})}}[1:0]    ALUOut-Out(S120)
	S138= ALUOut.Out4_0={{31{0},(a<{16{imm[15]},imm})}}[4:0]    ALUOut-Out(S120)
	S139= CtrlPC=0                                              Premise(F52)
	S140= CtrlPCInc=0                                           Premise(F53)
	S141= PC[CIA]=addr                                          PC-Hold(S102,S140)
	S142= PC[Out]=addr+4                                        PC-Hold(S103,S139,S140)
	S143= CtrlIMem=0                                            Premise(F54)
	S144= IMem[{pid,addr}]={10,rS,rT,imm}                       IMem-Hold(S105,S143)
	S145= CtrlASIDIn=0                                          Premise(F55)
	S146= CtrlCP0=0                                             Premise(F56)
	S147= CP0[ASID]=pid                                         CP0-Hold(S108,S146)
	S148= CtrlEPCIn=0                                           Premise(F57)
	S149= CtrlExCodeIn=0                                        Premise(F58)
	S150= CtrlIR=0                                              Premise(F59)
	S151= [IR]={10,rS,rT,imm}                                   IR-Hold(S112,S150)
	S152= CtrlGPR=0                                             Premise(F60)
	S153= GPR[rS]=a                                             GPR-Hold(S114,S152)
	S154= CtrlA=0                                               Premise(F61)
	S155= [A]=a                                                 A-Hold(S116,S154)
	S156= CtrlB=0                                               Premise(F62)
	S157= [B]={16{imm[15]},imm}                                 B-Hold(S118,S156)
	S158= CtrlALUOut=0                                          Premise(F63)
	S159= [ALUOut]={31{0},(a<{16{imm[15]},imm})}                ALUOut-Hold(S120,S158)

WB	S160= PC.CIA=addr                                           PC-Out(S141)
	S161= PC.CIA31_28=addr[31:28]                               PC-Out(S141)
	S162= PC.Out=addr+4                                         PC-Out(S142)
	S163= CP0.ASID=pid                                          CP0-Read-ASID(S147)
	S164= IR.Out={10,rS,rT,imm}                                 IR-Out(S151)
	S165= IR.Out31_26=10                                        IR-Out(S151)
	S166= IR.Out25_21=rS                                        IR-Out(S151)
	S167= IR.Out20_16=rT                                        IR-Out(S151)
	S168= IR.Out15_0=imm                                        IR-Out(S151)
	S169= A.Out=a                                               A-Out(S155)
	S170= A.Out1_0={a}[1:0]                                     A-Out(S155)
	S171= A.Out4_0={a}[4:0]                                     A-Out(S155)
	S172= B.Out={16{imm[15]},imm}                               B-Out(S157)
	S173= B.Out1_0={{16{imm[15]},imm}}[1:0]                     B-Out(S157)
	S174= B.Out4_0={{16{imm[15]},imm}}[4:0]                     B-Out(S157)
	S175= ALUOut.Out={31{0},(a<{16{imm[15]},imm})}              ALUOut-Out(S159)
	S176= ALUOut.Out1_0={{31{0},(a<{16{imm[15]},imm})}}[1:0]    ALUOut-Out(S159)
	S177= ALUOut.Out4_0={{31{0},(a<{16{imm[15]},imm})}}[4:0]    ALUOut-Out(S159)
	S178= IR.Out20_16=>GPR.WReg                                 Premise(F64)
	S179= GPR.WReg=rT                                           Path(S167,S178)
	S180= ALUOut.Out=>GPR.WData                                 Premise(F65)
	S181= GPR.WData={31{0},(a<{16{imm[15]},imm})}               Path(S175,S180)
	S182= CtrlPC=0                                              Premise(F66)
	S183= CtrlPCInc=0                                           Premise(F67)
	S184= PC[CIA]=addr                                          PC-Hold(S141,S183)
	S185= PC[Out]=addr+4                                        PC-Hold(S142,S182,S183)
	S186= CtrlIMem=0                                            Premise(F68)
	S187= IMem[{pid,addr}]={10,rS,rT,imm}                       IMem-Hold(S144,S186)
	S188= CtrlASIDIn=0                                          Premise(F69)
	S189= CtrlCP0=0                                             Premise(F70)
	S190= CP0[ASID]=pid                                         CP0-Hold(S147,S189)
	S191= CtrlEPCIn=0                                           Premise(F71)
	S192= CtrlExCodeIn=0                                        Premise(F72)
	S193= CtrlIR=0                                              Premise(F73)
	S194= [IR]={10,rS,rT,imm}                                   IR-Hold(S151,S193)
	S195= CtrlGPR=1                                             Premise(F74)
	S196= GPR[rT]={31{0},(a<{16{imm[15]},imm})}                 GPR-Write(S179,S181,S195)
	S197= CtrlA=0                                               Premise(F75)
	S198= [A]=a                                                 A-Hold(S155,S197)
	S199= CtrlB=0                                               Premise(F76)
	S200= [B]={16{imm[15]},imm}                                 B-Hold(S157,S199)
	S201= CtrlALUOut=0                                          Premise(F77)
	S202= [ALUOut]={31{0},(a<{16{imm[15]},imm})}                ALUOut-Hold(S159,S201)

POST	S184= PC[CIA]=addr                                          PC-Hold(S141,S183)
	S185= PC[Out]=addr+4                                        PC-Hold(S142,S182,S183)
	S187= IMem[{pid,addr}]={10,rS,rT,imm}                       IMem-Hold(S144,S186)
	S190= CP0[ASID]=pid                                         CP0-Hold(S147,S189)
	S194= [IR]={10,rS,rT,imm}                                   IR-Hold(S151,S193)
	S196= GPR[rT]={31{0},(a<{16{imm[15]},imm})}                 GPR-Write(S179,S181,S195)
	S198= [A]=a                                                 A-Hold(S155,S197)
	S200= [B]={16{imm[15]},imm}                                 B-Hold(S157,S199)
	S202= [ALUOut]={31{0},(a<{16{imm[15]},imm})}                ALUOut-Hold(S159,S201)

