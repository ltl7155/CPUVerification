
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={11,rS,rT,imm}                         Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={11,rS,rT,imm}                                IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR_ID.In                                     Premise(F7)
	S12= IR_ID.In={11,rS,rT,imm}                                Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F40)
	S14= CtrlPCInc=1                                            Premise(F41)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR_ID=1                                            Premise(F47)
	S17= [IR_ID]={11,rS,rT,imm}                                 IR_ID-Write(S12,S16)
	S18= CtrlGPR=0                                              Premise(F48)
	S19= GPR[rS]=a                                              GPR-Hold(S3,S18)

ID	S20= IR_ID.Out={11,rS,rT,imm}                               IR-Out(S17)
	S21= IR_ID.Out25_21=rS                                      IR-Out(S17)
	S22= IR_ID.Out25_21=>GPR.RReg1                              Premise(F63)
	S23= GPR.RReg1=rS                                           Path(S21,S22)
	S24= GPR.Rdata1=a                                           GPR-Read(S23,S19)
	S25= GPR.Rdata1=>FU.InID1                                   Premise(F64)
	S26= FU.InID1=a                                             Path(S24,S25)
	S27= FU.OutID1=FU(a)                                        FU-Forward(S26)
	S28= FU.OutID1=>A_EX.In                                     Premise(F66)
	S29= A_EX.In=FU(a)                                          Path(S27,S28)
	S30= IR_ID.Out=>IR_EX.In                                    Premise(F67)
	S31= IR_EX.In={11,rS,rT,imm}                                Path(S20,S30)
	S32= CtrlPC=0                                               Premise(F92)
	S33= CtrlPCInc=0                                            Premise(F93)
	S34= PC[Out]=addr+4                                         PC-Hold(S15,S32,S33)
	S35= CtrlA_EX=1                                             Premise(F101)
	S36= [A_EX]=FU(a)                                           A_EX-Write(S29,S35)
	S37= CtrlIR_EX=1                                            Premise(F102)
	S38= [IR_EX]={11,rS,rT,imm}                                 IR_EX-Write(S31,S37)

EX	S39= A_EX.Out=FU(a)                                         A_EX-Out(S36)
	S40= IR_EX.Out={11,rS,rT,imm}                               IR_EX-Out(S38)
	S41= IR_EX.Out15_0=imm                                      IR_EX-Out(S38)
	S42= A_EX.Out=>ALU.A                                        Premise(F124)
	S43= ALU.A=FU(a)                                            Path(S39,S42)
	S44= IR_EX.Out15_0=>LIMMEXT.In                              Premise(F125)
	S45= LIMMEXT.In=imm                                         Path(S41,S44)
	S46= LIMMEXT.Out={16{0},imm}                                LIMMEXT(S45)
	S47= LIMMEXT.Out=>ALU.B                                     Premise(F126)
	S48= ALU.B={16{0},imm}                                      Path(S46,S47)
	S49= ALU.Out={31{0},(FU(a)<u{16{0},imm})}                   ALU(S43,S48)
	S50= ALU.Out=>ALUOut_MEM.In                                 Premise(F128)
	S51= ALUOut_MEM.In={31{0},(FU(a)<u{16{0},imm})}             Path(S49,S50)
	S52= IR_EX.Out=>IR_MEM.In                                   Premise(F131)
	S53= IR_MEM.In={11,rS,rT,imm}                               Path(S40,S52)
	S54= CtrlPC=0                                               Premise(F144)
	S55= CtrlPCInc=0                                            Premise(F145)
	S56= PC[Out]=addr+4                                         PC-Hold(S34,S54,S55)
	S57= CtrlALUOut_MEM=1                                       Premise(F155)
	S58= [ALUOut_MEM]={31{0},(FU(a)<u{16{0},imm})}              ALUOut_MEM-Write(S51,S57)
	S59= CtrlIR_MEM=1                                           Premise(F156)
	S60= [IR_MEM]={11,rS,rT,imm}                                IR_MEM-Write(S53,S59)

MEM	S61= ALUOut_MEM.Out={31{0},(FU(a)<u{16{0},imm})}            ALUOut_MEM-Out(S58)
	S62= IR_MEM.Out={11,rS,rT,imm}                              IR_MEM-Out(S60)
	S63= IR_MEM.Out=>IR_WB.In                                   Premise(F185)
	S64= IR_WB.In={11,rS,rT,imm}                                Path(S62,S63)
	S65= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F186)
	S66= ALUOut_WB.In={31{0},(FU(a)<u{16{0},imm})}              Path(S61,S65)
	S67= CtrlPC=0                                               Premise(F195)
	S68= CtrlPCInc=0                                            Premise(F196)
	S69= PC[Out]=addr+4                                         PC-Hold(S56,S67,S68)
	S70= CtrlIR_WB=1                                            Premise(F208)
	S71= [IR_WB]={11,rS,rT,imm}                                 IR_WB-Write(S64,S70)
	S72= CtrlALUOut_WB=1                                        Premise(F209)
	S73= [ALUOut_WB]={31{0},(FU(a)<u{16{0},imm})}               ALUOut_WB-Write(S66,S72)

WB	S74= IR_WB.Out20_16=rT                                      IR-Out(S71)
	S75= ALUOut_WB.Out={31{0},(FU(a)<u{16{0},imm})}             ALUOut_WB-Out(S73)
	S76= IR_WB.Out20_16=>GPR.WReg                               Premise(F242)
	S77= GPR.WReg=rT                                            Path(S74,S76)
	S78= ALUOut_WB.Out=>GPR.WData                               Premise(F243)
	S79= GPR.WData={31{0},(FU(a)<u{16{0},imm})}                 Path(S75,S78)
	S80= CtrlPC=0                                               Premise(F246)
	S81= CtrlPCInc=0                                            Premise(F247)
	S82= PC[Out]=addr+4                                         PC-Hold(S69,S80,S81)
	S83= CtrlGPR=1                                              Premise(F254)
	S84= GPR[rT]={31{0},(FU(a)<u{16{0},imm})}                   GPR-Write(S77,S79,S83)

POST	S82= PC[Out]=addr+4                                         PC-Hold(S69,S80,S81)
	S84= GPR[rT]={31{0},(FU(a)<u{16{0},imm})}                   GPR-Write(S77,S79,S83)

