
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,rT,rD,0,11}                          Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)
	S3= GPR[rT]=b                                               Premise(F5)

IF	S4= PC.Out=addr                                             PC-Out(S0)
	S5= PC.Out=>ICache.IEA                                      Premise(F70)
	S6= ICache.IEA=addr                                         Path(S4,S5)
	S7= ICache.Out={0,rS,rT,rD,0,11}                            ICache-Search(S6,S1)
	S8= ICache.Out=>IR_ID.In                                    Premise(F77)
	S9= IR_ID.In={0,rS,rT,rD,0,11}                              Path(S7,S8)
	S10= CtrlIR_ID=1                                            Premise(F123)
	S11= [IR_ID]={0,rS,rT,rD,0,11}                              IR_ID-Write(S9,S10)
	S12= CtrlGPR=0                                              Premise(F127)
	S13= GPR[rS]=a                                              GPR-Hold(S2,S12)
	S14= GPR[rT]=b                                              GPR-Hold(S3,S12)
	S15= CtrlPC=0                                               Premise(F129)
	S16= CtrlPCInc=1                                            Premise(F130)
	S17= PC[Out]=addr+4                                         PC-Inc(S0,S15,S16)

ID	S18= IR_ID.Out={0,rS,rT,rD,0,11}                            IR-Out(S11)
	S19= IR_ID.Out25_21=rS                                      IR-Out(S11)
	S20= IR_ID.Out20_16=rT                                      IR-Out(S11)
	S21= FU.OutID1=>A_EX.In                                     Premise(F272)
	S22= FU.OutID2=>B_EX.In                                     Premise(F276)
	S23= GPR.Rdata1=>FU.InID1                                   Premise(F322)
	S24= GPR.Rdata2=>FU.InID2                                   Premise(F324)
	S25= IR_ID.Out25_21=>GPR.RReg1                              Premise(F329)
	S26= GPR.RReg1=rS                                           Path(S19,S25)
	S27= GPR.Rdata1=a                                           GPR-Read(S26,S13)
	S28= FU.InID1=a                                             Path(S27,S23)
	S29= FU.OutID1=FU(a)                                        FU-Forward(S28)
	S30= A_EX.In=FU(a)                                          Path(S29,S21)
	S31= IR_ID.Out20_16=>GPR.RReg2                              Premise(F330)
	S32= GPR.RReg2=rT                                           Path(S20,S31)
	S33= GPR.Rdata2=b                                           GPR-Read(S32,S14)
	S34= FU.InID2=b                                             Path(S33,S24)
	S35= FU.OutID2=FU(b)                                        FU-Forward(S34)
	S36= B_EX.In=FU(b)                                          Path(S35,S22)
	S37= IR_ID.Out=>IR_EX.In                                    Premise(F340)
	S38= IR_EX.In={0,rS,rT,rD,0,11}                             Path(S18,S37)
	S39= CtrlA_EX=1                                             Premise(F373)
	S40= [A_EX]=FU(a)                                           A_EX-Write(S30,S39)
	S41= CtrlB_EX=1                                             Premise(F375)
	S42= [B_EX]=FU(b)                                           B_EX-Write(S36,S41)
	S43= CtrlIR_EX=1                                            Premise(F386)
	S44= [IR_EX]={0,rS,rT,rD,0,11}                              IR_EX-Write(S38,S43)
	S45= CtrlPC=0                                               Premise(F393)
	S46= CtrlPCInc=0                                            Premise(F394)
	S47= PC[Out]=addr+4                                         PC-Hold(S17,S45,S46)

EX	S48= A_EX.Out=FU(a)                                         A_EX-Out(S40)
	S49= B_EX.Out=FU(b)                                         B_EX-Out(S42)
	S50= IR_EX.Out={0,rS,rT,rD,0,11}                            IR_EX-Out(S44)
	S51= A_EX.Out=>A_MEM.In                                     Premise(F405)
	S52= A_MEM.In=FU(a)                                         Path(S48,S51)
	S53= CMPU.A=32'b0                                           Premise(F410)
	S54= B_EX.Out=>CMPU.B                                       Premise(F411)
	S55= CMPU.B=FU(b)                                           Path(S49,S54)
	S56= CMPU.zero=CompareS(32'b0,FU(b))                        CMPU-CMPS(S53,S55)
	S57= CMPU.zero=>ConditionReg_MEM.In                         Premise(F442)
	S58= ConditionReg_MEM.In=CompareS(32'b0,FU(b))              Path(S56,S57)
	S59= IR_EX.Out=>IR_MEM.In                                   Premise(F477)
	S60= IR_MEM.In={0,rS,rT,rD,0,11}                            Path(S50,S59)
	S61= CtrlA_MEM=1                                            Premise(F504)
	S62= [A_MEM]=FU(a)                                          A_MEM-Write(S52,S61)
	S63= CtrlConditionReg_MEM=1                                 Premise(F515)
	S64= [ConditionReg_MEM]=CompareS(32'b0,FU(b))               ConditionReg_MEM-Write(S58,S63)
	S65= CtrlIR_MEM=1                                           Premise(F523)
	S66= [IR_MEM]={0,rS,rT,rD,0,11}                             IR_MEM-Write(S60,S65)
	S67= CtrlPC=0                                               Premise(F527)
	S68= CtrlPCInc=0                                            Premise(F528)
	S69= PC[Out]=addr+4                                         PC-Hold(S47,S67,S68)

MEM	S70= A_MEM.Out=FU(a)                                        A_MEM-Out(S62)
	S71= ConditionReg_MEM.Out=CompareS(32'b0,FU(b))             ConditionReg_MEM-Out(S64)
	S72= IR_MEM.Out={0,rS,rT,rD,0,11}                           IR_MEM-Out(S66)
	S73= A_MEM.Out=>A_DMMU1.In                                  Premise(F536)
	S74= A_DMMU1.In=FU(a)                                       Path(S70,S73)
	S75= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In            Premise(F572)
	S76= ConditionReg_DMMU1.In=CompareS(32'b0,FU(b))            Path(S71,S75)
	S77= IR_MEM.Out=>IR_DMMU1.In                                Premise(F604)
	S78= IR_DMMU1.In={0,rS,rT,rD,0,11}                          Path(S72,S77)
	S79= CtrlA_DMMU1=1                                          Premise(F637)
	S80= [A_DMMU1]=FU(a)                                        A_DMMU1-Write(S74,S79)
	S81= CtrlConditionReg_DMMU1=1                               Premise(F648)
	S82= [ConditionReg_DMMU1]=CompareS(32'b0,FU(b))             ConditionReg_DMMU1-Write(S76,S81)
	S83= CtrlIR_DMMU1=1                                         Premise(F650)
	S84= [IR_DMMU1]={0,rS,rT,rD,0,11}                           IR_DMMU1-Write(S78,S83)
	S85= CtrlPC=0                                               Premise(F659)
	S86= CtrlPCInc=0                                            Premise(F660)
	S87= PC[Out]=addr+4                                         PC-Hold(S69,S85,S86)

DMMU1	S88= A_DMMU1.Out=FU(a)                                      A_DMMU1-Out(S80)
	S89= ConditionReg_DMMU1.Out=CompareS(32'b0,FU(b))           ConditionReg_DMMU1-Out(S82)
	S90= IR_DMMU1.Out={0,rS,rT,rD,0,11}                         IR_DMMU1-Out(S84)
	S91= A_DMMU1.Out=>A_DMMU2.In                                Premise(F669)
	S92= A_DMMU2.In=FU(a)                                       Path(S88,S91)
	S93= ConditionReg_DMMU1.Out=>ConditionReg_DMMU2.In          Premise(F705)
	S94= ConditionReg_DMMU2.In=CompareS(32'b0,FU(b))            Path(S89,S93)
	S95= IR_DMMU1.Out=>IR_DMMU2.In                              Premise(F737)
	S96= IR_DMMU2.In={0,rS,rT,rD,0,11}                          Path(S90,S95)
	S97= CtrlA_DMMU2=1                                          Premise(F770)
	S98= [A_DMMU2]=FU(a)                                        A_DMMU2-Write(S92,S97)
	S99= CtrlConditionReg_DMMU2=1                               Premise(F781)
	S100= [ConditionReg_DMMU2]=CompareS(32'b0,FU(b))            ConditionReg_DMMU2-Write(S94,S99)
	S101= CtrlIR_DMMU2=1                                        Premise(F783)
	S102= [IR_DMMU2]={0,rS,rT,rD,0,11}                          IR_DMMU2-Write(S96,S101)
	S103= CtrlPC=0                                              Premise(F791)
	S104= CtrlPCInc=0                                           Premise(F792)
	S105= PC[Out]=addr+4                                        PC-Hold(S87,S103,S104)

DMMU2	S106= A_DMMU2.Out=FU(a)                                     A_DMMU2-Out(S98)
	S107= ConditionReg_DMMU2.Out=CompareS(32'b0,FU(b))          ConditionReg_DMMU2-Out(S100)
	S108= IR_DMMU2.Out={0,rS,rT,rD,0,11}                        IR_DMMU2-Out(S102)
	S109= A_DMMU2.Out=>A_WB.In                                  Premise(F804)
	S110= A_WB.In=FU(a)                                         Path(S106,S109)
	S111= ConditionReg_DMMU2.Out=>ConditionReg_WB.In            Premise(F839)
	S112= ConditionReg_WB.In=CompareS(32'b0,FU(b))              Path(S107,S111)
	S113= IR_DMMU2.Out=>IR_WB.In                                Premise(F874)
	S114= IR_WB.In={0,rS,rT,rD,0,11}                            Path(S108,S113)
	S115= CtrlA_WB=1                                            Premise(F904)
	S116= [A_WB]=FU(a)                                          A_WB-Write(S110,S115)
	S117= CtrlConditionReg_WB=1                                 Premise(F910)
	S118= [ConditionReg_WB]=CompareS(32'b0,FU(b))               ConditionReg_WB-Write(S112,S117)
	S119= CtrlIR_WB=1                                           Premise(F920)
	S120= [IR_WB]={0,rS,rT,rD,0,11}                             IR_WB-Write(S114,S119)
	S121= CtrlPC=0                                              Premise(F923)
	S122= CtrlPCInc=0                                           Premise(F924)
	S123= PC[Out]=addr+4                                        PC-Hold(S105,S121,S122)

WB	S124= A_WB.Out=FU(a)                                        A_WB-Out(S116)
	S125= IR_WB.Out15_11=rD                                     IR-Out(S120)
	S126= A_WB.Out=>GPR.WData                                   Premise(F993)
	S127= GPR.WData=FU(a)                                       Path(S124,S126)
	S128= IR_WB.Out15_11=>GPR.WReg                              Premise(F994)
	S129= GPR.WReg=rD                                           Path(S125,S128)
	S130= CtrlConditionReg_WB=0                                 Premise(F1042)
	S131= [ConditionReg_WB]=CompareS(32'b0,FU(b))               ConditionReg_WB-Hold(S118,S130)
	S132= CtrlGPR=1                                             Premise(F1053)
	S133= GPR[rD]=FU(a)                                         GPR-Write(S129,S127,S132)
	S134= CtrlPC=0                                              Premise(F1055)
	S135= CtrlPCInc=0                                           Premise(F1056)
	S136= PC[Out]=addr+4                                        PC-Hold(S123,S134,S135)

POST	S131= [ConditionReg_WB]=CompareS(32'b0,FU(b))               ConditionReg_WB-Hold(S118,S130)
	S133= GPR[rD]=FU(a)                                         GPR-Write(S129,S127,S132)
	S136= PC[Out]=addr+4                                        PC-Hold(S123,S134,S135)

