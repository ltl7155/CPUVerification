
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,rT,rD,0,42}                          Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)
	S3= GPR[rT]=b                                               Premise(F5)

IF	S4= PC.Out=addr                                             PC-Out(S0)
	S5= PC.Out=>ICache.IEA                                      Premise(F10)
	S6= ICache.IEA=addr                                         Path(S4,S5)
	S7= ICache.Out={0,rS,rT,rD,0,42}                            ICache-Search(S6,S1)
	S8= ICache.Out=>IR_ID.In                                    Premise(F14)
	S9= IR_ID.In={0,rS,rT,rD,0,42}                              Path(S7,S8)
	S10= CtrlPC=0                                               Premise(F27)
	S11= CtrlPCInc=1                                            Premise(F28)
	S12= PC[Out]=addr+4                                         PC-Inc(S0,S10,S11)
	S13= CtrlIR_ID=1                                            Premise(F33)
	S14= [IR_ID]={0,rS,rT,rD,0,42}                              IR_ID-Write(S9,S13)
	S15= CtrlGPR=0                                              Premise(F36)
	S16= GPR[rS]=a                                              GPR-Hold(S2,S15)
	S17= GPR[rT]=b                                              GPR-Hold(S3,S15)

ID	S18= IR_ID.Out={0,rS,rT,rD,0,42}                            IR-Out(S14)
	S19= IR_ID.Out25_21=rS                                      IR-Out(S14)
	S20= IR_ID.Out20_16=rT                                      IR-Out(S14)
	S21= IR_ID.Out25_21=>GPR.RReg1                              Premise(F86)
	S22= GPR.RReg1=rS                                           Path(S19,S21)
	S23= GPR.Rdata1=a                                           GPR-Read(S22,S16)
	S24= IR_ID.Out20_16=>GPR.RReg2                              Premise(F87)
	S25= GPR.RReg2=rT                                           Path(S20,S24)
	S26= GPR.Rdata2=b                                           GPR-Read(S25,S17)
	S27= GPR.Rdata1=>FU.InID1                                   Premise(F89)
	S28= FU.InID1=a                                             Path(S23,S27)
	S29= FU.OutID1=FU(a)                                        FU-Forward(S28)
	S30= FU.OutID1=>A_EX.In                                     Premise(F91)
	S31= A_EX.In=FU(a)                                          Path(S29,S30)
	S32= GPR.Rdata2=>FU.InID2                                   Premise(F92)
	S33= FU.InID2=b                                             Path(S26,S32)
	S34= FU.OutID2=FU(b)                                        FU-Forward(S33)
	S35= FU.OutID2=>B_EX.In                                     Premise(F94)
	S36= B_EX.In=FU(b)                                          Path(S34,S35)
	S37= IR_ID.Out=>IR_EX.In                                    Premise(F95)
	S38= IR_EX.In={0,rS,rT,rD,0,42}                             Path(S18,S37)
	S39= CtrlPC=0                                               Premise(F103)
	S40= CtrlPCInc=0                                            Premise(F104)
	S41= PC[Out]=addr+4                                         PC-Hold(S12,S39,S40)
	S42= CtrlA_EX=1                                             Premise(F113)
	S43= [A_EX]=FU(a)                                           A_EX-Write(S31,S42)
	S44= CtrlB_EX=1                                             Premise(F114)
	S45= [B_EX]=FU(b)                                           B_EX-Write(S36,S44)
	S46= CtrlIR_EX=1                                            Premise(F115)
	S47= [IR_EX]={0,rS,rT,rD,0,42}                              IR_EX-Write(S38,S46)

EX	S48= A_EX.Out=FU(a)                                         A_EX-Out(S43)
	S49= B_EX.Out=FU(b)                                         B_EX-Out(S45)
	S50= IR_EX.Out={0,rS,rT,rD,0,42}                            IR_EX-Out(S47)
	S51= A_EX.Out=>ALU.A                                        Premise(F133)
	S52= ALU.A=FU(a)                                            Path(S48,S51)
	S53= B_EX.Out=>ALU.B                                        Premise(F134)
	S54= ALU.B=FU(b)                                            Path(S49,S53)
	S55= ALU.Out={31{0},(FU(a)<FU(b))}                          ALU(S52,S54)
	S56= ALU.Out=>ALUOut_MEM.In                                 Premise(F136)
	S57= ALUOut_MEM.In={31{0},(FU(a)<FU(b))}                    Path(S55,S56)
	S58= IR_EX.Out=>IR_MEM.In                                   Premise(F139)
	S59= IR_MEM.In={0,rS,rT,rD,0,42}                            Path(S50,S58)
	S60= CtrlPC=0                                               Premise(F145)
	S61= CtrlPCInc=0                                            Premise(F146)
	S62= PC[Out]=addr+4                                         PC-Hold(S41,S60,S61)
	S63= CtrlALUOut_MEM=1                                       Premise(F158)
	S64= [ALUOut_MEM]={31{0},(FU(a)<FU(b))}                     ALUOut_MEM-Write(S57,S63)
	S65= CtrlIR_MEM=1                                           Premise(F159)
	S66= [IR_MEM]={0,rS,rT,rD,0,42}                             IR_MEM-Write(S59,S65)

MEM	S67= ALUOut_MEM.Out={31{0},(FU(a)<FU(b))}                   ALUOut_MEM-Out(S64)
	S68= IR_MEM.Out={0,rS,rT,rD,0,42}                           IR_MEM-Out(S66)
	S69= IR_MEM.Out=>IR_DMMU1.In                                Premise(F177)
	S70= IR_DMMU1.In={0,rS,rT,rD,0,42}                          Path(S68,S69)
	S71= ALUOut_MEM.Out=>ALUOut_DMMU1.In                        Premise(F181)
	S72= ALUOut_DMMU1.In={31{0},(FU(a)<FU(b))}                  Path(S67,S71)
	S73= CtrlPC=0                                               Premise(F192)
	S74= CtrlPCInc=0                                            Premise(F193)
	S75= PC[Out]=addr+4                                         PC-Hold(S62,S73,S74)
	S76= CtrlIR_DMMU1=1                                         Premise(F207)
	S77= [IR_DMMU1]={0,rS,rT,rD,0,42}                           IR_DMMU1-Write(S70,S76)
	S78= CtrlALUOut_DMMU1=1                                     Premise(F213)
	S79= [ALUOut_DMMU1]={31{0},(FU(a)<FU(b))}                   ALUOut_DMMU1-Write(S72,S78)

MEM(DMMU1)	S80= IR_DMMU1.Out={0,rS,rT,rD,0,42}                         IR_DMMU1-Out(S77)
	S81= ALUOut_DMMU1.Out={31{0},(FU(a)<FU(b))}                 ALUOut_DMMU1-Out(S79)
	S82= IR_DMMU1.Out=>IR_DMMU2.In                              Premise(F225)
	S83= IR_DMMU2.In={0,rS,rT,rD,0,42}                          Path(S80,S82)
	S84= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                      Premise(F226)
	S85= ALUOut_DMMU2.In={31{0},(FU(a)<FU(b))}                  Path(S81,S84)
	S86= CtrlPC=0                                               Premise(F234)
	S87= CtrlPCInc=0                                            Premise(F235)
	S88= PC[Out]=addr+4                                         PC-Hold(S75,S86,S87)
	S89= CtrlIR_DMMU2=1                                         Premise(F257)
	S90= [IR_DMMU2]={0,rS,rT,rD,0,42}                           IR_DMMU2-Write(S83,S89)
	S91= CtrlALUOut_DMMU2=1                                     Premise(F258)
	S92= [ALUOut_DMMU2]={31{0},(FU(a)<FU(b))}                   ALUOut_DMMU2-Write(S85,S91)

MEM(DMMU2)	S93= IR_DMMU2.Out={0,rS,rT,rD,0,42}                         IR_DMMU2-Out(S90)
	S94= ALUOut_DMMU2.Out={31{0},(FU(a)<FU(b))}                 ALUOut_DMMU2-Out(S92)
	S95= IR_DMMU2.Out=>IR_WB.In                                 Premise(F264)
	S96= IR_WB.In={0,rS,rT,rD,0,42}                             Path(S93,S95)
	S97= ALUOut_DMMU2.Out=>ALUOut_WB.In                         Premise(F265)
	S98= ALUOut_WB.In={31{0},(FU(a)<FU(b))}                     Path(S94,S97)
	S99= CtrlPC=0                                               Premise(F273)
	S100= CtrlPCInc=0                                           Premise(F274)
	S101= PC[Out]=addr+4                                        PC-Hold(S88,S99,S100)
	S102= CtrlIR_WB=1                                           Premise(F289)
	S103= [IR_WB]={0,rS,rT,rD,0,42}                             IR_WB-Write(S96,S102)
	S104= CtrlALUOut_WB=1                                       Premise(F295)
	S105= [ALUOut_WB]={31{0},(FU(a)<FU(b))}                     ALUOut_WB-Write(S98,S104)

WB	S106= IR_WB.Out15_11=rD                                     IR-Out(S103)
	S107= ALUOut_WB.Out={31{0},(FU(a)<FU(b))}                   ALUOut_WB-Out(S105)
	S108= IR_WB.Out15_11=>GPR.WReg                              Premise(F301)
	S109= GPR.WReg=rD                                           Path(S106,S108)
	S110= ALUOut_WB.Out=>GPR.WData                              Premise(F302)
	S111= GPR.WData={31{0},(FU(a)<FU(b))}                       Path(S107,S110)
	S112= CtrlPC=0                                              Premise(F310)
	S113= CtrlPCInc=0                                           Premise(F311)
	S114= PC[Out]=addr+4                                        PC-Hold(S101,S112,S113)
	S115= CtrlGPR=1                                             Premise(F319)
	S116= GPR[rD]={31{0},(FU(a)<FU(b))}                         GPR-Write(S109,S111,S115)

POST	S114= PC[Out]=addr+4                                        PC-Hold(S101,S112,S113)
	S116= GPR[rD]={31{0},(FU(a)<FU(b))}                         GPR-Write(S109,S111,S115)

