
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= ICache[addr]={32,rS,rT,offset}                          Premise(F3)

IF	S3= PC.Out=addr                                             PC-Out(S1)
	S4= PC.Out=>ICache.IEA                                      Premise(F8)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={32,rS,rT,offset}                            ICache-Search(S5,S2)
	S7= ICache.Out=>IR_ID.In                                    Premise(F12)
	S8= IR_ID.In={32,rS,rT,offset}                              Path(S6,S7)
	S9= CtrlCP0=0                                               Premise(F21)
	S10= CP0[ASID]=pid                                          CP0-Hold(S0,S9)
	S11= CtrlPC=0                                               Premise(F25)
	S12= CtrlPCInc=1                                            Premise(F26)
	S13= PC[Out]=addr+4                                         PC-Inc(S1,S11,S12)
	S14= CtrlIR_ID=1                                            Premise(F31)
	S15= [IR_ID]={32,rS,rT,offset}                              IR_ID-Write(S8,S14)
	S16= GPR[rS]=base                                           Premise(F62)

ID	S17= IR_ID.Out={32,rS,rT,offset}                            IR-Out(S15)
	S18= IR_ID.Out25_21=rS                                      IR-Out(S15)
	S19= IR_ID.Out15_0=offset                                   IR-Out(S15)
	S20= IR_ID.Out25_21=>GPR.RReg1                              Premise(F109)
	S21= GPR.RReg1=rS                                           Path(S18,S20)
	S22= GPR.Rdata1=base                                        GPR-Read(S21,S16)
	S23= IR_ID.Out15_0=>IMMEXT.In                               Premise(F110)
	S24= IMMEXT.In=offset                                       Path(S19,S23)
	S25= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S24)
	S26= GPR.Rdata1=>FU.InID1                                   Premise(F111)
	S27= FU.InID1=base                                          Path(S22,S26)
	S28= FU.OutID1=FU(base)                                     FU-Forward(S27)
	S29= FU.OutID1=>A_EX.In                                     Premise(F113)
	S30= A_EX.In=FU(base)                                       Path(S28,S29)
	S31= IMMEXT.Out=>B_EX.In                                    Premise(F114)
	S32= B_EX.In={16{offset[15]},offset}                        Path(S25,S31)
	S33= IR_ID.Out=>IR_EX.In                                    Premise(F115)
	S34= IR_EX.In={32,rS,rT,offset}                             Path(S17,S33)
	S35= CtrlCP0=0                                              Premise(F120)
	S36= CP0[ASID]=pid                                          CP0-Hold(S10,S35)
	S37= CtrlPC=0                                               Premise(F124)
	S38= CtrlPCInc=0                                            Premise(F125)
	S39= PC[Out]=addr+4                                         PC-Hold(S13,S37,S38)
	S40= CtrlA_EX=1                                             Premise(F134)
	S41= [A_EX]=FU(base)                                        A_EX-Write(S30,S40)
	S42= CtrlB_EX=1                                             Premise(F135)
	S43= [B_EX]={16{offset[15]},offset}                         B_EX-Write(S32,S42)
	S44= CtrlIR_EX=1                                            Premise(F136)
	S45= [IR_EX]={32,rS,rT,offset}                              IR_EX-Write(S34,S44)

EX	S46= A_EX.Out=FU(base)                                      A_EX-Out(S41)
	S47= B_EX.Out={16{offset[15]},offset}                       B_EX-Out(S43)
	S48= IR_EX.Out={32,rS,rT,offset}                            IR_EX-Out(S45)
	S49= A_EX.Out=>ALU.A                                        Premise(F165)
	S50= ALU.A=FU(base)                                         Path(S46,S49)
	S51= B_EX.Out=>ALU.B                                        Premise(F166)
	S52= ALU.B={16{offset[15]},offset}                          Path(S47,S51)
	S53= ALU.Out=FU(base)+{16{offset[15]},offset}               ALU(S50,S52)
	S54= ALU.Out=>ALUOut_MEM.In                                 Premise(F168)
	S55= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}         Path(S53,S54)
	S56= IR_EX.Out=>IR_MEM.In                                   Premise(F169)
	S57= IR_MEM.In={32,rS,rT,offset}                            Path(S48,S56)
	S58= CtrlCP0=0                                              Premise(F172)
	S59= CP0[ASID]=pid                                          CP0-Hold(S36,S58)
	S60= CtrlPC=0                                               Premise(F176)
	S61= CtrlPCInc=0                                            Premise(F177)
	S62= PC[Out]=addr+4                                         PC-Hold(S39,S60,S61)
	S63= CtrlALUOut_MEM=1                                       Premise(F189)
	S64= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}          ALUOut_MEM-Write(S55,S63)
	S65= CtrlIR_MEM=1                                           Premise(F190)
	S66= [IR_MEM]={32,rS,rT,offset}                             IR_MEM-Write(S57,S65)
	S67= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         Premise(F213)

MEM	S68= CP0.ASID=pid                                           CP0-Read-ASID(S59)
	S69= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}        ALUOut_MEM-Out(S64)
	S70= IR_MEM.Out={32,rS,rT,offset}                           IR_MEM-Out(S66)
	S71= CP0.ASID=>DMMU.PID                                     Premise(F221)
	S72= DMMU.PID=pid                                           Path(S68,S71)
	S73= ALUOut_MEM.Out=>DMMU.IEA                               Premise(F222)
	S74= DMMU.IEA=FU(base)+{16{offset[15]},offset}              Path(S69,S73)
	S75= DMMU.Addr={pid,FU(base)+{16{offset[15]},offset}}       DMMU-Search(S72,S74)
	S76= DMMU.Addr=>DAddrReg_DMMU1.In                           Premise(F223)
	S77= DAddrReg_DMMU1.In={pid,FU(base)+{16{offset[15]},offset}}Path(S75,S76)
	S78= IR_MEM.Out=>IR_DMMU1.In                                Premise(F229)
	S79= IR_DMMU1.In={32,rS,rT,offset}                          Path(S70,S78)
	S80= ALUOut_MEM.Out=>ALUOut_DMMU1.In                        Premise(F230)
	S81= ALUOut_DMMU1.In=FU(base)+{16{offset[15]},offset}       Path(S69,S80)
	S82= CtrlCP0=0                                              Premise(F237)
	S83= CP0[ASID]=pid                                          CP0-Hold(S59,S82)
	S84= CtrlPC=0                                               Premise(F241)
	S85= CtrlPCInc=0                                            Premise(F242)
	S86= PC[Out]=addr+4                                         PC-Hold(S62,S84,S85)
	S87= CtrlDAddrReg_DMMU1=1                                   Premise(F257)
	S88= [DAddrReg_DMMU1]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Write(S77,S87)
	S89= CtrlIR_DMMU1=1                                         Premise(F261)
	S90= [IR_DMMU1]={32,rS,rT,offset}                           IR_DMMU1-Write(S79,S89)
	S91= CtrlALUOut_DMMU1=1                                     Premise(F267)
	S92= [ALUOut_DMMU1]=FU(base)+{16{offset[15]},offset}        ALUOut_DMMU1-Write(S81,S91)
	S93= CtrlDMem=0                                             Premise(F273)
	S94= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S67,S93)

MEM(DMMU1)	S95= CP0.ASID=pid                                           CP0-Read-ASID(S83)
	S96= DAddrReg_DMMU1.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Out(S88)
	S97= DCache.RLineEA=DCacheRLineEA()                         DCache-WriteBack()
	S98= DCache.RLineData=DCacheRLineData()                     DCache-WriteBack()
	S99= IR_DMMU1.Out={32,rS,rT,offset}                         IR_DMMU1-Out(S90)
	S100= ALUOut_DMMU1.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU1-Out(S92)
	S101= CP0.ASID=>DMMU.PID                                    Premise(F287)
	S102= DMMU.PID=pid                                          Path(S95,S101)
	S103= DCache.RLineEA=>DMMU.IEAR                             Premise(F288)
	S104= DMMU.IEAR=DCacheRLineEA()                             Path(S97,S103)
	S105= DMMU.AddrR={pid,DCacheRLineEA()}                      DMMU-RSearch(S102,S104)
	S106= DMMU.AddrR=>DMem.MEM8WordWAddr                        Premise(F289)
	S107= DMem.MEM8WordWAddr={pid,DCacheRLineEA()}              Path(S105,S106)
	S108= DCache.RLineData=>DMem.MEM8WordWData                  Premise(F290)
	S109= DMem.MEM8WordWData=DCacheRLineData()                  Path(S98,S108)
	S110= IR_DMMU1.Out=>IR_DMMU2.In                             Premise(F291)
	S111= IR_DMMU2.In={32,rS,rT,offset}                         Path(S99,S110)
	S112= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                     Premise(F292)
	S113= ALUOut_DMMU2.In=FU(base)+{16{offset[15]},offset}      Path(S100,S112)
	S114= DAddrReg_DMMU1.Out=>DAddrReg_DMMU2.In                 Premise(F293)
	S115= DAddrReg_DMMU2.In={pid,FU(base)+{16{offset[15]},offset}}Path(S96,S114)
	S116= CtrlPC=0                                              Premise(F300)
	S117= CtrlPCInc=0                                           Premise(F301)
	S118= PC[Out]=addr+4                                        PC-Hold(S86,S116,S117)
	S119= CtrlDMem=0                                            Premise(F332)
	S120= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S94,S119)
	S121= CtrlDMem8Word=1                                       Premise(F333)
	S122= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Write8Word(S107,S109,S121)
	S123= CtrlIR_DMMU2=1                                        Premise(F334)
	S124= [IR_DMMU2]={32,rS,rT,offset}                          IR_DMMU2-Write(S111,S123)
	S125= CtrlALUOut_DMMU2=1                                    Premise(F335)
	S126= [ALUOut_DMMU2]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU2-Write(S113,S125)
	S127= CtrlDAddrReg_DMMU2=1                                  Premise(F336)
	S128= [DAddrReg_DMMU2]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Write(S115,S127)

MEM(DMMU2)	S129= IR_DMMU2.Out={32,rS,rT,offset}                        IR_DMMU2-Out(S124)
	S130= ALUOut_DMMU2.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU2-Out(S126)
	S131= DAddrReg_DMMU2.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Out(S128)
	S132= ALUOut_DMMU2.Out=>DCache.IEA                          Premise(F341)
	S133= DCache.IEA=FU(base)+{16{offset[15]},offset}           Path(S130,S132)
	S134= DAddrReg_DMMU2.Out=>DMem.RAddr                        Premise(F342)
	S135= DMem.RAddr={pid,FU(base)+{16{offset[15]},offset}}     Path(S131,S134)
	S136= DMem.MEM8WordOut=>DCache.WData                        Premise(F343)
	S137= DMem.Out=>DR_WB.In                                    Premise(F344)
	S138= IR_DMMU2.Out=>IR_WB.In                                Premise(F345)
	S139= IR_WB.In={32,rS,rT,offset}                            Path(S129,S138)
	S140= ALUOut_DMMU2.Out=>ALUOut_WB.In                        Premise(F346)
	S141= ALUOut_WB.In=FU(base)+{16{offset[15]},offset}         Path(S130,S140)
	S142= CtrlPC=0                                              Premise(F353)
	S143= CtrlPCInc=0                                           Premise(F354)
	S144= PC[Out]=addr+4                                        PC-Hold(S118,S142,S143)
	S145= CtrlDCache=1                                          Premise(F370)
	S146= CtrlIR_WB=1                                           Premise(F374)
	S147= [IR_WB]={32,rS,rT,offset}                             IR_WB-Write(S139,S146)
	S148= CtrlALUOut_WB=1                                       Premise(F380)
	S149= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}          ALUOut_WB-Write(S141,S148)
	S150= CtrlDR_WB=1                                           Premise(F381)
	S151= CtrlDMem=0                                            Premise(F385)
	S152= CtrlDMem8Word=0                                       Premise(F386)
	S153= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S122,S152)
	S154= DMem.Out=a                                            DMem-Read(S135,S120,S151,S152)
	S155= DR_WB.In=a                                            Path(S154,S137)
	S156= [DR_WB]=a                                             DR_WB-Write(S155,S150)
	S157= DMem.MEM8WordOut=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DMem-Read(S135,S120,S151,S152)
	S158= DCache.WData=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})Path(S157,S136)
	S159= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Write8Word(S133,S158,S145)

WB	S160= IR_WB.Out20_16=rT                                     IR-Out(S147)
	S161= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S149)
	S162= DR_WB.Out=a                                           DR_WB-Out(S156)
	S163= IR_WB.Out20_16=>GPR.WReg                              Premise(F392)
	S164= GPR.WReg=rT                                           Path(S160,S163)
	S165= DR_WB.Out=>MemDataSelL.In                             Premise(F393)
	S166= MemDataSelL.In=a                                      Path(S162,S165)
	S167= ALUOut_WB.Out1_0=>MemDataSelL.Addr                    Premise(F394)
	S168= MemDataSelL.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S161,S167)
	S169= MemDataSelL.Out={24{a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8][7]},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}MemDataSelL(S166,S168)
	S170= MemDataSelL.Out=>GPR.WData                            Premise(F396)
	S171= GPR.WData={24{a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8][7]},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}Path(S169,S170)
	S172= CtrlPC=0                                              Premise(F404)
	S173= CtrlPCInc=0                                           Premise(F405)
	S174= PC[Out]=addr+4                                        PC-Hold(S144,S172,S173)
	S175= CtrlGPR=1                                             Premise(F413)
	S176= GPR[rT]={24{a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8][7]},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S164,S171,S175)
	S177= CtrlDCache=0                                          Premise(F421)
	S178= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S159,S177)
	S179= CtrlDMem8Word=0                                       Premise(F437)
	S180= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S153,S179)

POST	S174= PC[Out]=addr+4                                        PC-Hold(S144,S172,S173)
	S176= GPR[rT]={24{a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8][7]},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S164,S171,S175)
	S178= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S159,S177)
	S180= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S153,S179)

