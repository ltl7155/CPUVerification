
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={9,rS,rT,SIMM}                         Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= PC.Out=>IMem.RAddr                                      Premise(F3)
	S6= IMem.RAddr=addr                                         Path(S4,S5)
	S7= CP0.ASID=>IMem.ASID                                     Premise(F4)
	S8= IMem.ASID=pid                                           Path(S3,S7)
	S9= IMem.Out={9,rS,rT,SIMM}                                 IMem-Read(S8,S6,S2)
	S10= IMem.Out=>IR_ID.In                                     Premise(F6)
	S11= IR_ID.In={9,rS,rT,SIMM}                                Path(S9,S10)
	S12= CtrlPC=0                                               Premise(F39)
	S13= CtrlPCInc=1                                            Premise(F40)
	S14= PC[Out]=addr+4                                         PC-Inc(S1,S12,S13)
	S15= CtrlIR_ID=1                                            Premise(F46)
	S16= [IR_ID]={9,rS,rT,SIMM}                                 IR_ID-Write(S11,S15)
	S17= GPR[rS]=a                                              Premise(F54)

ID	S18= IR_ID.Out={9,rS,rT,SIMM}                               IR-Out(S16)
	S19= IR_ID.Out25_21=rS                                      IR-Out(S16)
	S20= IR_ID.Out25_21=>GPR.RReg1                              Premise(F63)
	S21= GPR.RReg1=rS                                           Path(S19,S20)
	S22= GPR.Rdata1=a                                           GPR-Read(S21,S17)
	S23= GPR.Rdata1=>FU.InID1                                   Premise(F64)
	S24= FU.InID1=a                                             Path(S22,S23)
	S25= FU.OutID1=FU(a)                                        FU-Forward(S24)
	S26= FU.OutID1=>A_EX.In                                     Premise(F66)
	S27= A_EX.In=FU(a)                                          Path(S25,S26)
	S28= IR_ID.Out=>IR_EX.In                                    Premise(F67)
	S29= IR_EX.In={9,rS,rT,SIMM}                                Path(S18,S28)
	S30= CtrlPC=0                                               Premise(F92)
	S31= CtrlPCInc=0                                            Premise(F93)
	S32= PC[Out]=addr+4                                         PC-Hold(S14,S30,S31)
	S33= CtrlA_EX=1                                             Premise(F101)
	S34= [A_EX]=FU(a)                                           A_EX-Write(S27,S33)
	S35= CtrlIR_EX=1                                            Premise(F102)
	S36= [IR_EX]={9,rS,rT,SIMM}                                 IR_EX-Write(S29,S35)

EX	S37= A_EX.Out=FU(a)                                         A_EX-Out(S34)
	S38= IR_EX.Out={9,rS,rT,SIMM}                               IR_EX-Out(S36)
	S39= IR_EX.Out15_0=SIMM                                     IR_EX-Out(S36)
	S40= A_EX.Out=>ALU.A                                        Premise(F124)
	S41= ALU.A=FU(a)                                            Path(S37,S40)
	S42= IR_EX.Out15_0=>IMMEXT.In                               Premise(F125)
	S43= IMMEXT.In=SIMM                                         Path(S39,S42)
	S44= IMMEXT.Out={16{SIMM[15]},SIMM}                         IMMEXT(S43)
	S45= IMMEXT.Out=>ALU.B                                      Premise(F126)
	S46= ALU.B={16{SIMM[15]},SIMM}                              Path(S44,S45)
	S47= ALU.Out=FU(a)+{16{SIMM[15]},SIMM}                      ALU(S41,S46)
	S48= ALU.Out=>ALUOut_MEM.In                                 Premise(F128)
	S49= ALUOut_MEM.In=FU(a)+{16{SIMM[15]},SIMM}                Path(S47,S48)
	S50= IR_EX.Out=>IR_MEM.In                                   Premise(F131)
	S51= IR_MEM.In={9,rS,rT,SIMM}                               Path(S38,S50)
	S52= CtrlPC=0                                               Premise(F144)
	S53= CtrlPCInc=0                                            Premise(F145)
	S54= PC[Out]=addr+4                                         PC-Hold(S32,S52,S53)
	S55= CtrlALUOut_MEM=1                                       Premise(F155)
	S56= [ALUOut_MEM]=FU(a)+{16{SIMM[15]},SIMM}                 ALUOut_MEM-Write(S49,S55)
	S57= CtrlIR_MEM=1                                           Premise(F156)
	S58= [IR_MEM]={9,rS,rT,SIMM}                                IR_MEM-Write(S51,S57)

MEM	S59= ALUOut_MEM.Out=FU(a)+{16{SIMM[15]},SIMM}               ALUOut_MEM-Out(S56)
	S60= IR_MEM.Out={9,rS,rT,SIMM}                              IR_MEM-Out(S58)
	S61= IR_MEM.Out=>IR_WB.In                                   Premise(F185)
	S62= IR_WB.In={9,rS,rT,SIMM}                                Path(S60,S61)
	S63= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F186)
	S64= ALUOut_WB.In=FU(a)+{16{SIMM[15]},SIMM}                 Path(S59,S63)
	S65= CtrlPC=0                                               Premise(F195)
	S66= CtrlPCInc=0                                            Premise(F196)
	S67= PC[Out]=addr+4                                         PC-Hold(S54,S65,S66)
	S68= CtrlIR_WB=1                                            Premise(F208)
	S69= [IR_WB]={9,rS,rT,SIMM}                                 IR_WB-Write(S62,S68)
	S70= CtrlALUOut_WB=1                                        Premise(F209)
	S71= [ALUOut_WB]=FU(a)+{16{SIMM[15]},SIMM}                  ALUOut_WB-Write(S64,S70)

WB	S72= IR_WB.Out20_16=rT                                      IR-Out(S69)
	S73= ALUOut_WB.Out=FU(a)+{16{SIMM[15]},SIMM}                ALUOut_WB-Out(S71)
	S74= IR_WB.Out20_16=>GPR.WReg                               Premise(F242)
	S75= GPR.WReg=rT                                            Path(S72,S74)
	S76= ALUOut_WB.Out=>GPR.WData                               Premise(F243)
	S77= GPR.WData=FU(a)+{16{SIMM[15]},SIMM}                    Path(S73,S76)
	S78= CtrlPC=0                                               Premise(F246)
	S79= CtrlPCInc=0                                            Premise(F247)
	S80= PC[Out]=addr+4                                         PC-Hold(S67,S78,S79)
	S81= CtrlGPR=1                                              Premise(F254)
	S82= GPR[rT]=FU(a)+{16{SIMM[15]},SIMM}                      GPR-Write(S75,S77,S81)

POST	S80= PC[Out]=addr+4                                         PC-Hold(S67,S78,S79)
	S82= GPR[rT]=FU(a)+{16{SIMM[15]},SIMM}                      GPR-Write(S75,S77,S81)

