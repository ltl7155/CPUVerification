
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={33,rS,rT,offset}                      Premise(F2)
	S3= GPR[rS]=base                                            Premise(F3)
	S4= DMem[{pid,base+{16{offset[15]},offset}}]=a              Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PC.Out=>IMem.RAddr                                      Premise(F5)
	S8= IMem.RAddr=addr                                         Path(S6,S7)
	S9= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S10= IMem.ASID=pid                                          Path(S5,S9)
	S11= IMem.Out={33,rS,rT,offset}                             IMem-Read(S10,S8,S2)
	S12= IMem.Out=>IR.In                                        Premise(F7)
	S13= IR.In={33,rS,rT,offset}                                Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F8)
	S15= CtrlPCInc=1                                            Premise(F9)
	S16= PC[Out]=addr+4                                         PC-Inc(S1,S14,S15)
	S17= PC[CIA]=addr                                           PC-Inc(S1,S14,S15)
	S18= CtrlIMem=0                                             Premise(F10)
	S19= IMem[{pid,addr}]={33,rS,rT,offset}                     IMem-Hold(S2,S18)
	S20= CtrlASIDIn=0                                           Premise(F11)
	S21= CtrlCP0=0                                              Premise(F12)
	S22= CP0[ASID]=pid                                          CP0-Hold(S0,S21)
	S23= CtrlEPCIn=0                                            Premise(F13)
	S24= CtrlExCodeIn=0                                         Premise(F14)
	S25= CtrlIR=1                                               Premise(F15)
	S26= [IR]={33,rS,rT,offset}                                 IR-Write(S13,S25)
	S27= CtrlGPR=0                                              Premise(F16)
	S28= GPR[rS]=base                                           GPR-Hold(S3,S27)
	S29= CtrlA=0                                                Premise(F17)
	S30= CtrlB=0                                                Premise(F18)
	S31= CtrlALUOut=0                                           Premise(F19)
	S32= CtrlDMem=0                                             Premise(F20)
	S33= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S4,S32)
	S34= CtrlDMem8Word=0                                        Premise(F21)
	S35= CtrlDR=0                                               Premise(F22)

ID	S36= PC.Out=addr+4                                          PC-Out(S16)
	S37= PC.CIA=addr                                            PC-Out(S17)
	S38= PC.CIA31_28=addr[31:28]                                PC-Out(S17)
	S39= CP0.ASID=pid                                           CP0-Read-ASID(S22)
	S40= IR.Out={33,rS,rT,offset}                               IR-Out(S26)
	S41= IR.Out31_26=33                                         IR-Out(S26)
	S42= IR.Out25_21=rS                                         IR-Out(S26)
	S43= IR.Out20_16=rT                                         IR-Out(S26)
	S44= IR.Out15_0=offset                                      IR-Out(S26)
	S45= IR.Out31_26=>CU.Op                                     Premise(F23)
	S46= CU.Op=33                                               Path(S41,S45)
	S47= CU.Func=alu_add                                        CU(S46)
	S48= CU.MemDataSelFunc=mds_lwz                              CU(S46)
	S49= IR.Out25_21=>GPR.RReg1                                 Premise(F24)
	S50= GPR.RReg1=rS                                           Path(S42,S49)
	S51= GPR.Rdata1=base                                        GPR-Read(S50,S28)
	S52= IR.Out15_0=>IMMEXT.In                                  Premise(F25)
	S53= IMMEXT.In=offset                                       Path(S44,S52)
	S54= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S53)
	S55= GPR.Rdata1=>A.In                                       Premise(F26)
	S56= A.In=base                                              Path(S51,S55)
	S57= IMMEXT.Out=>B.In                                       Premise(F27)
	S58= B.In={16{offset[15]},offset}                           Path(S54,S57)
	S59= CtrlPC=0                                               Premise(F28)
	S60= CtrlPCInc=0                                            Premise(F29)
	S61= PC[CIA]=addr                                           PC-Hold(S17,S60)
	S62= PC[Out]=addr+4                                         PC-Hold(S16,S59,S60)
	S63= CtrlIMem=0                                             Premise(F30)
	S64= IMem[{pid,addr}]={33,rS,rT,offset}                     IMem-Hold(S19,S63)
	S65= CtrlASIDIn=0                                           Premise(F31)
	S66= CtrlCP0=0                                              Premise(F32)
	S67= CP0[ASID]=pid                                          CP0-Hold(S22,S66)
	S68= CtrlEPCIn=0                                            Premise(F33)
	S69= CtrlExCodeIn=0                                         Premise(F34)
	S70= CtrlIR=0                                               Premise(F35)
	S71= [IR]={33,rS,rT,offset}                                 IR-Hold(S26,S70)
	S72= CtrlGPR=0                                              Premise(F36)
	S73= GPR[rS]=base                                           GPR-Hold(S28,S72)
	S74= CtrlA=1                                                Premise(F37)
	S75= [A]=base                                               A-Write(S56,S74)
	S76= CtrlB=1                                                Premise(F38)
	S77= [B]={16{offset[15]},offset}                            B-Write(S58,S76)
	S78= CtrlALUOut=0                                           Premise(F39)
	S79= CtrlDMem=0                                             Premise(F40)
	S80= DMem[{pid,base+{16{offset[15]},offset}}]=a             DMem-Hold(S33,S79)
	S81= CtrlDMem8Word=0                                        Premise(F41)
	S82= CtrlDR=0                                               Premise(F42)

EX	S83= PC.CIA=addr                                            PC-Out(S61)
	S84= PC.CIA31_28=addr[31:28]                                PC-Out(S61)
	S85= PC.Out=addr+4                                          PC-Out(S62)
	S86= CP0.ASID=pid                                           CP0-Read-ASID(S67)
	S87= IR.Out={33,rS,rT,offset}                               IR-Out(S71)
	S88= IR.Out31_26=33                                         IR-Out(S71)
	S89= IR.Out25_21=rS                                         IR-Out(S71)
	S90= IR.Out20_16=rT                                         IR-Out(S71)
	S91= IR.Out15_0=offset                                      IR-Out(S71)
	S92= A.Out=base                                             A-Out(S75)
	S93= A.Out1_0={base}[1:0]                                   A-Out(S75)
	S94= A.Out4_0={base}[4:0]                                   A-Out(S75)
	S95= B.Out={16{offset[15]},offset}                          B-Out(S77)
	S96= B.Out1_0={{16{offset[15]},offset}}[1:0]                B-Out(S77)
	S97= B.Out4_0={{16{offset[15]},offset}}[4:0]                B-Out(S77)
	S98= A.Out=>ALU.A                                           Premise(F43)
	S99= ALU.A=base                                             Path(S92,S98)
	S100= B.Out=>ALU.B                                          Premise(F44)
	S101= ALU.B={16{offset[15]},offset}                         Path(S95,S100)
	S102= ALU.Func=6'b010010                                    Premise(F45)
	S103= ALU.Out=base+{16{offset[15]},offset}                  ALU(S99,S101)
	S104= ALU.Out1_0={base+{16{offset[15]},offset}}[1:0]        ALU(S99,S101)
	S105= ALU.CMP=Compare0(base+{16{offset[15]},offset})        ALU(S99,S101)
	S106= ALU.OV=OverFlow(base+{16{offset[15]},offset})         ALU(S99,S101)
	S107= ALU.CA=Carry(base+{16{offset[15]},offset})            ALU(S99,S101)
	S108= ALU.Out=>ALUOut.In                                    Premise(F46)
	S109= ALUOut.In=base+{16{offset[15]},offset}                Path(S103,S108)
	S110= CtrlPC=0                                              Premise(F47)
	S111= CtrlPCInc=0                                           Premise(F48)
	S112= PC[CIA]=addr                                          PC-Hold(S61,S111)
	S113= PC[Out]=addr+4                                        PC-Hold(S62,S110,S111)
	S114= CtrlIMem=0                                            Premise(F49)
	S115= IMem[{pid,addr}]={33,rS,rT,offset}                    IMem-Hold(S64,S114)
	S116= CtrlASIDIn=0                                          Premise(F50)
	S117= CtrlCP0=0                                             Premise(F51)
	S118= CP0[ASID]=pid                                         CP0-Hold(S67,S117)
	S119= CtrlEPCIn=0                                           Premise(F52)
	S120= CtrlExCodeIn=0                                        Premise(F53)
	S121= CtrlIR=0                                              Premise(F54)
	S122= [IR]={33,rS,rT,offset}                                IR-Hold(S71,S121)
	S123= CtrlGPR=0                                             Premise(F55)
	S124= GPR[rS]=base                                          GPR-Hold(S73,S123)
	S125= CtrlA=0                                               Premise(F56)
	S126= [A]=base                                              A-Hold(S75,S125)
	S127= CtrlB=0                                               Premise(F57)
	S128= [B]={16{offset[15]},offset}                           B-Hold(S77,S127)
	S129= CtrlALUOut=1                                          Premise(F58)
	S130= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Write(S109,S129)
	S131= CtrlDMem=0                                            Premise(F59)
	S132= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S80,S131)
	S133= CtrlDMem8Word=0                                       Premise(F60)
	S134= CtrlDR=0                                              Premise(F61)

MEM	S135= PC.CIA=addr                                           PC-Out(S112)
	S136= PC.CIA31_28=addr[31:28]                               PC-Out(S112)
	S137= PC.Out=addr+4                                         PC-Out(S113)
	S138= CP0.ASID=pid                                          CP0-Read-ASID(S118)
	S139= IR.Out={33,rS,rT,offset}                              IR-Out(S122)
	S140= IR.Out31_26=33                                        IR-Out(S122)
	S141= IR.Out25_21=rS                                        IR-Out(S122)
	S142= IR.Out20_16=rT                                        IR-Out(S122)
	S143= IR.Out15_0=offset                                     IR-Out(S122)
	S144= A.Out=base                                            A-Out(S126)
	S145= A.Out1_0={base}[1:0]                                  A-Out(S126)
	S146= A.Out4_0={base}[4:0]                                  A-Out(S126)
	S147= B.Out={16{offset[15]},offset}                         B-Out(S128)
	S148= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S128)
	S149= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S128)
	S150= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S130)
	S151= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S130)
	S152= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S130)
	S153= ALUOut.Out=>DMem.RAddr                                Premise(F62)
	S154= DMem.RAddr=base+{16{offset[15]},offset}               Path(S150,S153)
	S155= CP0.ASID=>DMem.ASID                                   Premise(F63)
	S156= DMem.ASID=pid                                         Path(S138,S155)
	S157= DMem.Out=>DR.In                                       Premise(F64)
	S158= CtrlPC=0                                              Premise(F65)
	S159= CtrlPCInc=0                                           Premise(F66)
	S160= PC[CIA]=addr                                          PC-Hold(S112,S159)
	S161= PC[Out]=addr+4                                        PC-Hold(S113,S158,S159)
	S162= CtrlIMem=0                                            Premise(F67)
	S163= IMem[{pid,addr}]={33,rS,rT,offset}                    IMem-Hold(S115,S162)
	S164= CtrlASIDIn=0                                          Premise(F68)
	S165= CtrlCP0=0                                             Premise(F69)
	S166= CP0[ASID]=pid                                         CP0-Hold(S118,S165)
	S167= CtrlEPCIn=0                                           Premise(F70)
	S168= CtrlExCodeIn=0                                        Premise(F71)
	S169= CtrlIR=0                                              Premise(F72)
	S170= [IR]={33,rS,rT,offset}                                IR-Hold(S122,S169)
	S171= CtrlGPR=0                                             Premise(F73)
	S172= GPR[rS]=base                                          GPR-Hold(S124,S171)
	S173= CtrlA=0                                               Premise(F74)
	S174= [A]=base                                              A-Hold(S126,S173)
	S175= CtrlB=0                                               Premise(F75)
	S176= [B]={16{offset[15]},offset}                           B-Hold(S128,S175)
	S177= CtrlALUOut=0                                          Premise(F76)
	S178= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S130,S177)
	S179= CtrlDMem=0                                            Premise(F77)
	S180= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S132,S179)
	S181= DMem.Out=a                                            DMem-Read(S156,S154,S132,S179)
	S182= DR.In=a                                               Path(S181,S157)
	S183= CtrlDMem8Word=0                                       Premise(F78)
	S184= CtrlDR=1                                              Premise(F79)
	S185= [DR]=a                                                DR-Write(S182,S184)

WB	S186= PC.CIA=addr                                           PC-Out(S160)
	S187= PC.CIA31_28=addr[31:28]                               PC-Out(S160)
	S188= PC.Out=addr+4                                         PC-Out(S161)
	S189= CP0.ASID=pid                                          CP0-Read-ASID(S166)
	S190= IR.Out={33,rS,rT,offset}                              IR-Out(S170)
	S191= IR.Out31_26=33                                        IR-Out(S170)
	S192= IR.Out25_21=rS                                        IR-Out(S170)
	S193= IR.Out20_16=rT                                        IR-Out(S170)
	S194= IR.Out15_0=offset                                     IR-Out(S170)
	S195= A.Out=base                                            A-Out(S174)
	S196= A.Out1_0={base}[1:0]                                  A-Out(S174)
	S197= A.Out4_0={base}[4:0]                                  A-Out(S174)
	S198= B.Out={16{offset[15]},offset}                         B-Out(S176)
	S199= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S176)
	S200= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S176)
	S201= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S178)
	S202= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S178)
	S203= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S178)
	S204= DR.Out=a                                              DR-Out(S185)
	S205= DR.Out1_0={a}[1:0]                                    DR-Out(S185)
	S206= DR.Out4_0={a}[4:0]                                    DR-Out(S185)
	S207= IR.Out20_16=>GPR.WReg                                 Premise(F80)
	S208= GPR.WReg=rT                                           Path(S193,S207)
	S209= DR.Out=>MemDataSel.In                                 Premise(F81)
	S210= MemDataSel.In=a                                       Path(S204,S209)
	S211= ALUOut.Out1_0=>MemDataSel.Addr                        Premise(F82)
	S212= MemDataSel.Addr={base+{16{offset[15]},offset}}[1:0]   Path(S202,S211)
	S213= MemDataSel.Func=6'b001010                             Premise(F83)
	S214= MemDataSel.Out={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}MemDataSel(S210,S212)
	S215= MemDataSel.Out=>GPR.WData                             Premise(F84)
	S216= GPR.WData={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}Path(S214,S215)
	S217= CtrlPC=0                                              Premise(F85)
	S218= CtrlPCInc=0                                           Premise(F86)
	S219= PC[CIA]=addr                                          PC-Hold(S160,S218)
	S220= PC[Out]=addr+4                                        PC-Hold(S161,S217,S218)
	S221= CtrlIMem=0                                            Premise(F87)
	S222= IMem[{pid,addr}]={33,rS,rT,offset}                    IMem-Hold(S163,S221)
	S223= CtrlASIDIn=0                                          Premise(F88)
	S224= CtrlCP0=0                                             Premise(F89)
	S225= CP0[ASID]=pid                                         CP0-Hold(S166,S224)
	S226= CtrlEPCIn=0                                           Premise(F90)
	S227= CtrlExCodeIn=0                                        Premise(F91)
	S228= CtrlIR=0                                              Premise(F92)
	S229= [IR]={33,rS,rT,offset}                                IR-Hold(S170,S228)
	S230= CtrlGPR=1                                             Premise(F93)
	S231= GPR[rT]={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S208,S216,S230)
	S232= CtrlA=0                                               Premise(F94)
	S233= [A]=base                                              A-Hold(S174,S232)
	S234= CtrlB=0                                               Premise(F95)
	S235= [B]={16{offset[15]},offset}                           B-Hold(S176,S234)
	S236= CtrlALUOut=0                                          Premise(F96)
	S237= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S178,S236)
	S238= CtrlDMem=0                                            Premise(F97)
	S239= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S180,S238)
	S240= CtrlDMem8Word=0                                       Premise(F98)
	S241= CtrlDR=0                                              Premise(F99)
	S242= [DR]=a                                                DR-Hold(S185,S241)

POST	S219= PC[CIA]=addr                                          PC-Hold(S160,S218)
	S220= PC[Out]=addr+4                                        PC-Hold(S161,S217,S218)
	S222= IMem[{pid,addr}]={33,rS,rT,offset}                    IMem-Hold(S163,S221)
	S225= CP0[ASID]=pid                                         CP0-Hold(S166,S224)
	S229= [IR]={33,rS,rT,offset}                                IR-Hold(S170,S228)
	S231= GPR[rT]={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S208,S216,S230)
	S233= [A]=base                                              A-Hold(S174,S232)
	S235= [B]={16{offset[15]},offset}                           B-Hold(S176,S234)
	S237= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S178,S236)
	S239= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S180,S238)
	S242= [DR]=a                                                DR-Hold(S185,S241)

