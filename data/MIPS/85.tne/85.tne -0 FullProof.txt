
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rs,rt,code,54}                      Premise(F2)
	S3= GPR[rs]=a                                               Premise(F3)
	S4= GPR[rt]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PC.Out=>IMem.RAddr                                      Premise(F5)
	S8= IMem.RAddr=addr                                         Path(S6,S7)
	S9= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S10= IMem.ASID=pid                                          Path(S5,S9)
	S11= IMem.Out={0,rs,rt,code,54}                             IMem-Read(S10,S8,S2)
	S12= IMem.Out=>IR.In                                        Premise(F7)
	S13= IR.In={0,rs,rt,code,54}                                Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F8)
	S15= CtrlPCInc=1                                            Premise(F9)
	S16= PC[Out]=addr+4                                         PC-Inc(S1,S14,S15)
	S17= PC[CIA]=addr                                           PC-Inc(S1,S14,S15)
	S18= CtrlIMem=0                                             Premise(F10)
	S19= IMem[{pid,addr}]={0,rs,rt,code,54}                     IMem-Hold(S2,S18)
	S20= CtrlASIDIn=0                                           Premise(F11)
	S21= CtrlCP0=0                                              Premise(F12)
	S22= CP0[ASID]=pid                                          CP0-Hold(S0,S21)
	S23= CtrlEPCIn=0                                            Premise(F13)
	S24= CtrlExCodeIn=0                                         Premise(F14)
	S25= CtrlIR=1                                               Premise(F15)
	S26= [IR]={0,rs,rt,code,54}                                 IR-Write(S13,S25)
	S27= CtrlGPR=0                                              Premise(F16)
	S28= GPR[rs]=a                                              GPR-Hold(S3,S27)
	S29= GPR[rt]=b                                              GPR-Hold(S4,S27)
	S30= CtrlA=0                                                Premise(F17)
	S31= CtrlB=0                                                Premise(F18)
	S32= CtrlConditionReg=0                                     Premise(F19)
	S33= CtrlPIDReg=0                                           Premise(F20)

ID	S34= PC.Out=addr+4                                          PC-Out(S16)
	S35= PC.CIA=addr                                            PC-Out(S17)
	S36= PC.CIA31_28=addr[31:28]                                PC-Out(S17)
	S37= CP0.ASID=pid                                           CP0-Read-ASID(S22)
	S38= IR.Out={0,rs,rt,code,54}                               IR-Out(S26)
	S39= IR.Out31_26=0                                          IR-Out(S26)
	S40= IR.Out25_21=rs                                         IR-Out(S26)
	S41= IR.Out20_16=rt                                         IR-Out(S26)
	S42= IR.Out15_6=code                                        IR-Out(S26)
	S43= IR.Out5_0=54                                           IR-Out(S26)
	S44= IR.Out31_26=>CU.Op                                     Premise(F21)
	S45= CU.Op=0                                                Path(S39,S44)
	S46= IR.Out25_21=>GPR.RReg1                                 Premise(F22)
	S47= GPR.RReg1=rs                                           Path(S40,S46)
	S48= GPR.Rdata1=a                                           GPR-Read(S47,S28)
	S49= IR.Out20_16=>GPR.RReg2                                 Premise(F23)
	S50= GPR.RReg2=rt                                           Path(S41,S49)
	S51= GPR.Rdata2=b                                           GPR-Read(S50,S29)
	S52= IR.Out5_0=>CU.IRFunc                                   Premise(F24)
	S53= CU.IRFunc=54                                           Path(S43,S52)
	S54= GPR.Rdata1=>A.In                                       Premise(F25)
	S55= A.In=a                                                 Path(S48,S54)
	S56= GPR.Rdata2=>B.In                                       Premise(F26)
	S57= B.In=b                                                 Path(S51,S56)
	S58= CtrlPC=0                                               Premise(F27)
	S59= CtrlPCInc=0                                            Premise(F28)
	S60= PC[CIA]=addr                                           PC-Hold(S17,S59)
	S61= PC[Out]=addr+4                                         PC-Hold(S16,S58,S59)
	S62= CtrlIMem=0                                             Premise(F29)
	S63= IMem[{pid,addr}]={0,rs,rt,code,54}                     IMem-Hold(S19,S62)
	S64= CtrlASIDIn=0                                           Premise(F30)
	S65= CtrlCP0=0                                              Premise(F31)
	S66= CP0[ASID]=pid                                          CP0-Hold(S22,S65)
	S67= CtrlEPCIn=0                                            Premise(F32)
	S68= CtrlExCodeIn=0                                         Premise(F33)
	S69= CtrlIR=0                                               Premise(F34)
	S70= [IR]={0,rs,rt,code,54}                                 IR-Hold(S26,S69)
	S71= CtrlGPR=0                                              Premise(F35)
	S72= GPR[rs]=a                                              GPR-Hold(S28,S71)
	S73= GPR[rt]=b                                              GPR-Hold(S29,S71)
	S74= CtrlA=1                                                Premise(F36)
	S75= [A]=a                                                  A-Write(S55,S74)
	S76= CtrlB=1                                                Premise(F37)
	S77= [B]=b                                                  B-Write(S57,S76)
	S78= CtrlConditionReg=0                                     Premise(F38)
	S79= CtrlPIDReg=0                                           Premise(F39)

EX	S80= PC.CIA=addr                                            PC-Out(S60)
	S81= PC.CIA31_28=addr[31:28]                                PC-Out(S60)
	S82= PC.Out=addr+4                                          PC-Out(S61)
	S83= CP0.ASID=pid                                           CP0-Read-ASID(S66)
	S84= IR.Out={0,rs,rt,code,54}                               IR-Out(S70)
	S85= IR.Out31_26=0                                          IR-Out(S70)
	S86= IR.Out25_21=rs                                         IR-Out(S70)
	S87= IR.Out20_16=rt                                         IR-Out(S70)
	S88= IR.Out15_6=code                                        IR-Out(S70)
	S89= IR.Out5_0=54                                           IR-Out(S70)
	S90= A.Out=a                                                A-Out(S75)
	S91= A.Out1_0={a}[1:0]                                      A-Out(S75)
	S92= A.Out4_0={a}[4:0]                                      A-Out(S75)
	S93= B.Out=b                                                B-Out(S77)
	S94= B.Out1_0={b}[1:0]                                      B-Out(S77)
	S95= B.Out4_0={b}[4:0]                                      B-Out(S77)
	S96= A.Out=>CMPU.A                                          Premise(F40)
	S97= CMPU.A=a                                               Path(S90,S96)
	S98= B.Out=>CMPU.B                                          Premise(F41)
	S99= CMPU.B=b                                               Path(S93,S98)
	S100= CMPU.Func=6'b000011                                   Premise(F42)
	S101= CMPU.Out=CompareS(a,b)                                CMPU-CMPS(S97,S99)
	S102= CMPU.zero=CompareS(a,b)                               CMPU-CMPS(S97,S99)
	S103= CMPU.gt=CompareS(a,b)                                 CMPU-CMPS(S97,S99)
	S104= CMPU.lt=CompareS(a,b)                                 CMPU-CMPS(S97,S99)
	S105= CMPU.zero=>ConditionReg.In                            Premise(F43)
	S106= ConditionReg.In=CompareS(a,b)                         Path(S102,S105)
	S107= CtrlPC=0                                              Premise(F44)
	S108= CtrlPCInc=0                                           Premise(F45)
	S109= PC[CIA]=addr                                          PC-Hold(S60,S108)
	S110= PC[Out]=addr+4                                        PC-Hold(S61,S107,S108)
	S111= CtrlIMem=0                                            Premise(F46)
	S112= IMem[{pid,addr}]={0,rs,rt,code,54}                    IMem-Hold(S63,S111)
	S113= CtrlASIDIn=0                                          Premise(F47)
	S114= CtrlCP0=0                                             Premise(F48)
	S115= CP0[ASID]=pid                                         CP0-Hold(S66,S114)
	S116= CtrlEPCIn=0                                           Premise(F49)
	S117= CtrlExCodeIn=0                                        Premise(F50)
	S118= CtrlIR=0                                              Premise(F51)
	S119= [IR]={0,rs,rt,code,54}                                IR-Hold(S70,S118)
	S120= CtrlGPR=0                                             Premise(F52)
	S121= GPR[rs]=a                                             GPR-Hold(S72,S120)
	S122= GPR[rt]=b                                             GPR-Hold(S73,S120)
	S123= CtrlA=0                                               Premise(F53)
	S124= [A]=a                                                 A-Hold(S75,S123)
	S125= CtrlB=0                                               Premise(F54)
	S126= [B]=b                                                 B-Hold(S77,S125)
	S127= CtrlConditionReg=1                                    Premise(F55)
	S128= [ConditionReg]=CompareS(a,b)                          ConditionReg-Write(S106,S127)
	S129= CtrlPIDReg=0                                          Premise(F56)

MEM	S130= PC.CIA=addr                                           PC-Out(S109)
	S131= PC.CIA31_28=addr[31:28]                               PC-Out(S109)
	S132= PC.Out=addr+4                                         PC-Out(S110)
	S133= CP0.ASID=pid                                          CP0-Read-ASID(S115)
	S134= IR.Out={0,rs,rt,code,54}                              IR-Out(S119)
	S135= IR.Out31_26=0                                         IR-Out(S119)
	S136= IR.Out25_21=rs                                        IR-Out(S119)
	S137= IR.Out20_16=rt                                        IR-Out(S119)
	S138= IR.Out15_6=code                                       IR-Out(S119)
	S139= IR.Out5_0=54                                          IR-Out(S119)
	S140= A.Out=a                                               A-Out(S124)
	S141= A.Out1_0={a}[1:0]                                     A-Out(S124)
	S142= A.Out4_0={a}[4:0]                                     A-Out(S124)
	S143= B.Out=b                                               B-Out(S126)
	S144= B.Out1_0={b}[1:0]                                     B-Out(S126)
	S145= B.Out4_0={b}[4:0]                                     B-Out(S126)
	S146= ConditionReg.Out=CompareS(a,b)                        ConditionReg-Out(S128)
	S147= ConditionReg.Out1_0={CompareS(a,b)}[1:0]              ConditionReg-Out(S128)
	S148= ConditionReg.Out4_0={CompareS(a,b)}[4:0]              ConditionReg-Out(S128)
	S149= PC.Out=>CP0.EPCIn                                     Premise(F57)
	S150= CP0.EPCIn=addr+4                                      Path(S132,S149)
	S151= CP0.ExCodeIn=5'h0d                                    Premise(F58)
	S152= CU.TrapAddr=>PC.In                                    Premise(F59)
	S153= CP0.ASID=>PIDReg.In                                   Premise(F60)
	S154= PIDReg.In=pid                                         Path(S133,S153)
	S155= ConditionReg.Out=>CU.zero                             Premise(F61)
	S156= CU.zero=CompareS(a,b)                                 Path(S146,S155)
	S157= CtrlPC=0                                              Premise(F62)
	S158= CtrlPCInc=0                                           Premise(F63)
	S159= PC[CIA]=addr                                          PC-Hold(S109,S158)
	S160= PC[Out]=addr+4                                        PC-Hold(S110,S157,S158)
	S161= CtrlIMem=0                                            Premise(F64)
	S162= IMem[{pid,addr}]={0,rs,rt,code,54}                    IMem-Hold(S112,S161)
	S163= CtrlASIDIn=0                                          Premise(F65)
	S164= CtrlCP0=0                                             Premise(F66)
	S165= CP0[ASID]=pid                                         CP0-Hold(S115,S164)
	S166= CtrlEPCIn=0                                           Premise(F67)
	S167= CtrlExCodeIn=0                                        Premise(F68)
	S168= CtrlIR=0                                              Premise(F69)
	S169= [IR]={0,rs,rt,code,54}                                IR-Hold(S119,S168)
	S170= CtrlGPR=0                                             Premise(F70)
	S171= GPR[rs]=a                                             GPR-Hold(S121,S170)
	S172= GPR[rt]=b                                             GPR-Hold(S122,S170)
	S173= CtrlA=0                                               Premise(F71)
	S174= [A]=a                                                 A-Hold(S124,S173)
	S175= CtrlB=0                                               Premise(F72)
	S176= [B]=b                                                 B-Hold(S126,S175)
	S177= CtrlConditionReg=0                                    Premise(F73)
	S178= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S128,S177)
	S179= CtrlPIDReg=0                                          Premise(F74)

WB	S180= PC.CIA=addr                                           PC-Out(S159)
	S181= PC.CIA31_28=addr[31:28]                               PC-Out(S159)
	S182= PC.Out=addr+4                                         PC-Out(S160)
	S183= CP0.ASID=pid                                          CP0-Read-ASID(S165)
	S184= IR.Out={0,rs,rt,code,54}                              IR-Out(S169)
	S185= IR.Out31_26=0                                         IR-Out(S169)
	S186= IR.Out25_21=rs                                        IR-Out(S169)
	S187= IR.Out20_16=rt                                        IR-Out(S169)
	S188= IR.Out15_6=code                                       IR-Out(S169)
	S189= IR.Out5_0=54                                          IR-Out(S169)
	S190= A.Out=a                                               A-Out(S174)
	S191= A.Out1_0={a}[1:0]                                     A-Out(S174)
	S192= A.Out4_0={a}[4:0]                                     A-Out(S174)
	S193= B.Out=b                                               B-Out(S176)
	S194= B.Out1_0={b}[1:0]                                     B-Out(S176)
	S195= B.Out4_0={b}[4:0]                                     B-Out(S176)
	S196= ConditionReg.Out=CompareS(a,b)                        ConditionReg-Out(S178)
	S197= ConditionReg.Out1_0={CompareS(a,b)}[1:0]              ConditionReg-Out(S178)
	S198= ConditionReg.Out4_0={CompareS(a,b)}[4:0]              ConditionReg-Out(S178)
	S199= CtrlPC=0                                              Premise(F75)
	S200= CtrlPCInc=0                                           Premise(F76)
	S201= PC[CIA]=addr                                          PC-Hold(S159,S200)
	S202= PC[Out]=addr+4                                        PC-Hold(S160,S199,S200)
	S203= CtrlIMem=0                                            Premise(F77)
	S204= IMem[{pid,addr}]={0,rs,rt,code,54}                    IMem-Hold(S162,S203)
	S205= CtrlASIDIn=0                                          Premise(F78)
	S206= CtrlCP0=0                                             Premise(F79)
	S207= CP0[ASID]=pid                                         CP0-Hold(S165,S206)
	S208= CtrlEPCIn=0                                           Premise(F80)
	S209= CtrlExCodeIn=0                                        Premise(F81)
	S210= CtrlIR=0                                              Premise(F82)
	S211= [IR]={0,rs,rt,code,54}                                IR-Hold(S169,S210)
	S212= CtrlGPR=0                                             Premise(F83)
	S213= GPR[rs]=a                                             GPR-Hold(S171,S212)
	S214= GPR[rt]=b                                             GPR-Hold(S172,S212)
	S215= CtrlA=0                                               Premise(F84)
	S216= [A]=a                                                 A-Hold(S174,S215)
	S217= CtrlB=0                                               Premise(F85)
	S218= [B]=b                                                 B-Hold(S176,S217)
	S219= CtrlConditionReg=0                                    Premise(F86)
	S220= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S178,S219)
	S221= CtrlPIDReg=0                                          Premise(F87)

POST	S201= PC[CIA]=addr                                          PC-Hold(S159,S200)
	S202= PC[Out]=addr+4                                        PC-Hold(S160,S199,S200)
	S204= IMem[{pid,addr}]={0,rs,rt,code,54}                    IMem-Hold(S162,S203)
	S207= CP0[ASID]=pid                                         CP0-Hold(S165,S206)
	S211= [IR]={0,rs,rt,code,54}                                IR-Hold(S169,S210)
	S213= GPR[rs]=a                                             GPR-Hold(S171,S212)
	S214= GPR[rt]=b                                             GPR-Hold(S172,S212)
	S216= [A]=a                                                 A-Hold(S174,S215)
	S218= [B]=b                                                 B-Hold(S176,S217)
	S220= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S178,S219)

