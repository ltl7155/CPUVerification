
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,0,1424}                      Premise(F2)
	S3= ICache[addr]={31,rT,rA,0,1424}                          Premise(F3)
	S4= GPRegs[rA]=a                                            Premise(F4)
	S5= XER[CA]=ca                                              Premise(F5)
	S6= XER[SO]=so                                              Premise(F6)

IF	S7= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S8= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S9= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S10= PC.Out=addr                                            PC-Out(S1)
	S11= XER.CAOut=ca                                           XER-CA-Out(S5)
	S12= XER.SOOut=so                                           XER-SO-Out(S6)
	S13= PIDReg.Out=>IMMU.PID                                   Premise(F7)
	S14= IMMU.PID=pid                                           Path(S7,S13)
	S15= PC.Out=>IMMU.IEA                                       Premise(F8)
	S16= IMMU.IEA=addr                                          Path(S10,S15)
	S17= IMMU.Addr={pid,addr}                                   IMMU-Search(S14,S16)
	S18= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S14,S16)
	S19= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S20= IAddrReg.In={pid,addr}                                 Path(S17,S19)
	S21= IMMU.Hit=>IMMUHitReg.In                                Premise(F10)
	S22= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S18,S21)
	S23= PC.Out=>ICache.IEA                                     Premise(F11)
	S24= ICache.IEA=addr                                        Path(S10,S23)
	S25= ICache.Hit=ICacheHit(addr)                             ICache-Search(S24)
	S26= ICache.Out={31,rT,rA,0,1424}                           ICache-Search(S24,S3)
	S27= ICache.Out=>ICacheReg.In                               Premise(F12)
	S28= ICacheReg.In={31,rT,rA,0,1424}                         Path(S26,S27)
	S29= ICache.Hit=>ICacheHitReg.In                            Premise(F13)
	S30= ICacheHitReg.In=ICacheHit(addr)                        Path(S25,S29)
	S31= IMMUHitReg.Out=>CU.IMemHit                             Premise(F14)
	S32= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F15)
	S33= IAddrReg.Out=>IMem.RAddr                               Premise(F16)
	S34= IMem.Out=>IRMux.MemData                                Premise(F17)
	S35= ICacheReg.Out=>IRMux.CacheData                         Premise(F18)
	S36= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F19)
	S37= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F20)
	S38= IRMux.Out=>IR.In                                       Premise(F21)
	S39= IMem.MEM8WordOut=>ICache.WData                         Premise(F22)
	S40= PC.Out=>ICache.IEA                                     Premise(F23)
	S41= IR.Out0_5=>CU.Op                                       Premise(F24)
	S42= IR.Out11_15=>GPRegs.RReg1                              Premise(F25)
	S43= IR.Out21_31=>CU.IRFunc                                 Premise(F26)
	S44= GPRegs.Rdata1=>A.In                                    Premise(F27)
	S45= A.Out=>ALU.A                                           Premise(F28)
	S46= B.Out=>ALU.B                                           Premise(F29)
	S47= XER.CAOut=>ALU.CAIn                                    Premise(F30)
	S48= ALU.CAIn=ca                                            Path(S11,S47)
	S49= CU.Func=>ALU.Func                                      Premise(F31)
	S50= ALU.Out=>ALUOut.In                                     Premise(F32)
	S51= ALU.CA=>CAReg.In                                       Premise(F33)
	S52= ALU.OV=>OVReg.In                                       Premise(F34)
	S53= XER.SOOut=>ORGate.A                                    Premise(F35)
	S54= ORGate.A=so                                            Path(S12,S53)
	S55= ALU.OV=>ORGate.B                                       Premise(F36)
	S56= ORGate.Out=>DR1bit.In                                  Premise(F37)
	S57= IR.Out6_10=>GPRegs.WReg                                Premise(F38)
	S58= ALUOut.Out=>GPRegs.WData                               Premise(F39)
	S59= DR1bit.Out=>XER.SOIn                                   Premise(F40)
	S60= CAReg.Out=>XER.CAIn                                    Premise(F41)
	S61= OVReg.Out=>XER.OVIn                                    Premise(F42)
	S62= CtrlPIDReg=0                                           Premise(F43)
	S63= [PIDReg]=pid                                           PIDReg-Hold(S0,S62)
	S64= CtrlIMMU=0                                             Premise(F44)
	S65= CtrlPC=0                                               Premise(F45)
	S66= CtrlPCInc=0                                            Premise(F46)
	S67= PC[Out]=addr                                           PC-Hold(S1,S65,S66)
	S68= CtrlIAddrReg=1                                         Premise(F47)
	S69= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S20,S68)
	S70= CtrlIMMUHitReg=1                                       Premise(F48)
	S71= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S22,S70)
	S72= CtrlICache=0                                           Premise(F49)
	S73= ICache[addr]={31,rT,rA,0,1424}                         ICache-Hold(S3,S72)
	S74= CtrlICacheReg=1                                        Premise(F50)
	S75= [ICacheReg]={31,rT,rA,0,1424}                          ICacheReg-Write(S28,S74)
	S76= CtrlICacheHitReg=1                                     Premise(F51)
	S77= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S30,S76)
	S78= CtrlIMem=0                                             Premise(F52)
	S79= IMem[{pid,addr}]={31,rT,rA,0,1424}                     IMem-Hold(S2,S78)
	S80= CtrlIRMux=0                                            Premise(F53)
	S81= CtrlIR=0                                               Premise(F54)
	S82= CtrlGPRegs=0                                           Premise(F55)
	S83= GPRegs[rA]=a                                           GPRegs-Hold(S4,S82)
	S84= CtrlA=0                                                Premise(F56)
	S85= CtrlB=0                                                Premise(F57)
	S86= CtrlXERSO=0                                            Premise(F58)
	S87= XER[SO]=so                                             XER-SO-Hold(S6,S86)
	S88= CtrlXEROV=0                                            Premise(F59)
	S89= CtrlXERCA=0                                            Premise(F60)
	S90= XER[CA]=ca                                             XER-CA-Hold(S5,S89)
	S91= CtrlALUOut=0                                           Premise(F61)
	S92= CtrlCAReg=0                                            Premise(F62)
	S93= CtrlOVReg=0                                            Premise(F63)
	S94= CtrlDR1bit=0                                           Premise(F64)

IMMU	S95= PIDReg.Out=pid                                         PIDReg-Out(S63)
	S96= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S63)
	S97= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S63)
	S98= PC.Out=addr                                            PC-Out(S67)
	S99= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S69)
	S100= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S69)
	S101= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S69)
	S102= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S71)
	S103= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S71)
	S104= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S71)
	S105= ICacheReg.Out={31,rT,rA,0,1424}                       ICacheReg-Out(S75)
	S106= ICacheReg.Out26_31={31,rT,rA,0,1424}[26:31]           ICacheReg-Out(S75)
	S107= ICacheReg.Out30_31={31,rT,rA,0,1424}[30:31]           ICacheReg-Out(S75)
	S108= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S77)
	S109= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S77)
	S110= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S77)
	S111= XER.SOOut=so                                          XER-SO-Out(S87)
	S112= XER.CAOut=ca                                          XER-CA-Out(S90)
	S113= PIDReg.Out=>IMMU.PID                                  Premise(F65)
	S114= IMMU.PID=pid                                          Path(S95,S113)
	S115= PC.Out=>IMMU.IEA                                      Premise(F66)
	S116= IMMU.IEA=addr                                         Path(S98,S115)
	S117= IMMU.Addr={pid,addr}                                  IMMU-Search(S114,S116)
	S118= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S114,S116)
	S119= IMMU.Addr=>IAddrReg.In                                Premise(F67)
	S120= IAddrReg.In={pid,addr}                                Path(S117,S119)
	S121= IMMU.Hit=>IMMUHitReg.In                               Premise(F68)
	S122= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S118,S121)
	S123= PC.Out=>ICache.IEA                                    Premise(F69)
	S124= ICache.IEA=addr                                       Path(S98,S123)
	S125= ICache.Hit=ICacheHit(addr)                            ICache-Search(S124)
	S126= ICache.Out={31,rT,rA,0,1424}                          ICache-Search(S124,S73)
	S127= ICache.Out=>ICacheReg.In                              Premise(F70)
	S128= ICacheReg.In={31,rT,rA,0,1424}                        Path(S126,S127)
	S129= ICache.Hit=>ICacheHitReg.In                           Premise(F71)
	S130= ICacheHitReg.In=ICacheHit(addr)                       Path(S125,S129)
	S131= IMMUHitReg.Out=>CU.IMemHit                            Premise(F72)
	S132= CU.IMemHit=IMMUHit(pid,addr)                          Path(S102,S131)
	S133= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F73)
	S134= CU.ICacheHit=ICacheHit(addr)                          Path(S108,S133)
	S135= IAddrReg.Out=>IMem.RAddr                              Premise(F74)
	S136= IMem.RAddr={pid,addr}                                 Path(S99,S135)
	S137= IMem.Out={31,rT,rA,0,1424}                            IMem-Read(S136,S79)
	S138= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S136,S79)
	S139= IMem.Out=>IRMux.MemData                               Premise(F75)
	S140= IRMux.MemData={31,rT,rA,0,1424}                       Path(S137,S139)
	S141= ICacheReg.Out=>IRMux.CacheData                        Premise(F76)
	S142= IRMux.CacheData={31,rT,rA,0,1424}                     Path(S105,S141)
	S143= IRMux.Out={31,rT,rA,0,1424}                           IRMux-Select(S140,S142)
	S144= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F77)
	S145= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S102,S144)
	S146= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F78)
	S147= IRMux.CacheSel=ICacheHit(addr)                        Path(S108,S146)
	S148= IRMux.Out=>IR.In                                      Premise(F79)
	S149= IR.In={31,rT,rA,0,1424}                               Path(S143,S148)
	S150= IMem.MEM8WordOut=>ICache.WData                        Premise(F80)
	S151= ICache.WData=IMemGet8Word({pid,addr})                 Path(S138,S150)
	S152= PC.Out=>ICache.IEA                                    Premise(F81)
	S153= IR.Out0_5=>CU.Op                                      Premise(F82)
	S154= IR.Out11_15=>GPRegs.RReg1                             Premise(F83)
	S155= IR.Out21_31=>CU.IRFunc                                Premise(F84)
	S156= GPRegs.Rdata1=>A.In                                   Premise(F85)
	S157= A.Out=>ALU.A                                          Premise(F86)
	S158= B.Out=>ALU.B                                          Premise(F87)
	S159= XER.CAOut=>ALU.CAIn                                   Premise(F88)
	S160= ALU.CAIn=ca                                           Path(S112,S159)
	S161= CU.Func=>ALU.Func                                     Premise(F89)
	S162= ALU.Out=>ALUOut.In                                    Premise(F90)
	S163= ALU.CA=>CAReg.In                                      Premise(F91)
	S164= ALU.OV=>OVReg.In                                      Premise(F92)
	S165= XER.SOOut=>ORGate.A                                   Premise(F93)
	S166= ORGate.A=so                                           Path(S111,S165)
	S167= ALU.OV=>ORGate.B                                      Premise(F94)
	S168= ORGate.Out=>DR1bit.In                                 Premise(F95)
	S169= IR.Out6_10=>GPRegs.WReg                               Premise(F96)
	S170= ALUOut.Out=>GPRegs.WData                              Premise(F97)
	S171= DR1bit.Out=>XER.SOIn                                  Premise(F98)
	S172= CAReg.Out=>XER.CAIn                                   Premise(F99)
	S173= OVReg.Out=>XER.OVIn                                   Premise(F100)
	S174= CtrlPIDReg=0                                          Premise(F101)
	S175= [PIDReg]=pid                                          PIDReg-Hold(S63,S174)
	S176= CtrlIMMU=0                                            Premise(F102)
	S177= CtrlPC=0                                              Premise(F103)
	S178= CtrlPCInc=1                                           Premise(F104)
	S179= PC[Out]=addr+4                                        PC-Inc(S67,S177,S178)
	S180= PC[CIA]=addr                                          PC-Inc(S67,S177,S178)
	S181= CtrlIAddrReg=0                                        Premise(F105)
	S182= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S69,S181)
	S183= CtrlIMMUHitReg=0                                      Premise(F106)
	S184= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S71,S183)
	S185= CtrlICache=0                                          Premise(F107)
	S186= ICache[addr]={31,rT,rA,0,1424}                        ICache-Hold(S73,S185)
	S187= CtrlICacheReg=0                                       Premise(F108)
	S188= [ICacheReg]={31,rT,rA,0,1424}                         ICacheReg-Hold(S75,S187)
	S189= CtrlICacheHitReg=0                                    Premise(F109)
	S190= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S77,S189)
	S191= CtrlIMem=0                                            Premise(F110)
	S192= IMem[{pid,addr}]={31,rT,rA,0,1424}                    IMem-Hold(S79,S191)
	S193= CtrlIRMux=0                                           Premise(F111)
	S194= CtrlIR=1                                              Premise(F112)
	S195= [IR]={31,rT,rA,0,1424}                                IR-Write(S149,S194)
	S196= CtrlGPRegs=0                                          Premise(F113)
	S197= GPRegs[rA]=a                                          GPRegs-Hold(S83,S196)
	S198= CtrlA=0                                               Premise(F114)
	S199= CtrlB=0                                               Premise(F115)
	S200= CtrlXERSO=0                                           Premise(F116)
	S201= XER[SO]=so                                            XER-SO-Hold(S87,S200)
	S202= CtrlXEROV=0                                           Premise(F117)
	S203= CtrlXERCA=0                                           Premise(F118)
	S204= XER[CA]=ca                                            XER-CA-Hold(S90,S203)
	S205= CtrlALUOut=0                                          Premise(F119)
	S206= CtrlCAReg=0                                           Premise(F120)
	S207= CtrlOVReg=0                                           Premise(F121)
	S208= CtrlDR1bit=0                                          Premise(F122)

ID	S209= PIDReg.Out=pid                                        PIDReg-Out(S175)
	S210= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S175)
	S211= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S175)
	S212= PC.Out=addr+4                                         PC-Out(S179)
	S213= PC.CIA=addr                                           PC-Out(S180)
	S214= PC.CIA31_28=addr[31:28]                               PC-Out(S180)
	S215= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S182)
	S216= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S182)
	S217= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S182)
	S218= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S184)
	S219= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S184)
	S220= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S184)
	S221= ICacheReg.Out={31,rT,rA,0,1424}                       ICacheReg-Out(S188)
	S222= ICacheReg.Out26_31={31,rT,rA,0,1424}[26:31]           ICacheReg-Out(S188)
	S223= ICacheReg.Out30_31={31,rT,rA,0,1424}[30:31]           ICacheReg-Out(S188)
	S224= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S190)
	S225= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S190)
	S226= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S190)
	S227= IR.Out0_5=31                                          IR-Out(S195)
	S228= IR.Out6_10=rT                                         IR-Out(S195)
	S229= IR.Out11_15=rA                                        IR-Out(S195)
	S230= IR.Out16_20=0                                         IR-Out(S195)
	S231= IR.Out21_31=1424                                      IR-Out(S195)
	S232= XER.SOOut=so                                          XER-SO-Out(S201)
	S233= XER.CAOut=ca                                          XER-CA-Out(S204)
	S234= PIDReg.Out=>IMMU.PID                                  Premise(F123)
	S235= IMMU.PID=pid                                          Path(S209,S234)
	S236= PC.Out=>IMMU.IEA                                      Premise(F124)
	S237= IMMU.IEA=addr+4                                       Path(S212,S236)
	S238= IMMU.Addr={pid,addr+4}                                IMMU-Search(S235,S237)
	S239= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S235,S237)
	S240= IMMU.Addr=>IAddrReg.In                                Premise(F125)
	S241= IAddrReg.In={pid,addr+4}                              Path(S238,S240)
	S242= IMMU.Hit=>IMMUHitReg.In                               Premise(F126)
	S243= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S239,S242)
	S244= PC.Out=>ICache.IEA                                    Premise(F127)
	S245= ICache.IEA=addr+4                                     Path(S212,S244)
	S246= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S245)
	S247= ICache.Out=>ICacheReg.In                              Premise(F128)
	S248= ICache.Hit=>ICacheHitReg.In                           Premise(F129)
	S249= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S246,S248)
	S250= IMMUHitReg.Out=>CU.IMemHit                            Premise(F130)
	S251= CU.IMemHit=IMMUHit(pid,addr)                          Path(S218,S250)
	S252= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F131)
	S253= CU.ICacheHit=ICacheHit(addr)                          Path(S224,S252)
	S254= IAddrReg.Out=>IMem.RAddr                              Premise(F132)
	S255= IMem.RAddr={pid,addr}                                 Path(S215,S254)
	S256= IMem.Out={31,rT,rA,0,1424}                            IMem-Read(S255,S192)
	S257= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S255,S192)
	S258= IMem.Out=>IRMux.MemData                               Premise(F133)
	S259= IRMux.MemData={31,rT,rA,0,1424}                       Path(S256,S258)
	S260= ICacheReg.Out=>IRMux.CacheData                        Premise(F134)
	S261= IRMux.CacheData={31,rT,rA,0,1424}                     Path(S221,S260)
	S262= IRMux.Out={31,rT,rA,0,1424}                           IRMux-Select(S259,S261)
	S263= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F135)
	S264= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S218,S263)
	S265= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F136)
	S266= IRMux.CacheSel=ICacheHit(addr)                        Path(S224,S265)
	S267= IRMux.Out=>IR.In                                      Premise(F137)
	S268= IR.In={31,rT,rA,0,1424}                               Path(S262,S267)
	S269= IMem.MEM8WordOut=>ICache.WData                        Premise(F138)
	S270= ICache.WData=IMemGet8Word({pid,addr})                 Path(S257,S269)
	S271= PC.Out=>ICache.IEA                                    Premise(F139)
	S272= IR.Out0_5=>CU.Op                                      Premise(F140)
	S273= CU.Op=31                                              Path(S227,S272)
	S274= IR.Out11_15=>GPRegs.RReg1                             Premise(F141)
	S275= GPRegs.RReg1=rA                                       Path(S229,S274)
	S276= GPRegs.Rdata1=a                                       GPRegs-Read(S275,S197)
	S277= IR.Out21_31=>CU.IRFunc                                Premise(F142)
	S278= CU.IRFunc=1424                                        Path(S231,S277)
	S279= CU.Func=alu_subfe                                     CU(S273,S278)
	S280= GPRegs.Rdata1=>A.In                                   Premise(F143)
	S281= A.In=a                                                Path(S276,S280)
	S282= B.In=32'b0                                            Premise(F144)
	S283= A.Out=>ALU.A                                          Premise(F145)
	S284= B.Out=>ALU.B                                          Premise(F146)
	S285= XER.CAOut=>ALU.CAIn                                   Premise(F147)
	S286= ALU.CAIn=ca                                           Path(S233,S285)
	S287= CU.Func=>ALU.Func                                     Premise(F148)
	S288= ALU.Func=alu_subfe                                    Path(S279,S287)
	S289= ALU.Out=>ALUOut.In                                    Premise(F149)
	S290= ALU.CA=>CAReg.In                                      Premise(F150)
	S291= ALU.OV=>OVReg.In                                      Premise(F151)
	S292= XER.SOOut=>ORGate.A                                   Premise(F152)
	S293= ORGate.A=so                                           Path(S232,S292)
	S294= ALU.OV=>ORGate.B                                      Premise(F153)
	S295= ORGate.Out=>DR1bit.In                                 Premise(F154)
	S296= IR.Out6_10=>GPRegs.WReg                               Premise(F155)
	S297= GPRegs.WReg=rT                                        Path(S228,S296)
	S298= ALUOut.Out=>GPRegs.WData                              Premise(F156)
	S299= DR1bit.Out=>XER.SOIn                                  Premise(F157)
	S300= CAReg.Out=>XER.CAIn                                   Premise(F158)
	S301= OVReg.Out=>XER.OVIn                                   Premise(F159)
	S302= CtrlPIDReg=0                                          Premise(F160)
	S303= [PIDReg]=pid                                          PIDReg-Hold(S175,S302)
	S304= CtrlIMMU=0                                            Premise(F161)
	S305= CtrlPC=0                                              Premise(F162)
	S306= CtrlPCInc=0                                           Premise(F163)
	S307= PC[CIA]=addr                                          PC-Hold(S180,S306)
	S308= PC[Out]=addr+4                                        PC-Hold(S179,S305,S306)
	S309= CtrlIAddrReg=0                                        Premise(F164)
	S310= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S182,S309)
	S311= CtrlIMMUHitReg=0                                      Premise(F165)
	S312= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S184,S311)
	S313= CtrlICache=0                                          Premise(F166)
	S314= ICache[addr]={31,rT,rA,0,1424}                        ICache-Hold(S186,S313)
	S315= CtrlICacheReg=0                                       Premise(F167)
	S316= [ICacheReg]={31,rT,rA,0,1424}                         ICacheReg-Hold(S188,S315)
	S317= CtrlICacheHitReg=0                                    Premise(F168)
	S318= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S190,S317)
	S319= CtrlIMem=0                                            Premise(F169)
	S320= IMem[{pid,addr}]={31,rT,rA,0,1424}                    IMem-Hold(S192,S319)
	S321= CtrlIRMux=0                                           Premise(F170)
	S322= CtrlIR=0                                              Premise(F171)
	S323= [IR]={31,rT,rA,0,1424}                                IR-Hold(S195,S322)
	S324= CtrlGPRegs=0                                          Premise(F172)
	S325= GPRegs[rA]=a                                          GPRegs-Hold(S197,S324)
	S326= CtrlA=1                                               Premise(F173)
	S327= [A]=a                                                 A-Write(S281,S326)
	S328= CtrlB=1                                               Premise(F174)
	S329= [B]=32'b0                                             B-Write(S282,S328)
	S330= CtrlXERSO=0                                           Premise(F175)
	S331= XER[SO]=so                                            XER-SO-Hold(S201,S330)
	S332= CtrlXEROV=0                                           Premise(F176)
	S333= CtrlXERCA=0                                           Premise(F177)
	S334= XER[CA]=ca                                            XER-CA-Hold(S204,S333)
	S335= CtrlALUOut=0                                          Premise(F178)
	S336= CtrlCAReg=0                                           Premise(F179)
	S337= CtrlOVReg=0                                           Premise(F180)
	S338= CtrlDR1bit=0                                          Premise(F181)

EX	S339= PIDReg.Out=pid                                        PIDReg-Out(S303)
	S340= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S303)
	S341= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S303)
	S342= PC.CIA=addr                                           PC-Out(S307)
	S343= PC.CIA31_28=addr[31:28]                               PC-Out(S307)
	S344= PC.Out=addr+4                                         PC-Out(S308)
	S345= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S310)
	S346= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S310)
	S347= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S310)
	S348= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S312)
	S349= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S312)
	S350= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S312)
	S351= ICacheReg.Out={31,rT,rA,0,1424}                       ICacheReg-Out(S316)
	S352= ICacheReg.Out26_31={31,rT,rA,0,1424}[26:31]           ICacheReg-Out(S316)
	S353= ICacheReg.Out30_31={31,rT,rA,0,1424}[30:31]           ICacheReg-Out(S316)
	S354= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S318)
	S355= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S318)
	S356= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S318)
	S357= IR.Out0_5=31                                          IR-Out(S323)
	S358= IR.Out6_10=rT                                         IR-Out(S323)
	S359= IR.Out11_15=rA                                        IR-Out(S323)
	S360= IR.Out16_20=0                                         IR-Out(S323)
	S361= IR.Out21_31=1424                                      IR-Out(S323)
	S362= A.Out=a                                               A-Out(S327)
	S363= A.Out26_31=a[26:31]                                   A-Out(S327)
	S364= A.Out30_31=a[30:31]                                   A-Out(S327)
	S365= B.Out=32'b0                                           B-Out(S329)
	S366= B.Out26_31=32'b0[26:31]                               B-Out(S329)
	S367= B.Out30_31=32'b0[30:31]                               B-Out(S329)
	S368= XER.SOOut=so                                          XER-SO-Out(S331)
	S369= XER.CAOut=ca                                          XER-CA-Out(S334)
	S370= PIDReg.Out=>IMMU.PID                                  Premise(F182)
	S371= IMMU.PID=pid                                          Path(S339,S370)
	S372= PC.Out=>IMMU.IEA                                      Premise(F183)
	S373= IMMU.IEA=addr+4                                       Path(S344,S372)
	S374= IMMU.Addr={pid,addr+4}                                IMMU-Search(S371,S373)
	S375= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S371,S373)
	S376= IMMU.Addr=>IAddrReg.In                                Premise(F184)
	S377= IAddrReg.In={pid,addr+4}                              Path(S374,S376)
	S378= IMMU.Hit=>IMMUHitReg.In                               Premise(F185)
	S379= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S375,S378)
	S380= PC.Out=>ICache.IEA                                    Premise(F186)
	S381= ICache.IEA=addr+4                                     Path(S344,S380)
	S382= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S381)
	S383= ICache.Out=>ICacheReg.In                              Premise(F187)
	S384= ICache.Hit=>ICacheHitReg.In                           Premise(F188)
	S385= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S382,S384)
	S386= IMMUHitReg.Out=>CU.IMemHit                            Premise(F189)
	S387= CU.IMemHit=IMMUHit(pid,addr)                          Path(S348,S386)
	S388= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F190)
	S389= CU.ICacheHit=ICacheHit(addr)                          Path(S354,S388)
	S390= IAddrReg.Out=>IMem.RAddr                              Premise(F191)
	S391= IMem.RAddr={pid,addr}                                 Path(S345,S390)
	S392= IMem.Out={31,rT,rA,0,1424}                            IMem-Read(S391,S320)
	S393= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S391,S320)
	S394= IMem.Out=>IRMux.MemData                               Premise(F192)
	S395= IRMux.MemData={31,rT,rA,0,1424}                       Path(S392,S394)
	S396= ICacheReg.Out=>IRMux.CacheData                        Premise(F193)
	S397= IRMux.CacheData={31,rT,rA,0,1424}                     Path(S351,S396)
	S398= IRMux.Out={31,rT,rA,0,1424}                           IRMux-Select(S395,S397)
	S399= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F194)
	S400= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S348,S399)
	S401= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F195)
	S402= IRMux.CacheSel=ICacheHit(addr)                        Path(S354,S401)
	S403= IRMux.Out=>IR.In                                      Premise(F196)
	S404= IR.In={31,rT,rA,0,1424}                               Path(S398,S403)
	S405= IMem.MEM8WordOut=>ICache.WData                        Premise(F197)
	S406= ICache.WData=IMemGet8Word({pid,addr})                 Path(S393,S405)
	S407= PC.Out=>ICache.IEA                                    Premise(F198)
	S408= IR.Out0_5=>CU.Op                                      Premise(F199)
	S409= CU.Op=31                                              Path(S357,S408)
	S410= IR.Out11_15=>GPRegs.RReg1                             Premise(F200)
	S411= GPRegs.RReg1=rA                                       Path(S359,S410)
	S412= GPRegs.Rdata1=a                                       GPRegs-Read(S411,S325)
	S413= IR.Out21_31=>CU.IRFunc                                Premise(F201)
	S414= CU.IRFunc=1424                                        Path(S361,S413)
	S415= CU.Func=alu_subfe                                     CU(S409,S414)
	S416= GPRegs.Rdata1=>A.In                                   Premise(F202)
	S417= A.In=a                                                Path(S412,S416)
	S418= A.Out=>ALU.A                                          Premise(F203)
	S419= ALU.A=a                                               Path(S362,S418)
	S420= B.Out=>ALU.B                                          Premise(F204)
	S421= ALU.B=32'b0                                           Path(S365,S420)
	S422= XER.CAOut=>ALU.CAIn                                   Premise(F205)
	S423= ALU.CAIn=ca                                           Path(S369,S422)
	S424= CU.Func=>ALU.Func                                     Premise(F206)
	S425= ALU.Func=alu_subfe                                    Path(S415,S424)
	S426= ALU.Out=32'b0-a+ca                                    ALU(S419,S421,S423)
	S427= ALU.CMP=Compare0(32'b0-a+ca)                          ALU(S419,S421,S423)
	S428= ALU.OV=OverFlow(32'b0-a+ca)                           ALU(S419,S421,S423)
	S429= ALU.CA=Carry(32'b0-a+ca)                              ALU(S419,S421,S423)
	S430= ALU.Out=>ALUOut.In                                    Premise(F207)
	S431= ALUOut.In=32'b0-a+ca                                  Path(S426,S430)
	S432= ALU.CA=>CAReg.In                                      Premise(F208)
	S433= CAReg.In=Carry(32'b0-a+ca)                            Path(S429,S432)
	S434= ALU.OV=>OVReg.In                                      Premise(F209)
	S435= OVReg.In=OverFlow(32'b0-a+ca)                         Path(S428,S434)
	S436= XER.SOOut=>ORGate.A                                   Premise(F210)
	S437= ORGate.A=so                                           Path(S368,S436)
	S438= ALU.OV=>ORGate.B                                      Premise(F211)
	S439= ORGate.B=OverFlow(32'b0-a+ca)                         Path(S428,S438)
	S440= ORGate.Out=so|OverFlow(32'b0-a+ca)                    ORGate(S437,S439)
	S441= ORGate.Out=>DR1bit.In                                 Premise(F212)
	S442= DR1bit.In=so|OverFlow(32'b0-a+ca)                     Path(S440,S441)
	S443= IR.Out6_10=>GPRegs.WReg                               Premise(F213)
	S444= GPRegs.WReg=rT                                        Path(S358,S443)
	S445= ALUOut.Out=>GPRegs.WData                              Premise(F214)
	S446= DR1bit.Out=>XER.SOIn                                  Premise(F215)
	S447= CAReg.Out=>XER.CAIn                                   Premise(F216)
	S448= OVReg.Out=>XER.OVIn                                   Premise(F217)
	S449= CtrlPIDReg=0                                          Premise(F218)
	S450= [PIDReg]=pid                                          PIDReg-Hold(S303,S449)
	S451= CtrlIMMU=0                                            Premise(F219)
	S452= CtrlPC=0                                              Premise(F220)
	S453= CtrlPCInc=0                                           Premise(F221)
	S454= PC[CIA]=addr                                          PC-Hold(S307,S453)
	S455= PC[Out]=addr+4                                        PC-Hold(S308,S452,S453)
	S456= CtrlIAddrReg=0                                        Premise(F222)
	S457= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S310,S456)
	S458= CtrlIMMUHitReg=0                                      Premise(F223)
	S459= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S312,S458)
	S460= CtrlICache=0                                          Premise(F224)
	S461= ICache[addr]={31,rT,rA,0,1424}                        ICache-Hold(S314,S460)
	S462= CtrlICacheReg=0                                       Premise(F225)
	S463= [ICacheReg]={31,rT,rA,0,1424}                         ICacheReg-Hold(S316,S462)
	S464= CtrlICacheHitReg=0                                    Premise(F226)
	S465= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S318,S464)
	S466= CtrlIMem=0                                            Premise(F227)
	S467= IMem[{pid,addr}]={31,rT,rA,0,1424}                    IMem-Hold(S320,S466)
	S468= CtrlIRMux=0                                           Premise(F228)
	S469= CtrlIR=0                                              Premise(F229)
	S470= [IR]={31,rT,rA,0,1424}                                IR-Hold(S323,S469)
	S471= CtrlGPRegs=0                                          Premise(F230)
	S472= GPRegs[rA]=a                                          GPRegs-Hold(S325,S471)
	S473= CtrlA=0                                               Premise(F231)
	S474= [A]=a                                                 A-Hold(S327,S473)
	S475= CtrlB=0                                               Premise(F232)
	S476= [B]=32'b0                                             B-Hold(S329,S475)
	S477= CtrlXERSO=0                                           Premise(F233)
	S478= XER[SO]=so                                            XER-SO-Hold(S331,S477)
	S479= CtrlXEROV=0                                           Premise(F234)
	S480= CtrlXERCA=0                                           Premise(F235)
	S481= XER[CA]=ca                                            XER-CA-Hold(S334,S480)
	S482= CtrlALUOut=1                                          Premise(F236)
	S483= [ALUOut]=32'b0-a+ca                                   ALUOut-Write(S431,S482)
	S484= CtrlCAReg=1                                           Premise(F237)
	S485= [CAReg]=Carry(32'b0-a+ca)                             CAReg-Write(S433,S484)
	S486= CtrlOVReg=1                                           Premise(F238)
	S487= [OVReg]=OverFlow(32'b0-a+ca)                          OVReg-Write(S435,S486)
	S488= CtrlDR1bit=1                                          Premise(F239)
	S489= [DR1bit]=so|OverFlow(32'b0-a+ca)                      DR1bit-Write(S442,S488)

MEM	S490= PIDReg.Out=pid                                        PIDReg-Out(S450)
	S491= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S450)
	S492= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S450)
	S493= PC.CIA=addr                                           PC-Out(S454)
	S494= PC.CIA31_28=addr[31:28]                               PC-Out(S454)
	S495= PC.Out=addr+4                                         PC-Out(S455)
	S496= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S457)
	S497= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S457)
	S498= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S457)
	S499= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S459)
	S500= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S459)
	S501= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S459)
	S502= ICacheReg.Out={31,rT,rA,0,1424}                       ICacheReg-Out(S463)
	S503= ICacheReg.Out26_31={31,rT,rA,0,1424}[26:31]           ICacheReg-Out(S463)
	S504= ICacheReg.Out30_31={31,rT,rA,0,1424}[30:31]           ICacheReg-Out(S463)
	S505= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S465)
	S506= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S465)
	S507= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S465)
	S508= IR.Out0_5=31                                          IR-Out(S470)
	S509= IR.Out6_10=rT                                         IR-Out(S470)
	S510= IR.Out11_15=rA                                        IR-Out(S470)
	S511= IR.Out16_20=0                                         IR-Out(S470)
	S512= IR.Out21_31=1424                                      IR-Out(S470)
	S513= A.Out=a                                               A-Out(S474)
	S514= A.Out26_31=a[26:31]                                   A-Out(S474)
	S515= A.Out30_31=a[30:31]                                   A-Out(S474)
	S516= B.Out=32'b0                                           B-Out(S476)
	S517= B.Out26_31=32'b0[26:31]                               B-Out(S476)
	S518= B.Out30_31=32'b0[30:31]                               B-Out(S476)
	S519= XER.SOOut=so                                          XER-SO-Out(S478)
	S520= XER.CAOut=ca                                          XER-CA-Out(S481)
	S521= ALUOut.Out=32'b0-a+ca                                 ALUOut-Out(S483)
	S522= ALUOut.Out26_31=32'b0-a+ca[26:31]                     ALUOut-Out(S483)
	S523= ALUOut.Out30_31=32'b0-a+ca[30:31]                     ALUOut-Out(S483)
	S524= CAReg.Out=Carry(32'b0-a+ca)                           CAReg-Out(S485)
	S525= CAReg.Out26_31=Carry(32'b0-a+ca)[26:31]               CAReg-Out(S485)
	S526= CAReg.Out30_31=Carry(32'b0-a+ca)[30:31]               CAReg-Out(S485)
	S527= OVReg.Out=OverFlow(32'b0-a+ca)                        OVReg-Out(S487)
	S528= OVReg.Out26_31=OverFlow(32'b0-a+ca)[26:31]            OVReg-Out(S487)
	S529= OVReg.Out30_31=OverFlow(32'b0-a+ca)[30:31]            OVReg-Out(S487)
	S530= DR1bit.Out=so|OverFlow(32'b0-a+ca)                    DR1bit-Out(S489)
	S531= DR1bit.Out26_31=so|OverFlow(32'b0-a+ca)[26:31]        DR1bit-Out(S489)
	S532= DR1bit.Out30_31=so|OverFlow(32'b0-a+ca)[30:31]        DR1bit-Out(S489)
	S533= PIDReg.Out=>IMMU.PID                                  Premise(F240)
	S534= IMMU.PID=pid                                          Path(S490,S533)
	S535= PC.Out=>IMMU.IEA                                      Premise(F241)
	S536= IMMU.IEA=addr+4                                       Path(S495,S535)
	S537= IMMU.Addr={pid,addr+4}                                IMMU-Search(S534,S536)
	S538= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S534,S536)
	S539= IMMU.Addr=>IAddrReg.In                                Premise(F242)
	S540= IAddrReg.In={pid,addr+4}                              Path(S537,S539)
	S541= IMMU.Hit=>IMMUHitReg.In                               Premise(F243)
	S542= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S538,S541)
	S543= PC.Out=>ICache.IEA                                    Premise(F244)
	S544= ICache.IEA=addr+4                                     Path(S495,S543)
	S545= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S544)
	S546= ICache.Out=>ICacheReg.In                              Premise(F245)
	S547= ICache.Hit=>ICacheHitReg.In                           Premise(F246)
	S548= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S545,S547)
	S549= IMMUHitReg.Out=>CU.IMemHit                            Premise(F247)
	S550= CU.IMemHit=IMMUHit(pid,addr)                          Path(S499,S549)
	S551= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F248)
	S552= CU.ICacheHit=ICacheHit(addr)                          Path(S505,S551)
	S553= IAddrReg.Out=>IMem.RAddr                              Premise(F249)
	S554= IMem.RAddr={pid,addr}                                 Path(S496,S553)
	S555= IMem.Out={31,rT,rA,0,1424}                            IMem-Read(S554,S467)
	S556= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S554,S467)
	S557= IMem.Out=>IRMux.MemData                               Premise(F250)
	S558= IRMux.MemData={31,rT,rA,0,1424}                       Path(S555,S557)
	S559= ICacheReg.Out=>IRMux.CacheData                        Premise(F251)
	S560= IRMux.CacheData={31,rT,rA,0,1424}                     Path(S502,S559)
	S561= IRMux.Out={31,rT,rA,0,1424}                           IRMux-Select(S558,S560)
	S562= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F252)
	S563= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S499,S562)
	S564= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F253)
	S565= IRMux.CacheSel=ICacheHit(addr)                        Path(S505,S564)
	S566= IRMux.Out=>IR.In                                      Premise(F254)
	S567= IR.In={31,rT,rA,0,1424}                               Path(S561,S566)
	S568= IMem.MEM8WordOut=>ICache.WData                        Premise(F255)
	S569= ICache.WData=IMemGet8Word({pid,addr})                 Path(S556,S568)
	S570= PC.Out=>ICache.IEA                                    Premise(F256)
	S571= IR.Out0_5=>CU.Op                                      Premise(F257)
	S572= CU.Op=31                                              Path(S508,S571)
	S573= IR.Out11_15=>GPRegs.RReg1                             Premise(F258)
	S574= GPRegs.RReg1=rA                                       Path(S510,S573)
	S575= GPRegs.Rdata1=a                                       GPRegs-Read(S574,S472)
	S576= IR.Out21_31=>CU.IRFunc                                Premise(F259)
	S577= CU.IRFunc=1424                                        Path(S512,S576)
	S578= CU.Func=alu_subfe                                     CU(S572,S577)
	S579= GPRegs.Rdata1=>A.In                                   Premise(F260)
	S580= A.In=a                                                Path(S575,S579)
	S581= A.Out=>ALU.A                                          Premise(F261)
	S582= ALU.A=a                                               Path(S513,S581)
	S583= B.Out=>ALU.B                                          Premise(F262)
	S584= ALU.B=32'b0                                           Path(S516,S583)
	S585= XER.CAOut=>ALU.CAIn                                   Premise(F263)
	S586= ALU.CAIn=ca                                           Path(S520,S585)
	S587= CU.Func=>ALU.Func                                     Premise(F264)
	S588= ALU.Func=alu_subfe                                    Path(S578,S587)
	S589= ALU.Out=32'b0-a+ca                                    ALU(S582,S584,S586)
	S590= ALU.CMP=Compare0(32'b0-a+ca)                          ALU(S582,S584,S586)
	S591= ALU.OV=OverFlow(32'b0-a+ca)                           ALU(S582,S584,S586)
	S592= ALU.CA=Carry(32'b0-a+ca)                              ALU(S582,S584,S586)
	S593= ALU.Out=>ALUOut.In                                    Premise(F265)
	S594= ALUOut.In=32'b0-a+ca                                  Path(S589,S593)
	S595= ALU.CA=>CAReg.In                                      Premise(F266)
	S596= CAReg.In=Carry(32'b0-a+ca)                            Path(S592,S595)
	S597= ALU.OV=>OVReg.In                                      Premise(F267)
	S598= OVReg.In=OverFlow(32'b0-a+ca)                         Path(S591,S597)
	S599= XER.SOOut=>ORGate.A                                   Premise(F268)
	S600= ORGate.A=so                                           Path(S519,S599)
	S601= ALU.OV=>ORGate.B                                      Premise(F269)
	S602= ORGate.B=OverFlow(32'b0-a+ca)                         Path(S591,S601)
	S603= ORGate.Out=so|OverFlow(32'b0-a+ca)                    ORGate(S600,S602)
	S604= ORGate.Out=>DR1bit.In                                 Premise(F270)
	S605= DR1bit.In=so|OverFlow(32'b0-a+ca)                     Path(S603,S604)
	S606= IR.Out6_10=>GPRegs.WReg                               Premise(F271)
	S607= GPRegs.WReg=rT                                        Path(S509,S606)
	S608= ALUOut.Out=>GPRegs.WData                              Premise(F272)
	S609= GPRegs.WData=32'b0-a+ca                               Path(S521,S608)
	S610= DR1bit.Out=>XER.SOIn                                  Premise(F273)
	S611= XER.SOIn=so|OverFlow(32'b0-a+ca)                      Path(S530,S610)
	S612= CAReg.Out=>XER.CAIn                                   Premise(F274)
	S613= XER.CAIn=Carry(32'b0-a+ca)                            Path(S524,S612)
	S614= OVReg.Out=>XER.OVIn                                   Premise(F275)
	S615= XER.OVIn=OverFlow(32'b0-a+ca)                         Path(S527,S614)
	S616= CtrlPIDReg=0                                          Premise(F276)
	S617= [PIDReg]=pid                                          PIDReg-Hold(S450,S616)
	S618= CtrlIMMU=0                                            Premise(F277)
	S619= CtrlPC=0                                              Premise(F278)
	S620= CtrlPCInc=0                                           Premise(F279)
	S621= PC[CIA]=addr                                          PC-Hold(S454,S620)
	S622= PC[Out]=addr+4                                        PC-Hold(S455,S619,S620)
	S623= CtrlIAddrReg=0                                        Premise(F280)
	S624= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S457,S623)
	S625= CtrlIMMUHitReg=0                                      Premise(F281)
	S626= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S459,S625)
	S627= CtrlICache=0                                          Premise(F282)
	S628= ICache[addr]={31,rT,rA,0,1424}                        ICache-Hold(S461,S627)
	S629= CtrlICacheReg=0                                       Premise(F283)
	S630= [ICacheReg]={31,rT,rA,0,1424}                         ICacheReg-Hold(S463,S629)
	S631= CtrlICacheHitReg=0                                    Premise(F284)
	S632= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S465,S631)
	S633= CtrlIMem=0                                            Premise(F285)
	S634= IMem[{pid,addr}]={31,rT,rA,0,1424}                    IMem-Hold(S467,S633)
	S635= CtrlIRMux=0                                           Premise(F286)
	S636= CtrlIR=0                                              Premise(F287)
	S637= [IR]={31,rT,rA,0,1424}                                IR-Hold(S470,S636)
	S638= CtrlGPRegs=0                                          Premise(F288)
	S639= GPRegs[rA]=a                                          GPRegs-Hold(S472,S638)
	S640= CtrlA=0                                               Premise(F289)
	S641= [A]=a                                                 A-Hold(S474,S640)
	S642= CtrlB=0                                               Premise(F290)
	S643= [B]=32'b0                                             B-Hold(S476,S642)
	S644= CtrlXERSO=0                                           Premise(F291)
	S645= XER[SO]=so                                            XER-SO-Hold(S478,S644)
	S646= CtrlXEROV=0                                           Premise(F292)
	S647= CtrlXERCA=0                                           Premise(F293)
	S648= XER[CA]=ca                                            XER-CA-Hold(S481,S647)
	S649= CtrlALUOut=0                                          Premise(F294)
	S650= [ALUOut]=32'b0-a+ca                                   ALUOut-Hold(S483,S649)
	S651= CtrlCAReg=0                                           Premise(F295)
	S652= [CAReg]=Carry(32'b0-a+ca)                             CAReg-Hold(S485,S651)
	S653= CtrlOVReg=0                                           Premise(F296)
	S654= [OVReg]=OverFlow(32'b0-a+ca)                          OVReg-Hold(S487,S653)
	S655= CtrlDR1bit=0                                          Premise(F297)
	S656= [DR1bit]=so|OverFlow(32'b0-a+ca)                      DR1bit-Hold(S489,S655)

DMMU1	S657= PIDReg.Out=pid                                        PIDReg-Out(S617)
	S658= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S617)
	S659= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S617)
	S660= PC.CIA=addr                                           PC-Out(S621)
	S661= PC.CIA31_28=addr[31:28]                               PC-Out(S621)
	S662= PC.Out=addr+4                                         PC-Out(S622)
	S663= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S624)
	S664= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S624)
	S665= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S624)
	S666= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S626)
	S667= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S626)
	S668= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S626)
	S669= ICacheReg.Out={31,rT,rA,0,1424}                       ICacheReg-Out(S630)
	S670= ICacheReg.Out26_31={31,rT,rA,0,1424}[26:31]           ICacheReg-Out(S630)
	S671= ICacheReg.Out30_31={31,rT,rA,0,1424}[30:31]           ICacheReg-Out(S630)
	S672= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S632)
	S673= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S632)
	S674= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S632)
	S675= IR.Out0_5=31                                          IR-Out(S637)
	S676= IR.Out6_10=rT                                         IR-Out(S637)
	S677= IR.Out11_15=rA                                        IR-Out(S637)
	S678= IR.Out16_20=0                                         IR-Out(S637)
	S679= IR.Out21_31=1424                                      IR-Out(S637)
	S680= A.Out=a                                               A-Out(S641)
	S681= A.Out26_31=a[26:31]                                   A-Out(S641)
	S682= A.Out30_31=a[30:31]                                   A-Out(S641)
	S683= B.Out=32'b0                                           B-Out(S643)
	S684= B.Out26_31=32'b0[26:31]                               B-Out(S643)
	S685= B.Out30_31=32'b0[30:31]                               B-Out(S643)
	S686= XER.SOOut=so                                          XER-SO-Out(S645)
	S687= XER.CAOut=ca                                          XER-CA-Out(S648)
	S688= ALUOut.Out=32'b0-a+ca                                 ALUOut-Out(S650)
	S689= ALUOut.Out26_31=32'b0-a+ca[26:31]                     ALUOut-Out(S650)
	S690= ALUOut.Out30_31=32'b0-a+ca[30:31]                     ALUOut-Out(S650)
	S691= CAReg.Out=Carry(32'b0-a+ca)                           CAReg-Out(S652)
	S692= CAReg.Out26_31=Carry(32'b0-a+ca)[26:31]               CAReg-Out(S652)
	S693= CAReg.Out30_31=Carry(32'b0-a+ca)[30:31]               CAReg-Out(S652)
	S694= OVReg.Out=OverFlow(32'b0-a+ca)                        OVReg-Out(S654)
	S695= OVReg.Out26_31=OverFlow(32'b0-a+ca)[26:31]            OVReg-Out(S654)
	S696= OVReg.Out30_31=OverFlow(32'b0-a+ca)[30:31]            OVReg-Out(S654)
	S697= DR1bit.Out=so|OverFlow(32'b0-a+ca)                    DR1bit-Out(S656)
	S698= DR1bit.Out26_31=so|OverFlow(32'b0-a+ca)[26:31]        DR1bit-Out(S656)
	S699= DR1bit.Out30_31=so|OverFlow(32'b0-a+ca)[30:31]        DR1bit-Out(S656)
	S700= PIDReg.Out=>IMMU.PID                                  Premise(F298)
	S701= IMMU.PID=pid                                          Path(S657,S700)
	S702= PC.Out=>IMMU.IEA                                      Premise(F299)
	S703= IMMU.IEA=addr+4                                       Path(S662,S702)
	S704= IMMU.Addr={pid,addr+4}                                IMMU-Search(S701,S703)
	S705= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S701,S703)
	S706= IMMU.Addr=>IAddrReg.In                                Premise(F300)
	S707= IAddrReg.In={pid,addr+4}                              Path(S704,S706)
	S708= IMMU.Hit=>IMMUHitReg.In                               Premise(F301)
	S709= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S705,S708)
	S710= PC.Out=>ICache.IEA                                    Premise(F302)
	S711= ICache.IEA=addr+4                                     Path(S662,S710)
	S712= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S711)
	S713= ICache.Out=>ICacheReg.In                              Premise(F303)
	S714= ICache.Hit=>ICacheHitReg.In                           Premise(F304)
	S715= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S712,S714)
	S716= IMMUHitReg.Out=>CU.IMemHit                            Premise(F305)
	S717= CU.IMemHit=IMMUHit(pid,addr)                          Path(S666,S716)
	S718= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F306)
	S719= CU.ICacheHit=ICacheHit(addr)                          Path(S672,S718)
	S720= IAddrReg.Out=>IMem.RAddr                              Premise(F307)
	S721= IMem.RAddr={pid,addr}                                 Path(S663,S720)
	S722= IMem.Out={31,rT,rA,0,1424}                            IMem-Read(S721,S634)
	S723= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S721,S634)
	S724= IMem.Out=>IRMux.MemData                               Premise(F308)
	S725= IRMux.MemData={31,rT,rA,0,1424}                       Path(S722,S724)
	S726= ICacheReg.Out=>IRMux.CacheData                        Premise(F309)
	S727= IRMux.CacheData={31,rT,rA,0,1424}                     Path(S669,S726)
	S728= IRMux.Out={31,rT,rA,0,1424}                           IRMux-Select(S725,S727)
	S729= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F310)
	S730= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S666,S729)
	S731= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F311)
	S732= IRMux.CacheSel=ICacheHit(addr)                        Path(S672,S731)
	S733= IRMux.Out=>IR.In                                      Premise(F312)
	S734= IR.In={31,rT,rA,0,1424}                               Path(S728,S733)
	S735= IMem.MEM8WordOut=>ICache.WData                        Premise(F313)
	S736= ICache.WData=IMemGet8Word({pid,addr})                 Path(S723,S735)
	S737= PC.Out=>ICache.IEA                                    Premise(F314)
	S738= IR.Out0_5=>CU.Op                                      Premise(F315)
	S739= CU.Op=31                                              Path(S675,S738)
	S740= IR.Out11_15=>GPRegs.RReg1                             Premise(F316)
	S741= GPRegs.RReg1=rA                                       Path(S677,S740)
	S742= GPRegs.Rdata1=a                                       GPRegs-Read(S741,S639)
	S743= IR.Out21_31=>CU.IRFunc                                Premise(F317)
	S744= CU.IRFunc=1424                                        Path(S679,S743)
	S745= CU.Func=alu_subfe                                     CU(S739,S744)
	S746= GPRegs.Rdata1=>A.In                                   Premise(F318)
	S747= A.In=a                                                Path(S742,S746)
	S748= A.Out=>ALU.A                                          Premise(F319)
	S749= ALU.A=a                                               Path(S680,S748)
	S750= B.Out=>ALU.B                                          Premise(F320)
	S751= ALU.B=32'b0                                           Path(S683,S750)
	S752= XER.CAOut=>ALU.CAIn                                   Premise(F321)
	S753= ALU.CAIn=ca                                           Path(S687,S752)
	S754= CU.Func=>ALU.Func                                     Premise(F322)
	S755= ALU.Func=alu_subfe                                    Path(S745,S754)
	S756= ALU.Out=32'b0-a+ca                                    ALU(S749,S751,S753)
	S757= ALU.CMP=Compare0(32'b0-a+ca)                          ALU(S749,S751,S753)
	S758= ALU.OV=OverFlow(32'b0-a+ca)                           ALU(S749,S751,S753)
	S759= ALU.CA=Carry(32'b0-a+ca)                              ALU(S749,S751,S753)
	S760= ALU.Out=>ALUOut.In                                    Premise(F323)
	S761= ALUOut.In=32'b0-a+ca                                  Path(S756,S760)
	S762= ALU.CA=>CAReg.In                                      Premise(F324)
	S763= CAReg.In=Carry(32'b0-a+ca)                            Path(S759,S762)
	S764= ALU.OV=>OVReg.In                                      Premise(F325)
	S765= OVReg.In=OverFlow(32'b0-a+ca)                         Path(S758,S764)
	S766= XER.SOOut=>ORGate.A                                   Premise(F326)
	S767= ORGate.A=so                                           Path(S686,S766)
	S768= ALU.OV=>ORGate.B                                      Premise(F327)
	S769= ORGate.B=OverFlow(32'b0-a+ca)                         Path(S758,S768)
	S770= ORGate.Out=so|OverFlow(32'b0-a+ca)                    ORGate(S767,S769)
	S771= ORGate.Out=>DR1bit.In                                 Premise(F328)
	S772= DR1bit.In=so|OverFlow(32'b0-a+ca)                     Path(S770,S771)
	S773= IR.Out6_10=>GPRegs.WReg                               Premise(F329)
	S774= GPRegs.WReg=rT                                        Path(S676,S773)
	S775= ALUOut.Out=>GPRegs.WData                              Premise(F330)
	S776= GPRegs.WData=32'b0-a+ca                               Path(S688,S775)
	S777= DR1bit.Out=>XER.SOIn                                  Premise(F331)
	S778= XER.SOIn=so|OverFlow(32'b0-a+ca)                      Path(S697,S777)
	S779= CAReg.Out=>XER.CAIn                                   Premise(F332)
	S780= XER.CAIn=Carry(32'b0-a+ca)                            Path(S691,S779)
	S781= OVReg.Out=>XER.OVIn                                   Premise(F333)
	S782= XER.OVIn=OverFlow(32'b0-a+ca)                         Path(S694,S781)
	S783= CtrlPIDReg=0                                          Premise(F334)
	S784= [PIDReg]=pid                                          PIDReg-Hold(S617,S783)
	S785= CtrlIMMU=0                                            Premise(F335)
	S786= CtrlPC=0                                              Premise(F336)
	S787= CtrlPCInc=0                                           Premise(F337)
	S788= PC[CIA]=addr                                          PC-Hold(S621,S787)
	S789= PC[Out]=addr+4                                        PC-Hold(S622,S786,S787)
	S790= CtrlIAddrReg=0                                        Premise(F338)
	S791= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S624,S790)
	S792= CtrlIMMUHitReg=0                                      Premise(F339)
	S793= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S626,S792)
	S794= CtrlICache=0                                          Premise(F340)
	S795= ICache[addr]={31,rT,rA,0,1424}                        ICache-Hold(S628,S794)
	S796= CtrlICacheReg=0                                       Premise(F341)
	S797= [ICacheReg]={31,rT,rA,0,1424}                         ICacheReg-Hold(S630,S796)
	S798= CtrlICacheHitReg=0                                    Premise(F342)
	S799= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S632,S798)
	S800= CtrlIMem=0                                            Premise(F343)
	S801= IMem[{pid,addr}]={31,rT,rA,0,1424}                    IMem-Hold(S634,S800)
	S802= CtrlIRMux=0                                           Premise(F344)
	S803= CtrlIR=0                                              Premise(F345)
	S804= [IR]={31,rT,rA,0,1424}                                IR-Hold(S637,S803)
	S805= CtrlGPRegs=0                                          Premise(F346)
	S806= GPRegs[rA]=a                                          GPRegs-Hold(S639,S805)
	S807= CtrlA=0                                               Premise(F347)
	S808= [A]=a                                                 A-Hold(S641,S807)
	S809= CtrlB=0                                               Premise(F348)
	S810= [B]=32'b0                                             B-Hold(S643,S809)
	S811= CtrlXERSO=0                                           Premise(F349)
	S812= XER[SO]=so                                            XER-SO-Hold(S645,S811)
	S813= CtrlXEROV=0                                           Premise(F350)
	S814= CtrlXERCA=0                                           Premise(F351)
	S815= XER[CA]=ca                                            XER-CA-Hold(S648,S814)
	S816= CtrlALUOut=0                                          Premise(F352)
	S817= [ALUOut]=32'b0-a+ca                                   ALUOut-Hold(S650,S816)
	S818= CtrlCAReg=0                                           Premise(F353)
	S819= [CAReg]=Carry(32'b0-a+ca)                             CAReg-Hold(S652,S818)
	S820= CtrlOVReg=0                                           Premise(F354)
	S821= [OVReg]=OverFlow(32'b0-a+ca)                          OVReg-Hold(S654,S820)
	S822= CtrlDR1bit=0                                          Premise(F355)
	S823= [DR1bit]=so|OverFlow(32'b0-a+ca)                      DR1bit-Hold(S656,S822)

DMMU2	S824= PIDReg.Out=pid                                        PIDReg-Out(S784)
	S825= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S784)
	S826= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S784)
	S827= PC.CIA=addr                                           PC-Out(S788)
	S828= PC.CIA31_28=addr[31:28]                               PC-Out(S788)
	S829= PC.Out=addr+4                                         PC-Out(S789)
	S830= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S791)
	S831= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S791)
	S832= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S791)
	S833= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S793)
	S834= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S793)
	S835= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S793)
	S836= ICacheReg.Out={31,rT,rA,0,1424}                       ICacheReg-Out(S797)
	S837= ICacheReg.Out26_31={31,rT,rA,0,1424}[26:31]           ICacheReg-Out(S797)
	S838= ICacheReg.Out30_31={31,rT,rA,0,1424}[30:31]           ICacheReg-Out(S797)
	S839= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S799)
	S840= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S799)
	S841= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S799)
	S842= IR.Out0_5=31                                          IR-Out(S804)
	S843= IR.Out6_10=rT                                         IR-Out(S804)
	S844= IR.Out11_15=rA                                        IR-Out(S804)
	S845= IR.Out16_20=0                                         IR-Out(S804)
	S846= IR.Out21_31=1424                                      IR-Out(S804)
	S847= A.Out=a                                               A-Out(S808)
	S848= A.Out26_31=a[26:31]                                   A-Out(S808)
	S849= A.Out30_31=a[30:31]                                   A-Out(S808)
	S850= B.Out=32'b0                                           B-Out(S810)
	S851= B.Out26_31=32'b0[26:31]                               B-Out(S810)
	S852= B.Out30_31=32'b0[30:31]                               B-Out(S810)
	S853= XER.SOOut=so                                          XER-SO-Out(S812)
	S854= XER.CAOut=ca                                          XER-CA-Out(S815)
	S855= ALUOut.Out=32'b0-a+ca                                 ALUOut-Out(S817)
	S856= ALUOut.Out26_31=32'b0-a+ca[26:31]                     ALUOut-Out(S817)
	S857= ALUOut.Out30_31=32'b0-a+ca[30:31]                     ALUOut-Out(S817)
	S858= CAReg.Out=Carry(32'b0-a+ca)                           CAReg-Out(S819)
	S859= CAReg.Out26_31=Carry(32'b0-a+ca)[26:31]               CAReg-Out(S819)
	S860= CAReg.Out30_31=Carry(32'b0-a+ca)[30:31]               CAReg-Out(S819)
	S861= OVReg.Out=OverFlow(32'b0-a+ca)                        OVReg-Out(S821)
	S862= OVReg.Out26_31=OverFlow(32'b0-a+ca)[26:31]            OVReg-Out(S821)
	S863= OVReg.Out30_31=OverFlow(32'b0-a+ca)[30:31]            OVReg-Out(S821)
	S864= DR1bit.Out=so|OverFlow(32'b0-a+ca)                    DR1bit-Out(S823)
	S865= DR1bit.Out26_31=so|OverFlow(32'b0-a+ca)[26:31]        DR1bit-Out(S823)
	S866= DR1bit.Out30_31=so|OverFlow(32'b0-a+ca)[30:31]        DR1bit-Out(S823)
	S867= PIDReg.Out=>IMMU.PID                                  Premise(F356)
	S868= IMMU.PID=pid                                          Path(S824,S867)
	S869= PC.Out=>IMMU.IEA                                      Premise(F357)
	S870= IMMU.IEA=addr+4                                       Path(S829,S869)
	S871= IMMU.Addr={pid,addr+4}                                IMMU-Search(S868,S870)
	S872= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S868,S870)
	S873= IMMU.Addr=>IAddrReg.In                                Premise(F358)
	S874= IAddrReg.In={pid,addr+4}                              Path(S871,S873)
	S875= IMMU.Hit=>IMMUHitReg.In                               Premise(F359)
	S876= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S872,S875)
	S877= PC.Out=>ICache.IEA                                    Premise(F360)
	S878= ICache.IEA=addr+4                                     Path(S829,S877)
	S879= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S878)
	S880= ICache.Out=>ICacheReg.In                              Premise(F361)
	S881= ICache.Hit=>ICacheHitReg.In                           Premise(F362)
	S882= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S879,S881)
	S883= IMMUHitReg.Out=>CU.IMemHit                            Premise(F363)
	S884= CU.IMemHit=IMMUHit(pid,addr)                          Path(S833,S883)
	S885= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F364)
	S886= CU.ICacheHit=ICacheHit(addr)                          Path(S839,S885)
	S887= IAddrReg.Out=>IMem.RAddr                              Premise(F365)
	S888= IMem.RAddr={pid,addr}                                 Path(S830,S887)
	S889= IMem.Out={31,rT,rA,0,1424}                            IMem-Read(S888,S801)
	S890= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S888,S801)
	S891= IMem.Out=>IRMux.MemData                               Premise(F366)
	S892= IRMux.MemData={31,rT,rA,0,1424}                       Path(S889,S891)
	S893= ICacheReg.Out=>IRMux.CacheData                        Premise(F367)
	S894= IRMux.CacheData={31,rT,rA,0,1424}                     Path(S836,S893)
	S895= IRMux.Out={31,rT,rA,0,1424}                           IRMux-Select(S892,S894)
	S896= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F368)
	S897= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S833,S896)
	S898= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F369)
	S899= IRMux.CacheSel=ICacheHit(addr)                        Path(S839,S898)
	S900= IRMux.Out=>IR.In                                      Premise(F370)
	S901= IR.In={31,rT,rA,0,1424}                               Path(S895,S900)
	S902= IMem.MEM8WordOut=>ICache.WData                        Premise(F371)
	S903= ICache.WData=IMemGet8Word({pid,addr})                 Path(S890,S902)
	S904= PC.Out=>ICache.IEA                                    Premise(F372)
	S905= IR.Out0_5=>CU.Op                                      Premise(F373)
	S906= CU.Op=31                                              Path(S842,S905)
	S907= IR.Out11_15=>GPRegs.RReg1                             Premise(F374)
	S908= GPRegs.RReg1=rA                                       Path(S844,S907)
	S909= GPRegs.Rdata1=a                                       GPRegs-Read(S908,S806)
	S910= IR.Out21_31=>CU.IRFunc                                Premise(F375)
	S911= CU.IRFunc=1424                                        Path(S846,S910)
	S912= CU.Func=alu_subfe                                     CU(S906,S911)
	S913= GPRegs.Rdata1=>A.In                                   Premise(F376)
	S914= A.In=a                                                Path(S909,S913)
	S915= A.Out=>ALU.A                                          Premise(F377)
	S916= ALU.A=a                                               Path(S847,S915)
	S917= B.Out=>ALU.B                                          Premise(F378)
	S918= ALU.B=32'b0                                           Path(S850,S917)
	S919= XER.CAOut=>ALU.CAIn                                   Premise(F379)
	S920= ALU.CAIn=ca                                           Path(S854,S919)
	S921= CU.Func=>ALU.Func                                     Premise(F380)
	S922= ALU.Func=alu_subfe                                    Path(S912,S921)
	S923= ALU.Out=32'b0-a+ca                                    ALU(S916,S918,S920)
	S924= ALU.CMP=Compare0(32'b0-a+ca)                          ALU(S916,S918,S920)
	S925= ALU.OV=OverFlow(32'b0-a+ca)                           ALU(S916,S918,S920)
	S926= ALU.CA=Carry(32'b0-a+ca)                              ALU(S916,S918,S920)
	S927= ALU.Out=>ALUOut.In                                    Premise(F381)
	S928= ALUOut.In=32'b0-a+ca                                  Path(S923,S927)
	S929= ALU.CA=>CAReg.In                                      Premise(F382)
	S930= CAReg.In=Carry(32'b0-a+ca)                            Path(S926,S929)
	S931= ALU.OV=>OVReg.In                                      Premise(F383)
	S932= OVReg.In=OverFlow(32'b0-a+ca)                         Path(S925,S931)
	S933= XER.SOOut=>ORGate.A                                   Premise(F384)
	S934= ORGate.A=so                                           Path(S853,S933)
	S935= ALU.OV=>ORGate.B                                      Premise(F385)
	S936= ORGate.B=OverFlow(32'b0-a+ca)                         Path(S925,S935)
	S937= ORGate.Out=so|OverFlow(32'b0-a+ca)                    ORGate(S934,S936)
	S938= ORGate.Out=>DR1bit.In                                 Premise(F386)
	S939= DR1bit.In=so|OverFlow(32'b0-a+ca)                     Path(S937,S938)
	S940= IR.Out6_10=>GPRegs.WReg                               Premise(F387)
	S941= GPRegs.WReg=rT                                        Path(S843,S940)
	S942= ALUOut.Out=>GPRegs.WData                              Premise(F388)
	S943= GPRegs.WData=32'b0-a+ca                               Path(S855,S942)
	S944= DR1bit.Out=>XER.SOIn                                  Premise(F389)
	S945= XER.SOIn=so|OverFlow(32'b0-a+ca)                      Path(S864,S944)
	S946= CAReg.Out=>XER.CAIn                                   Premise(F390)
	S947= XER.CAIn=Carry(32'b0-a+ca)                            Path(S858,S946)
	S948= OVReg.Out=>XER.OVIn                                   Premise(F391)
	S949= XER.OVIn=OverFlow(32'b0-a+ca)                         Path(S861,S948)
	S950= CtrlPIDReg=0                                          Premise(F392)
	S951= [PIDReg]=pid                                          PIDReg-Hold(S784,S950)
	S952= CtrlIMMU=0                                            Premise(F393)
	S953= CtrlPC=0                                              Premise(F394)
	S954= CtrlPCInc=0                                           Premise(F395)
	S955= PC[CIA]=addr                                          PC-Hold(S788,S954)
	S956= PC[Out]=addr+4                                        PC-Hold(S789,S953,S954)
	S957= CtrlIAddrReg=0                                        Premise(F396)
	S958= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S791,S957)
	S959= CtrlIMMUHitReg=0                                      Premise(F397)
	S960= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S793,S959)
	S961= CtrlICache=0                                          Premise(F398)
	S962= ICache[addr]={31,rT,rA,0,1424}                        ICache-Hold(S795,S961)
	S963= CtrlICacheReg=0                                       Premise(F399)
	S964= [ICacheReg]={31,rT,rA,0,1424}                         ICacheReg-Hold(S797,S963)
	S965= CtrlICacheHitReg=0                                    Premise(F400)
	S966= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S799,S965)
	S967= CtrlIMem=0                                            Premise(F401)
	S968= IMem[{pid,addr}]={31,rT,rA,0,1424}                    IMem-Hold(S801,S967)
	S969= CtrlIRMux=0                                           Premise(F402)
	S970= CtrlIR=0                                              Premise(F403)
	S971= [IR]={31,rT,rA,0,1424}                                IR-Hold(S804,S970)
	S972= CtrlGPRegs=0                                          Premise(F404)
	S973= GPRegs[rA]=a                                          GPRegs-Hold(S806,S972)
	S974= CtrlA=0                                               Premise(F405)
	S975= [A]=a                                                 A-Hold(S808,S974)
	S976= CtrlB=0                                               Premise(F406)
	S977= [B]=32'b0                                             B-Hold(S810,S976)
	S978= CtrlXERSO=0                                           Premise(F407)
	S979= XER[SO]=so                                            XER-SO-Hold(S812,S978)
	S980= CtrlXEROV=0                                           Premise(F408)
	S981= CtrlXERCA=0                                           Premise(F409)
	S982= XER[CA]=ca                                            XER-CA-Hold(S815,S981)
	S983= CtrlALUOut=0                                          Premise(F410)
	S984= [ALUOut]=32'b0-a+ca                                   ALUOut-Hold(S817,S983)
	S985= CtrlCAReg=0                                           Premise(F411)
	S986= [CAReg]=Carry(32'b0-a+ca)                             CAReg-Hold(S819,S985)
	S987= CtrlOVReg=0                                           Premise(F412)
	S988= [OVReg]=OverFlow(32'b0-a+ca)                          OVReg-Hold(S821,S987)
	S989= CtrlDR1bit=0                                          Premise(F413)
	S990= [DR1bit]=so|OverFlow(32'b0-a+ca)                      DR1bit-Hold(S823,S989)

WB	S991= PIDReg.Out=pid                                        PIDReg-Out(S951)
	S992= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S951)
	S993= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S951)
	S994= PC.CIA=addr                                           PC-Out(S955)
	S995= PC.CIA31_28=addr[31:28]                               PC-Out(S955)
	S996= PC.Out=addr+4                                         PC-Out(S956)
	S997= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S958)
	S998= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S958)
	S999= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S958)
	S1000= IMMUHitReg.Out=IMMUHit(pid,addr)                     IMMUHitReg-Out(S960)
	S1001= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S960)
	S1002= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S960)
	S1003= ICacheReg.Out={31,rT,rA,0,1424}                      ICacheReg-Out(S964)
	S1004= ICacheReg.Out26_31={31,rT,rA,0,1424}[26:31]          ICacheReg-Out(S964)
	S1005= ICacheReg.Out30_31={31,rT,rA,0,1424}[30:31]          ICacheReg-Out(S964)
	S1006= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S966)
	S1007= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S966)
	S1008= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S966)
	S1009= IR.Out0_5=31                                         IR-Out(S971)
	S1010= IR.Out6_10=rT                                        IR-Out(S971)
	S1011= IR.Out11_15=rA                                       IR-Out(S971)
	S1012= IR.Out16_20=0                                        IR-Out(S971)
	S1013= IR.Out21_31=1424                                     IR-Out(S971)
	S1014= A.Out=a                                              A-Out(S975)
	S1015= A.Out26_31=a[26:31]                                  A-Out(S975)
	S1016= A.Out30_31=a[30:31]                                  A-Out(S975)
	S1017= B.Out=32'b0                                          B-Out(S977)
	S1018= B.Out26_31=32'b0[26:31]                              B-Out(S977)
	S1019= B.Out30_31=32'b0[30:31]                              B-Out(S977)
	S1020= XER.SOOut=so                                         XER-SO-Out(S979)
	S1021= XER.CAOut=ca                                         XER-CA-Out(S982)
	S1022= ALUOut.Out=32'b0-a+ca                                ALUOut-Out(S984)
	S1023= ALUOut.Out26_31=32'b0-a+ca[26:31]                    ALUOut-Out(S984)
	S1024= ALUOut.Out30_31=32'b0-a+ca[30:31]                    ALUOut-Out(S984)
	S1025= CAReg.Out=Carry(32'b0-a+ca)                          CAReg-Out(S986)
	S1026= CAReg.Out26_31=Carry(32'b0-a+ca)[26:31]              CAReg-Out(S986)
	S1027= CAReg.Out30_31=Carry(32'b0-a+ca)[30:31]              CAReg-Out(S986)
	S1028= OVReg.Out=OverFlow(32'b0-a+ca)                       OVReg-Out(S988)
	S1029= OVReg.Out26_31=OverFlow(32'b0-a+ca)[26:31]           OVReg-Out(S988)
	S1030= OVReg.Out30_31=OverFlow(32'b0-a+ca)[30:31]           OVReg-Out(S988)
	S1031= DR1bit.Out=so|OverFlow(32'b0-a+ca)                   DR1bit-Out(S990)
	S1032= DR1bit.Out26_31=so|OverFlow(32'b0-a+ca)[26:31]       DR1bit-Out(S990)
	S1033= DR1bit.Out30_31=so|OverFlow(32'b0-a+ca)[30:31]       DR1bit-Out(S990)
	S1034= PIDReg.Out=>IMMU.PID                                 Premise(F414)
	S1035= IMMU.PID=pid                                         Path(S991,S1034)
	S1036= PC.Out=>IMMU.IEA                                     Premise(F415)
	S1037= IMMU.IEA=addr+4                                      Path(S996,S1036)
	S1038= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1035,S1037)
	S1039= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1035,S1037)
	S1040= IMMU.Addr=>IAddrReg.In                               Premise(F416)
	S1041= IAddrReg.In={pid,addr+4}                             Path(S1038,S1040)
	S1042= IMMU.Hit=>IMMUHitReg.In                              Premise(F417)
	S1043= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1039,S1042)
	S1044= PC.Out=>ICache.IEA                                   Premise(F418)
	S1045= ICache.IEA=addr+4                                    Path(S996,S1044)
	S1046= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1045)
	S1047= ICache.Out=>ICacheReg.In                             Premise(F419)
	S1048= ICache.Hit=>ICacheHitReg.In                          Premise(F420)
	S1049= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1046,S1048)
	S1050= IMMUHitReg.Out=>CU.IMemHit                           Premise(F421)
	S1051= CU.IMemHit=IMMUHit(pid,addr)                         Path(S1000,S1050)
	S1052= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F422)
	S1053= CU.ICacheHit=ICacheHit(addr)                         Path(S1006,S1052)
	S1054= IAddrReg.Out=>IMem.RAddr                             Premise(F423)
	S1055= IMem.RAddr={pid,addr}                                Path(S997,S1054)
	S1056= IMem.Out={31,rT,rA,0,1424}                           IMem-Read(S1055,S968)
	S1057= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1055,S968)
	S1058= IMem.Out=>IRMux.MemData                              Premise(F424)
	S1059= IRMux.MemData={31,rT,rA,0,1424}                      Path(S1056,S1058)
	S1060= ICacheReg.Out=>IRMux.CacheData                       Premise(F425)
	S1061= IRMux.CacheData={31,rT,rA,0,1424}                    Path(S1003,S1060)
	S1062= IRMux.Out={31,rT,rA,0,1424}                          IRMux-Select(S1059,S1061)
	S1063= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F426)
	S1064= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S1000,S1063)
	S1065= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F427)
	S1066= IRMux.CacheSel=ICacheHit(addr)                       Path(S1006,S1065)
	S1067= IRMux.Out=>IR.In                                     Premise(F428)
	S1068= IR.In={31,rT,rA,0,1424}                              Path(S1062,S1067)
	S1069= IMem.MEM8WordOut=>ICache.WData                       Premise(F429)
	S1070= ICache.WData=IMemGet8Word({pid,addr})                Path(S1057,S1069)
	S1071= PC.Out=>ICache.IEA                                   Premise(F430)
	S1072= IR.Out0_5=>CU.Op                                     Premise(F431)
	S1073= CU.Op=31                                             Path(S1009,S1072)
	S1074= IR.Out11_15=>GPRegs.RReg1                            Premise(F432)
	S1075= GPRegs.RReg1=rA                                      Path(S1011,S1074)
	S1076= GPRegs.Rdata1=a                                      GPRegs-Read(S1075,S973)
	S1077= IR.Out21_31=>CU.IRFunc                               Premise(F433)
	S1078= CU.IRFunc=1424                                       Path(S1013,S1077)
	S1079= CU.Func=alu_subfe                                    CU(S1073,S1078)
	S1080= GPRegs.Rdata1=>A.In                                  Premise(F434)
	S1081= A.In=a                                               Path(S1076,S1080)
	S1082= A.Out=>ALU.A                                         Premise(F435)
	S1083= ALU.A=a                                              Path(S1014,S1082)
	S1084= B.Out=>ALU.B                                         Premise(F436)
	S1085= ALU.B=32'b0                                          Path(S1017,S1084)
	S1086= XER.CAOut=>ALU.CAIn                                  Premise(F437)
	S1087= ALU.CAIn=ca                                          Path(S1021,S1086)
	S1088= CU.Func=>ALU.Func                                    Premise(F438)
	S1089= ALU.Func=alu_subfe                                   Path(S1079,S1088)
	S1090= ALU.Out=32'b0-a+ca                                   ALU(S1083,S1085,S1087)
	S1091= ALU.CMP=Compare0(32'b0-a+ca)                         ALU(S1083,S1085,S1087)
	S1092= ALU.OV=OverFlow(32'b0-a+ca)                          ALU(S1083,S1085,S1087)
	S1093= ALU.CA=Carry(32'b0-a+ca)                             ALU(S1083,S1085,S1087)
	S1094= ALU.Out=>ALUOut.In                                   Premise(F439)
	S1095= ALUOut.In=32'b0-a+ca                                 Path(S1090,S1094)
	S1096= ALU.CA=>CAReg.In                                     Premise(F440)
	S1097= CAReg.In=Carry(32'b0-a+ca)                           Path(S1093,S1096)
	S1098= ALU.OV=>OVReg.In                                     Premise(F441)
	S1099= OVReg.In=OverFlow(32'b0-a+ca)                        Path(S1092,S1098)
	S1100= XER.SOOut=>ORGate.A                                  Premise(F442)
	S1101= ORGate.A=so                                          Path(S1020,S1100)
	S1102= ALU.OV=>ORGate.B                                     Premise(F443)
	S1103= ORGate.B=OverFlow(32'b0-a+ca)                        Path(S1092,S1102)
	S1104= ORGate.Out=so|OverFlow(32'b0-a+ca)                   ORGate(S1101,S1103)
	S1105= ORGate.Out=>DR1bit.In                                Premise(F444)
	S1106= DR1bit.In=so|OverFlow(32'b0-a+ca)                    Path(S1104,S1105)
	S1107= IR.Out6_10=>GPRegs.WReg                              Premise(F445)
	S1108= GPRegs.WReg=rT                                       Path(S1010,S1107)
	S1109= ALUOut.Out=>GPRegs.WData                             Premise(F446)
	S1110= GPRegs.WData=32'b0-a+ca                              Path(S1022,S1109)
	S1111= DR1bit.Out=>XER.SOIn                                 Premise(F447)
	S1112= XER.SOIn=so|OverFlow(32'b0-a+ca)                     Path(S1031,S1111)
	S1113= CAReg.Out=>XER.CAIn                                  Premise(F448)
	S1114= XER.CAIn=Carry(32'b0-a+ca)                           Path(S1025,S1113)
	S1115= OVReg.Out=>XER.OVIn                                  Premise(F449)
	S1116= XER.OVIn=OverFlow(32'b0-a+ca)                        Path(S1028,S1115)
	S1117= CtrlPIDReg=0                                         Premise(F450)
	S1118= [PIDReg]=pid                                         PIDReg-Hold(S951,S1117)
	S1119= CtrlIMMU=0                                           Premise(F451)
	S1120= CtrlPC=0                                             Premise(F452)
	S1121= CtrlPCInc=0                                          Premise(F453)
	S1122= PC[CIA]=addr                                         PC-Hold(S955,S1121)
	S1123= PC[Out]=addr+4                                       PC-Hold(S956,S1120,S1121)
	S1124= CtrlIAddrReg=0                                       Premise(F454)
	S1125= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S958,S1124)
	S1126= CtrlIMMUHitReg=0                                     Premise(F455)
	S1127= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S960,S1126)
	S1128= CtrlICache=0                                         Premise(F456)
	S1129= ICache[addr]={31,rT,rA,0,1424}                       ICache-Hold(S962,S1128)
	S1130= CtrlICacheReg=0                                      Premise(F457)
	S1131= [ICacheReg]={31,rT,rA,0,1424}                        ICacheReg-Hold(S964,S1130)
	S1132= CtrlICacheHitReg=0                                   Premise(F458)
	S1133= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S966,S1132)
	S1134= CtrlIMem=0                                           Premise(F459)
	S1135= IMem[{pid,addr}]={31,rT,rA,0,1424}                   IMem-Hold(S968,S1134)
	S1136= CtrlIRMux=0                                          Premise(F460)
	S1137= CtrlIR=0                                             Premise(F461)
	S1138= [IR]={31,rT,rA,0,1424}                               IR-Hold(S971,S1137)
	S1139= CtrlGPRegs=1                                         Premise(F462)
	S1140= GPRegs[rT]=32'b0-a+ca                                GPRegs-Write(S1108,S1110,S1139)
	S1141= CtrlA=0                                              Premise(F463)
	S1142= [A]=a                                                A-Hold(S975,S1141)
	S1143= CtrlB=0                                              Premise(F464)
	S1144= [B]=32'b0                                            B-Hold(S977,S1143)
	S1145= CtrlXERSO=1                                          Premise(F465)
	S1146= XER[SO]=so|OverFlow(32'b0-a+ca)                      XER-SO-Write(S1112,S1145)
	S1147= CtrlXEROV=1                                          Premise(F466)
	S1148= XER[OV]=OverFlow(32'b0-a+ca)                         XER-OV-Write(S1116,S1147)
	S1149= CtrlXERCA=1                                          Premise(F467)
	S1150= XER[CA]=Carry(32'b0-a+ca)                            XER-CA-Write(S1114,S1149)
	S1151= CtrlALUOut=0                                         Premise(F468)
	S1152= [ALUOut]=32'b0-a+ca                                  ALUOut-Hold(S984,S1151)
	S1153= CtrlCAReg=0                                          Premise(F469)
	S1154= [CAReg]=Carry(32'b0-a+ca)                            CAReg-Hold(S986,S1153)
	S1155= CtrlOVReg=0                                          Premise(F470)
	S1156= [OVReg]=OverFlow(32'b0-a+ca)                         OVReg-Hold(S988,S1155)
	S1157= CtrlDR1bit=0                                         Premise(F471)
	S1158= [DR1bit]=so|OverFlow(32'b0-a+ca)                     DR1bit-Hold(S990,S1157)

POST	S1118= [PIDReg]=pid                                         PIDReg-Hold(S951,S1117)
	S1122= PC[CIA]=addr                                         PC-Hold(S955,S1121)
	S1123= PC[Out]=addr+4                                       PC-Hold(S956,S1120,S1121)
	S1125= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S958,S1124)
	S1127= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S960,S1126)
	S1129= ICache[addr]={31,rT,rA,0,1424}                       ICache-Hold(S962,S1128)
	S1131= [ICacheReg]={31,rT,rA,0,1424}                        ICacheReg-Hold(S964,S1130)
	S1133= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S966,S1132)
	S1135= IMem[{pid,addr}]={31,rT,rA,0,1424}                   IMem-Hold(S968,S1134)
	S1138= [IR]={31,rT,rA,0,1424}                               IR-Hold(S971,S1137)
	S1140= GPRegs[rT]=32'b0-a+ca                                GPRegs-Write(S1108,S1110,S1139)
	S1142= [A]=a                                                A-Hold(S975,S1141)
	S1144= [B]=32'b0                                            B-Hold(S977,S1143)
	S1146= XER[SO]=so|OverFlow(32'b0-a+ca)                      XER-SO-Write(S1112,S1145)
	S1148= XER[OV]=OverFlow(32'b0-a+ca)                         XER-OV-Write(S1116,S1147)
	S1150= XER[CA]=Carry(32'b0-a+ca)                            XER-CA-Write(S1114,S1149)
	S1152= [ALUOut]=32'b0-a+ca                                  ALUOut-Hold(S984,S1151)
	S1154= [CAReg]=Carry(32'b0-a+ca)                            CAReg-Hold(S986,S1153)
	S1156= [OVReg]=OverFlow(32'b0-a+ca)                         OVReg-Hold(S988,S1155)
	S1158= [DR1bit]=so|OverFlow(32'b0-a+ca)                     DR1bit-Hold(S990,S1157)

