
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={1,rs,14,imm}                          Premise(F2)
	S3= GPR[rs]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={1,rs,14,imm}                                 IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR_ID.In                                     Premise(F7)
	S12= IR_ID.In={1,rs,14,imm}                                 Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F40)
	S14= CtrlPCInc=1                                            Premise(F41)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlCP0=0                                              Premise(F44)
	S17= CP0[ASID]=pid                                          CP0-Hold(S0,S16)
	S18= CtrlIR_ID=1                                            Premise(F47)
	S19= [IR_ID]={1,rs,14,imm}                                  IR_ID-Write(S12,S18)
	S20= CtrlGPR=0                                              Premise(F48)
	S21= GPR[rs]=a                                              GPR-Hold(S3,S20)

ID	S22= IR_ID.Out={1,rs,14,imm}                                IR-Out(S19)
	S23= IR_ID.Out25_21=rs                                      IR-Out(S19)
	S24= IR_ID.Out25_21=>GPR.RReg1                              Premise(F64)
	S25= GPR.RReg1=rs                                           Path(S23,S24)
	S26= GPR.Rdata1=a                                           GPR-Read(S25,S21)
	S27= GPR.Rdata1=>FU.InID1                                   Premise(F66)
	S28= FU.InID1=a                                             Path(S26,S27)
	S29= FU.OutID1=FU(a)                                        FU-Forward(S28)
	S30= FU.OutID1=>A_EX.In                                     Premise(F68)
	S31= A_EX.In=FU(a)                                          Path(S29,S30)
	S32= IR_ID.Out=>IR_EX.In                                    Premise(F69)
	S33= IR_EX.In={1,rs,14,imm}                                 Path(S22,S32)
	S34= CtrlPC=0                                               Premise(F93)
	S35= CtrlPCInc=0                                            Premise(F94)
	S36= PC[Out]=addr+4                                         PC-Hold(S15,S34,S35)
	S37= CtrlCP0=0                                              Premise(F97)
	S38= CP0[ASID]=pid                                          CP0-Hold(S17,S37)
	S39= CtrlA_EX=1                                             Premise(F102)
	S40= [A_EX]=FU(a)                                           A_EX-Write(S31,S39)
	S41= CtrlIR_EX=1                                            Premise(F103)
	S42= [IR_EX]={1,rs,14,imm}                                  IR_EX-Write(S33,S41)

EX	S43= A_EX.Out=FU(a)                                         A_EX-Out(S40)
	S44= IR_EX.Out15_0=imm                                      IR_EX-Out(S42)
	S45= A_EX.Out=>CMPU.A                                       Premise(F128)
	S46= CMPU.A=FU(a)                                           Path(S43,S45)
	S47= IR_EX.Out15_0=>IMMEXT.In                               Premise(F129)
	S48= IMMEXT.In=imm                                          Path(S44,S47)
	S49= IMMEXT.Out={16{imm[15]},imm}                           IMMEXT(S48)
	S50= IMMEXT.Out=>CMPU.B                                     Premise(F130)
	S51= CMPU.B={16{imm[15]},imm}                               Path(S49,S50)
	S52= CMPU.zero=CompareS(FU(a),{16{imm[15]},imm})            CMPU-CMPS(S46,S51)
	S53= CMPU.zero=>ConditionReg_MEM.In                         Premise(F132)
	S54= ConditionReg_MEM.In=CompareS(FU(a),{16{imm[15]},imm})  Path(S52,S53)
	S55= CtrlPC=0                                               Premise(F147)
	S56= CtrlPCInc=0                                            Premise(F148)
	S57= PC[Out]=addr+4                                         PC-Hold(S36,S55,S56)
	S58= CtrlCP0=0                                              Premise(F151)
	S59= CP0[ASID]=pid                                          CP0-Hold(S38,S58)
	S60= CtrlConditionReg_MEM=1                                 Premise(F158)
	S61= [ConditionReg_MEM]=CompareS(FU(a),{16{imm[15]},imm})   ConditionReg_MEM-Write(S54,S60)

MEM	S62= PC.Out=addr+4                                          PC-Out(S57)
	S63= CP0.ASID=pid                                           CP0-Read-ASID(S59)
	S64= ConditionReg_MEM.Out=CompareS(FU(a),{16{imm[15]},imm}) ConditionReg_MEM-Out(S61)
	S65= PC.Out=>CP0.EPCIn                                      Premise(F190)
	S66= CP0.EPCIn=addr+4                                       Path(S62,S65)
	S67= CP0.ExCodeIn=5'h0d                                     Premise(F191)
	S68= CP0.ASID=>PIDReg.In                                    Premise(F193)
	S69= PIDReg.In=pid                                          Path(S63,S68)
	S70= ConditionReg_MEM.Out=>ConditionReg_WB.In               Premise(F196)
	S71= ConditionReg_WB.In=CompareS(FU(a),{16{imm[15]},imm})   Path(S64,S70)
	S72= CtrlEPCIn=1                                            Premise(F206)
	S73= CP0[EPC]=addr+4                                        CP0-Write-EPC(S66,S72)
	S74= CtrlExCodeIn=1                                         Premise(F207)
	S75= CP0[ExCode]=5'h0d                                      CP0-Write-ExCode(S67,S74)
	S76= CtrlPIDReg=1                                           Premise(F214)
	S77= [PIDReg]=pid                                           PIDReg-Write(S69,S76)
	S78= CtrlConditionReg_WB=1                                  Premise(F216)
	S79= [ConditionReg_WB]=CompareS(FU(a),{16{imm[15]},imm})    ConditionReg_WB-Write(S71,S78)

WB	S80= CtrlCP0=0                                              Premise(F258)
	S81= CP0[EPC]=addr+4                                        CP0-Hold(S73,S80)
	S82= CP0[ExCode]=5'h0d                                      CP0-Hold(S75,S80)
	S83= CtrlPIDReg=0                                           Premise(F267)
	S84= [PIDReg]=pid                                           PIDReg-Hold(S77,S83)
	S85= CtrlConditionReg_WB=0                                  Premise(F269)
	S86= [ConditionReg_WB]=CompareS(FU(a),{16{imm[15]},imm})    ConditionReg_WB-Hold(S79,S85)

POST	S81= CP0[EPC]=addr+4                                        CP0-Hold(S73,S80)
	S82= CP0[ExCode]=5'h0d                                      CP0-Hold(S75,S80)
	S84= [PIDReg]=pid                                           PIDReg-Hold(S77,S83)
	S86= [ConditionReg_WB]=CompareS(FU(a),{16{imm[15]},imm})    ConditionReg_WB-Hold(S79,S85)

