
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={1,rs,14,imm}                          Premise(F2)
	S3= GPR[rs]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={1,rs,14,imm}                                 IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR.In                                        Premise(F6)
	S12= IR.In={1,rs,14,imm}                                    Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F7)
	S14= CtrlPCInc=1                                            Premise(F8)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= PC[CIA]=addr                                           PC-Inc(S1,S13,S14)
	S17= CtrlIMem=0                                             Premise(F9)
	S18= IMem[{pid,addr}]={1,rs,14,imm}                         IMem-Hold(S2,S17)
	S19= CtrlASIDIn=0                                           Premise(F10)
	S20= CtrlCP0=0                                              Premise(F11)
	S21= CP0[ASID]=pid                                          CP0-Hold(S0,S20)
	S22= CtrlEPCIn=0                                            Premise(F12)
	S23= CtrlExCodeIn=0                                         Premise(F13)
	S24= CtrlIR=1                                               Premise(F14)
	S25= [IR]={1,rs,14,imm}                                     IR-Write(S12,S24)
	S26= CtrlGPR=0                                              Premise(F15)
	S27= GPR[rs]=a                                              GPR-Hold(S3,S26)
	S28= CtrlA=0                                                Premise(F16)
	S29= CtrlB=0                                                Premise(F17)
	S30= CtrlConditionReg=0                                     Premise(F18)
	S31= CtrlPIDReg=0                                           Premise(F19)

ID	S32= PC.Out=addr+4                                          PC-Out(S15)
	S33= PC.CIA=addr                                            PC-Out(S16)
	S34= PC.CIA31_28=addr[31:28]                                PC-Out(S16)
	S35= CP0.ASID=pid                                           CP0-Read-ASID(S21)
	S36= IR.Out={1,rs,14,imm}                                   IR-Out(S25)
	S37= IR.Out31_26=1                                          IR-Out(S25)
	S38= IR.Out25_21=rs                                         IR-Out(S25)
	S39= IR.Out20_16=14                                         IR-Out(S25)
	S40= IR.Out15_0=imm                                         IR-Out(S25)
	S41= IR.Out31_26=>CU.Op                                     Premise(F20)
	S42= CU.Op=1                                                Path(S37,S41)
	S43= IR.Out25_21=>GPR.RReg1                                 Premise(F21)
	S44= GPR.RReg1=rs                                           Path(S38,S43)
	S45= GPR.Rdata1=a                                           GPR-Read(S44,S27)
	S46= IR.Out20_16=>CU.IRFunc1                                Premise(F22)
	S47= CU.IRFunc1=14                                          Path(S39,S46)
	S48= IR.Out15_0=>IMMEXT.In                                  Premise(F23)
	S49= IMMEXT.In=imm                                          Path(S40,S48)
	S50= IMMEXT.Out={16{imm[15]},imm}                           IMMEXT(S49)
	S51= GPR.Rdata1=>A.In                                       Premise(F24)
	S52= A.In=a                                                 Path(S45,S51)
	S53= IMMEXT.Out=>B.In                                       Premise(F25)
	S54= B.In={16{imm[15]},imm}                                 Path(S50,S53)
	S55= CtrlPC=0                                               Premise(F26)
	S56= CtrlPCInc=0                                            Premise(F27)
	S57= PC[CIA]=addr                                           PC-Hold(S16,S56)
	S58= PC[Out]=addr+4                                         PC-Hold(S15,S55,S56)
	S59= CtrlIMem=0                                             Premise(F28)
	S60= IMem[{pid,addr}]={1,rs,14,imm}                         IMem-Hold(S18,S59)
	S61= CtrlASIDIn=0                                           Premise(F29)
	S62= CtrlCP0=0                                              Premise(F30)
	S63= CP0[ASID]=pid                                          CP0-Hold(S21,S62)
	S64= CtrlEPCIn=0                                            Premise(F31)
	S65= CtrlExCodeIn=0                                         Premise(F32)
	S66= CtrlIR=0                                               Premise(F33)
	S67= [IR]={1,rs,14,imm}                                     IR-Hold(S25,S66)
	S68= CtrlGPR=0                                              Premise(F34)
	S69= GPR[rs]=a                                              GPR-Hold(S27,S68)
	S70= CtrlA=1                                                Premise(F35)
	S71= [A]=a                                                  A-Write(S52,S70)
	S72= CtrlB=1                                                Premise(F36)
	S73= [B]={16{imm[15]},imm}                                  B-Write(S54,S72)
	S74= CtrlConditionReg=0                                     Premise(F37)
	S75= CtrlPIDReg=0                                           Premise(F38)

EX	S76= PC.CIA=addr                                            PC-Out(S57)
	S77= PC.CIA31_28=addr[31:28]                                PC-Out(S57)
	S78= PC.Out=addr+4                                          PC-Out(S58)
	S79= CP0.ASID=pid                                           CP0-Read-ASID(S63)
	S80= IR.Out={1,rs,14,imm}                                   IR-Out(S67)
	S81= IR.Out31_26=1                                          IR-Out(S67)
	S82= IR.Out25_21=rs                                         IR-Out(S67)
	S83= IR.Out20_16=14                                         IR-Out(S67)
	S84= IR.Out15_0=imm                                         IR-Out(S67)
	S85= A.Out=a                                                A-Out(S71)
	S86= A.Out1_0={a}[1:0]                                      A-Out(S71)
	S87= A.Out4_0={a}[4:0]                                      A-Out(S71)
	S88= B.Out={16{imm[15]},imm}                                B-Out(S73)
	S89= B.Out1_0={{16{imm[15]},imm}}[1:0]                      B-Out(S73)
	S90= B.Out4_0={{16{imm[15]},imm}}[4:0]                      B-Out(S73)
	S91= A.Out=>CMPU.A                                          Premise(F39)
	S92= CMPU.A=a                                               Path(S85,S91)
	S93= B.Out=>CMPU.B                                          Premise(F40)
	S94= CMPU.B={16{imm[15]},imm}                               Path(S88,S93)
	S95= CMPU.Func=6'b000011                                    Premise(F41)
	S96= CMPU.Out=CompareS(a,{16{imm[15]},imm})                 CMPU-CMPS(S92,S94)
	S97= CMPU.zero=CompareS(a,{16{imm[15]},imm})                CMPU-CMPS(S92,S94)
	S98= CMPU.gt=CompareS(a,{16{imm[15]},imm})                  CMPU-CMPS(S92,S94)
	S99= CMPU.lt=CompareS(a,{16{imm[15]},imm})                  CMPU-CMPS(S92,S94)
	S100= CMPU.zero=>ConditionReg.In                            Premise(F42)
	S101= ConditionReg.In=CompareS(a,{16{imm[15]},imm})         Path(S97,S100)
	S102= CtrlPC=0                                              Premise(F43)
	S103= CtrlPCInc=0                                           Premise(F44)
	S104= PC[CIA]=addr                                          PC-Hold(S57,S103)
	S105= PC[Out]=addr+4                                        PC-Hold(S58,S102,S103)
	S106= CtrlIMem=0                                            Premise(F45)
	S107= IMem[{pid,addr}]={1,rs,14,imm}                        IMem-Hold(S60,S106)
	S108= CtrlASIDIn=0                                          Premise(F46)
	S109= CtrlCP0=0                                             Premise(F47)
	S110= CP0[ASID]=pid                                         CP0-Hold(S63,S109)
	S111= CtrlEPCIn=0                                           Premise(F48)
	S112= CtrlExCodeIn=0                                        Premise(F49)
	S113= CtrlIR=0                                              Premise(F50)
	S114= [IR]={1,rs,14,imm}                                    IR-Hold(S67,S113)
	S115= CtrlGPR=0                                             Premise(F51)
	S116= GPR[rs]=a                                             GPR-Hold(S69,S115)
	S117= CtrlA=0                                               Premise(F52)
	S118= [A]=a                                                 A-Hold(S71,S117)
	S119= CtrlB=0                                               Premise(F53)
	S120= [B]={16{imm[15]},imm}                                 B-Hold(S73,S119)
	S121= CtrlConditionReg=1                                    Premise(F54)
	S122= [ConditionReg]=CompareS(a,{16{imm[15]},imm})          ConditionReg-Write(S101,S121)
	S123= CtrlPIDReg=0                                          Premise(F55)

MEM	S124= PC.CIA=addr                                           PC-Out(S104)
	S125= PC.CIA31_28=addr[31:28]                               PC-Out(S104)
	S126= PC.Out=addr+4                                         PC-Out(S105)
	S127= CP0.ASID=pid                                          CP0-Read-ASID(S110)
	S128= IR.Out={1,rs,14,imm}                                  IR-Out(S114)
	S129= IR.Out31_26=1                                         IR-Out(S114)
	S130= IR.Out25_21=rs                                        IR-Out(S114)
	S131= IR.Out20_16=14                                        IR-Out(S114)
	S132= IR.Out15_0=imm                                        IR-Out(S114)
	S133= A.Out=a                                               A-Out(S118)
	S134= A.Out1_0={a}[1:0]                                     A-Out(S118)
	S135= A.Out4_0={a}[4:0]                                     A-Out(S118)
	S136= B.Out={16{imm[15]},imm}                               B-Out(S120)
	S137= B.Out1_0={{16{imm[15]},imm}}[1:0]                     B-Out(S120)
	S138= B.Out4_0={{16{imm[15]},imm}}[4:0]                     B-Out(S120)
	S139= ConditionReg.Out=CompareS(a,{16{imm[15]},imm})        ConditionReg-Out(S122)
	S140= ConditionReg.Out1_0={CompareS(a,{16{imm[15]},imm})}[1:0]ConditionReg-Out(S122)
	S141= ConditionReg.Out4_0={CompareS(a,{16{imm[15]},imm})}[4:0]ConditionReg-Out(S122)
	S142= PC.Out=>CP0.EPCIn                                     Premise(F56)
	S143= CP0.EPCIn=addr+4                                      Path(S126,S142)
	S144= CP0.ExCodeIn=5'h0d                                    Premise(F57)
	S145= CU.TrapAddr=>PC.In                                    Premise(F58)
	S146= CP0.ASID=>PIDReg.In                                   Premise(F59)
	S147= PIDReg.In=pid                                         Path(S127,S146)
	S148= ConditionReg.Out=>CU.zero                             Premise(F60)
	S149= CU.zero=CompareS(a,{16{imm[15]},imm})                 Path(S139,S148)
	S150= CtrlPC=1                                              Premise(F61)
	S151= CtrlPCInc=0                                           Premise(F62)
	S152= PC[CIA]=addr                                          PC-Hold(S104,S151)
	S153= CtrlIMem=0                                            Premise(F63)
	S154= IMem[{pid,addr}]={1,rs,14,imm}                        IMem-Hold(S107,S153)
	S155= CtrlASIDIn=0                                          Premise(F64)
	S156= CtrlCP0=0                                             Premise(F65)
	S157= CP0[ASID]=pid                                         CP0-Hold(S110,S156)
	S158= CtrlEPCIn=1                                           Premise(F66)
	S159= CP0[EPC]=addr+4                                       CP0-Write-EPC(S143,S158)
	S160= CtrlExCodeIn=1                                        Premise(F67)
	S161= CP0[ExCode]=5'h0d                                     CP0-Write-ExCode(S144,S160)
	S162= CtrlIR=0                                              Premise(F68)
	S163= [IR]={1,rs,14,imm}                                    IR-Hold(S114,S162)
	S164= CtrlGPR=0                                             Premise(F69)
	S165= GPR[rs]=a                                             GPR-Hold(S116,S164)
	S166= CtrlA=0                                               Premise(F70)
	S167= [A]=a                                                 A-Hold(S118,S166)
	S168= CtrlB=0                                               Premise(F71)
	S169= [B]={16{imm[15]},imm}                                 B-Hold(S120,S168)
	S170= CtrlConditionReg=0                                    Premise(F72)
	S171= [ConditionReg]=CompareS(a,{16{imm[15]},imm})          ConditionReg-Hold(S122,S170)
	S172= CtrlPIDReg=1                                          Premise(F73)
	S173= [PIDReg]=pid                                          PIDReg-Write(S147,S172)

WB	S174= PC.CIA=addr                                           PC-Out(S152)
	S175= PC.CIA31_28=addr[31:28]                               PC-Out(S152)
	S176= CP0.ASID=pid                                          CP0-Read-ASID(S157)
	S177= CP0.EPC=addr+4                                        CP0-Read-EPC(S159)
	S178= IR.Out={1,rs,14,imm}                                  IR-Out(S163)
	S179= IR.Out31_26=1                                         IR-Out(S163)
	S180= IR.Out25_21=rs                                        IR-Out(S163)
	S181= IR.Out20_16=14                                        IR-Out(S163)
	S182= IR.Out15_0=imm                                        IR-Out(S163)
	S183= A.Out=a                                               A-Out(S167)
	S184= A.Out1_0={a}[1:0]                                     A-Out(S167)
	S185= A.Out4_0={a}[4:0]                                     A-Out(S167)
	S186= B.Out={16{imm[15]},imm}                               B-Out(S169)
	S187= B.Out1_0={{16{imm[15]},imm}}[1:0]                     B-Out(S169)
	S188= B.Out4_0={{16{imm[15]},imm}}[4:0]                     B-Out(S169)
	S189= ConditionReg.Out=CompareS(a,{16{imm[15]},imm})        ConditionReg-Out(S171)
	S190= ConditionReg.Out1_0={CompareS(a,{16{imm[15]},imm})}[1:0]ConditionReg-Out(S171)
	S191= ConditionReg.Out4_0={CompareS(a,{16{imm[15]},imm})}[4:0]ConditionReg-Out(S171)
	S192= PIDReg.Out=pid                                        PIDReg-Out(S173)
	S193= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S173)
	S194= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S173)
	S195= CtrlPC=0                                              Premise(F74)
	S196= CtrlPCInc=0                                           Premise(F75)
	S197= PC[CIA]=addr                                          PC-Hold(S152,S196)
	S198= CtrlIMem=0                                            Premise(F76)
	S199= IMem[{pid,addr}]={1,rs,14,imm}                        IMem-Hold(S154,S198)
	S200= CtrlASIDIn=0                                          Premise(F77)
	S201= CtrlCP0=0                                             Premise(F78)
	S202= CP0[ASID]=pid                                         CP0-Hold(S157,S201)
	S203= CP0[EPC]=addr+4                                       CP0-Hold(S159,S201)
	S204= CP0[ExCode]=5'h0d                                     CP0-Hold(S161,S201)
	S205= CtrlEPCIn=0                                           Premise(F79)
	S206= CtrlExCodeIn=0                                        Premise(F80)
	S207= CtrlIR=0                                              Premise(F81)
	S208= [IR]={1,rs,14,imm}                                    IR-Hold(S163,S207)
	S209= CtrlGPR=0                                             Premise(F82)
	S210= GPR[rs]=a                                             GPR-Hold(S165,S209)
	S211= CtrlA=0                                               Premise(F83)
	S212= [A]=a                                                 A-Hold(S167,S211)
	S213= CtrlB=0                                               Premise(F84)
	S214= [B]={16{imm[15]},imm}                                 B-Hold(S169,S213)
	S215= CtrlConditionReg=0                                    Premise(F85)
	S216= [ConditionReg]=CompareS(a,{16{imm[15]},imm})          ConditionReg-Hold(S171,S215)
	S217= CtrlPIDReg=0                                          Premise(F86)
	S218= [PIDReg]=pid                                          PIDReg-Hold(S173,S217)

POST	S197= PC[CIA]=addr                                          PC-Hold(S152,S196)
	S199= IMem[{pid,addr}]={1,rs,14,imm}                        IMem-Hold(S154,S198)
	S202= CP0[ASID]=pid                                         CP0-Hold(S157,S201)
	S203= CP0[EPC]=addr+4                                       CP0-Hold(S159,S201)
	S204= CP0[ExCode]=5'h0d                                     CP0-Hold(S161,S201)
	S208= [IR]={1,rs,14,imm}                                    IR-Hold(S163,S207)
	S210= GPR[rs]=a                                             GPR-Hold(S165,S209)
	S212= [A]=a                                                 A-Hold(S167,S211)
	S214= [B]={16{imm[15]},imm}                                 B-Hold(S169,S213)
	S216= [ConditionReg]=CompareS(a,{16{imm[15]},imm})          ConditionReg-Hold(S171,S215)
	S218= [PIDReg]=pid                                          PIDReg-Hold(S173,S217)

