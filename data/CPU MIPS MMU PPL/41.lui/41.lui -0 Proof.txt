
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={15,0,rT,offset}                       Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= IMMU.Addr=>IAddrReg.In                                  Premise(F44)
	S6= PC.Out=>IMMU.IEA                                        Premise(F50)
	S7= IMMU.IEA=addr                                           Path(S4,S6)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F51)
	S9= IMMU.PID=pid                                            Path(S3,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S7)
	S11= IAddrReg.In={pid,addr}                                 Path(S10,S5)
	S12= CtrlIAddrReg=1                                         Premise(F100)
	S13= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S11,S12)
	S14= CtrlPC=0                                               Premise(F101)
	S15= CtrlPCInc=0                                            Premise(F102)
	S16= PC[Out]=addr                                           PC-Hold(S1,S14,S15)
	S17= CtrlIMem=0                                             Premise(F103)
	S18= IMem[{pid,addr}]={15,0,rT,offset}                      IMem-Hold(S2,S17)

IMMU	S19= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S13)
	S20= PC.Out=addr                                            PC-Out(S16)
	S21= PC.Out=>ICache.IEA                                     Premise(F152)
	S22= ICache.IEA=addr                                        Path(S20,S21)
	S23= IMem.MEM8WordOut=>ICache.WData                         Premise(F154)
	S24= IAddrReg.Out=>IMem.RAddr                               Premise(F159)
	S25= IMem.RAddr={pid,addr}                                  Path(S19,S24)
	S26= IMem.Out={15,0,rT,offset}                              IMem-Read(S25,S18)
	S27= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S25,S18)
	S28= ICache.WData=IMemGet8Word({pid,addr})                  Path(S27,S23)
	S29= IMem.Out=>IRMux.MemData                                Premise(F162)
	S30= IRMux.MemData={15,0,rT,offset}                         Path(S26,S29)
	S31= IRMux.Out={15,0,rT,offset}                             IRMux-Select2(S30)
	S32= IRMux.Out=>IR_ID.In                                    Premise(F168)
	S33= IR_ID.In={15,0,rT,offset}                              Path(S31,S32)
	S34= CtrlICache=1                                           Premise(F197)
	S35= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S22,S28,S34)
	S36= CtrlIR_ID=1                                            Premise(F202)
	S37= [IR_ID]={15,0,rT,offset}                               IR_ID-Write(S33,S36)
	S38= CtrlPC=0                                               Premise(F208)
	S39= CtrlPCInc=1                                            Premise(F209)
	S40= PC[Out]=addr+4                                         PC-Inc(S16,S38,S39)

ID	S41= IR_ID.Out20_16=rT                                      IR-Out(S37)
	S42= IR_ID.Out15_0=offset                                   IR-Out(S37)
	S43= IMMSEXT.Out=>GPR.WData                                 Premise(F258)
	S44= IR_ID.Out20_16=>GPR.WReg                               Premise(F259)
	S45= GPR.WReg=rT                                            Path(S41,S44)
	S46= IR_ID.Out15_0=>IMMSEXT.In                              Premise(F265)
	S47= IMMSEXT.In=offset                                      Path(S42,S46)
	S48= IMMSEXT.Out={offset,16{0}}                             IMMSEXT(S47)
	S49= GPR.WData={offset,16{0}}                               Path(S48,S43)
	S50= CtrlICache=0                                           Premise(F306)
	S51= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S35,S50)
	S52= CtrlGPR=1                                              Premise(F315)
	S53= GPR[rT]={offset,16{0}}                                 GPR-Write(S45,S49,S52)
	S54= CtrlPC=0                                               Premise(F317)
	S55= CtrlPCInc=0                                            Premise(F318)
	S56= PC[Out]=addr+4                                         PC-Hold(S40,S54,S55)

EX	S57= CtrlICache=0                                           Premise(F414)
	S58= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S51,S57)
	S59= CtrlGPR=0                                              Premise(F423)
	S60= GPR[rT]={offset,16{0}}                                 GPR-Hold(S53,S59)
	S61= CtrlPC=0                                               Premise(F425)
	S62= CtrlPCInc=0                                            Premise(F426)
	S63= PC[Out]=addr+4                                         PC-Hold(S56,S61,S62)

MEM	S64= CtrlICache=0                                           Premise(F522)
	S65= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S58,S64)
	S66= CtrlGPR=0                                              Premise(F531)
	S67= GPR[rT]={offset,16{0}}                                 GPR-Hold(S60,S66)
	S68= CtrlPC=0                                               Premise(F533)
	S69= CtrlPCInc=0                                            Premise(F534)
	S70= PC[Out]=addr+4                                         PC-Hold(S63,S68,S69)

DMMU1	S71= CtrlICache=0                                           Premise(F630)
	S72= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S65,S71)
	S73= CtrlGPR=0                                              Premise(F639)
	S74= GPR[rT]={offset,16{0}}                                 GPR-Hold(S67,S73)
	S75= CtrlPC=0                                               Premise(F641)
	S76= CtrlPCInc=0                                            Premise(F642)
	S77= PC[Out]=addr+4                                         PC-Hold(S70,S75,S76)

DMMU2	S78= CtrlICache=0                                           Premise(F738)
	S79= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S72,S78)
	S80= CtrlGPR=0                                              Premise(F747)
	S81= GPR[rT]={offset,16{0}}                                 GPR-Hold(S74,S80)
	S82= CtrlPC=0                                               Premise(F749)
	S83= CtrlPCInc=0                                            Premise(F750)
	S84= PC[Out]=addr+4                                         PC-Hold(S77,S82,S83)

WB	S85= CtrlICache=0                                           Premise(F846)
	S86= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S79,S85)
	S87= CtrlGPR=0                                              Premise(F855)
	S88= GPR[rT]={offset,16{0}}                                 GPR-Hold(S81,S87)
	S89= CtrlPC=0                                               Premise(F857)
	S90= CtrlPCInc=0                                            Premise(F858)
	S91= PC[Out]=addr+4                                         PC-Hold(S84,S89,S90)

POST	S86= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S79,S85)
	S88= GPR[rT]={offset,16{0}}                                 GPR-Hold(S81,S87)
	S91= PC[Out]=addr+4                                         PC-Hold(S84,S89,S90)

