
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={40,rS,rT,offset}                      Premise(F2)
	S3= GPR[rS]=base                                            Premise(F3)
	S4= GPR[rT]=a                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PC.Out=>IMem.RAddr                                      Premise(F5)
	S8= IMem.RAddr=addr                                         Path(S6,S7)
	S9= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S10= IMem.ASID=pid                                          Path(S5,S9)
	S11= IMem.Out={40,rS,rT,offset}                             IMem-Read(S10,S8,S2)
	S12= IMem.Out=>IR_ID.In                                     Premise(F8)
	S13= IR_ID.In={40,rS,rT,offset}                             Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F42)
	S15= CtrlPCInc=1                                            Premise(F43)
	S16= PC[Out]=addr+4                                         PC-Inc(S1,S14,S15)
	S17= CtrlCP0=0                                              Premise(F46)
	S18= CP0[ASID]=pid                                          CP0-Hold(S0,S17)
	S19= CtrlIR_ID=1                                            Premise(F49)
	S20= [IR_ID]={40,rS,rT,offset}                              IR_ID-Write(S13,S19)
	S21= CtrlGPR=0                                              Premise(F50)
	S22= GPR[rS]=base                                           GPR-Hold(S3,S21)
	S23= GPR[rT]=a                                              GPR-Hold(S4,S21)

ID	S24= IR_ID.Out={40,rS,rT,offset}                            IR-Out(S20)
	S25= IR_ID.Out25_21=rS                                      IR-Out(S20)
	S26= IR_ID.Out20_16=rT                                      IR-Out(S20)
	S27= IR_ID.Out25_21=>GPR.RReg1                              Premise(F68)
	S28= GPR.RReg1=rS                                           Path(S25,S27)
	S29= GPR.Rdata1=base                                        GPR-Read(S28,S22)
	S30= IR_ID.Out20_16=>GPR.RReg2                              Premise(F69)
	S31= GPR.RReg2=rT                                           Path(S26,S30)
	S32= GPR.Rdata2=a                                           GPR-Read(S31,S23)
	S33= GPR.Rdata1=>FU.InID1                                   Premise(F70)
	S34= FU.InID1=base                                          Path(S29,S33)
	S35= FU.OutID1=FU(base)                                     FU-Forward(S34)
	S36= FU.OutID1=>A_EX.In                                     Premise(F72)
	S37= A_EX.In=FU(base)                                       Path(S35,S36)
	S38= GPR.Rdata2=>FU.InID2                                   Premise(F73)
	S39= FU.InID2=a                                             Path(S32,S38)
	S40= FU.OutID2=FU(a)                                        FU-Forward(S39)
	S41= FU.OutID2=>B_EX.In                                     Premise(F75)
	S42= B_EX.In=FU(a)                                          Path(S40,S41)
	S43= IR_ID.Out=>IR_EX.In                                    Premise(F76)
	S44= IR_EX.In={40,rS,rT,offset}                             Path(S24,S43)
	S45= CtrlPC=0                                               Premise(F97)
	S46= CtrlPCInc=0                                            Premise(F98)
	S47= PC[Out]=addr+4                                         PC-Hold(S16,S45,S46)
	S48= CtrlCP0=0                                              Premise(F101)
	S49= CP0[ASID]=pid                                          CP0-Hold(S18,S48)
	S50= CtrlA_EX=1                                             Premise(F106)
	S51= [A_EX]=FU(base)                                        A_EX-Write(S37,S50)
	S52= CtrlB_EX=1                                             Premise(F107)
	S53= [B_EX]=FU(a)                                           B_EX-Write(S42,S52)
	S54= CtrlIR_EX=1                                            Premise(F108)
	S55= [IR_EX]={40,rS,rT,offset}                              IR_EX-Write(S44,S54)

EX	S56= A_EX.Out=FU(base)                                      A_EX-Out(S51)
	S57= B_EX.Out=FU(a)                                         B_EX-Out(S53)
	S58= IR_EX.Out15_0=offset                                   IR_EX-Out(S55)
	S59= A_EX.Out=>ALU.A                                        Premise(F136)
	S60= ALU.A=FU(base)                                         Path(S56,S59)
	S61= IR_EX.Out15_0=>IMMEXT.In                               Premise(F137)
	S62= IMMEXT.In=offset                                       Path(S58,S61)
	S63= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S62)
	S64= IMMEXT.Out=>ALU.B                                      Premise(F138)
	S65= ALU.B={16{offset[15]},offset}                          Path(S63,S64)
	S66= ALU.Out=FU(base)+{16{offset[15]},offset}               ALU(S60,S65)
	S67= ALU.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]     ALU(S60,S65)
	S68= ALU.Out=>ALUOut_MEM.In                                 Premise(F140)
	S69= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}         Path(S66,S68)
	S70= B_EX.Out=>MemDataSelS.In                               Premise(F141)
	S71= MemDataSelS.In=FU(a)                                   Path(S57,S70)
	S72= ALU.Out1_0=>MemDataSelS.Addr                           Premise(F142)
	S73= MemDataSelS.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S67,S72)
	S74= MemDataSelS.Out={FU(a)[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}MemDataSelS(S71,S73)
	S75= MemDataSelS.Out=>DR_MEM.In                             Premise(F144)
	S76= DR_MEM.In={FU(a)[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}Path(S74,S75)
	S77= CtrlPC=0                                               Premise(F155)
	S78= CtrlPCInc=0                                            Premise(F156)
	S79= PC[Out]=addr+4                                         PC-Hold(S47,S77,S78)
	S80= CtrlCP0=0                                              Premise(F159)
	S81= CP0[ASID]=pid                                          CP0-Hold(S49,S80)
	S82= CtrlALUOut_MEM=1                                       Premise(F167)
	S83= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}          ALUOut_MEM-Write(S69,S82)
	S84= CtrlDR_MEM=1                                           Premise(F168)
	S85= [DR_MEM]={FU(a)[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_MEM-Write(S76,S84)

MEM	S86= CP0.ASID=pid                                           CP0-Read-ASID(S81)
	S87= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}        ALUOut_MEM-Out(S83)
	S88= DR_MEM.Out={FU(a)[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_MEM-Out(S85)
	S89= DR_MEM.Out=>DMem.WData                                 Premise(F204)
	S90= DMem.WData={FU(a)[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}Path(S88,S89)
	S91= CP0.ASID=>DMem.ASID                                    Premise(F205)
	S92= DMem.ASID=pid                                          Path(S86,S91)
	S93= ALUOut_MEM.Out=>DMem.WAddr                             Premise(F206)
	S94= DMem.WAddr=FU(base)+{16{offset[15]},offset}            Path(S87,S93)
	S95= CtrlPC=0                                               Premise(F211)
	S96= CtrlPCInc=0                                            Premise(F212)
	S97= PC[Out]=addr+4                                         PC-Hold(S79,S95,S96)
	S98= CtrlDMem=1                                             Premise(F226)
	S99= DMem[{pid,FU(base)+{16{offset[15]},offset}}]={FU(a)[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DMem-Write(S92,S94,S90,S98)

WB	S100= CtrlPC=0                                              Premise(F267)
	S101= CtrlPCInc=0                                           Premise(F268)
	S102= PC[Out]=addr+4                                        PC-Hold(S97,S100,S101)
	S103= CtrlDMem=0                                            Premise(F282)
	S104= DMem[{pid,FU(base)+{16{offset[15]},offset}}]={FU(a)[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DMem-Hold(S99,S103)

POST	S102= PC[Out]=addr+4                                        PC-Hold(S97,S100,S101)
	S104= DMem[{pid,FU(base)+{16{offset[15]},offset}}]={FU(a)[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DMem-Hold(S99,S103)

