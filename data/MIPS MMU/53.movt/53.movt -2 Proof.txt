
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,cc,0,1,rD,0,1}                       Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)

IF	S3= PC.Out=addr                                             PC-Out(S0)
	S4= PC.Out=>ICache.IEA                                      Premise(F9)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={0,rS,cc,0,1,rD,0,1}                         ICache-Search(S5,S1)
	S7= ICache.Out=>IR.In                                       Premise(F10)
	S8= IR.In={0,rS,cc,0,1,rD,0,1}                              Path(S6,S7)
	S9= CtrlPC=0                                                Premise(F18)
	S10= CtrlPCInc=1                                            Premise(F19)
	S11= PC[Out]=addr+4                                         PC-Inc(S0,S9,S10)
	S12= CtrlIR=1                                               Premise(F22)
	S13= [IR]={0,rS,cc,0,1,rD,0,1}                              IR-Write(S8,S12)
	S14= CtrlGPR=0                                              Premise(F26)
	S15= GPR[rS]=a                                              GPR-Hold(S2,S14)

ID	S16= IR.Out25_21=rS                                         IR-Out(S13)
	S17= IR.Out25_21=>GPR.RReg1                                 Premise(F48)
	S18= GPR.RReg1=rS                                           Path(S16,S17)
	S19= GPR.Rdata1=a                                           GPR-Read(S18,S15)
	S20= GPR.Rdata1=>A.In                                       Premise(F50)
	S21= A.In=a                                                 Path(S19,S20)
	S22= CtrlPC=0                                               Premise(F56)
	S23= CtrlPCInc=0                                            Premise(F57)
	S24= PC[Out]=addr+4                                         PC-Hold(S11,S22,S23)
	S25= CtrlIR=0                                               Premise(F60)
	S26= [IR]={0,rS,cc,0,1,rD,0,1}                              IR-Hold(S13,S25)
	S27= CtrlA=1                                                Premise(F65)
	S28= [A]=a                                                  A-Write(S21,S27)

EX	S29= IR.Out20_18=cc                                         IR-Out(S26)
	S30= IR.Out16=1                                             IR-Out(S26)
	S31= IR.Out20_18=>CP1.cc                                    Premise(F68)
	S32= CP1.cc=cc                                              Path(S29,S31)
	S33= IR.Out16=>CP1.tf                                       Premise(F69)
	S34= CP1.tf=1                                               Path(S30,S33)
	S35= CP1.fp=FPConditionCode(cc,1)                           FP-PRODUCT(S32,S34)
	S36= CP1.fp=>ConditionReg.In                                Premise(F70)
	S37= ConditionReg.In=FPConditionCode(cc,1)                  Path(S35,S36)
	S38= CtrlPC=0                                               Premise(F76)
	S39= CtrlPCInc=0                                            Premise(F77)
	S40= PC[Out]=addr+4                                         PC-Hold(S24,S38,S39)
	S41= CtrlIR=0                                               Premise(F80)
	S42= [IR]={0,rS,cc,0,1,rD,0,1}                              IR-Hold(S26,S41)
	S43= CtrlA=0                                                Premise(F85)
	S44= [A]=a                                                  A-Hold(S28,S43)
	S45= CtrlConditionReg=1                                     Premise(F87)
	S46= [ConditionReg]=FPConditionCode(cc,1)                   ConditionReg-Write(S37,S45)

MEM	S47= CtrlPC=0                                               Premise(F93)
	S48= CtrlPCInc=0                                            Premise(F94)
	S49= PC[Out]=addr+4                                         PC-Hold(S40,S47,S48)
	S50= CtrlIR=0                                               Premise(F97)
	S51= [IR]={0,rS,cc,0,1,rD,0,1}                              IR-Hold(S42,S50)
	S52= CtrlA=0                                                Premise(F102)
	S53= [A]=a                                                  A-Hold(S44,S52)
	S54= CtrlConditionReg=0                                     Premise(F104)
	S55= [ConditionReg]=FPConditionCode(cc,1)                   ConditionReg-Hold(S46,S54)

MEM(DMMU1)	S56= CtrlPC=0                                               Premise(F110)
	S57= CtrlPCInc=0                                            Premise(F111)
	S58= PC[Out]=addr+4                                         PC-Hold(S49,S56,S57)
	S59= CtrlIR=0                                               Premise(F114)
	S60= [IR]={0,rS,cc,0,1,rD,0,1}                              IR-Hold(S51,S59)
	S61= CtrlA=0                                                Premise(F119)
	S62= [A]=a                                                  A-Hold(S53,S61)
	S63= CtrlConditionReg=0                                     Premise(F121)
	S64= [ConditionReg]=FPConditionCode(cc,1)                   ConditionReg-Hold(S55,S63)

MEM(DMMU2)	S65= CtrlPC=0                                               Premise(F127)
	S66= CtrlPCInc=0                                            Premise(F128)
	S67= PC[Out]=addr+4                                         PC-Hold(S58,S65,S66)
	S68= CtrlIR=0                                               Premise(F131)
	S69= [IR]={0,rS,cc,0,1,rD,0,1}                              IR-Hold(S60,S68)
	S70= CtrlA=0                                                Premise(F136)
	S71= [A]=a                                                  A-Hold(S62,S70)
	S72= CtrlConditionReg=0                                     Premise(F138)
	S73= [ConditionReg]=FPConditionCode(cc,1)                   ConditionReg-Hold(S64,S72)

WB	S74= IR.Out15_11=rD                                         IR-Out(S69)
	S75= A.Out=a                                                A-Out(S71)
	S76= IR.Out15_11=>GPR.WReg                                  Premise(F139)
	S77= GPR.WReg=rD                                            Path(S74,S76)
	S78= A.Out=>GPR.WData                                       Premise(F140)
	S79= GPR.WData=a                                            Path(S75,S78)
	S80= CtrlPC=0                                               Premise(F147)
	S81= CtrlPCInc=0                                            Premise(F148)
	S82= PC[Out]=addr+4                                         PC-Hold(S67,S80,S81)
	S83= CtrlGPR=1                                              Premise(F155)
	S84= GPR[rD]=a                                              GPR-Write(S77,S79,S83)
	S85= CtrlConditionReg=0                                     Premise(F158)
	S86= [ConditionReg]=FPConditionCode(cc,1)                   ConditionReg-Hold(S73,S85)

POST	S82= PC[Out]=addr+4                                         PC-Hold(S67,S80,S81)
	S84= GPR[rD]=a                                              GPR-Write(S77,S79,S83)
	S86= [ConditionReg]=FPConditionCode(cc,1)                   ConditionReg-Hold(S73,S85)

