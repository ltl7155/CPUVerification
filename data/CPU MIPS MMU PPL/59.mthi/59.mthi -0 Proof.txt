
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,0,17}                            Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= IMMU.Addr=>IAddrReg.In                                  Premise(F47)
	S7= PC.Out=>IMMU.IEA                                        Premise(F52)
	S8= IMMU.IEA=addr                                           Path(S5,S7)
	S9= CP0.ASID=>IMMU.PID                                      Premise(F53)
	S10= IMMU.PID=pid                                           Path(S4,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S10,S8)
	S12= IAddrReg.In={pid,addr}                                 Path(S11,S6)
	S13= CtrlGPR=0                                              Premise(F101)
	S14= GPR[rS]=a                                              GPR-Hold(S3,S13)
	S15= CtrlIAddrReg=1                                         Premise(F103)
	S16= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S15)
	S17= CtrlPC=0                                               Premise(F104)
	S18= CtrlPCInc=0                                            Premise(F105)
	S19= PC[Out]=addr                                           PC-Hold(S1,S17,S18)
	S20= CtrlIMem=0                                             Premise(F106)
	S21= IMem[{pid,addr}]={0,rS,0,17}                           IMem-Hold(S2,S20)

IMMU	S22= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S16)
	S23= PC.Out=addr                                            PC-Out(S19)
	S24= PC.Out=>ICache.IEA                                     Premise(F157)
	S25= ICache.IEA=addr                                        Path(S23,S24)
	S26= IMem.MEM8WordOut=>ICache.WData                         Premise(F159)
	S27= IAddrReg.Out=>IMem.RAddr                               Premise(F163)
	S28= IMem.RAddr={pid,addr}                                  Path(S22,S27)
	S29= IMem.Out={0,rS,0,17}                                   IMem-Read(S28,S21)
	S30= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S28,S21)
	S31= ICache.WData=IMemGet8Word({pid,addr})                  Path(S30,S26)
	S32= IMem.Out=>IRMux.MemData                                Premise(F166)
	S33= IRMux.MemData={0,rS,0,17}                              Path(S29,S32)
	S34= IRMux.Out={0,rS,0,17}                                  IRMux-Select2(S33)
	S35= IRMux.Out=>IR_ID.In                                    Premise(F172)
	S36= IR_ID.In={0,rS,0,17}                                   Path(S34,S35)
	S37= CtrlICache=1                                           Premise(F201)
	S38= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S25,S31,S37)
	S39= CtrlIR_ID=1                                            Premise(F206)
	S40= [IR_ID]={0,rS,0,17}                                    IR_ID-Write(S36,S39)
	S41= CtrlGPR=0                                              Premise(F210)
	S42= GPR[rS]=a                                              GPR-Hold(S14,S41)
	S43= CtrlPC=0                                               Premise(F213)
	S44= CtrlPCInc=1                                            Premise(F214)
	S45= PC[Out]=addr+4                                         PC-Inc(S19,S43,S44)

ID	S46= IR_ID.Out25_21=rS                                      IR-Out(S40)
	S47= GPR.Rdata1=>FU.InID1                                   Premise(F261)
	S48= IR_ID.Out25_21=>GPR.RReg1                              Premise(F264)
	S49= GPR.RReg1=rS                                           Path(S46,S48)
	S50= GPR.Rdata1=a                                           GPR-Read(S49,S42)
	S51= FU.InID1=a                                             Path(S50,S47)
	S52= FU.OutID1=FU(a)                                        FU-Forward(S51)
	S53= FU.OutID1=>Hi.In                                       Premise(F265)
	S54= Hi.In=FU(a)                                            Path(S52,S53)
	S55= CtrlICache=0                                           Premise(F311)
	S56= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S38,S55)
	S57= CtrlHi=1                                               Premise(F321)
	S58= [Hi]=FU(a)                                             Hi-Write(S54,S57)
	S59= CtrlPC=0                                               Premise(F323)
	S60= CtrlPCInc=0                                            Premise(F324)
	S61= PC[Out]=addr+4                                         PC-Hold(S45,S59,S60)

EX	S62= CtrlICache=0                                           Premise(F421)
	S63= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S56,S62)
	S64= CtrlHi=0                                               Premise(F431)
	S65= [Hi]=FU(a)                                             Hi-Hold(S58,S64)
	S66= CtrlPC=0                                               Premise(F433)
	S67= CtrlPCInc=0                                            Premise(F434)
	S68= PC[Out]=addr+4                                         PC-Hold(S61,S66,S67)

MEM	S69= CtrlICache=0                                           Premise(F531)
	S70= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S63,S69)
	S71= CtrlHi=0                                               Premise(F541)
	S72= [Hi]=FU(a)                                             Hi-Hold(S65,S71)
	S73= CtrlPC=0                                               Premise(F543)
	S74= CtrlPCInc=0                                            Premise(F544)
	S75= PC[Out]=addr+4                                         PC-Hold(S68,S73,S74)

DMMU1	S76= CtrlICache=0                                           Premise(F641)
	S77= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S70,S76)
	S78= CtrlHi=0                                               Premise(F651)
	S79= [Hi]=FU(a)                                             Hi-Hold(S72,S78)
	S80= CtrlPC=0                                               Premise(F653)
	S81= CtrlPCInc=0                                            Premise(F654)
	S82= PC[Out]=addr+4                                         PC-Hold(S75,S80,S81)

DMMU2	S83= CtrlICache=0                                           Premise(F751)
	S84= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S77,S83)
	S85= CtrlHi=0                                               Premise(F761)
	S86= [Hi]=FU(a)                                             Hi-Hold(S79,S85)
	S87= CtrlPC=0                                               Premise(F763)
	S88= CtrlPCInc=0                                            Premise(F764)
	S89= PC[Out]=addr+4                                         PC-Hold(S82,S87,S88)

WB	S90= CtrlICache=0                                           Premise(F861)
	S91= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S84,S90)
	S92= CtrlHi=0                                               Premise(F871)
	S93= [Hi]=FU(a)                                             Hi-Hold(S86,S92)
	S94= CtrlPC=0                                               Premise(F873)
	S95= CtrlPCInc=0                                            Premise(F874)
	S96= PC[Out]=addr+4                                         PC-Hold(S89,S94,S95)

POST	S91= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S84,S90)
	S93= [Hi]=FU(a)                                             Hi-Hold(S86,S92)
	S96= PC[Out]=addr+4                                         PC-Hold(S89,S94,S95)

