
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= ICache[addr]={0,rs,rt,code,48}                          Premise(F3)
	S3= GPR[rs]=a                                               Premise(F4)
	S4= GPR[rt]=b                                               Premise(F5)

IF	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>ICache.IEA                                      Premise(F60)
	S7= ICache.IEA=addr                                         Path(S5,S6)
	S8= ICache.Out={0,rs,rt,code,48}                            ICache-Search(S7,S2)
	S9= ICache.Out=>IR_ID.In                                    Premise(F67)
	S10= IR_ID.In={0,rs,rt,code,48}                             Path(S8,S9)
	S11= CtrlPC=0                                               Premise(F104)
	S12= CtrlPCInc=1                                            Premise(F105)
	S13= PC[Out]=addr+4                                         PC-Inc(S1,S11,S12)
	S14= CtrlCP0=0                                              Premise(F107)
	S15= CP0[ASID]=pid                                          CP0-Hold(S0,S14)
	S16= CtrlIR_ID=1                                            Premise(F119)
	S17= [IR_ID]={0,rs,rt,code,48}                              IR_ID-Write(S10,S16)
	S18= CtrlGPR=0                                              Premise(F123)
	S19= GPR[rs]=a                                              GPR-Hold(S3,S18)
	S20= GPR[rt]=b                                              GPR-Hold(S4,S18)

ID	S21= IR_ID.Out25_21=rs                                      IR-Out(S17)
	S22= IR_ID.Out20_16=rt                                      IR-Out(S17)
	S23= FU.OutID1=>A_EX.In                                     Premise(F252)
	S24= FU.OutID2=>B_EX.In                                     Premise(F254)
	S25= GPR.Rdata1=>FU.InID1                                   Premise(F299)
	S26= GPR.Rdata2=>FU.InID2                                   Premise(F301)
	S27= IR_ID.Out25_21=>GPR.RReg1                              Premise(F303)
	S28= GPR.RReg1=rs                                           Path(S21,S27)
	S29= GPR.Rdata1=a                                           GPR-Read(S28,S19)
	S30= FU.InID1=a                                             Path(S29,S25)
	S31= FU.OutID1=FU(a)                                        FU-Forward(S30)
	S32= A_EX.In=FU(a)                                          Path(S31,S23)
	S33= IR_ID.Out20_16=>GPR.RReg2                              Premise(F304)
	S34= GPR.RReg2=rt                                           Path(S22,S33)
	S35= GPR.Rdata2=b                                           GPR-Read(S34,S20)
	S36= FU.InID2=b                                             Path(S35,S26)
	S37= FU.OutID2=FU(b)                                        FU-Forward(S36)
	S38= B_EX.In=FU(b)                                          Path(S37,S24)
	S39= CtrlA_EX=1                                             Premise(F344)
	S40= [A_EX]=FU(a)                                           A_EX-Write(S32,S39)
	S41= CtrlB_EX=1                                             Premise(F347)
	S42= [B_EX]=FU(b)                                           B_EX-Write(S38,S41)
	S43= CtrlPC=0                                               Premise(F350)
	S44= CtrlPCInc=0                                            Premise(F351)
	S45= PC[Out]=addr+4                                         PC-Hold(S13,S43,S44)
	S46= CtrlCP0=0                                              Premise(F353)
	S47= CP0[ASID]=pid                                          CP0-Hold(S15,S46)

EX	S48= A_EX.Out=FU(a)                                         A_EX-Out(S40)
	S49= B_EX.Out=FU(b)                                         B_EX-Out(S42)
	S50= A_EX.Out=>CMPU.A                                       Premise(F379)
	S51= CMPU.A=FU(a)                                           Path(S48,S50)
	S52= B_EX.Out=>CMPU.B                                       Premise(F380)
	S53= CMPU.B=FU(b)                                           Path(S49,S52)
	S54= CMPU.lt=CompareS(FU(a),FU(b))                          CMPU-CMPS(S51,S53)
	S55= CMPU.lt=>ConditionReg_MEM.In                           Premise(F412)
	S56= ConditionReg_MEM.In=CompareS(FU(a),FU(b))              Path(S54,S55)
	S57= CtrlPC=0                                               Premise(F475)
	S58= CtrlPCInc=0                                            Premise(F476)
	S59= PC[Out]=addr+4                                         PC-Hold(S45,S57,S58)
	S60= CtrlCP0=0                                              Premise(F478)
	S61= CP0[ASID]=pid                                          CP0-Hold(S47,S60)
	S62= CtrlConditionReg_MEM=1                                 Premise(F483)
	S63= [ConditionReg_MEM]=CompareS(FU(a),FU(b))               ConditionReg_MEM-Write(S56,S62)

MEM	S64= PC.Out=addr+4                                          PC-Out(S59)
	S65= CP0.ASID=pid                                           CP0-Read-ASID(S61)
	S66= ConditionReg_MEM.Out=CompareS(FU(a),FU(b))             ConditionReg_MEM-Out(S63)
	S67= PC.Out=>CP0.EPCIn                                      Premise(F506)
	S68= CP0.EPCIn=addr+4                                       Path(S64,S67)
	S69= CP0.ExCodeIn=5'h0d                                     Premise(F507)
	S70= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In            Premise(F535)
	S71= ConditionReg_DMMU1.In=CompareS(FU(a),FU(b))            Path(S66,S70)
	S72= CP0.ASID=>PIDReg.In                                    Premise(F569)
	S73= PIDReg.In=pid                                          Path(S65,S72)
	S74= CtrlEPCIn=1                                            Premise(F604)
	S75= CP0[EPC]=addr+4                                        CP0-Write-EPC(S68,S74)
	S76= CtrlExCodeIn=1                                         Premise(F605)
	S77= CP0[ExCode]=5'h0d                                      CP0-Write-ExCode(S69,S76)
	S78= CtrlConditionReg_DMMU1=1                               Premise(F609)
	S79= [ConditionReg_DMMU1]=CompareS(FU(a),FU(b))             ConditionReg_DMMU1-Write(S71,S78)
	S80= CtrlPIDReg=1                                           Premise(F624)
	S81= [PIDReg]=pid                                           PIDReg-Write(S73,S80)

DMMU1	S82= ConditionReg_DMMU1.Out=CompareS(FU(a),FU(b))           ConditionReg_DMMU1-Out(S79)
	S83= ConditionReg_DMMU1.Out=>ConditionReg_DMMU2.In          Premise(F660)
	S84= ConditionReg_DMMU2.In=CompareS(FU(a),FU(b))            Path(S82,S83)
	S85= CtrlCP0=0                                              Premise(F727)
	S86= CP0[EPC]=addr+4                                        CP0-Hold(S75,S85)
	S87= CP0[ExCode]=5'h0d                                      CP0-Hold(S77,S85)
	S88= CtrlConditionReg_DMMU2=1                               Premise(F734)
	S89= [ConditionReg_DMMU2]=CompareS(FU(a),FU(b))             ConditionReg_DMMU2-Write(S84,S88)
	S90= CtrlPIDReg=0                                           Premise(F748)
	S91= [PIDReg]=pid                                           PIDReg-Hold(S81,S90)

DMMU2	S92= ConditionReg_DMMU2.Out=CompareS(FU(a),FU(b))           ConditionReg_DMMU2-Out(S89)
	S93= ConditionReg_DMMU2.Out=>ConditionReg_WB.In             Premise(F786)
	S94= ConditionReg_WB.In=CompareS(FU(a),FU(b))               Path(S92,S93)
	S95= CtrlCP0=0                                              Premise(F851)
	S96= CP0[EPC]=addr+4                                        CP0-Hold(S86,S95)
	S97= CP0[ExCode]=5'h0d                                      CP0-Hold(S87,S95)
	S98= CtrlConditionReg_WB=1                                  Premise(F859)
	S99= [ConditionReg_WB]=CompareS(FU(a),FU(b))                ConditionReg_WB-Write(S94,S98)
	S100= CtrlPIDReg=0                                          Premise(F872)
	S101= [PIDReg]=pid                                          PIDReg-Hold(S91,S100)

WB	S102= CtrlCP0=0                                             Premise(F975)
	S103= CP0[EPC]=addr+4                                       CP0-Hold(S96,S102)
	S104= CP0[ExCode]=5'h0d                                     CP0-Hold(S97,S102)
	S105= CtrlConditionReg_WB=0                                 Premise(F983)
	S106= [ConditionReg_WB]=CompareS(FU(a),FU(b))               ConditionReg_WB-Hold(S99,S105)
	S107= CtrlPIDReg=0                                          Premise(F996)
	S108= [PIDReg]=pid                                          PIDReg-Hold(S101,S107)

POST	S103= CP0[EPC]=addr+4                                       CP0-Hold(S96,S102)
	S104= CP0[ExCode]=5'h0d                                     CP0-Hold(S97,S102)
	S106= [ConditionReg_WB]=CompareS(FU(a),FU(b))               ConditionReg_WB-Hold(S99,S105)
	S108= [PIDReg]=pid                                          PIDReg-Hold(S101,S107)

