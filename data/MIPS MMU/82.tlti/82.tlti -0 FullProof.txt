
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={1,rs,10,imm}                          Premise(F2)
	S3= GPR[rs]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= CP0.ASID=>IMMU.PID                                      Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S7,S9)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S13= IAddrReg.In={pid,addr}                                 Path(S10,S12)
	S14= IMMU.Hit=>CU.IMMUHit                                   Premise(F7)
	S15= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S11,S14)
	S16= PC.Out=>ICache.IEA                                     Premise(F8)
	S17= ICache.IEA=addr                                        Path(S5,S16)
	S18= ICache.Hit=ICacheHit(addr)                             ICache-Search(S17)
	S19= ICache.Out=>IR.In                                      Premise(F9)
	S20= ICache.Out=>ICacheReg.In                               Premise(F10)
	S21= ICache.Hit=>CU.ICacheHit                               Premise(F11)
	S22= CU.ICacheHit=ICacheHit(addr)                           Path(S18,S21)
	S23= CtrlASIDIn=0                                           Premise(F12)
	S24= CtrlCP0=0                                              Premise(F13)
	S25= CP0[ASID]=pid                                          CP0-Hold(S0,S24)
	S26= CtrlEPCIn=0                                            Premise(F14)
	S27= CtrlExCodeIn=0                                         Premise(F15)
	S28= CtrlIMMU=0                                             Premise(F16)
	S29= CtrlPC=0                                               Premise(F17)
	S30= CtrlPCInc=0                                            Premise(F18)
	S31= PC[Out]=addr                                           PC-Hold(S1,S29,S30)
	S32= CtrlIAddrReg=1                                         Premise(F19)
	S33= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S32)
	S34= CtrlICache=0                                           Premise(F20)
	S35= CtrlIR=0                                               Premise(F21)
	S36= CtrlICacheReg=1                                        Premise(F22)
	S37= CtrlIMem=0                                             Premise(F23)
	S38= IMem[{pid,addr}]={1,rs,10,imm}                         IMem-Hold(S2,S37)
	S39= CtrlIRMux=0                                            Premise(F24)
	S40= CtrlGPR=0                                              Premise(F25)
	S41= GPR[rs]=a                                              GPR-Hold(S3,S40)
	S42= CtrlA=0                                                Premise(F26)
	S43= CtrlB=0                                                Premise(F27)
	S44= CtrlConditionReg=0                                     Premise(F28)
	S45= CtrlPIDReg=0                                           Premise(F29)

IF(IMMU)	S46= CP0.ASID=pid                                           CP0-Read-ASID(S25)
	S47= PC.Out=addr                                            PC-Out(S31)
	S48= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S33)
	S49= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S33)
	S50= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S33)
	S51= CU.IMMUHit=>CU.IMMUHit                                 Premise(F30)
	S52= CU.ICacheHit=>CU.ICacheHit                             Premise(F31)
	S53= IAddrReg.Out=>IMem.RAddr                               Premise(F32)
	S54= IMem.RAddr={pid,addr}                                  Path(S48,S53)
	S55= IMem.Out={1,rs,10,imm}                                 IMem-Read(S54,S38)
	S56= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S54,S38)
	S57= IMem.Out=>IRMux.MemData                                Premise(F33)
	S58= IRMux.MemData={1,rs,10,imm}                            Path(S55,S57)
	S59= IRMux.Out={1,rs,10,imm}                                IRMux-Select2(S58)
	S60= ICacheReg.Out=>IRMux.CacheData                         Premise(F34)
	S61= CU.IMMUHit=>IRMux.MemSel                               Premise(F35)
	S62= CU.ICacheHit=>IRMux.CacheSel                           Premise(F36)
	S63= IRMux.Out=>IR.In                                       Premise(F37)
	S64= IR.In={1,rs,10,imm}                                    Path(S59,S63)
	S65= IMem.MEM8WordOut=>ICache.WData                         Premise(F38)
	S66= ICache.WData=IMemGet8Word({pid,addr})                  Path(S56,S65)
	S67= PC.Out=>ICache.IEA                                     Premise(F39)
	S68= ICache.IEA=addr                                        Path(S47,S67)
	S69= ICache.Hit=ICacheHit(addr)                             ICache-Search(S68)
	S70= CtrlASIDIn=0                                           Premise(F40)
	S71= CtrlCP0=0                                              Premise(F41)
	S72= CP0[ASID]=pid                                          CP0-Hold(S25,S71)
	S73= CtrlEPCIn=0                                            Premise(F42)
	S74= CtrlExCodeIn=0                                         Premise(F43)
	S75= CtrlIMMU=0                                             Premise(F44)
	S76= CtrlPC=0                                               Premise(F45)
	S77= CtrlPCInc=1                                            Premise(F46)
	S78= PC[Out]=addr+4                                         PC-Inc(S31,S76,S77)
	S79= PC[CIA]=addr                                           PC-Inc(S31,S76,S77)
	S80= CtrlIAddrReg=0                                         Premise(F47)
	S81= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S33,S80)
	S82= CtrlICache=1                                           Premise(F48)
	S83= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S68,S66,S82)
	S84= CtrlIR=1                                               Premise(F49)
	S85= [IR]={1,rs,10,imm}                                     IR-Write(S64,S84)
	S86= CtrlICacheReg=0                                        Premise(F50)
	S87= CtrlIMem=0                                             Premise(F51)
	S88= IMem[{pid,addr}]={1,rs,10,imm}                         IMem-Hold(S38,S87)
	S89= CtrlIRMux=0                                            Premise(F52)
	S90= CtrlGPR=0                                              Premise(F53)
	S91= GPR[rs]=a                                              GPR-Hold(S41,S90)
	S92= CtrlA=0                                                Premise(F54)
	S93= CtrlB=0                                                Premise(F55)
	S94= CtrlConditionReg=0                                     Premise(F56)
	S95= CtrlPIDReg=0                                           Premise(F57)

ID	S96= CP0.ASID=pid                                           CP0-Read-ASID(S72)
	S97= PC.Out=addr+4                                          PC-Out(S78)
	S98= PC.CIA=addr                                            PC-Out(S79)
	S99= PC.CIA31_28=addr[31:28]                                PC-Out(S79)
	S100= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S81)
	S101= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S81)
	S102= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S81)
	S103= IR.Out={1,rs,10,imm}                                  IR-Out(S85)
	S104= IR.Out31_26=1                                         IR-Out(S85)
	S105= IR.Out25_21=rs                                        IR-Out(S85)
	S106= IR.Out20_16=10                                        IR-Out(S85)
	S107= IR.Out15_0=imm                                        IR-Out(S85)
	S108= IR.Out31_26=>CU.Op                                    Premise(F58)
	S109= CU.Op=1                                               Path(S104,S108)
	S110= IR.Out25_21=>GPR.RReg1                                Premise(F59)
	S111= GPR.RReg1=rs                                          Path(S105,S110)
	S112= GPR.Rdata1=a                                          GPR-Read(S111,S91)
	S113= IR.Out20_16=>CU.IRFunc1                               Premise(F60)
	S114= CU.IRFunc1=10                                         Path(S106,S113)
	S115= IR.Out15_0=>IMMEXT.In                                 Premise(F61)
	S116= IMMEXT.In=imm                                         Path(S107,S115)
	S117= IMMEXT.Out={16{imm[15]},imm}                          IMMEXT(S116)
	S118= GPR.Rdata1=>A.In                                      Premise(F62)
	S119= A.In=a                                                Path(S112,S118)
	S120= IMMEXT.Out=>B.In                                      Premise(F63)
	S121= B.In={16{imm[15]},imm}                                Path(S117,S120)
	S122= CtrlASIDIn=0                                          Premise(F64)
	S123= CtrlCP0=0                                             Premise(F65)
	S124= CP0[ASID]=pid                                         CP0-Hold(S72,S123)
	S125= CtrlEPCIn=0                                           Premise(F66)
	S126= CtrlExCodeIn=0                                        Premise(F67)
	S127= CtrlIMMU=0                                            Premise(F68)
	S128= CtrlPC=0                                              Premise(F69)
	S129= CtrlPCInc=0                                           Premise(F70)
	S130= PC[CIA]=addr                                          PC-Hold(S79,S129)
	S131= PC[Out]=addr+4                                        PC-Hold(S78,S128,S129)
	S132= CtrlIAddrReg=0                                        Premise(F71)
	S133= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S81,S132)
	S134= CtrlICache=0                                          Premise(F72)
	S135= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S83,S134)
	S136= CtrlIR=0                                              Premise(F73)
	S137= [IR]={1,rs,10,imm}                                    IR-Hold(S85,S136)
	S138= CtrlICacheReg=0                                       Premise(F74)
	S139= CtrlIMem=0                                            Premise(F75)
	S140= IMem[{pid,addr}]={1,rs,10,imm}                        IMem-Hold(S88,S139)
	S141= CtrlIRMux=0                                           Premise(F76)
	S142= CtrlGPR=0                                             Premise(F77)
	S143= GPR[rs]=a                                             GPR-Hold(S91,S142)
	S144= CtrlA=1                                               Premise(F78)
	S145= [A]=a                                                 A-Write(S119,S144)
	S146= CtrlB=1                                               Premise(F79)
	S147= [B]={16{imm[15]},imm}                                 B-Write(S121,S146)
	S148= CtrlConditionReg=0                                    Premise(F80)
	S149= CtrlPIDReg=0                                          Premise(F81)

EX	S150= CP0.ASID=pid                                          CP0-Read-ASID(S124)
	S151= PC.CIA=addr                                           PC-Out(S130)
	S152= PC.CIA31_28=addr[31:28]                               PC-Out(S130)
	S153= PC.Out=addr+4                                         PC-Out(S131)
	S154= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S133)
	S155= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S133)
	S156= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S133)
	S157= IR.Out={1,rs,10,imm}                                  IR-Out(S137)
	S158= IR.Out31_26=1                                         IR-Out(S137)
	S159= IR.Out25_21=rs                                        IR-Out(S137)
	S160= IR.Out20_16=10                                        IR-Out(S137)
	S161= IR.Out15_0=imm                                        IR-Out(S137)
	S162= A.Out=a                                               A-Out(S145)
	S163= A.Out1_0={a}[1:0]                                     A-Out(S145)
	S164= A.Out4_0={a}[4:0]                                     A-Out(S145)
	S165= B.Out={16{imm[15]},imm}                               B-Out(S147)
	S166= B.Out1_0={{16{imm[15]},imm}}[1:0]                     B-Out(S147)
	S167= B.Out4_0={{16{imm[15]},imm}}[4:0]                     B-Out(S147)
	S168= A.Out=>CMPU.A                                         Premise(F82)
	S169= CMPU.A=a                                              Path(S162,S168)
	S170= B.Out=>CMPU.B                                         Premise(F83)
	S171= CMPU.B={16{imm[15]},imm}                              Path(S165,S170)
	S172= CMPU.Func=6'b000011                                   Premise(F84)
	S173= CMPU.Out=CompareS(a,{16{imm[15]},imm})                CMPU-CMPS(S169,S171)
	S174= CMPU.zero=CompareS(a,{16{imm[15]},imm})               CMPU-CMPS(S169,S171)
	S175= CMPU.gt=CompareS(a,{16{imm[15]},imm})                 CMPU-CMPS(S169,S171)
	S176= CMPU.lt=CompareS(a,{16{imm[15]},imm})                 CMPU-CMPS(S169,S171)
	S177= CMPU.lt=>ConditionReg.In                              Premise(F85)
	S178= ConditionReg.In=CompareS(a,{16{imm[15]},imm})         Path(S176,S177)
	S179= CtrlASIDIn=0                                          Premise(F86)
	S180= CtrlCP0=0                                             Premise(F87)
	S181= CP0[ASID]=pid                                         CP0-Hold(S124,S180)
	S182= CtrlEPCIn=0                                           Premise(F88)
	S183= CtrlExCodeIn=0                                        Premise(F89)
	S184= CtrlIMMU=0                                            Premise(F90)
	S185= CtrlPC=0                                              Premise(F91)
	S186= CtrlPCInc=0                                           Premise(F92)
	S187= PC[CIA]=addr                                          PC-Hold(S130,S186)
	S188= PC[Out]=addr+4                                        PC-Hold(S131,S185,S186)
	S189= CtrlIAddrReg=0                                        Premise(F93)
	S190= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S133,S189)
	S191= CtrlICache=0                                          Premise(F94)
	S192= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S135,S191)
	S193= CtrlIR=0                                              Premise(F95)
	S194= [IR]={1,rs,10,imm}                                    IR-Hold(S137,S193)
	S195= CtrlICacheReg=0                                       Premise(F96)
	S196= CtrlIMem=0                                            Premise(F97)
	S197= IMem[{pid,addr}]={1,rs,10,imm}                        IMem-Hold(S140,S196)
	S198= CtrlIRMux=0                                           Premise(F98)
	S199= CtrlGPR=0                                             Premise(F99)
	S200= GPR[rs]=a                                             GPR-Hold(S143,S199)
	S201= CtrlA=0                                               Premise(F100)
	S202= [A]=a                                                 A-Hold(S145,S201)
	S203= CtrlB=0                                               Premise(F101)
	S204= [B]={16{imm[15]},imm}                                 B-Hold(S147,S203)
	S205= CtrlConditionReg=1                                    Premise(F102)
	S206= [ConditionReg]=CompareS(a,{16{imm[15]},imm})          ConditionReg-Write(S178,S205)
	S207= CtrlPIDReg=0                                          Premise(F103)

MEM	S208= CP0.ASID=pid                                          CP0-Read-ASID(S181)
	S209= PC.CIA=addr                                           PC-Out(S187)
	S210= PC.CIA31_28=addr[31:28]                               PC-Out(S187)
	S211= PC.Out=addr+4                                         PC-Out(S188)
	S212= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S190)
	S213= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S190)
	S214= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S190)
	S215= IR.Out={1,rs,10,imm}                                  IR-Out(S194)
	S216= IR.Out31_26=1                                         IR-Out(S194)
	S217= IR.Out25_21=rs                                        IR-Out(S194)
	S218= IR.Out20_16=10                                        IR-Out(S194)
	S219= IR.Out15_0=imm                                        IR-Out(S194)
	S220= A.Out=a                                               A-Out(S202)
	S221= A.Out1_0={a}[1:0]                                     A-Out(S202)
	S222= A.Out4_0={a}[4:0]                                     A-Out(S202)
	S223= B.Out={16{imm[15]},imm}                               B-Out(S204)
	S224= B.Out1_0={{16{imm[15]},imm}}[1:0]                     B-Out(S204)
	S225= B.Out4_0={{16{imm[15]},imm}}[4:0]                     B-Out(S204)
	S226= ConditionReg.Out=CompareS(a,{16{imm[15]},imm})        ConditionReg-Out(S206)
	S227= ConditionReg.Out1_0={CompareS(a,{16{imm[15]},imm})}[1:0]ConditionReg-Out(S206)
	S228= ConditionReg.Out4_0={CompareS(a,{16{imm[15]},imm})}[4:0]ConditionReg-Out(S206)
	S229= PC.Out=>CP0.EPCIn                                     Premise(F104)
	S230= CP0.EPCIn=addr+4                                      Path(S211,S229)
	S231= CP0.ExCodeIn=5'h0d                                    Premise(F105)
	S232= CU.TrapAddr=>PC.In                                    Premise(F106)
	S233= CP0.ASID=>PIDReg.In                                   Premise(F107)
	S234= PIDReg.In=pid                                         Path(S208,S233)
	S235= ConditionReg.Out=>CU.lt                               Premise(F108)
	S236= CU.lt=CompareS(a,{16{imm[15]},imm})                   Path(S226,S235)
	S237= CtrlASIDIn=0                                          Premise(F109)
	S238= CtrlCP0=0                                             Premise(F110)
	S239= CP0[ASID]=pid                                         CP0-Hold(S181,S238)
	S240= CtrlEPCIn=1                                           Premise(F111)
	S241= CP0[EPC]=addr+4                                       CP0-Write-EPC(S230,S240)
	S242= CtrlExCodeIn=1                                        Premise(F112)
	S243= CP0[ExCode]=5'h0d                                     CP0-Write-ExCode(S231,S242)
	S244= CtrlIMMU=0                                            Premise(F113)
	S245= CtrlPC=1                                              Premise(F114)
	S246= CtrlPCInc=0                                           Premise(F115)
	S247= PC[CIA]=addr                                          PC-Hold(S187,S246)
	S248= CtrlIAddrReg=0                                        Premise(F116)
	S249= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S190,S248)
	S250= CtrlICache=0                                          Premise(F117)
	S251= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S192,S250)
	S252= CtrlIR=0                                              Premise(F118)
	S253= [IR]={1,rs,10,imm}                                    IR-Hold(S194,S252)
	S254= CtrlICacheReg=0                                       Premise(F119)
	S255= CtrlIMem=0                                            Premise(F120)
	S256= IMem[{pid,addr}]={1,rs,10,imm}                        IMem-Hold(S197,S255)
	S257= CtrlIRMux=0                                           Premise(F121)
	S258= CtrlGPR=0                                             Premise(F122)
	S259= GPR[rs]=a                                             GPR-Hold(S200,S258)
	S260= CtrlA=0                                               Premise(F123)
	S261= [A]=a                                                 A-Hold(S202,S260)
	S262= CtrlB=0                                               Premise(F124)
	S263= [B]={16{imm[15]},imm}                                 B-Hold(S204,S262)
	S264= CtrlConditionReg=0                                    Premise(F125)
	S265= [ConditionReg]=CompareS(a,{16{imm[15]},imm})          ConditionReg-Hold(S206,S264)
	S266= CtrlPIDReg=1                                          Premise(F126)
	S267= [PIDReg]=pid                                          PIDReg-Write(S234,S266)

MEM(DMMU1)	S268= CP0.ASID=pid                                          CP0-Read-ASID(S239)
	S269= CP0.EPC=addr+4                                        CP0-Read-EPC(S241)
	S270= PC.CIA=addr                                           PC-Out(S247)
	S271= PC.CIA31_28=addr[31:28]                               PC-Out(S247)
	S272= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S249)
	S273= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S249)
	S274= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S249)
	S275= IR.Out={1,rs,10,imm}                                  IR-Out(S253)
	S276= IR.Out31_26=1                                         IR-Out(S253)
	S277= IR.Out25_21=rs                                        IR-Out(S253)
	S278= IR.Out20_16=10                                        IR-Out(S253)
	S279= IR.Out15_0=imm                                        IR-Out(S253)
	S280= A.Out=a                                               A-Out(S261)
	S281= A.Out1_0={a}[1:0]                                     A-Out(S261)
	S282= A.Out4_0={a}[4:0]                                     A-Out(S261)
	S283= B.Out={16{imm[15]},imm}                               B-Out(S263)
	S284= B.Out1_0={{16{imm[15]},imm}}[1:0]                     B-Out(S263)
	S285= B.Out4_0={{16{imm[15]},imm}}[4:0]                     B-Out(S263)
	S286= ConditionReg.Out=CompareS(a,{16{imm[15]},imm})        ConditionReg-Out(S265)
	S287= ConditionReg.Out1_0={CompareS(a,{16{imm[15]},imm})}[1:0]ConditionReg-Out(S265)
	S288= ConditionReg.Out4_0={CompareS(a,{16{imm[15]},imm})}[4:0]ConditionReg-Out(S265)
	S289= PIDReg.Out=pid                                        PIDReg-Out(S267)
	S290= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S267)
	S291= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S267)
	S292= CtrlASIDIn=0                                          Premise(F127)
	S293= CtrlCP0=0                                             Premise(F128)
	S294= CP0[ASID]=pid                                         CP0-Hold(S239,S293)
	S295= CP0[EPC]=addr+4                                       CP0-Hold(S241,S293)
	S296= CP0[ExCode]=5'h0d                                     CP0-Hold(S243,S293)
	S297= CtrlEPCIn=0                                           Premise(F129)
	S298= CtrlExCodeIn=0                                        Premise(F130)
	S299= CtrlIMMU=0                                            Premise(F131)
	S300= CtrlPC=0                                              Premise(F132)
	S301= CtrlPCInc=0                                           Premise(F133)
	S302= PC[CIA]=addr                                          PC-Hold(S247,S301)
	S303= CtrlIAddrReg=0                                        Premise(F134)
	S304= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S249,S303)
	S305= CtrlICache=0                                          Premise(F135)
	S306= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S251,S305)
	S307= CtrlIR=0                                              Premise(F136)
	S308= [IR]={1,rs,10,imm}                                    IR-Hold(S253,S307)
	S309= CtrlICacheReg=0                                       Premise(F137)
	S310= CtrlIMem=0                                            Premise(F138)
	S311= IMem[{pid,addr}]={1,rs,10,imm}                        IMem-Hold(S256,S310)
	S312= CtrlIRMux=0                                           Premise(F139)
	S313= CtrlGPR=0                                             Premise(F140)
	S314= GPR[rs]=a                                             GPR-Hold(S259,S313)
	S315= CtrlA=0                                               Premise(F141)
	S316= [A]=a                                                 A-Hold(S261,S315)
	S317= CtrlB=0                                               Premise(F142)
	S318= [B]={16{imm[15]},imm}                                 B-Hold(S263,S317)
	S319= CtrlConditionReg=0                                    Premise(F143)
	S320= [ConditionReg]=CompareS(a,{16{imm[15]},imm})          ConditionReg-Hold(S265,S319)
	S321= CtrlPIDReg=0                                          Premise(F144)
	S322= [PIDReg]=pid                                          PIDReg-Hold(S267,S321)

MEM(DMMU2)	S323= CP0.ASID=pid                                          CP0-Read-ASID(S294)
	S324= CP0.EPC=addr+4                                        CP0-Read-EPC(S295)
	S325= PC.CIA=addr                                           PC-Out(S302)
	S326= PC.CIA31_28=addr[31:28]                               PC-Out(S302)
	S327= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S304)
	S328= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S304)
	S329= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S304)
	S330= IR.Out={1,rs,10,imm}                                  IR-Out(S308)
	S331= IR.Out31_26=1                                         IR-Out(S308)
	S332= IR.Out25_21=rs                                        IR-Out(S308)
	S333= IR.Out20_16=10                                        IR-Out(S308)
	S334= IR.Out15_0=imm                                        IR-Out(S308)
	S335= A.Out=a                                               A-Out(S316)
	S336= A.Out1_0={a}[1:0]                                     A-Out(S316)
	S337= A.Out4_0={a}[4:0]                                     A-Out(S316)
	S338= B.Out={16{imm[15]},imm}                               B-Out(S318)
	S339= B.Out1_0={{16{imm[15]},imm}}[1:0]                     B-Out(S318)
	S340= B.Out4_0={{16{imm[15]},imm}}[4:0]                     B-Out(S318)
	S341= ConditionReg.Out=CompareS(a,{16{imm[15]},imm})        ConditionReg-Out(S320)
	S342= ConditionReg.Out1_0={CompareS(a,{16{imm[15]},imm})}[1:0]ConditionReg-Out(S320)
	S343= ConditionReg.Out4_0={CompareS(a,{16{imm[15]},imm})}[4:0]ConditionReg-Out(S320)
	S344= PIDReg.Out=pid                                        PIDReg-Out(S322)
	S345= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S322)
	S346= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S322)
	S347= CtrlASIDIn=0                                          Premise(F145)
	S348= CtrlCP0=0                                             Premise(F146)
	S349= CP0[ASID]=pid                                         CP0-Hold(S294,S348)
	S350= CP0[EPC]=addr+4                                       CP0-Hold(S295,S348)
	S351= CP0[ExCode]=5'h0d                                     CP0-Hold(S296,S348)
	S352= CtrlEPCIn=0                                           Premise(F147)
	S353= CtrlExCodeIn=0                                        Premise(F148)
	S354= CtrlIMMU=0                                            Premise(F149)
	S355= CtrlPC=0                                              Premise(F150)
	S356= CtrlPCInc=0                                           Premise(F151)
	S357= PC[CIA]=addr                                          PC-Hold(S302,S356)
	S358= CtrlIAddrReg=0                                        Premise(F152)
	S359= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S304,S358)
	S360= CtrlICache=0                                          Premise(F153)
	S361= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S306,S360)
	S362= CtrlIR=0                                              Premise(F154)
	S363= [IR]={1,rs,10,imm}                                    IR-Hold(S308,S362)
	S364= CtrlICacheReg=0                                       Premise(F155)
	S365= CtrlIMem=0                                            Premise(F156)
	S366= IMem[{pid,addr}]={1,rs,10,imm}                        IMem-Hold(S311,S365)
	S367= CtrlIRMux=0                                           Premise(F157)
	S368= CtrlGPR=0                                             Premise(F158)
	S369= GPR[rs]=a                                             GPR-Hold(S314,S368)
	S370= CtrlA=0                                               Premise(F159)
	S371= [A]=a                                                 A-Hold(S316,S370)
	S372= CtrlB=0                                               Premise(F160)
	S373= [B]={16{imm[15]},imm}                                 B-Hold(S318,S372)
	S374= CtrlConditionReg=0                                    Premise(F161)
	S375= [ConditionReg]=CompareS(a,{16{imm[15]},imm})          ConditionReg-Hold(S320,S374)
	S376= CtrlPIDReg=0                                          Premise(F162)
	S377= [PIDReg]=pid                                          PIDReg-Hold(S322,S376)

WB	S378= CP0.ASID=pid                                          CP0-Read-ASID(S349)
	S379= CP0.EPC=addr+4                                        CP0-Read-EPC(S350)
	S380= PC.CIA=addr                                           PC-Out(S357)
	S381= PC.CIA31_28=addr[31:28]                               PC-Out(S357)
	S382= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S359)
	S383= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S359)
	S384= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S359)
	S385= IR.Out={1,rs,10,imm}                                  IR-Out(S363)
	S386= IR.Out31_26=1                                         IR-Out(S363)
	S387= IR.Out25_21=rs                                        IR-Out(S363)
	S388= IR.Out20_16=10                                        IR-Out(S363)
	S389= IR.Out15_0=imm                                        IR-Out(S363)
	S390= A.Out=a                                               A-Out(S371)
	S391= A.Out1_0={a}[1:0]                                     A-Out(S371)
	S392= A.Out4_0={a}[4:0]                                     A-Out(S371)
	S393= B.Out={16{imm[15]},imm}                               B-Out(S373)
	S394= B.Out1_0={{16{imm[15]},imm}}[1:0]                     B-Out(S373)
	S395= B.Out4_0={{16{imm[15]},imm}}[4:0]                     B-Out(S373)
	S396= ConditionReg.Out=CompareS(a,{16{imm[15]},imm})        ConditionReg-Out(S375)
	S397= ConditionReg.Out1_0={CompareS(a,{16{imm[15]},imm})}[1:0]ConditionReg-Out(S375)
	S398= ConditionReg.Out4_0={CompareS(a,{16{imm[15]},imm})}[4:0]ConditionReg-Out(S375)
	S399= PIDReg.Out=pid                                        PIDReg-Out(S377)
	S400= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S377)
	S401= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S377)
	S402= CtrlASIDIn=0                                          Premise(F163)
	S403= CtrlCP0=0                                             Premise(F164)
	S404= CP0[ASID]=pid                                         CP0-Hold(S349,S403)
	S405= CP0[EPC]=addr+4                                       CP0-Hold(S350,S403)
	S406= CP0[ExCode]=5'h0d                                     CP0-Hold(S351,S403)
	S407= CtrlEPCIn=0                                           Premise(F165)
	S408= CtrlExCodeIn=0                                        Premise(F166)
	S409= CtrlIMMU=0                                            Premise(F167)
	S410= CtrlPC=0                                              Premise(F168)
	S411= CtrlPCInc=0                                           Premise(F169)
	S412= PC[CIA]=addr                                          PC-Hold(S357,S411)
	S413= CtrlIAddrReg=0                                        Premise(F170)
	S414= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S359,S413)
	S415= CtrlICache=0                                          Premise(F171)
	S416= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S361,S415)
	S417= CtrlIR=0                                              Premise(F172)
	S418= [IR]={1,rs,10,imm}                                    IR-Hold(S363,S417)
	S419= CtrlICacheReg=0                                       Premise(F173)
	S420= CtrlIMem=0                                            Premise(F174)
	S421= IMem[{pid,addr}]={1,rs,10,imm}                        IMem-Hold(S366,S420)
	S422= CtrlIRMux=0                                           Premise(F175)
	S423= CtrlGPR=0                                             Premise(F176)
	S424= GPR[rs]=a                                             GPR-Hold(S369,S423)
	S425= CtrlA=0                                               Premise(F177)
	S426= [A]=a                                                 A-Hold(S371,S425)
	S427= CtrlB=0                                               Premise(F178)
	S428= [B]={16{imm[15]},imm}                                 B-Hold(S373,S427)
	S429= CtrlConditionReg=0                                    Premise(F179)
	S430= [ConditionReg]=CompareS(a,{16{imm[15]},imm})          ConditionReg-Hold(S375,S429)
	S431= CtrlPIDReg=0                                          Premise(F180)
	S432= [PIDReg]=pid                                          PIDReg-Hold(S377,S431)

POST	S404= CP0[ASID]=pid                                         CP0-Hold(S349,S403)
	S405= CP0[EPC]=addr+4                                       CP0-Hold(S350,S403)
	S406= CP0[ExCode]=5'h0d                                     CP0-Hold(S351,S403)
	S412= PC[CIA]=addr                                          PC-Hold(S357,S411)
	S414= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S359,S413)
	S416= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S361,S415)
	S418= [IR]={1,rs,10,imm}                                    IR-Hold(S363,S417)
	S421= IMem[{pid,addr}]={1,rs,10,imm}                        IMem-Hold(S366,S420)
	S424= GPR[rs]=a                                             GPR-Hold(S369,S423)
	S426= [A]=a                                                 A-Hold(S371,S425)
	S428= [B]={16{imm[15]},imm}                                 B-Hold(S373,S427)
	S430= [ConditionReg]=CompareS(a,{16{imm[15]},imm})          ConditionReg-Hold(S375,S429)
	S432= [PIDReg]=pid                                          PIDReg-Hold(S377,S431)

