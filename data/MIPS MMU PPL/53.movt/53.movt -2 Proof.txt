
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,cc,0,1,rD,0,1}                       Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)

IF	S3= PC.Out=addr                                             PC-Out(S0)
	S4= PC.Out=>ICache.IEA                                      Premise(F9)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={0,rS,cc,0,1,rD,0,1}                         ICache-Search(S5,S1)
	S7= ICache.Out=>IR_ID.In                                    Premise(F13)
	S8= IR_ID.In={0,rS,cc,0,1,rD,0,1}                           Path(S6,S7)
	S9= CtrlPC=0                                                Premise(F26)
	S10= CtrlPCInc=1                                            Premise(F27)
	S11= PC[Out]=addr+4                                         PC-Inc(S0,S9,S10)
	S12= CtrlIR_ID=1                                            Premise(F32)
	S13= [IR_ID]={0,rS,cc,0,1,rD,0,1}                           IR_ID-Write(S8,S12)
	S14= CtrlGPR=0                                              Premise(F35)
	S15= GPR[rS]=a                                              GPR-Hold(S2,S14)

ID	S16= IR_ID.Out={0,rS,cc,0,1,rD,0,1}                         IR-Out(S13)
	S17= IR_ID.Out25_21=rS                                      IR-Out(S13)
	S18= IR_ID.Out25_21=>GPR.RReg1                              Premise(F85)
	S19= GPR.RReg1=rS                                           Path(S17,S18)
	S20= GPR.Rdata1=a                                           GPR-Read(S19,S15)
	S21= GPR.Rdata1=>FU.InID1                                   Premise(F87)
	S22= FU.InID1=a                                             Path(S20,S21)
	S23= FU.OutID1=FU(a)                                        FU-Forward(S22)
	S24= FU.OutID1=>A_EX.In                                     Premise(F89)
	S25= A_EX.In=FU(a)                                          Path(S23,S24)
	S26= IR_ID.Out=>IR_EX.In                                    Premise(F90)
	S27= IR_EX.In={0,rS,cc,0,1,rD,0,1}                          Path(S16,S26)
	S28= CtrlPC=0                                               Premise(F99)
	S29= CtrlPCInc=0                                            Premise(F100)
	S30= PC[Out]=addr+4                                         PC-Hold(S11,S28,S29)
	S31= CtrlA_EX=1                                             Premise(F109)
	S32= [A_EX]=FU(a)                                           A_EX-Write(S25,S31)
	S33= CtrlIR_EX=1                                            Premise(F110)
	S34= [IR_EX]={0,rS,cc,0,1,rD,0,1}                           IR_EX-Write(S27,S33)

EX	S35= A_EX.Out=FU(a)                                         A_EX-Out(S32)
	S36= IR_EX.Out={0,rS,cc,0,1,rD,0,1}                         IR_EX-Out(S34)
	S37= IR_EX.Out20_18=cc                                      IR_EX-Out(S34)
	S38= IR_EX.Out16=1                                          IR_EX-Out(S34)
	S39= IR_EX.Out20_18=>CP1.cc                                 Premise(F129)
	S40= CP1.cc=cc                                              Path(S37,S39)
	S41= IR_EX.Out16=>CP1.tf                                    Premise(F130)
	S42= CP1.tf=1                                               Path(S38,S41)
	S43= CP1.fp=FPConditionCode(cc,1)                           FP-PRODUCT(S40,S42)
	S44= CP1.fp=>ConditionReg_MEM.In                            Premise(F131)
	S45= ConditionReg_MEM.In=FPConditionCode(cc,1)              Path(S43,S44)
	S46= IR_EX.Out=>IR_MEM.In                                   Premise(F132)
	S47= IR_MEM.In={0,rS,cc,0,1,rD,0,1}                         Path(S36,S46)
	S48= A_EX.Out=>A_MEM.In                                     Premise(F133)
	S49= A_MEM.In=FU(a)                                         Path(S35,S48)
	S50= CtrlPC=0                                               Premise(F140)
	S51= CtrlPCInc=0                                            Premise(F141)
	S52= PC[Out]=addr+4                                         PC-Hold(S30,S50,S51)
	S53= CtrlConditionReg_MEM=1                                 Premise(F153)
	S54= [ConditionReg_MEM]=FPConditionCode(cc,1)               ConditionReg_MEM-Write(S45,S53)
	S55= CtrlIR_MEM=1                                           Premise(F154)
	S56= [IR_MEM]={0,rS,cc,0,1,rD,0,1}                          IR_MEM-Write(S47,S55)
	S57= CtrlA_MEM=1                                            Premise(F155)
	S58= [A_MEM]=FU(a)                                          A_MEM-Write(S49,S57)

MEM	S59= ConditionReg_MEM.Out=FPConditionCode(cc,1)             ConditionReg_MEM-Out(S54)
	S60= IR_MEM.Out={0,rS,cc,0,1,rD,0,1}                        IR_MEM-Out(S56)
	S61= A_MEM.Out=FU(a)                                        A_MEM-Out(S58)
	S62= IR_MEM.Out=>IR_DMMU1.In                                Premise(F172)
	S63= IR_DMMU1.In={0,rS,cc,0,1,rD,0,1}                       Path(S60,S62)
	S64= A_MEM.Out=>A_DMMU1.In                                  Premise(F174)
	S65= A_DMMU1.In=FU(a)                                       Path(S61,S64)
	S66= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In            Premise(F176)
	S67= ConditionReg_DMMU1.In=FPConditionCode(cc,1)            Path(S59,S66)
	S68= CtrlPC=0                                               Premise(F186)
	S69= CtrlPCInc=0                                            Premise(F187)
	S70= PC[Out]=addr+4                                         PC-Hold(S52,S68,S69)
	S71= CtrlIR_DMMU1=1                                         Premise(F202)
	S72= [IR_DMMU1]={0,rS,cc,0,1,rD,0,1}                        IR_DMMU1-Write(S63,S71)
	S73= CtrlA_DMMU1=1                                          Premise(F204)
	S74= [A_DMMU1]=FU(a)                                        A_DMMU1-Write(S65,S73)
	S75= CtrlConditionReg_DMMU1=1                               Premise(F206)
	S76= [ConditionReg_DMMU1]=FPConditionCode(cc,1)             ConditionReg_DMMU1-Write(S67,S75)

MEM(DMMU1)	S77= IR_DMMU1.Out={0,rS,cc,0,1,rD,0,1}                      IR_DMMU1-Out(S72)
	S78= A_DMMU1.Out=FU(a)                                      A_DMMU1-Out(S74)
	S79= ConditionReg_DMMU1.Out=FPConditionCode(cc,1)           ConditionReg_DMMU1-Out(S76)
	S80= IR_DMMU1.Out=>IR_DMMU2.In                              Premise(F219)
	S81= IR_DMMU2.In={0,rS,cc,0,1,rD,0,1}                       Path(S77,S80)
	S82= A_DMMU1.Out=>A_DMMU2.In                                Premise(F220)
	S83= A_DMMU2.In=FU(a)                                       Path(S78,S82)
	S84= ConditionReg_DMMU1.Out=>ConditionReg_DMMU2.In          Premise(F221)
	S85= ConditionReg_DMMU2.In=FPConditionCode(cc,1)            Path(S79,S84)
	S86= CtrlPC=0                                               Premise(F228)
	S87= CtrlPCInc=0                                            Premise(F229)
	S88= PC[Out]=addr+4                                         PC-Hold(S70,S86,S87)
	S89= CtrlIR_DMMU2=1                                         Premise(F250)
	S90= [IR_DMMU2]={0,rS,cc,0,1,rD,0,1}                        IR_DMMU2-Write(S81,S89)
	S91= CtrlA_DMMU2=1                                          Premise(F251)
	S92= [A_DMMU2]=FU(a)                                        A_DMMU2-Write(S83,S91)
	S93= CtrlConditionReg_DMMU2=1                               Premise(F252)
	S94= [ConditionReg_DMMU2]=FPConditionCode(cc,1)             ConditionReg_DMMU2-Write(S85,S93)

MEM(DMMU2)	S95= IR_DMMU2.Out={0,rS,cc,0,1,rD,0,1}                      IR_DMMU2-Out(S90)
	S96= A_DMMU2.Out=FU(a)                                      A_DMMU2-Out(S92)
	S97= ConditionReg_DMMU2.Out=FPConditionCode(cc,1)           ConditionReg_DMMU2-Out(S94)
	S98= IR_DMMU2.Out=>IR_WB.In                                 Premise(F258)
	S99= IR_WB.In={0,rS,cc,0,1,rD,0,1}                          Path(S95,S98)
	S100= A_DMMU2.Out=>A_WB.In                                  Premise(F259)
	S101= A_WB.In=FU(a)                                         Path(S96,S100)
	S102= ConditionReg_DMMU2.Out=>ConditionReg_WB.In            Premise(F260)
	S103= ConditionReg_WB.In=FPConditionCode(cc,1)              Path(S97,S102)
	S104= CtrlPC=0                                              Premise(F267)
	S105= CtrlPCInc=0                                           Premise(F268)
	S106= PC[Out]=addr+4                                        PC-Hold(S88,S104,S105)
	S107= CtrlIR_WB=1                                           Premise(F284)
	S108= [IR_WB]={0,rS,cc,0,1,rD,0,1}                          IR_WB-Write(S99,S107)
	S109= CtrlA_WB=1                                            Premise(F286)
	S110= [A_WB]=FU(a)                                          A_WB-Write(S101,S109)
	S111= CtrlConditionReg_WB=1                                 Premise(F288)
	S112= [ConditionReg_WB]=FPConditionCode(cc,1)               ConditionReg_WB-Write(S103,S111)

WB	S113= IR_WB.Out15_11=rD                                     IR-Out(S108)
	S114= A_WB.Out=FU(a)                                        A_WB-Out(S110)
	S115= IR_WB.Out15_11=>GPR.WReg                              Premise(F295)
	S116= GPR.WReg=rD                                           Path(S113,S115)
	S117= A_WB.Out=>GPR.WData                                   Premise(F296)
	S118= GPR.WData=FU(a)                                       Path(S114,S117)
	S119= CtrlPC=0                                              Premise(F305)
	S120= CtrlPCInc=0                                           Premise(F306)
	S121= PC[Out]=addr+4                                        PC-Hold(S106,S119,S120)
	S122= CtrlGPR=1                                             Premise(F314)
	S123= GPR[rD]=FU(a)                                         GPR-Write(S116,S118,S122)
	S124= CtrlConditionReg_WB=0                                 Premise(F326)
	S125= [ConditionReg_WB]=FPConditionCode(cc,1)               ConditionReg_WB-Hold(S112,S124)

POST	S121= PC[Out]=addr+4                                        PC-Hold(S106,S119,S120)
	S123= GPR[rD]=FU(a)                                         GPR-Write(S116,S118,S122)
	S125= [ConditionReg_WB]=FPConditionCode(cc,1)               ConditionReg_WB-Hold(S112,S124)

