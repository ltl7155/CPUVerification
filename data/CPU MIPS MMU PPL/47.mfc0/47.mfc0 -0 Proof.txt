
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={16,0,rT,rD,0,sel}                     Premise(F2)
	S3= CP0[rD]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= IMMU.Addr=>IAddrReg.In                                  Premise(F46)
	S7= PC.Out=>IMMU.IEA                                        Premise(F51)
	S8= IMMU.IEA=addr                                           Path(S5,S7)
	S9= CP0.ASID=>IMMU.PID                                      Premise(F52)
	S10= IMMU.PID=pid                                           Path(S4,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S10,S8)
	S12= IAddrReg.In={pid,addr}                                 Path(S11,S6)
	S13= CtrlCP0=0                                              Premise(F93)
	S14= CP0[rD]=a                                              CP0-Hold(S3,S13)
	S15= CtrlIAddrReg=1                                         Premise(F105)
	S16= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S15)
	S17= CtrlPC=0                                               Premise(F106)
	S18= CtrlPCInc=0                                            Premise(F107)
	S19= PC[Out]=addr                                           PC-Hold(S1,S17,S18)
	S20= CtrlIMem=0                                             Premise(F108)
	S21= IMem[{pid,addr}]={16,0,rT,rD,0,sel}                    IMem-Hold(S2,S20)

IMMU	S22= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S16)
	S23= PC.Out=addr                                            PC-Out(S19)
	S24= PC.Out=>ICache.IEA                                     Premise(F154)
	S25= ICache.IEA=addr                                        Path(S23,S24)
	S26= IMem.MEM8WordOut=>ICache.WData                         Premise(F156)
	S27= IAddrReg.Out=>IMem.RAddr                               Premise(F160)
	S28= IMem.RAddr={pid,addr}                                  Path(S22,S27)
	S29= IMem.Out={16,0,rT,rD,0,sel}                            IMem-Read(S28,S21)
	S30= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S28,S21)
	S31= ICache.WData=IMemGet8Word({pid,addr})                  Path(S30,S26)
	S32= IMem.Out=>IRMux.MemData                                Premise(F163)
	S33= IRMux.MemData={16,0,rT,rD,0,sel}                       Path(S29,S32)
	S34= IRMux.Out={16,0,rT,rD,0,sel}                           IRMux-Select2(S33)
	S35= IRMux.Out=>IR_ID.In                                    Premise(F169)
	S36= IR_ID.In={16,0,rT,rD,0,sel}                            Path(S34,S35)
	S37= CtrlIR_ID=1                                            Premise(F198)
	S38= [IR_ID]={16,0,rT,rD,0,sel}                             IR_ID-Write(S36,S37)
	S39= CtrlCP0=0                                              Premise(F200)
	S40= CP0[rD]=a                                              CP0-Hold(S14,S39)
	S41= CtrlICache=1                                           Premise(F203)
	S42= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S25,S31,S41)
	S43= CtrlPC=0                                               Premise(F213)
	S44= CtrlPCInc=1                                            Premise(F214)
	S45= PC[Out]=addr+4                                         PC-Inc(S19,S43,S44)

ID	S46= IR_ID.Out20_16=rT                                      IR-Out(S38)
	S47= IR_ID.Out15_11=rD                                      IR-Out(S38)
	S48= IR_ID.Out15_11=>CP0.RReg                               Premise(F218)
	S49= CP0.RReg=rD                                            Path(S47,S48)
	S50= CP0.Rdata=a                                            CP0-Read(S49,S40)
	S51= CP0.Rdata=>GPR.WData                                   Premise(F260)
	S52= GPR.WData=a                                            Path(S50,S51)
	S53= IR_ID.Out20_16=>GPR.WReg                               Premise(F261)
	S54= GPR.WReg=rT                                            Path(S46,S53)
	S55= CtrlICache=0                                           Premise(F312)
	S56= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S42,S55)
	S57= CtrlGPR=1                                              Premise(F320)
	S58= GPR[rT]=a                                              GPR-Write(S54,S52,S57)
	S59= CtrlPC=0                                               Premise(F322)
	S60= CtrlPCInc=0                                            Premise(F323)
	S61= PC[Out]=addr+4                                         PC-Hold(S45,S59,S60)

EX	S62= CtrlICache=0                                           Premise(F420)
	S63= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S56,S62)
	S64= CtrlGPR=0                                              Premise(F428)
	S65= GPR[rT]=a                                              GPR-Hold(S58,S64)
	S66= CtrlPC=0                                               Premise(F430)
	S67= CtrlPCInc=0                                            Premise(F431)
	S68= PC[Out]=addr+4                                         PC-Hold(S61,S66,S67)

MEM	S69= CtrlICache=0                                           Premise(F528)
	S70= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S63,S69)
	S71= CtrlGPR=0                                              Premise(F536)
	S72= GPR[rT]=a                                              GPR-Hold(S65,S71)
	S73= CtrlPC=0                                               Premise(F538)
	S74= CtrlPCInc=0                                            Premise(F539)
	S75= PC[Out]=addr+4                                         PC-Hold(S68,S73,S74)

DMMU1	S76= CtrlICache=0                                           Premise(F636)
	S77= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S70,S76)
	S78= CtrlGPR=0                                              Premise(F644)
	S79= GPR[rT]=a                                              GPR-Hold(S72,S78)
	S80= CtrlPC=0                                               Premise(F646)
	S81= CtrlPCInc=0                                            Premise(F647)
	S82= PC[Out]=addr+4                                         PC-Hold(S75,S80,S81)

DMMU2	S83= CtrlICache=0                                           Premise(F744)
	S84= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S77,S83)
	S85= CtrlGPR=0                                              Premise(F752)
	S86= GPR[rT]=a                                              GPR-Hold(S79,S85)
	S87= CtrlPC=0                                               Premise(F754)
	S88= CtrlPCInc=0                                            Premise(F755)
	S89= PC[Out]=addr+4                                         PC-Hold(S82,S87,S88)

WB	S90= CtrlICache=0                                           Premise(F852)
	S91= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S84,S90)
	S92= CtrlGPR=0                                              Premise(F860)
	S93= GPR[rT]=a                                              GPR-Hold(S86,S92)
	S94= CtrlPC=0                                               Premise(F862)
	S95= CtrlPCInc=0                                            Premise(F863)
	S96= PC[Out]=addr+4                                         PC-Hold(S89,S94,S95)

POST	S91= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S84,S90)
	S93= GPR[rT]=a                                              GPR-Hold(S86,S92)
	S96= PC[Out]=addr+4                                         PC-Hold(S89,S94,S95)

