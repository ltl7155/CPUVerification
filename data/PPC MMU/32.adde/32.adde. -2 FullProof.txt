
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,277}                      Premise(F2)
	S3= ICache[addr]={31,rT,rA,rB,277}                          Premise(F3)
	S4= GPRegs[rA]=a                                            Premise(F4)
	S5= GPRegs[rB]=b                                            Premise(F5)
	S6= XER[SO]=so                                              Premise(F6)
	S7= XER[CA]=ca                                              Premise(F7)

IF	S8= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S9= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S10= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S0)
	S11= PC.Out=addr                                            PC-Out(S1)
	S12= XER.SOOut=so                                           XER-SO-Out(S6)
	S13= XER.CAOut=ca                                           XER-CA-Out(S7)
	S14= PIDReg.Out=>IMMU.PID                                   Premise(F8)
	S15= IMMU.PID=pid                                           Path(S8,S14)
	S16= PC.Out=>IMMU.IEA                                       Premise(F9)
	S17= IMMU.IEA=addr                                          Path(S11,S16)
	S18= IMMU.Addr={pid,addr}                                   IMMU-Search(S15,S17)
	S19= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S15,S17)
	S20= IMMU.Addr=>IAddrReg.In                                 Premise(F10)
	S21= IAddrReg.In={pid,addr}                                 Path(S18,S20)
	S22= IMMU.Hit=>IMMUHitReg.In                                Premise(F11)
	S23= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S19,S22)
	S24= PC.Out=>ICache.IEA                                     Premise(F12)
	S25= ICache.IEA=addr                                        Path(S11,S24)
	S26= ICache.Hit=ICacheHit(addr)                             ICache-Search(S25)
	S27= ICache.Out={31,rT,rA,rB,277}                           ICache-Search(S25,S3)
	S28= ICache.Out=>ICacheReg.In                               Premise(F13)
	S29= ICacheReg.In={31,rT,rA,rB,277}                         Path(S27,S28)
	S30= ICache.Hit=>ICacheHitReg.In                            Premise(F14)
	S31= ICacheHitReg.In=ICacheHit(addr)                        Path(S26,S30)
	S32= IMMUHitReg.Out=>CU.IMemHit                             Premise(F15)
	S33= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F16)
	S34= IAddrReg.Out=>IMem.RAddr                               Premise(F17)
	S35= IMem.Out=>IRMux.MemData                                Premise(F18)
	S36= ICacheReg.Out=>IRMux.CacheData                         Premise(F19)
	S37= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F20)
	S38= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F21)
	S39= IRMux.Out=>IR.In                                       Premise(F22)
	S40= IMem.MEM8WordOut=>ICache.WData                         Premise(F23)
	S41= PC.Out=>ICache.IEA                                     Premise(F24)
	S42= IR.Out0_5=>CU.Op                                       Premise(F25)
	S43= IR.Out11_15=>GPRegs.RReg1                              Premise(F26)
	S44= IR.Out16_20=>GPRegs.RReg2                              Premise(F27)
	S45= IR.Out21_31=>CU.IRFunc                                 Premise(F28)
	S46= GPRegs.Rdata1=>A.In                                    Premise(F29)
	S47= GPRegs.Rdata2=>B.In                                    Premise(F30)
	S48= A.Out=>ALU.A                                           Premise(F31)
	S49= B.Out=>ALU.B                                           Premise(F32)
	S50= XER.CAOut=>ALU.CAIn                                    Premise(F33)
	S51= ALU.CAIn=ca                                            Path(S13,S50)
	S52= CU.Func=>ALU.Func                                      Premise(F34)
	S53= ALU.Out=>ALUOut.In                                     Premise(F35)
	S54= ALU.CA=>CAReg.In                                       Premise(F36)
	S55= ALU.CMP=>DataCmb.A                                     Premise(F37)
	S56= XER.SOOut=>DataCmb.B                                   Premise(F38)
	S57= DataCmb.B=so                                           Path(S12,S56)
	S58= DataCmb.Out=>DR4bit.In                                 Premise(F39)
	S59= IR.Out6_10=>GPRegs.WReg                                Premise(F40)
	S60= ALUOut.Out=>GPRegs.WData                               Premise(F41)
	S61= DR4bit.Out=>CRRegs.CR0In                               Premise(F42)
	S62= CAReg.Out=>XER.CAIn                                    Premise(F43)
	S63= CtrlPIDReg=0                                           Premise(F44)
	S64= [PIDReg]=pid                                           PIDReg-Hold(S0,S63)
	S65= CtrlIMMU=0                                             Premise(F45)
	S66= CtrlPC=0                                               Premise(F46)
	S67= CtrlPCInc=0                                            Premise(F47)
	S68= PC[Out]=addr                                           PC-Hold(S1,S66,S67)
	S69= CtrlIAddrReg=1                                         Premise(F48)
	S70= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S21,S69)
	S71= CtrlIMMUHitReg=1                                       Premise(F49)
	S72= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S23,S71)
	S73= CtrlICache=0                                           Premise(F50)
	S74= ICache[addr]={31,rT,rA,rB,277}                         ICache-Hold(S3,S73)
	S75= CtrlICacheReg=1                                        Premise(F51)
	S76= [ICacheReg]={31,rT,rA,rB,277}                          ICacheReg-Write(S29,S75)
	S77= CtrlICacheHitReg=1                                     Premise(F52)
	S78= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S31,S77)
	S79= CtrlIMem=0                                             Premise(F53)
	S80= IMem[{pid,addr}]={31,rT,rA,rB,277}                     IMem-Hold(S2,S79)
	S81= CtrlIRMux=0                                            Premise(F54)
	S82= CtrlIR=0                                               Premise(F55)
	S83= CtrlGPRegs=0                                           Premise(F56)
	S84= GPRegs[rA]=a                                           GPRegs-Hold(S4,S83)
	S85= GPRegs[rB]=b                                           GPRegs-Hold(S5,S83)
	S86= CtrlA=0                                                Premise(F57)
	S87= CtrlB=0                                                Premise(F58)
	S88= CtrlXERSO=0                                            Premise(F59)
	S89= XER[SO]=so                                             XER-SO-Hold(S6,S88)
	S90= CtrlXEROV=0                                            Premise(F60)
	S91= CtrlXERCA=0                                            Premise(F61)
	S92= XER[CA]=ca                                             XER-CA-Hold(S7,S91)
	S93= CtrlALUOut=0                                           Premise(F62)
	S94= CtrlCAReg=0                                            Premise(F63)
	S95= CtrlDR4bit=0                                           Premise(F64)
	S96= CtrlCRRegs=0                                           Premise(F65)
	S97= CtrlCRRegsCR0=0                                        Premise(F66)
	S98= CtrlCRRegsW4bitRegs=0                                  Premise(F67)
	S99= CtrlCRRegsW1bitRegs=0                                  Premise(F68)

IMMU	S100= PIDReg.Out=pid                                        PIDReg-Out(S64)
	S101= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S64)
	S102= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S64)
	S103= PC.Out=addr                                           PC-Out(S68)
	S104= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S70)
	S105= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S70)
	S106= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S70)
	S107= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S72)
	S108= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S72)
	S109= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S72)
	S110= ICacheReg.Out={31,rT,rA,rB,277}                       ICacheReg-Out(S76)
	S111= ICacheReg.Out26_31={31,rT,rA,rB,277}[26:31]           ICacheReg-Out(S76)
	S112= ICacheReg.Out30_31={31,rT,rA,rB,277}[30:31]           ICacheReg-Out(S76)
	S113= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S78)
	S114= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S78)
	S115= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S78)
	S116= XER.SOOut=so                                          XER-SO-Out(S89)
	S117= XER.CAOut=ca                                          XER-CA-Out(S92)
	S118= PIDReg.Out=>IMMU.PID                                  Premise(F69)
	S119= IMMU.PID=pid                                          Path(S100,S118)
	S120= PC.Out=>IMMU.IEA                                      Premise(F70)
	S121= IMMU.IEA=addr                                         Path(S103,S120)
	S122= IMMU.Addr={pid,addr}                                  IMMU-Search(S119,S121)
	S123= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S119,S121)
	S124= IMMU.Addr=>IAddrReg.In                                Premise(F71)
	S125= IAddrReg.In={pid,addr}                                Path(S122,S124)
	S126= IMMU.Hit=>IMMUHitReg.In                               Premise(F72)
	S127= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S123,S126)
	S128= PC.Out=>ICache.IEA                                    Premise(F73)
	S129= ICache.IEA=addr                                       Path(S103,S128)
	S130= ICache.Hit=ICacheHit(addr)                            ICache-Search(S129)
	S131= ICache.Out={31,rT,rA,rB,277}                          ICache-Search(S129,S74)
	S132= ICache.Out=>ICacheReg.In                              Premise(F74)
	S133= ICacheReg.In={31,rT,rA,rB,277}                        Path(S131,S132)
	S134= ICache.Hit=>ICacheHitReg.In                           Premise(F75)
	S135= ICacheHitReg.In=ICacheHit(addr)                       Path(S130,S134)
	S136= IMMUHitReg.Out=>CU.IMemHit                            Premise(F76)
	S137= CU.IMemHit=IMMUHit(pid,addr)                          Path(S107,S136)
	S138= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F77)
	S139= CU.ICacheHit=ICacheHit(addr)                          Path(S113,S138)
	S140= IAddrReg.Out=>IMem.RAddr                              Premise(F78)
	S141= IMem.RAddr={pid,addr}                                 Path(S104,S140)
	S142= IMem.Out={31,rT,rA,rB,277}                            IMem-Read(S141,S80)
	S143= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S141,S80)
	S144= IMem.Out=>IRMux.MemData                               Premise(F79)
	S145= IRMux.MemData={31,rT,rA,rB,277}                       Path(S142,S144)
	S146= ICacheReg.Out=>IRMux.CacheData                        Premise(F80)
	S147= IRMux.CacheData={31,rT,rA,rB,277}                     Path(S110,S146)
	S148= IRMux.Out={31,rT,rA,rB,277}                           IRMux-Select(S145,S147)
	S149= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F81)
	S150= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S107,S149)
	S151= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F82)
	S152= IRMux.CacheSel=ICacheHit(addr)                        Path(S113,S151)
	S153= IRMux.Out=>IR.In                                      Premise(F83)
	S154= IR.In={31,rT,rA,rB,277}                               Path(S148,S153)
	S155= IMem.MEM8WordOut=>ICache.WData                        Premise(F84)
	S156= ICache.WData=IMemGet8Word({pid,addr})                 Path(S143,S155)
	S157= PC.Out=>ICache.IEA                                    Premise(F85)
	S158= IR.Out0_5=>CU.Op                                      Premise(F86)
	S159= IR.Out11_15=>GPRegs.RReg1                             Premise(F87)
	S160= IR.Out16_20=>GPRegs.RReg2                             Premise(F88)
	S161= IR.Out21_31=>CU.IRFunc                                Premise(F89)
	S162= GPRegs.Rdata1=>A.In                                   Premise(F90)
	S163= GPRegs.Rdata2=>B.In                                   Premise(F91)
	S164= A.Out=>ALU.A                                          Premise(F92)
	S165= B.Out=>ALU.B                                          Premise(F93)
	S166= XER.CAOut=>ALU.CAIn                                   Premise(F94)
	S167= ALU.CAIn=ca                                           Path(S117,S166)
	S168= CU.Func=>ALU.Func                                     Premise(F95)
	S169= ALU.Out=>ALUOut.In                                    Premise(F96)
	S170= ALU.CA=>CAReg.In                                      Premise(F97)
	S171= ALU.CMP=>DataCmb.A                                    Premise(F98)
	S172= XER.SOOut=>DataCmb.B                                  Premise(F99)
	S173= DataCmb.B=so                                          Path(S116,S172)
	S174= DataCmb.Out=>DR4bit.In                                Premise(F100)
	S175= IR.Out6_10=>GPRegs.WReg                               Premise(F101)
	S176= ALUOut.Out=>GPRegs.WData                              Premise(F102)
	S177= DR4bit.Out=>CRRegs.CR0In                              Premise(F103)
	S178= CAReg.Out=>XER.CAIn                                   Premise(F104)
	S179= CtrlPIDReg=0                                          Premise(F105)
	S180= [PIDReg]=pid                                          PIDReg-Hold(S64,S179)
	S181= CtrlIMMU=0                                            Premise(F106)
	S182= CtrlPC=0                                              Premise(F107)
	S183= CtrlPCInc=1                                           Premise(F108)
	S184= PC[Out]=addr+4                                        PC-Inc(S68,S182,S183)
	S185= PC[CIA]=addr                                          PC-Inc(S68,S182,S183)
	S186= CtrlIAddrReg=0                                        Premise(F109)
	S187= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S70,S186)
	S188= CtrlIMMUHitReg=0                                      Premise(F110)
	S189= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S72,S188)
	S190= CtrlICache=0                                          Premise(F111)
	S191= ICache[addr]={31,rT,rA,rB,277}                        ICache-Hold(S74,S190)
	S192= CtrlICacheReg=0                                       Premise(F112)
	S193= [ICacheReg]={31,rT,rA,rB,277}                         ICacheReg-Hold(S76,S192)
	S194= CtrlICacheHitReg=0                                    Premise(F113)
	S195= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S78,S194)
	S196= CtrlIMem=0                                            Premise(F114)
	S197= IMem[{pid,addr}]={31,rT,rA,rB,277}                    IMem-Hold(S80,S196)
	S198= CtrlIRMux=0                                           Premise(F115)
	S199= CtrlIR=1                                              Premise(F116)
	S200= [IR]={31,rT,rA,rB,277}                                IR-Write(S154,S199)
	S201= CtrlGPRegs=0                                          Premise(F117)
	S202= GPRegs[rA]=a                                          GPRegs-Hold(S84,S201)
	S203= GPRegs[rB]=b                                          GPRegs-Hold(S85,S201)
	S204= CtrlA=0                                               Premise(F118)
	S205= CtrlB=0                                               Premise(F119)
	S206= CtrlXERSO=0                                           Premise(F120)
	S207= XER[SO]=so                                            XER-SO-Hold(S89,S206)
	S208= CtrlXEROV=0                                           Premise(F121)
	S209= CtrlXERCA=0                                           Premise(F122)
	S210= XER[CA]=ca                                            XER-CA-Hold(S92,S209)
	S211= CtrlALUOut=0                                          Premise(F123)
	S212= CtrlCAReg=0                                           Premise(F124)
	S213= CtrlDR4bit=0                                          Premise(F125)
	S214= CtrlCRRegs=0                                          Premise(F126)
	S215= CtrlCRRegsCR0=0                                       Premise(F127)
	S216= CtrlCRRegsW4bitRegs=0                                 Premise(F128)
	S217= CtrlCRRegsW1bitRegs=0                                 Premise(F129)

ID	S218= PIDReg.Out=pid                                        PIDReg-Out(S180)
	S219= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S180)
	S220= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S180)
	S221= PC.Out=addr+4                                         PC-Out(S184)
	S222= PC.CIA=addr                                           PC-Out(S185)
	S223= PC.CIA31_28=addr[31:28]                               PC-Out(S185)
	S224= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S187)
	S225= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S187)
	S226= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S187)
	S227= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S189)
	S228= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S189)
	S229= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S189)
	S230= ICacheReg.Out={31,rT,rA,rB,277}                       ICacheReg-Out(S193)
	S231= ICacheReg.Out26_31={31,rT,rA,rB,277}[26:31]           ICacheReg-Out(S193)
	S232= ICacheReg.Out30_31={31,rT,rA,rB,277}[30:31]           ICacheReg-Out(S193)
	S233= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S195)
	S234= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S195)
	S235= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S195)
	S236= IR.Out0_5=31                                          IR-Out(S200)
	S237= IR.Out6_10=rT                                         IR-Out(S200)
	S238= IR.Out11_15=rA                                        IR-Out(S200)
	S239= IR.Out16_20=rB                                        IR-Out(S200)
	S240= IR.Out21_31=277                                       IR-Out(S200)
	S241= XER.SOOut=so                                          XER-SO-Out(S207)
	S242= XER.CAOut=ca                                          XER-CA-Out(S210)
	S243= PIDReg.Out=>IMMU.PID                                  Premise(F130)
	S244= IMMU.PID=pid                                          Path(S218,S243)
	S245= PC.Out=>IMMU.IEA                                      Premise(F131)
	S246= IMMU.IEA=addr+4                                       Path(S221,S245)
	S247= IMMU.Addr={pid,addr+4}                                IMMU-Search(S244,S246)
	S248= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S244,S246)
	S249= IMMU.Addr=>IAddrReg.In                                Premise(F132)
	S250= IAddrReg.In={pid,addr+4}                              Path(S247,S249)
	S251= IMMU.Hit=>IMMUHitReg.In                               Premise(F133)
	S252= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S248,S251)
	S253= PC.Out=>ICache.IEA                                    Premise(F134)
	S254= ICache.IEA=addr+4                                     Path(S221,S253)
	S255= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S254)
	S256= ICache.Out=>ICacheReg.In                              Premise(F135)
	S257= ICache.Hit=>ICacheHitReg.In                           Premise(F136)
	S258= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S255,S257)
	S259= IMMUHitReg.Out=>CU.IMemHit                            Premise(F137)
	S260= CU.IMemHit=IMMUHit(pid,addr)                          Path(S227,S259)
	S261= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F138)
	S262= CU.ICacheHit=ICacheHit(addr)                          Path(S233,S261)
	S263= IAddrReg.Out=>IMem.RAddr                              Premise(F139)
	S264= IMem.RAddr={pid,addr}                                 Path(S224,S263)
	S265= IMem.Out={31,rT,rA,rB,277}                            IMem-Read(S264,S197)
	S266= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S264,S197)
	S267= IMem.Out=>IRMux.MemData                               Premise(F140)
	S268= IRMux.MemData={31,rT,rA,rB,277}                       Path(S265,S267)
	S269= ICacheReg.Out=>IRMux.CacheData                        Premise(F141)
	S270= IRMux.CacheData={31,rT,rA,rB,277}                     Path(S230,S269)
	S271= IRMux.Out={31,rT,rA,rB,277}                           IRMux-Select(S268,S270)
	S272= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F142)
	S273= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S227,S272)
	S274= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F143)
	S275= IRMux.CacheSel=ICacheHit(addr)                        Path(S233,S274)
	S276= IRMux.Out=>IR.In                                      Premise(F144)
	S277= IR.In={31,rT,rA,rB,277}                               Path(S271,S276)
	S278= IMem.MEM8WordOut=>ICache.WData                        Premise(F145)
	S279= ICache.WData=IMemGet8Word({pid,addr})                 Path(S266,S278)
	S280= PC.Out=>ICache.IEA                                    Premise(F146)
	S281= IR.Out0_5=>CU.Op                                      Premise(F147)
	S282= CU.Op=31                                              Path(S236,S281)
	S283= IR.Out11_15=>GPRegs.RReg1                             Premise(F148)
	S284= GPRegs.RReg1=rA                                       Path(S238,S283)
	S285= GPRegs.Rdata1=a                                       GPRegs-Read(S284,S202)
	S286= IR.Out16_20=>GPRegs.RReg2                             Premise(F149)
	S287= GPRegs.RReg2=rB                                       Path(S239,S286)
	S288= GPRegs.Rdata2=b                                       GPRegs-Read(S287,S203)
	S289= IR.Out21_31=>CU.IRFunc                                Premise(F150)
	S290= CU.IRFunc=277                                         Path(S240,S289)
	S291= CU.Func=alu_adde                                      CU(S282,S290)
	S292= GPRegs.Rdata1=>A.In                                   Premise(F151)
	S293= A.In=a                                                Path(S285,S292)
	S294= GPRegs.Rdata2=>B.In                                   Premise(F152)
	S295= B.In=b                                                Path(S288,S294)
	S296= A.Out=>ALU.A                                          Premise(F153)
	S297= B.Out=>ALU.B                                          Premise(F154)
	S298= XER.CAOut=>ALU.CAIn                                   Premise(F155)
	S299= ALU.CAIn=ca                                           Path(S242,S298)
	S300= CU.Func=>ALU.Func                                     Premise(F156)
	S301= ALU.Func=alu_adde                                     Path(S291,S300)
	S302= ALU.Out=>ALUOut.In                                    Premise(F157)
	S303= ALU.CA=>CAReg.In                                      Premise(F158)
	S304= ALU.CMP=>DataCmb.A                                    Premise(F159)
	S305= XER.SOOut=>DataCmb.B                                  Premise(F160)
	S306= DataCmb.B=so                                          Path(S241,S305)
	S307= DataCmb.Out=>DR4bit.In                                Premise(F161)
	S308= IR.Out6_10=>GPRegs.WReg                               Premise(F162)
	S309= GPRegs.WReg=rT                                        Path(S237,S308)
	S310= ALUOut.Out=>GPRegs.WData                              Premise(F163)
	S311= DR4bit.Out=>CRRegs.CR0In                              Premise(F164)
	S312= CAReg.Out=>XER.CAIn                                   Premise(F165)
	S313= CtrlPIDReg=0                                          Premise(F166)
	S314= [PIDReg]=pid                                          PIDReg-Hold(S180,S313)
	S315= CtrlIMMU=0                                            Premise(F167)
	S316= CtrlPC=0                                              Premise(F168)
	S317= CtrlPCInc=0                                           Premise(F169)
	S318= PC[CIA]=addr                                          PC-Hold(S185,S317)
	S319= PC[Out]=addr+4                                        PC-Hold(S184,S316,S317)
	S320= CtrlIAddrReg=0                                        Premise(F170)
	S321= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S187,S320)
	S322= CtrlIMMUHitReg=0                                      Premise(F171)
	S323= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S189,S322)
	S324= CtrlICache=0                                          Premise(F172)
	S325= ICache[addr]={31,rT,rA,rB,277}                        ICache-Hold(S191,S324)
	S326= CtrlICacheReg=0                                       Premise(F173)
	S327= [ICacheReg]={31,rT,rA,rB,277}                         ICacheReg-Hold(S193,S326)
	S328= CtrlICacheHitReg=0                                    Premise(F174)
	S329= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S195,S328)
	S330= CtrlIMem=0                                            Premise(F175)
	S331= IMem[{pid,addr}]={31,rT,rA,rB,277}                    IMem-Hold(S197,S330)
	S332= CtrlIRMux=0                                           Premise(F176)
	S333= CtrlIR=0                                              Premise(F177)
	S334= [IR]={31,rT,rA,rB,277}                                IR-Hold(S200,S333)
	S335= CtrlGPRegs=0                                          Premise(F178)
	S336= GPRegs[rA]=a                                          GPRegs-Hold(S202,S335)
	S337= GPRegs[rB]=b                                          GPRegs-Hold(S203,S335)
	S338= CtrlA=1                                               Premise(F179)
	S339= [A]=a                                                 A-Write(S293,S338)
	S340= CtrlB=1                                               Premise(F180)
	S341= [B]=b                                                 B-Write(S295,S340)
	S342= CtrlXERSO=0                                           Premise(F181)
	S343= XER[SO]=so                                            XER-SO-Hold(S207,S342)
	S344= CtrlXEROV=0                                           Premise(F182)
	S345= CtrlXERCA=0                                           Premise(F183)
	S346= XER[CA]=ca                                            XER-CA-Hold(S210,S345)
	S347= CtrlALUOut=0                                          Premise(F184)
	S348= CtrlCAReg=0                                           Premise(F185)
	S349= CtrlDR4bit=0                                          Premise(F186)
	S350= CtrlCRRegs=0                                          Premise(F187)
	S351= CtrlCRRegsCR0=0                                       Premise(F188)
	S352= CtrlCRRegsW4bitRegs=0                                 Premise(F189)
	S353= CtrlCRRegsW1bitRegs=0                                 Premise(F190)

EX	S354= PIDReg.Out=pid                                        PIDReg-Out(S314)
	S355= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S314)
	S356= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S314)
	S357= PC.CIA=addr                                           PC-Out(S318)
	S358= PC.CIA31_28=addr[31:28]                               PC-Out(S318)
	S359= PC.Out=addr+4                                         PC-Out(S319)
	S360= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S321)
	S361= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S321)
	S362= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S321)
	S363= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S323)
	S364= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S323)
	S365= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S323)
	S366= ICacheReg.Out={31,rT,rA,rB,277}                       ICacheReg-Out(S327)
	S367= ICacheReg.Out26_31={31,rT,rA,rB,277}[26:31]           ICacheReg-Out(S327)
	S368= ICacheReg.Out30_31={31,rT,rA,rB,277}[30:31]           ICacheReg-Out(S327)
	S369= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S329)
	S370= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S329)
	S371= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S329)
	S372= IR.Out0_5=31                                          IR-Out(S334)
	S373= IR.Out6_10=rT                                         IR-Out(S334)
	S374= IR.Out11_15=rA                                        IR-Out(S334)
	S375= IR.Out16_20=rB                                        IR-Out(S334)
	S376= IR.Out21_31=277                                       IR-Out(S334)
	S377= A.Out=a                                               A-Out(S339)
	S378= A.Out26_31=a[26:31]                                   A-Out(S339)
	S379= A.Out30_31=a[30:31]                                   A-Out(S339)
	S380= B.Out=b                                               B-Out(S341)
	S381= B.Out26_31=b[26:31]                                   B-Out(S341)
	S382= B.Out30_31=b[30:31]                                   B-Out(S341)
	S383= XER.SOOut=so                                          XER-SO-Out(S343)
	S384= XER.CAOut=ca                                          XER-CA-Out(S346)
	S385= PIDReg.Out=>IMMU.PID                                  Premise(F191)
	S386= IMMU.PID=pid                                          Path(S354,S385)
	S387= PC.Out=>IMMU.IEA                                      Premise(F192)
	S388= IMMU.IEA=addr+4                                       Path(S359,S387)
	S389= IMMU.Addr={pid,addr+4}                                IMMU-Search(S386,S388)
	S390= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S386,S388)
	S391= IMMU.Addr=>IAddrReg.In                                Premise(F193)
	S392= IAddrReg.In={pid,addr+4}                              Path(S389,S391)
	S393= IMMU.Hit=>IMMUHitReg.In                               Premise(F194)
	S394= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S390,S393)
	S395= PC.Out=>ICache.IEA                                    Premise(F195)
	S396= ICache.IEA=addr+4                                     Path(S359,S395)
	S397= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S396)
	S398= ICache.Out=>ICacheReg.In                              Premise(F196)
	S399= ICache.Hit=>ICacheHitReg.In                           Premise(F197)
	S400= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S397,S399)
	S401= IMMUHitReg.Out=>CU.IMemHit                            Premise(F198)
	S402= CU.IMemHit=IMMUHit(pid,addr)                          Path(S363,S401)
	S403= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F199)
	S404= CU.ICacheHit=ICacheHit(addr)                          Path(S369,S403)
	S405= IAddrReg.Out=>IMem.RAddr                              Premise(F200)
	S406= IMem.RAddr={pid,addr}                                 Path(S360,S405)
	S407= IMem.Out={31,rT,rA,rB,277}                            IMem-Read(S406,S331)
	S408= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S406,S331)
	S409= IMem.Out=>IRMux.MemData                               Premise(F201)
	S410= IRMux.MemData={31,rT,rA,rB,277}                       Path(S407,S409)
	S411= ICacheReg.Out=>IRMux.CacheData                        Premise(F202)
	S412= IRMux.CacheData={31,rT,rA,rB,277}                     Path(S366,S411)
	S413= IRMux.Out={31,rT,rA,rB,277}                           IRMux-Select(S410,S412)
	S414= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F203)
	S415= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S363,S414)
	S416= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F204)
	S417= IRMux.CacheSel=ICacheHit(addr)                        Path(S369,S416)
	S418= IRMux.Out=>IR.In                                      Premise(F205)
	S419= IR.In={31,rT,rA,rB,277}                               Path(S413,S418)
	S420= IMem.MEM8WordOut=>ICache.WData                        Premise(F206)
	S421= ICache.WData=IMemGet8Word({pid,addr})                 Path(S408,S420)
	S422= PC.Out=>ICache.IEA                                    Premise(F207)
	S423= IR.Out0_5=>CU.Op                                      Premise(F208)
	S424= CU.Op=31                                              Path(S372,S423)
	S425= IR.Out11_15=>GPRegs.RReg1                             Premise(F209)
	S426= GPRegs.RReg1=rA                                       Path(S374,S425)
	S427= GPRegs.Rdata1=a                                       GPRegs-Read(S426,S336)
	S428= IR.Out16_20=>GPRegs.RReg2                             Premise(F210)
	S429= GPRegs.RReg2=rB                                       Path(S375,S428)
	S430= GPRegs.Rdata2=b                                       GPRegs-Read(S429,S337)
	S431= IR.Out21_31=>CU.IRFunc                                Premise(F211)
	S432= CU.IRFunc=277                                         Path(S376,S431)
	S433= CU.Func=alu_adde                                      CU(S424,S432)
	S434= GPRegs.Rdata1=>A.In                                   Premise(F212)
	S435= A.In=a                                                Path(S427,S434)
	S436= GPRegs.Rdata2=>B.In                                   Premise(F213)
	S437= B.In=b                                                Path(S430,S436)
	S438= A.Out=>ALU.A                                          Premise(F214)
	S439= ALU.A=a                                               Path(S377,S438)
	S440= B.Out=>ALU.B                                          Premise(F215)
	S441= ALU.B=b                                               Path(S380,S440)
	S442= XER.CAOut=>ALU.CAIn                                   Premise(F216)
	S443= ALU.CAIn=ca                                           Path(S384,S442)
	S444= CU.Func=>ALU.Func                                     Premise(F217)
	S445= ALU.Func=alu_adde                                     Path(S433,S444)
	S446= ALU.Out=a+b+ca                                        ALU(S439,S441,S443)
	S447= ALU.CMP=Compare0(a+b+ca)                              ALU(S439,S441,S443)
	S448= ALU.OV=OverFlow(a+b+ca)                               ALU(S439,S441,S443)
	S449= ALU.CA=Carry(a+b+ca)                                  ALU(S439,S441,S443)
	S450= ALU.Out=>ALUOut.In                                    Premise(F218)
	S451= ALUOut.In=a+b+ca                                      Path(S446,S450)
	S452= ALU.CA=>CAReg.In                                      Premise(F219)
	S453= CAReg.In=Carry(a+b+ca)                                Path(S449,S452)
	S454= ALU.CMP=>DataCmb.A                                    Premise(F220)
	S455= DataCmb.A=Compare0(a+b+ca)                            Path(S447,S454)
	S456= XER.SOOut=>DataCmb.B                                  Premise(F221)
	S457= DataCmb.B=so                                          Path(S383,S456)
	S458= DataCmb.Out={Compare0(a+b+ca),so}                     DataCmb(S455,S457)
	S459= DataCmb.Out=>DR4bit.In                                Premise(F222)
	S460= DR4bit.In={Compare0(a+b+ca),so}                       Path(S458,S459)
	S461= IR.Out6_10=>GPRegs.WReg                               Premise(F223)
	S462= GPRegs.WReg=rT                                        Path(S373,S461)
	S463= ALUOut.Out=>GPRegs.WData                              Premise(F224)
	S464= DR4bit.Out=>CRRegs.CR0In                              Premise(F225)
	S465= CAReg.Out=>XER.CAIn                                   Premise(F226)
	S466= CtrlPIDReg=0                                          Premise(F227)
	S467= [PIDReg]=pid                                          PIDReg-Hold(S314,S466)
	S468= CtrlIMMU=0                                            Premise(F228)
	S469= CtrlPC=0                                              Premise(F229)
	S470= CtrlPCInc=0                                           Premise(F230)
	S471= PC[CIA]=addr                                          PC-Hold(S318,S470)
	S472= PC[Out]=addr+4                                        PC-Hold(S319,S469,S470)
	S473= CtrlIAddrReg=0                                        Premise(F231)
	S474= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S321,S473)
	S475= CtrlIMMUHitReg=0                                      Premise(F232)
	S476= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S323,S475)
	S477= CtrlICache=0                                          Premise(F233)
	S478= ICache[addr]={31,rT,rA,rB,277}                        ICache-Hold(S325,S477)
	S479= CtrlICacheReg=0                                       Premise(F234)
	S480= [ICacheReg]={31,rT,rA,rB,277}                         ICacheReg-Hold(S327,S479)
	S481= CtrlICacheHitReg=0                                    Premise(F235)
	S482= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S329,S481)
	S483= CtrlIMem=0                                            Premise(F236)
	S484= IMem[{pid,addr}]={31,rT,rA,rB,277}                    IMem-Hold(S331,S483)
	S485= CtrlIRMux=0                                           Premise(F237)
	S486= CtrlIR=0                                              Premise(F238)
	S487= [IR]={31,rT,rA,rB,277}                                IR-Hold(S334,S486)
	S488= CtrlGPRegs=0                                          Premise(F239)
	S489= GPRegs[rA]=a                                          GPRegs-Hold(S336,S488)
	S490= GPRegs[rB]=b                                          GPRegs-Hold(S337,S488)
	S491= CtrlA=0                                               Premise(F240)
	S492= [A]=a                                                 A-Hold(S339,S491)
	S493= CtrlB=0                                               Premise(F241)
	S494= [B]=b                                                 B-Hold(S341,S493)
	S495= CtrlXERSO=0                                           Premise(F242)
	S496= XER[SO]=so                                            XER-SO-Hold(S343,S495)
	S497= CtrlXEROV=0                                           Premise(F243)
	S498= CtrlXERCA=0                                           Premise(F244)
	S499= XER[CA]=ca                                            XER-CA-Hold(S346,S498)
	S500= CtrlALUOut=1                                          Premise(F245)
	S501= [ALUOut]=a+b+ca                                       ALUOut-Write(S451,S500)
	S502= CtrlCAReg=1                                           Premise(F246)
	S503= [CAReg]=Carry(a+b+ca)                                 CAReg-Write(S453,S502)
	S504= CtrlDR4bit=1                                          Premise(F247)
	S505= [DR4bit]={Compare0(a+b+ca),so}                        DR4bit-Write(S460,S504)
	S506= CtrlCRRegs=0                                          Premise(F248)
	S507= CtrlCRRegsCR0=0                                       Premise(F249)
	S508= CtrlCRRegsW4bitRegs=0                                 Premise(F250)
	S509= CtrlCRRegsW1bitRegs=0                                 Premise(F251)

MEM	S510= PIDReg.Out=pid                                        PIDReg-Out(S467)
	S511= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S467)
	S512= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S467)
	S513= PC.CIA=addr                                           PC-Out(S471)
	S514= PC.CIA31_28=addr[31:28]                               PC-Out(S471)
	S515= PC.Out=addr+4                                         PC-Out(S472)
	S516= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S474)
	S517= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S474)
	S518= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S474)
	S519= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S476)
	S520= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S476)
	S521= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S476)
	S522= ICacheReg.Out={31,rT,rA,rB,277}                       ICacheReg-Out(S480)
	S523= ICacheReg.Out26_31={31,rT,rA,rB,277}[26:31]           ICacheReg-Out(S480)
	S524= ICacheReg.Out30_31={31,rT,rA,rB,277}[30:31]           ICacheReg-Out(S480)
	S525= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S482)
	S526= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S482)
	S527= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S482)
	S528= IR.Out0_5=31                                          IR-Out(S487)
	S529= IR.Out6_10=rT                                         IR-Out(S487)
	S530= IR.Out11_15=rA                                        IR-Out(S487)
	S531= IR.Out16_20=rB                                        IR-Out(S487)
	S532= IR.Out21_31=277                                       IR-Out(S487)
	S533= A.Out=a                                               A-Out(S492)
	S534= A.Out26_31=a[26:31]                                   A-Out(S492)
	S535= A.Out30_31=a[30:31]                                   A-Out(S492)
	S536= B.Out=b                                               B-Out(S494)
	S537= B.Out26_31=b[26:31]                                   B-Out(S494)
	S538= B.Out30_31=b[30:31]                                   B-Out(S494)
	S539= XER.SOOut=so                                          XER-SO-Out(S496)
	S540= XER.CAOut=ca                                          XER-CA-Out(S499)
	S541= ALUOut.Out=a+b+ca                                     ALUOut-Out(S501)
	S542= ALUOut.Out26_31=a+b+ca[26:31]                         ALUOut-Out(S501)
	S543= ALUOut.Out30_31=a+b+ca[30:31]                         ALUOut-Out(S501)
	S544= CAReg.Out=Carry(a+b+ca)                               CAReg-Out(S503)
	S545= CAReg.Out26_31=Carry(a+b+ca)[26:31]                   CAReg-Out(S503)
	S546= CAReg.Out30_31=Carry(a+b+ca)[30:31]                   CAReg-Out(S503)
	S547= DR4bit.Out={Compare0(a+b+ca),so}                      DR4bit-Out(S505)
	S548= DR4bit.Out26_31={Compare0(a+b+ca),so}[26:31]          DR4bit-Out(S505)
	S549= DR4bit.Out30_31={Compare0(a+b+ca),so}[30:31]          DR4bit-Out(S505)
	S550= PIDReg.Out=>IMMU.PID                                  Premise(F252)
	S551= IMMU.PID=pid                                          Path(S510,S550)
	S552= PC.Out=>IMMU.IEA                                      Premise(F253)
	S553= IMMU.IEA=addr+4                                       Path(S515,S552)
	S554= IMMU.Addr={pid,addr+4}                                IMMU-Search(S551,S553)
	S555= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S551,S553)
	S556= IMMU.Addr=>IAddrReg.In                                Premise(F254)
	S557= IAddrReg.In={pid,addr+4}                              Path(S554,S556)
	S558= IMMU.Hit=>IMMUHitReg.In                               Premise(F255)
	S559= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S555,S558)
	S560= PC.Out=>ICache.IEA                                    Premise(F256)
	S561= ICache.IEA=addr+4                                     Path(S515,S560)
	S562= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S561)
	S563= ICache.Out=>ICacheReg.In                              Premise(F257)
	S564= ICache.Hit=>ICacheHitReg.In                           Premise(F258)
	S565= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S562,S564)
	S566= IMMUHitReg.Out=>CU.IMemHit                            Premise(F259)
	S567= CU.IMemHit=IMMUHit(pid,addr)                          Path(S519,S566)
	S568= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F260)
	S569= CU.ICacheHit=ICacheHit(addr)                          Path(S525,S568)
	S570= IAddrReg.Out=>IMem.RAddr                              Premise(F261)
	S571= IMem.RAddr={pid,addr}                                 Path(S516,S570)
	S572= IMem.Out={31,rT,rA,rB,277}                            IMem-Read(S571,S484)
	S573= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S571,S484)
	S574= IMem.Out=>IRMux.MemData                               Premise(F262)
	S575= IRMux.MemData={31,rT,rA,rB,277}                       Path(S572,S574)
	S576= ICacheReg.Out=>IRMux.CacheData                        Premise(F263)
	S577= IRMux.CacheData={31,rT,rA,rB,277}                     Path(S522,S576)
	S578= IRMux.Out={31,rT,rA,rB,277}                           IRMux-Select(S575,S577)
	S579= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F264)
	S580= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S519,S579)
	S581= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F265)
	S582= IRMux.CacheSel=ICacheHit(addr)                        Path(S525,S581)
	S583= IRMux.Out=>IR.In                                      Premise(F266)
	S584= IR.In={31,rT,rA,rB,277}                               Path(S578,S583)
	S585= IMem.MEM8WordOut=>ICache.WData                        Premise(F267)
	S586= ICache.WData=IMemGet8Word({pid,addr})                 Path(S573,S585)
	S587= PC.Out=>ICache.IEA                                    Premise(F268)
	S588= IR.Out0_5=>CU.Op                                      Premise(F269)
	S589= CU.Op=31                                              Path(S528,S588)
	S590= IR.Out11_15=>GPRegs.RReg1                             Premise(F270)
	S591= GPRegs.RReg1=rA                                       Path(S530,S590)
	S592= GPRegs.Rdata1=a                                       GPRegs-Read(S591,S489)
	S593= IR.Out16_20=>GPRegs.RReg2                             Premise(F271)
	S594= GPRegs.RReg2=rB                                       Path(S531,S593)
	S595= GPRegs.Rdata2=b                                       GPRegs-Read(S594,S490)
	S596= IR.Out21_31=>CU.IRFunc                                Premise(F272)
	S597= CU.IRFunc=277                                         Path(S532,S596)
	S598= CU.Func=alu_adde                                      CU(S589,S597)
	S599= GPRegs.Rdata1=>A.In                                   Premise(F273)
	S600= A.In=a                                                Path(S592,S599)
	S601= GPRegs.Rdata2=>B.In                                   Premise(F274)
	S602= B.In=b                                                Path(S595,S601)
	S603= A.Out=>ALU.A                                          Premise(F275)
	S604= ALU.A=a                                               Path(S533,S603)
	S605= B.Out=>ALU.B                                          Premise(F276)
	S606= ALU.B=b                                               Path(S536,S605)
	S607= XER.CAOut=>ALU.CAIn                                   Premise(F277)
	S608= ALU.CAIn=ca                                           Path(S540,S607)
	S609= CU.Func=>ALU.Func                                     Premise(F278)
	S610= ALU.Func=alu_adde                                     Path(S598,S609)
	S611= ALU.Out=a+b+ca                                        ALU(S604,S606,S608)
	S612= ALU.CMP=Compare0(a+b+ca)                              ALU(S604,S606,S608)
	S613= ALU.OV=OverFlow(a+b+ca)                               ALU(S604,S606,S608)
	S614= ALU.CA=Carry(a+b+ca)                                  ALU(S604,S606,S608)
	S615= ALU.Out=>ALUOut.In                                    Premise(F279)
	S616= ALUOut.In=a+b+ca                                      Path(S611,S615)
	S617= ALU.CA=>CAReg.In                                      Premise(F280)
	S618= CAReg.In=Carry(a+b+ca)                                Path(S614,S617)
	S619= ALU.CMP=>DataCmb.A                                    Premise(F281)
	S620= DataCmb.A=Compare0(a+b+ca)                            Path(S612,S619)
	S621= XER.SOOut=>DataCmb.B                                  Premise(F282)
	S622= DataCmb.B=so                                          Path(S539,S621)
	S623= DataCmb.Out={Compare0(a+b+ca),so}                     DataCmb(S620,S622)
	S624= DataCmb.Out=>DR4bit.In                                Premise(F283)
	S625= DR4bit.In={Compare0(a+b+ca),so}                       Path(S623,S624)
	S626= IR.Out6_10=>GPRegs.WReg                               Premise(F284)
	S627= GPRegs.WReg=rT                                        Path(S529,S626)
	S628= ALUOut.Out=>GPRegs.WData                              Premise(F285)
	S629= GPRegs.WData=a+b+ca                                   Path(S541,S628)
	S630= DR4bit.Out=>CRRegs.CR0In                              Premise(F286)
	S631= CRRegs.CR0In={Compare0(a+b+ca),so}                    Path(S547,S630)
	S632= CAReg.Out=>XER.CAIn                                   Premise(F287)
	S633= XER.CAIn=Carry(a+b+ca)                                Path(S544,S632)
	S634= CtrlPIDReg=0                                          Premise(F288)
	S635= [PIDReg]=pid                                          PIDReg-Hold(S467,S634)
	S636= CtrlIMMU=0                                            Premise(F289)
	S637= CtrlPC=0                                              Premise(F290)
	S638= CtrlPCInc=0                                           Premise(F291)
	S639= PC[CIA]=addr                                          PC-Hold(S471,S638)
	S640= PC[Out]=addr+4                                        PC-Hold(S472,S637,S638)
	S641= CtrlIAddrReg=0                                        Premise(F292)
	S642= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S474,S641)
	S643= CtrlIMMUHitReg=0                                      Premise(F293)
	S644= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S476,S643)
	S645= CtrlICache=0                                          Premise(F294)
	S646= ICache[addr]={31,rT,rA,rB,277}                        ICache-Hold(S478,S645)
	S647= CtrlICacheReg=0                                       Premise(F295)
	S648= [ICacheReg]={31,rT,rA,rB,277}                         ICacheReg-Hold(S480,S647)
	S649= CtrlICacheHitReg=0                                    Premise(F296)
	S650= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S482,S649)
	S651= CtrlIMem=0                                            Premise(F297)
	S652= IMem[{pid,addr}]={31,rT,rA,rB,277}                    IMem-Hold(S484,S651)
	S653= CtrlIRMux=0                                           Premise(F298)
	S654= CtrlIR=0                                              Premise(F299)
	S655= [IR]={31,rT,rA,rB,277}                                IR-Hold(S487,S654)
	S656= CtrlGPRegs=0                                          Premise(F300)
	S657= GPRegs[rA]=a                                          GPRegs-Hold(S489,S656)
	S658= GPRegs[rB]=b                                          GPRegs-Hold(S490,S656)
	S659= CtrlA=0                                               Premise(F301)
	S660= [A]=a                                                 A-Hold(S492,S659)
	S661= CtrlB=0                                               Premise(F302)
	S662= [B]=b                                                 B-Hold(S494,S661)
	S663= CtrlXERSO=0                                           Premise(F303)
	S664= XER[SO]=so                                            XER-SO-Hold(S496,S663)
	S665= CtrlXEROV=0                                           Premise(F304)
	S666= CtrlXERCA=0                                           Premise(F305)
	S667= XER[CA]=ca                                            XER-CA-Hold(S499,S666)
	S668= CtrlALUOut=0                                          Premise(F306)
	S669= [ALUOut]=a+b+ca                                       ALUOut-Hold(S501,S668)
	S670= CtrlCAReg=0                                           Premise(F307)
	S671= [CAReg]=Carry(a+b+ca)                                 CAReg-Hold(S503,S670)
	S672= CtrlDR4bit=0                                          Premise(F308)
	S673= [DR4bit]={Compare0(a+b+ca),so}                        DR4bit-Hold(S505,S672)
	S674= CtrlCRRegs=0                                          Premise(F309)
	S675= CtrlCRRegsCR0=0                                       Premise(F310)
	S676= CtrlCRRegsW4bitRegs=0                                 Premise(F311)
	S677= CtrlCRRegsW1bitRegs=0                                 Premise(F312)

DMMU1	S678= PIDReg.Out=pid                                        PIDReg-Out(S635)
	S679= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S635)
	S680= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S635)
	S681= PC.CIA=addr                                           PC-Out(S639)
	S682= PC.CIA31_28=addr[31:28]                               PC-Out(S639)
	S683= PC.Out=addr+4                                         PC-Out(S640)
	S684= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S642)
	S685= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S642)
	S686= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S642)
	S687= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S644)
	S688= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S644)
	S689= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S644)
	S690= ICacheReg.Out={31,rT,rA,rB,277}                       ICacheReg-Out(S648)
	S691= ICacheReg.Out26_31={31,rT,rA,rB,277}[26:31]           ICacheReg-Out(S648)
	S692= ICacheReg.Out30_31={31,rT,rA,rB,277}[30:31]           ICacheReg-Out(S648)
	S693= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S650)
	S694= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S650)
	S695= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S650)
	S696= IR.Out0_5=31                                          IR-Out(S655)
	S697= IR.Out6_10=rT                                         IR-Out(S655)
	S698= IR.Out11_15=rA                                        IR-Out(S655)
	S699= IR.Out16_20=rB                                        IR-Out(S655)
	S700= IR.Out21_31=277                                       IR-Out(S655)
	S701= A.Out=a                                               A-Out(S660)
	S702= A.Out26_31=a[26:31]                                   A-Out(S660)
	S703= A.Out30_31=a[30:31]                                   A-Out(S660)
	S704= B.Out=b                                               B-Out(S662)
	S705= B.Out26_31=b[26:31]                                   B-Out(S662)
	S706= B.Out30_31=b[30:31]                                   B-Out(S662)
	S707= XER.SOOut=so                                          XER-SO-Out(S664)
	S708= XER.CAOut=ca                                          XER-CA-Out(S667)
	S709= ALUOut.Out=a+b+ca                                     ALUOut-Out(S669)
	S710= ALUOut.Out26_31=a+b+ca[26:31]                         ALUOut-Out(S669)
	S711= ALUOut.Out30_31=a+b+ca[30:31]                         ALUOut-Out(S669)
	S712= CAReg.Out=Carry(a+b+ca)                               CAReg-Out(S671)
	S713= CAReg.Out26_31=Carry(a+b+ca)[26:31]                   CAReg-Out(S671)
	S714= CAReg.Out30_31=Carry(a+b+ca)[30:31]                   CAReg-Out(S671)
	S715= DR4bit.Out={Compare0(a+b+ca),so}                      DR4bit-Out(S673)
	S716= DR4bit.Out26_31={Compare0(a+b+ca),so}[26:31]          DR4bit-Out(S673)
	S717= DR4bit.Out30_31={Compare0(a+b+ca),so}[30:31]          DR4bit-Out(S673)
	S718= PIDReg.Out=>IMMU.PID                                  Premise(F313)
	S719= IMMU.PID=pid                                          Path(S678,S718)
	S720= PC.Out=>IMMU.IEA                                      Premise(F314)
	S721= IMMU.IEA=addr+4                                       Path(S683,S720)
	S722= IMMU.Addr={pid,addr+4}                                IMMU-Search(S719,S721)
	S723= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S719,S721)
	S724= IMMU.Addr=>IAddrReg.In                                Premise(F315)
	S725= IAddrReg.In={pid,addr+4}                              Path(S722,S724)
	S726= IMMU.Hit=>IMMUHitReg.In                               Premise(F316)
	S727= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S723,S726)
	S728= PC.Out=>ICache.IEA                                    Premise(F317)
	S729= ICache.IEA=addr+4                                     Path(S683,S728)
	S730= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S729)
	S731= ICache.Out=>ICacheReg.In                              Premise(F318)
	S732= ICache.Hit=>ICacheHitReg.In                           Premise(F319)
	S733= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S730,S732)
	S734= IMMUHitReg.Out=>CU.IMemHit                            Premise(F320)
	S735= CU.IMemHit=IMMUHit(pid,addr)                          Path(S687,S734)
	S736= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F321)
	S737= CU.ICacheHit=ICacheHit(addr)                          Path(S693,S736)
	S738= IAddrReg.Out=>IMem.RAddr                              Premise(F322)
	S739= IMem.RAddr={pid,addr}                                 Path(S684,S738)
	S740= IMem.Out={31,rT,rA,rB,277}                            IMem-Read(S739,S652)
	S741= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S739,S652)
	S742= IMem.Out=>IRMux.MemData                               Premise(F323)
	S743= IRMux.MemData={31,rT,rA,rB,277}                       Path(S740,S742)
	S744= ICacheReg.Out=>IRMux.CacheData                        Premise(F324)
	S745= IRMux.CacheData={31,rT,rA,rB,277}                     Path(S690,S744)
	S746= IRMux.Out={31,rT,rA,rB,277}                           IRMux-Select(S743,S745)
	S747= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F325)
	S748= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S687,S747)
	S749= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F326)
	S750= IRMux.CacheSel=ICacheHit(addr)                        Path(S693,S749)
	S751= IRMux.Out=>IR.In                                      Premise(F327)
	S752= IR.In={31,rT,rA,rB,277}                               Path(S746,S751)
	S753= IMem.MEM8WordOut=>ICache.WData                        Premise(F328)
	S754= ICache.WData=IMemGet8Word({pid,addr})                 Path(S741,S753)
	S755= PC.Out=>ICache.IEA                                    Premise(F329)
	S756= IR.Out0_5=>CU.Op                                      Premise(F330)
	S757= CU.Op=31                                              Path(S696,S756)
	S758= IR.Out11_15=>GPRegs.RReg1                             Premise(F331)
	S759= GPRegs.RReg1=rA                                       Path(S698,S758)
	S760= GPRegs.Rdata1=a                                       GPRegs-Read(S759,S657)
	S761= IR.Out16_20=>GPRegs.RReg2                             Premise(F332)
	S762= GPRegs.RReg2=rB                                       Path(S699,S761)
	S763= GPRegs.Rdata2=b                                       GPRegs-Read(S762,S658)
	S764= IR.Out21_31=>CU.IRFunc                                Premise(F333)
	S765= CU.IRFunc=277                                         Path(S700,S764)
	S766= CU.Func=alu_adde                                      CU(S757,S765)
	S767= GPRegs.Rdata1=>A.In                                   Premise(F334)
	S768= A.In=a                                                Path(S760,S767)
	S769= GPRegs.Rdata2=>B.In                                   Premise(F335)
	S770= B.In=b                                                Path(S763,S769)
	S771= A.Out=>ALU.A                                          Premise(F336)
	S772= ALU.A=a                                               Path(S701,S771)
	S773= B.Out=>ALU.B                                          Premise(F337)
	S774= ALU.B=b                                               Path(S704,S773)
	S775= XER.CAOut=>ALU.CAIn                                   Premise(F338)
	S776= ALU.CAIn=ca                                           Path(S708,S775)
	S777= CU.Func=>ALU.Func                                     Premise(F339)
	S778= ALU.Func=alu_adde                                     Path(S766,S777)
	S779= ALU.Out=a+b+ca                                        ALU(S772,S774,S776)
	S780= ALU.CMP=Compare0(a+b+ca)                              ALU(S772,S774,S776)
	S781= ALU.OV=OverFlow(a+b+ca)                               ALU(S772,S774,S776)
	S782= ALU.CA=Carry(a+b+ca)                                  ALU(S772,S774,S776)
	S783= ALU.Out=>ALUOut.In                                    Premise(F340)
	S784= ALUOut.In=a+b+ca                                      Path(S779,S783)
	S785= ALU.CA=>CAReg.In                                      Premise(F341)
	S786= CAReg.In=Carry(a+b+ca)                                Path(S782,S785)
	S787= ALU.CMP=>DataCmb.A                                    Premise(F342)
	S788= DataCmb.A=Compare0(a+b+ca)                            Path(S780,S787)
	S789= XER.SOOut=>DataCmb.B                                  Premise(F343)
	S790= DataCmb.B=so                                          Path(S707,S789)
	S791= DataCmb.Out={Compare0(a+b+ca),so}                     DataCmb(S788,S790)
	S792= DataCmb.Out=>DR4bit.In                                Premise(F344)
	S793= DR4bit.In={Compare0(a+b+ca),so}                       Path(S791,S792)
	S794= IR.Out6_10=>GPRegs.WReg                               Premise(F345)
	S795= GPRegs.WReg=rT                                        Path(S697,S794)
	S796= ALUOut.Out=>GPRegs.WData                              Premise(F346)
	S797= GPRegs.WData=a+b+ca                                   Path(S709,S796)
	S798= DR4bit.Out=>CRRegs.CR0In                              Premise(F347)
	S799= CRRegs.CR0In={Compare0(a+b+ca),so}                    Path(S715,S798)
	S800= CAReg.Out=>XER.CAIn                                   Premise(F348)
	S801= XER.CAIn=Carry(a+b+ca)                                Path(S712,S800)
	S802= CtrlPIDReg=0                                          Premise(F349)
	S803= [PIDReg]=pid                                          PIDReg-Hold(S635,S802)
	S804= CtrlIMMU=0                                            Premise(F350)
	S805= CtrlPC=0                                              Premise(F351)
	S806= CtrlPCInc=0                                           Premise(F352)
	S807= PC[CIA]=addr                                          PC-Hold(S639,S806)
	S808= PC[Out]=addr+4                                        PC-Hold(S640,S805,S806)
	S809= CtrlIAddrReg=0                                        Premise(F353)
	S810= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S642,S809)
	S811= CtrlIMMUHitReg=0                                      Premise(F354)
	S812= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S644,S811)
	S813= CtrlICache=0                                          Premise(F355)
	S814= ICache[addr]={31,rT,rA,rB,277}                        ICache-Hold(S646,S813)
	S815= CtrlICacheReg=0                                       Premise(F356)
	S816= [ICacheReg]={31,rT,rA,rB,277}                         ICacheReg-Hold(S648,S815)
	S817= CtrlICacheHitReg=0                                    Premise(F357)
	S818= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S650,S817)
	S819= CtrlIMem=0                                            Premise(F358)
	S820= IMem[{pid,addr}]={31,rT,rA,rB,277}                    IMem-Hold(S652,S819)
	S821= CtrlIRMux=0                                           Premise(F359)
	S822= CtrlIR=0                                              Premise(F360)
	S823= [IR]={31,rT,rA,rB,277}                                IR-Hold(S655,S822)
	S824= CtrlGPRegs=0                                          Premise(F361)
	S825= GPRegs[rA]=a                                          GPRegs-Hold(S657,S824)
	S826= GPRegs[rB]=b                                          GPRegs-Hold(S658,S824)
	S827= CtrlA=0                                               Premise(F362)
	S828= [A]=a                                                 A-Hold(S660,S827)
	S829= CtrlB=0                                               Premise(F363)
	S830= [B]=b                                                 B-Hold(S662,S829)
	S831= CtrlXERSO=0                                           Premise(F364)
	S832= XER[SO]=so                                            XER-SO-Hold(S664,S831)
	S833= CtrlXEROV=0                                           Premise(F365)
	S834= CtrlXERCA=0                                           Premise(F366)
	S835= XER[CA]=ca                                            XER-CA-Hold(S667,S834)
	S836= CtrlALUOut=0                                          Premise(F367)
	S837= [ALUOut]=a+b+ca                                       ALUOut-Hold(S669,S836)
	S838= CtrlCAReg=0                                           Premise(F368)
	S839= [CAReg]=Carry(a+b+ca)                                 CAReg-Hold(S671,S838)
	S840= CtrlDR4bit=0                                          Premise(F369)
	S841= [DR4bit]={Compare0(a+b+ca),so}                        DR4bit-Hold(S673,S840)
	S842= CtrlCRRegs=0                                          Premise(F370)
	S843= CtrlCRRegsCR0=0                                       Premise(F371)
	S844= CtrlCRRegsW4bitRegs=0                                 Premise(F372)
	S845= CtrlCRRegsW1bitRegs=0                                 Premise(F373)

DMMU2	S846= PIDReg.Out=pid                                        PIDReg-Out(S803)
	S847= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S803)
	S848= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S803)
	S849= PC.CIA=addr                                           PC-Out(S807)
	S850= PC.CIA31_28=addr[31:28]                               PC-Out(S807)
	S851= PC.Out=addr+4                                         PC-Out(S808)
	S852= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S810)
	S853= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S810)
	S854= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S810)
	S855= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S812)
	S856= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S812)
	S857= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S812)
	S858= ICacheReg.Out={31,rT,rA,rB,277}                       ICacheReg-Out(S816)
	S859= ICacheReg.Out26_31={31,rT,rA,rB,277}[26:31]           ICacheReg-Out(S816)
	S860= ICacheReg.Out30_31={31,rT,rA,rB,277}[30:31]           ICacheReg-Out(S816)
	S861= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S818)
	S862= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S818)
	S863= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S818)
	S864= IR.Out0_5=31                                          IR-Out(S823)
	S865= IR.Out6_10=rT                                         IR-Out(S823)
	S866= IR.Out11_15=rA                                        IR-Out(S823)
	S867= IR.Out16_20=rB                                        IR-Out(S823)
	S868= IR.Out21_31=277                                       IR-Out(S823)
	S869= A.Out=a                                               A-Out(S828)
	S870= A.Out26_31=a[26:31]                                   A-Out(S828)
	S871= A.Out30_31=a[30:31]                                   A-Out(S828)
	S872= B.Out=b                                               B-Out(S830)
	S873= B.Out26_31=b[26:31]                                   B-Out(S830)
	S874= B.Out30_31=b[30:31]                                   B-Out(S830)
	S875= XER.SOOut=so                                          XER-SO-Out(S832)
	S876= XER.CAOut=ca                                          XER-CA-Out(S835)
	S877= ALUOut.Out=a+b+ca                                     ALUOut-Out(S837)
	S878= ALUOut.Out26_31=a+b+ca[26:31]                         ALUOut-Out(S837)
	S879= ALUOut.Out30_31=a+b+ca[30:31]                         ALUOut-Out(S837)
	S880= CAReg.Out=Carry(a+b+ca)                               CAReg-Out(S839)
	S881= CAReg.Out26_31=Carry(a+b+ca)[26:31]                   CAReg-Out(S839)
	S882= CAReg.Out30_31=Carry(a+b+ca)[30:31]                   CAReg-Out(S839)
	S883= DR4bit.Out={Compare0(a+b+ca),so}                      DR4bit-Out(S841)
	S884= DR4bit.Out26_31={Compare0(a+b+ca),so}[26:31]          DR4bit-Out(S841)
	S885= DR4bit.Out30_31={Compare0(a+b+ca),so}[30:31]          DR4bit-Out(S841)
	S886= PIDReg.Out=>IMMU.PID                                  Premise(F374)
	S887= IMMU.PID=pid                                          Path(S846,S886)
	S888= PC.Out=>IMMU.IEA                                      Premise(F375)
	S889= IMMU.IEA=addr+4                                       Path(S851,S888)
	S890= IMMU.Addr={pid,addr+4}                                IMMU-Search(S887,S889)
	S891= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S887,S889)
	S892= IMMU.Addr=>IAddrReg.In                                Premise(F376)
	S893= IAddrReg.In={pid,addr+4}                              Path(S890,S892)
	S894= IMMU.Hit=>IMMUHitReg.In                               Premise(F377)
	S895= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S891,S894)
	S896= PC.Out=>ICache.IEA                                    Premise(F378)
	S897= ICache.IEA=addr+4                                     Path(S851,S896)
	S898= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S897)
	S899= ICache.Out=>ICacheReg.In                              Premise(F379)
	S900= ICache.Hit=>ICacheHitReg.In                           Premise(F380)
	S901= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S898,S900)
	S902= IMMUHitReg.Out=>CU.IMemHit                            Premise(F381)
	S903= CU.IMemHit=IMMUHit(pid,addr)                          Path(S855,S902)
	S904= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F382)
	S905= CU.ICacheHit=ICacheHit(addr)                          Path(S861,S904)
	S906= IAddrReg.Out=>IMem.RAddr                              Premise(F383)
	S907= IMem.RAddr={pid,addr}                                 Path(S852,S906)
	S908= IMem.Out={31,rT,rA,rB,277}                            IMem-Read(S907,S820)
	S909= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S907,S820)
	S910= IMem.Out=>IRMux.MemData                               Premise(F384)
	S911= IRMux.MemData={31,rT,rA,rB,277}                       Path(S908,S910)
	S912= ICacheReg.Out=>IRMux.CacheData                        Premise(F385)
	S913= IRMux.CacheData={31,rT,rA,rB,277}                     Path(S858,S912)
	S914= IRMux.Out={31,rT,rA,rB,277}                           IRMux-Select(S911,S913)
	S915= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F386)
	S916= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S855,S915)
	S917= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F387)
	S918= IRMux.CacheSel=ICacheHit(addr)                        Path(S861,S917)
	S919= IRMux.Out=>IR.In                                      Premise(F388)
	S920= IR.In={31,rT,rA,rB,277}                               Path(S914,S919)
	S921= IMem.MEM8WordOut=>ICache.WData                        Premise(F389)
	S922= ICache.WData=IMemGet8Word({pid,addr})                 Path(S909,S921)
	S923= PC.Out=>ICache.IEA                                    Premise(F390)
	S924= IR.Out0_5=>CU.Op                                      Premise(F391)
	S925= CU.Op=31                                              Path(S864,S924)
	S926= IR.Out11_15=>GPRegs.RReg1                             Premise(F392)
	S927= GPRegs.RReg1=rA                                       Path(S866,S926)
	S928= GPRegs.Rdata1=a                                       GPRegs-Read(S927,S825)
	S929= IR.Out16_20=>GPRegs.RReg2                             Premise(F393)
	S930= GPRegs.RReg2=rB                                       Path(S867,S929)
	S931= GPRegs.Rdata2=b                                       GPRegs-Read(S930,S826)
	S932= IR.Out21_31=>CU.IRFunc                                Premise(F394)
	S933= CU.IRFunc=277                                         Path(S868,S932)
	S934= CU.Func=alu_adde                                      CU(S925,S933)
	S935= GPRegs.Rdata1=>A.In                                   Premise(F395)
	S936= A.In=a                                                Path(S928,S935)
	S937= GPRegs.Rdata2=>B.In                                   Premise(F396)
	S938= B.In=b                                                Path(S931,S937)
	S939= A.Out=>ALU.A                                          Premise(F397)
	S940= ALU.A=a                                               Path(S869,S939)
	S941= B.Out=>ALU.B                                          Premise(F398)
	S942= ALU.B=b                                               Path(S872,S941)
	S943= XER.CAOut=>ALU.CAIn                                   Premise(F399)
	S944= ALU.CAIn=ca                                           Path(S876,S943)
	S945= CU.Func=>ALU.Func                                     Premise(F400)
	S946= ALU.Func=alu_adde                                     Path(S934,S945)
	S947= ALU.Out=a+b+ca                                        ALU(S940,S942,S944)
	S948= ALU.CMP=Compare0(a+b+ca)                              ALU(S940,S942,S944)
	S949= ALU.OV=OverFlow(a+b+ca)                               ALU(S940,S942,S944)
	S950= ALU.CA=Carry(a+b+ca)                                  ALU(S940,S942,S944)
	S951= ALU.Out=>ALUOut.In                                    Premise(F401)
	S952= ALUOut.In=a+b+ca                                      Path(S947,S951)
	S953= ALU.CA=>CAReg.In                                      Premise(F402)
	S954= CAReg.In=Carry(a+b+ca)                                Path(S950,S953)
	S955= ALU.CMP=>DataCmb.A                                    Premise(F403)
	S956= DataCmb.A=Compare0(a+b+ca)                            Path(S948,S955)
	S957= XER.SOOut=>DataCmb.B                                  Premise(F404)
	S958= DataCmb.B=so                                          Path(S875,S957)
	S959= DataCmb.Out={Compare0(a+b+ca),so}                     DataCmb(S956,S958)
	S960= DataCmb.Out=>DR4bit.In                                Premise(F405)
	S961= DR4bit.In={Compare0(a+b+ca),so}                       Path(S959,S960)
	S962= IR.Out6_10=>GPRegs.WReg                               Premise(F406)
	S963= GPRegs.WReg=rT                                        Path(S865,S962)
	S964= ALUOut.Out=>GPRegs.WData                              Premise(F407)
	S965= GPRegs.WData=a+b+ca                                   Path(S877,S964)
	S966= DR4bit.Out=>CRRegs.CR0In                              Premise(F408)
	S967= CRRegs.CR0In={Compare0(a+b+ca),so}                    Path(S883,S966)
	S968= CAReg.Out=>XER.CAIn                                   Premise(F409)
	S969= XER.CAIn=Carry(a+b+ca)                                Path(S880,S968)
	S970= CtrlPIDReg=0                                          Premise(F410)
	S971= [PIDReg]=pid                                          PIDReg-Hold(S803,S970)
	S972= CtrlIMMU=0                                            Premise(F411)
	S973= CtrlPC=0                                              Premise(F412)
	S974= CtrlPCInc=0                                           Premise(F413)
	S975= PC[CIA]=addr                                          PC-Hold(S807,S974)
	S976= PC[Out]=addr+4                                        PC-Hold(S808,S973,S974)
	S977= CtrlIAddrReg=0                                        Premise(F414)
	S978= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S810,S977)
	S979= CtrlIMMUHitReg=0                                      Premise(F415)
	S980= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S812,S979)
	S981= CtrlICache=0                                          Premise(F416)
	S982= ICache[addr]={31,rT,rA,rB,277}                        ICache-Hold(S814,S981)
	S983= CtrlICacheReg=0                                       Premise(F417)
	S984= [ICacheReg]={31,rT,rA,rB,277}                         ICacheReg-Hold(S816,S983)
	S985= CtrlICacheHitReg=0                                    Premise(F418)
	S986= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S818,S985)
	S987= CtrlIMem=0                                            Premise(F419)
	S988= IMem[{pid,addr}]={31,rT,rA,rB,277}                    IMem-Hold(S820,S987)
	S989= CtrlIRMux=0                                           Premise(F420)
	S990= CtrlIR=0                                              Premise(F421)
	S991= [IR]={31,rT,rA,rB,277}                                IR-Hold(S823,S990)
	S992= CtrlGPRegs=0                                          Premise(F422)
	S993= GPRegs[rA]=a                                          GPRegs-Hold(S825,S992)
	S994= GPRegs[rB]=b                                          GPRegs-Hold(S826,S992)
	S995= CtrlA=0                                               Premise(F423)
	S996= [A]=a                                                 A-Hold(S828,S995)
	S997= CtrlB=0                                               Premise(F424)
	S998= [B]=b                                                 B-Hold(S830,S997)
	S999= CtrlXERSO=0                                           Premise(F425)
	S1000= XER[SO]=so                                           XER-SO-Hold(S832,S999)
	S1001= CtrlXEROV=0                                          Premise(F426)
	S1002= CtrlXERCA=0                                          Premise(F427)
	S1003= XER[CA]=ca                                           XER-CA-Hold(S835,S1002)
	S1004= CtrlALUOut=0                                         Premise(F428)
	S1005= [ALUOut]=a+b+ca                                      ALUOut-Hold(S837,S1004)
	S1006= CtrlCAReg=0                                          Premise(F429)
	S1007= [CAReg]=Carry(a+b+ca)                                CAReg-Hold(S839,S1006)
	S1008= CtrlDR4bit=0                                         Premise(F430)
	S1009= [DR4bit]={Compare0(a+b+ca),so}                       DR4bit-Hold(S841,S1008)
	S1010= CtrlCRRegs=0                                         Premise(F431)
	S1011= CtrlCRRegsCR0=0                                      Premise(F432)
	S1012= CtrlCRRegsW4bitRegs=0                                Premise(F433)
	S1013= CtrlCRRegsW1bitRegs=0                                Premise(F434)

WB	S1014= PIDReg.Out=pid                                       PIDReg-Out(S971)
	S1015= PIDReg.Out26_31=pid[26:31]                           PIDReg-Out(S971)
	S1016= PIDReg.Out30_31=pid[30:31]                           PIDReg-Out(S971)
	S1017= PC.CIA=addr                                          PC-Out(S975)
	S1018= PC.CIA31_28=addr[31:28]                              PC-Out(S975)
	S1019= PC.Out=addr+4                                        PC-Out(S976)
	S1020= IAddrReg.Out={pid,addr}                              IAddrReg-Out(S978)
	S1021= IAddrReg.Out26_31={pid,addr}[26:31]                  IAddrReg-Out(S978)
	S1022= IAddrReg.Out30_31={pid,addr}[30:31]                  IAddrReg-Out(S978)
	S1023= IMMUHitReg.Out=IMMUHit(pid,addr)                     IMMUHitReg-Out(S980)
	S1024= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S980)
	S1025= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S980)
	S1026= ICacheReg.Out={31,rT,rA,rB,277}                      ICacheReg-Out(S984)
	S1027= ICacheReg.Out26_31={31,rT,rA,rB,277}[26:31]          ICacheReg-Out(S984)
	S1028= ICacheReg.Out30_31={31,rT,rA,rB,277}[30:31]          ICacheReg-Out(S984)
	S1029= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S986)
	S1030= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S986)
	S1031= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S986)
	S1032= IR.Out0_5=31                                         IR-Out(S991)
	S1033= IR.Out6_10=rT                                        IR-Out(S991)
	S1034= IR.Out11_15=rA                                       IR-Out(S991)
	S1035= IR.Out16_20=rB                                       IR-Out(S991)
	S1036= IR.Out21_31=277                                      IR-Out(S991)
	S1037= A.Out=a                                              A-Out(S996)
	S1038= A.Out26_31=a[26:31]                                  A-Out(S996)
	S1039= A.Out30_31=a[30:31]                                  A-Out(S996)
	S1040= B.Out=b                                              B-Out(S998)
	S1041= B.Out26_31=b[26:31]                                  B-Out(S998)
	S1042= B.Out30_31=b[30:31]                                  B-Out(S998)
	S1043= XER.SOOut=so                                         XER-SO-Out(S1000)
	S1044= XER.CAOut=ca                                         XER-CA-Out(S1003)
	S1045= ALUOut.Out=a+b+ca                                    ALUOut-Out(S1005)
	S1046= ALUOut.Out26_31=a+b+ca[26:31]                        ALUOut-Out(S1005)
	S1047= ALUOut.Out30_31=a+b+ca[30:31]                        ALUOut-Out(S1005)
	S1048= CAReg.Out=Carry(a+b+ca)                              CAReg-Out(S1007)
	S1049= CAReg.Out26_31=Carry(a+b+ca)[26:31]                  CAReg-Out(S1007)
	S1050= CAReg.Out30_31=Carry(a+b+ca)[30:31]                  CAReg-Out(S1007)
	S1051= DR4bit.Out={Compare0(a+b+ca),so}                     DR4bit-Out(S1009)
	S1052= DR4bit.Out26_31={Compare0(a+b+ca),so}[26:31]         DR4bit-Out(S1009)
	S1053= DR4bit.Out30_31={Compare0(a+b+ca),so}[30:31]         DR4bit-Out(S1009)
	S1054= PIDReg.Out=>IMMU.PID                                 Premise(F435)
	S1055= IMMU.PID=pid                                         Path(S1014,S1054)
	S1056= PC.Out=>IMMU.IEA                                     Premise(F436)
	S1057= IMMU.IEA=addr+4                                      Path(S1019,S1056)
	S1058= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1055,S1057)
	S1059= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1055,S1057)
	S1060= IMMU.Addr=>IAddrReg.In                               Premise(F437)
	S1061= IAddrReg.In={pid,addr+4}                             Path(S1058,S1060)
	S1062= IMMU.Hit=>IMMUHitReg.In                              Premise(F438)
	S1063= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1059,S1062)
	S1064= PC.Out=>ICache.IEA                                   Premise(F439)
	S1065= ICache.IEA=addr+4                                    Path(S1019,S1064)
	S1066= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1065)
	S1067= ICache.Out=>ICacheReg.In                             Premise(F440)
	S1068= ICache.Hit=>ICacheHitReg.In                          Premise(F441)
	S1069= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1066,S1068)
	S1070= IMMUHitReg.Out=>CU.IMemHit                           Premise(F442)
	S1071= CU.IMemHit=IMMUHit(pid,addr)                         Path(S1023,S1070)
	S1072= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F443)
	S1073= CU.ICacheHit=ICacheHit(addr)                         Path(S1029,S1072)
	S1074= IAddrReg.Out=>IMem.RAddr                             Premise(F444)
	S1075= IMem.RAddr={pid,addr}                                Path(S1020,S1074)
	S1076= IMem.Out={31,rT,rA,rB,277}                           IMem-Read(S1075,S988)
	S1077= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1075,S988)
	S1078= IMem.Out=>IRMux.MemData                              Premise(F445)
	S1079= IRMux.MemData={31,rT,rA,rB,277}                      Path(S1076,S1078)
	S1080= ICacheReg.Out=>IRMux.CacheData                       Premise(F446)
	S1081= IRMux.CacheData={31,rT,rA,rB,277}                    Path(S1026,S1080)
	S1082= IRMux.Out={31,rT,rA,rB,277}                          IRMux-Select(S1079,S1081)
	S1083= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F447)
	S1084= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S1023,S1083)
	S1085= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F448)
	S1086= IRMux.CacheSel=ICacheHit(addr)                       Path(S1029,S1085)
	S1087= IRMux.Out=>IR.In                                     Premise(F449)
	S1088= IR.In={31,rT,rA,rB,277}                              Path(S1082,S1087)
	S1089= IMem.MEM8WordOut=>ICache.WData                       Premise(F450)
	S1090= ICache.WData=IMemGet8Word({pid,addr})                Path(S1077,S1089)
	S1091= PC.Out=>ICache.IEA                                   Premise(F451)
	S1092= IR.Out0_5=>CU.Op                                     Premise(F452)
	S1093= CU.Op=31                                             Path(S1032,S1092)
	S1094= IR.Out11_15=>GPRegs.RReg1                            Premise(F453)
	S1095= GPRegs.RReg1=rA                                      Path(S1034,S1094)
	S1096= GPRegs.Rdata1=a                                      GPRegs-Read(S1095,S993)
	S1097= IR.Out16_20=>GPRegs.RReg2                            Premise(F454)
	S1098= GPRegs.RReg2=rB                                      Path(S1035,S1097)
	S1099= GPRegs.Rdata2=b                                      GPRegs-Read(S1098,S994)
	S1100= IR.Out21_31=>CU.IRFunc                               Premise(F455)
	S1101= CU.IRFunc=277                                        Path(S1036,S1100)
	S1102= CU.Func=alu_adde                                     CU(S1093,S1101)
	S1103= GPRegs.Rdata1=>A.In                                  Premise(F456)
	S1104= A.In=a                                               Path(S1096,S1103)
	S1105= GPRegs.Rdata2=>B.In                                  Premise(F457)
	S1106= B.In=b                                               Path(S1099,S1105)
	S1107= A.Out=>ALU.A                                         Premise(F458)
	S1108= ALU.A=a                                              Path(S1037,S1107)
	S1109= B.Out=>ALU.B                                         Premise(F459)
	S1110= ALU.B=b                                              Path(S1040,S1109)
	S1111= XER.CAOut=>ALU.CAIn                                  Premise(F460)
	S1112= ALU.CAIn=ca                                          Path(S1044,S1111)
	S1113= CU.Func=>ALU.Func                                    Premise(F461)
	S1114= ALU.Func=alu_adde                                    Path(S1102,S1113)
	S1115= ALU.Out=a+b+ca                                       ALU(S1108,S1110,S1112)
	S1116= ALU.CMP=Compare0(a+b+ca)                             ALU(S1108,S1110,S1112)
	S1117= ALU.OV=OverFlow(a+b+ca)                              ALU(S1108,S1110,S1112)
	S1118= ALU.CA=Carry(a+b+ca)                                 ALU(S1108,S1110,S1112)
	S1119= ALU.Out=>ALUOut.In                                   Premise(F462)
	S1120= ALUOut.In=a+b+ca                                     Path(S1115,S1119)
	S1121= ALU.CA=>CAReg.In                                     Premise(F463)
	S1122= CAReg.In=Carry(a+b+ca)                               Path(S1118,S1121)
	S1123= ALU.CMP=>DataCmb.A                                   Premise(F464)
	S1124= DataCmb.A=Compare0(a+b+ca)                           Path(S1116,S1123)
	S1125= XER.SOOut=>DataCmb.B                                 Premise(F465)
	S1126= DataCmb.B=so                                         Path(S1043,S1125)
	S1127= DataCmb.Out={Compare0(a+b+ca),so}                    DataCmb(S1124,S1126)
	S1128= DataCmb.Out=>DR4bit.In                               Premise(F466)
	S1129= DR4bit.In={Compare0(a+b+ca),so}                      Path(S1127,S1128)
	S1130= IR.Out6_10=>GPRegs.WReg                              Premise(F467)
	S1131= GPRegs.WReg=rT                                       Path(S1033,S1130)
	S1132= ALUOut.Out=>GPRegs.WData                             Premise(F468)
	S1133= GPRegs.WData=a+b+ca                                  Path(S1045,S1132)
	S1134= DR4bit.Out=>CRRegs.CR0In                             Premise(F469)
	S1135= CRRegs.CR0In={Compare0(a+b+ca),so}                   Path(S1051,S1134)
	S1136= CAReg.Out=>XER.CAIn                                  Premise(F470)
	S1137= XER.CAIn=Carry(a+b+ca)                               Path(S1048,S1136)
	S1138= CtrlPIDReg=0                                         Premise(F471)
	S1139= [PIDReg]=pid                                         PIDReg-Hold(S971,S1138)
	S1140= CtrlIMMU=0                                           Premise(F472)
	S1141= CtrlPC=0                                             Premise(F473)
	S1142= CtrlPCInc=0                                          Premise(F474)
	S1143= PC[CIA]=addr                                         PC-Hold(S975,S1142)
	S1144= PC[Out]=addr+4                                       PC-Hold(S976,S1141,S1142)
	S1145= CtrlIAddrReg=0                                       Premise(F475)
	S1146= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S978,S1145)
	S1147= CtrlIMMUHitReg=0                                     Premise(F476)
	S1148= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S980,S1147)
	S1149= CtrlICache=0                                         Premise(F477)
	S1150= ICache[addr]={31,rT,rA,rB,277}                       ICache-Hold(S982,S1149)
	S1151= CtrlICacheReg=0                                      Premise(F478)
	S1152= [ICacheReg]={31,rT,rA,rB,277}                        ICacheReg-Hold(S984,S1151)
	S1153= CtrlICacheHitReg=0                                   Premise(F479)
	S1154= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S986,S1153)
	S1155= CtrlIMem=0                                           Premise(F480)
	S1156= IMem[{pid,addr}]={31,rT,rA,rB,277}                   IMem-Hold(S988,S1155)
	S1157= CtrlIRMux=0                                          Premise(F481)
	S1158= CtrlIR=0                                             Premise(F482)
	S1159= [IR]={31,rT,rA,rB,277}                               IR-Hold(S991,S1158)
	S1160= CtrlGPRegs=1                                         Premise(F483)
	S1161= GPRegs[rT]=a+b+ca                                    GPRegs-Write(S1131,S1133,S1160)
	S1162= CtrlA=0                                              Premise(F484)
	S1163= [A]=a                                                A-Hold(S996,S1162)
	S1164= CtrlB=0                                              Premise(F485)
	S1165= [B]=b                                                B-Hold(S998,S1164)
	S1166= CtrlXERSO=0                                          Premise(F486)
	S1167= XER[SO]=so                                           XER-SO-Hold(S1000,S1166)
	S1168= CtrlXEROV=0                                          Premise(F487)
	S1169= CtrlXERCA=1                                          Premise(F488)
	S1170= XER[CA]=Carry(a+b+ca)                                XER-CA-Write(S1137,S1169)
	S1171= CtrlALUOut=0                                         Premise(F489)
	S1172= [ALUOut]=a+b+ca                                      ALUOut-Hold(S1005,S1171)
	S1173= CtrlCAReg=0                                          Premise(F490)
	S1174= [CAReg]=Carry(a+b+ca)                                CAReg-Hold(S1007,S1173)
	S1175= CtrlDR4bit=0                                         Premise(F491)
	S1176= [DR4bit]={Compare0(a+b+ca),so}                       DR4bit-Hold(S1009,S1175)
	S1177= CtrlCRRegs=0                                         Premise(F492)
	S1178= CtrlCRRegsCR0=1                                      Premise(F493)
	S1179= CRRegs[CR0]={Compare0(a+b+ca),so}                    CRRegs-CR0-Write(S1135,S1178)
	S1180= CtrlCRRegsW4bitRegs=0                                Premise(F494)
	S1181= CtrlCRRegsW1bitRegs=0                                Premise(F495)

POST	S1139= [PIDReg]=pid                                         PIDReg-Hold(S971,S1138)
	S1143= PC[CIA]=addr                                         PC-Hold(S975,S1142)
	S1144= PC[Out]=addr+4                                       PC-Hold(S976,S1141,S1142)
	S1146= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S978,S1145)
	S1148= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S980,S1147)
	S1150= ICache[addr]={31,rT,rA,rB,277}                       ICache-Hold(S982,S1149)
	S1152= [ICacheReg]={31,rT,rA,rB,277}                        ICacheReg-Hold(S984,S1151)
	S1154= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S986,S1153)
	S1156= IMem[{pid,addr}]={31,rT,rA,rB,277}                   IMem-Hold(S988,S1155)
	S1159= [IR]={31,rT,rA,rB,277}                               IR-Hold(S991,S1158)
	S1161= GPRegs[rT]=a+b+ca                                    GPRegs-Write(S1131,S1133,S1160)
	S1163= [A]=a                                                A-Hold(S996,S1162)
	S1165= [B]=b                                                B-Hold(S998,S1164)
	S1167= XER[SO]=so                                           XER-SO-Hold(S1000,S1166)
	S1170= XER[CA]=Carry(a+b+ca)                                XER-CA-Write(S1137,S1169)
	S1172= [ALUOut]=a+b+ca                                      ALUOut-Hold(S1005,S1171)
	S1174= [CAReg]=Carry(a+b+ca)                                CAReg-Hold(S1007,S1173)
	S1176= [DR4bit]={Compare0(a+b+ca),so}                       DR4bit-Hold(S1009,S1175)
	S1179= CRRegs[CR0]={Compare0(a+b+ca),so}                    CRRegs-CR0-Write(S1135,S1178)

