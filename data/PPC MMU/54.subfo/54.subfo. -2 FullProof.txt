
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,1105}                     Premise(F2)
	S3= ICache[addr]={31,rT,rA,rB,1105}                         Premise(F3)
	S4= GPRegs[rA]=a                                            Premise(F4)
	S5= GPRegs[rB]=b                                            Premise(F5)
	S6= XER[SO]=so                                              Premise(F6)

IF	S7= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S8= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S9= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S10= PC.Out=addr                                            PC-Out(S1)
	S11= XER.SOOut=so                                           XER-SO-Out(S6)
	S12= PIDReg.Out=>IMMU.PID                                   Premise(F7)
	S13= IMMU.PID=pid                                           Path(S7,S12)
	S14= PC.Out=>IMMU.IEA                                       Premise(F8)
	S15= IMMU.IEA=addr                                          Path(S10,S14)
	S16= IMMU.Addr={pid,addr}                                   IMMU-Search(S13,S15)
	S17= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S13,S15)
	S18= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S19= IAddrReg.In={pid,addr}                                 Path(S16,S18)
	S20= IMMU.Hit=>IMMUHitReg.In                                Premise(F10)
	S21= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S17,S20)
	S22= PC.Out=>ICache.IEA                                     Premise(F11)
	S23= ICache.IEA=addr                                        Path(S10,S22)
	S24= ICache.Hit=ICacheHit(addr)                             ICache-Search(S23)
	S25= ICache.Out={31,rT,rA,rB,1105}                          ICache-Search(S23,S3)
	S26= ICache.Out=>ICacheReg.In                               Premise(F12)
	S27= ICacheReg.In={31,rT,rA,rB,1105}                        Path(S25,S26)
	S28= ICache.Hit=>ICacheHitReg.In                            Premise(F13)
	S29= ICacheHitReg.In=ICacheHit(addr)                        Path(S24,S28)
	S30= IMMUHitReg.Out=>CU.IMemHit                             Premise(F14)
	S31= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F15)
	S32= IAddrReg.Out=>IMem.RAddr                               Premise(F16)
	S33= IMem.Out=>IRMux.MemData                                Premise(F17)
	S34= ICacheReg.Out=>IRMux.CacheData                         Premise(F18)
	S35= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F19)
	S36= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F20)
	S37= IRMux.Out=>IR.In                                       Premise(F21)
	S38= IMem.MEM8WordOut=>ICache.WData                         Premise(F22)
	S39= PC.Out=>ICache.IEA                                     Premise(F23)
	S40= IR.Out0_5=>CU.Op                                       Premise(F24)
	S41= IR.Out11_15=>GPRegs.RReg1                              Premise(F25)
	S42= IR.Out16_20=>GPRegs.RReg2                              Premise(F26)
	S43= IR.Out21_31=>CU.IRFunc                                 Premise(F27)
	S44= GPRegs.Rdata1=>A.In                                    Premise(F28)
	S45= GPRegs.Rdata2=>B.In                                    Premise(F29)
	S46= A.Out=>ALU.A                                           Premise(F30)
	S47= B.Out=>ALU.B                                           Premise(F31)
	S48= CU.Func=>ALU.Func                                      Premise(F32)
	S49= ALU.Out=>ALUOut.In                                     Premise(F33)
	S50= ALU.CMP=>DataCmb.A                                     Premise(F34)
	S51= ORGate.Out=>DataCmb.B                                  Premise(F35)
	S52= ALU.OV=>OVReg.In                                       Premise(F36)
	S53= XER.SOOut=>ORGate.A                                    Premise(F37)
	S54= ORGate.A=so                                            Path(S11,S53)
	S55= ALU.OV=>ORGate.B                                       Premise(F38)
	S56= ORGate.Out=>DR1bit.In                                  Premise(F39)
	S57= DataCmb.Out=>DR4bit.In                                 Premise(F40)
	S58= IR.Out6_10=>GPRegs.WReg                                Premise(F41)
	S59= ALUOut.Out=>GPRegs.WData                               Premise(F42)
	S60= DR4bit.Out=>CRRegs.CR0In                               Premise(F43)
	S61= DR1bit.Out=>XER.SOIn                                   Premise(F44)
	S62= OVReg.Out=>XER.OVIn                                    Premise(F45)
	S63= CtrlPIDReg=0                                           Premise(F46)
	S64= [PIDReg]=pid                                           PIDReg-Hold(S0,S63)
	S65= CtrlIMMU=0                                             Premise(F47)
	S66= CtrlPC=0                                               Premise(F48)
	S67= CtrlPCInc=0                                            Premise(F49)
	S68= PC[Out]=addr                                           PC-Hold(S1,S66,S67)
	S69= CtrlIAddrReg=1                                         Premise(F50)
	S70= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S19,S69)
	S71= CtrlIMMUHitReg=1                                       Premise(F51)
	S72= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S21,S71)
	S73= CtrlICache=0                                           Premise(F52)
	S74= ICache[addr]={31,rT,rA,rB,1105}                        ICache-Hold(S3,S73)
	S75= CtrlICacheReg=1                                        Premise(F53)
	S76= [ICacheReg]={31,rT,rA,rB,1105}                         ICacheReg-Write(S27,S75)
	S77= CtrlICacheHitReg=1                                     Premise(F54)
	S78= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S29,S77)
	S79= CtrlIMem=0                                             Premise(F55)
	S80= IMem[{pid,addr}]={31,rT,rA,rB,1105}                    IMem-Hold(S2,S79)
	S81= CtrlIRMux=0                                            Premise(F56)
	S82= CtrlIR=0                                               Premise(F57)
	S83= CtrlGPRegs=0                                           Premise(F58)
	S84= GPRegs[rA]=a                                           GPRegs-Hold(S4,S83)
	S85= GPRegs[rB]=b                                           GPRegs-Hold(S5,S83)
	S86= CtrlA=0                                                Premise(F59)
	S87= CtrlB=0                                                Premise(F60)
	S88= CtrlALUOut=0                                           Premise(F61)
	S89= CtrlOVReg=0                                            Premise(F62)
	S90= CtrlXERSO=0                                            Premise(F63)
	S91= XER[SO]=so                                             XER-SO-Hold(S6,S90)
	S92= CtrlXEROV=0                                            Premise(F64)
	S93= CtrlXERCA=0                                            Premise(F65)
	S94= CtrlDR1bit=0                                           Premise(F66)
	S95= CtrlDR4bit=0                                           Premise(F67)
	S96= CtrlCRRegs=0                                           Premise(F68)
	S97= CtrlCRRegsCR0=0                                        Premise(F69)
	S98= CtrlCRRegsW4bitRegs=0                                  Premise(F70)
	S99= CtrlCRRegsW1bitRegs=0                                  Premise(F71)

IMMU	S100= PIDReg.Out=pid                                        PIDReg-Out(S64)
	S101= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S64)
	S102= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S64)
	S103= PC.Out=addr                                           PC-Out(S68)
	S104= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S70)
	S105= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S70)
	S106= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S70)
	S107= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S72)
	S108= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S72)
	S109= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S72)
	S110= ICacheReg.Out={31,rT,rA,rB,1105}                      ICacheReg-Out(S76)
	S111= ICacheReg.Out26_31={31,rT,rA,rB,1105}[26:31]          ICacheReg-Out(S76)
	S112= ICacheReg.Out30_31={31,rT,rA,rB,1105}[30:31]          ICacheReg-Out(S76)
	S113= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S78)
	S114= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S78)
	S115= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S78)
	S116= XER.SOOut=so                                          XER-SO-Out(S91)
	S117= PIDReg.Out=>IMMU.PID                                  Premise(F72)
	S118= IMMU.PID=pid                                          Path(S100,S117)
	S119= PC.Out=>IMMU.IEA                                      Premise(F73)
	S120= IMMU.IEA=addr                                         Path(S103,S119)
	S121= IMMU.Addr={pid,addr}                                  IMMU-Search(S118,S120)
	S122= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S118,S120)
	S123= IMMU.Addr=>IAddrReg.In                                Premise(F74)
	S124= IAddrReg.In={pid,addr}                                Path(S121,S123)
	S125= IMMU.Hit=>IMMUHitReg.In                               Premise(F75)
	S126= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S122,S125)
	S127= PC.Out=>ICache.IEA                                    Premise(F76)
	S128= ICache.IEA=addr                                       Path(S103,S127)
	S129= ICache.Hit=ICacheHit(addr)                            ICache-Search(S128)
	S130= ICache.Out={31,rT,rA,rB,1105}                         ICache-Search(S128,S74)
	S131= ICache.Out=>ICacheReg.In                              Premise(F77)
	S132= ICacheReg.In={31,rT,rA,rB,1105}                       Path(S130,S131)
	S133= ICache.Hit=>ICacheHitReg.In                           Premise(F78)
	S134= ICacheHitReg.In=ICacheHit(addr)                       Path(S129,S133)
	S135= IMMUHitReg.Out=>CU.IMemHit                            Premise(F79)
	S136= CU.IMemHit=IMMUHit(pid,addr)                          Path(S107,S135)
	S137= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F80)
	S138= CU.ICacheHit=ICacheHit(addr)                          Path(S113,S137)
	S139= IAddrReg.Out=>IMem.RAddr                              Premise(F81)
	S140= IMem.RAddr={pid,addr}                                 Path(S104,S139)
	S141= IMem.Out={31,rT,rA,rB,1105}                           IMem-Read(S140,S80)
	S142= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S140,S80)
	S143= IMem.Out=>IRMux.MemData                               Premise(F82)
	S144= IRMux.MemData={31,rT,rA,rB,1105}                      Path(S141,S143)
	S145= ICacheReg.Out=>IRMux.CacheData                        Premise(F83)
	S146= IRMux.CacheData={31,rT,rA,rB,1105}                    Path(S110,S145)
	S147= IRMux.Out={31,rT,rA,rB,1105}                          IRMux-Select(S144,S146)
	S148= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F84)
	S149= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S107,S148)
	S150= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F85)
	S151= IRMux.CacheSel=ICacheHit(addr)                        Path(S113,S150)
	S152= IRMux.Out=>IR.In                                      Premise(F86)
	S153= IR.In={31,rT,rA,rB,1105}                              Path(S147,S152)
	S154= IMem.MEM8WordOut=>ICache.WData                        Premise(F87)
	S155= ICache.WData=IMemGet8Word({pid,addr})                 Path(S142,S154)
	S156= PC.Out=>ICache.IEA                                    Premise(F88)
	S157= IR.Out0_5=>CU.Op                                      Premise(F89)
	S158= IR.Out11_15=>GPRegs.RReg1                             Premise(F90)
	S159= IR.Out16_20=>GPRegs.RReg2                             Premise(F91)
	S160= IR.Out21_31=>CU.IRFunc                                Premise(F92)
	S161= GPRegs.Rdata1=>A.In                                   Premise(F93)
	S162= GPRegs.Rdata2=>B.In                                   Premise(F94)
	S163= A.Out=>ALU.A                                          Premise(F95)
	S164= B.Out=>ALU.B                                          Premise(F96)
	S165= CU.Func=>ALU.Func                                     Premise(F97)
	S166= ALU.Out=>ALUOut.In                                    Premise(F98)
	S167= ALU.CMP=>DataCmb.A                                    Premise(F99)
	S168= ORGate.Out=>DataCmb.B                                 Premise(F100)
	S169= ALU.OV=>OVReg.In                                      Premise(F101)
	S170= XER.SOOut=>ORGate.A                                   Premise(F102)
	S171= ORGate.A=so                                           Path(S116,S170)
	S172= ALU.OV=>ORGate.B                                      Premise(F103)
	S173= ORGate.Out=>DR1bit.In                                 Premise(F104)
	S174= DataCmb.Out=>DR4bit.In                                Premise(F105)
	S175= IR.Out6_10=>GPRegs.WReg                               Premise(F106)
	S176= ALUOut.Out=>GPRegs.WData                              Premise(F107)
	S177= DR4bit.Out=>CRRegs.CR0In                              Premise(F108)
	S178= DR1bit.Out=>XER.SOIn                                  Premise(F109)
	S179= OVReg.Out=>XER.OVIn                                   Premise(F110)
	S180= CtrlPIDReg=0                                          Premise(F111)
	S181= [PIDReg]=pid                                          PIDReg-Hold(S64,S180)
	S182= CtrlIMMU=0                                            Premise(F112)
	S183= CtrlPC=0                                              Premise(F113)
	S184= CtrlPCInc=1                                           Premise(F114)
	S185= PC[Out]=addr+4                                        PC-Inc(S68,S183,S184)
	S186= PC[CIA]=addr                                          PC-Inc(S68,S183,S184)
	S187= CtrlIAddrReg=0                                        Premise(F115)
	S188= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S70,S187)
	S189= CtrlIMMUHitReg=0                                      Premise(F116)
	S190= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S72,S189)
	S191= CtrlICache=0                                          Premise(F117)
	S192= ICache[addr]={31,rT,rA,rB,1105}                       ICache-Hold(S74,S191)
	S193= CtrlICacheReg=0                                       Premise(F118)
	S194= [ICacheReg]={31,rT,rA,rB,1105}                        ICacheReg-Hold(S76,S193)
	S195= CtrlICacheHitReg=0                                    Premise(F119)
	S196= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S78,S195)
	S197= CtrlIMem=0                                            Premise(F120)
	S198= IMem[{pid,addr}]={31,rT,rA,rB,1105}                   IMem-Hold(S80,S197)
	S199= CtrlIRMux=0                                           Premise(F121)
	S200= CtrlIR=1                                              Premise(F122)
	S201= [IR]={31,rT,rA,rB,1105}                               IR-Write(S153,S200)
	S202= CtrlGPRegs=0                                          Premise(F123)
	S203= GPRegs[rA]=a                                          GPRegs-Hold(S84,S202)
	S204= GPRegs[rB]=b                                          GPRegs-Hold(S85,S202)
	S205= CtrlA=0                                               Premise(F124)
	S206= CtrlB=0                                               Premise(F125)
	S207= CtrlALUOut=0                                          Premise(F126)
	S208= CtrlOVReg=0                                           Premise(F127)
	S209= CtrlXERSO=0                                           Premise(F128)
	S210= XER[SO]=so                                            XER-SO-Hold(S91,S209)
	S211= CtrlXEROV=0                                           Premise(F129)
	S212= CtrlXERCA=0                                           Premise(F130)
	S213= CtrlDR1bit=0                                          Premise(F131)
	S214= CtrlDR4bit=0                                          Premise(F132)
	S215= CtrlCRRegs=0                                          Premise(F133)
	S216= CtrlCRRegsCR0=0                                       Premise(F134)
	S217= CtrlCRRegsW4bitRegs=0                                 Premise(F135)
	S218= CtrlCRRegsW1bitRegs=0                                 Premise(F136)

ID	S219= PIDReg.Out=pid                                        PIDReg-Out(S181)
	S220= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S181)
	S221= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S181)
	S222= PC.Out=addr+4                                         PC-Out(S185)
	S223= PC.CIA=addr                                           PC-Out(S186)
	S224= PC.CIA31_28=addr[31:28]                               PC-Out(S186)
	S225= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S188)
	S226= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S188)
	S227= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S188)
	S228= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S190)
	S229= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S190)
	S230= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S190)
	S231= ICacheReg.Out={31,rT,rA,rB,1105}                      ICacheReg-Out(S194)
	S232= ICacheReg.Out26_31={31,rT,rA,rB,1105}[26:31]          ICacheReg-Out(S194)
	S233= ICacheReg.Out30_31={31,rT,rA,rB,1105}[30:31]          ICacheReg-Out(S194)
	S234= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S196)
	S235= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S196)
	S236= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S196)
	S237= IR.Out0_5=31                                          IR-Out(S201)
	S238= IR.Out6_10=rT                                         IR-Out(S201)
	S239= IR.Out11_15=rA                                        IR-Out(S201)
	S240= IR.Out16_20=rB                                        IR-Out(S201)
	S241= IR.Out21_31=1105                                      IR-Out(S201)
	S242= XER.SOOut=so                                          XER-SO-Out(S210)
	S243= PIDReg.Out=>IMMU.PID                                  Premise(F137)
	S244= IMMU.PID=pid                                          Path(S219,S243)
	S245= PC.Out=>IMMU.IEA                                      Premise(F138)
	S246= IMMU.IEA=addr+4                                       Path(S222,S245)
	S247= IMMU.Addr={pid,addr+4}                                IMMU-Search(S244,S246)
	S248= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S244,S246)
	S249= IMMU.Addr=>IAddrReg.In                                Premise(F139)
	S250= IAddrReg.In={pid,addr+4}                              Path(S247,S249)
	S251= IMMU.Hit=>IMMUHitReg.In                               Premise(F140)
	S252= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S248,S251)
	S253= PC.Out=>ICache.IEA                                    Premise(F141)
	S254= ICache.IEA=addr+4                                     Path(S222,S253)
	S255= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S254)
	S256= ICache.Out=>ICacheReg.In                              Premise(F142)
	S257= ICache.Hit=>ICacheHitReg.In                           Premise(F143)
	S258= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S255,S257)
	S259= IMMUHitReg.Out=>CU.IMemHit                            Premise(F144)
	S260= CU.IMemHit=IMMUHit(pid,addr)                          Path(S228,S259)
	S261= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F145)
	S262= CU.ICacheHit=ICacheHit(addr)                          Path(S234,S261)
	S263= IAddrReg.Out=>IMem.RAddr                              Premise(F146)
	S264= IMem.RAddr={pid,addr}                                 Path(S225,S263)
	S265= IMem.Out={31,rT,rA,rB,1105}                           IMem-Read(S264,S198)
	S266= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S264,S198)
	S267= IMem.Out=>IRMux.MemData                               Premise(F147)
	S268= IRMux.MemData={31,rT,rA,rB,1105}                      Path(S265,S267)
	S269= ICacheReg.Out=>IRMux.CacheData                        Premise(F148)
	S270= IRMux.CacheData={31,rT,rA,rB,1105}                    Path(S231,S269)
	S271= IRMux.Out={31,rT,rA,rB,1105}                          IRMux-Select(S268,S270)
	S272= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F149)
	S273= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S228,S272)
	S274= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F150)
	S275= IRMux.CacheSel=ICacheHit(addr)                        Path(S234,S274)
	S276= IRMux.Out=>IR.In                                      Premise(F151)
	S277= IR.In={31,rT,rA,rB,1105}                              Path(S271,S276)
	S278= IMem.MEM8WordOut=>ICache.WData                        Premise(F152)
	S279= ICache.WData=IMemGet8Word({pid,addr})                 Path(S266,S278)
	S280= PC.Out=>ICache.IEA                                    Premise(F153)
	S281= IR.Out0_5=>CU.Op                                      Premise(F154)
	S282= CU.Op=31                                              Path(S237,S281)
	S283= IR.Out11_15=>GPRegs.RReg1                             Premise(F155)
	S284= GPRegs.RReg1=rA                                       Path(S239,S283)
	S285= GPRegs.Rdata1=a                                       GPRegs-Read(S284,S203)
	S286= IR.Out16_20=>GPRegs.RReg2                             Premise(F156)
	S287= GPRegs.RReg2=rB                                       Path(S240,S286)
	S288= GPRegs.Rdata2=b                                       GPRegs-Read(S287,S204)
	S289= IR.Out21_31=>CU.IRFunc                                Premise(F157)
	S290= CU.IRFunc=1105                                        Path(S241,S289)
	S291= CU.Func=alu_subf                                      CU(S282,S290)
	S292= GPRegs.Rdata1=>A.In                                   Premise(F158)
	S293= A.In=a                                                Path(S285,S292)
	S294= GPRegs.Rdata2=>B.In                                   Premise(F159)
	S295= B.In=b                                                Path(S288,S294)
	S296= A.Out=>ALU.A                                          Premise(F160)
	S297= B.Out=>ALU.B                                          Premise(F161)
	S298= CU.Func=>ALU.Func                                     Premise(F162)
	S299= ALU.Func=alu_subf                                     Path(S291,S298)
	S300= ALU.Out=>ALUOut.In                                    Premise(F163)
	S301= ALU.CMP=>DataCmb.A                                    Premise(F164)
	S302= ORGate.Out=>DataCmb.B                                 Premise(F165)
	S303= ALU.OV=>OVReg.In                                      Premise(F166)
	S304= XER.SOOut=>ORGate.A                                   Premise(F167)
	S305= ORGate.A=so                                           Path(S242,S304)
	S306= ALU.OV=>ORGate.B                                      Premise(F168)
	S307= ORGate.Out=>DR1bit.In                                 Premise(F169)
	S308= DataCmb.Out=>DR4bit.In                                Premise(F170)
	S309= IR.Out6_10=>GPRegs.WReg                               Premise(F171)
	S310= GPRegs.WReg=rT                                        Path(S238,S309)
	S311= ALUOut.Out=>GPRegs.WData                              Premise(F172)
	S312= DR4bit.Out=>CRRegs.CR0In                              Premise(F173)
	S313= DR1bit.Out=>XER.SOIn                                  Premise(F174)
	S314= OVReg.Out=>XER.OVIn                                   Premise(F175)
	S315= CtrlPIDReg=0                                          Premise(F176)
	S316= [PIDReg]=pid                                          PIDReg-Hold(S181,S315)
	S317= CtrlIMMU=0                                            Premise(F177)
	S318= CtrlPC=0                                              Premise(F178)
	S319= CtrlPCInc=0                                           Premise(F179)
	S320= PC[CIA]=addr                                          PC-Hold(S186,S319)
	S321= PC[Out]=addr+4                                        PC-Hold(S185,S318,S319)
	S322= CtrlIAddrReg=0                                        Premise(F180)
	S323= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S188,S322)
	S324= CtrlIMMUHitReg=0                                      Premise(F181)
	S325= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S190,S324)
	S326= CtrlICache=0                                          Premise(F182)
	S327= ICache[addr]={31,rT,rA,rB,1105}                       ICache-Hold(S192,S326)
	S328= CtrlICacheReg=0                                       Premise(F183)
	S329= [ICacheReg]={31,rT,rA,rB,1105}                        ICacheReg-Hold(S194,S328)
	S330= CtrlICacheHitReg=0                                    Premise(F184)
	S331= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S196,S330)
	S332= CtrlIMem=0                                            Premise(F185)
	S333= IMem[{pid,addr}]={31,rT,rA,rB,1105}                   IMem-Hold(S198,S332)
	S334= CtrlIRMux=0                                           Premise(F186)
	S335= CtrlIR=0                                              Premise(F187)
	S336= [IR]={31,rT,rA,rB,1105}                               IR-Hold(S201,S335)
	S337= CtrlGPRegs=0                                          Premise(F188)
	S338= GPRegs[rA]=a                                          GPRegs-Hold(S203,S337)
	S339= GPRegs[rB]=b                                          GPRegs-Hold(S204,S337)
	S340= CtrlA=1                                               Premise(F189)
	S341= [A]=a                                                 A-Write(S293,S340)
	S342= CtrlB=1                                               Premise(F190)
	S343= [B]=b                                                 B-Write(S295,S342)
	S344= CtrlALUOut=0                                          Premise(F191)
	S345= CtrlOVReg=0                                           Premise(F192)
	S346= CtrlXERSO=0                                           Premise(F193)
	S347= XER[SO]=so                                            XER-SO-Hold(S210,S346)
	S348= CtrlXEROV=0                                           Premise(F194)
	S349= CtrlXERCA=0                                           Premise(F195)
	S350= CtrlDR1bit=0                                          Premise(F196)
	S351= CtrlDR4bit=0                                          Premise(F197)
	S352= CtrlCRRegs=0                                          Premise(F198)
	S353= CtrlCRRegsCR0=0                                       Premise(F199)
	S354= CtrlCRRegsW4bitRegs=0                                 Premise(F200)
	S355= CtrlCRRegsW1bitRegs=0                                 Premise(F201)

EX	S356= PIDReg.Out=pid                                        PIDReg-Out(S316)
	S357= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S316)
	S358= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S316)
	S359= PC.CIA=addr                                           PC-Out(S320)
	S360= PC.CIA31_28=addr[31:28]                               PC-Out(S320)
	S361= PC.Out=addr+4                                         PC-Out(S321)
	S362= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S323)
	S363= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S323)
	S364= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S323)
	S365= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S325)
	S366= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S325)
	S367= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S325)
	S368= ICacheReg.Out={31,rT,rA,rB,1105}                      ICacheReg-Out(S329)
	S369= ICacheReg.Out26_31={31,rT,rA,rB,1105}[26:31]          ICacheReg-Out(S329)
	S370= ICacheReg.Out30_31={31,rT,rA,rB,1105}[30:31]          ICacheReg-Out(S329)
	S371= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S331)
	S372= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S331)
	S373= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S331)
	S374= IR.Out0_5=31                                          IR-Out(S336)
	S375= IR.Out6_10=rT                                         IR-Out(S336)
	S376= IR.Out11_15=rA                                        IR-Out(S336)
	S377= IR.Out16_20=rB                                        IR-Out(S336)
	S378= IR.Out21_31=1105                                      IR-Out(S336)
	S379= A.Out=a                                               A-Out(S341)
	S380= A.Out26_31=a[26:31]                                   A-Out(S341)
	S381= A.Out30_31=a[30:31]                                   A-Out(S341)
	S382= B.Out=b                                               B-Out(S343)
	S383= B.Out26_31=b[26:31]                                   B-Out(S343)
	S384= B.Out30_31=b[30:31]                                   B-Out(S343)
	S385= XER.SOOut=so                                          XER-SO-Out(S347)
	S386= PIDReg.Out=>IMMU.PID                                  Premise(F202)
	S387= IMMU.PID=pid                                          Path(S356,S386)
	S388= PC.Out=>IMMU.IEA                                      Premise(F203)
	S389= IMMU.IEA=addr+4                                       Path(S361,S388)
	S390= IMMU.Addr={pid,addr+4}                                IMMU-Search(S387,S389)
	S391= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S387,S389)
	S392= IMMU.Addr=>IAddrReg.In                                Premise(F204)
	S393= IAddrReg.In={pid,addr+4}                              Path(S390,S392)
	S394= IMMU.Hit=>IMMUHitReg.In                               Premise(F205)
	S395= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S391,S394)
	S396= PC.Out=>ICache.IEA                                    Premise(F206)
	S397= ICache.IEA=addr+4                                     Path(S361,S396)
	S398= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S397)
	S399= ICache.Out=>ICacheReg.In                              Premise(F207)
	S400= ICache.Hit=>ICacheHitReg.In                           Premise(F208)
	S401= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S398,S400)
	S402= IMMUHitReg.Out=>CU.IMemHit                            Premise(F209)
	S403= CU.IMemHit=IMMUHit(pid,addr)                          Path(S365,S402)
	S404= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F210)
	S405= CU.ICacheHit=ICacheHit(addr)                          Path(S371,S404)
	S406= IAddrReg.Out=>IMem.RAddr                              Premise(F211)
	S407= IMem.RAddr={pid,addr}                                 Path(S362,S406)
	S408= IMem.Out={31,rT,rA,rB,1105}                           IMem-Read(S407,S333)
	S409= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S407,S333)
	S410= IMem.Out=>IRMux.MemData                               Premise(F212)
	S411= IRMux.MemData={31,rT,rA,rB,1105}                      Path(S408,S410)
	S412= ICacheReg.Out=>IRMux.CacheData                        Premise(F213)
	S413= IRMux.CacheData={31,rT,rA,rB,1105}                    Path(S368,S412)
	S414= IRMux.Out={31,rT,rA,rB,1105}                          IRMux-Select(S411,S413)
	S415= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F214)
	S416= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S365,S415)
	S417= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F215)
	S418= IRMux.CacheSel=ICacheHit(addr)                        Path(S371,S417)
	S419= IRMux.Out=>IR.In                                      Premise(F216)
	S420= IR.In={31,rT,rA,rB,1105}                              Path(S414,S419)
	S421= IMem.MEM8WordOut=>ICache.WData                        Premise(F217)
	S422= ICache.WData=IMemGet8Word({pid,addr})                 Path(S409,S421)
	S423= PC.Out=>ICache.IEA                                    Premise(F218)
	S424= IR.Out0_5=>CU.Op                                      Premise(F219)
	S425= CU.Op=31                                              Path(S374,S424)
	S426= IR.Out11_15=>GPRegs.RReg1                             Premise(F220)
	S427= GPRegs.RReg1=rA                                       Path(S376,S426)
	S428= GPRegs.Rdata1=a                                       GPRegs-Read(S427,S338)
	S429= IR.Out16_20=>GPRegs.RReg2                             Premise(F221)
	S430= GPRegs.RReg2=rB                                       Path(S377,S429)
	S431= GPRegs.Rdata2=b                                       GPRegs-Read(S430,S339)
	S432= IR.Out21_31=>CU.IRFunc                                Premise(F222)
	S433= CU.IRFunc=1105                                        Path(S378,S432)
	S434= CU.Func=alu_subf                                      CU(S425,S433)
	S435= GPRegs.Rdata1=>A.In                                   Premise(F223)
	S436= A.In=a                                                Path(S428,S435)
	S437= GPRegs.Rdata2=>B.In                                   Premise(F224)
	S438= B.In=b                                                Path(S431,S437)
	S439= A.Out=>ALU.A                                          Premise(F225)
	S440= ALU.A=a                                               Path(S379,S439)
	S441= B.Out=>ALU.B                                          Premise(F226)
	S442= ALU.B=b                                               Path(S382,S441)
	S443= CU.Func=>ALU.Func                                     Premise(F227)
	S444= ALU.Func=alu_subf                                     Path(S434,S443)
	S445= ALU.Out=b-a                                           ALU(S440,S442)
	S446= ALU.CMP=Compare0(b-a)                                 ALU(S440,S442)
	S447= ALU.OV=OverFlow(b-a)                                  ALU(S440,S442)
	S448= ALU.CA=Carry(b-a)                                     ALU(S440,S442)
	S449= ALU.Out=>ALUOut.In                                    Premise(F228)
	S450= ALUOut.In=b-a                                         Path(S445,S449)
	S451= ALU.CMP=>DataCmb.A                                    Premise(F229)
	S452= DataCmb.A=Compare0(b-a)                               Path(S446,S451)
	S453= ORGate.Out=>DataCmb.B                                 Premise(F230)
	S454= ALU.OV=>OVReg.In                                      Premise(F231)
	S455= OVReg.In=OverFlow(b-a)                                Path(S447,S454)
	S456= XER.SOOut=>ORGate.A                                   Premise(F232)
	S457= ORGate.A=so                                           Path(S385,S456)
	S458= ALU.OV=>ORGate.B                                      Premise(F233)
	S459= ORGate.B=OverFlow(b-a)                                Path(S447,S458)
	S460= ORGate.Out=so|OverFlow(b-a)                           ORGate(S457,S459)
	S461= DataCmb.B=so|OverFlow(b-a)                            Path(S460,S453)
	S462= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}          DataCmb(S452,S461)
	S463= ORGate.Out=>DR1bit.In                                 Premise(F234)
	S464= DR1bit.In=so|OverFlow(b-a)                            Path(S460,S463)
	S465= DataCmb.Out=>DR4bit.In                                Premise(F235)
	S466= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}            Path(S462,S465)
	S467= IR.Out6_10=>GPRegs.WReg                               Premise(F236)
	S468= GPRegs.WReg=rT                                        Path(S375,S467)
	S469= ALUOut.Out=>GPRegs.WData                              Premise(F237)
	S470= DR4bit.Out=>CRRegs.CR0In                              Premise(F238)
	S471= DR1bit.Out=>XER.SOIn                                  Premise(F239)
	S472= OVReg.Out=>XER.OVIn                                   Premise(F240)
	S473= CtrlPIDReg=0                                          Premise(F241)
	S474= [PIDReg]=pid                                          PIDReg-Hold(S316,S473)
	S475= CtrlIMMU=0                                            Premise(F242)
	S476= CtrlPC=0                                              Premise(F243)
	S477= CtrlPCInc=0                                           Premise(F244)
	S478= PC[CIA]=addr                                          PC-Hold(S320,S477)
	S479= PC[Out]=addr+4                                        PC-Hold(S321,S476,S477)
	S480= CtrlIAddrReg=0                                        Premise(F245)
	S481= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S323,S480)
	S482= CtrlIMMUHitReg=0                                      Premise(F246)
	S483= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S325,S482)
	S484= CtrlICache=0                                          Premise(F247)
	S485= ICache[addr]={31,rT,rA,rB,1105}                       ICache-Hold(S327,S484)
	S486= CtrlICacheReg=0                                       Premise(F248)
	S487= [ICacheReg]={31,rT,rA,rB,1105}                        ICacheReg-Hold(S329,S486)
	S488= CtrlICacheHitReg=0                                    Premise(F249)
	S489= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S331,S488)
	S490= CtrlIMem=0                                            Premise(F250)
	S491= IMem[{pid,addr}]={31,rT,rA,rB,1105}                   IMem-Hold(S333,S490)
	S492= CtrlIRMux=0                                           Premise(F251)
	S493= CtrlIR=0                                              Premise(F252)
	S494= [IR]={31,rT,rA,rB,1105}                               IR-Hold(S336,S493)
	S495= CtrlGPRegs=0                                          Premise(F253)
	S496= GPRegs[rA]=a                                          GPRegs-Hold(S338,S495)
	S497= GPRegs[rB]=b                                          GPRegs-Hold(S339,S495)
	S498= CtrlA=0                                               Premise(F254)
	S499= [A]=a                                                 A-Hold(S341,S498)
	S500= CtrlB=0                                               Premise(F255)
	S501= [B]=b                                                 B-Hold(S343,S500)
	S502= CtrlALUOut=1                                          Premise(F256)
	S503= [ALUOut]=b-a                                          ALUOut-Write(S450,S502)
	S504= CtrlOVReg=1                                           Premise(F257)
	S505= [OVReg]=OverFlow(b-a)                                 OVReg-Write(S455,S504)
	S506= CtrlXERSO=0                                           Premise(F258)
	S507= XER[SO]=so                                            XER-SO-Hold(S347,S506)
	S508= CtrlXEROV=0                                           Premise(F259)
	S509= CtrlXERCA=0                                           Premise(F260)
	S510= CtrlDR1bit=1                                          Premise(F261)
	S511= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Write(S464,S510)
	S512= CtrlDR4bit=1                                          Premise(F262)
	S513= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}             DR4bit-Write(S466,S512)
	S514= CtrlCRRegs=0                                          Premise(F263)
	S515= CtrlCRRegsCR0=0                                       Premise(F264)
	S516= CtrlCRRegsW4bitRegs=0                                 Premise(F265)
	S517= CtrlCRRegsW1bitRegs=0                                 Premise(F266)

MEM	S518= PIDReg.Out=pid                                        PIDReg-Out(S474)
	S519= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S474)
	S520= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S474)
	S521= PC.CIA=addr                                           PC-Out(S478)
	S522= PC.CIA31_28=addr[31:28]                               PC-Out(S478)
	S523= PC.Out=addr+4                                         PC-Out(S479)
	S524= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S481)
	S525= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S481)
	S526= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S481)
	S527= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S483)
	S528= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S483)
	S529= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S483)
	S530= ICacheReg.Out={31,rT,rA,rB,1105}                      ICacheReg-Out(S487)
	S531= ICacheReg.Out26_31={31,rT,rA,rB,1105}[26:31]          ICacheReg-Out(S487)
	S532= ICacheReg.Out30_31={31,rT,rA,rB,1105}[30:31]          ICacheReg-Out(S487)
	S533= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S489)
	S534= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S489)
	S535= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S489)
	S536= IR.Out0_5=31                                          IR-Out(S494)
	S537= IR.Out6_10=rT                                         IR-Out(S494)
	S538= IR.Out11_15=rA                                        IR-Out(S494)
	S539= IR.Out16_20=rB                                        IR-Out(S494)
	S540= IR.Out21_31=1105                                      IR-Out(S494)
	S541= A.Out=a                                               A-Out(S499)
	S542= A.Out26_31=a[26:31]                                   A-Out(S499)
	S543= A.Out30_31=a[30:31]                                   A-Out(S499)
	S544= B.Out=b                                               B-Out(S501)
	S545= B.Out26_31=b[26:31]                                   B-Out(S501)
	S546= B.Out30_31=b[30:31]                                   B-Out(S501)
	S547= ALUOut.Out=b-a                                        ALUOut-Out(S503)
	S548= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S503)
	S549= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S503)
	S550= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S505)
	S551= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S505)
	S552= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S505)
	S553= XER.SOOut=so                                          XER-SO-Out(S507)
	S554= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S511)
	S555= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S511)
	S556= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S511)
	S557= DR4bit.Out={Compare0(b-a),so|OverFlow(b-a)}           DR4bit-Out(S513)
	S558= DR4bit.Out26_31={Compare0(b-a),so|OverFlow(b-a)}[26:31]DR4bit-Out(S513)
	S559= DR4bit.Out30_31={Compare0(b-a),so|OverFlow(b-a)}[30:31]DR4bit-Out(S513)
	S560= PIDReg.Out=>IMMU.PID                                  Premise(F267)
	S561= IMMU.PID=pid                                          Path(S518,S560)
	S562= PC.Out=>IMMU.IEA                                      Premise(F268)
	S563= IMMU.IEA=addr+4                                       Path(S523,S562)
	S564= IMMU.Addr={pid,addr+4}                                IMMU-Search(S561,S563)
	S565= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S561,S563)
	S566= IMMU.Addr=>IAddrReg.In                                Premise(F269)
	S567= IAddrReg.In={pid,addr+4}                              Path(S564,S566)
	S568= IMMU.Hit=>IMMUHitReg.In                               Premise(F270)
	S569= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S565,S568)
	S570= PC.Out=>ICache.IEA                                    Premise(F271)
	S571= ICache.IEA=addr+4                                     Path(S523,S570)
	S572= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S571)
	S573= ICache.Out=>ICacheReg.In                              Premise(F272)
	S574= ICache.Hit=>ICacheHitReg.In                           Premise(F273)
	S575= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S572,S574)
	S576= IMMUHitReg.Out=>CU.IMemHit                            Premise(F274)
	S577= CU.IMemHit=IMMUHit(pid,addr)                          Path(S527,S576)
	S578= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F275)
	S579= CU.ICacheHit=ICacheHit(addr)                          Path(S533,S578)
	S580= IAddrReg.Out=>IMem.RAddr                              Premise(F276)
	S581= IMem.RAddr={pid,addr}                                 Path(S524,S580)
	S582= IMem.Out={31,rT,rA,rB,1105}                           IMem-Read(S581,S491)
	S583= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S581,S491)
	S584= IMem.Out=>IRMux.MemData                               Premise(F277)
	S585= IRMux.MemData={31,rT,rA,rB,1105}                      Path(S582,S584)
	S586= ICacheReg.Out=>IRMux.CacheData                        Premise(F278)
	S587= IRMux.CacheData={31,rT,rA,rB,1105}                    Path(S530,S586)
	S588= IRMux.Out={31,rT,rA,rB,1105}                          IRMux-Select(S585,S587)
	S589= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F279)
	S590= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S527,S589)
	S591= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F280)
	S592= IRMux.CacheSel=ICacheHit(addr)                        Path(S533,S591)
	S593= IRMux.Out=>IR.In                                      Premise(F281)
	S594= IR.In={31,rT,rA,rB,1105}                              Path(S588,S593)
	S595= IMem.MEM8WordOut=>ICache.WData                        Premise(F282)
	S596= ICache.WData=IMemGet8Word({pid,addr})                 Path(S583,S595)
	S597= PC.Out=>ICache.IEA                                    Premise(F283)
	S598= IR.Out0_5=>CU.Op                                      Premise(F284)
	S599= CU.Op=31                                              Path(S536,S598)
	S600= IR.Out11_15=>GPRegs.RReg1                             Premise(F285)
	S601= GPRegs.RReg1=rA                                       Path(S538,S600)
	S602= GPRegs.Rdata1=a                                       GPRegs-Read(S601,S496)
	S603= IR.Out16_20=>GPRegs.RReg2                             Premise(F286)
	S604= GPRegs.RReg2=rB                                       Path(S539,S603)
	S605= GPRegs.Rdata2=b                                       GPRegs-Read(S604,S497)
	S606= IR.Out21_31=>CU.IRFunc                                Premise(F287)
	S607= CU.IRFunc=1105                                        Path(S540,S606)
	S608= CU.Func=alu_subf                                      CU(S599,S607)
	S609= GPRegs.Rdata1=>A.In                                   Premise(F288)
	S610= A.In=a                                                Path(S602,S609)
	S611= GPRegs.Rdata2=>B.In                                   Premise(F289)
	S612= B.In=b                                                Path(S605,S611)
	S613= A.Out=>ALU.A                                          Premise(F290)
	S614= ALU.A=a                                               Path(S541,S613)
	S615= B.Out=>ALU.B                                          Premise(F291)
	S616= ALU.B=b                                               Path(S544,S615)
	S617= CU.Func=>ALU.Func                                     Premise(F292)
	S618= ALU.Func=alu_subf                                     Path(S608,S617)
	S619= ALU.Out=b-a                                           ALU(S614,S616)
	S620= ALU.CMP=Compare0(b-a)                                 ALU(S614,S616)
	S621= ALU.OV=OverFlow(b-a)                                  ALU(S614,S616)
	S622= ALU.CA=Carry(b-a)                                     ALU(S614,S616)
	S623= ALU.Out=>ALUOut.In                                    Premise(F293)
	S624= ALUOut.In=b-a                                         Path(S619,S623)
	S625= ALU.CMP=>DataCmb.A                                    Premise(F294)
	S626= DataCmb.A=Compare0(b-a)                               Path(S620,S625)
	S627= ORGate.Out=>DataCmb.B                                 Premise(F295)
	S628= ALU.OV=>OVReg.In                                      Premise(F296)
	S629= OVReg.In=OverFlow(b-a)                                Path(S621,S628)
	S630= XER.SOOut=>ORGate.A                                   Premise(F297)
	S631= ORGate.A=so                                           Path(S553,S630)
	S632= ALU.OV=>ORGate.B                                      Premise(F298)
	S633= ORGate.B=OverFlow(b-a)                                Path(S621,S632)
	S634= ORGate.Out=so|OverFlow(b-a)                           ORGate(S631,S633)
	S635= DataCmb.B=so|OverFlow(b-a)                            Path(S634,S627)
	S636= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}          DataCmb(S626,S635)
	S637= ORGate.Out=>DR1bit.In                                 Premise(F299)
	S638= DR1bit.In=so|OverFlow(b-a)                            Path(S634,S637)
	S639= DataCmb.Out=>DR4bit.In                                Premise(F300)
	S640= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}            Path(S636,S639)
	S641= IR.Out6_10=>GPRegs.WReg                               Premise(F301)
	S642= GPRegs.WReg=rT                                        Path(S537,S641)
	S643= ALUOut.Out=>GPRegs.WData                              Premise(F302)
	S644= GPRegs.WData=b-a                                      Path(S547,S643)
	S645= DR4bit.Out=>CRRegs.CR0In                              Premise(F303)
	S646= CRRegs.CR0In={Compare0(b-a),so|OverFlow(b-a)}         Path(S557,S645)
	S647= DR1bit.Out=>XER.SOIn                                  Premise(F304)
	S648= XER.SOIn=so|OverFlow(b-a)                             Path(S554,S647)
	S649= OVReg.Out=>XER.OVIn                                   Premise(F305)
	S650= XER.OVIn=OverFlow(b-a)                                Path(S550,S649)
	S651= CtrlPIDReg=0                                          Premise(F306)
	S652= [PIDReg]=pid                                          PIDReg-Hold(S474,S651)
	S653= CtrlIMMU=0                                            Premise(F307)
	S654= CtrlPC=0                                              Premise(F308)
	S655= CtrlPCInc=0                                           Premise(F309)
	S656= PC[CIA]=addr                                          PC-Hold(S478,S655)
	S657= PC[Out]=addr+4                                        PC-Hold(S479,S654,S655)
	S658= CtrlIAddrReg=0                                        Premise(F310)
	S659= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S481,S658)
	S660= CtrlIMMUHitReg=0                                      Premise(F311)
	S661= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S483,S660)
	S662= CtrlICache=0                                          Premise(F312)
	S663= ICache[addr]={31,rT,rA,rB,1105}                       ICache-Hold(S485,S662)
	S664= CtrlICacheReg=0                                       Premise(F313)
	S665= [ICacheReg]={31,rT,rA,rB,1105}                        ICacheReg-Hold(S487,S664)
	S666= CtrlICacheHitReg=0                                    Premise(F314)
	S667= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S489,S666)
	S668= CtrlIMem=0                                            Premise(F315)
	S669= IMem[{pid,addr}]={31,rT,rA,rB,1105}                   IMem-Hold(S491,S668)
	S670= CtrlIRMux=0                                           Premise(F316)
	S671= CtrlIR=0                                              Premise(F317)
	S672= [IR]={31,rT,rA,rB,1105}                               IR-Hold(S494,S671)
	S673= CtrlGPRegs=0                                          Premise(F318)
	S674= GPRegs[rA]=a                                          GPRegs-Hold(S496,S673)
	S675= GPRegs[rB]=b                                          GPRegs-Hold(S497,S673)
	S676= CtrlA=0                                               Premise(F319)
	S677= [A]=a                                                 A-Hold(S499,S676)
	S678= CtrlB=0                                               Premise(F320)
	S679= [B]=b                                                 B-Hold(S501,S678)
	S680= CtrlALUOut=0                                          Premise(F321)
	S681= [ALUOut]=b-a                                          ALUOut-Hold(S503,S680)
	S682= CtrlOVReg=0                                           Premise(F322)
	S683= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S505,S682)
	S684= CtrlXERSO=0                                           Premise(F323)
	S685= XER[SO]=so                                            XER-SO-Hold(S507,S684)
	S686= CtrlXEROV=0                                           Premise(F324)
	S687= CtrlXERCA=0                                           Premise(F325)
	S688= CtrlDR1bit=0                                          Premise(F326)
	S689= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S511,S688)
	S690= CtrlDR4bit=0                                          Premise(F327)
	S691= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}             DR4bit-Hold(S513,S690)
	S692= CtrlCRRegs=0                                          Premise(F328)
	S693= CtrlCRRegsCR0=0                                       Premise(F329)
	S694= CtrlCRRegsW4bitRegs=0                                 Premise(F330)
	S695= CtrlCRRegsW1bitRegs=0                                 Premise(F331)

DMMU1	S696= PIDReg.Out=pid                                        PIDReg-Out(S652)
	S697= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S652)
	S698= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S652)
	S699= PC.CIA=addr                                           PC-Out(S656)
	S700= PC.CIA31_28=addr[31:28]                               PC-Out(S656)
	S701= PC.Out=addr+4                                         PC-Out(S657)
	S702= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S659)
	S703= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S659)
	S704= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S659)
	S705= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S661)
	S706= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S661)
	S707= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S661)
	S708= ICacheReg.Out={31,rT,rA,rB,1105}                      ICacheReg-Out(S665)
	S709= ICacheReg.Out26_31={31,rT,rA,rB,1105}[26:31]          ICacheReg-Out(S665)
	S710= ICacheReg.Out30_31={31,rT,rA,rB,1105}[30:31]          ICacheReg-Out(S665)
	S711= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S667)
	S712= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S667)
	S713= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S667)
	S714= IR.Out0_5=31                                          IR-Out(S672)
	S715= IR.Out6_10=rT                                         IR-Out(S672)
	S716= IR.Out11_15=rA                                        IR-Out(S672)
	S717= IR.Out16_20=rB                                        IR-Out(S672)
	S718= IR.Out21_31=1105                                      IR-Out(S672)
	S719= A.Out=a                                               A-Out(S677)
	S720= A.Out26_31=a[26:31]                                   A-Out(S677)
	S721= A.Out30_31=a[30:31]                                   A-Out(S677)
	S722= B.Out=b                                               B-Out(S679)
	S723= B.Out26_31=b[26:31]                                   B-Out(S679)
	S724= B.Out30_31=b[30:31]                                   B-Out(S679)
	S725= ALUOut.Out=b-a                                        ALUOut-Out(S681)
	S726= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S681)
	S727= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S681)
	S728= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S683)
	S729= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S683)
	S730= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S683)
	S731= XER.SOOut=so                                          XER-SO-Out(S685)
	S732= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S689)
	S733= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S689)
	S734= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S689)
	S735= DR4bit.Out={Compare0(b-a),so|OverFlow(b-a)}           DR4bit-Out(S691)
	S736= DR4bit.Out26_31={Compare0(b-a),so|OverFlow(b-a)}[26:31]DR4bit-Out(S691)
	S737= DR4bit.Out30_31={Compare0(b-a),so|OverFlow(b-a)}[30:31]DR4bit-Out(S691)
	S738= PIDReg.Out=>IMMU.PID                                  Premise(F332)
	S739= IMMU.PID=pid                                          Path(S696,S738)
	S740= PC.Out=>IMMU.IEA                                      Premise(F333)
	S741= IMMU.IEA=addr+4                                       Path(S701,S740)
	S742= IMMU.Addr={pid,addr+4}                                IMMU-Search(S739,S741)
	S743= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S739,S741)
	S744= IMMU.Addr=>IAddrReg.In                                Premise(F334)
	S745= IAddrReg.In={pid,addr+4}                              Path(S742,S744)
	S746= IMMU.Hit=>IMMUHitReg.In                               Premise(F335)
	S747= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S743,S746)
	S748= PC.Out=>ICache.IEA                                    Premise(F336)
	S749= ICache.IEA=addr+4                                     Path(S701,S748)
	S750= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S749)
	S751= ICache.Out=>ICacheReg.In                              Premise(F337)
	S752= ICache.Hit=>ICacheHitReg.In                           Premise(F338)
	S753= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S750,S752)
	S754= IMMUHitReg.Out=>CU.IMemHit                            Premise(F339)
	S755= CU.IMemHit=IMMUHit(pid,addr)                          Path(S705,S754)
	S756= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F340)
	S757= CU.ICacheHit=ICacheHit(addr)                          Path(S711,S756)
	S758= IAddrReg.Out=>IMem.RAddr                              Premise(F341)
	S759= IMem.RAddr={pid,addr}                                 Path(S702,S758)
	S760= IMem.Out={31,rT,rA,rB,1105}                           IMem-Read(S759,S669)
	S761= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S759,S669)
	S762= IMem.Out=>IRMux.MemData                               Premise(F342)
	S763= IRMux.MemData={31,rT,rA,rB,1105}                      Path(S760,S762)
	S764= ICacheReg.Out=>IRMux.CacheData                        Premise(F343)
	S765= IRMux.CacheData={31,rT,rA,rB,1105}                    Path(S708,S764)
	S766= IRMux.Out={31,rT,rA,rB,1105}                          IRMux-Select(S763,S765)
	S767= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F344)
	S768= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S705,S767)
	S769= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F345)
	S770= IRMux.CacheSel=ICacheHit(addr)                        Path(S711,S769)
	S771= IRMux.Out=>IR.In                                      Premise(F346)
	S772= IR.In={31,rT,rA,rB,1105}                              Path(S766,S771)
	S773= IMem.MEM8WordOut=>ICache.WData                        Premise(F347)
	S774= ICache.WData=IMemGet8Word({pid,addr})                 Path(S761,S773)
	S775= PC.Out=>ICache.IEA                                    Premise(F348)
	S776= IR.Out0_5=>CU.Op                                      Premise(F349)
	S777= CU.Op=31                                              Path(S714,S776)
	S778= IR.Out11_15=>GPRegs.RReg1                             Premise(F350)
	S779= GPRegs.RReg1=rA                                       Path(S716,S778)
	S780= GPRegs.Rdata1=a                                       GPRegs-Read(S779,S674)
	S781= IR.Out16_20=>GPRegs.RReg2                             Premise(F351)
	S782= GPRegs.RReg2=rB                                       Path(S717,S781)
	S783= GPRegs.Rdata2=b                                       GPRegs-Read(S782,S675)
	S784= IR.Out21_31=>CU.IRFunc                                Premise(F352)
	S785= CU.IRFunc=1105                                        Path(S718,S784)
	S786= CU.Func=alu_subf                                      CU(S777,S785)
	S787= GPRegs.Rdata1=>A.In                                   Premise(F353)
	S788= A.In=a                                                Path(S780,S787)
	S789= GPRegs.Rdata2=>B.In                                   Premise(F354)
	S790= B.In=b                                                Path(S783,S789)
	S791= A.Out=>ALU.A                                          Premise(F355)
	S792= ALU.A=a                                               Path(S719,S791)
	S793= B.Out=>ALU.B                                          Premise(F356)
	S794= ALU.B=b                                               Path(S722,S793)
	S795= CU.Func=>ALU.Func                                     Premise(F357)
	S796= ALU.Func=alu_subf                                     Path(S786,S795)
	S797= ALU.Out=b-a                                           ALU(S792,S794)
	S798= ALU.CMP=Compare0(b-a)                                 ALU(S792,S794)
	S799= ALU.OV=OverFlow(b-a)                                  ALU(S792,S794)
	S800= ALU.CA=Carry(b-a)                                     ALU(S792,S794)
	S801= ALU.Out=>ALUOut.In                                    Premise(F358)
	S802= ALUOut.In=b-a                                         Path(S797,S801)
	S803= ALU.CMP=>DataCmb.A                                    Premise(F359)
	S804= DataCmb.A=Compare0(b-a)                               Path(S798,S803)
	S805= ORGate.Out=>DataCmb.B                                 Premise(F360)
	S806= ALU.OV=>OVReg.In                                      Premise(F361)
	S807= OVReg.In=OverFlow(b-a)                                Path(S799,S806)
	S808= XER.SOOut=>ORGate.A                                   Premise(F362)
	S809= ORGate.A=so                                           Path(S731,S808)
	S810= ALU.OV=>ORGate.B                                      Premise(F363)
	S811= ORGate.B=OverFlow(b-a)                                Path(S799,S810)
	S812= ORGate.Out=so|OverFlow(b-a)                           ORGate(S809,S811)
	S813= DataCmb.B=so|OverFlow(b-a)                            Path(S812,S805)
	S814= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}          DataCmb(S804,S813)
	S815= ORGate.Out=>DR1bit.In                                 Premise(F364)
	S816= DR1bit.In=so|OverFlow(b-a)                            Path(S812,S815)
	S817= DataCmb.Out=>DR4bit.In                                Premise(F365)
	S818= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}            Path(S814,S817)
	S819= IR.Out6_10=>GPRegs.WReg                               Premise(F366)
	S820= GPRegs.WReg=rT                                        Path(S715,S819)
	S821= ALUOut.Out=>GPRegs.WData                              Premise(F367)
	S822= GPRegs.WData=b-a                                      Path(S725,S821)
	S823= DR4bit.Out=>CRRegs.CR0In                              Premise(F368)
	S824= CRRegs.CR0In={Compare0(b-a),so|OverFlow(b-a)}         Path(S735,S823)
	S825= DR1bit.Out=>XER.SOIn                                  Premise(F369)
	S826= XER.SOIn=so|OverFlow(b-a)                             Path(S732,S825)
	S827= OVReg.Out=>XER.OVIn                                   Premise(F370)
	S828= XER.OVIn=OverFlow(b-a)                                Path(S728,S827)
	S829= CtrlPIDReg=0                                          Premise(F371)
	S830= [PIDReg]=pid                                          PIDReg-Hold(S652,S829)
	S831= CtrlIMMU=0                                            Premise(F372)
	S832= CtrlPC=0                                              Premise(F373)
	S833= CtrlPCInc=0                                           Premise(F374)
	S834= PC[CIA]=addr                                          PC-Hold(S656,S833)
	S835= PC[Out]=addr+4                                        PC-Hold(S657,S832,S833)
	S836= CtrlIAddrReg=0                                        Premise(F375)
	S837= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S659,S836)
	S838= CtrlIMMUHitReg=0                                      Premise(F376)
	S839= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S661,S838)
	S840= CtrlICache=0                                          Premise(F377)
	S841= ICache[addr]={31,rT,rA,rB,1105}                       ICache-Hold(S663,S840)
	S842= CtrlICacheReg=0                                       Premise(F378)
	S843= [ICacheReg]={31,rT,rA,rB,1105}                        ICacheReg-Hold(S665,S842)
	S844= CtrlICacheHitReg=0                                    Premise(F379)
	S845= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S667,S844)
	S846= CtrlIMem=0                                            Premise(F380)
	S847= IMem[{pid,addr}]={31,rT,rA,rB,1105}                   IMem-Hold(S669,S846)
	S848= CtrlIRMux=0                                           Premise(F381)
	S849= CtrlIR=0                                              Premise(F382)
	S850= [IR]={31,rT,rA,rB,1105}                               IR-Hold(S672,S849)
	S851= CtrlGPRegs=0                                          Premise(F383)
	S852= GPRegs[rA]=a                                          GPRegs-Hold(S674,S851)
	S853= GPRegs[rB]=b                                          GPRegs-Hold(S675,S851)
	S854= CtrlA=0                                               Premise(F384)
	S855= [A]=a                                                 A-Hold(S677,S854)
	S856= CtrlB=0                                               Premise(F385)
	S857= [B]=b                                                 B-Hold(S679,S856)
	S858= CtrlALUOut=0                                          Premise(F386)
	S859= [ALUOut]=b-a                                          ALUOut-Hold(S681,S858)
	S860= CtrlOVReg=0                                           Premise(F387)
	S861= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S683,S860)
	S862= CtrlXERSO=0                                           Premise(F388)
	S863= XER[SO]=so                                            XER-SO-Hold(S685,S862)
	S864= CtrlXEROV=0                                           Premise(F389)
	S865= CtrlXERCA=0                                           Premise(F390)
	S866= CtrlDR1bit=0                                          Premise(F391)
	S867= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S689,S866)
	S868= CtrlDR4bit=0                                          Premise(F392)
	S869= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}             DR4bit-Hold(S691,S868)
	S870= CtrlCRRegs=0                                          Premise(F393)
	S871= CtrlCRRegsCR0=0                                       Premise(F394)
	S872= CtrlCRRegsW4bitRegs=0                                 Premise(F395)
	S873= CtrlCRRegsW1bitRegs=0                                 Premise(F396)

DMMU2	S874= PIDReg.Out=pid                                        PIDReg-Out(S830)
	S875= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S830)
	S876= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S830)
	S877= PC.CIA=addr                                           PC-Out(S834)
	S878= PC.CIA31_28=addr[31:28]                               PC-Out(S834)
	S879= PC.Out=addr+4                                         PC-Out(S835)
	S880= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S837)
	S881= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S837)
	S882= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S837)
	S883= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S839)
	S884= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S839)
	S885= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S839)
	S886= ICacheReg.Out={31,rT,rA,rB,1105}                      ICacheReg-Out(S843)
	S887= ICacheReg.Out26_31={31,rT,rA,rB,1105}[26:31]          ICacheReg-Out(S843)
	S888= ICacheReg.Out30_31={31,rT,rA,rB,1105}[30:31]          ICacheReg-Out(S843)
	S889= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S845)
	S890= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S845)
	S891= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S845)
	S892= IR.Out0_5=31                                          IR-Out(S850)
	S893= IR.Out6_10=rT                                         IR-Out(S850)
	S894= IR.Out11_15=rA                                        IR-Out(S850)
	S895= IR.Out16_20=rB                                        IR-Out(S850)
	S896= IR.Out21_31=1105                                      IR-Out(S850)
	S897= A.Out=a                                               A-Out(S855)
	S898= A.Out26_31=a[26:31]                                   A-Out(S855)
	S899= A.Out30_31=a[30:31]                                   A-Out(S855)
	S900= B.Out=b                                               B-Out(S857)
	S901= B.Out26_31=b[26:31]                                   B-Out(S857)
	S902= B.Out30_31=b[30:31]                                   B-Out(S857)
	S903= ALUOut.Out=b-a                                        ALUOut-Out(S859)
	S904= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S859)
	S905= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S859)
	S906= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S861)
	S907= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S861)
	S908= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S861)
	S909= XER.SOOut=so                                          XER-SO-Out(S863)
	S910= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S867)
	S911= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S867)
	S912= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S867)
	S913= DR4bit.Out={Compare0(b-a),so|OverFlow(b-a)}           DR4bit-Out(S869)
	S914= DR4bit.Out26_31={Compare0(b-a),so|OverFlow(b-a)}[26:31]DR4bit-Out(S869)
	S915= DR4bit.Out30_31={Compare0(b-a),so|OverFlow(b-a)}[30:31]DR4bit-Out(S869)
	S916= PIDReg.Out=>IMMU.PID                                  Premise(F397)
	S917= IMMU.PID=pid                                          Path(S874,S916)
	S918= PC.Out=>IMMU.IEA                                      Premise(F398)
	S919= IMMU.IEA=addr+4                                       Path(S879,S918)
	S920= IMMU.Addr={pid,addr+4}                                IMMU-Search(S917,S919)
	S921= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S917,S919)
	S922= IMMU.Addr=>IAddrReg.In                                Premise(F399)
	S923= IAddrReg.In={pid,addr+4}                              Path(S920,S922)
	S924= IMMU.Hit=>IMMUHitReg.In                               Premise(F400)
	S925= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S921,S924)
	S926= PC.Out=>ICache.IEA                                    Premise(F401)
	S927= ICache.IEA=addr+4                                     Path(S879,S926)
	S928= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S927)
	S929= ICache.Out=>ICacheReg.In                              Premise(F402)
	S930= ICache.Hit=>ICacheHitReg.In                           Premise(F403)
	S931= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S928,S930)
	S932= IMMUHitReg.Out=>CU.IMemHit                            Premise(F404)
	S933= CU.IMemHit=IMMUHit(pid,addr)                          Path(S883,S932)
	S934= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F405)
	S935= CU.ICacheHit=ICacheHit(addr)                          Path(S889,S934)
	S936= IAddrReg.Out=>IMem.RAddr                              Premise(F406)
	S937= IMem.RAddr={pid,addr}                                 Path(S880,S936)
	S938= IMem.Out={31,rT,rA,rB,1105}                           IMem-Read(S937,S847)
	S939= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S937,S847)
	S940= IMem.Out=>IRMux.MemData                               Premise(F407)
	S941= IRMux.MemData={31,rT,rA,rB,1105}                      Path(S938,S940)
	S942= ICacheReg.Out=>IRMux.CacheData                        Premise(F408)
	S943= IRMux.CacheData={31,rT,rA,rB,1105}                    Path(S886,S942)
	S944= IRMux.Out={31,rT,rA,rB,1105}                          IRMux-Select(S941,S943)
	S945= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F409)
	S946= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S883,S945)
	S947= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F410)
	S948= IRMux.CacheSel=ICacheHit(addr)                        Path(S889,S947)
	S949= IRMux.Out=>IR.In                                      Premise(F411)
	S950= IR.In={31,rT,rA,rB,1105}                              Path(S944,S949)
	S951= IMem.MEM8WordOut=>ICache.WData                        Premise(F412)
	S952= ICache.WData=IMemGet8Word({pid,addr})                 Path(S939,S951)
	S953= PC.Out=>ICache.IEA                                    Premise(F413)
	S954= IR.Out0_5=>CU.Op                                      Premise(F414)
	S955= CU.Op=31                                              Path(S892,S954)
	S956= IR.Out11_15=>GPRegs.RReg1                             Premise(F415)
	S957= GPRegs.RReg1=rA                                       Path(S894,S956)
	S958= GPRegs.Rdata1=a                                       GPRegs-Read(S957,S852)
	S959= IR.Out16_20=>GPRegs.RReg2                             Premise(F416)
	S960= GPRegs.RReg2=rB                                       Path(S895,S959)
	S961= GPRegs.Rdata2=b                                       GPRegs-Read(S960,S853)
	S962= IR.Out21_31=>CU.IRFunc                                Premise(F417)
	S963= CU.IRFunc=1105                                        Path(S896,S962)
	S964= CU.Func=alu_subf                                      CU(S955,S963)
	S965= GPRegs.Rdata1=>A.In                                   Premise(F418)
	S966= A.In=a                                                Path(S958,S965)
	S967= GPRegs.Rdata2=>B.In                                   Premise(F419)
	S968= B.In=b                                                Path(S961,S967)
	S969= A.Out=>ALU.A                                          Premise(F420)
	S970= ALU.A=a                                               Path(S897,S969)
	S971= B.Out=>ALU.B                                          Premise(F421)
	S972= ALU.B=b                                               Path(S900,S971)
	S973= CU.Func=>ALU.Func                                     Premise(F422)
	S974= ALU.Func=alu_subf                                     Path(S964,S973)
	S975= ALU.Out=b-a                                           ALU(S970,S972)
	S976= ALU.CMP=Compare0(b-a)                                 ALU(S970,S972)
	S977= ALU.OV=OverFlow(b-a)                                  ALU(S970,S972)
	S978= ALU.CA=Carry(b-a)                                     ALU(S970,S972)
	S979= ALU.Out=>ALUOut.In                                    Premise(F423)
	S980= ALUOut.In=b-a                                         Path(S975,S979)
	S981= ALU.CMP=>DataCmb.A                                    Premise(F424)
	S982= DataCmb.A=Compare0(b-a)                               Path(S976,S981)
	S983= ORGate.Out=>DataCmb.B                                 Premise(F425)
	S984= ALU.OV=>OVReg.In                                      Premise(F426)
	S985= OVReg.In=OverFlow(b-a)                                Path(S977,S984)
	S986= XER.SOOut=>ORGate.A                                   Premise(F427)
	S987= ORGate.A=so                                           Path(S909,S986)
	S988= ALU.OV=>ORGate.B                                      Premise(F428)
	S989= ORGate.B=OverFlow(b-a)                                Path(S977,S988)
	S990= ORGate.Out=so|OverFlow(b-a)                           ORGate(S987,S989)
	S991= DataCmb.B=so|OverFlow(b-a)                            Path(S990,S983)
	S992= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}          DataCmb(S982,S991)
	S993= ORGate.Out=>DR1bit.In                                 Premise(F429)
	S994= DR1bit.In=so|OverFlow(b-a)                            Path(S990,S993)
	S995= DataCmb.Out=>DR4bit.In                                Premise(F430)
	S996= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}            Path(S992,S995)
	S997= IR.Out6_10=>GPRegs.WReg                               Premise(F431)
	S998= GPRegs.WReg=rT                                        Path(S893,S997)
	S999= ALUOut.Out=>GPRegs.WData                              Premise(F432)
	S1000= GPRegs.WData=b-a                                     Path(S903,S999)
	S1001= DR4bit.Out=>CRRegs.CR0In                             Premise(F433)
	S1002= CRRegs.CR0In={Compare0(b-a),so|OverFlow(b-a)}        Path(S913,S1001)
	S1003= DR1bit.Out=>XER.SOIn                                 Premise(F434)
	S1004= XER.SOIn=so|OverFlow(b-a)                            Path(S910,S1003)
	S1005= OVReg.Out=>XER.OVIn                                  Premise(F435)
	S1006= XER.OVIn=OverFlow(b-a)                               Path(S906,S1005)
	S1007= CtrlPIDReg=0                                         Premise(F436)
	S1008= [PIDReg]=pid                                         PIDReg-Hold(S830,S1007)
	S1009= CtrlIMMU=0                                           Premise(F437)
	S1010= CtrlPC=0                                             Premise(F438)
	S1011= CtrlPCInc=0                                          Premise(F439)
	S1012= PC[CIA]=addr                                         PC-Hold(S834,S1011)
	S1013= PC[Out]=addr+4                                       PC-Hold(S835,S1010,S1011)
	S1014= CtrlIAddrReg=0                                       Premise(F440)
	S1015= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S837,S1014)
	S1016= CtrlIMMUHitReg=0                                     Premise(F441)
	S1017= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S839,S1016)
	S1018= CtrlICache=0                                         Premise(F442)
	S1019= ICache[addr]={31,rT,rA,rB,1105}                      ICache-Hold(S841,S1018)
	S1020= CtrlICacheReg=0                                      Premise(F443)
	S1021= [ICacheReg]={31,rT,rA,rB,1105}                       ICacheReg-Hold(S843,S1020)
	S1022= CtrlICacheHitReg=0                                   Premise(F444)
	S1023= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S845,S1022)
	S1024= CtrlIMem=0                                           Premise(F445)
	S1025= IMem[{pid,addr}]={31,rT,rA,rB,1105}                  IMem-Hold(S847,S1024)
	S1026= CtrlIRMux=0                                          Premise(F446)
	S1027= CtrlIR=0                                             Premise(F447)
	S1028= [IR]={31,rT,rA,rB,1105}                              IR-Hold(S850,S1027)
	S1029= CtrlGPRegs=0                                         Premise(F448)
	S1030= GPRegs[rA]=a                                         GPRegs-Hold(S852,S1029)
	S1031= GPRegs[rB]=b                                         GPRegs-Hold(S853,S1029)
	S1032= CtrlA=0                                              Premise(F449)
	S1033= [A]=a                                                A-Hold(S855,S1032)
	S1034= CtrlB=0                                              Premise(F450)
	S1035= [B]=b                                                B-Hold(S857,S1034)
	S1036= CtrlALUOut=0                                         Premise(F451)
	S1037= [ALUOut]=b-a                                         ALUOut-Hold(S859,S1036)
	S1038= CtrlOVReg=0                                          Premise(F452)
	S1039= [OVReg]=OverFlow(b-a)                                OVReg-Hold(S861,S1038)
	S1040= CtrlXERSO=0                                          Premise(F453)
	S1041= XER[SO]=so                                           XER-SO-Hold(S863,S1040)
	S1042= CtrlXEROV=0                                          Premise(F454)
	S1043= CtrlXERCA=0                                          Premise(F455)
	S1044= CtrlDR1bit=0                                         Premise(F456)
	S1045= [DR1bit]=so|OverFlow(b-a)                            DR1bit-Hold(S867,S1044)
	S1046= CtrlDR4bit=0                                         Premise(F457)
	S1047= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}            DR4bit-Hold(S869,S1046)
	S1048= CtrlCRRegs=0                                         Premise(F458)
	S1049= CtrlCRRegsCR0=0                                      Premise(F459)
	S1050= CtrlCRRegsW4bitRegs=0                                Premise(F460)
	S1051= CtrlCRRegsW1bitRegs=0                                Premise(F461)

WB	S1052= PIDReg.Out=pid                                       PIDReg-Out(S1008)
	S1053= PIDReg.Out26_31=pid[26:31]                           PIDReg-Out(S1008)
	S1054= PIDReg.Out30_31=pid[30:31]                           PIDReg-Out(S1008)
	S1055= PC.CIA=addr                                          PC-Out(S1012)
	S1056= PC.CIA31_28=addr[31:28]                              PC-Out(S1012)
	S1057= PC.Out=addr+4                                        PC-Out(S1013)
	S1058= IAddrReg.Out={pid,addr}                              IAddrReg-Out(S1015)
	S1059= IAddrReg.Out26_31={pid,addr}[26:31]                  IAddrReg-Out(S1015)
	S1060= IAddrReg.Out30_31={pid,addr}[30:31]                  IAddrReg-Out(S1015)
	S1061= IMMUHitReg.Out=IMMUHit(pid,addr)                     IMMUHitReg-Out(S1017)
	S1062= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S1017)
	S1063= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S1017)
	S1064= ICacheReg.Out={31,rT,rA,rB,1105}                     ICacheReg-Out(S1021)
	S1065= ICacheReg.Out26_31={31,rT,rA,rB,1105}[26:31]         ICacheReg-Out(S1021)
	S1066= ICacheReg.Out30_31={31,rT,rA,rB,1105}[30:31]         ICacheReg-Out(S1021)
	S1067= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S1023)
	S1068= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S1023)
	S1069= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S1023)
	S1070= IR.Out0_5=31                                         IR-Out(S1028)
	S1071= IR.Out6_10=rT                                        IR-Out(S1028)
	S1072= IR.Out11_15=rA                                       IR-Out(S1028)
	S1073= IR.Out16_20=rB                                       IR-Out(S1028)
	S1074= IR.Out21_31=1105                                     IR-Out(S1028)
	S1075= A.Out=a                                              A-Out(S1033)
	S1076= A.Out26_31=a[26:31]                                  A-Out(S1033)
	S1077= A.Out30_31=a[30:31]                                  A-Out(S1033)
	S1078= B.Out=b                                              B-Out(S1035)
	S1079= B.Out26_31=b[26:31]                                  B-Out(S1035)
	S1080= B.Out30_31=b[30:31]                                  B-Out(S1035)
	S1081= ALUOut.Out=b-a                                       ALUOut-Out(S1037)
	S1082= ALUOut.Out26_31=b-a[26:31]                           ALUOut-Out(S1037)
	S1083= ALUOut.Out30_31=b-a[30:31]                           ALUOut-Out(S1037)
	S1084= OVReg.Out=OverFlow(b-a)                              OVReg-Out(S1039)
	S1085= OVReg.Out26_31=OverFlow(b-a)[26:31]                  OVReg-Out(S1039)
	S1086= OVReg.Out30_31=OverFlow(b-a)[30:31]                  OVReg-Out(S1039)
	S1087= XER.SOOut=so                                         XER-SO-Out(S1041)
	S1088= DR1bit.Out=so|OverFlow(b-a)                          DR1bit-Out(S1045)
	S1089= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]              DR1bit-Out(S1045)
	S1090= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]              DR1bit-Out(S1045)
	S1091= DR4bit.Out={Compare0(b-a),so|OverFlow(b-a)}          DR4bit-Out(S1047)
	S1092= DR4bit.Out26_31={Compare0(b-a),so|OverFlow(b-a)}[26:31]DR4bit-Out(S1047)
	S1093= DR4bit.Out30_31={Compare0(b-a),so|OverFlow(b-a)}[30:31]DR4bit-Out(S1047)
	S1094= PIDReg.Out=>IMMU.PID                                 Premise(F462)
	S1095= IMMU.PID=pid                                         Path(S1052,S1094)
	S1096= PC.Out=>IMMU.IEA                                     Premise(F463)
	S1097= IMMU.IEA=addr+4                                      Path(S1057,S1096)
	S1098= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1095,S1097)
	S1099= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1095,S1097)
	S1100= IMMU.Addr=>IAddrReg.In                               Premise(F464)
	S1101= IAddrReg.In={pid,addr+4}                             Path(S1098,S1100)
	S1102= IMMU.Hit=>IMMUHitReg.In                              Premise(F465)
	S1103= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1099,S1102)
	S1104= PC.Out=>ICache.IEA                                   Premise(F466)
	S1105= ICache.IEA=addr+4                                    Path(S1057,S1104)
	S1106= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1105)
	S1107= ICache.Out=>ICacheReg.In                             Premise(F467)
	S1108= ICache.Hit=>ICacheHitReg.In                          Premise(F468)
	S1109= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1106,S1108)
	S1110= IMMUHitReg.Out=>CU.IMemHit                           Premise(F469)
	S1111= CU.IMemHit=IMMUHit(pid,addr)                         Path(S1061,S1110)
	S1112= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F470)
	S1113= CU.ICacheHit=ICacheHit(addr)                         Path(S1067,S1112)
	S1114= IAddrReg.Out=>IMem.RAddr                             Premise(F471)
	S1115= IMem.RAddr={pid,addr}                                Path(S1058,S1114)
	S1116= IMem.Out={31,rT,rA,rB,1105}                          IMem-Read(S1115,S1025)
	S1117= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1115,S1025)
	S1118= IMem.Out=>IRMux.MemData                              Premise(F472)
	S1119= IRMux.MemData={31,rT,rA,rB,1105}                     Path(S1116,S1118)
	S1120= ICacheReg.Out=>IRMux.CacheData                       Premise(F473)
	S1121= IRMux.CacheData={31,rT,rA,rB,1105}                   Path(S1064,S1120)
	S1122= IRMux.Out={31,rT,rA,rB,1105}                         IRMux-Select(S1119,S1121)
	S1123= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F474)
	S1124= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S1061,S1123)
	S1125= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F475)
	S1126= IRMux.CacheSel=ICacheHit(addr)                       Path(S1067,S1125)
	S1127= IRMux.Out=>IR.In                                     Premise(F476)
	S1128= IR.In={31,rT,rA,rB,1105}                             Path(S1122,S1127)
	S1129= IMem.MEM8WordOut=>ICache.WData                       Premise(F477)
	S1130= ICache.WData=IMemGet8Word({pid,addr})                Path(S1117,S1129)
	S1131= PC.Out=>ICache.IEA                                   Premise(F478)
	S1132= IR.Out0_5=>CU.Op                                     Premise(F479)
	S1133= CU.Op=31                                             Path(S1070,S1132)
	S1134= IR.Out11_15=>GPRegs.RReg1                            Premise(F480)
	S1135= GPRegs.RReg1=rA                                      Path(S1072,S1134)
	S1136= GPRegs.Rdata1=a                                      GPRegs-Read(S1135,S1030)
	S1137= IR.Out16_20=>GPRegs.RReg2                            Premise(F481)
	S1138= GPRegs.RReg2=rB                                      Path(S1073,S1137)
	S1139= GPRegs.Rdata2=b                                      GPRegs-Read(S1138,S1031)
	S1140= IR.Out21_31=>CU.IRFunc                               Premise(F482)
	S1141= CU.IRFunc=1105                                       Path(S1074,S1140)
	S1142= CU.Func=alu_subf                                     CU(S1133,S1141)
	S1143= GPRegs.Rdata1=>A.In                                  Premise(F483)
	S1144= A.In=a                                               Path(S1136,S1143)
	S1145= GPRegs.Rdata2=>B.In                                  Premise(F484)
	S1146= B.In=b                                               Path(S1139,S1145)
	S1147= A.Out=>ALU.A                                         Premise(F485)
	S1148= ALU.A=a                                              Path(S1075,S1147)
	S1149= B.Out=>ALU.B                                         Premise(F486)
	S1150= ALU.B=b                                              Path(S1078,S1149)
	S1151= CU.Func=>ALU.Func                                    Premise(F487)
	S1152= ALU.Func=alu_subf                                    Path(S1142,S1151)
	S1153= ALU.Out=b-a                                          ALU(S1148,S1150)
	S1154= ALU.CMP=Compare0(b-a)                                ALU(S1148,S1150)
	S1155= ALU.OV=OverFlow(b-a)                                 ALU(S1148,S1150)
	S1156= ALU.CA=Carry(b-a)                                    ALU(S1148,S1150)
	S1157= ALU.Out=>ALUOut.In                                   Premise(F488)
	S1158= ALUOut.In=b-a                                        Path(S1153,S1157)
	S1159= ALU.CMP=>DataCmb.A                                   Premise(F489)
	S1160= DataCmb.A=Compare0(b-a)                              Path(S1154,S1159)
	S1161= ORGate.Out=>DataCmb.B                                Premise(F490)
	S1162= ALU.OV=>OVReg.In                                     Premise(F491)
	S1163= OVReg.In=OverFlow(b-a)                               Path(S1155,S1162)
	S1164= XER.SOOut=>ORGate.A                                  Premise(F492)
	S1165= ORGate.A=so                                          Path(S1087,S1164)
	S1166= ALU.OV=>ORGate.B                                     Premise(F493)
	S1167= ORGate.B=OverFlow(b-a)                               Path(S1155,S1166)
	S1168= ORGate.Out=so|OverFlow(b-a)                          ORGate(S1165,S1167)
	S1169= DataCmb.B=so|OverFlow(b-a)                           Path(S1168,S1161)
	S1170= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}         DataCmb(S1160,S1169)
	S1171= ORGate.Out=>DR1bit.In                                Premise(F494)
	S1172= DR1bit.In=so|OverFlow(b-a)                           Path(S1168,S1171)
	S1173= DataCmb.Out=>DR4bit.In                               Premise(F495)
	S1174= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}           Path(S1170,S1173)
	S1175= IR.Out6_10=>GPRegs.WReg                              Premise(F496)
	S1176= GPRegs.WReg=rT                                       Path(S1071,S1175)
	S1177= ALUOut.Out=>GPRegs.WData                             Premise(F497)
	S1178= GPRegs.WData=b-a                                     Path(S1081,S1177)
	S1179= DR4bit.Out=>CRRegs.CR0In                             Premise(F498)
	S1180= CRRegs.CR0In={Compare0(b-a),so|OverFlow(b-a)}        Path(S1091,S1179)
	S1181= DR1bit.Out=>XER.SOIn                                 Premise(F499)
	S1182= XER.SOIn=so|OverFlow(b-a)                            Path(S1088,S1181)
	S1183= OVReg.Out=>XER.OVIn                                  Premise(F500)
	S1184= XER.OVIn=OverFlow(b-a)                               Path(S1084,S1183)
	S1185= CtrlPIDReg=0                                         Premise(F501)
	S1186= [PIDReg]=pid                                         PIDReg-Hold(S1008,S1185)
	S1187= CtrlIMMU=0                                           Premise(F502)
	S1188= CtrlPC=0                                             Premise(F503)
	S1189= CtrlPCInc=0                                          Premise(F504)
	S1190= PC[CIA]=addr                                         PC-Hold(S1012,S1189)
	S1191= PC[Out]=addr+4                                       PC-Hold(S1013,S1188,S1189)
	S1192= CtrlIAddrReg=0                                       Premise(F505)
	S1193= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1015,S1192)
	S1194= CtrlIMMUHitReg=0                                     Premise(F506)
	S1195= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1017,S1194)
	S1196= CtrlICache=0                                         Premise(F507)
	S1197= ICache[addr]={31,rT,rA,rB,1105}                      ICache-Hold(S1019,S1196)
	S1198= CtrlICacheReg=0                                      Premise(F508)
	S1199= [ICacheReg]={31,rT,rA,rB,1105}                       ICacheReg-Hold(S1021,S1198)
	S1200= CtrlICacheHitReg=0                                   Premise(F509)
	S1201= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1023,S1200)
	S1202= CtrlIMem=0                                           Premise(F510)
	S1203= IMem[{pid,addr}]={31,rT,rA,rB,1105}                  IMem-Hold(S1025,S1202)
	S1204= CtrlIRMux=0                                          Premise(F511)
	S1205= CtrlIR=0                                             Premise(F512)
	S1206= [IR]={31,rT,rA,rB,1105}                              IR-Hold(S1028,S1205)
	S1207= CtrlGPRegs=1                                         Premise(F513)
	S1208= GPRegs[rT]=b-a                                       GPRegs-Write(S1176,S1178,S1207)
	S1209= CtrlA=0                                              Premise(F514)
	S1210= [A]=a                                                A-Hold(S1033,S1209)
	S1211= CtrlB=0                                              Premise(F515)
	S1212= [B]=b                                                B-Hold(S1035,S1211)
	S1213= CtrlALUOut=0                                         Premise(F516)
	S1214= [ALUOut]=b-a                                         ALUOut-Hold(S1037,S1213)
	S1215= CtrlOVReg=0                                          Premise(F517)
	S1216= [OVReg]=OverFlow(b-a)                                OVReg-Hold(S1039,S1215)
	S1217= CtrlXERSO=1                                          Premise(F518)
	S1218= XER[SO]=so|OverFlow(b-a)                             XER-SO-Write(S1182,S1217)
	S1219= CtrlXEROV=1                                          Premise(F519)
	S1220= XER[OV]=OverFlow(b-a)                                XER-OV-Write(S1184,S1219)
	S1221= CtrlXERCA=0                                          Premise(F520)
	S1222= CtrlDR1bit=0                                         Premise(F521)
	S1223= [DR1bit]=so|OverFlow(b-a)                            DR1bit-Hold(S1045,S1222)
	S1224= CtrlDR4bit=0                                         Premise(F522)
	S1225= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}            DR4bit-Hold(S1047,S1224)
	S1226= CtrlCRRegs=0                                         Premise(F523)
	S1227= CtrlCRRegsCR0=1                                      Premise(F524)
	S1228= CRRegs[CR0]={Compare0(b-a),so|OverFlow(b-a)}         CRRegs-CR0-Write(S1180,S1227)
	S1229= CtrlCRRegsW4bitRegs=0                                Premise(F525)
	S1230= CtrlCRRegsW1bitRegs=0                                Premise(F526)

POST	S1186= [PIDReg]=pid                                         PIDReg-Hold(S1008,S1185)
	S1190= PC[CIA]=addr                                         PC-Hold(S1012,S1189)
	S1191= PC[Out]=addr+4                                       PC-Hold(S1013,S1188,S1189)
	S1193= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1015,S1192)
	S1195= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1017,S1194)
	S1197= ICache[addr]={31,rT,rA,rB,1105}                      ICache-Hold(S1019,S1196)
	S1199= [ICacheReg]={31,rT,rA,rB,1105}                       ICacheReg-Hold(S1021,S1198)
	S1201= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1023,S1200)
	S1203= IMem[{pid,addr}]={31,rT,rA,rB,1105}                  IMem-Hold(S1025,S1202)
	S1206= [IR]={31,rT,rA,rB,1105}                              IR-Hold(S1028,S1205)
	S1208= GPRegs[rT]=b-a                                       GPRegs-Write(S1176,S1178,S1207)
	S1210= [A]=a                                                A-Hold(S1033,S1209)
	S1212= [B]=b                                                B-Hold(S1035,S1211)
	S1214= [ALUOut]=b-a                                         ALUOut-Hold(S1037,S1213)
	S1216= [OVReg]=OverFlow(b-a)                                OVReg-Hold(S1039,S1215)
	S1218= XER[SO]=so|OverFlow(b-a)                             XER-SO-Write(S1182,S1217)
	S1220= XER[OV]=OverFlow(b-a)                                XER-OV-Write(S1184,S1219)
	S1223= [DR1bit]=so|OverFlow(b-a)                            DR1bit-Hold(S1045,S1222)
	S1225= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}            DR4bit-Hold(S1047,S1224)
	S1228= CRRegs[CR0]={Compare0(b-a),so|OverFlow(b-a)}         CRRegs-CR0-Write(S1180,S1227)

