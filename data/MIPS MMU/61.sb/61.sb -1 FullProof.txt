
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={40,rS,rT,offset}                      Premise(F2)
	S3= GPR[rS]=base                                            Premise(F3)
	S4= GPR[rT]=a                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S8,S10)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S14= IAddrReg.In={pid,addr}                                 Path(S11,S13)
	S15= IMMU.Hit=>CU.IMMUHit                                   Premise(F8)
	S16= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S12,S15)
	S17= PC.Out=>ICache.IEA                                     Premise(F9)
	S18= ICache.IEA=addr                                        Path(S6,S17)
	S19= ICache.Hit=ICacheHit(addr)                             ICache-Search(S18)
	S20= ICache.Out=>IR.In                                      Premise(F10)
	S21= ICache.Out=>ICacheReg.In                               Premise(F11)
	S22= ICache.Hit=>CU.ICacheHit                               Premise(F12)
	S23= CU.ICacheHit=ICacheHit(addr)                           Path(S19,S22)
	S24= CtrlASIDIn=0                                           Premise(F13)
	S25= CtrlCP0=0                                              Premise(F14)
	S26= CP0[ASID]=pid                                          CP0-Hold(S0,S25)
	S27= CtrlEPCIn=0                                            Premise(F15)
	S28= CtrlExCodeIn=0                                         Premise(F16)
	S29= CtrlIMMU=0                                             Premise(F17)
	S30= CtrlPC=0                                               Premise(F18)
	S31= CtrlPCInc=0                                            Premise(F19)
	S32= PC[Out]=addr                                           PC-Hold(S1,S30,S31)
	S33= CtrlIAddrReg=1                                         Premise(F20)
	S34= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S14,S33)
	S35= CtrlICache=0                                           Premise(F21)
	S36= CtrlIR=0                                               Premise(F22)
	S37= CtrlICacheReg=1                                        Premise(F23)
	S38= CtrlIMem=0                                             Premise(F24)
	S39= IMem[{pid,addr}]={40,rS,rT,offset}                     IMem-Hold(S2,S38)
	S40= CtrlIRMux=0                                            Premise(F25)
	S41= CtrlGPR=0                                              Premise(F26)
	S42= GPR[rS]=base                                           GPR-Hold(S3,S41)
	S43= GPR[rT]=a                                              GPR-Hold(S4,S41)
	S44= CtrlA=0                                                Premise(F27)
	S45= CtrlB=0                                                Premise(F28)
	S46= CtrlALUOut=0                                           Premise(F29)
	S47= CtrlDR=0                                               Premise(F30)
	S48= CtrlDMMU=0                                             Premise(F31)
	S49= CtrlDAddrReg=0                                         Premise(F32)
	S50= CtrlDCache=0                                           Premise(F33)
	S51= CtrlDMem=0                                             Premise(F34)
	S52= CtrlDMem8Word=0                                        Premise(F35)

IF(IMMU)	S53= CP0.ASID=pid                                           CP0-Read-ASID(S26)
	S54= PC.Out=addr                                            PC-Out(S32)
	S55= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S34)
	S56= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S34)
	S57= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S34)
	S58= CU.IMMUHit=>CU.IMMUHit                                 Premise(F36)
	S59= CU.ICacheHit=>CU.ICacheHit                             Premise(F37)
	S60= IAddrReg.Out=>IMem.RAddr                               Premise(F38)
	S61= IMem.RAddr={pid,addr}                                  Path(S55,S60)
	S62= IMem.Out={40,rS,rT,offset}                             IMem-Read(S61,S39)
	S63= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S61,S39)
	S64= IMem.Out=>IRMux.MemData                                Premise(F39)
	S65= IRMux.MemData={40,rS,rT,offset}                        Path(S62,S64)
	S66= IRMux.Out={40,rS,rT,offset}                            IRMux-Select2(S65)
	S67= ICacheReg.Out=>IRMux.CacheData                         Premise(F40)
	S68= CU.IMMUHit=>IRMux.MemSel                               Premise(F41)
	S69= CU.ICacheHit=>IRMux.CacheSel                           Premise(F42)
	S70= IRMux.Out=>IR.In                                       Premise(F43)
	S71= IR.In={40,rS,rT,offset}                                Path(S66,S70)
	S72= IMem.MEM8WordOut=>ICache.WData                         Premise(F44)
	S73= ICache.WData=IMemGet8Word({pid,addr})                  Path(S63,S72)
	S74= PC.Out=>ICache.IEA                                     Premise(F45)
	S75= ICache.IEA=addr                                        Path(S54,S74)
	S76= ICache.Hit=ICacheHit(addr)                             ICache-Search(S75)
	S77= CtrlASIDIn=0                                           Premise(F46)
	S78= CtrlCP0=0                                              Premise(F47)
	S79= CP0[ASID]=pid                                          CP0-Hold(S26,S78)
	S80= CtrlEPCIn=0                                            Premise(F48)
	S81= CtrlExCodeIn=0                                         Premise(F49)
	S82= CtrlIMMU=0                                             Premise(F50)
	S83= CtrlPC=0                                               Premise(F51)
	S84= CtrlPCInc=1                                            Premise(F52)
	S85= PC[Out]=addr+4                                         PC-Inc(S32,S83,S84)
	S86= PC[CIA]=addr                                           PC-Inc(S32,S83,S84)
	S87= CtrlIAddrReg=0                                         Premise(F53)
	S88= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S34,S87)
	S89= CtrlICache=1                                           Premise(F54)
	S90= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S75,S73,S89)
	S91= CtrlIR=1                                               Premise(F55)
	S92= [IR]={40,rS,rT,offset}                                 IR-Write(S71,S91)
	S93= CtrlICacheReg=0                                        Premise(F56)
	S94= CtrlIMem=0                                             Premise(F57)
	S95= IMem[{pid,addr}]={40,rS,rT,offset}                     IMem-Hold(S39,S94)
	S96= CtrlIRMux=0                                            Premise(F58)
	S97= CtrlGPR=0                                              Premise(F59)
	S98= GPR[rS]=base                                           GPR-Hold(S42,S97)
	S99= GPR[rT]=a                                              GPR-Hold(S43,S97)
	S100= CtrlA=0                                               Premise(F60)
	S101= CtrlB=0                                               Premise(F61)
	S102= CtrlALUOut=0                                          Premise(F62)
	S103= CtrlDR=0                                              Premise(F63)
	S104= CtrlDMMU=0                                            Premise(F64)
	S105= CtrlDAddrReg=0                                        Premise(F65)
	S106= CtrlDCache=0                                          Premise(F66)
	S107= CtrlDMem=0                                            Premise(F67)
	S108= CtrlDMem8Word=0                                       Premise(F68)

ID	S109= CP0.ASID=pid                                          CP0-Read-ASID(S79)
	S110= PC.Out=addr+4                                         PC-Out(S85)
	S111= PC.CIA=addr                                           PC-Out(S86)
	S112= PC.CIA31_28=addr[31:28]                               PC-Out(S86)
	S113= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S88)
	S114= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S88)
	S115= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S88)
	S116= IR.Out={40,rS,rT,offset}                              IR-Out(S92)
	S117= IR.Out31_26=40                                        IR-Out(S92)
	S118= IR.Out25_21=rS                                        IR-Out(S92)
	S119= IR.Out20_16=rT                                        IR-Out(S92)
	S120= IR.Out15_0=offset                                     IR-Out(S92)
	S121= IR.Out31_26=>CU.Op                                    Premise(F69)
	S122= CU.Op=40                                              Path(S117,S121)
	S123= CU.Func=alu_add                                       CU(S122)
	S124= CU.MemDataSelFunc=mds_lhz                             CU(S122)
	S125= IR.Out25_21=>GPR.RReg1                                Premise(F70)
	S126= GPR.RReg1=rS                                          Path(S118,S125)
	S127= GPR.Rdata1=base                                       GPR-Read(S126,S98)
	S128= IR.Out15_0=>IMMEXT.In                                 Premise(F71)
	S129= IMMEXT.In=offset                                      Path(S120,S128)
	S130= IMMEXT.Out={16{offset[15]},offset}                    IMMEXT(S129)
	S131= GPR.Rdata1=>A.In                                      Premise(F72)
	S132= A.In=base                                             Path(S127,S131)
	S133= IMMEXT.Out=>B.In                                      Premise(F73)
	S134= B.In={16{offset[15]},offset}                          Path(S130,S133)
	S135= CtrlASIDIn=0                                          Premise(F74)
	S136= CtrlCP0=0                                             Premise(F75)
	S137= CP0[ASID]=pid                                         CP0-Hold(S79,S136)
	S138= CtrlEPCIn=0                                           Premise(F76)
	S139= CtrlExCodeIn=0                                        Premise(F77)
	S140= CtrlIMMU=0                                            Premise(F78)
	S141= CtrlPC=0                                              Premise(F79)
	S142= CtrlPCInc=0                                           Premise(F80)
	S143= PC[CIA]=addr                                          PC-Hold(S86,S142)
	S144= PC[Out]=addr+4                                        PC-Hold(S85,S141,S142)
	S145= CtrlIAddrReg=0                                        Premise(F81)
	S146= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S88,S145)
	S147= CtrlICache=0                                          Premise(F82)
	S148= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S90,S147)
	S149= CtrlIR=0                                              Premise(F83)
	S150= [IR]={40,rS,rT,offset}                                IR-Hold(S92,S149)
	S151= CtrlICacheReg=0                                       Premise(F84)
	S152= CtrlIMem=0                                            Premise(F85)
	S153= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S95,S152)
	S154= CtrlIRMux=0                                           Premise(F86)
	S155= CtrlGPR=0                                             Premise(F87)
	S156= GPR[rS]=base                                          GPR-Hold(S98,S155)
	S157= GPR[rT]=a                                             GPR-Hold(S99,S155)
	S158= CtrlA=1                                               Premise(F88)
	S159= [A]=base                                              A-Write(S132,S158)
	S160= CtrlB=1                                               Premise(F89)
	S161= [B]={16{offset[15]},offset}                           B-Write(S134,S160)
	S162= CtrlALUOut=0                                          Premise(F90)
	S163= CtrlDR=0                                              Premise(F91)
	S164= CtrlDMMU=0                                            Premise(F92)
	S165= CtrlDAddrReg=0                                        Premise(F93)
	S166= CtrlDCache=0                                          Premise(F94)
	S167= CtrlDMem=0                                            Premise(F95)
	S168= CtrlDMem8Word=0                                       Premise(F96)

EX	S169= CP0.ASID=pid                                          CP0-Read-ASID(S137)
	S170= PC.CIA=addr                                           PC-Out(S143)
	S171= PC.CIA31_28=addr[31:28]                               PC-Out(S143)
	S172= PC.Out=addr+4                                         PC-Out(S144)
	S173= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S146)
	S174= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S146)
	S175= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S146)
	S176= IR.Out={40,rS,rT,offset}                              IR-Out(S150)
	S177= IR.Out31_26=40                                        IR-Out(S150)
	S178= IR.Out25_21=rS                                        IR-Out(S150)
	S179= IR.Out20_16=rT                                        IR-Out(S150)
	S180= IR.Out15_0=offset                                     IR-Out(S150)
	S181= A.Out=base                                            A-Out(S159)
	S182= A.Out1_0={base}[1:0]                                  A-Out(S159)
	S183= A.Out4_0={base}[4:0]                                  A-Out(S159)
	S184= B.Out={16{offset[15]},offset}                         B-Out(S161)
	S185= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S161)
	S186= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S161)
	S187= A.Out=>ALU.A                                          Premise(F97)
	S188= ALU.A=base                                            Path(S181,S187)
	S189= B.Out=>ALU.B                                          Premise(F98)
	S190= ALU.B={16{offset[15]},offset}                         Path(S184,S189)
	S191= ALU.Func=6'b010010                                    Premise(F99)
	S192= ALU.Out=base+{16{offset[15]},offset}                  ALU(S188,S190)
	S193= ALU.Out1_0={base+{16{offset[15]},offset}}[1:0]        ALU(S188,S190)
	S194= ALU.CMP=Compare0(base+{16{offset[15]},offset})        ALU(S188,S190)
	S195= ALU.OV=OverFlow(base+{16{offset[15]},offset})         ALU(S188,S190)
	S196= ALU.CA=Carry(base+{16{offset[15]},offset})            ALU(S188,S190)
	S197= ALU.Out=>ALUOut.In                                    Premise(F100)
	S198= ALUOut.In=base+{16{offset[15]},offset}                Path(S192,S197)
	S199= IR.Out20_16=>GPR.RReg2                                Premise(F101)
	S200= GPR.RReg2=rT                                          Path(S179,S199)
	S201= GPR.Rdata2=a                                          GPR-Read(S200,S157)
	S202= GPR.Rdata2=>MemDataSelS.In                            Premise(F102)
	S203= MemDataSelS.In=a                                      Path(S201,S202)
	S204= ALU.Out1_0=>MemDataSelS.Addr                          Premise(F103)
	S205= MemDataSelS.Addr={base+{16{offset[15]},offset}}[1:0]  Path(S193,S204)
	S206= MemDataSelS.Func=6'b010000                            Premise(F104)
	S207= MemDataSelS.Out={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}MemDataSelS(S203,S205)
	S208= MemDataSelS.Out=>DR.In                                Premise(F105)
	S209= DR.In={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}Path(S207,S208)
	S210= CtrlASIDIn=0                                          Premise(F106)
	S211= CtrlCP0=0                                             Premise(F107)
	S212= CP0[ASID]=pid                                         CP0-Hold(S137,S211)
	S213= CtrlEPCIn=0                                           Premise(F108)
	S214= CtrlExCodeIn=0                                        Premise(F109)
	S215= CtrlIMMU=0                                            Premise(F110)
	S216= CtrlPC=0                                              Premise(F111)
	S217= CtrlPCInc=0                                           Premise(F112)
	S218= PC[CIA]=addr                                          PC-Hold(S143,S217)
	S219= PC[Out]=addr+4                                        PC-Hold(S144,S216,S217)
	S220= CtrlIAddrReg=0                                        Premise(F113)
	S221= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S146,S220)
	S222= CtrlICache=0                                          Premise(F114)
	S223= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S148,S222)
	S224= CtrlIR=0                                              Premise(F115)
	S225= [IR]={40,rS,rT,offset}                                IR-Hold(S150,S224)
	S226= CtrlICacheReg=0                                       Premise(F116)
	S227= CtrlIMem=0                                            Premise(F117)
	S228= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S153,S227)
	S229= CtrlIRMux=0                                           Premise(F118)
	S230= CtrlGPR=0                                             Premise(F119)
	S231= GPR[rS]=base                                          GPR-Hold(S156,S230)
	S232= GPR[rT]=a                                             GPR-Hold(S157,S230)
	S233= CtrlA=0                                               Premise(F120)
	S234= [A]=base                                              A-Hold(S159,S233)
	S235= CtrlB=0                                               Premise(F121)
	S236= [B]={16{offset[15]},offset}                           B-Hold(S161,S235)
	S237= CtrlALUOut=1                                          Premise(F122)
	S238= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Write(S198,S237)
	S239= CtrlDR=1                                              Premise(F123)
	S240= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Write(S209,S239)
	S241= CtrlDMMU=0                                            Premise(F124)
	S242= CtrlDAddrReg=0                                        Premise(F125)
	S243= CtrlDCache=0                                          Premise(F126)
	S244= CtrlDMem=0                                            Premise(F127)
	S245= CtrlDMem8Word=0                                       Premise(F128)

MEM	S246= CP0.ASID=pid                                          CP0-Read-ASID(S212)
	S247= PC.CIA=addr                                           PC-Out(S218)
	S248= PC.CIA31_28=addr[31:28]                               PC-Out(S218)
	S249= PC.Out=addr+4                                         PC-Out(S219)
	S250= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S221)
	S251= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S221)
	S252= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S221)
	S253= IR.Out={40,rS,rT,offset}                              IR-Out(S225)
	S254= IR.Out31_26=40                                        IR-Out(S225)
	S255= IR.Out25_21=rS                                        IR-Out(S225)
	S256= IR.Out20_16=rT                                        IR-Out(S225)
	S257= IR.Out15_0=offset                                     IR-Out(S225)
	S258= A.Out=base                                            A-Out(S234)
	S259= A.Out1_0={base}[1:0]                                  A-Out(S234)
	S260= A.Out4_0={base}[4:0]                                  A-Out(S234)
	S261= B.Out={16{offset[15]},offset}                         B-Out(S236)
	S262= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S236)
	S263= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S236)
	S264= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S238)
	S265= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S238)
	S266= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S238)
	S267= DR.Out={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Out(S240)
	S268= DR.Out1_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR-Out(S240)
	S269= DR.Out4_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR-Out(S240)
	S270= CP0.ASID=>DMMU.PID                                    Premise(F129)
	S271= DMMU.PID=pid                                          Path(S246,S270)
	S272= ALUOut.Out=>DMMU.IEA                                  Premise(F130)
	S273= DMMU.IEA=base+{16{offset[15]},offset}                 Path(S264,S272)
	S274= DMMU.Addr={pid,base+{16{offset[15]},offset}}          DMMU-Search(S271,S273)
	S275= DMMU.Hit=DMMUHit(pid,base+{16{offset[15]},offset})    DMMU-Search(S271,S273)
	S276= DMMU.Addr=>DAddrReg.In                                Premise(F131)
	S277= DAddrReg.In={pid,base+{16{offset[15]},offset}}        Path(S274,S276)
	S278= DMMU.Hit=>CU.DMMUHit                                  Premise(F132)
	S279= CU.DMMUHit=DMMUHit(pid,base+{16{offset[15]},offset})  Path(S275,S278)
	S280= ALUOut.Out=>DCache.IEA                                Premise(F133)
	S281= DCache.IEA=base+{16{offset[15]},offset}               Path(S264,S280)
	S282= DCache.Hit=DCacheHit(base+{16{offset[15]},offset})    DCache-Search(S281)
	S283= DCache.Hit=>CU.DCacheHit                              Premise(F134)
	S284= CU.DCacheHit=DCacheHit(base+{16{offset[15]},offset})  Path(S282,S283)
	S285= DR.Out=>DCache.In                                     Premise(F135)
	S286= DCache.In={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}Path(S267,S285)
	S287= CtrlASIDIn=0                                          Premise(F136)
	S288= CtrlCP0=0                                             Premise(F137)
	S289= CP0[ASID]=pid                                         CP0-Hold(S212,S288)
	S290= CtrlEPCIn=0                                           Premise(F138)
	S291= CtrlExCodeIn=0                                        Premise(F139)
	S292= CtrlIMMU=0                                            Premise(F140)
	S293= CtrlPC=0                                              Premise(F141)
	S294= CtrlPCInc=0                                           Premise(F142)
	S295= PC[CIA]=addr                                          PC-Hold(S218,S294)
	S296= PC[Out]=addr+4                                        PC-Hold(S219,S293,S294)
	S297= CtrlIAddrReg=0                                        Premise(F143)
	S298= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S221,S297)
	S299= CtrlICache=0                                          Premise(F144)
	S300= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S223,S299)
	S301= CtrlIR=0                                              Premise(F145)
	S302= [IR]={40,rS,rT,offset}                                IR-Hold(S225,S301)
	S303= CtrlICacheReg=0                                       Premise(F146)
	S304= CtrlIMem=0                                            Premise(F147)
	S305= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S228,S304)
	S306= CtrlIRMux=0                                           Premise(F148)
	S307= CtrlGPR=0                                             Premise(F149)
	S308= GPR[rS]=base                                          GPR-Hold(S231,S307)
	S309= GPR[rT]=a                                             GPR-Hold(S232,S307)
	S310= CtrlA=0                                               Premise(F150)
	S311= [A]=base                                              A-Hold(S234,S310)
	S312= CtrlB=0                                               Premise(F151)
	S313= [B]={16{offset[15]},offset}                           B-Hold(S236,S312)
	S314= CtrlALUOut=0                                          Premise(F152)
	S315= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S238,S314)
	S316= CtrlDR=0                                              Premise(F153)
	S317= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Hold(S240,S316)
	S318= CtrlDMMU=0                                            Premise(F154)
	S319= CtrlDAddrReg=1                                        Premise(F155)
	S320= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Write(S277,S319)
	S321= CtrlDCache=1                                          Premise(F156)
	S322= DCache[base+{16{offset[15]},offset}]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Write(S281,S286,S321)
	S323= CtrlDMem=0                                            Premise(F157)
	S324= CtrlDMem8Word=0                                       Premise(F158)

WB	S325= CP0.ASID=pid                                          CP0-Read-ASID(S289)
	S326= PC.CIA=addr                                           PC-Out(S295)
	S327= PC.CIA31_28=addr[31:28]                               PC-Out(S295)
	S328= PC.Out=addr+4                                         PC-Out(S296)
	S329= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S298)
	S330= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S298)
	S331= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S298)
	S332= IR.Out={40,rS,rT,offset}                              IR-Out(S302)
	S333= IR.Out31_26=40                                        IR-Out(S302)
	S334= IR.Out25_21=rS                                        IR-Out(S302)
	S335= IR.Out20_16=rT                                        IR-Out(S302)
	S336= IR.Out15_0=offset                                     IR-Out(S302)
	S337= A.Out=base                                            A-Out(S311)
	S338= A.Out1_0={base}[1:0]                                  A-Out(S311)
	S339= A.Out4_0={base}[4:0]                                  A-Out(S311)
	S340= B.Out={16{offset[15]},offset}                         B-Out(S313)
	S341= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S313)
	S342= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S313)
	S343= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S315)
	S344= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S315)
	S345= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S315)
	S346= DR.Out={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Out(S317)
	S347= DR.Out1_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR-Out(S317)
	S348= DR.Out4_0={{a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR-Out(S317)
	S349= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S320)
	S350= DAddrReg.Out1_0={{pid,base+{16{offset[15]},offset}}}[1:0]DAddrReg-Out(S320)
	S351= DAddrReg.Out4_0={{pid,base+{16{offset[15]},offset}}}[4:0]DAddrReg-Out(S320)
	S352= CtrlASIDIn=0                                          Premise(F211)
	S353= CtrlCP0=0                                             Premise(F212)
	S354= CP0[ASID]=pid                                         CP0-Hold(S289,S353)
	S355= CtrlEPCIn=0                                           Premise(F213)
	S356= CtrlExCodeIn=0                                        Premise(F214)
	S357= CtrlIMMU=0                                            Premise(F215)
	S358= CtrlPC=0                                              Premise(F216)
	S359= CtrlPCInc=0                                           Premise(F217)
	S360= PC[CIA]=addr                                          PC-Hold(S295,S359)
	S361= PC[Out]=addr+4                                        PC-Hold(S296,S358,S359)
	S362= CtrlIAddrReg=0                                        Premise(F218)
	S363= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S298,S362)
	S364= CtrlICache=0                                          Premise(F219)
	S365= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S300,S364)
	S366= CtrlIR=0                                              Premise(F220)
	S367= [IR]={40,rS,rT,offset}                                IR-Hold(S302,S366)
	S368= CtrlICacheReg=0                                       Premise(F221)
	S369= CtrlIMem=0                                            Premise(F222)
	S370= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S305,S369)
	S371= CtrlIRMux=0                                           Premise(F223)
	S372= CtrlGPR=0                                             Premise(F224)
	S373= GPR[rS]=base                                          GPR-Hold(S308,S372)
	S374= GPR[rT]=a                                             GPR-Hold(S309,S372)
	S375= CtrlA=0                                               Premise(F225)
	S376= [A]=base                                              A-Hold(S311,S375)
	S377= CtrlB=0                                               Premise(F226)
	S378= [B]={16{offset[15]},offset}                           B-Hold(S313,S377)
	S379= CtrlALUOut=0                                          Premise(F227)
	S380= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S315,S379)
	S381= CtrlDR=0                                              Premise(F228)
	S382= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Hold(S317,S381)
	S383= CtrlDMMU=0                                            Premise(F229)
	S384= CtrlDAddrReg=0                                        Premise(F230)
	S385= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S320,S384)
	S386= CtrlDCache=0                                          Premise(F231)
	S387= DCache[base+{16{offset[15]},offset}]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Hold(S322,S386)
	S388= CtrlDMem=0                                            Premise(F232)
	S389= CtrlDMem8Word=0                                       Premise(F233)

POST	S354= CP0[ASID]=pid                                         CP0-Hold(S289,S353)
	S360= PC[CIA]=addr                                          PC-Hold(S295,S359)
	S361= PC[Out]=addr+4                                        PC-Hold(S296,S358,S359)
	S363= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S298,S362)
	S365= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S300,S364)
	S367= [IR]={40,rS,rT,offset}                                IR-Hold(S302,S366)
	S370= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S305,S369)
	S373= GPR[rS]=base                                          GPR-Hold(S308,S372)
	S374= GPR[rT]=a                                             GPR-Hold(S309,S372)
	S376= [A]=base                                              A-Hold(S311,S375)
	S378= [B]={16{offset[15]},offset}                           B-Hold(S313,S377)
	S380= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S315,S379)
	S382= [DR]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DR-Hold(S317,S381)
	S385= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S320,S384)
	S387= DCache[base+{16{offset[15]},offset}]={a[31-{base+{16{offset[15]},offset}}[1:0]*8:0],{base+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Hold(S322,S386)

