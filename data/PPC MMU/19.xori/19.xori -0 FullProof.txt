
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={26,rS,rA,UIMM}                        Premise(F2)
	S3= GPRegs[rS]=a                                            Premise(F3)
	S4= XER[SO]=so                                              Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S7= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S8= PC.Out=addr                                             PC-Out(S1)
	S9= XER.SOOut=so                                            XER-SO-Out(S4)
	S10= PIDReg.Out=>IMMU.PID                                   Premise(F5)
	S11= IMMU.PID=pid                                           Path(S5,S10)
	S12= PC.Out=>IMMU.IEA                                       Premise(F6)
	S13= IMMU.IEA=addr                                          Path(S8,S12)
	S14= IMMU.Addr={pid,addr}                                   IMMU-Search(S11,S13)
	S15= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S11,S13)
	S16= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S17= IAddrReg.In={pid,addr}                                 Path(S14,S16)
	S18= IMMU.Hit=>IMMUHitReg.In                                Premise(F8)
	S19= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S15,S18)
	S20= PC.Out=>ICache.IEA                                     Premise(F9)
	S21= ICache.IEA=addr                                        Path(S8,S20)
	S22= ICache.Hit=ICacheHit(addr)                             ICache-Search(S21)
	S23= ICache.Out=>ICacheReg.In                               Premise(F10)
	S24= ICache.Hit=>ICacheHitReg.In                            Premise(F11)
	S25= ICacheHitReg.In=ICacheHit(addr)                        Path(S22,S24)
	S26= IMMUHitReg.Out=>CU.IMemHit                             Premise(F12)
	S27= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F13)
	S28= IAddrReg.Out=>IMem.RAddr                               Premise(F14)
	S29= IMem.Out=>IRMux.MemData                                Premise(F15)
	S30= ICacheReg.Out=>IRMux.CacheData                         Premise(F16)
	S31= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F17)
	S32= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F18)
	S33= IRMux.Out=>IR.In                                       Premise(F19)
	S34= IMem.MEM8WordOut=>ICache.WData                         Premise(F20)
	S35= PC.Out=>ICache.IEA                                     Premise(F21)
	S36= IR.Out0_5=>CU.Op                                       Premise(F22)
	S37= IR.Out6_10=>GPRegs.RReg1                               Premise(F23)
	S38= IR.Out16_31=>LIMMEXT.In                                Premise(F24)
	S39= GPRegs.Rdata1=>A.In                                    Premise(F25)
	S40= LIMMEXT.Out=>B.In                                      Premise(F26)
	S41= A.Out=>ALU.A                                           Premise(F27)
	S42= B.Out=>ALU.B                                           Premise(F28)
	S43= CU.Func=>ALU.Func                                      Premise(F29)
	S44= ALU.Out=>ALUOut.In                                     Premise(F30)
	S45= ALU.CMP=>DataCmb.A                                     Premise(F31)
	S46= XER.SOOut=>DataCmb.B                                   Premise(F32)
	S47= DataCmb.B=so                                           Path(S9,S46)
	S48= DataCmb.Out=>DR4bit.In                                 Premise(F33)
	S49= IR.Out11_15=>GPRegs.WReg                               Premise(F34)
	S50= ALUOut.Out=>GPRegs.WData                               Premise(F35)
	S51= DR4bit.Out=>CRRegs.CR0In                               Premise(F36)
	S52= CtrlPIDReg=0                                           Premise(F37)
	S53= [PIDReg]=pid                                           PIDReg-Hold(S0,S52)
	S54= CtrlIMMU=0                                             Premise(F38)
	S55= CtrlPC=0                                               Premise(F39)
	S56= CtrlPCInc=0                                            Premise(F40)
	S57= PC[Out]=addr                                           PC-Hold(S1,S55,S56)
	S58= CtrlIAddrReg=1                                         Premise(F41)
	S59= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S17,S58)
	S60= CtrlIMMUHitReg=1                                       Premise(F42)
	S61= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S19,S60)
	S62= CtrlICache=0                                           Premise(F43)
	S63= CtrlICacheReg=1                                        Premise(F44)
	S64= CtrlICacheHitReg=1                                     Premise(F45)
	S65= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S25,S64)
	S66= CtrlIMem=0                                             Premise(F46)
	S67= IMem[{pid,addr}]={26,rS,rA,UIMM}                       IMem-Hold(S2,S66)
	S68= CtrlIRMux=0                                            Premise(F47)
	S69= CtrlIR=0                                               Premise(F48)
	S70= CtrlGPRegs=0                                           Premise(F49)
	S71= GPRegs[rS]=a                                           GPRegs-Hold(S3,S70)
	S72= CtrlA=0                                                Premise(F50)
	S73= CtrlB=0                                                Premise(F51)
	S74= CtrlALUOut=0                                           Premise(F52)
	S75= CtrlXERSO=0                                            Premise(F53)
	S76= XER[SO]=so                                             XER-SO-Hold(S4,S75)
	S77= CtrlXEROV=0                                            Premise(F54)
	S78= CtrlXERCA=0                                            Premise(F55)
	S79= CtrlDR4bit=0                                           Premise(F56)
	S80= CtrlCRRegs=0                                           Premise(F57)
	S81= CtrlCRRegsCR0=0                                        Premise(F58)
	S82= CtrlCRRegsW4bitRegs=0                                  Premise(F59)
	S83= CtrlCRRegsW1bitRegs=0                                  Premise(F60)

IMMU	S84= PIDReg.Out=pid                                         PIDReg-Out(S53)
	S85= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S53)
	S86= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S53)
	S87= PC.Out=addr                                            PC-Out(S57)
	S88= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S59)
	S89= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S59)
	S90= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S59)
	S91= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S61)
	S92= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S61)
	S93= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]           IMMUHitReg-Out(S61)
	S94= ICacheHitReg.Out=ICacheHit(addr)                       ICacheHitReg-Out(S65)
	S95= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]           ICacheHitReg-Out(S65)
	S96= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]           ICacheHitReg-Out(S65)
	S97= XER.SOOut=so                                           XER-SO-Out(S76)
	S98= PIDReg.Out=>IMMU.PID                                   Premise(F61)
	S99= IMMU.PID=pid                                           Path(S84,S98)
	S100= PC.Out=>IMMU.IEA                                      Premise(F62)
	S101= IMMU.IEA=addr                                         Path(S87,S100)
	S102= IMMU.Addr={pid,addr}                                  IMMU-Search(S99,S101)
	S103= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S99,S101)
	S104= IMMU.Addr=>IAddrReg.In                                Premise(F63)
	S105= IAddrReg.In={pid,addr}                                Path(S102,S104)
	S106= IMMU.Hit=>IMMUHitReg.In                               Premise(F64)
	S107= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S103,S106)
	S108= PC.Out=>ICache.IEA                                    Premise(F65)
	S109= ICache.IEA=addr                                       Path(S87,S108)
	S110= ICache.Hit=ICacheHit(addr)                            ICache-Search(S109)
	S111= ICache.Out=>ICacheReg.In                              Premise(F66)
	S112= ICache.Hit=>ICacheHitReg.In                           Premise(F67)
	S113= ICacheHitReg.In=ICacheHit(addr)                       Path(S110,S112)
	S114= IMMUHitReg.Out=>CU.IMemHit                            Premise(F68)
	S115= CU.IMemHit=IMMUHit(pid,addr)                          Path(S91,S114)
	S116= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F69)
	S117= CU.ICacheHit=ICacheHit(addr)                          Path(S94,S116)
	S118= IAddrReg.Out=>IMem.RAddr                              Premise(F70)
	S119= IMem.RAddr={pid,addr}                                 Path(S88,S118)
	S120= IMem.Out={26,rS,rA,UIMM}                              IMem-Read(S119,S67)
	S121= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S119,S67)
	S122= IMem.Out=>IRMux.MemData                               Premise(F71)
	S123= IRMux.MemData={26,rS,rA,UIMM}                         Path(S120,S122)
	S124= IRMux.Out={26,rS,rA,UIMM}                             IRMux-Select(S123)
	S125= ICacheReg.Out=>IRMux.CacheData                        Premise(F72)
	S126= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F73)
	S127= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S91,S126)
	S128= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F74)
	S129= IRMux.CacheSel=ICacheHit(addr)                        Path(S94,S128)
	S130= IRMux.Out=>IR.In                                      Premise(F75)
	S131= IR.In={26,rS,rA,UIMM}                                 Path(S124,S130)
	S132= IMem.MEM8WordOut=>ICache.WData                        Premise(F76)
	S133= ICache.WData=IMemGet8Word({pid,addr})                 Path(S121,S132)
	S134= PC.Out=>ICache.IEA                                    Premise(F77)
	S135= IR.Out0_5=>CU.Op                                      Premise(F78)
	S136= IR.Out6_10=>GPRegs.RReg1                              Premise(F79)
	S137= IR.Out16_31=>LIMMEXT.In                               Premise(F80)
	S138= GPRegs.Rdata1=>A.In                                   Premise(F81)
	S139= LIMMEXT.Out=>B.In                                     Premise(F82)
	S140= A.Out=>ALU.A                                          Premise(F83)
	S141= B.Out=>ALU.B                                          Premise(F84)
	S142= CU.Func=>ALU.Func                                     Premise(F85)
	S143= ALU.Out=>ALUOut.In                                    Premise(F86)
	S144= ALU.CMP=>DataCmb.A                                    Premise(F87)
	S145= XER.SOOut=>DataCmb.B                                  Premise(F88)
	S146= DataCmb.B=so                                          Path(S97,S145)
	S147= DataCmb.Out=>DR4bit.In                                Premise(F89)
	S148= IR.Out11_15=>GPRegs.WReg                              Premise(F90)
	S149= ALUOut.Out=>GPRegs.WData                              Premise(F91)
	S150= DR4bit.Out=>CRRegs.CR0In                              Premise(F92)
	S151= CtrlPIDReg=0                                          Premise(F93)
	S152= [PIDReg]=pid                                          PIDReg-Hold(S53,S151)
	S153= CtrlIMMU=0                                            Premise(F94)
	S154= CtrlPC=0                                              Premise(F95)
	S155= CtrlPCInc=1                                           Premise(F96)
	S156= PC[Out]=addr+4                                        PC-Inc(S57,S154,S155)
	S157= PC[CIA]=addr                                          PC-Inc(S57,S154,S155)
	S158= CtrlIAddrReg=0                                        Premise(F97)
	S159= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S59,S158)
	S160= CtrlIMMUHitReg=0                                      Premise(F98)
	S161= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S61,S160)
	S162= CtrlICache=1                                          Premise(F99)
	S163= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S109,S133,S162)
	S164= CtrlICacheReg=0                                       Premise(F100)
	S165= CtrlICacheHitReg=0                                    Premise(F101)
	S166= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S65,S165)
	S167= CtrlIMem=0                                            Premise(F102)
	S168= IMem[{pid,addr}]={26,rS,rA,UIMM}                      IMem-Hold(S67,S167)
	S169= CtrlIRMux=0                                           Premise(F103)
	S170= CtrlIR=1                                              Premise(F104)
	S171= [IR]={26,rS,rA,UIMM}                                  IR-Write(S131,S170)
	S172= CtrlGPRegs=0                                          Premise(F105)
	S173= GPRegs[rS]=a                                          GPRegs-Hold(S71,S172)
	S174= CtrlA=0                                               Premise(F106)
	S175= CtrlB=0                                               Premise(F107)
	S176= CtrlALUOut=0                                          Premise(F108)
	S177= CtrlXERSO=0                                           Premise(F109)
	S178= XER[SO]=so                                            XER-SO-Hold(S76,S177)
	S179= CtrlXEROV=0                                           Premise(F110)
	S180= CtrlXERCA=0                                           Premise(F111)
	S181= CtrlDR4bit=0                                          Premise(F112)
	S182= CtrlCRRegs=0                                          Premise(F113)
	S183= CtrlCRRegsCR0=0                                       Premise(F114)
	S184= CtrlCRRegsW4bitRegs=0                                 Premise(F115)
	S185= CtrlCRRegsW1bitRegs=0                                 Premise(F116)

ID	S186= PIDReg.Out=pid                                        PIDReg-Out(S152)
	S187= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S152)
	S188= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S152)
	S189= PC.Out=addr+4                                         PC-Out(S156)
	S190= PC.CIA=addr                                           PC-Out(S157)
	S191= PC.CIA31_28=addr[31:28]                               PC-Out(S157)
	S192= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S159)
	S193= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S159)
	S194= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S159)
	S195= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S161)
	S196= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S161)
	S197= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S161)
	S198= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S166)
	S199= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S166)
	S200= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S166)
	S201= IR.Out0_5=26                                          IR-Out(S171)
	S202= IR.Out6_10=rS                                         IR-Out(S171)
	S203= IR.Out11_15=rA                                        IR-Out(S171)
	S204= IR.Out16_31=UIMM                                      IR-Out(S171)
	S205= XER.SOOut=so                                          XER-SO-Out(S178)
	S206= PIDReg.Out=>IMMU.PID                                  Premise(F117)
	S207= IMMU.PID=pid                                          Path(S186,S206)
	S208= PC.Out=>IMMU.IEA                                      Premise(F118)
	S209= IMMU.IEA=addr+4                                       Path(S189,S208)
	S210= IMMU.Addr={pid,addr+4}                                IMMU-Search(S207,S209)
	S211= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S207,S209)
	S212= IMMU.Addr=>IAddrReg.In                                Premise(F119)
	S213= IAddrReg.In={pid,addr+4}                              Path(S210,S212)
	S214= IMMU.Hit=>IMMUHitReg.In                               Premise(F120)
	S215= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S211,S214)
	S216= PC.Out=>ICache.IEA                                    Premise(F121)
	S217= ICache.IEA=addr+4                                     Path(S189,S216)
	S218= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S217)
	S219= ICache.Out=>ICacheReg.In                              Premise(F122)
	S220= ICache.Hit=>ICacheHitReg.In                           Premise(F123)
	S221= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S218,S220)
	S222= IMMUHitReg.Out=>CU.IMemHit                            Premise(F124)
	S223= CU.IMemHit=IMMUHit(pid,addr)                          Path(S195,S222)
	S224= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F125)
	S225= CU.ICacheHit=ICacheHit(addr)                          Path(S198,S224)
	S226= IAddrReg.Out=>IMem.RAddr                              Premise(F126)
	S227= IMem.RAddr={pid,addr}                                 Path(S192,S226)
	S228= IMem.Out={26,rS,rA,UIMM}                              IMem-Read(S227,S168)
	S229= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S227,S168)
	S230= IMem.Out=>IRMux.MemData                               Premise(F127)
	S231= IRMux.MemData={26,rS,rA,UIMM}                         Path(S228,S230)
	S232= IRMux.Out={26,rS,rA,UIMM}                             IRMux-Select(S231)
	S233= ICacheReg.Out=>IRMux.CacheData                        Premise(F128)
	S234= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F129)
	S235= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S195,S234)
	S236= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F130)
	S237= IRMux.CacheSel=ICacheHit(addr)                        Path(S198,S236)
	S238= IRMux.Out=>IR.In                                      Premise(F131)
	S239= IR.In={26,rS,rA,UIMM}                                 Path(S232,S238)
	S240= IMem.MEM8WordOut=>ICache.WData                        Premise(F132)
	S241= ICache.WData=IMemGet8Word({pid,addr})                 Path(S229,S240)
	S242= PC.Out=>ICache.IEA                                    Premise(F133)
	S243= IR.Out0_5=>CU.Op                                      Premise(F134)
	S244= CU.Op=26                                              Path(S201,S243)
	S245= CU.Func=alu_xor                                       CU(S244)
	S246= IR.Out6_10=>GPRegs.RReg1                              Premise(F135)
	S247= GPRegs.RReg1=rS                                       Path(S202,S246)
	S248= GPRegs.Rdata1=a                                       GPRegs-Read(S247,S173)
	S249= IR.Out16_31=>LIMMEXT.In                               Premise(F136)
	S250= LIMMEXT.In=UIMM                                       Path(S204,S249)
	S251= LIMMEXT.Out={16'b0,UIMM}                              LIMMEXT(S250)
	S252= GPRegs.Rdata1=>A.In                                   Premise(F137)
	S253= A.In=a                                                Path(S248,S252)
	S254= LIMMEXT.Out=>B.In                                     Premise(F138)
	S255= B.In={16'b0,UIMM}                                     Path(S251,S254)
	S256= A.Out=>ALU.A                                          Premise(F139)
	S257= B.Out=>ALU.B                                          Premise(F140)
	S258= CU.Func=>ALU.Func                                     Premise(F141)
	S259= ALU.Func=alu_xor                                      Path(S245,S258)
	S260= ALU.Out=>ALUOut.In                                    Premise(F142)
	S261= ALU.CMP=>DataCmb.A                                    Premise(F143)
	S262= XER.SOOut=>DataCmb.B                                  Premise(F144)
	S263= DataCmb.B=so                                          Path(S205,S262)
	S264= DataCmb.Out=>DR4bit.In                                Premise(F145)
	S265= IR.Out11_15=>GPRegs.WReg                              Premise(F146)
	S266= GPRegs.WReg=rA                                        Path(S203,S265)
	S267= ALUOut.Out=>GPRegs.WData                              Premise(F147)
	S268= DR4bit.Out=>CRRegs.CR0In                              Premise(F148)
	S269= CtrlPIDReg=0                                          Premise(F149)
	S270= [PIDReg]=pid                                          PIDReg-Hold(S152,S269)
	S271= CtrlIMMU=0                                            Premise(F150)
	S272= CtrlPC=0                                              Premise(F151)
	S273= CtrlPCInc=0                                           Premise(F152)
	S274= PC[CIA]=addr                                          PC-Hold(S157,S273)
	S275= PC[Out]=addr+4                                        PC-Hold(S156,S272,S273)
	S276= CtrlIAddrReg=0                                        Premise(F153)
	S277= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S159,S276)
	S278= CtrlIMMUHitReg=0                                      Premise(F154)
	S279= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S161,S278)
	S280= CtrlICache=0                                          Premise(F155)
	S281= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S163,S280)
	S282= CtrlICacheReg=0                                       Premise(F156)
	S283= CtrlICacheHitReg=0                                    Premise(F157)
	S284= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S166,S283)
	S285= CtrlIMem=0                                            Premise(F158)
	S286= IMem[{pid,addr}]={26,rS,rA,UIMM}                      IMem-Hold(S168,S285)
	S287= CtrlIRMux=0                                           Premise(F159)
	S288= CtrlIR=0                                              Premise(F160)
	S289= [IR]={26,rS,rA,UIMM}                                  IR-Hold(S171,S288)
	S290= CtrlGPRegs=0                                          Premise(F161)
	S291= GPRegs[rS]=a                                          GPRegs-Hold(S173,S290)
	S292= CtrlA=1                                               Premise(F162)
	S293= [A]=a                                                 A-Write(S253,S292)
	S294= CtrlB=1                                               Premise(F163)
	S295= [B]={16'b0,UIMM}                                      B-Write(S255,S294)
	S296= CtrlALUOut=0                                          Premise(F164)
	S297= CtrlXERSO=0                                           Premise(F165)
	S298= XER[SO]=so                                            XER-SO-Hold(S178,S297)
	S299= CtrlXEROV=0                                           Premise(F166)
	S300= CtrlXERCA=0                                           Premise(F167)
	S301= CtrlDR4bit=0                                          Premise(F168)
	S302= CtrlCRRegs=0                                          Premise(F169)
	S303= CtrlCRRegsCR0=0                                       Premise(F170)
	S304= CtrlCRRegsW4bitRegs=0                                 Premise(F171)
	S305= CtrlCRRegsW1bitRegs=0                                 Premise(F172)

EX	S306= PIDReg.Out=pid                                        PIDReg-Out(S270)
	S307= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S270)
	S308= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S270)
	S309= PC.CIA=addr                                           PC-Out(S274)
	S310= PC.CIA31_28=addr[31:28]                               PC-Out(S274)
	S311= PC.Out=addr+4                                         PC-Out(S275)
	S312= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S277)
	S313= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S277)
	S314= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S277)
	S315= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S279)
	S316= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S279)
	S317= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S279)
	S318= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S284)
	S319= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S284)
	S320= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S284)
	S321= IR.Out0_5=26                                          IR-Out(S289)
	S322= IR.Out6_10=rS                                         IR-Out(S289)
	S323= IR.Out11_15=rA                                        IR-Out(S289)
	S324= IR.Out16_31=UIMM                                      IR-Out(S289)
	S325= A.Out=a                                               A-Out(S293)
	S326= A.Out26_31=a[26:31]                                   A-Out(S293)
	S327= A.Out30_31=a[30:31]                                   A-Out(S293)
	S328= B.Out={16'b0,UIMM}                                    B-Out(S295)
	S329= B.Out26_31={16'b0,UIMM}[26:31]                        B-Out(S295)
	S330= B.Out30_31={16'b0,UIMM}[30:31]                        B-Out(S295)
	S331= XER.SOOut=so                                          XER-SO-Out(S298)
	S332= PIDReg.Out=>IMMU.PID                                  Premise(F173)
	S333= IMMU.PID=pid                                          Path(S306,S332)
	S334= PC.Out=>IMMU.IEA                                      Premise(F174)
	S335= IMMU.IEA=addr+4                                       Path(S311,S334)
	S336= IMMU.Addr={pid,addr+4}                                IMMU-Search(S333,S335)
	S337= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S333,S335)
	S338= IMMU.Addr=>IAddrReg.In                                Premise(F175)
	S339= IAddrReg.In={pid,addr+4}                              Path(S336,S338)
	S340= IMMU.Hit=>IMMUHitReg.In                               Premise(F176)
	S341= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S337,S340)
	S342= PC.Out=>ICache.IEA                                    Premise(F177)
	S343= ICache.IEA=addr+4                                     Path(S311,S342)
	S344= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S343)
	S345= ICache.Out=>ICacheReg.In                              Premise(F178)
	S346= ICache.Hit=>ICacheHitReg.In                           Premise(F179)
	S347= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S344,S346)
	S348= IMMUHitReg.Out=>CU.IMemHit                            Premise(F180)
	S349= CU.IMemHit=IMMUHit(pid,addr)                          Path(S315,S348)
	S350= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F181)
	S351= CU.ICacheHit=ICacheHit(addr)                          Path(S318,S350)
	S352= IAddrReg.Out=>IMem.RAddr                              Premise(F182)
	S353= IMem.RAddr={pid,addr}                                 Path(S312,S352)
	S354= IMem.Out={26,rS,rA,UIMM}                              IMem-Read(S353,S286)
	S355= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S353,S286)
	S356= IMem.Out=>IRMux.MemData                               Premise(F183)
	S357= IRMux.MemData={26,rS,rA,UIMM}                         Path(S354,S356)
	S358= IRMux.Out={26,rS,rA,UIMM}                             IRMux-Select(S357)
	S359= ICacheReg.Out=>IRMux.CacheData                        Premise(F184)
	S360= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F185)
	S361= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S315,S360)
	S362= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F186)
	S363= IRMux.CacheSel=ICacheHit(addr)                        Path(S318,S362)
	S364= IRMux.Out=>IR.In                                      Premise(F187)
	S365= IR.In={26,rS,rA,UIMM}                                 Path(S358,S364)
	S366= IMem.MEM8WordOut=>ICache.WData                        Premise(F188)
	S367= ICache.WData=IMemGet8Word({pid,addr})                 Path(S355,S366)
	S368= PC.Out=>ICache.IEA                                    Premise(F189)
	S369= IR.Out0_5=>CU.Op                                      Premise(F190)
	S370= CU.Op=26                                              Path(S321,S369)
	S371= CU.Func=alu_xor                                       CU(S370)
	S372= IR.Out6_10=>GPRegs.RReg1                              Premise(F191)
	S373= GPRegs.RReg1=rS                                       Path(S322,S372)
	S374= GPRegs.Rdata1=a                                       GPRegs-Read(S373,S291)
	S375= IR.Out16_31=>LIMMEXT.In                               Premise(F192)
	S376= LIMMEXT.In=UIMM                                       Path(S324,S375)
	S377= LIMMEXT.Out={16'b0,UIMM}                              LIMMEXT(S376)
	S378= GPRegs.Rdata1=>A.In                                   Premise(F193)
	S379= A.In=a                                                Path(S374,S378)
	S380= LIMMEXT.Out=>B.In                                     Premise(F194)
	S381= B.In={16'b0,UIMM}                                     Path(S377,S380)
	S382= A.Out=>ALU.A                                          Premise(F195)
	S383= ALU.A=a                                               Path(S325,S382)
	S384= B.Out=>ALU.B                                          Premise(F196)
	S385= ALU.B={16'b0,UIMM}                                    Path(S328,S384)
	S386= CU.Func=>ALU.Func                                     Premise(F197)
	S387= ALU.Func=alu_xor                                      Path(S371,S386)
	S388= ALU.Out=a^{16'b0,UIMM}                                ALU(S383,S385)
	S389= ALU.CMP=Compare0(a^{16'b0,UIMM})                      ALU(S383,S385)
	S390= ALU.OV=OverFlow(a^{16'b0,UIMM})                       ALU(S383,S385)
	S391= ALU.CA=Carry(a^{16'b0,UIMM})                          ALU(S383,S385)
	S392= ALU.Out=>ALUOut.In                                    Premise(F198)
	S393= ALUOut.In=a^{16'b0,UIMM}                              Path(S388,S392)
	S394= ALU.CMP=>DataCmb.A                                    Premise(F199)
	S395= DataCmb.A=Compare0(a^{16'b0,UIMM})                    Path(S389,S394)
	S396= XER.SOOut=>DataCmb.B                                  Premise(F200)
	S397= DataCmb.B=so                                          Path(S331,S396)
	S398= DataCmb.Out={Compare0(a^{16'b0,UIMM}),so}             DataCmb(S395,S397)
	S399= DataCmb.Out=>DR4bit.In                                Premise(F201)
	S400= DR4bit.In={Compare0(a^{16'b0,UIMM}),so}               Path(S398,S399)
	S401= IR.Out11_15=>GPRegs.WReg                              Premise(F202)
	S402= GPRegs.WReg=rA                                        Path(S323,S401)
	S403= ALUOut.Out=>GPRegs.WData                              Premise(F203)
	S404= DR4bit.Out=>CRRegs.CR0In                              Premise(F204)
	S405= CtrlPIDReg=0                                          Premise(F205)
	S406= [PIDReg]=pid                                          PIDReg-Hold(S270,S405)
	S407= CtrlIMMU=0                                            Premise(F206)
	S408= CtrlPC=0                                              Premise(F207)
	S409= CtrlPCInc=0                                           Premise(F208)
	S410= PC[CIA]=addr                                          PC-Hold(S274,S409)
	S411= PC[Out]=addr+4                                        PC-Hold(S275,S408,S409)
	S412= CtrlIAddrReg=0                                        Premise(F209)
	S413= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S277,S412)
	S414= CtrlIMMUHitReg=0                                      Premise(F210)
	S415= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S279,S414)
	S416= CtrlICache=0                                          Premise(F211)
	S417= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S281,S416)
	S418= CtrlICacheReg=0                                       Premise(F212)
	S419= CtrlICacheHitReg=0                                    Premise(F213)
	S420= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S284,S419)
	S421= CtrlIMem=0                                            Premise(F214)
	S422= IMem[{pid,addr}]={26,rS,rA,UIMM}                      IMem-Hold(S286,S421)
	S423= CtrlIRMux=0                                           Premise(F215)
	S424= CtrlIR=0                                              Premise(F216)
	S425= [IR]={26,rS,rA,UIMM}                                  IR-Hold(S289,S424)
	S426= CtrlGPRegs=0                                          Premise(F217)
	S427= GPRegs[rS]=a                                          GPRegs-Hold(S291,S426)
	S428= CtrlA=0                                               Premise(F218)
	S429= [A]=a                                                 A-Hold(S293,S428)
	S430= CtrlB=0                                               Premise(F219)
	S431= [B]={16'b0,UIMM}                                      B-Hold(S295,S430)
	S432= CtrlALUOut=1                                          Premise(F220)
	S433= [ALUOut]=a^{16'b0,UIMM}                               ALUOut-Write(S393,S432)
	S434= CtrlXERSO=0                                           Premise(F221)
	S435= XER[SO]=so                                            XER-SO-Hold(S298,S434)
	S436= CtrlXEROV=0                                           Premise(F222)
	S437= CtrlXERCA=0                                           Premise(F223)
	S438= CtrlDR4bit=1                                          Premise(F224)
	S439= [DR4bit]={Compare0(a^{16'b0,UIMM}),so}                DR4bit-Write(S400,S438)
	S440= CtrlCRRegs=0                                          Premise(F225)
	S441= CtrlCRRegsCR0=0                                       Premise(F226)
	S442= CtrlCRRegsW4bitRegs=0                                 Premise(F227)
	S443= CtrlCRRegsW1bitRegs=0                                 Premise(F228)

MEM	S444= PIDReg.Out=pid                                        PIDReg-Out(S406)
	S445= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S406)
	S446= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S406)
	S447= PC.CIA=addr                                           PC-Out(S410)
	S448= PC.CIA31_28=addr[31:28]                               PC-Out(S410)
	S449= PC.Out=addr+4                                         PC-Out(S411)
	S450= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S413)
	S451= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S413)
	S452= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S413)
	S453= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S415)
	S454= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S415)
	S455= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S415)
	S456= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S420)
	S457= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S420)
	S458= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S420)
	S459= IR.Out0_5=26                                          IR-Out(S425)
	S460= IR.Out6_10=rS                                         IR-Out(S425)
	S461= IR.Out11_15=rA                                        IR-Out(S425)
	S462= IR.Out16_31=UIMM                                      IR-Out(S425)
	S463= A.Out=a                                               A-Out(S429)
	S464= A.Out26_31=a[26:31]                                   A-Out(S429)
	S465= A.Out30_31=a[30:31]                                   A-Out(S429)
	S466= B.Out={16'b0,UIMM}                                    B-Out(S431)
	S467= B.Out26_31={16'b0,UIMM}[26:31]                        B-Out(S431)
	S468= B.Out30_31={16'b0,UIMM}[30:31]                        B-Out(S431)
	S469= ALUOut.Out=a^{16'b0,UIMM}                             ALUOut-Out(S433)
	S470= ALUOut.Out26_31=a^{16'b0,UIMM}[26:31]                 ALUOut-Out(S433)
	S471= ALUOut.Out30_31=a^{16'b0,UIMM}[30:31]                 ALUOut-Out(S433)
	S472= XER.SOOut=so                                          XER-SO-Out(S435)
	S473= DR4bit.Out={Compare0(a^{16'b0,UIMM}),so}              DR4bit-Out(S439)
	S474= DR4bit.Out26_31={Compare0(a^{16'b0,UIMM}),so}[26:31]  DR4bit-Out(S439)
	S475= DR4bit.Out30_31={Compare0(a^{16'b0,UIMM}),so}[30:31]  DR4bit-Out(S439)
	S476= PIDReg.Out=>IMMU.PID                                  Premise(F229)
	S477= IMMU.PID=pid                                          Path(S444,S476)
	S478= PC.Out=>IMMU.IEA                                      Premise(F230)
	S479= IMMU.IEA=addr+4                                       Path(S449,S478)
	S480= IMMU.Addr={pid,addr+4}                                IMMU-Search(S477,S479)
	S481= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S477,S479)
	S482= IMMU.Addr=>IAddrReg.In                                Premise(F231)
	S483= IAddrReg.In={pid,addr+4}                              Path(S480,S482)
	S484= IMMU.Hit=>IMMUHitReg.In                               Premise(F232)
	S485= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S481,S484)
	S486= PC.Out=>ICache.IEA                                    Premise(F233)
	S487= ICache.IEA=addr+4                                     Path(S449,S486)
	S488= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S487)
	S489= ICache.Out=>ICacheReg.In                              Premise(F234)
	S490= ICache.Hit=>ICacheHitReg.In                           Premise(F235)
	S491= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S488,S490)
	S492= IMMUHitReg.Out=>CU.IMemHit                            Premise(F236)
	S493= CU.IMemHit=IMMUHit(pid,addr)                          Path(S453,S492)
	S494= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F237)
	S495= CU.ICacheHit=ICacheHit(addr)                          Path(S456,S494)
	S496= IAddrReg.Out=>IMem.RAddr                              Premise(F238)
	S497= IMem.RAddr={pid,addr}                                 Path(S450,S496)
	S498= IMem.Out={26,rS,rA,UIMM}                              IMem-Read(S497,S422)
	S499= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S497,S422)
	S500= IMem.Out=>IRMux.MemData                               Premise(F239)
	S501= IRMux.MemData={26,rS,rA,UIMM}                         Path(S498,S500)
	S502= IRMux.Out={26,rS,rA,UIMM}                             IRMux-Select(S501)
	S503= ICacheReg.Out=>IRMux.CacheData                        Premise(F240)
	S504= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F241)
	S505= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S453,S504)
	S506= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F242)
	S507= IRMux.CacheSel=ICacheHit(addr)                        Path(S456,S506)
	S508= IRMux.Out=>IR.In                                      Premise(F243)
	S509= IR.In={26,rS,rA,UIMM}                                 Path(S502,S508)
	S510= IMem.MEM8WordOut=>ICache.WData                        Premise(F244)
	S511= ICache.WData=IMemGet8Word({pid,addr})                 Path(S499,S510)
	S512= PC.Out=>ICache.IEA                                    Premise(F245)
	S513= IR.Out0_5=>CU.Op                                      Premise(F246)
	S514= CU.Op=26                                              Path(S459,S513)
	S515= CU.Func=alu_xor                                       CU(S514)
	S516= IR.Out6_10=>GPRegs.RReg1                              Premise(F247)
	S517= GPRegs.RReg1=rS                                       Path(S460,S516)
	S518= GPRegs.Rdata1=a                                       GPRegs-Read(S517,S427)
	S519= IR.Out16_31=>LIMMEXT.In                               Premise(F248)
	S520= LIMMEXT.In=UIMM                                       Path(S462,S519)
	S521= LIMMEXT.Out={16'b0,UIMM}                              LIMMEXT(S520)
	S522= GPRegs.Rdata1=>A.In                                   Premise(F249)
	S523= A.In=a                                                Path(S518,S522)
	S524= LIMMEXT.Out=>B.In                                     Premise(F250)
	S525= B.In={16'b0,UIMM}                                     Path(S521,S524)
	S526= A.Out=>ALU.A                                          Premise(F251)
	S527= ALU.A=a                                               Path(S463,S526)
	S528= B.Out=>ALU.B                                          Premise(F252)
	S529= ALU.B={16'b0,UIMM}                                    Path(S466,S528)
	S530= CU.Func=>ALU.Func                                     Premise(F253)
	S531= ALU.Func=alu_xor                                      Path(S515,S530)
	S532= ALU.Out=a^{16'b0,UIMM}                                ALU(S527,S529)
	S533= ALU.CMP=Compare0(a^{16'b0,UIMM})                      ALU(S527,S529)
	S534= ALU.OV=OverFlow(a^{16'b0,UIMM})                       ALU(S527,S529)
	S535= ALU.CA=Carry(a^{16'b0,UIMM})                          ALU(S527,S529)
	S536= ALU.Out=>ALUOut.In                                    Premise(F254)
	S537= ALUOut.In=a^{16'b0,UIMM}                              Path(S532,S536)
	S538= ALU.CMP=>DataCmb.A                                    Premise(F255)
	S539= DataCmb.A=Compare0(a^{16'b0,UIMM})                    Path(S533,S538)
	S540= XER.SOOut=>DataCmb.B                                  Premise(F256)
	S541= DataCmb.B=so                                          Path(S472,S540)
	S542= DataCmb.Out={Compare0(a^{16'b0,UIMM}),so}             DataCmb(S539,S541)
	S543= DataCmb.Out=>DR4bit.In                                Premise(F257)
	S544= DR4bit.In={Compare0(a^{16'b0,UIMM}),so}               Path(S542,S543)
	S545= IR.Out11_15=>GPRegs.WReg                              Premise(F258)
	S546= GPRegs.WReg=rA                                        Path(S461,S545)
	S547= ALUOut.Out=>GPRegs.WData                              Premise(F259)
	S548= GPRegs.WData=a^{16'b0,UIMM}                           Path(S469,S547)
	S549= DR4bit.Out=>CRRegs.CR0In                              Premise(F260)
	S550= CRRegs.CR0In={Compare0(a^{16'b0,UIMM}),so}            Path(S473,S549)
	S551= CtrlPIDReg=0                                          Premise(F261)
	S552= [PIDReg]=pid                                          PIDReg-Hold(S406,S551)
	S553= CtrlIMMU=0                                            Premise(F262)
	S554= CtrlPC=0                                              Premise(F263)
	S555= CtrlPCInc=0                                           Premise(F264)
	S556= PC[CIA]=addr                                          PC-Hold(S410,S555)
	S557= PC[Out]=addr+4                                        PC-Hold(S411,S554,S555)
	S558= CtrlIAddrReg=0                                        Premise(F265)
	S559= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S413,S558)
	S560= CtrlIMMUHitReg=0                                      Premise(F266)
	S561= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S415,S560)
	S562= CtrlICache=0                                          Premise(F267)
	S563= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S417,S562)
	S564= CtrlICacheReg=0                                       Premise(F268)
	S565= CtrlICacheHitReg=0                                    Premise(F269)
	S566= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S420,S565)
	S567= CtrlIMem=0                                            Premise(F270)
	S568= IMem[{pid,addr}]={26,rS,rA,UIMM}                      IMem-Hold(S422,S567)
	S569= CtrlIRMux=0                                           Premise(F271)
	S570= CtrlIR=0                                              Premise(F272)
	S571= [IR]={26,rS,rA,UIMM}                                  IR-Hold(S425,S570)
	S572= CtrlGPRegs=0                                          Premise(F273)
	S573= GPRegs[rS]=a                                          GPRegs-Hold(S427,S572)
	S574= CtrlA=0                                               Premise(F274)
	S575= [A]=a                                                 A-Hold(S429,S574)
	S576= CtrlB=0                                               Premise(F275)
	S577= [B]={16'b0,UIMM}                                      B-Hold(S431,S576)
	S578= CtrlALUOut=0                                          Premise(F276)
	S579= [ALUOut]=a^{16'b0,UIMM}                               ALUOut-Hold(S433,S578)
	S580= CtrlXERSO=0                                           Premise(F277)
	S581= XER[SO]=so                                            XER-SO-Hold(S435,S580)
	S582= CtrlXEROV=0                                           Premise(F278)
	S583= CtrlXERCA=0                                           Premise(F279)
	S584= CtrlDR4bit=0                                          Premise(F280)
	S585= [DR4bit]={Compare0(a^{16'b0,UIMM}),so}                DR4bit-Hold(S439,S584)
	S586= CtrlCRRegs=0                                          Premise(F281)
	S587= CtrlCRRegsCR0=0                                       Premise(F282)
	S588= CtrlCRRegsW4bitRegs=0                                 Premise(F283)
	S589= CtrlCRRegsW1bitRegs=0                                 Premise(F284)

DMMU1	S590= PIDReg.Out=pid                                        PIDReg-Out(S552)
	S591= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S552)
	S592= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S552)
	S593= PC.CIA=addr                                           PC-Out(S556)
	S594= PC.CIA31_28=addr[31:28]                               PC-Out(S556)
	S595= PC.Out=addr+4                                         PC-Out(S557)
	S596= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S559)
	S597= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S559)
	S598= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S559)
	S599= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S561)
	S600= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S561)
	S601= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S561)
	S602= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S566)
	S603= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S566)
	S604= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S566)
	S605= IR.Out0_5=26                                          IR-Out(S571)
	S606= IR.Out6_10=rS                                         IR-Out(S571)
	S607= IR.Out11_15=rA                                        IR-Out(S571)
	S608= IR.Out16_31=UIMM                                      IR-Out(S571)
	S609= A.Out=a                                               A-Out(S575)
	S610= A.Out26_31=a[26:31]                                   A-Out(S575)
	S611= A.Out30_31=a[30:31]                                   A-Out(S575)
	S612= B.Out={16'b0,UIMM}                                    B-Out(S577)
	S613= B.Out26_31={16'b0,UIMM}[26:31]                        B-Out(S577)
	S614= B.Out30_31={16'b0,UIMM}[30:31]                        B-Out(S577)
	S615= ALUOut.Out=a^{16'b0,UIMM}                             ALUOut-Out(S579)
	S616= ALUOut.Out26_31=a^{16'b0,UIMM}[26:31]                 ALUOut-Out(S579)
	S617= ALUOut.Out30_31=a^{16'b0,UIMM}[30:31]                 ALUOut-Out(S579)
	S618= XER.SOOut=so                                          XER-SO-Out(S581)
	S619= DR4bit.Out={Compare0(a^{16'b0,UIMM}),so}              DR4bit-Out(S585)
	S620= DR4bit.Out26_31={Compare0(a^{16'b0,UIMM}),so}[26:31]  DR4bit-Out(S585)
	S621= DR4bit.Out30_31={Compare0(a^{16'b0,UIMM}),so}[30:31]  DR4bit-Out(S585)
	S622= PIDReg.Out=>IMMU.PID                                  Premise(F285)
	S623= IMMU.PID=pid                                          Path(S590,S622)
	S624= PC.Out=>IMMU.IEA                                      Premise(F286)
	S625= IMMU.IEA=addr+4                                       Path(S595,S624)
	S626= IMMU.Addr={pid,addr+4}                                IMMU-Search(S623,S625)
	S627= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S623,S625)
	S628= IMMU.Addr=>IAddrReg.In                                Premise(F287)
	S629= IAddrReg.In={pid,addr+4}                              Path(S626,S628)
	S630= IMMU.Hit=>IMMUHitReg.In                               Premise(F288)
	S631= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S627,S630)
	S632= PC.Out=>ICache.IEA                                    Premise(F289)
	S633= ICache.IEA=addr+4                                     Path(S595,S632)
	S634= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S633)
	S635= ICache.Out=>ICacheReg.In                              Premise(F290)
	S636= ICache.Hit=>ICacheHitReg.In                           Premise(F291)
	S637= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S634,S636)
	S638= IMMUHitReg.Out=>CU.IMemHit                            Premise(F292)
	S639= CU.IMemHit=IMMUHit(pid,addr)                          Path(S599,S638)
	S640= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F293)
	S641= CU.ICacheHit=ICacheHit(addr)                          Path(S602,S640)
	S642= IAddrReg.Out=>IMem.RAddr                              Premise(F294)
	S643= IMem.RAddr={pid,addr}                                 Path(S596,S642)
	S644= IMem.Out={26,rS,rA,UIMM}                              IMem-Read(S643,S568)
	S645= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S643,S568)
	S646= IMem.Out=>IRMux.MemData                               Premise(F295)
	S647= IRMux.MemData={26,rS,rA,UIMM}                         Path(S644,S646)
	S648= IRMux.Out={26,rS,rA,UIMM}                             IRMux-Select(S647)
	S649= ICacheReg.Out=>IRMux.CacheData                        Premise(F296)
	S650= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F297)
	S651= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S599,S650)
	S652= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F298)
	S653= IRMux.CacheSel=ICacheHit(addr)                        Path(S602,S652)
	S654= IRMux.Out=>IR.In                                      Premise(F299)
	S655= IR.In={26,rS,rA,UIMM}                                 Path(S648,S654)
	S656= IMem.MEM8WordOut=>ICache.WData                        Premise(F300)
	S657= ICache.WData=IMemGet8Word({pid,addr})                 Path(S645,S656)
	S658= PC.Out=>ICache.IEA                                    Premise(F301)
	S659= IR.Out0_5=>CU.Op                                      Premise(F302)
	S660= CU.Op=26                                              Path(S605,S659)
	S661= CU.Func=alu_xor                                       CU(S660)
	S662= IR.Out6_10=>GPRegs.RReg1                              Premise(F303)
	S663= GPRegs.RReg1=rS                                       Path(S606,S662)
	S664= GPRegs.Rdata1=a                                       GPRegs-Read(S663,S573)
	S665= IR.Out16_31=>LIMMEXT.In                               Premise(F304)
	S666= LIMMEXT.In=UIMM                                       Path(S608,S665)
	S667= LIMMEXT.Out={16'b0,UIMM}                              LIMMEXT(S666)
	S668= GPRegs.Rdata1=>A.In                                   Premise(F305)
	S669= A.In=a                                                Path(S664,S668)
	S670= LIMMEXT.Out=>B.In                                     Premise(F306)
	S671= B.In={16'b0,UIMM}                                     Path(S667,S670)
	S672= A.Out=>ALU.A                                          Premise(F307)
	S673= ALU.A=a                                               Path(S609,S672)
	S674= B.Out=>ALU.B                                          Premise(F308)
	S675= ALU.B={16'b0,UIMM}                                    Path(S612,S674)
	S676= CU.Func=>ALU.Func                                     Premise(F309)
	S677= ALU.Func=alu_xor                                      Path(S661,S676)
	S678= ALU.Out=a^{16'b0,UIMM}                                ALU(S673,S675)
	S679= ALU.CMP=Compare0(a^{16'b0,UIMM})                      ALU(S673,S675)
	S680= ALU.OV=OverFlow(a^{16'b0,UIMM})                       ALU(S673,S675)
	S681= ALU.CA=Carry(a^{16'b0,UIMM})                          ALU(S673,S675)
	S682= ALU.Out=>ALUOut.In                                    Premise(F310)
	S683= ALUOut.In=a^{16'b0,UIMM}                              Path(S678,S682)
	S684= ALU.CMP=>DataCmb.A                                    Premise(F311)
	S685= DataCmb.A=Compare0(a^{16'b0,UIMM})                    Path(S679,S684)
	S686= XER.SOOut=>DataCmb.B                                  Premise(F312)
	S687= DataCmb.B=so                                          Path(S618,S686)
	S688= DataCmb.Out={Compare0(a^{16'b0,UIMM}),so}             DataCmb(S685,S687)
	S689= DataCmb.Out=>DR4bit.In                                Premise(F313)
	S690= DR4bit.In={Compare0(a^{16'b0,UIMM}),so}               Path(S688,S689)
	S691= IR.Out11_15=>GPRegs.WReg                              Premise(F314)
	S692= GPRegs.WReg=rA                                        Path(S607,S691)
	S693= ALUOut.Out=>GPRegs.WData                              Premise(F315)
	S694= GPRegs.WData=a^{16'b0,UIMM}                           Path(S615,S693)
	S695= DR4bit.Out=>CRRegs.CR0In                              Premise(F316)
	S696= CRRegs.CR0In={Compare0(a^{16'b0,UIMM}),so}            Path(S619,S695)
	S697= CtrlPIDReg=0                                          Premise(F317)
	S698= [PIDReg]=pid                                          PIDReg-Hold(S552,S697)
	S699= CtrlIMMU=0                                            Premise(F318)
	S700= CtrlPC=0                                              Premise(F319)
	S701= CtrlPCInc=0                                           Premise(F320)
	S702= PC[CIA]=addr                                          PC-Hold(S556,S701)
	S703= PC[Out]=addr+4                                        PC-Hold(S557,S700,S701)
	S704= CtrlIAddrReg=0                                        Premise(F321)
	S705= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S559,S704)
	S706= CtrlIMMUHitReg=0                                      Premise(F322)
	S707= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S561,S706)
	S708= CtrlICache=0                                          Premise(F323)
	S709= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S563,S708)
	S710= CtrlICacheReg=0                                       Premise(F324)
	S711= CtrlICacheHitReg=0                                    Premise(F325)
	S712= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S566,S711)
	S713= CtrlIMem=0                                            Premise(F326)
	S714= IMem[{pid,addr}]={26,rS,rA,UIMM}                      IMem-Hold(S568,S713)
	S715= CtrlIRMux=0                                           Premise(F327)
	S716= CtrlIR=0                                              Premise(F328)
	S717= [IR]={26,rS,rA,UIMM}                                  IR-Hold(S571,S716)
	S718= CtrlGPRegs=0                                          Premise(F329)
	S719= GPRegs[rS]=a                                          GPRegs-Hold(S573,S718)
	S720= CtrlA=0                                               Premise(F330)
	S721= [A]=a                                                 A-Hold(S575,S720)
	S722= CtrlB=0                                               Premise(F331)
	S723= [B]={16'b0,UIMM}                                      B-Hold(S577,S722)
	S724= CtrlALUOut=0                                          Premise(F332)
	S725= [ALUOut]=a^{16'b0,UIMM}                               ALUOut-Hold(S579,S724)
	S726= CtrlXERSO=0                                           Premise(F333)
	S727= XER[SO]=so                                            XER-SO-Hold(S581,S726)
	S728= CtrlXEROV=0                                           Premise(F334)
	S729= CtrlXERCA=0                                           Premise(F335)
	S730= CtrlDR4bit=0                                          Premise(F336)
	S731= [DR4bit]={Compare0(a^{16'b0,UIMM}),so}                DR4bit-Hold(S585,S730)
	S732= CtrlCRRegs=0                                          Premise(F337)
	S733= CtrlCRRegsCR0=0                                       Premise(F338)
	S734= CtrlCRRegsW4bitRegs=0                                 Premise(F339)
	S735= CtrlCRRegsW1bitRegs=0                                 Premise(F340)

DMMU2	S736= PIDReg.Out=pid                                        PIDReg-Out(S698)
	S737= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S698)
	S738= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S698)
	S739= PC.CIA=addr                                           PC-Out(S702)
	S740= PC.CIA31_28=addr[31:28]                               PC-Out(S702)
	S741= PC.Out=addr+4                                         PC-Out(S703)
	S742= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S705)
	S743= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S705)
	S744= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S705)
	S745= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S707)
	S746= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S707)
	S747= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S707)
	S748= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S712)
	S749= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S712)
	S750= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S712)
	S751= IR.Out0_5=26                                          IR-Out(S717)
	S752= IR.Out6_10=rS                                         IR-Out(S717)
	S753= IR.Out11_15=rA                                        IR-Out(S717)
	S754= IR.Out16_31=UIMM                                      IR-Out(S717)
	S755= A.Out=a                                               A-Out(S721)
	S756= A.Out26_31=a[26:31]                                   A-Out(S721)
	S757= A.Out30_31=a[30:31]                                   A-Out(S721)
	S758= B.Out={16'b0,UIMM}                                    B-Out(S723)
	S759= B.Out26_31={16'b0,UIMM}[26:31]                        B-Out(S723)
	S760= B.Out30_31={16'b0,UIMM}[30:31]                        B-Out(S723)
	S761= ALUOut.Out=a^{16'b0,UIMM}                             ALUOut-Out(S725)
	S762= ALUOut.Out26_31=a^{16'b0,UIMM}[26:31]                 ALUOut-Out(S725)
	S763= ALUOut.Out30_31=a^{16'b0,UIMM}[30:31]                 ALUOut-Out(S725)
	S764= XER.SOOut=so                                          XER-SO-Out(S727)
	S765= DR4bit.Out={Compare0(a^{16'b0,UIMM}),so}              DR4bit-Out(S731)
	S766= DR4bit.Out26_31={Compare0(a^{16'b0,UIMM}),so}[26:31]  DR4bit-Out(S731)
	S767= DR4bit.Out30_31={Compare0(a^{16'b0,UIMM}),so}[30:31]  DR4bit-Out(S731)
	S768= PIDReg.Out=>IMMU.PID                                  Premise(F341)
	S769= IMMU.PID=pid                                          Path(S736,S768)
	S770= PC.Out=>IMMU.IEA                                      Premise(F342)
	S771= IMMU.IEA=addr+4                                       Path(S741,S770)
	S772= IMMU.Addr={pid,addr+4}                                IMMU-Search(S769,S771)
	S773= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S769,S771)
	S774= IMMU.Addr=>IAddrReg.In                                Premise(F343)
	S775= IAddrReg.In={pid,addr+4}                              Path(S772,S774)
	S776= IMMU.Hit=>IMMUHitReg.In                               Premise(F344)
	S777= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S773,S776)
	S778= PC.Out=>ICache.IEA                                    Premise(F345)
	S779= ICache.IEA=addr+4                                     Path(S741,S778)
	S780= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S779)
	S781= ICache.Out=>ICacheReg.In                              Premise(F346)
	S782= ICache.Hit=>ICacheHitReg.In                           Premise(F347)
	S783= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S780,S782)
	S784= IMMUHitReg.Out=>CU.IMemHit                            Premise(F348)
	S785= CU.IMemHit=IMMUHit(pid,addr)                          Path(S745,S784)
	S786= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F349)
	S787= CU.ICacheHit=ICacheHit(addr)                          Path(S748,S786)
	S788= IAddrReg.Out=>IMem.RAddr                              Premise(F350)
	S789= IMem.RAddr={pid,addr}                                 Path(S742,S788)
	S790= IMem.Out={26,rS,rA,UIMM}                              IMem-Read(S789,S714)
	S791= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S789,S714)
	S792= IMem.Out=>IRMux.MemData                               Premise(F351)
	S793= IRMux.MemData={26,rS,rA,UIMM}                         Path(S790,S792)
	S794= IRMux.Out={26,rS,rA,UIMM}                             IRMux-Select(S793)
	S795= ICacheReg.Out=>IRMux.CacheData                        Premise(F352)
	S796= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F353)
	S797= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S745,S796)
	S798= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F354)
	S799= IRMux.CacheSel=ICacheHit(addr)                        Path(S748,S798)
	S800= IRMux.Out=>IR.In                                      Premise(F355)
	S801= IR.In={26,rS,rA,UIMM}                                 Path(S794,S800)
	S802= IMem.MEM8WordOut=>ICache.WData                        Premise(F356)
	S803= ICache.WData=IMemGet8Word({pid,addr})                 Path(S791,S802)
	S804= PC.Out=>ICache.IEA                                    Premise(F357)
	S805= IR.Out0_5=>CU.Op                                      Premise(F358)
	S806= CU.Op=26                                              Path(S751,S805)
	S807= CU.Func=alu_xor                                       CU(S806)
	S808= IR.Out6_10=>GPRegs.RReg1                              Premise(F359)
	S809= GPRegs.RReg1=rS                                       Path(S752,S808)
	S810= GPRegs.Rdata1=a                                       GPRegs-Read(S809,S719)
	S811= IR.Out16_31=>LIMMEXT.In                               Premise(F360)
	S812= LIMMEXT.In=UIMM                                       Path(S754,S811)
	S813= LIMMEXT.Out={16'b0,UIMM}                              LIMMEXT(S812)
	S814= GPRegs.Rdata1=>A.In                                   Premise(F361)
	S815= A.In=a                                                Path(S810,S814)
	S816= LIMMEXT.Out=>B.In                                     Premise(F362)
	S817= B.In={16'b0,UIMM}                                     Path(S813,S816)
	S818= A.Out=>ALU.A                                          Premise(F363)
	S819= ALU.A=a                                               Path(S755,S818)
	S820= B.Out=>ALU.B                                          Premise(F364)
	S821= ALU.B={16'b0,UIMM}                                    Path(S758,S820)
	S822= CU.Func=>ALU.Func                                     Premise(F365)
	S823= ALU.Func=alu_xor                                      Path(S807,S822)
	S824= ALU.Out=a^{16'b0,UIMM}                                ALU(S819,S821)
	S825= ALU.CMP=Compare0(a^{16'b0,UIMM})                      ALU(S819,S821)
	S826= ALU.OV=OverFlow(a^{16'b0,UIMM})                       ALU(S819,S821)
	S827= ALU.CA=Carry(a^{16'b0,UIMM})                          ALU(S819,S821)
	S828= ALU.Out=>ALUOut.In                                    Premise(F366)
	S829= ALUOut.In=a^{16'b0,UIMM}                              Path(S824,S828)
	S830= ALU.CMP=>DataCmb.A                                    Premise(F367)
	S831= DataCmb.A=Compare0(a^{16'b0,UIMM})                    Path(S825,S830)
	S832= XER.SOOut=>DataCmb.B                                  Premise(F368)
	S833= DataCmb.B=so                                          Path(S764,S832)
	S834= DataCmb.Out={Compare0(a^{16'b0,UIMM}),so}             DataCmb(S831,S833)
	S835= DataCmb.Out=>DR4bit.In                                Premise(F369)
	S836= DR4bit.In={Compare0(a^{16'b0,UIMM}),so}               Path(S834,S835)
	S837= IR.Out11_15=>GPRegs.WReg                              Premise(F370)
	S838= GPRegs.WReg=rA                                        Path(S753,S837)
	S839= ALUOut.Out=>GPRegs.WData                              Premise(F371)
	S840= GPRegs.WData=a^{16'b0,UIMM}                           Path(S761,S839)
	S841= DR4bit.Out=>CRRegs.CR0In                              Premise(F372)
	S842= CRRegs.CR0In={Compare0(a^{16'b0,UIMM}),so}            Path(S765,S841)
	S843= CtrlPIDReg=0                                          Premise(F373)
	S844= [PIDReg]=pid                                          PIDReg-Hold(S698,S843)
	S845= CtrlIMMU=0                                            Premise(F374)
	S846= CtrlPC=0                                              Premise(F375)
	S847= CtrlPCInc=0                                           Premise(F376)
	S848= PC[CIA]=addr                                          PC-Hold(S702,S847)
	S849= PC[Out]=addr+4                                        PC-Hold(S703,S846,S847)
	S850= CtrlIAddrReg=0                                        Premise(F377)
	S851= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S705,S850)
	S852= CtrlIMMUHitReg=0                                      Premise(F378)
	S853= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S707,S852)
	S854= CtrlICache=0                                          Premise(F379)
	S855= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S709,S854)
	S856= CtrlICacheReg=0                                       Premise(F380)
	S857= CtrlICacheHitReg=0                                    Premise(F381)
	S858= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S712,S857)
	S859= CtrlIMem=0                                            Premise(F382)
	S860= IMem[{pid,addr}]={26,rS,rA,UIMM}                      IMem-Hold(S714,S859)
	S861= CtrlIRMux=0                                           Premise(F383)
	S862= CtrlIR=0                                              Premise(F384)
	S863= [IR]={26,rS,rA,UIMM}                                  IR-Hold(S717,S862)
	S864= CtrlGPRegs=0                                          Premise(F385)
	S865= GPRegs[rS]=a                                          GPRegs-Hold(S719,S864)
	S866= CtrlA=0                                               Premise(F386)
	S867= [A]=a                                                 A-Hold(S721,S866)
	S868= CtrlB=0                                               Premise(F387)
	S869= [B]={16'b0,UIMM}                                      B-Hold(S723,S868)
	S870= CtrlALUOut=0                                          Premise(F388)
	S871= [ALUOut]=a^{16'b0,UIMM}                               ALUOut-Hold(S725,S870)
	S872= CtrlXERSO=0                                           Premise(F389)
	S873= XER[SO]=so                                            XER-SO-Hold(S727,S872)
	S874= CtrlXEROV=0                                           Premise(F390)
	S875= CtrlXERCA=0                                           Premise(F391)
	S876= CtrlDR4bit=0                                          Premise(F392)
	S877= [DR4bit]={Compare0(a^{16'b0,UIMM}),so}                DR4bit-Hold(S731,S876)
	S878= CtrlCRRegs=0                                          Premise(F393)
	S879= CtrlCRRegsCR0=0                                       Premise(F394)
	S880= CtrlCRRegsW4bitRegs=0                                 Premise(F395)
	S881= CtrlCRRegsW1bitRegs=0                                 Premise(F396)

WB	S882= PIDReg.Out=pid                                        PIDReg-Out(S844)
	S883= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S844)
	S884= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S844)
	S885= PC.CIA=addr                                           PC-Out(S848)
	S886= PC.CIA31_28=addr[31:28]                               PC-Out(S848)
	S887= PC.Out=addr+4                                         PC-Out(S849)
	S888= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S851)
	S889= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S851)
	S890= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S851)
	S891= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S853)
	S892= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S853)
	S893= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S853)
	S894= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S858)
	S895= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S858)
	S896= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S858)
	S897= IR.Out0_5=26                                          IR-Out(S863)
	S898= IR.Out6_10=rS                                         IR-Out(S863)
	S899= IR.Out11_15=rA                                        IR-Out(S863)
	S900= IR.Out16_31=UIMM                                      IR-Out(S863)
	S901= A.Out=a                                               A-Out(S867)
	S902= A.Out26_31=a[26:31]                                   A-Out(S867)
	S903= A.Out30_31=a[30:31]                                   A-Out(S867)
	S904= B.Out={16'b0,UIMM}                                    B-Out(S869)
	S905= B.Out26_31={16'b0,UIMM}[26:31]                        B-Out(S869)
	S906= B.Out30_31={16'b0,UIMM}[30:31]                        B-Out(S869)
	S907= ALUOut.Out=a^{16'b0,UIMM}                             ALUOut-Out(S871)
	S908= ALUOut.Out26_31=a^{16'b0,UIMM}[26:31]                 ALUOut-Out(S871)
	S909= ALUOut.Out30_31=a^{16'b0,UIMM}[30:31]                 ALUOut-Out(S871)
	S910= XER.SOOut=so                                          XER-SO-Out(S873)
	S911= DR4bit.Out={Compare0(a^{16'b0,UIMM}),so}              DR4bit-Out(S877)
	S912= DR4bit.Out26_31={Compare0(a^{16'b0,UIMM}),so}[26:31]  DR4bit-Out(S877)
	S913= DR4bit.Out30_31={Compare0(a^{16'b0,UIMM}),so}[30:31]  DR4bit-Out(S877)
	S914= PIDReg.Out=>IMMU.PID                                  Premise(F397)
	S915= IMMU.PID=pid                                          Path(S882,S914)
	S916= PC.Out=>IMMU.IEA                                      Premise(F398)
	S917= IMMU.IEA=addr+4                                       Path(S887,S916)
	S918= IMMU.Addr={pid,addr+4}                                IMMU-Search(S915,S917)
	S919= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S915,S917)
	S920= IMMU.Addr=>IAddrReg.In                                Premise(F399)
	S921= IAddrReg.In={pid,addr+4}                              Path(S918,S920)
	S922= IMMU.Hit=>IMMUHitReg.In                               Premise(F400)
	S923= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S919,S922)
	S924= PC.Out=>ICache.IEA                                    Premise(F401)
	S925= ICache.IEA=addr+4                                     Path(S887,S924)
	S926= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S925)
	S927= ICache.Out=>ICacheReg.In                              Premise(F402)
	S928= ICache.Hit=>ICacheHitReg.In                           Premise(F403)
	S929= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S926,S928)
	S930= IMMUHitReg.Out=>CU.IMemHit                            Premise(F404)
	S931= CU.IMemHit=IMMUHit(pid,addr)                          Path(S891,S930)
	S932= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F405)
	S933= CU.ICacheHit=ICacheHit(addr)                          Path(S894,S932)
	S934= IAddrReg.Out=>IMem.RAddr                              Premise(F406)
	S935= IMem.RAddr={pid,addr}                                 Path(S888,S934)
	S936= IMem.Out={26,rS,rA,UIMM}                              IMem-Read(S935,S860)
	S937= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S935,S860)
	S938= IMem.Out=>IRMux.MemData                               Premise(F407)
	S939= IRMux.MemData={26,rS,rA,UIMM}                         Path(S936,S938)
	S940= IRMux.Out={26,rS,rA,UIMM}                             IRMux-Select(S939)
	S941= ICacheReg.Out=>IRMux.CacheData                        Premise(F408)
	S942= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F409)
	S943= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S891,S942)
	S944= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F410)
	S945= IRMux.CacheSel=ICacheHit(addr)                        Path(S894,S944)
	S946= IRMux.Out=>IR.In                                      Premise(F411)
	S947= IR.In={26,rS,rA,UIMM}                                 Path(S940,S946)
	S948= IMem.MEM8WordOut=>ICache.WData                        Premise(F412)
	S949= ICache.WData=IMemGet8Word({pid,addr})                 Path(S937,S948)
	S950= PC.Out=>ICache.IEA                                    Premise(F413)
	S951= IR.Out0_5=>CU.Op                                      Premise(F414)
	S952= CU.Op=26                                              Path(S897,S951)
	S953= CU.Func=alu_xor                                       CU(S952)
	S954= IR.Out6_10=>GPRegs.RReg1                              Premise(F415)
	S955= GPRegs.RReg1=rS                                       Path(S898,S954)
	S956= GPRegs.Rdata1=a                                       GPRegs-Read(S955,S865)
	S957= IR.Out16_31=>LIMMEXT.In                               Premise(F416)
	S958= LIMMEXT.In=UIMM                                       Path(S900,S957)
	S959= LIMMEXT.Out={16'b0,UIMM}                              LIMMEXT(S958)
	S960= GPRegs.Rdata1=>A.In                                   Premise(F417)
	S961= A.In=a                                                Path(S956,S960)
	S962= LIMMEXT.Out=>B.In                                     Premise(F418)
	S963= B.In={16'b0,UIMM}                                     Path(S959,S962)
	S964= A.Out=>ALU.A                                          Premise(F419)
	S965= ALU.A=a                                               Path(S901,S964)
	S966= B.Out=>ALU.B                                          Premise(F420)
	S967= ALU.B={16'b0,UIMM}                                    Path(S904,S966)
	S968= CU.Func=>ALU.Func                                     Premise(F421)
	S969= ALU.Func=alu_xor                                      Path(S953,S968)
	S970= ALU.Out=a^{16'b0,UIMM}                                ALU(S965,S967)
	S971= ALU.CMP=Compare0(a^{16'b0,UIMM})                      ALU(S965,S967)
	S972= ALU.OV=OverFlow(a^{16'b0,UIMM})                       ALU(S965,S967)
	S973= ALU.CA=Carry(a^{16'b0,UIMM})                          ALU(S965,S967)
	S974= ALU.Out=>ALUOut.In                                    Premise(F422)
	S975= ALUOut.In=a^{16'b0,UIMM}                              Path(S970,S974)
	S976= ALU.CMP=>DataCmb.A                                    Premise(F423)
	S977= DataCmb.A=Compare0(a^{16'b0,UIMM})                    Path(S971,S976)
	S978= XER.SOOut=>DataCmb.B                                  Premise(F424)
	S979= DataCmb.B=so                                          Path(S910,S978)
	S980= DataCmb.Out={Compare0(a^{16'b0,UIMM}),so}             DataCmb(S977,S979)
	S981= DataCmb.Out=>DR4bit.In                                Premise(F425)
	S982= DR4bit.In={Compare0(a^{16'b0,UIMM}),so}               Path(S980,S981)
	S983= IR.Out11_15=>GPRegs.WReg                              Premise(F426)
	S984= GPRegs.WReg=rA                                        Path(S899,S983)
	S985= ALUOut.Out=>GPRegs.WData                              Premise(F427)
	S986= GPRegs.WData=a^{16'b0,UIMM}                           Path(S907,S985)
	S987= DR4bit.Out=>CRRegs.CR0In                              Premise(F428)
	S988= CRRegs.CR0In={Compare0(a^{16'b0,UIMM}),so}            Path(S911,S987)
	S989= CtrlPIDReg=0                                          Premise(F429)
	S990= [PIDReg]=pid                                          PIDReg-Hold(S844,S989)
	S991= CtrlIMMU=0                                            Premise(F430)
	S992= CtrlPC=0                                              Premise(F431)
	S993= CtrlPCInc=0                                           Premise(F432)
	S994= PC[CIA]=addr                                          PC-Hold(S848,S993)
	S995= PC[Out]=addr+4                                        PC-Hold(S849,S992,S993)
	S996= CtrlIAddrReg=0                                        Premise(F433)
	S997= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S851,S996)
	S998= CtrlIMMUHitReg=0                                      Premise(F434)
	S999= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S853,S998)
	S1000= CtrlICache=0                                         Premise(F435)
	S1001= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S855,S1000)
	S1002= CtrlICacheReg=0                                      Premise(F436)
	S1003= CtrlICacheHitReg=0                                   Premise(F437)
	S1004= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S858,S1003)
	S1005= CtrlIMem=0                                           Premise(F438)
	S1006= IMem[{pid,addr}]={26,rS,rA,UIMM}                     IMem-Hold(S860,S1005)
	S1007= CtrlIRMux=0                                          Premise(F439)
	S1008= CtrlIR=0                                             Premise(F440)
	S1009= [IR]={26,rS,rA,UIMM}                                 IR-Hold(S863,S1008)
	S1010= CtrlGPRegs=1                                         Premise(F441)
	S1011= GPRegs[rA]=a^{16'b0,UIMM}                            GPRegs-Write(S984,S986,S1010)
	S1012= CtrlA=0                                              Premise(F442)
	S1013= [A]=a                                                A-Hold(S867,S1012)
	S1014= CtrlB=0                                              Premise(F443)
	S1015= [B]={16'b0,UIMM}                                     B-Hold(S869,S1014)
	S1016= CtrlALUOut=0                                         Premise(F444)
	S1017= [ALUOut]=a^{16'b0,UIMM}                              ALUOut-Hold(S871,S1016)
	S1018= CtrlXERSO=0                                          Premise(F445)
	S1019= XER[SO]=so                                           XER-SO-Hold(S873,S1018)
	S1020= CtrlXEROV=0                                          Premise(F446)
	S1021= CtrlXERCA=0                                          Premise(F447)
	S1022= CtrlDR4bit=0                                         Premise(F448)
	S1023= [DR4bit]={Compare0(a^{16'b0,UIMM}),so}               DR4bit-Hold(S877,S1022)
	S1024= CtrlCRRegs=0                                         Premise(F449)
	S1025= CtrlCRRegsCR0=1                                      Premise(F450)
	S1026= CRRegs[CR0]={Compare0(a^{16'b0,UIMM}),so}            CRRegs-CR0-Write(S988,S1025)
	S1027= CtrlCRRegsW4bitRegs=0                                Premise(F451)
	S1028= CtrlCRRegsW1bitRegs=0                                Premise(F452)

POST	S990= [PIDReg]=pid                                          PIDReg-Hold(S844,S989)
	S994= PC[CIA]=addr                                          PC-Hold(S848,S993)
	S995= PC[Out]=addr+4                                        PC-Hold(S849,S992,S993)
	S997= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S851,S996)
	S999= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S853,S998)
	S1001= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S855,S1000)
	S1004= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S858,S1003)
	S1006= IMem[{pid,addr}]={26,rS,rA,UIMM}                     IMem-Hold(S860,S1005)
	S1009= [IR]={26,rS,rA,UIMM}                                 IR-Hold(S863,S1008)
	S1011= GPRegs[rA]=a^{16'b0,UIMM}                            GPRegs-Write(S984,S986,S1010)
	S1013= [A]=a                                                A-Hold(S867,S1012)
	S1015= [B]={16'b0,UIMM}                                     B-Hold(S869,S1014)
	S1017= [ALUOut]=a^{16'b0,UIMM}                              ALUOut-Hold(S871,S1016)
	S1019= XER[SO]=so                                           XER-SO-Hold(S873,S1018)
	S1023= [DR4bit]={Compare0(a^{16'b0,UIMM}),so}               DR4bit-Hold(S877,S1022)
	S1026= CRRegs[CR0]={Compare0(a^{16'b0,UIMM}),so}            CRRegs-CR0-Write(S988,S1025)

