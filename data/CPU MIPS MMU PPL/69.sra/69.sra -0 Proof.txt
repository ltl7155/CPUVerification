
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                       Premise(F2)
	S3= GPR[rT]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= IMMU.Addr=>IAddrReg.In                                  Premise(F65)
	S7= PC.Out=>IMMU.IEA                                        Premise(F70)
	S8= IMMU.IEA=addr                                           Path(S5,S7)
	S9= CP0.ASID=>IMMU.PID                                      Premise(F71)
	S10= IMMU.PID=pid                                           Path(S4,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S10,S8)
	S12= IAddrReg.In={pid,addr}                                 Path(S11,S6)
	S13= CtrlGPR=0                                              Premise(F128)
	S14= GPR[rT]=a                                              GPR-Hold(S3,S13)
	S15= CtrlIAddrReg=1                                         Premise(F129)
	S16= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S15)
	S17= CtrlPC=0                                               Premise(F130)
	S18= CtrlPCInc=0                                            Premise(F131)
	S19= PC[Out]=addr                                           PC-Hold(S1,S17,S18)
	S20= CtrlIMem=0                                             Premise(F132)
	S21= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                      IMem-Hold(S2,S20)

IMMU	S22= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S16)
	S23= PC.Out=addr                                            PC-Out(S19)
	S24= PC.Out=>ICache.IEA                                     Premise(F201)
	S25= ICache.IEA=addr                                        Path(S23,S24)
	S26= IMem.MEM8WordOut=>ICache.WData                         Premise(F203)
	S27= IAddrReg.Out=>IMem.RAddr                               Premise(F207)
	S28= IMem.RAddr={pid,addr}                                  Path(S22,S27)
	S29= IMem.Out={0,0,rT,rD,sa,3}                              IMem-Read(S28,S21)
	S30= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S28,S21)
	S31= ICache.WData=IMemGet8Word({pid,addr})                  Path(S30,S26)
	S32= IMem.Out=>IRMux.MemData                                Premise(F210)
	S33= IRMux.MemData={0,0,rT,rD,sa,3}                         Path(S29,S32)
	S34= IRMux.Out={0,0,rT,rD,sa,3}                             IRMux-Select2(S33)
	S35= IRMux.Out=>IR_ID.In                                    Premise(F216)
	S36= IR_ID.In={0,0,rT,rD,sa,3}                              Path(S34,S35)
	S37= CtrlICache=1                                           Premise(F254)
	S38= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S25,S31,S37)
	S39= CtrlIR_ID=1                                            Premise(F259)
	S40= [IR_ID]={0,0,rT,rD,sa,3}                               IR_ID-Write(S36,S39)
	S41= CtrlGPR=0                                              Premise(F263)
	S42= GPR[rT]=a                                              GPR-Hold(S14,S41)
	S43= CtrlPC=0                                               Premise(F265)
	S44= CtrlPCInc=1                                            Premise(F266)
	S45= PC[Out]=addr+4                                         PC-Inc(S19,S43,S44)

ID	S46= IR_ID.Out={0,0,rT,rD,sa,3}                             IR-Out(S40)
	S47= IR_ID.Out20_16=rT                                      IR-Out(S40)
	S48= FU.OutID2=>B_EX.In                                     Premise(F279)
	S49= GPR.Rdata2=>FU.InID2                                   Premise(F327)
	S50= IR_ID.Out20_16=>GPR.RReg2                              Premise(F333)
	S51= GPR.RReg2=rT                                           Path(S47,S50)
	S52= GPR.Rdata2=a                                           GPR-Read(S51,S42)
	S53= FU.InID2=a                                             Path(S52,S49)
	S54= FU.OutID2=FU(a)                                        FU-Forward(S53)
	S55= B_EX.In=FU(a)                                          Path(S54,S48)
	S56= IR_ID.Out=>IR_EX.In                                    Premise(F350)
	S57= IR_EX.In={0,0,rT,rD,sa,3}                              Path(S46,S56)
	S58= CtrlB_EX=1                                             Premise(F387)
	S59= [B_EX]=FU(a)                                           B_EX-Write(S55,S58)
	S60= CtrlICache=0                                           Premise(F390)
	S61= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S38,S60)
	S62= CtrlIR_EX=1                                            Premise(F394)
	S63= [IR_EX]={0,0,rT,rD,sa,3}                               IR_EX-Write(S57,S62)
	S64= CtrlPC=0                                               Premise(F401)
	S65= CtrlPCInc=0                                            Premise(F402)
	S66= PC[Out]=addr+4                                         PC-Hold(S45,S64,S65)

EX	S67= B_EX.Out=FU(a)                                         B_EX-Out(S59)
	S68= IR_EX.Out={0,0,rT,rD,sa,3}                             IR_EX-Out(S63)
	S69= IR_EX.Out10_6=sa                                       IR_EX-Out(S63)
	S70= SU.Out=>ALUOut_MEM.In                                  Premise(F412)
	S71= IR_EX.Out=>IR_MEM.In                                   Premise(F489)
	S72= IR_MEM.In={0,0,rT,rD,sa,3}                             Path(S68,S71)
	S73= B_EX.Out=>SU.Data                                      Premise(F492)
	S74= SU.Data=FU(a)                                          Path(S67,S73)
	S75= IR_EX.Out10_6=>SU.Shamt                                Premise(F494)
	S76= SU.Shamt=sa                                            Path(S69,S75)
	S77= SU.Out=FU(a)>>sa                                       SU(S74,S76)
	S78= ALUOut_MEM.In=FU(a)>>sa                                Path(S77,S70)
	S79= CtrlALUOut_MEM=1                                       Premise(F519)
	S80= [ALUOut_MEM]=FU(a)>>sa                                 ALUOut_MEM-Write(S78,S79)
	S81= CtrlICache=0                                           Premise(F526)
	S82= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S61,S81)
	S83= CtrlIR_MEM=1                                           Premise(F533)
	S84= [IR_MEM]={0,0,rT,rD,sa,3}                              IR_MEM-Write(S72,S83)
	S85= CtrlPC=0                                               Premise(F537)
	S86= CtrlPCInc=0                                            Premise(F538)
	S87= PC[Out]=addr+4                                         PC-Hold(S66,S85,S86)

MEM	S88= ALUOut_MEM.Out=FU(a)>>sa                               ALUOut_MEM-Out(S80)
	S89= IR_MEM.Out={0,0,rT,rD,sa,3}                            IR_MEM-Out(S84)
	S90= ALUOut_MEM.Out=>ALUOut_DMMU1.In                        Premise(F546)
	S91= ALUOut_DMMU1.In=FU(a)>>sa                              Path(S88,S90)
	S92= IR_MEM.Out=>IR_DMMU1.In                                Premise(F619)
	S93= IR_DMMU1.In={0,0,rT,rD,sa,3}                           Path(S89,S92)
	S94= CtrlALUOut_DMMU1=1                                     Premise(F655)
	S95= [ALUOut_DMMU1]=FU(a)>>sa                               ALUOut_DMMU1-Write(S91,S94)
	S96= CtrlICache=0                                           Premise(F661)
	S97= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S82,S96)
	S98= CtrlIR_DMMU1=1                                         Premise(F663)
	S99= [IR_DMMU1]={0,0,rT,rD,sa,3}                            IR_DMMU1-Write(S93,S98)
	S100= CtrlPC=0                                              Premise(F672)
	S101= CtrlPCInc=0                                           Premise(F673)
	S102= PC[Out]=addr+4                                        PC-Hold(S87,S100,S101)

DMMU1	S103= ALUOut_DMMU1.Out=FU(a)>>sa                            ALUOut_DMMU1-Out(S95)
	S104= IR_DMMU1.Out={0,0,rT,rD,sa,3}                         IR_DMMU1-Out(S99)
	S105= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                     Premise(F682)
	S106= ALUOut_DMMU2.In=FU(a)>>sa                             Path(S103,S105)
	S107= IR_DMMU1.Out=>IR_DMMU2.In                             Premise(F755)
	S108= IR_DMMU2.In={0,0,rT,rD,sa,3}                          Path(S104,S107)
	S109= CtrlALUOut_DMMU2=1                                    Premise(F791)
	S110= [ALUOut_DMMU2]=FU(a)>>sa                              ALUOut_DMMU2-Write(S106,S109)
	S111= CtrlICache=0                                          Premise(F796)
	S112= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S97,S111)
	S113= CtrlIR_DMMU2=1                                        Premise(F799)
	S114= [IR_DMMU2]={0,0,rT,rD,sa,3}                           IR_DMMU2-Write(S108,S113)
	S115= CtrlPC=0                                              Premise(F807)
	S116= CtrlPCInc=0                                           Premise(F808)
	S117= PC[Out]=addr+4                                        PC-Hold(S102,S115,S116)

DMMU2	S118= ALUOut_DMMU2.Out=FU(a)>>sa                            ALUOut_DMMU2-Out(S110)
	S119= IR_DMMU2.Out={0,0,rT,rD,sa,3}                         IR_DMMU2-Out(S114)
	S120= ALUOut_DMMU2.Out=>ALUOut_WB.In                        Premise(F819)
	S121= ALUOut_WB.In=FU(a)>>sa                                Path(S118,S120)
	S122= IR_DMMU2.Out=>IR_WB.In                                Premise(F896)
	S123= IR_WB.In={0,0,rT,rD,sa,3}                             Path(S119,S122)
	S124= CtrlALUOut_WB=1                                       Premise(F927)
	S125= [ALUOut_WB]=FU(a)>>sa                                 ALUOut_WB-Write(S121,S124)
	S126= CtrlICache=0                                          Premise(F931)
	S127= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S112,S126)
	S128= CtrlIR_WB=1                                           Premise(F939)
	S129= [IR_WB]={0,0,rT,rD,sa,3}                              IR_WB-Write(S123,S128)
	S130= CtrlPC=0                                              Premise(F942)
	S131= CtrlPCInc=0                                           Premise(F943)
	S132= PC[Out]=addr+4                                        PC-Hold(S117,S130,S131)

WB	S133= ALUOut_WB.Out=FU(a)>>sa                               ALUOut_WB-Out(S125)
	S134= IR_WB.Out15_11=rD                                     IR-Out(S129)
	S135= ALUOut_WB.Out=>GPR.WData                              Premise(F1010)
	S136= GPR.WData=FU(a)>>sa                                   Path(S133,S135)
	S137= IR_WB.Out15_11=>GPR.WReg                              Premise(F1011)
	S138= GPR.WReg=rD                                           Path(S134,S137)
	S139= CtrlICache=0                                          Premise(F1066)
	S140= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S127,S139)
	S141= CtrlGPR=1                                             Premise(F1075)
	S142= GPR[rD]=FU(a)>>sa                                     GPR-Write(S138,S136,S141)
	S143= CtrlPC=0                                              Premise(F1077)
	S144= CtrlPCInc=0                                           Premise(F1078)
	S145= PC[Out]=addr+4                                        PC-Hold(S132,S143,S144)

POST	S140= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S127,S139)
	S142= GPR[rD]=FU(a)>>sa                                     GPR-Write(S138,S136,S141)
	S145= PC[Out]=addr+4                                        PC-Hold(S132,S143,S144)

