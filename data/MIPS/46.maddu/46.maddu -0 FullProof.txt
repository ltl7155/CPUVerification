
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={28,rS,rT,0,0,1}                       Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)
	S4= GPR[rT]=b                                               Premise(F4)
	S5= [Lo]=lo                                                 Premise(F5)
	S6= [Hi]=hi                                                 Premise(F6)

IF	S7= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S8= PC.Out=addr                                             PC-Out(S1)
	S9= Lo.Out=lo                                               Lo-Out(S5)
	S10= Lo.Out1_0={lo}[1:0]                                    Lo-Out(S5)
	S11= Lo.Out4_0={lo}[4:0]                                    Lo-Out(S5)
	S12= Hi.Out=hi                                              Hi-Out(S6)
	S13= Hi.Out1_0={hi}[1:0]                                    Hi-Out(S6)
	S14= Hi.Out4_0={hi}[4:0]                                    Hi-Out(S6)
	S15= PC.Out=>IMem.RAddr                                     Premise(F7)
	S16= IMem.RAddr=addr                                        Path(S8,S15)
	S17= CP0.ASID=>IMem.ASID                                    Premise(F8)
	S18= IMem.ASID=pid                                          Path(S7,S17)
	S19= IMem.Out={28,rS,rT,0,0,1}                              IMem-Read(S18,S16,S2)
	S20= IMem.Out=>IR.In                                        Premise(F9)
	S21= IR.In={28,rS,rT,0,0,1}                                 Path(S19,S20)
	S22= CtrlPC=0                                               Premise(F10)
	S23= CtrlPCInc=1                                            Premise(F11)
	S24= PC[Out]=addr+4                                         PC-Inc(S1,S22,S23)
	S25= PC[CIA]=addr                                           PC-Inc(S1,S22,S23)
	S26= CtrlIMem=0                                             Premise(F12)
	S27= IMem[{pid,addr}]={28,rS,rT,0,0,1}                      IMem-Hold(S2,S26)
	S28= CtrlASIDIn=0                                           Premise(F13)
	S29= CtrlCP0=0                                              Premise(F14)
	S30= CP0[ASID]=pid                                          CP0-Hold(S0,S29)
	S31= CtrlEPCIn=0                                            Premise(F15)
	S32= CtrlExCodeIn=0                                         Premise(F16)
	S33= CtrlIR=1                                               Premise(F17)
	S34= [IR]={28,rS,rT,0,0,1}                                  IR-Write(S21,S33)
	S35= CtrlGPR=0                                              Premise(F18)
	S36= GPR[rS]=a                                              GPR-Hold(S3,S35)
	S37= GPR[rT]=b                                              GPR-Hold(S4,S35)
	S38= CtrlA=0                                                Premise(F19)
	S39= CtrlB=0                                                Premise(F20)
	S40= CtrlHi=0                                               Premise(F21)
	S41= [Hi]=hi                                                Hi-Hold(S6,S40)
	S42= CtrlLo=0                                               Premise(F22)
	S43= [Lo]=lo                                                Lo-Hold(S5,S42)

ID	S44= PC.Out=addr+4                                          PC-Out(S24)
	S45= PC.CIA=addr                                            PC-Out(S25)
	S46= PC.CIA31_28=addr[31:28]                                PC-Out(S25)
	S47= CP0.ASID=pid                                           CP0-Read-ASID(S30)
	S48= IR.Out={28,rS,rT,0,0,1}                                IR-Out(S34)
	S49= IR.Out31_26=28                                         IR-Out(S34)
	S50= IR.Out25_21=rS                                         IR-Out(S34)
	S51= IR.Out20_16=rT                                         IR-Out(S34)
	S52= IR.Out15_11=0                                          IR-Out(S34)
	S53= IR.Out10_6=0                                           IR-Out(S34)
	S54= IR.Out5_0=1                                            IR-Out(S34)
	S55= Hi.Out=hi                                              Hi-Out(S41)
	S56= Hi.Out1_0={hi}[1:0]                                    Hi-Out(S41)
	S57= Hi.Out4_0={hi}[4:0]                                    Hi-Out(S41)
	S58= Lo.Out=lo                                              Lo-Out(S43)
	S59= Lo.Out1_0={lo}[1:0]                                    Lo-Out(S43)
	S60= Lo.Out4_0={lo}[4:0]                                    Lo-Out(S43)
	S61= IR.Out31_26=>CU.Op                                     Premise(F23)
	S62= CU.Op=28                                               Path(S49,S61)
	S63= CU.Func=alu_and                                        CU(S62)
	S64= IR.Out25_21=>GPR.RReg1                                 Premise(F24)
	S65= GPR.RReg1=rS                                           Path(S50,S64)
	S66= GPR.Rdata1=a                                           GPR-Read(S65,S36)
	S67= IR.Out20_16=>GPR.RReg2                                 Premise(F25)
	S68= GPR.RReg2=rT                                           Path(S51,S67)
	S69= GPR.Rdata2=b                                           GPR-Read(S68,S37)
	S70= IR.Out5_0=>CU.IRFunc                                   Premise(F26)
	S71= CU.IRFunc=1                                            Path(S54,S70)
	S72= GPR.Rdata1=>A.In                                       Premise(F27)
	S73= A.In=a                                                 Path(S66,S72)
	S74= GPR.Rdata2=>B.In                                       Premise(F28)
	S75= B.In=b                                                 Path(S69,S74)
	S76= CtrlPC=0                                               Premise(F29)
	S77= CtrlPCInc=0                                            Premise(F30)
	S78= PC[CIA]=addr                                           PC-Hold(S25,S77)
	S79= PC[Out]=addr+4                                         PC-Hold(S24,S76,S77)
	S80= CtrlIMem=0                                             Premise(F31)
	S81= IMem[{pid,addr}]={28,rS,rT,0,0,1}                      IMem-Hold(S27,S80)
	S82= CtrlASIDIn=0                                           Premise(F32)
	S83= CtrlCP0=0                                              Premise(F33)
	S84= CP0[ASID]=pid                                          CP0-Hold(S30,S83)
	S85= CtrlEPCIn=0                                            Premise(F34)
	S86= CtrlExCodeIn=0                                         Premise(F35)
	S87= CtrlIR=0                                               Premise(F36)
	S88= [IR]={28,rS,rT,0,0,1}                                  IR-Hold(S34,S87)
	S89= CtrlGPR=0                                              Premise(F37)
	S90= GPR[rS]=a                                              GPR-Hold(S36,S89)
	S91= GPR[rT]=b                                              GPR-Hold(S37,S89)
	S92= CtrlA=1                                                Premise(F38)
	S93= [A]=a                                                  A-Write(S73,S92)
	S94= CtrlB=1                                                Premise(F39)
	S95= [B]=b                                                  B-Write(S75,S94)
	S96= CtrlHi=0                                               Premise(F40)
	S97= [Hi]=hi                                                Hi-Hold(S41,S96)
	S98= CtrlLo=0                                               Premise(F41)
	S99= [Lo]=lo                                                Lo-Hold(S43,S98)

EX	S100= PC.CIA=addr                                           PC-Out(S78)
	S101= PC.CIA31_28=addr[31:28]                               PC-Out(S78)
	S102= PC.Out=addr+4                                         PC-Out(S79)
	S103= CP0.ASID=pid                                          CP0-Read-ASID(S84)
	S104= IR.Out={28,rS,rT,0,0,1}                               IR-Out(S88)
	S105= IR.Out31_26=28                                        IR-Out(S88)
	S106= IR.Out25_21=rS                                        IR-Out(S88)
	S107= IR.Out20_16=rT                                        IR-Out(S88)
	S108= IR.Out15_11=0                                         IR-Out(S88)
	S109= IR.Out10_6=0                                          IR-Out(S88)
	S110= IR.Out5_0=1                                           IR-Out(S88)
	S111= A.Out=a                                               A-Out(S93)
	S112= A.Out1_0={a}[1:0]                                     A-Out(S93)
	S113= A.Out4_0={a}[4:0]                                     A-Out(S93)
	S114= B.Out=b                                               B-Out(S95)
	S115= B.Out1_0={b}[1:0]                                     B-Out(S95)
	S116= B.Out4_0={b}[4:0]                                     B-Out(S95)
	S117= Hi.Out=hi                                             Hi-Out(S97)
	S118= Hi.Out1_0={hi}[1:0]                                   Hi-Out(S97)
	S119= Hi.Out4_0={hi}[4:0]                                   Hi-Out(S97)
	S120= Lo.Out=lo                                             Lo-Out(S99)
	S121= Lo.Out1_0={lo}[1:0]                                   Lo-Out(S99)
	S122= Lo.Out4_0={lo}[4:0]                                   Lo-Out(S99)
	S123= Hi.Out=>MDU.Hi                                        Premise(F42)
	S124= MDU.Hi=hi                                             Path(S117,S123)
	S125= Lo.Out=>MDU.Lo                                        Premise(F43)
	S126= MDU.Lo=lo                                             Path(S120,S125)
	S127= A.Out=>MDU.A                                          Premise(F44)
	S128= MDU.A=a                                               Path(S111,S127)
	S129= B.Out=>MDU.B                                          Premise(F45)
	S130= MDU.B=b                                               Path(S114,S129)
	S131= MDU.Func=6'b000110                                    Premise(F46)
	S132= MDU.lo=({hi,lo}+a*b)[31:0]                            MDU(S128,S130,S124,S126)
	S133= MDU.hi=({hi,lo}+a*b)[63:32]                           MDU(S128,S130,S124,S126)
	S134= MDU.CMP=Compare0({hi,lo}+a*b)                         MDU(S128,S130,S124,S126)
	S135= MDU.OV=OverFlow({hi,lo}+a*b)                          MDU(S128,S130,S124,S126)
	S136= MDU.hi=>Hi.In                                         Premise(F47)
	S137= Hi.In=({hi,lo}+a*b)[63:32]                            Path(S133,S136)
	S138= MDU.lo=>Lo.In                                         Premise(F48)
	S139= Lo.In=({hi,lo}+a*b)[31:0]                             Path(S132,S138)
	S140= CtrlPC=0                                              Premise(F49)
	S141= CtrlPCInc=0                                           Premise(F50)
	S142= PC[CIA]=addr                                          PC-Hold(S78,S141)
	S143= PC[Out]=addr+4                                        PC-Hold(S79,S140,S141)
	S144= CtrlIMem=0                                            Premise(F51)
	S145= IMem[{pid,addr}]={28,rS,rT,0,0,1}                     IMem-Hold(S81,S144)
	S146= CtrlASIDIn=0                                          Premise(F52)
	S147= CtrlCP0=0                                             Premise(F53)
	S148= CP0[ASID]=pid                                         CP0-Hold(S84,S147)
	S149= CtrlEPCIn=0                                           Premise(F54)
	S150= CtrlExCodeIn=0                                        Premise(F55)
	S151= CtrlIR=0                                              Premise(F56)
	S152= [IR]={28,rS,rT,0,0,1}                                 IR-Hold(S88,S151)
	S153= CtrlGPR=0                                             Premise(F57)
	S154= GPR[rS]=a                                             GPR-Hold(S90,S153)
	S155= GPR[rT]=b                                             GPR-Hold(S91,S153)
	S156= CtrlA=0                                               Premise(F58)
	S157= [A]=a                                                 A-Hold(S93,S156)
	S158= CtrlB=0                                               Premise(F59)
	S159= [B]=b                                                 B-Hold(S95,S158)
	S160= CtrlHi=1                                              Premise(F60)
	S161= [Hi]=({hi,lo}+a*b)[63:32]                             Hi-Write(S137,S160)
	S162= CtrlLo=1                                              Premise(F61)
	S163= [Lo]=({hi,lo}+a*b)[31:0]                              Lo-Write(S139,S162)

MEM	S164= PC.CIA=addr                                           PC-Out(S142)
	S165= PC.CIA31_28=addr[31:28]                               PC-Out(S142)
	S166= PC.Out=addr+4                                         PC-Out(S143)
	S167= CP0.ASID=pid                                          CP0-Read-ASID(S148)
	S168= IR.Out={28,rS,rT,0,0,1}                               IR-Out(S152)
	S169= IR.Out31_26=28                                        IR-Out(S152)
	S170= IR.Out25_21=rS                                        IR-Out(S152)
	S171= IR.Out20_16=rT                                        IR-Out(S152)
	S172= IR.Out15_11=0                                         IR-Out(S152)
	S173= IR.Out10_6=0                                          IR-Out(S152)
	S174= IR.Out5_0=1                                           IR-Out(S152)
	S175= A.Out=a                                               A-Out(S157)
	S176= A.Out1_0={a}[1:0]                                     A-Out(S157)
	S177= A.Out4_0={a}[4:0]                                     A-Out(S157)
	S178= B.Out=b                                               B-Out(S159)
	S179= B.Out1_0={b}[1:0]                                     B-Out(S159)
	S180= B.Out4_0={b}[4:0]                                     B-Out(S159)
	S181= Hi.Out=({hi,lo}+a*b)[63:32]                           Hi-Out(S161)
	S182= Hi.Out1_0={({hi,lo}+a*b)[63:32]}[1:0]                 Hi-Out(S161)
	S183= Hi.Out4_0={({hi,lo}+a*b)[63:32]}[4:0]                 Hi-Out(S161)
	S184= Lo.Out=({hi,lo}+a*b)[31:0]                            Lo-Out(S163)
	S185= Lo.Out1_0={({hi,lo}+a*b)[31:0]}[1:0]                  Lo-Out(S163)
	S186= Lo.Out4_0={({hi,lo}+a*b)[31:0]}[4:0]                  Lo-Out(S163)
	S187= CtrlPC=0                                              Premise(F62)
	S188= CtrlPCInc=0                                           Premise(F63)
	S189= PC[CIA]=addr                                          PC-Hold(S142,S188)
	S190= PC[Out]=addr+4                                        PC-Hold(S143,S187,S188)
	S191= CtrlIMem=0                                            Premise(F64)
	S192= IMem[{pid,addr}]={28,rS,rT,0,0,1}                     IMem-Hold(S145,S191)
	S193= CtrlASIDIn=0                                          Premise(F65)
	S194= CtrlCP0=0                                             Premise(F66)
	S195= CP0[ASID]=pid                                         CP0-Hold(S148,S194)
	S196= CtrlEPCIn=0                                           Premise(F67)
	S197= CtrlExCodeIn=0                                        Premise(F68)
	S198= CtrlIR=0                                              Premise(F69)
	S199= [IR]={28,rS,rT,0,0,1}                                 IR-Hold(S152,S198)
	S200= CtrlGPR=0                                             Premise(F70)
	S201= GPR[rS]=a                                             GPR-Hold(S154,S200)
	S202= GPR[rT]=b                                             GPR-Hold(S155,S200)
	S203= CtrlA=0                                               Premise(F71)
	S204= [A]=a                                                 A-Hold(S157,S203)
	S205= CtrlB=0                                               Premise(F72)
	S206= [B]=b                                                 B-Hold(S159,S205)
	S207= CtrlHi=0                                              Premise(F73)
	S208= [Hi]=({hi,lo}+a*b)[63:32]                             Hi-Hold(S161,S207)
	S209= CtrlLo=0                                              Premise(F74)
	S210= [Lo]=({hi,lo}+a*b)[31:0]                              Lo-Hold(S163,S209)

WB	S211= PC.CIA=addr                                           PC-Out(S189)
	S212= PC.CIA31_28=addr[31:28]                               PC-Out(S189)
	S213= PC.Out=addr+4                                         PC-Out(S190)
	S214= CP0.ASID=pid                                          CP0-Read-ASID(S195)
	S215= IR.Out={28,rS,rT,0,0,1}                               IR-Out(S199)
	S216= IR.Out31_26=28                                        IR-Out(S199)
	S217= IR.Out25_21=rS                                        IR-Out(S199)
	S218= IR.Out20_16=rT                                        IR-Out(S199)
	S219= IR.Out15_11=0                                         IR-Out(S199)
	S220= IR.Out10_6=0                                          IR-Out(S199)
	S221= IR.Out5_0=1                                           IR-Out(S199)
	S222= A.Out=a                                               A-Out(S204)
	S223= A.Out1_0={a}[1:0]                                     A-Out(S204)
	S224= A.Out4_0={a}[4:0]                                     A-Out(S204)
	S225= B.Out=b                                               B-Out(S206)
	S226= B.Out1_0={b}[1:0]                                     B-Out(S206)
	S227= B.Out4_0={b}[4:0]                                     B-Out(S206)
	S228= Hi.Out=({hi,lo}+a*b)[63:32]                           Hi-Out(S208)
	S229= Hi.Out1_0={({hi,lo}+a*b)[63:32]}[1:0]                 Hi-Out(S208)
	S230= Hi.Out4_0={({hi,lo}+a*b)[63:32]}[4:0]                 Hi-Out(S208)
	S231= Lo.Out=({hi,lo}+a*b)[31:0]                            Lo-Out(S210)
	S232= Lo.Out1_0={({hi,lo}+a*b)[31:0]}[1:0]                  Lo-Out(S210)
	S233= Lo.Out4_0={({hi,lo}+a*b)[31:0]}[4:0]                  Lo-Out(S210)
	S234= CtrlPC=0                                              Premise(F75)
	S235= CtrlPCInc=0                                           Premise(F76)
	S236= PC[CIA]=addr                                          PC-Hold(S189,S235)
	S237= PC[Out]=addr+4                                        PC-Hold(S190,S234,S235)
	S238= CtrlIMem=0                                            Premise(F77)
	S239= IMem[{pid,addr}]={28,rS,rT,0,0,1}                     IMem-Hold(S192,S238)
	S240= CtrlASIDIn=0                                          Premise(F78)
	S241= CtrlCP0=0                                             Premise(F79)
	S242= CP0[ASID]=pid                                         CP0-Hold(S195,S241)
	S243= CtrlEPCIn=0                                           Premise(F80)
	S244= CtrlExCodeIn=0                                        Premise(F81)
	S245= CtrlIR=0                                              Premise(F82)
	S246= [IR]={28,rS,rT,0,0,1}                                 IR-Hold(S199,S245)
	S247= CtrlGPR=0                                             Premise(F83)
	S248= GPR[rS]=a                                             GPR-Hold(S201,S247)
	S249= GPR[rT]=b                                             GPR-Hold(S202,S247)
	S250= CtrlA=0                                               Premise(F84)
	S251= [A]=a                                                 A-Hold(S204,S250)
	S252= CtrlB=0                                               Premise(F85)
	S253= [B]=b                                                 B-Hold(S206,S252)
	S254= CtrlHi=0                                              Premise(F86)
	S255= [Hi]=({hi,lo}+a*b)[63:32]                             Hi-Hold(S208,S254)
	S256= CtrlLo=0                                              Premise(F87)
	S257= [Lo]=({hi,lo}+a*b)[31:0]                              Lo-Hold(S210,S256)

POST	S236= PC[CIA]=addr                                          PC-Hold(S189,S235)
	S237= PC[Out]=addr+4                                        PC-Hold(S190,S234,S235)
	S239= IMem[{pid,addr}]={28,rS,rT,0,0,1}                     IMem-Hold(S192,S238)
	S242= CP0[ASID]=pid                                         CP0-Hold(S195,S241)
	S246= [IR]={28,rS,rT,0,0,1}                                 IR-Hold(S199,S245)
	S248= GPR[rS]=a                                             GPR-Hold(S201,S247)
	S249= GPR[rT]=b                                             GPR-Hold(S202,S247)
	S251= [A]=a                                                 A-Hold(S204,S250)
	S253= [B]=b                                                 B-Hold(S206,S252)
	S255= [Hi]=({hi,lo}+a*b)[63:32]                             Hi-Hold(S208,S254)
	S257= [Lo]=({hi,lo}+a*b)[31:0]                              Lo-Hold(S210,S256)

