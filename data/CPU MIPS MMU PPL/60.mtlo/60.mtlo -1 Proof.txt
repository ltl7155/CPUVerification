
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,0,19}                                Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)

IF	S3= PC.Out=addr                                             PC-Out(S0)
	S4= PC.Out=>ICache.IEA                                      Premise(F43)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={0,rS,0,19}                                  ICache-Search(S5,S1)
	S7= ICache.Out=>IR_ID.In                                    Premise(F50)
	S8= IR_ID.In={0,rS,0,19}                                    Path(S6,S7)
	S9= CtrlIR_ID=1                                             Premise(F85)
	S10= [IR_ID]={0,rS,0,19}                                    IR_ID-Write(S8,S9)
	S11= CtrlGPR=0                                              Premise(F89)
	S12= GPR[rS]=a                                              GPR-Hold(S2,S11)
	S13= CtrlPC=0                                               Premise(F91)
	S14= CtrlPCInc=1                                            Premise(F92)
	S15= PC[Out]=addr+4                                         PC-Inc(S0,S13,S14)

ID	S16= IR_ID.Out25_21=rS                                      IR-Out(S10)
	S17= GPR.Rdata1=>FU.InID1                                   Premise(F231)
	S18= IR_ID.Out25_21=>GPR.RReg1                              Premise(F234)
	S19= GPR.RReg1=rS                                           Path(S16,S18)
	S20= GPR.Rdata1=a                                           GPR-Read(S19,S12)
	S21= FU.InID1=a                                             Path(S20,S17)
	S22= FU.OutID1=FU(a)                                        FU-Forward(S21)
	S23= FU.OutID1=>Lo.In                                       Premise(F248)
	S24= Lo.In=FU(a)                                            Path(S22,S23)
	S25= CtrlPC=0                                               Premise(F284)
	S26= CtrlPCInc=0                                            Premise(F285)
	S27= PC[Out]=addr+4                                         PC-Hold(S15,S25,S26)
	S28= CtrlLo=1                                               Premise(F293)
	S29= [Lo]=FU(a)                                             Lo-Write(S24,S28)

EX	S30= CtrlPC=0                                               Premise(F381)
	S31= CtrlPCInc=0                                            Premise(F382)
	S32= PC[Out]=addr+4                                         PC-Hold(S27,S30,S31)
	S33= CtrlLo=0                                               Premise(F390)
	S34= [Lo]=FU(a)                                             Lo-Hold(S29,S33)

MEM	S35= CtrlPC=0                                               Premise(F478)
	S36= CtrlPCInc=0                                            Premise(F479)
	S37= PC[Out]=addr+4                                         PC-Hold(S32,S35,S36)
	S38= CtrlLo=0                                               Premise(F487)
	S39= [Lo]=FU(a)                                             Lo-Hold(S34,S38)

DMMU1	S40= CtrlPC=0                                               Premise(F575)
	S41= CtrlPCInc=0                                            Premise(F576)
	S42= PC[Out]=addr+4                                         PC-Hold(S37,S40,S41)
	S43= CtrlLo=0                                               Premise(F584)
	S44= [Lo]=FU(a)                                             Lo-Hold(S39,S43)

DMMU2	S45= CtrlPC=0                                               Premise(F672)
	S46= CtrlPCInc=0                                            Premise(F673)
	S47= PC[Out]=addr+4                                         PC-Hold(S42,S45,S46)
	S48= CtrlLo=0                                               Premise(F681)
	S49= [Lo]=FU(a)                                             Lo-Hold(S44,S48)

WB	S50= CtrlPC=0                                               Premise(F769)
	S51= CtrlPCInc=0                                            Premise(F770)
	S52= PC[Out]=addr+4                                         PC-Hold(S47,S50,S51)
	S53= CtrlLo=0                                               Premise(F778)
	S54= [Lo]=FU(a)                                             Lo-Hold(S49,S53)

POST	S52= PC[Out]=addr+4                                         PC-Hold(S47,S50,S51)
	S54= [Lo]=FU(a)                                             Lo-Hold(S49,S53)

