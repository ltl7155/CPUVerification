
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rs,rt,code,52}                          Premise(F3)
	S2= GPR[rs]=a                                               Premise(F4)
	S3= GPR[rt]=b                                               Premise(F5)

IF	S4= PC.Out=addr                                             PC-Out(S0)
	S5= PC.Out=>ICache.IEA                                      Premise(F60)
	S6= ICache.IEA=addr                                         Path(S4,S5)
	S7= ICache.Out={0,rs,rt,code,52}                            ICache-Search(S6,S1)
	S8= ICache.Out=>IR_ID.In                                    Premise(F67)
	S9= IR_ID.In={0,rs,rt,code,52}                              Path(S7,S8)
	S10= CtrlIR_ID=1                                            Premise(F119)
	S11= [IR_ID]={0,rs,rt,code,52}                              IR_ID-Write(S9,S10)
	S12= CtrlGPR=0                                              Premise(F123)
	S13= GPR[rs]=a                                              GPR-Hold(S2,S12)
	S14= GPR[rt]=b                                              GPR-Hold(S3,S12)

ID	S15= IR_ID.Out25_21=rs                                      IR-Out(S11)
	S16= IR_ID.Out20_16=rt                                      IR-Out(S11)
	S17= FU.OutID1=>A_EX.In                                     Premise(F252)
	S18= FU.OutID2=>B_EX.In                                     Premise(F254)
	S19= GPR.Rdata1=>FU.InID1                                   Premise(F299)
	S20= GPR.Rdata2=>FU.InID2                                   Premise(F301)
	S21= IR_ID.Out25_21=>GPR.RReg1                              Premise(F303)
	S22= GPR.RReg1=rs                                           Path(S15,S21)
	S23= GPR.Rdata1=a                                           GPR-Read(S22,S13)
	S24= FU.InID1=a                                             Path(S23,S19)
	S25= FU.OutID1=FU(a)                                        FU-Forward(S24)
	S26= A_EX.In=FU(a)                                          Path(S25,S17)
	S27= IR_ID.Out20_16=>GPR.RReg2                              Premise(F304)
	S28= GPR.RReg2=rt                                           Path(S16,S27)
	S29= GPR.Rdata2=b                                           GPR-Read(S28,S14)
	S30= FU.InID2=b                                             Path(S29,S20)
	S31= FU.OutID2=FU(b)                                        FU-Forward(S30)
	S32= B_EX.In=FU(b)                                          Path(S31,S18)
	S33= CtrlA_EX=1                                             Premise(F344)
	S34= [A_EX]=FU(a)                                           A_EX-Write(S26,S33)
	S35= CtrlB_EX=1                                             Premise(F347)
	S36= [B_EX]=FU(b)                                           B_EX-Write(S32,S35)

EX	S37= A_EX.Out=FU(a)                                         A_EX-Out(S34)
	S38= B_EX.Out=FU(b)                                         B_EX-Out(S36)
	S39= A_EX.Out=>CMPU.A                                       Premise(F379)
	S40= CMPU.A=FU(a)                                           Path(S37,S39)
	S41= B_EX.Out=>CMPU.B                                       Premise(F380)
	S42= CMPU.B=FU(b)                                           Path(S38,S41)
	S43= CMPU.zero=CompareS(FU(a),FU(b))                        CMPU-CMPS(S40,S42)
	S44= CMPU.zero=>ConditionReg_MEM.In                         Premise(F412)
	S45= ConditionReg_MEM.In=CompareS(FU(a),FU(b))              Path(S43,S44)
	S46= CtrlConditionReg_MEM=1                                 Premise(F483)
	S47= [ConditionReg_MEM]=CompareS(FU(a),FU(b))               ConditionReg_MEM-Write(S45,S46)

MEM	S48= ConditionReg_MEM.Out=CompareS(FU(a),FU(b))             ConditionReg_MEM-Out(S47)
	S49= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In            Premise(F535)
	S50= ConditionReg_DMMU1.In=CompareS(FU(a),FU(b))            Path(S48,S49)
	S51= CtrlConditionReg_DMMU1=1                               Premise(F609)
	S52= [ConditionReg_DMMU1]=CompareS(FU(a),FU(b))             ConditionReg_DMMU1-Write(S50,S51)

DMMU1	S53= ConditionReg_DMMU1.Out=CompareS(FU(a),FU(b))           ConditionReg_DMMU1-Out(S52)
	S54= ConditionReg_DMMU1.Out=>ConditionReg_DMMU2.In          Premise(F660)
	S55= ConditionReg_DMMU2.In=CompareS(FU(a),FU(b))            Path(S53,S54)
	S56= CtrlConditionReg_DMMU2=1                               Premise(F734)
	S57= [ConditionReg_DMMU2]=CompareS(FU(a),FU(b))             ConditionReg_DMMU2-Write(S55,S56)

DMMU2	S58= ConditionReg_DMMU2.Out=CompareS(FU(a),FU(b))           ConditionReg_DMMU2-Out(S57)
	S59= ConditionReg_DMMU2.Out=>ConditionReg_WB.In             Premise(F786)
	S60= ConditionReg_WB.In=CompareS(FU(a),FU(b))               Path(S58,S59)
	S61= CtrlConditionReg_WB=1                                  Premise(F859)
	S62= [ConditionReg_WB]=CompareS(FU(a),FU(b))                ConditionReg_WB-Write(S60,S61)

WB	S63= CtrlConditionReg_WB=0                                  Premise(F983)
	S64= [ConditionReg_WB]=CompareS(FU(a),FU(b))                ConditionReg_WB-Hold(S62,S63)

POST	S64= [ConditionReg_WB]=CompareS(FU(a),FU(b))                ConditionReg_WB-Hold(S62,S63)

