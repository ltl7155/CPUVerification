
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,rT,0,0,24}                           Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)
	S3= GPR[rT]=b                                               Premise(F5)

IF	S4= PC.Out=addr                                             PC-Out(S0)
	S5= ICache.Out=>IR.In                                       Premise(F10)
	S6= PC.Out=>ICache.IEA                                      Premise(F11)
	S7= ICache.IEA=addr                                         Path(S4,S6)
	S8= ICache.Out={0,rS,rT,0,0,24}                             ICache-Search(S7,S1)
	S9= IR.In={0,rS,rT,0,0,24}                                  Path(S8,S5)
	S10= CtrlPC=0                                               Premise(F19)
	S11= CtrlPCInc=1                                            Premise(F20)
	S12= PC[Out]=addr+4                                         PC-Inc(S0,S10,S11)
	S13= CtrlIR=1                                               Premise(F23)
	S14= [IR]={0,rS,rT,0,0,24}                                  IR-Write(S9,S13)
	S15= CtrlGPR=0                                              Premise(F27)
	S16= GPR[rS]=a                                              GPR-Hold(S2,S15)
	S17= GPR[rT]=b                                              GPR-Hold(S3,S15)

ID	S18= IR.Out25_21=rS                                         IR-Out(S14)
	S19= IR.Out20_16=rT                                         IR-Out(S14)
	S20= IR.Out25_21=>GPR.RReg1                                 Premise(F51)
	S21= GPR.RReg1=rS                                           Path(S18,S20)
	S22= GPR.Rdata1=a                                           GPR-Read(S21,S16)
	S23= IR.Out20_16=>GPR.RReg2                                 Premise(F52)
	S24= GPR.RReg2=rT                                           Path(S19,S23)
	S25= GPR.Rdata2=b                                           GPR-Read(S24,S17)
	S26= GPR.Rdata1=>A.In                                       Premise(F54)
	S27= A.In=a                                                 Path(S22,S26)
	S28= GPR.Rdata2=>B.In                                       Premise(F55)
	S29= B.In=b                                                 Path(S25,S28)
	S30= CtrlPC=0                                               Premise(F61)
	S31= CtrlPCInc=0                                            Premise(F62)
	S32= PC[Out]=addr+4                                         PC-Hold(S12,S30,S31)
	S33= CtrlA=1                                                Premise(F70)
	S34= [A]=a                                                  A-Write(S27,S33)
	S35= CtrlB=1                                                Premise(F71)
	S36= [B]=b                                                  B-Write(S29,S35)

EX	S37= A.Out=a                                                A-Out(S34)
	S38= B.Out=b                                                B-Out(S36)
	S39= A.Out=>MDU.A                                           Premise(F74)
	S40= MDU.A=a                                                Path(S37,S39)
	S41= B.Out=>MDU.B                                           Premise(F75)
	S42= MDU.B=b                                                Path(S38,S41)
	S43= MDU.lo=(a×b)[31:0]                                     MDU(S40,S42)
	S44= MDU.hi=(a×b)[63:32]                                    MDU(S40,S42)
	S45= MDU.hi=>Hi.In                                          Premise(F77)
	S46= Hi.In=(a×b)[63:32]                                     Path(S44,S45)
	S47= MDU.lo=>Lo.In                                          Premise(F78)
	S48= Lo.In=(a×b)[31:0]                                      Path(S43,S47)
	S49= CtrlPC=0                                               Premise(F84)
	S50= CtrlPCInc=0                                            Premise(F85)
	S51= PC[Out]=addr+4                                         PC-Hold(S32,S49,S50)
	S52= CtrlHi=1                                               Premise(F95)
	S53= [Hi]=(a×b)[63:32]                                      Hi-Write(S46,S52)
	S54= CtrlLo=1                                               Premise(F96)
	S55= [Lo]=(a×b)[31:0]                                       Lo-Write(S48,S54)

MEM	S56= CtrlPC=0                                               Premise(F102)
	S57= CtrlPCInc=0                                            Premise(F103)
	S58= PC[Out]=addr+4                                         PC-Hold(S51,S56,S57)
	S59= CtrlHi=0                                               Premise(F113)
	S60= [Hi]=(a×b)[63:32]                                      Hi-Hold(S53,S59)
	S61= CtrlLo=0                                               Premise(F114)
	S62= [Lo]=(a×b)[31:0]                                       Lo-Hold(S55,S61)

WB	S63= CtrlPC=0                                               Premise(F156)
	S64= CtrlPCInc=0                                            Premise(F157)
	S65= PC[Out]=addr+4                                         PC-Hold(S58,S63,S64)
	S66= CtrlHi=0                                               Premise(F167)
	S67= [Hi]=(a×b)[63:32]                                      Hi-Hold(S60,S66)
	S68= CtrlLo=0                                               Premise(F168)
	S69= [Lo]=(a×b)[31:0]                                       Lo-Hold(S62,S68)

POST	S65= PC[Out]=addr+4                                         PC-Hold(S58,S63,S64)
	S67= [Hi]=(a×b)[63:32]                                      Hi-Hold(S60,S66)
	S69= [Lo]=(a×b)[31:0]                                       Lo-Hold(S62,S68)

