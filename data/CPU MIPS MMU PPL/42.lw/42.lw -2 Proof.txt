
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={35,rS,rT,offset}                      Premise(F2)
	S3= GPR[rS]=base                                            Premise(F3)
	S4= DCache[FU(base)+{16{offset[15]},offset}]=a              Premise(F5)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= IMMU.Addr=>IAddrReg.In                                  Premise(F66)
	S8= PC.Out=>IMMU.IEA                                        Premise(F72)
	S9= IMMU.IEA=addr                                           Path(S6,S8)
	S10= CP0.ASID=>IMMU.PID                                     Premise(F73)
	S11= IMMU.PID=pid                                           Path(S5,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S11,S9)
	S13= IAddrReg.In={pid,addr}                                 Path(S12,S7)
	S14= CtrlDCache=0                                           Premise(F122)
	S15= DCache[FU(base)+{16{offset[15]},offset}]=a             DCache-Hold(S4,S14)
	S16= CtrlGPR=0                                              Premise(F147)
	S17= GPR[rS]=base                                           GPR-Hold(S3,S16)
	S18= CtrlIAddrReg=1                                         Premise(F148)
	S19= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S18)
	S20= CtrlPC=0                                               Premise(F149)
	S21= CtrlPCInc=0                                            Premise(F150)
	S22= PC[Out]=addr                                           PC-Hold(S1,S20,S21)
	S23= CtrlIMem=0                                             Premise(F151)
	S24= IMem[{pid,addr}]={35,rS,rT,offset}                     IMem-Hold(S2,S23)

IMMU	S25= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S19)
	S26= PC.Out=addr                                            PC-Out(S22)
	S27= PC.Out=>ICache.IEA                                     Premise(F214)
	S28= ICache.IEA=addr                                        Path(S26,S27)
	S29= IMem.MEM8WordOut=>ICache.WData                         Premise(F216)
	S30= IAddrReg.Out=>IMem.RAddr                               Premise(F221)
	S31= IMem.RAddr={pid,addr}                                  Path(S25,S30)
	S32= IMem.Out={35,rS,rT,offset}                             IMem-Read(S31,S24)
	S33= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S31,S24)
	S34= ICache.WData=IMemGet8Word({pid,addr})                  Path(S33,S29)
	S35= IMem.Out=>IRMux.MemData                                Premise(F224)
	S36= IRMux.MemData={35,rS,rT,offset}                        Path(S32,S35)
	S37= IRMux.Out={35,rS,rT,offset}                            IRMux-Select2(S36)
	S38= IRMux.Out=>IR_ID.In                                    Premise(F229)
	S39= IR_ID.In={35,rS,rT,offset}                             Path(S37,S38)
	S40= CtrlDCache=0                                           Premise(F269)
	S41= DCache[FU(base)+{16{offset[15]},offset}]=a             DCache-Hold(S15,S40)
	S42= CtrlICache=1                                           Premise(F270)
	S43= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S28,S34,S42)
	S44= CtrlIR_ID=1                                            Premise(F290)
	S45= [IR_ID]={35,rS,rT,offset}                              IR_ID-Write(S39,S44)
	S46= CtrlGPR=0                                              Premise(F294)
	S47= GPR[rS]=base                                           GPR-Hold(S17,S46)
	S48= CtrlPC=0                                               Premise(F296)
	S49= CtrlPCInc=1                                            Premise(F297)
	S50= PC[Out]=addr+4                                         PC-Inc(S22,S48,S49)

ID	S51= IR_ID.Out={35,rS,rT,offset}                            IR-Out(S45)
	S52= IR_ID.Out25_21=rS                                      IR-Out(S45)
	S53= IR_ID.Out15_0=offset                                   IR-Out(S45)
	S54= FU.OutID1=>A_EX.In                                     Premise(F306)
	S55= IMMEXT.Out=>B_EX.In                                    Premise(F308)
	S56= GPR.Rdata1=>FU.InID1                                   Premise(F352)
	S57= IR_ID.Out25_21=>GPR.RReg1                              Premise(F358)
	S58= GPR.RReg1=rS                                           Path(S52,S57)
	S59= GPR.Rdata1=base                                        GPR-Read(S58,S47)
	S60= FU.InID1=base                                          Path(S59,S56)
	S61= FU.OutID1=FU(base)                                     FU-Forward(S60)
	S62= A_EX.In=FU(base)                                       Path(S61,S54)
	S63= IR_ID.Out15_0=>IMMEXT.In                               Premise(F366)
	S64= IMMEXT.In=offset                                       Path(S53,S63)
	S65= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S64)
	S66= B_EX.In={16{offset[15]},offset}                        Path(S65,S55)
	S67= IR_ID.Out=>IR_EX.In                                    Premise(F375)
	S68= IR_EX.In={35,rS,rT,offset}                             Path(S51,S67)
	S69= CtrlA_EX=1                                             Premise(F407)
	S70= [A_EX]=FU(base)                                        A_EX-Write(S62,S69)
	S71= CtrlB_EX=1                                             Premise(F408)
	S72= [B_EX]={16{offset[15]},offset}                         B_EX-Write(S66,S71)
	S73= CtrlDCache=0                                           Premise(F417)
	S74= DCache[FU(base)+{16{offset[15]},offset}]=a             DCache-Hold(S41,S73)
	S75= CtrlICache=0                                           Premise(F418)
	S76= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S43,S75)
	S77= CtrlIR_EX=1                                            Premise(F437)
	S78= [IR_EX]={35,rS,rT,offset}                              IR_EX-Write(S68,S77)
	S79= CtrlPC=0                                               Premise(F444)
	S80= CtrlPCInc=0                                            Premise(F445)
	S81= PC[Out]=addr+4                                         PC-Hold(S50,S79,S80)

EX	S82= A_EX.Out=FU(base)                                      A_EX-Out(S70)
	S83= B_EX.Out={16{offset[15]},offset}                       B_EX-Out(S72)
	S84= IR_EX.Out={35,rS,rT,offset}                            IR_EX-Out(S78)
	S85= A_EX.Out=>ALU.A                                        Premise(F449)
	S86= ALU.A=FU(base)                                         Path(S82,S85)
	S87= B_EX.Out=>ALU.B                                        Premise(F450)
	S88= ALU.B={16{offset[15]},offset}                          Path(S83,S87)
	S89= ALU.Out=FU(base)+{16{offset[15]},offset}               ALU(S86,S88)
	S90= ALU.Out=>ALUOut_MEM.In                                 Premise(F453)
	S91= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}         Path(S89,S90)
	S92= IR_EX.Out=>IR_MEM.In                                   Premise(F527)
	S93= IR_MEM.In={35,rS,rT,offset}                            Path(S84,S92)
	S94= CtrlALUOut_MEM=1                                       Premise(F557)
	S95= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}          ALUOut_MEM-Write(S91,S94)
	S96= CtrlDCache=0                                           Premise(F565)
	S97= DCache[FU(base)+{16{offset[15]},offset}]=a             DCache-Hold(S74,S96)
	S98= CtrlICache=0                                           Premise(F566)
	S99= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S76,S98)
	S100= CtrlIR_MEM=1                                          Premise(F588)
	S101= [IR_MEM]={35,rS,rT,offset}                            IR_MEM-Write(S93,S100)
	S102= CtrlPC=0                                              Premise(F592)
	S103= CtrlPCInc=0                                           Premise(F593)
	S104= PC[Out]=addr+4                                        PC-Hold(S81,S102,S103)

MEM	S105= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}       ALUOut_MEM-Out(S95)
	S106= IR_MEM.Out={35,rS,rT,offset}                          IR_MEM-Out(S101)
	S107= ALUOut_MEM.Out=>ALUOut_WB.In                          Premise(F601)
	S108= ALUOut_WB.In=FU(base)+{16{offset[15]},offset}         Path(S105,S107)
	S109= ALUOut_MEM.Out=>DCache.IEA                            Premise(F634)
	S110= DCache.IEA=FU(base)+{16{offset[15]},offset}           Path(S105,S109)
	S111= DCache.Out=a                                          DCache-Search(S110,S97)
	S112= DCache.Out=>DR_WB.In                                  Premise(F639)
	S113= DR_WB.In=a                                            Path(S111,S112)
	S114= IR_MEM.Out=>IR_WB.In                                  Premise(F675)
	S115= IR_WB.In={35,rS,rT,offset}                            Path(S106,S114)
	S116= CtrlALUOut_WB=1                                       Premise(F707)
	S117= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}          ALUOut_WB-Write(S108,S116)
	S118= CtrlICache=0                                          Premise(F713)
	S119= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S99,S118)
	S120= CtrlDR_WB=1                                           Premise(F729)
	S121= [DR_WB]=a                                             DR_WB-Write(S113,S120)
	S122= CtrlIR_WB=1                                           Premise(F736)
	S123= [IR_WB]={35,rS,rT,offset}                             IR_WB-Write(S115,S122)
	S124= CtrlPC=0                                              Premise(F739)
	S125= CtrlPCInc=0                                           Premise(F740)
	S126= PC[Out]=addr+4                                        PC-Hold(S104,S124,S125)

WB	S127= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S117)
	S128= DR_WB.Out=a                                           DR_WB-Out(S121)
	S129= IR_WB.Out20_16=rT                                     IR-Out(S123)
	S130= MemDataSelL.Out=>GPR.WData                            Premise(F1095)
	S131= IR_WB.Out20_16=>GPR.WReg                              Premise(F1096)
	S132= GPR.WReg=rT                                           Path(S129,S131)
	S133= ALUOut_WB.Out1_0=>MemDataSelL.Addr                    Premise(F1117)
	S134= MemDataSelL.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S127,S133)
	S135= DR_WB.Out=>MemDataSelL.In                             Premise(F1119)
	S136= MemDataSelL.In=a                                      Path(S128,S135)
	S137= MemDataSelL.Out=a                                     MemDataSelL(S136,S134)
	S138= GPR.WData=a                                           Path(S137,S130)
	S139= CtrlICache=0                                          Premise(F1155)
	S140= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S119,S139)
	S141= CtrlGPR=1                                             Premise(F1179)
	S142= GPR[rT]=a                                             GPR-Write(S132,S138,S141)
	S143= CtrlPC=0                                              Premise(F1181)
	S144= CtrlPCInc=0                                           Premise(F1182)
	S145= PC[Out]=addr+4                                        PC-Hold(S126,S143,S144)

POST	S140= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S119,S139)
	S142= GPR[rT]=a                                             GPR-Write(S132,S138,S141)
	S145= PC[Out]=addr+4                                        PC-Hold(S126,S143,S144)

