
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,cc,0,1,rD,0,1}                   Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={0,rS,cc,0,1,rD,0,1}                          IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR_ID.In                                     Premise(F7)
	S12= IR_ID.In={0,rS,cc,0,1,rD,0,1}                          Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F46)
	S14= CtrlPCInc=1                                            Premise(F47)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR_ID=1                                            Premise(F53)
	S17= [IR_ID]={0,rS,cc,0,1,rD,0,1}                           IR_ID-Write(S12,S16)
	S18= CtrlGPR=0                                              Premise(F54)
	S19= GPR[rS]=a                                              GPR-Hold(S3,S18)

ID	S20= IR_ID.Out={0,rS,cc,0,1,rD,0,1}                         IR-Out(S17)
	S21= IR_ID.Out25_21=rS                                      IR-Out(S17)
	S22= IR_ID.Out25_21=>GPR.RReg1                              Premise(F72)
	S23= GPR.RReg1=rS                                           Path(S21,S22)
	S24= GPR.Rdata1=a                                           GPR-Read(S23,S19)
	S25= GPR.Rdata1=>FU.InID1                                   Premise(F74)
	S26= FU.InID1=a                                             Path(S24,S25)
	S27= FU.OutID1=FU(a)                                        FU-Forward(S26)
	S28= FU.OutID1=>A_EX.In                                     Premise(F76)
	S29= A_EX.In=FU(a)                                          Path(S27,S28)
	S30= IR_ID.Out=>IR_EX.In                                    Premise(F77)
	S31= IR_EX.In={0,rS,cc,0,1,rD,0,1}                          Path(S20,S30)
	S32= CtrlPC=0                                               Premise(F107)
	S33= CtrlPCInc=0                                            Premise(F108)
	S34= PC[Out]=addr+4                                         PC-Hold(S15,S32,S33)
	S35= CtrlA_EX=1                                             Premise(F116)
	S36= [A_EX]=FU(a)                                           A_EX-Write(S29,S35)
	S37= CtrlIR_EX=1                                            Premise(F117)
	S38= [IR_EX]={0,rS,cc,0,1,rD,0,1}                           IR_EX-Write(S31,S37)

EX	S39= A_EX.Out=FU(a)                                         A_EX-Out(S36)
	S40= IR_EX.Out={0,rS,cc,0,1,rD,0,1}                         IR_EX-Out(S38)
	S41= IR_EX.Out20_18=cc                                      IR_EX-Out(S38)
	S42= IR_EX.Out16=1                                          IR_EX-Out(S38)
	S43= IR_EX.Out20_18=>CP1.cc                                 Premise(F144)
	S44= CP1.cc=cc                                              Path(S41,S43)
	S45= IR_EX.Out16=>CP1.tf                                    Premise(F145)
	S46= CP1.tf=1                                               Path(S42,S45)
	S47= CP1.fp=FPConditionCode(cc,1)                           FP-PRODUCT(S44,S46)
	S48= CP1.fp=>ConditionReg_MEM.In                            Premise(F146)
	S49= ConditionReg_MEM.In=FPConditionCode(cc,1)              Path(S47,S48)
	S50= A_EX.Out=>ALUOut_MEM.In                                Premise(F147)
	S51= ALUOut_MEM.In=FU(a)                                    Path(S39,S50)
	S52= IR_EX.Out=>IR_MEM.In                                   Premise(F150)
	S53= IR_MEM.In={0,rS,cc,0,1,rD,0,1}                         Path(S40,S52)
	S54= CtrlPC=0                                               Premise(F167)
	S55= CtrlPCInc=0                                            Premise(F168)
	S56= PC[Out]=addr+4                                         PC-Hold(S34,S54,S55)
	S57= CtrlConditionReg_MEM=1                                 Premise(F179)
	S58= [ConditionReg_MEM]=FPConditionCode(cc,1)               ConditionReg_MEM-Write(S49,S57)
	S59= CtrlALUOut_MEM=1                                       Premise(F180)
	S60= [ALUOut_MEM]=FU(a)                                     ALUOut_MEM-Write(S51,S59)
	S61= CtrlIR_MEM=1                                           Premise(F181)
	S62= [IR_MEM]={0,rS,cc,0,1,rD,0,1}                          IR_MEM-Write(S53,S61)

MEM	S63= ConditionReg_MEM.Out=FPConditionCode(cc,1)             ConditionReg_MEM-Out(S58)
	S64= ALUOut_MEM.Out=FU(a)                                   ALUOut_MEM-Out(S60)
	S65= IR_MEM.Out={0,rS,cc,0,1,rD,0,1}                        IR_MEM-Out(S62)
	S66= IR_MEM.Out=>IR_WB.In                                   Premise(F214)
	S67= IR_WB.In={0,rS,cc,0,1,rD,0,1}                          Path(S65,S66)
	S68= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F215)
	S69= ALUOut_WB.In=FU(a)                                     Path(S64,S68)
	S70= ConditionReg_MEM.Out=>ConditionReg_WB.In               Premise(F218)
	S71= ConditionReg_WB.In=FPConditionCode(cc,1)               Path(S63,S70)
	S72= CtrlPC=0                                               Premise(F227)
	S73= CtrlPCInc=0                                            Premise(F228)
	S74= PC[Out]=addr+4                                         PC-Hold(S56,S72,S73)
	S75= CtrlIR_WB=1                                            Premise(F242)
	S76= [IR_WB]={0,rS,cc,0,1,rD,0,1}                           IR_WB-Write(S67,S75)
	S77= CtrlALUOut_WB=1                                        Premise(F243)
	S78= [ALUOut_WB]=FU(a)                                      ALUOut_WB-Write(S69,S77)
	S79= CtrlConditionReg_WB=1                                  Premise(F244)
	S80= [ConditionReg_WB]=FPConditionCode(cc,1)                ConditionReg_WB-Write(S71,S79)

WB	S81= IR_WB.Out15_11=rD                                      IR-Out(S76)
	S82= ALUOut_WB.Out=FU(a)                                    ALUOut_WB-Out(S78)
	S83= IR_WB.Out15_11=>GPR.WReg                               Premise(F282)
	S84= GPR.WReg=rD                                            Path(S81,S83)
	S85= ALUOut_WB.Out=>GPR.WData                               Premise(F283)
	S86= GPR.WData=FU(a)                                        Path(S82,S85)
	S87= CtrlPC=0                                               Premise(F287)
	S88= CtrlPCInc=0                                            Premise(F288)
	S89= PC[Out]=addr+4                                         PC-Hold(S74,S87,S88)
	S90= CtrlGPR=1                                              Premise(F295)
	S91= GPR[rD]=FU(a)                                          GPR-Write(S84,S86,S90)
	S92= CtrlConditionReg_WB=0                                  Premise(F304)
	S93= [ConditionReg_WB]=FPConditionCode(cc,1)                ConditionReg_WB-Hold(S80,S92)

POST	S89= PC[Out]=addr+4                                         PC-Hold(S74,S87,S88)
	S91= GPR[rD]=FU(a)                                          GPR-Write(S84,S86,S90)
	S93= [ConditionReg_WB]=FPConditionCode(cc,1)                ConditionReg_WB-Hold(S80,S92)

