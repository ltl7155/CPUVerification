
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,0,rD,hint,9}                         Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)

IF	S3= PC.Out=addr                                             PC-Out(S0)
	S4= PC.Out=>ICache.IEA                                      Premise(F9)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={0,rS,0,rD,hint,9}                           ICache-Search(S5,S1)
	S7= ICache.Out=>IR.In                                       Premise(F10)
	S8= IR.In={0,rS,0,rD,hint,9}                                Path(S6,S7)
	S9= CtrlPC=0                                                Premise(F18)
	S10= CtrlPCInc=1                                            Premise(F19)
	S11= PC[Out]=addr+4                                         PC-Inc(S0,S9,S10)
	S12= CtrlIR=1                                               Premise(F22)
	S13= [IR]={0,rS,0,rD,hint,9}                                IR-Write(S8,S12)
	S14= CtrlGPR=0                                              Premise(F26)
	S15= GPR[rS]=a                                              GPR-Hold(S2,S14)

ID	S16= PC.Out=addr+4                                          PC-Out(S11)
	S17= IR.Out25_21=rS                                         IR-Out(S13)
	S18= IR.Out15_11=rD                                         IR-Out(S13)
	S19= IR.Out15_11=>GPR.WReg                                  Premise(F43)
	S20= GPR.WReg=rD                                            Path(S18,S19)
	S21= PC.Out=>GPR.WData                                      Premise(F44)
	S22= GPR.WData=addr+4                                       Path(S16,S21)
	S23= IR.Out25_21=>GPR.RReg1                                 Premise(F45)
	S24= GPR.RReg1=rS                                           Path(S17,S23)
	S25= GPR.Rdata1=a                                           GPR-Read(S24,S15)
	S26= GPR.Rdata1=>PC.In                                      Premise(F46)
	S27= PC.In=a                                                Path(S25,S26)
	S28= CtrlPC=1                                               Premise(F52)
	S29= CtrlPCInc=0                                            Premise(F53)
	S30= PC[Out]=a                                              PC-Write(S27,S28,S29)
	S31= CtrlGPR=1                                              Premise(F60)
	S32= GPR[rD]=addr+4                                         GPR-Write(S20,S22,S31)

EX	S33= CtrlPC=0                                               Premise(F66)
	S34= CtrlPCInc=0                                            Premise(F67)
	S35= PC[Out]=a                                              PC-Hold(S30,S33,S34)
	S36= CtrlGPR=0                                              Premise(F74)
	S37= GPR[rD]=addr+4                                         GPR-Hold(S32,S36)

MEM	S38= CtrlPC=0                                               Premise(F80)
	S39= CtrlPCInc=0                                            Premise(F81)
	S40= PC[Out]=a                                              PC-Hold(S35,S38,S39)
	S41= CtrlGPR=0                                              Premise(F88)
	S42= GPR[rD]=addr+4                                         GPR-Hold(S37,S41)

WB	S43= CtrlPC=0                                               Premise(F122)
	S44= CtrlPCInc=0                                            Premise(F123)
	S45= PC[Out]=a                                              PC-Hold(S40,S43,S44)
	S46= CtrlGPR=0                                              Premise(F130)
	S47= GPR[rD]=addr+4                                         GPR-Hold(S42,S46)

POST	S45= PC[Out]=a                                              PC-Hold(S40,S43,S44)
	S47= GPR[rD]=addr+4                                         GPR-Hold(S42,S46)

