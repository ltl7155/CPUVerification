
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={40,rS,rT,offset}                          Premise(F3)
	S2= GPR[rS]=base                                            Premise(F4)
	S3= GPR[rT]=a                                               Premise(F5)

IF	S4= PC.Out=addr                                             PC-Out(S0)
	S5= PC.Out=>ICache.IEA                                      Premise(F10)
	S6= ICache.IEA=addr                                         Path(S4,S5)
	S7= ICache.Out={40,rS,rT,offset}                            ICache-Search(S6,S1)
	S8= ICache.Out=>IR_ID.In                                    Premise(F14)
	S9= IR_ID.In={40,rS,rT,offset}                              Path(S7,S8)
	S10= CtrlPC=0                                               Premise(F27)
	S11= CtrlPCInc=1                                            Premise(F28)
	S12= PC[Out]=addr+4                                         PC-Inc(S0,S10,S11)
	S13= CtrlIR_ID=1                                            Premise(F33)
	S14= [IR_ID]={40,rS,rT,offset}                              IR_ID-Write(S9,S13)
	S15= CtrlGPR=0                                              Premise(F36)
	S16= GPR[rS]=base                                           GPR-Hold(S2,S15)
	S17= GPR[rT]=a                                              GPR-Hold(S3,S15)

ID	S18= IR_ID.Out={40,rS,rT,offset}                            IR-Out(S14)
	S19= IR_ID.Out25_21=rS                                      IR-Out(S14)
	S20= IR_ID.Out15_0=offset                                   IR-Out(S14)
	S21= IR_ID.Out25_21=>GPR.RReg1                              Premise(F110)
	S22= GPR.RReg1=rS                                           Path(S19,S21)
	S23= GPR.Rdata1=base                                        GPR-Read(S22,S16)
	S24= IR_ID.Out15_0=>IMMEXT.In                               Premise(F111)
	S25= IMMEXT.In=offset                                       Path(S20,S24)
	S26= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S25)
	S27= GPR.Rdata1=>FU.InID1                                   Premise(F112)
	S28= FU.InID1=base                                          Path(S23,S27)
	S29= FU.OutID1=FU(base)                                     FU-Forward(S28)
	S30= FU.OutID1=>A_EX.In                                     Premise(F114)
	S31= A_EX.In=FU(base)                                       Path(S29,S30)
	S32= IMMEXT.Out=>B_EX.In                                    Premise(F115)
	S33= B_EX.In={16{offset[15]},offset}                        Path(S26,S32)
	S34= IR_ID.Out=>IR_EX.In                                    Premise(F116)
	S35= IR_EX.In={40,rS,rT,offset}                             Path(S18,S34)
	S36= CtrlPC=0                                               Premise(F125)
	S37= CtrlPCInc=0                                            Premise(F126)
	S38= PC[Out]=addr+4                                         PC-Hold(S12,S36,S37)
	S39= CtrlGPR=0                                              Premise(F134)
	S40= GPR[rT]=a                                              GPR-Hold(S17,S39)
	S41= CtrlA_EX=1                                             Premise(F135)
	S42= [A_EX]=FU(base)                                        A_EX-Write(S31,S41)
	S43= CtrlB_EX=1                                             Premise(F136)
	S44= [B_EX]={16{offset[15]},offset}                         B_EX-Write(S33,S43)
	S45= CtrlIR_EX=1                                            Premise(F137)
	S46= [IR_EX]={40,rS,rT,offset}                              IR_EX-Write(S35,S45)

EX	S47= A_EX.Out=FU(base)                                      A_EX-Out(S42)
	S48= B_EX.Out={16{offset[15]},offset}                       B_EX-Out(S44)
	S49= IR_EX.Out20_16=rT                                      IR_EX-Out(S46)
	S50= A_EX.Out=>ALU.A                                        Premise(F166)
	S51= ALU.A=FU(base)                                         Path(S47,S50)
	S52= B_EX.Out=>ALU.B                                        Premise(F167)
	S53= ALU.B={16{offset[15]},offset}                          Path(S48,S52)
	S54= ALU.Out=FU(base)+{16{offset[15]},offset}               ALU(S51,S53)
	S55= ALU.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]     ALU(S51,S53)
	S56= ALU.Out=>ALUOut_MEM.In                                 Premise(F169)
	S57= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}         Path(S54,S56)
	S58= IR_EX.Out20_16=>GPR.RReg2                              Premise(F170)
	S59= GPR.RReg2=rT                                           Path(S49,S58)
	S60= GPR.Rdata2=a                                           GPR-Read(S59,S40)
	S61= GPR.Rdata2=>MemDataSelS.In                             Premise(F171)
	S62= MemDataSelS.In=a                                       Path(S60,S61)
	S63= ALU.Out1_0=>MemDataSelS.Addr                           Premise(F172)
	S64= MemDataSelS.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S55,S63)
	S65= MemDataSelS.Out={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}MemDataSelS(S62,S64)
	S66= MemDataSelS.Out=>DR_MEM.In                             Premise(F174)
	S67= DR_MEM.In={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}Path(S65,S66)
	S68= CtrlPC=0                                               Premise(F182)
	S69= CtrlPCInc=0                                            Premise(F183)
	S70= PC[Out]=addr+4                                         PC-Hold(S38,S68,S69)
	S71= CtrlALUOut_MEM=1                                       Premise(F195)
	S72= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}          ALUOut_MEM-Write(S57,S71)
	S73= CtrlDR_MEM=1                                           Premise(F196)
	S74= [DR_MEM]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_MEM-Write(S67,S73)

MEM	S75= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}        ALUOut_MEM-Out(S72)
	S76= DR_MEM.Out={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_MEM-Out(S74)
	S77= ALUOut_MEM.Out=>DCache.IEA                             Premise(F229)
	S78= DCache.IEA=FU(base)+{16{offset[15]},offset}            Path(S75,S77)
	S79= DR_MEM.Out=>DCache.In                                  Premise(F231)
	S80= DCache.In={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}Path(S76,S79)
	S81= CtrlPC=0                                               Premise(F251)
	S82= CtrlPCInc=0                                            Premise(F252)
	S83= PC[Out]=addr+4                                         PC-Hold(S70,S81,S82)
	S84= CtrlDCache=1                                           Premise(F269)
	S85= DCache[FU(base)+{16{offset[15]},offset}]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Write(S78,S80,S84)

MEM(DMMU1)	S86= CtrlPC=0                                               Premise(F305)
	S87= CtrlPCInc=0                                            Premise(F306)
	S88= PC[Out]=addr+4                                         PC-Hold(S83,S86,S87)
	S89= CtrlDCache=0                                           Premise(F323)
	S90= DCache[FU(base)+{16{offset[15]},offset}]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Hold(S85,S89)

MEM(DMMU2)	S91= CtrlPC=0                                               Premise(F357)
	S92= CtrlPCInc=0                                            Premise(F358)
	S93= PC[Out]=addr+4                                         PC-Hold(S88,S91,S92)
	S94= CtrlDCache=0                                           Premise(F375)
	S95= DCache[FU(base)+{16{offset[15]},offset}]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Hold(S90,S94)

WB	S96= CtrlPC=0                                               Premise(F402)
	S97= CtrlPCInc=0                                            Premise(F403)
	S98= PC[Out]=addr+4                                         PC-Hold(S93,S96,S97)
	S99= CtrlDCache=0                                           Premise(F420)
	S100= DCache[FU(base)+{16{offset[15]},offset}]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Hold(S95,S99)

POST	S98= PC[Out]=addr+4                                         PC-Hold(S93,S96,S97)
	S100= DCache[FU(base)+{16{offset[15]},offset}]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Hold(S95,S99)

