
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,rT,rD,0,32}                          Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)
	S3= GPR[rT]=b                                               Premise(F5)

IF	S4= PC.Out=addr                                             PC-Out(S0)
	S5= PC.Out=>ICache.IEA                                      Premise(F10)
	S6= ICache.IEA=addr                                         Path(S4,S5)
	S7= ICache.Out={0,rS,rT,rD,0,32}                            ICache-Search(S6,S1)
	S8= ICache.Out=>IR.In                                       Premise(F11)
	S9= IR.In={0,rS,rT,rD,0,32}                                 Path(S7,S8)
	S10= CtrlPC=0                                               Premise(F19)
	S11= CtrlPCInc=1                                            Premise(F20)
	S12= PC[Out]=addr+4                                         PC-Inc(S0,S10,S11)
	S13= CtrlIR=1                                               Premise(F23)
	S14= [IR]={0,rS,rT,rD,0,32}                                 IR-Write(S9,S13)
	S15= CtrlGPR=0                                              Premise(F27)
	S16= GPR[rS]=a                                              GPR-Hold(S2,S15)
	S17= GPR[rT]=b                                              GPR-Hold(S3,S15)

ID	S18= IR.Out25_21=rS                                         IR-Out(S14)
	S19= IR.Out20_16=rT                                         IR-Out(S14)
	S20= IR.Out25_21=>GPR.RReg1                                 Premise(F51)
	S21= GPR.RReg1=rS                                           Path(S18,S20)
	S22= GPR.Rdata1=a                                           GPR-Read(S21,S16)
	S23= IR.Out20_16=>GPR.RReg2                                 Premise(F52)
	S24= GPR.RReg2=rT                                           Path(S19,S23)
	S25= GPR.Rdata2=b                                           GPR-Read(S24,S17)
	S26= GPR.Rdata1=>A.In                                       Premise(F54)
	S27= A.In=a                                                 Path(S22,S26)
	S28= GPR.Rdata2=>B.In                                       Premise(F55)
	S29= B.In=b                                                 Path(S25,S28)
	S30= CtrlPC=0                                               Premise(F61)
	S31= CtrlPCInc=0                                            Premise(F62)
	S32= PC[Out]=addr+4                                         PC-Hold(S12,S30,S31)
	S33= CtrlIR=0                                               Premise(F65)
	S34= [IR]={0,rS,rT,rD,0,32}                                 IR-Hold(S14,S33)
	S35= CtrlA=1                                                Premise(F70)
	S36= [A]=a                                                  A-Write(S27,S35)
	S37= CtrlB=1                                                Premise(F71)
	S38= [B]=b                                                  B-Write(S29,S37)

EX	S39= A.Out=a                                                A-Out(S36)
	S40= B.Out=b                                                B-Out(S38)
	S41= A.Out=>ALU.A                                           Premise(F74)
	S42= ALU.A=a                                                Path(S39,S41)
	S43= B.Out=>ALU.B                                           Premise(F75)
	S44= ALU.B=b                                                Path(S40,S43)
	S45= ALU.Out=a+b                                            ALU(S42,S44)
	S46= ALU.Out=>ALUOut.In                                     Premise(F77)
	S47= ALUOut.In=a+b                                          Path(S45,S46)
	S48= CtrlPC=0                                               Premise(F84)
	S49= CtrlPCInc=0                                            Premise(F85)
	S50= PC[Out]=addr+4                                         PC-Hold(S32,S48,S49)
	S51= CtrlIR=0                                               Premise(F88)
	S52= [IR]={0,rS,rT,rD,0,32}                                 IR-Hold(S34,S51)
	S53= CtrlALUOut=1                                           Premise(F95)
	S54= [ALUOut]=a+b                                           ALUOut-Write(S47,S53)

MEM	S55= CtrlPC=0                                               Premise(F102)
	S56= CtrlPCInc=0                                            Premise(F103)
	S57= PC[Out]=addr+4                                         PC-Hold(S50,S55,S56)
	S58= CtrlIR=0                                               Premise(F106)
	S59= [IR]={0,rS,rT,rD,0,32}                                 IR-Hold(S52,S58)
	S60= CtrlALUOut=0                                           Premise(F113)
	S61= [ALUOut]=a+b                                           ALUOut-Hold(S54,S60)

WB	S62= IR.Out15_11=rD                                         IR-Out(S59)
	S63= ALUOut.Out=a+b                                         ALUOut-Out(S61)
	S64= IR.Out15_11=>GPR.WReg                                  Premise(F151)
	S65= GPR.WReg=rD                                            Path(S62,S64)
	S66= ALUOut.Out=>GPR.WData                                  Premise(F152)
	S67= GPR.WData=a+b                                          Path(S63,S66)
	S68= CtrlPC=0                                               Premise(F159)
	S69= CtrlPCInc=0                                            Premise(F160)
	S70= PC[Out]=addr+4                                         PC-Hold(S57,S68,S69)
	S71= CtrlGPR=1                                              Premise(F167)
	S72= GPR[rD]=a+b                                            GPR-Write(S65,S67,S71)

POST	S70= PC[Out]=addr+4                                         PC-Hold(S57,S68,S69)
	S72= GPR[rD]=a+b                                            GPR-Write(S65,S67,S71)

