
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={12,rS,rD,UIMM}                        Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= CP0.ASID=>IMMU.PID                                      Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S7,S9)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S13= IAddrReg.In={pid,addr}                                 Path(S10,S12)
	S14= IMMU.Hit=>CU.IMMUHit                                   Premise(F7)
	S15= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S11,S14)
	S16= PC.Out=>ICache.IEA                                     Premise(F8)
	S17= ICache.IEA=addr                                        Path(S5,S16)
	S18= ICache.Hit=ICacheHit(addr)                             ICache-Search(S17)
	S19= ICache.Out=>IR.In                                      Premise(F9)
	S20= ICache.Out=>ICacheReg.In                               Premise(F10)
	S21= ICache.Hit=>CU.ICacheHit                               Premise(F11)
	S22= CU.ICacheHit=ICacheHit(addr)                           Path(S18,S21)
	S23= CtrlASIDIn=0                                           Premise(F12)
	S24= CtrlCP0=0                                              Premise(F13)
	S25= CP0[ASID]=pid                                          CP0-Hold(S0,S24)
	S26= CtrlEPCIn=0                                            Premise(F14)
	S27= CtrlExCodeIn=0                                         Premise(F15)
	S28= CtrlIMMU=0                                             Premise(F16)
	S29= CtrlPC=0                                               Premise(F17)
	S30= CtrlPCInc=0                                            Premise(F18)
	S31= PC[Out]=addr                                           PC-Hold(S1,S29,S30)
	S32= CtrlIAddrReg=1                                         Premise(F19)
	S33= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S32)
	S34= CtrlICache=0                                           Premise(F20)
	S35= CtrlIR=0                                               Premise(F21)
	S36= CtrlICacheReg=1                                        Premise(F22)
	S37= CtrlIMem=0                                             Premise(F23)
	S38= IMem[{pid,addr}]={12,rS,rD,UIMM}                       IMem-Hold(S2,S37)
	S39= CtrlIRMux=0                                            Premise(F24)
	S40= CtrlGPR=0                                              Premise(F25)
	S41= GPR[rS]=a                                              GPR-Hold(S3,S40)
	S42= CtrlA=0                                                Premise(F26)
	S43= CtrlB=0                                                Premise(F27)
	S44= CtrlALUOut=0                                           Premise(F28)

IF(IMMU)	S45= CP0.ASID=pid                                           CP0-Read-ASID(S25)
	S46= PC.Out=addr                                            PC-Out(S31)
	S47= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S33)
	S48= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S33)
	S49= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S33)
	S50= CU.IMMUHit=>CU.IMMUHit                                 Premise(F29)
	S51= CU.ICacheHit=>CU.ICacheHit                             Premise(F30)
	S52= IAddrReg.Out=>IMem.RAddr                               Premise(F31)
	S53= IMem.RAddr={pid,addr}                                  Path(S47,S52)
	S54= IMem.Out={12,rS,rD,UIMM}                               IMem-Read(S53,S38)
	S55= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S53,S38)
	S56= IMem.Out=>IRMux.MemData                                Premise(F32)
	S57= IRMux.MemData={12,rS,rD,UIMM}                          Path(S54,S56)
	S58= IRMux.Out={12,rS,rD,UIMM}                              IRMux-Select2(S57)
	S59= ICacheReg.Out=>IRMux.CacheData                         Premise(F33)
	S60= CU.IMMUHit=>IRMux.MemSel                               Premise(F34)
	S61= CU.ICacheHit=>IRMux.CacheSel                           Premise(F35)
	S62= IRMux.Out=>IR.In                                       Premise(F36)
	S63= IR.In={12,rS,rD,UIMM}                                  Path(S58,S62)
	S64= IMem.MEM8WordOut=>ICache.WData                         Premise(F37)
	S65= ICache.WData=IMemGet8Word({pid,addr})                  Path(S55,S64)
	S66= PC.Out=>ICache.IEA                                     Premise(F38)
	S67= ICache.IEA=addr                                        Path(S46,S66)
	S68= ICache.Hit=ICacheHit(addr)                             ICache-Search(S67)
	S69= CtrlASIDIn=0                                           Premise(F39)
	S70= CtrlCP0=0                                              Premise(F40)
	S71= CP0[ASID]=pid                                          CP0-Hold(S25,S70)
	S72= CtrlEPCIn=0                                            Premise(F41)
	S73= CtrlExCodeIn=0                                         Premise(F42)
	S74= CtrlIMMU=0                                             Premise(F43)
	S75= CtrlPC=0                                               Premise(F44)
	S76= CtrlPCInc=1                                            Premise(F45)
	S77= PC[Out]=addr+4                                         PC-Inc(S31,S75,S76)
	S78= PC[CIA]=addr                                           PC-Inc(S31,S75,S76)
	S79= CtrlIAddrReg=0                                         Premise(F46)
	S80= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S33,S79)
	S81= CtrlICache=1                                           Premise(F47)
	S82= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S67,S65,S81)
	S83= CtrlIR=1                                               Premise(F48)
	S84= [IR]={12,rS,rD,UIMM}                                   IR-Write(S63,S83)
	S85= CtrlICacheReg=0                                        Premise(F49)
	S86= CtrlIMem=0                                             Premise(F50)
	S87= IMem[{pid,addr}]={12,rS,rD,UIMM}                       IMem-Hold(S38,S86)
	S88= CtrlIRMux=0                                            Premise(F51)
	S89= CtrlGPR=0                                              Premise(F52)
	S90= GPR[rS]=a                                              GPR-Hold(S41,S89)
	S91= CtrlA=0                                                Premise(F53)
	S92= CtrlB=0                                                Premise(F54)
	S93= CtrlALUOut=0                                           Premise(F55)

ID	S94= CP0.ASID=pid                                           CP0-Read-ASID(S71)
	S95= PC.Out=addr+4                                          PC-Out(S77)
	S96= PC.CIA=addr                                            PC-Out(S78)
	S97= PC.CIA31_28=addr[31:28]                                PC-Out(S78)
	S98= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S80)
	S99= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S80)
	S100= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S80)
	S101= IR.Out={12,rS,rD,UIMM}                                IR-Out(S84)
	S102= IR.Out31_26=12                                        IR-Out(S84)
	S103= IR.Out25_21=rS                                        IR-Out(S84)
	S104= IR.Out20_16=rD                                        IR-Out(S84)
	S105= IR.Out15_0=UIMM                                       IR-Out(S84)
	S106= IR.Out31_26=>CU.Op                                    Premise(F56)
	S107= CU.Op=12                                              Path(S102,S106)
	S108= CU.Func=alu_add                                       CU(S107)
	S109= IR.Out25_21=>GPR.RReg1                                Premise(F57)
	S110= GPR.RReg1=rS                                          Path(S103,S109)
	S111= GPR.Rdata1=a                                          GPR-Read(S110,S90)
	S112= IR.Out15_0=>LIMMEXT.In                                Premise(F58)
	S113= LIMMEXT.In=UIMM                                       Path(S105,S112)
	S114= LIMMEXT.Out={16{0},UIMM}                              LIMMEXT(S113)
	S115= GPR.Rdata1=>A.In                                      Premise(F59)
	S116= A.In=a                                                Path(S111,S115)
	S117= LIMMEXT.Out=>B.In                                     Premise(F60)
	S118= B.In={16{0},UIMM}                                     Path(S114,S117)
	S119= CtrlASIDIn=0                                          Premise(F61)
	S120= CtrlCP0=0                                             Premise(F62)
	S121= CP0[ASID]=pid                                         CP0-Hold(S71,S120)
	S122= CtrlEPCIn=0                                           Premise(F63)
	S123= CtrlExCodeIn=0                                        Premise(F64)
	S124= CtrlIMMU=0                                            Premise(F65)
	S125= CtrlPC=0                                              Premise(F66)
	S126= CtrlPCInc=0                                           Premise(F67)
	S127= PC[CIA]=addr                                          PC-Hold(S78,S126)
	S128= PC[Out]=addr+4                                        PC-Hold(S77,S125,S126)
	S129= CtrlIAddrReg=0                                        Premise(F68)
	S130= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S80,S129)
	S131= CtrlICache=0                                          Premise(F69)
	S132= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S82,S131)
	S133= CtrlIR=0                                              Premise(F70)
	S134= [IR]={12,rS,rD,UIMM}                                  IR-Hold(S84,S133)
	S135= CtrlICacheReg=0                                       Premise(F71)
	S136= CtrlIMem=0                                            Premise(F72)
	S137= IMem[{pid,addr}]={12,rS,rD,UIMM}                      IMem-Hold(S87,S136)
	S138= CtrlIRMux=0                                           Premise(F73)
	S139= CtrlGPR=0                                             Premise(F74)
	S140= GPR[rS]=a                                             GPR-Hold(S90,S139)
	S141= CtrlA=1                                               Premise(F75)
	S142= [A]=a                                                 A-Write(S116,S141)
	S143= CtrlB=1                                               Premise(F76)
	S144= [B]={16{0},UIMM}                                      B-Write(S118,S143)
	S145= CtrlALUOut=0                                          Premise(F77)

EX	S146= CP0.ASID=pid                                          CP0-Read-ASID(S121)
	S147= PC.CIA=addr                                           PC-Out(S127)
	S148= PC.CIA31_28=addr[31:28]                               PC-Out(S127)
	S149= PC.Out=addr+4                                         PC-Out(S128)
	S150= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S130)
	S151= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S130)
	S152= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S130)
	S153= IR.Out={12,rS,rD,UIMM}                                IR-Out(S134)
	S154= IR.Out31_26=12                                        IR-Out(S134)
	S155= IR.Out25_21=rS                                        IR-Out(S134)
	S156= IR.Out20_16=rD                                        IR-Out(S134)
	S157= IR.Out15_0=UIMM                                       IR-Out(S134)
	S158= A.Out=a                                               A-Out(S142)
	S159= A.Out1_0={a}[1:0]                                     A-Out(S142)
	S160= A.Out4_0={a}[4:0]                                     A-Out(S142)
	S161= B.Out={16{0},UIMM}                                    B-Out(S144)
	S162= B.Out1_0={{16{0},UIMM}}[1:0]                          B-Out(S144)
	S163= B.Out4_0={{16{0},UIMM}}[4:0]                          B-Out(S144)
	S164= A.Out=>ALU.A                                          Premise(F78)
	S165= ALU.A=a                                               Path(S158,S164)
	S166= B.Out=>ALU.B                                          Premise(F79)
	S167= ALU.B={16{0},UIMM}                                    Path(S161,S166)
	S168= ALU.Func=6'b000000                                    Premise(F80)
	S169= ALU.Out=a&{16{0},UIMM}                                ALU(S165,S167)
	S170= ALU.Out1_0={a&{16{0},UIMM}}[1:0]                      ALU(S165,S167)
	S171= ALU.CMP=Compare0(a&{16{0},UIMM})                      ALU(S165,S167)
	S172= ALU.OV=OverFlow(a&{16{0},UIMM})                       ALU(S165,S167)
	S173= ALU.CA=Carry(a&{16{0},UIMM})                          ALU(S165,S167)
	S174= ALU.Out=>ALUOut.In                                    Premise(F81)
	S175= ALUOut.In=a&{16{0},UIMM}                              Path(S169,S174)
	S176= CtrlASIDIn=0                                          Premise(F82)
	S177= CtrlCP0=0                                             Premise(F83)
	S178= CP0[ASID]=pid                                         CP0-Hold(S121,S177)
	S179= CtrlEPCIn=0                                           Premise(F84)
	S180= CtrlExCodeIn=0                                        Premise(F85)
	S181= CtrlIMMU=0                                            Premise(F86)
	S182= CtrlPC=0                                              Premise(F87)
	S183= CtrlPCInc=0                                           Premise(F88)
	S184= PC[CIA]=addr                                          PC-Hold(S127,S183)
	S185= PC[Out]=addr+4                                        PC-Hold(S128,S182,S183)
	S186= CtrlIAddrReg=0                                        Premise(F89)
	S187= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S130,S186)
	S188= CtrlICache=0                                          Premise(F90)
	S189= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S132,S188)
	S190= CtrlIR=0                                              Premise(F91)
	S191= [IR]={12,rS,rD,UIMM}                                  IR-Hold(S134,S190)
	S192= CtrlICacheReg=0                                       Premise(F92)
	S193= CtrlIMem=0                                            Premise(F93)
	S194= IMem[{pid,addr}]={12,rS,rD,UIMM}                      IMem-Hold(S137,S193)
	S195= CtrlIRMux=0                                           Premise(F94)
	S196= CtrlGPR=0                                             Premise(F95)
	S197= GPR[rS]=a                                             GPR-Hold(S140,S196)
	S198= CtrlA=0                                               Premise(F96)
	S199= [A]=a                                                 A-Hold(S142,S198)
	S200= CtrlB=0                                               Premise(F97)
	S201= [B]={16{0},UIMM}                                      B-Hold(S144,S200)
	S202= CtrlALUOut=1                                          Premise(F98)
	S203= [ALUOut]=a&{16{0},UIMM}                               ALUOut-Write(S175,S202)

MEM	S204= CP0.ASID=pid                                          CP0-Read-ASID(S178)
	S205= PC.CIA=addr                                           PC-Out(S184)
	S206= PC.CIA31_28=addr[31:28]                               PC-Out(S184)
	S207= PC.Out=addr+4                                         PC-Out(S185)
	S208= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S187)
	S209= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S187)
	S210= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S187)
	S211= IR.Out={12,rS,rD,UIMM}                                IR-Out(S191)
	S212= IR.Out31_26=12                                        IR-Out(S191)
	S213= IR.Out25_21=rS                                        IR-Out(S191)
	S214= IR.Out20_16=rD                                        IR-Out(S191)
	S215= IR.Out15_0=UIMM                                       IR-Out(S191)
	S216= A.Out=a                                               A-Out(S199)
	S217= A.Out1_0={a}[1:0]                                     A-Out(S199)
	S218= A.Out4_0={a}[4:0]                                     A-Out(S199)
	S219= B.Out={16{0},UIMM}                                    B-Out(S201)
	S220= B.Out1_0={{16{0},UIMM}}[1:0]                          B-Out(S201)
	S221= B.Out4_0={{16{0},UIMM}}[4:0]                          B-Out(S201)
	S222= ALUOut.Out=a&{16{0},UIMM}                             ALUOut-Out(S203)
	S223= ALUOut.Out1_0={a&{16{0},UIMM}}[1:0]                   ALUOut-Out(S203)
	S224= ALUOut.Out4_0={a&{16{0},UIMM}}[4:0]                   ALUOut-Out(S203)
	S225= CtrlASIDIn=0                                          Premise(F99)
	S226= CtrlCP0=0                                             Premise(F100)
	S227= CP0[ASID]=pid                                         CP0-Hold(S178,S226)
	S228= CtrlEPCIn=0                                           Premise(F101)
	S229= CtrlExCodeIn=0                                        Premise(F102)
	S230= CtrlIMMU=0                                            Premise(F103)
	S231= CtrlPC=0                                              Premise(F104)
	S232= CtrlPCInc=0                                           Premise(F105)
	S233= PC[CIA]=addr                                          PC-Hold(S184,S232)
	S234= PC[Out]=addr+4                                        PC-Hold(S185,S231,S232)
	S235= CtrlIAddrReg=0                                        Premise(F106)
	S236= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S187,S235)
	S237= CtrlICache=0                                          Premise(F107)
	S238= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S189,S237)
	S239= CtrlIR=0                                              Premise(F108)
	S240= [IR]={12,rS,rD,UIMM}                                  IR-Hold(S191,S239)
	S241= CtrlICacheReg=0                                       Premise(F109)
	S242= CtrlIMem=0                                            Premise(F110)
	S243= IMem[{pid,addr}]={12,rS,rD,UIMM}                      IMem-Hold(S194,S242)
	S244= CtrlIRMux=0                                           Premise(F111)
	S245= CtrlGPR=0                                             Premise(F112)
	S246= GPR[rS]=a                                             GPR-Hold(S197,S245)
	S247= CtrlA=0                                               Premise(F113)
	S248= [A]=a                                                 A-Hold(S199,S247)
	S249= CtrlB=0                                               Premise(F114)
	S250= [B]={16{0},UIMM}                                      B-Hold(S201,S249)
	S251= CtrlALUOut=0                                          Premise(F115)
	S252= [ALUOut]=a&{16{0},UIMM}                               ALUOut-Hold(S203,S251)

WB	S253= CP0.ASID=pid                                          CP0-Read-ASID(S227)
	S254= PC.CIA=addr                                           PC-Out(S233)
	S255= PC.CIA31_28=addr[31:28]                               PC-Out(S233)
	S256= PC.Out=addr+4                                         PC-Out(S234)
	S257= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S236)
	S258= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S236)
	S259= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S236)
	S260= IR.Out={12,rS,rD,UIMM}                                IR-Out(S240)
	S261= IR.Out31_26=12                                        IR-Out(S240)
	S262= IR.Out25_21=rS                                        IR-Out(S240)
	S263= IR.Out20_16=rD                                        IR-Out(S240)
	S264= IR.Out15_0=UIMM                                       IR-Out(S240)
	S265= A.Out=a                                               A-Out(S248)
	S266= A.Out1_0={a}[1:0]                                     A-Out(S248)
	S267= A.Out4_0={a}[4:0]                                     A-Out(S248)
	S268= B.Out={16{0},UIMM}                                    B-Out(S250)
	S269= B.Out1_0={{16{0},UIMM}}[1:0]                          B-Out(S250)
	S270= B.Out4_0={{16{0},UIMM}}[4:0]                          B-Out(S250)
	S271= ALUOut.Out=a&{16{0},UIMM}                             ALUOut-Out(S252)
	S272= ALUOut.Out1_0={a&{16{0},UIMM}}[1:0]                   ALUOut-Out(S252)
	S273= ALUOut.Out4_0={a&{16{0},UIMM}}[4:0]                   ALUOut-Out(S252)
	S274= IR.Out20_16=>GPR.WReg                                 Premise(F150)
	S275= GPR.WReg=rD                                           Path(S263,S274)
	S276= ALUOut.Out=>GPR.WData                                 Premise(F151)
	S277= GPR.WData=a&{16{0},UIMM}                              Path(S271,S276)
	S278= CtrlASIDIn=0                                          Premise(F152)
	S279= CtrlCP0=0                                             Premise(F153)
	S280= CP0[ASID]=pid                                         CP0-Hold(S227,S279)
	S281= CtrlEPCIn=0                                           Premise(F154)
	S282= CtrlExCodeIn=0                                        Premise(F155)
	S283= CtrlIMMU=0                                            Premise(F156)
	S284= CtrlPC=0                                              Premise(F157)
	S285= CtrlPCInc=0                                           Premise(F158)
	S286= PC[CIA]=addr                                          PC-Hold(S233,S285)
	S287= PC[Out]=addr+4                                        PC-Hold(S234,S284,S285)
	S288= CtrlIAddrReg=0                                        Premise(F159)
	S289= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S236,S288)
	S290= CtrlICache=0                                          Premise(F160)
	S291= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S238,S290)
	S292= CtrlIR=0                                              Premise(F161)
	S293= [IR]={12,rS,rD,UIMM}                                  IR-Hold(S240,S292)
	S294= CtrlICacheReg=0                                       Premise(F162)
	S295= CtrlIMem=0                                            Premise(F163)
	S296= IMem[{pid,addr}]={12,rS,rD,UIMM}                      IMem-Hold(S243,S295)
	S297= CtrlIRMux=0                                           Premise(F164)
	S298= CtrlGPR=1                                             Premise(F165)
	S299= GPR[rD]=a&{16{0},UIMM}                                GPR-Write(S275,S277,S298)
	S300= CtrlA=0                                               Premise(F166)
	S301= [A]=a                                                 A-Hold(S248,S300)
	S302= CtrlB=0                                               Premise(F167)
	S303= [B]={16{0},UIMM}                                      B-Hold(S250,S302)
	S304= CtrlALUOut=0                                          Premise(F168)
	S305= [ALUOut]=a&{16{0},UIMM}                               ALUOut-Hold(S252,S304)

POST	S280= CP0[ASID]=pid                                         CP0-Hold(S227,S279)
	S286= PC[CIA]=addr                                          PC-Hold(S233,S285)
	S287= PC[Out]=addr+4                                        PC-Hold(S234,S284,S285)
	S289= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S236,S288)
	S291= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S238,S290)
	S293= [IR]={12,rS,rD,UIMM}                                  IR-Hold(S240,S292)
	S296= IMem[{pid,addr}]={12,rS,rD,UIMM}                      IMem-Hold(S243,S295)
	S299= GPR[rD]=a&{16{0},UIMM}                                GPR-Write(S275,S277,S298)
	S301= [A]=a                                                 A-Hold(S248,S300)
	S303= [B]={16{0},UIMM}                                      B-Hold(S250,S302)
	S305= [ALUOut]=a&{16{0},UIMM}                               ALUOut-Hold(S252,S304)

