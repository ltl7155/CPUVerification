
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,rT,rD,0,34}                      Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)
	S4= GPR[rT]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PC.Out=>IMem.RAddr                                      Premise(F5)
	S8= IMem.RAddr=addr                                         Path(S6,S7)
	S9= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S10= IMem.ASID=pid                                          Path(S5,S9)
	S11= IMem.Out={0,rS,rT,rD,0,34}                             IMem-Read(S10,S8,S2)
	S12= IMem.Out=>IR.In                                        Premise(F7)
	S13= IR.In={0,rS,rT,rD,0,34}                                Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F8)
	S15= CtrlPCInc=1                                            Premise(F9)
	S16= PC[Out]=addr+4                                         PC-Inc(S1,S14,S15)
	S17= PC[CIA]=addr                                           PC-Inc(S1,S14,S15)
	S18= CtrlIMem=0                                             Premise(F10)
	S19= IMem[{pid,addr}]={0,rS,rT,rD,0,34}                     IMem-Hold(S2,S18)
	S20= CtrlASIDIn=0                                           Premise(F11)
	S21= CtrlCP0=0                                              Premise(F12)
	S22= CP0[ASID]=pid                                          CP0-Hold(S0,S21)
	S23= CtrlEPCIn=0                                            Premise(F13)
	S24= CtrlExCodeIn=0                                         Premise(F14)
	S25= CtrlIR=1                                               Premise(F15)
	S26= [IR]={0,rS,rT,rD,0,34}                                 IR-Write(S13,S25)
	S27= CtrlGPR=0                                              Premise(F16)
	S28= GPR[rS]=a                                              GPR-Hold(S3,S27)
	S29= GPR[rT]=b                                              GPR-Hold(S4,S27)
	S30= CtrlA=0                                                Premise(F17)
	S31= CtrlB=0                                                Premise(F18)
	S32= CtrlALUOut=0                                           Premise(F19)
	S33= CtrlOVReg=0                                            Premise(F20)

ID	S34= PC.Out=addr+4                                          PC-Out(S16)
	S35= PC.CIA=addr                                            PC-Out(S17)
	S36= PC.CIA31_28=addr[31:28]                                PC-Out(S17)
	S37= CP0.ASID=pid                                           CP0-Read-ASID(S22)
	S38= IR.Out={0,rS,rT,rD,0,34}                               IR-Out(S26)
	S39= IR.Out31_26=0                                          IR-Out(S26)
	S40= IR.Out25_21=rS                                         IR-Out(S26)
	S41= IR.Out20_16=rT                                         IR-Out(S26)
	S42= IR.Out15_11=rD                                         IR-Out(S26)
	S43= IR.Out10_6=0                                           IR-Out(S26)
	S44= IR.Out5_0=34                                           IR-Out(S26)
	S45= IR.Out31_26=>CU.Op                                     Premise(F21)
	S46= CU.Op=0                                                Path(S39,S45)
	S47= IR.Out25_21=>GPR.RReg1                                 Premise(F22)
	S48= GPR.RReg1=rS                                           Path(S40,S47)
	S49= GPR.Rdata1=a                                           GPR-Read(S48,S28)
	S50= IR.Out20_16=>GPR.RReg2                                 Premise(F23)
	S51= GPR.RReg2=rT                                           Path(S41,S50)
	S52= GPR.Rdata2=b                                           GPR-Read(S51,S29)
	S53= IR.Out5_0=>CU.IRFunc                                   Premise(F24)
	S54= CU.IRFunc=34                                           Path(S44,S53)
	S55= GPR.Rdata1=>A.In                                       Premise(F25)
	S56= A.In=a                                                 Path(S49,S55)
	S57= GPR.Rdata2=>B.In                                       Premise(F26)
	S58= B.In=b                                                 Path(S52,S57)
	S59= CtrlPC=0                                               Premise(F27)
	S60= CtrlPCInc=0                                            Premise(F28)
	S61= PC[CIA]=addr                                           PC-Hold(S17,S60)
	S62= PC[Out]=addr+4                                         PC-Hold(S16,S59,S60)
	S63= CtrlIMem=0                                             Premise(F29)
	S64= IMem[{pid,addr}]={0,rS,rT,rD,0,34}                     IMem-Hold(S19,S63)
	S65= CtrlASIDIn=0                                           Premise(F30)
	S66= CtrlCP0=0                                              Premise(F31)
	S67= CP0[ASID]=pid                                          CP0-Hold(S22,S66)
	S68= CtrlEPCIn=0                                            Premise(F32)
	S69= CtrlExCodeIn=0                                         Premise(F33)
	S70= CtrlIR=0                                               Premise(F34)
	S71= [IR]={0,rS,rT,rD,0,34}                                 IR-Hold(S26,S70)
	S72= CtrlGPR=0                                              Premise(F35)
	S73= GPR[rS]=a                                              GPR-Hold(S28,S72)
	S74= GPR[rT]=b                                              GPR-Hold(S29,S72)
	S75= CtrlA=1                                                Premise(F36)
	S76= [A]=a                                                  A-Write(S56,S75)
	S77= CtrlB=1                                                Premise(F37)
	S78= [B]=b                                                  B-Write(S58,S77)
	S79= CtrlALUOut=0                                           Premise(F38)
	S80= CtrlOVReg=0                                            Premise(F39)

EX	S81= PC.CIA=addr                                            PC-Out(S61)
	S82= PC.CIA31_28=addr[31:28]                                PC-Out(S61)
	S83= PC.Out=addr+4                                          PC-Out(S62)
	S84= CP0.ASID=pid                                           CP0-Read-ASID(S67)
	S85= IR.Out={0,rS,rT,rD,0,34}                               IR-Out(S71)
	S86= IR.Out31_26=0                                          IR-Out(S71)
	S87= IR.Out25_21=rS                                         IR-Out(S71)
	S88= IR.Out20_16=rT                                         IR-Out(S71)
	S89= IR.Out15_11=rD                                         IR-Out(S71)
	S90= IR.Out10_6=0                                           IR-Out(S71)
	S91= IR.Out5_0=34                                           IR-Out(S71)
	S92= A.Out=a                                                A-Out(S76)
	S93= A.Out1_0={a}[1:0]                                      A-Out(S76)
	S94= A.Out4_0={a}[4:0]                                      A-Out(S76)
	S95= B.Out=b                                                B-Out(S78)
	S96= B.Out1_0={b}[1:0]                                      B-Out(S78)
	S97= B.Out4_0={b}[4:0]                                      B-Out(S78)
	S98= A.Out=>ALU.A                                           Premise(F40)
	S99= ALU.A=a                                                Path(S92,S98)
	S100= B.Out=>ALU.B                                          Premise(F41)
	S101= ALU.B=b                                               Path(S95,S100)
	S102= ALU.Func=6'b000110                                    Premise(F42)
	S103= ALU.Out=b-a                                           ALU(S99,S101)
	S104= ALU.Out1_0={b-a}[1:0]                                 ALU(S99,S101)
	S105= ALU.CMP=Compare0(b-a)                                 ALU(S99,S101)
	S106= ALU.OV=OverFlow(b-a)                                  ALU(S99,S101)
	S107= ALU.CA=Carry(b-a)                                     ALU(S99,S101)
	S108= ALU.Out=>ALUOut.In                                    Premise(F43)
	S109= ALUOut.In=b-a                                         Path(S103,S108)
	S110= ALU.OV=>OVReg.In                                      Premise(F44)
	S111= OVReg.In=OverFlow(b-a)                                Path(S106,S110)
	S112= CtrlPC=0                                              Premise(F45)
	S113= CtrlPCInc=0                                           Premise(F46)
	S114= PC[CIA]=addr                                          PC-Hold(S61,S113)
	S115= PC[Out]=addr+4                                        PC-Hold(S62,S112,S113)
	S116= CtrlIMem=0                                            Premise(F47)
	S117= IMem[{pid,addr}]={0,rS,rT,rD,0,34}                    IMem-Hold(S64,S116)
	S118= CtrlASIDIn=0                                          Premise(F48)
	S119= CtrlCP0=0                                             Premise(F49)
	S120= CP0[ASID]=pid                                         CP0-Hold(S67,S119)
	S121= CtrlEPCIn=0                                           Premise(F50)
	S122= CtrlExCodeIn=0                                        Premise(F51)
	S123= CtrlIR=0                                              Premise(F52)
	S124= [IR]={0,rS,rT,rD,0,34}                                IR-Hold(S71,S123)
	S125= CtrlGPR=0                                             Premise(F53)
	S126= GPR[rS]=a                                             GPR-Hold(S73,S125)
	S127= GPR[rT]=b                                             GPR-Hold(S74,S125)
	S128= CtrlA=0                                               Premise(F54)
	S129= [A]=a                                                 A-Hold(S76,S128)
	S130= CtrlB=0                                               Premise(F55)
	S131= [B]=b                                                 B-Hold(S78,S130)
	S132= CtrlALUOut=1                                          Premise(F56)
	S133= [ALUOut]=b-a                                          ALUOut-Write(S109,S132)
	S134= CtrlOVReg=1                                           Premise(F57)
	S135= [OVReg]=OverFlow(b-a)                                 OVReg-Write(S111,S134)

MEM	S136= PC.CIA=addr                                           PC-Out(S114)
	S137= PC.CIA31_28=addr[31:28]                               PC-Out(S114)
	S138= PC.Out=addr+4                                         PC-Out(S115)
	S139= CP0.ASID=pid                                          CP0-Read-ASID(S120)
	S140= IR.Out={0,rS,rT,rD,0,34}                              IR-Out(S124)
	S141= IR.Out31_26=0                                         IR-Out(S124)
	S142= IR.Out25_21=rS                                        IR-Out(S124)
	S143= IR.Out20_16=rT                                        IR-Out(S124)
	S144= IR.Out15_11=rD                                        IR-Out(S124)
	S145= IR.Out10_6=0                                          IR-Out(S124)
	S146= IR.Out5_0=34                                          IR-Out(S124)
	S147= A.Out=a                                               A-Out(S129)
	S148= A.Out1_0={a}[1:0]                                     A-Out(S129)
	S149= A.Out4_0={a}[4:0]                                     A-Out(S129)
	S150= B.Out=b                                               B-Out(S131)
	S151= B.Out1_0={b}[1:0]                                     B-Out(S131)
	S152= B.Out4_0={b}[4:0]                                     B-Out(S131)
	S153= ALUOut.Out=b-a                                        ALUOut-Out(S133)
	S154= ALUOut.Out1_0={b-a}[1:0]                              ALUOut-Out(S133)
	S155= ALUOut.Out4_0={b-a}[4:0]                              ALUOut-Out(S133)
	S156= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S135)
	S157= OVReg.Out1_0={OverFlow(b-a)}[1:0]                     OVReg-Out(S135)
	S158= OVReg.Out4_0={OverFlow(b-a)}[4:0]                     OVReg-Out(S135)
	S159= CtrlPC=0                                              Premise(F58)
	S160= CtrlPCInc=0                                           Premise(F59)
	S161= PC[CIA]=addr                                          PC-Hold(S114,S160)
	S162= PC[Out]=addr+4                                        PC-Hold(S115,S159,S160)
	S163= CtrlIMem=0                                            Premise(F60)
	S164= IMem[{pid,addr}]={0,rS,rT,rD,0,34}                    IMem-Hold(S117,S163)
	S165= CtrlASIDIn=0                                          Premise(F61)
	S166= CtrlCP0=0                                             Premise(F62)
	S167= CP0[ASID]=pid                                         CP0-Hold(S120,S166)
	S168= CtrlEPCIn=0                                           Premise(F63)
	S169= CtrlExCodeIn=0                                        Premise(F64)
	S170= CtrlIR=0                                              Premise(F65)
	S171= [IR]={0,rS,rT,rD,0,34}                                IR-Hold(S124,S170)
	S172= CtrlGPR=0                                             Premise(F66)
	S173= GPR[rS]=a                                             GPR-Hold(S126,S172)
	S174= GPR[rT]=b                                             GPR-Hold(S127,S172)
	S175= CtrlA=0                                               Premise(F67)
	S176= [A]=a                                                 A-Hold(S129,S175)
	S177= CtrlB=0                                               Premise(F68)
	S178= [B]=b                                                 B-Hold(S131,S177)
	S179= CtrlALUOut=0                                          Premise(F69)
	S180= [ALUOut]=b-a                                          ALUOut-Hold(S133,S179)
	S181= CtrlOVReg=0                                           Premise(F70)
	S182= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S135,S181)

WB	S183= PC.CIA=addr                                           PC-Out(S161)
	S184= PC.CIA31_28=addr[31:28]                               PC-Out(S161)
	S185= PC.Out=addr+4                                         PC-Out(S162)
	S186= CP0.ASID=pid                                          CP0-Read-ASID(S167)
	S187= IR.Out={0,rS,rT,rD,0,34}                              IR-Out(S171)
	S188= IR.Out31_26=0                                         IR-Out(S171)
	S189= IR.Out25_21=rS                                        IR-Out(S171)
	S190= IR.Out20_16=rT                                        IR-Out(S171)
	S191= IR.Out15_11=rD                                        IR-Out(S171)
	S192= IR.Out10_6=0                                          IR-Out(S171)
	S193= IR.Out5_0=34                                          IR-Out(S171)
	S194= A.Out=a                                               A-Out(S176)
	S195= A.Out1_0={a}[1:0]                                     A-Out(S176)
	S196= A.Out4_0={a}[4:0]                                     A-Out(S176)
	S197= B.Out=b                                               B-Out(S178)
	S198= B.Out1_0={b}[1:0]                                     B-Out(S178)
	S199= B.Out4_0={b}[4:0]                                     B-Out(S178)
	S200= ALUOut.Out=b-a                                        ALUOut-Out(S180)
	S201= ALUOut.Out1_0={b-a}[1:0]                              ALUOut-Out(S180)
	S202= ALUOut.Out4_0={b-a}[4:0]                              ALUOut-Out(S180)
	S203= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S182)
	S204= OVReg.Out1_0={OverFlow(b-a)}[1:0]                     OVReg-Out(S182)
	S205= OVReg.Out4_0={OverFlow(b-a)}[4:0]                     OVReg-Out(S182)
	S206= IR.Out15_11=>GPR.WReg                                 Premise(F71)
	S207= GPR.WReg=rD                                           Path(S191,S206)
	S208= ALUOut.Out=>GPR.WData                                 Premise(F72)
	S209= GPR.WData=b-a                                         Path(S200,S208)
	S210= OVReg.Out=>CU.OV                                      Premise(F73)
	S211= CU.OV=OverFlow(b-a)                                   Path(S203,S210)
	S212= CtrlPC=0                                              Premise(F74)
	S213= CtrlPCInc=0                                           Premise(F75)
	S214= PC[CIA]=addr                                          PC-Hold(S161,S213)
	S215= PC[Out]=addr+4                                        PC-Hold(S162,S212,S213)
	S216= CtrlIMem=0                                            Premise(F76)
	S217= IMem[{pid,addr}]={0,rS,rT,rD,0,34}                    IMem-Hold(S164,S216)
	S218= CtrlASIDIn=0                                          Premise(F77)
	S219= CtrlCP0=0                                             Premise(F78)
	S220= CP0[ASID]=pid                                         CP0-Hold(S167,S219)
	S221= CtrlEPCIn=0                                           Premise(F79)
	S222= CtrlExCodeIn=0                                        Premise(F80)
	S223= CtrlIR=0                                              Premise(F81)
	S224= [IR]={0,rS,rT,rD,0,34}                                IR-Hold(S171,S223)
	S225= CtrlGPR=0                                             Premise(F82)
	S226= GPR[rS]=a                                             GPR-Hold(S173,S225)
	S227= GPR[rT]=b                                             GPR-Hold(S174,S225)
	S228= CtrlA=0                                               Premise(F83)
	S229= [A]=a                                                 A-Hold(S176,S228)
	S230= CtrlB=0                                               Premise(F84)
	S231= [B]=b                                                 B-Hold(S178,S230)
	S232= CtrlALUOut=0                                          Premise(F85)
	S233= [ALUOut]=b-a                                          ALUOut-Hold(S180,S232)
	S234= CtrlOVReg=0                                           Premise(F86)
	S235= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S182,S234)

POST	S214= PC[CIA]=addr                                          PC-Hold(S161,S213)
	S215= PC[Out]=addr+4                                        PC-Hold(S162,S212,S213)
	S217= IMem[{pid,addr}]={0,rS,rT,rD,0,34}                    IMem-Hold(S164,S216)
	S220= CP0[ASID]=pid                                         CP0-Hold(S167,S219)
	S224= [IR]={0,rS,rT,rD,0,34}                                IR-Hold(S171,S223)
	S226= GPR[rS]=a                                             GPR-Hold(S173,S225)
	S227= GPR[rT]=b                                             GPR-Hold(S174,S225)
	S229= [A]=a                                                 A-Hold(S176,S228)
	S231= [B]=b                                                 B-Hold(S178,S230)
	S233= [ALUOut]=b-a                                          ALUOut-Hold(S180,S232)
	S235= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S182,S234)

