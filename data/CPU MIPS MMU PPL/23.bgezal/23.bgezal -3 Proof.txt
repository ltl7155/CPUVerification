
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={1,rS,17,offset}                           Premise(F3)

IF	S2= PC.Out=addr                                             PC-Out(S0)
	S3= PC.Out=>ICache.IEA                                      Premise(F63)
	S4= ICache.IEA=addr                                         Path(S2,S3)
	S5= ICache.Out={1,rS,17,offset}                             ICache-Search(S4,S1)
	S6= ICache.Out=>IR_ID.In                                    Premise(F70)
	S7= IR_ID.In={1,rS,17,offset}                               Path(S5,S6)
	S8= CtrlPC=0                                                Premise(F101)
	S9= CtrlPCInc=1                                             Premise(F102)
	S10= PC[Out]=addr+4                                         PC-Inc(S0,S8,S9)
	S11= PC[CIA]=addr                                           PC-Inc(S0,S8,S9)
	S12= CtrlIR_ID=1                                            Premise(F120)
	S13= [IR_ID]={1,rS,17,offset}                               IR_ID-Write(S7,S12)
	S14= GPR[rS]=a                                              Premise(F133)

ID	S15= IR_ID.Out={1,rS,17,offset}                             IR-Out(S13)
	S16= IR_ID.Out25_21=rS                                      IR-Out(S13)
	S17= FU.OutID1=>A_EX.In                                     Premise(F267)
	S18= FU.OutID2=>B_EX.In                                     Premise(F269)
	S19= GPR.Rdata1=>FU.InID1                                   Premise(F314)
	S20= GPR.Rdata2=>FU.InID2                                   Premise(F316)
	S21= IR_ID.Out25_21=>GPR.RReg1                              Premise(F318)
	S22= GPR.RReg1=rS                                           Path(S16,S21)
	S23= GPR.Rdata1=a                                           GPR-Read(S22,S14)
	S24= FU.InID1=a                                             Path(S23,S19)
	S25= FU.OutID1=FU(a)                                        FU-Forward(S24)
	S26= A_EX.In=FU(a)                                          Path(S25,S17)
	S27= GPR.Rdata2=32'b0                                       GPR-ReadGPR0()
	S28= FU.InID2=32'b0                                         Path(S27,S20)
	S29= FU.OutID2=FU(32'b0)                                    FU-Forward(S28)
	S30= B_EX.In=FU(32'b0)                                      Path(S29,S18)
	S31= IR_ID.Out=>IR_EX.In                                    Premise(F328)
	S32= IR_EX.In={1,rS,17,offset}                              Path(S15,S31)
	S33= CtrlPC=0                                               Premise(F360)
	S34= CtrlPCInc=0                                            Premise(F361)
	S35= PC[CIA]=addr                                           PC-Hold(S11,S34)
	S36= PC[Out]=addr+4                                         PC-Hold(S10,S33,S34)
	S37= CtrlA_EX=1                                             Premise(F364)
	S38= [A_EX]=FU(a)                                           A_EX-Write(S26,S37)
	S39= CtrlB_EX=1                                             Premise(F367)
	S40= [B_EX]=FU(32'b0)                                       B_EX-Write(S30,S39)
	S41= CtrlIR_EX=1                                            Premise(F378)
	S42= [IR_EX]={1,rS,17,offset}                               IR_EX-Write(S32,S41)

EX	S43= PC.CIA=addr                                            PC-Out(S35)
	S44= PC.Out=addr+4                                          PC-Out(S36)
	S45= A_EX.Out=FU(a)                                         A_EX-Out(S38)
	S46= B_EX.Out=FU(32'b0)                                     B_EX-Out(S40)
	S47= IR_EX.Out15_0=offset                                   IR_EX-Out(S42)
	S48= PC.CIA=>ALU.A                                          Premise(F392)
	S49= ALU.A=addr                                             Path(S43,S48)
	S50= SEXT.Out=>ALU.B                                        Premise(F393)
	S51= ALU.Out=>ALUOut_MEM.In                                 Premise(F395)
	S52= A_EX.Out=>CMPU.A                                       Premise(F401)
	S53= CMPU.A=FU(a)                                           Path(S45,S52)
	S54= B_EX.Out=>CMPU.B                                       Premise(F402)
	S55= CMPU.B=FU(32'b0)                                       Path(S46,S54)
	S56= CMPU.lt=CompareS(FU(a),FU(32'b0))                      CMPU-CMPS(S53,S55)
	S57= CMPU.lt=>ConditionReg_MEM.In                           Premise(F433)
	S58= ConditionReg_MEM.In=CompareS(FU(a),FU(32'b0))          Path(S56,S57)
	S59= PC.Out=>GPR.WData                                      Premise(F452)
	S60= GPR.WData=addr+4                                       Path(S44,S59)
	S61= GPR.WReg=5'd31                                         Premise(F453)
	S62= IR_EX.Out15_0=>SEXT.In                                 Premise(F468)
	S63= SEXT.In=offset                                         Path(S47,S62)
	S64= SEXT.Out={14{offset[15]},offset,2{0}}                  SEXT(S63)
	S65= ALU.B={14{offset[15]},offset,2{0}}                     Path(S64,S50)
	S66= ALU.Out=addr+{14{offset[15]},offset,2{0}}              ALU(S49,S65)
	S67= ALUOut_MEM.In=addr+{14{offset[15]},offset,2{0}}        Path(S66,S51)
	S68= CtrlALUOut_MEM=1                                       Premise(F495)
	S69= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}         ALUOut_MEM-Write(S67,S68)
	S70= CtrlConditionReg_MEM=1                                 Premise(F505)
	S71= [ConditionReg_MEM]=CompareS(FU(a),FU(32'b0))           ConditionReg_MEM-Write(S58,S70)
	S72= CtrlGPR=1                                              Premise(F516)
	S73= GPR[5'd31]=addr+4                                      GPR-Write(S61,S60,S72)

MEM	S74= ALUOut_MEM.Out=addr+{14{offset[15]},offset,2{0}}       ALUOut_MEM-Out(S69)
	S75= ConditionReg_MEM.Out=CompareS(FU(a),FU(32'b0))         ConditionReg_MEM-Out(S71)
	S76= ConditionReg_MEM.Out=>ConditionReg_WB.In               Premise(F566)
	S77= ConditionReg_WB.In=CompareS(FU(a),FU(32'b0))           Path(S75,S76)
	S78= ALUOut_MEM.Out=>PC.In                                  Premise(F597)
	S79= PC.In=addr+{14{offset[15]},offset,2{0}}                Path(S74,S78)
	S80= CtrlPC=1                                               Premise(F623)
	S81= CtrlPCInc=0                                            Premise(F624)
	S82= PC[Out]=addr+{14{offset[15]},offset,2{0}}              PC-Write(S79,S80,S81)
	S83= CtrlConditionReg_WB=1                                  Premise(F638)
	S84= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Write(S77,S83)
	S85= CtrlGPR=0                                              Premise(F646)
	S86= GPR[5'd31]=addr+4                                      GPR-Hold(S73,S85)

WB	S87= CtrlPC=0                                               Premise(F1013)
	S88= CtrlPCInc=0                                            Premise(F1014)
	S89= PC[Out]=addr+{14{offset[15]},offset,2{0}}              PC-Hold(S82,S87,S88)
	S90= CtrlConditionReg_WB=0                                  Premise(F1028)
	S91= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Hold(S84,S90)
	S92= CtrlGPR=0                                              Premise(F1036)
	S93= GPR[5'd31]=addr+4                                      GPR-Hold(S86,S92)

POST	S89= PC[Out]=addr+{14{offset[15]},offset,2{0}}              PC-Hold(S82,S87,S88)
	S91= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Hold(S84,S90)
	S93= GPR[5'd31]=addr+4                                      GPR-Hold(S86,S92)

