
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={1,rS,17,offset}                           Premise(F3)

IF	S2= PC.Out=addr                                             PC-Out(S0)
	S3= PC.Out=>ICache.IEA                                      Premise(F8)
	S4= ICache.IEA=addr                                         Path(S2,S3)
	S5= ICache.Out={1,rS,17,offset}                             ICache-Search(S4,S1)
	S6= ICache.Out=>IR_ID.In                                    Premise(F12)
	S7= IR_ID.In={1,rS,17,offset}                               Path(S5,S6)
	S8= CtrlPC=0                                                Premise(F25)
	S9= CtrlPCInc=1                                             Premise(F26)
	S10= PC[Out]=addr+4                                         PC-Inc(S0,S8,S9)
	S11= PC[CIA]=addr                                           PC-Inc(S0,S8,S9)
	S12= CtrlIR_ID=1                                            Premise(F31)
	S13= [IR_ID]={1,rS,17,offset}                               IR_ID-Write(S7,S12)
	S14= GPR[rS]=a                                              Premise(F52)

ID	S15= IR_ID.Out={1,rS,17,offset}                             IR-Out(S13)
	S16= IR_ID.Out25_21=rS                                      IR-Out(S13)
	S17= IR_ID.Out25_21=>GPR.RReg1                              Premise(F89)
	S18= GPR.RReg1=rS                                           Path(S16,S17)
	S19= GPR.Rdata1=a                                           GPR-Read(S18,S14)
	S20= GPR.Rdata2=32'b0                                       GPR-ReadGPR0()
	S21= GPR.Rdata1=>FU.InID1                                   Premise(F91)
	S22= FU.InID1=a                                             Path(S19,S21)
	S23= FU.OutID1=FU(a)                                        FU-Forward(S22)
	S24= FU.OutID1=>A_EX.In                                     Premise(F93)
	S25= A_EX.In=FU(a)                                          Path(S23,S24)
	S26= GPR.Rdata2=>FU.InID2                                   Premise(F94)
	S27= FU.InID2=32'b0                                         Path(S20,S26)
	S28= FU.OutID2=FU(32'b0)                                    FU-Forward(S27)
	S29= FU.OutID2=>B_EX.In                                     Premise(F96)
	S30= B_EX.In=FU(32'b0)                                      Path(S28,S29)
	S31= IR_ID.Out=>IR_EX.In                                    Premise(F97)
	S32= IR_EX.In={1,rS,17,offset}                              Path(S15,S31)
	S33= CtrlPC=0                                               Premise(F105)
	S34= CtrlPCInc=0                                            Premise(F106)
	S35= PC[CIA]=addr                                           PC-Hold(S11,S34)
	S36= PC[Out]=addr+4                                         PC-Hold(S10,S33,S34)
	S37= CtrlA_EX=1                                             Premise(F115)
	S38= [A_EX]=FU(a)                                           A_EX-Write(S25,S37)
	S39= CtrlB_EX=1                                             Premise(F116)
	S40= [B_EX]=FU(32'b0)                                       B_EX-Write(S30,S39)
	S41= CtrlIR_EX=1                                            Premise(F117)
	S42= [IR_EX]={1,rS,17,offset}                               IR_EX-Write(S32,S41)

EX	S43= PC.CIA=addr                                            PC-Out(S35)
	S44= PC.Out=addr+4                                          PC-Out(S36)
	S45= A_EX.Out=FU(a)                                         A_EX-Out(S38)
	S46= B_EX.Out=FU(32'b0)                                     B_EX-Out(S40)
	S47= IR_EX.Out15_0=offset                                   IR_EX-Out(S42)
	S48= IR_EX.Out15_0=>SEXT.In                                 Premise(F136)
	S49= SEXT.In=offset                                         Path(S47,S48)
	S50= SEXT.Out={14{offset[15]},offset,2{0}}                  SEXT(S49)
	S51= PC.CIA=>ALU.A                                          Premise(F137)
	S52= ALU.A=addr                                             Path(S43,S51)
	S53= SEXT.Out=>ALU.B                                        Premise(F138)
	S54= ALU.B={14{offset[15]},offset,2{0}}                     Path(S50,S53)
	S55= ALU.Out=addr+{14{offset[15]},offset,2{0}}              ALU(S52,S54)
	S56= ALU.Out=>ALUOut_MEM.In                                 Premise(F140)
	S57= ALUOut_MEM.In=addr+{14{offset[15]},offset,2{0}}        Path(S55,S56)
	S58= A_EX.Out=>CMPU.A                                       Premise(F141)
	S59= CMPU.A=FU(a)                                           Path(S45,S58)
	S60= B_EX.Out=>CMPU.B                                       Premise(F142)
	S61= CMPU.B=FU(32'b0)                                       Path(S46,S60)
	S62= CMPU.lt=CompareS(FU(a),FU(32'b0))                      CMPU-CMPS(S59,S61)
	S63= CMPU.lt=>ConditionReg_MEM.In                           Premise(F144)
	S64= ConditionReg_MEM.In=CompareS(FU(a),FU(32'b0))          Path(S62,S63)
	S65= GPR.WReg=5'd31                                         Premise(F145)
	S66= PC.Out=>GPR.WData                                      Premise(F146)
	S67= GPR.WData=addr+4                                       Path(S44,S66)
	S68= CtrlGPR=1                                              Premise(F164)
	S69= GPR[5'd31]=addr+4                                      GPR-Write(S65,S67,S68)
	S70= CtrlALUOut_MEM=1                                       Premise(F168)
	S71= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}         ALUOut_MEM-Write(S57,S70)
	S72= CtrlConditionReg_MEM=1                                 Premise(F169)
	S73= [ConditionReg_MEM]=CompareS(FU(a),FU(32'b0))           ConditionReg_MEM-Write(S64,S72)

MEM	S74= ALUOut_MEM.Out=addr+{14{offset[15]},offset,2{0}}       ALUOut_MEM-Out(S71)
	S75= ConditionReg_MEM.Out=CompareS(FU(a),FU(32'b0))         ConditionReg_MEM-Out(S73)
	S76= ALUOut_MEM.Out=>PC.In                                  Premise(F188)
	S77= PC.In=addr+{14{offset[15]},offset,2{0}}                Path(S74,S76)
	S78= ConditionReg_MEM.Out=>ConditionReg_WB.In               Premise(F196)
	S79= ConditionReg_WB.In=CompareS(FU(a),FU(32'b0))           Path(S75,S78)
	S80= CtrlPC=1                                               Premise(F205)
	S81= CtrlPCInc=0                                            Premise(F206)
	S82= PC[Out]=addr+{14{offset[15]},offset,2{0}}              PC-Write(S77,S80,S81)
	S83= CtrlGPR=0                                              Premise(F214)
	S84= GPR[5'd31]=addr+4                                      GPR-Hold(S69,S83)
	S85= CtrlConditionReg_WB=1                                  Premise(F229)
	S86= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Write(S79,S85)

WB	S87= CtrlPC=0                                               Premise(F321)
	S88= CtrlPCInc=0                                            Premise(F322)
	S89= PC[Out]=addr+{14{offset[15]},offset,2{0}}              PC-Hold(S82,S87,S88)
	S90= CtrlGPR=0                                              Premise(F330)
	S91= GPR[5'd31]=addr+4                                      GPR-Hold(S84,S90)
	S92= CtrlConditionReg_WB=0                                  Premise(F345)
	S93= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Hold(S86,S92)

POST	S89= PC[Out]=addr+{14{offset[15]},offset,2{0}}              PC-Hold(S82,S87,S88)
	S91= GPR[5'd31]=addr+4                                      GPR-Hold(S84,S90)
	S93= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Hold(S86,S92)

