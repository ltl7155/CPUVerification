
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={24,rS,rA,UIMM}                        Premise(F2)
	S3= GPRegs[rS]=a                                            Premise(F3)

IF	S4= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S5= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S6= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S7= PC.Out=addr                                             PC-Out(S1)
	S8= PIDReg.Out=>IMMU.PID                                    Premise(F4)
	S9= IMMU.PID=pid                                            Path(S4,S8)
	S10= PC.Out=>IMMU.IEA                                       Premise(F5)
	S11= IMMU.IEA=addr                                          Path(S7,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S11)
	S13= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S9,S11)
	S14= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S15= IAddrReg.In={pid,addr}                                 Path(S12,S14)
	S16= IMMU.Hit=>IMMUHitReg.In                                Premise(F7)
	S17= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S13,S16)
	S18= PC.Out=>ICache.IEA                                     Premise(F8)
	S19= ICache.IEA=addr                                        Path(S7,S18)
	S20= ICache.Hit=ICacheHit(addr)                             ICache-Search(S19)
	S21= ICache.Out=>ICacheReg.In                               Premise(F9)
	S22= ICache.Hit=>ICacheHitReg.In                            Premise(F10)
	S23= ICacheHitReg.In=ICacheHit(addr)                        Path(S20,S22)
	S24= IMMUHitReg.Out=>CU.IMemHit                             Premise(F11)
	S25= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F12)
	S26= IAddrReg.Out=>IMem.RAddr                               Premise(F13)
	S27= IMem.Out=>IRMux.MemData                                Premise(F14)
	S28= ICacheReg.Out=>IRMux.CacheData                         Premise(F15)
	S29= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F16)
	S30= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F17)
	S31= IRMux.Out=>IR.In                                       Premise(F18)
	S32= IMem.MEM8WordOut=>ICache.WData                         Premise(F19)
	S33= PC.Out=>ICache.IEA                                     Premise(F20)
	S34= IR.Out0_5=>CU.Op                                       Premise(F21)
	S35= IR.Out6_10=>GPRegs.RReg1                               Premise(F22)
	S36= IR.Out16_31=>LIMMEXT.In                                Premise(F23)
	S37= GPRegs.Rdata1=>A.In                                    Premise(F24)
	S38= LIMMEXT.Out=>B.In                                      Premise(F25)
	S39= A.Out=>ALU.A                                           Premise(F26)
	S40= B.Out=>ALU.B                                           Premise(F27)
	S41= CU.Func=>ALU.Func                                      Premise(F28)
	S42= ALU.Out=>ALUOut.In                                     Premise(F29)
	S43= ALU.CMP=>DataCmb.A                                     Premise(F30)
	S44= XER.SOOut=>DataCmb.B                                   Premise(F31)
	S45= DataCmb.Out=>DR4bit.In                                 Premise(F32)
	S46= IR.Out11_15=>GPRegs.WReg                               Premise(F33)
	S47= ALUOut.Out=>GPRegs.WData                               Premise(F34)
	S48= DR4bit.Out=>CRRegs.CR0In                               Premise(F35)
	S49= CtrlPIDReg=0                                           Premise(F36)
	S50= [PIDReg]=pid                                           PIDReg-Hold(S0,S49)
	S51= CtrlIMMU=0                                             Premise(F37)
	S52= CtrlPC=0                                               Premise(F38)
	S53= CtrlPCInc=0                                            Premise(F39)
	S54= PC[Out]=addr                                           PC-Hold(S1,S52,S53)
	S55= CtrlIAddrReg=1                                         Premise(F40)
	S56= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S15,S55)
	S57= CtrlIMMUHitReg=1                                       Premise(F41)
	S58= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S17,S57)
	S59= CtrlICache=0                                           Premise(F42)
	S60= CtrlICacheReg=1                                        Premise(F43)
	S61= CtrlICacheHitReg=1                                     Premise(F44)
	S62= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S23,S61)
	S63= CtrlIMem=0                                             Premise(F45)
	S64= IMem[{pid,addr}]={24,rS,rA,UIMM}                       IMem-Hold(S2,S63)
	S65= CtrlIRMux=0                                            Premise(F46)
	S66= CtrlIR=0                                               Premise(F47)
	S67= CtrlGPRegs=0                                           Premise(F48)
	S68= GPRegs[rS]=a                                           GPRegs-Hold(S3,S67)
	S69= CtrlA=0                                                Premise(F49)
	S70= CtrlB=0                                                Premise(F50)
	S71= CtrlALUOut=0                                           Premise(F51)
	S72= CtrlXERSO=0                                            Premise(F52)
	S73= CtrlXEROV=0                                            Premise(F53)
	S74= CtrlXERCA=0                                            Premise(F54)
	S75= CtrlDR4bit=0                                           Premise(F55)
	S76= CtrlCRRegs=0                                           Premise(F56)
	S77= CtrlCRRegsCR0=0                                        Premise(F57)
	S78= CtrlCRRegsW4bitRegs=0                                  Premise(F58)
	S79= CtrlCRRegsW1bitRegs=0                                  Premise(F59)

IMMU	S80= PIDReg.Out=pid                                         PIDReg-Out(S50)
	S81= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S50)
	S82= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S50)
	S83= PC.Out=addr                                            PC-Out(S54)
	S84= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S56)
	S85= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S56)
	S86= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S56)
	S87= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S58)
	S88= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S58)
	S89= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]           IMMUHitReg-Out(S58)
	S90= ICacheHitReg.Out=ICacheHit(addr)                       ICacheHitReg-Out(S62)
	S91= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]           ICacheHitReg-Out(S62)
	S92= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]           ICacheHitReg-Out(S62)
	S93= PIDReg.Out=>IMMU.PID                                   Premise(F60)
	S94= IMMU.PID=pid                                           Path(S80,S93)
	S95= PC.Out=>IMMU.IEA                                       Premise(F61)
	S96= IMMU.IEA=addr                                          Path(S83,S95)
	S97= IMMU.Addr={pid,addr}                                   IMMU-Search(S94,S96)
	S98= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S94,S96)
	S99= IMMU.Addr=>IAddrReg.In                                 Premise(F62)
	S100= IAddrReg.In={pid,addr}                                Path(S97,S99)
	S101= IMMU.Hit=>IMMUHitReg.In                               Premise(F63)
	S102= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S98,S101)
	S103= PC.Out=>ICache.IEA                                    Premise(F64)
	S104= ICache.IEA=addr                                       Path(S83,S103)
	S105= ICache.Hit=ICacheHit(addr)                            ICache-Search(S104)
	S106= ICache.Out=>ICacheReg.In                              Premise(F65)
	S107= ICache.Hit=>ICacheHitReg.In                           Premise(F66)
	S108= ICacheHitReg.In=ICacheHit(addr)                       Path(S105,S107)
	S109= IMMUHitReg.Out=>CU.IMemHit                            Premise(F67)
	S110= CU.IMemHit=IMMUHit(pid,addr)                          Path(S87,S109)
	S111= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F68)
	S112= CU.ICacheHit=ICacheHit(addr)                          Path(S90,S111)
	S113= IAddrReg.Out=>IMem.RAddr                              Premise(F69)
	S114= IMem.RAddr={pid,addr}                                 Path(S84,S113)
	S115= IMem.Out={24,rS,rA,UIMM}                              IMem-Read(S114,S64)
	S116= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S114,S64)
	S117= IMem.Out=>IRMux.MemData                               Premise(F70)
	S118= IRMux.MemData={24,rS,rA,UIMM}                         Path(S115,S117)
	S119= IRMux.Out={24,rS,rA,UIMM}                             IRMux-Select(S118)
	S120= ICacheReg.Out=>IRMux.CacheData                        Premise(F71)
	S121= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F72)
	S122= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S87,S121)
	S123= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F73)
	S124= IRMux.CacheSel=ICacheHit(addr)                        Path(S90,S123)
	S125= IRMux.Out=>IR.In                                      Premise(F74)
	S126= IR.In={24,rS,rA,UIMM}                                 Path(S119,S125)
	S127= IMem.MEM8WordOut=>ICache.WData                        Premise(F75)
	S128= ICache.WData=IMemGet8Word({pid,addr})                 Path(S116,S127)
	S129= PC.Out=>ICache.IEA                                    Premise(F76)
	S130= IR.Out0_5=>CU.Op                                      Premise(F77)
	S131= IR.Out6_10=>GPRegs.RReg1                              Premise(F78)
	S132= IR.Out16_31=>LIMMEXT.In                               Premise(F79)
	S133= GPRegs.Rdata1=>A.In                                   Premise(F80)
	S134= LIMMEXT.Out=>B.In                                     Premise(F81)
	S135= A.Out=>ALU.A                                          Premise(F82)
	S136= B.Out=>ALU.B                                          Premise(F83)
	S137= CU.Func=>ALU.Func                                     Premise(F84)
	S138= ALU.Out=>ALUOut.In                                    Premise(F85)
	S139= ALU.CMP=>DataCmb.A                                    Premise(F86)
	S140= XER.SOOut=>DataCmb.B                                  Premise(F87)
	S141= DataCmb.Out=>DR4bit.In                                Premise(F88)
	S142= IR.Out11_15=>GPRegs.WReg                              Premise(F89)
	S143= ALUOut.Out=>GPRegs.WData                              Premise(F90)
	S144= DR4bit.Out=>CRRegs.CR0In                              Premise(F91)
	S145= CtrlPIDReg=0                                          Premise(F92)
	S146= [PIDReg]=pid                                          PIDReg-Hold(S50,S145)
	S147= CtrlIMMU=0                                            Premise(F93)
	S148= CtrlPC=0                                              Premise(F94)
	S149= CtrlPCInc=1                                           Premise(F95)
	S150= PC[Out]=addr+4                                        PC-Inc(S54,S148,S149)
	S151= PC[CIA]=addr                                          PC-Inc(S54,S148,S149)
	S152= CtrlIAddrReg=0                                        Premise(F96)
	S153= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S56,S152)
	S154= CtrlIMMUHitReg=0                                      Premise(F97)
	S155= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S58,S154)
	S156= CtrlICache=1                                          Premise(F98)
	S157= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S104,S128,S156)
	S158= CtrlICacheReg=0                                       Premise(F99)
	S159= CtrlICacheHitReg=0                                    Premise(F100)
	S160= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S62,S159)
	S161= CtrlIMem=0                                            Premise(F101)
	S162= IMem[{pid,addr}]={24,rS,rA,UIMM}                      IMem-Hold(S64,S161)
	S163= CtrlIRMux=0                                           Premise(F102)
	S164= CtrlIR=1                                              Premise(F103)
	S165= [IR]={24,rS,rA,UIMM}                                  IR-Write(S126,S164)
	S166= CtrlGPRegs=0                                          Premise(F104)
	S167= GPRegs[rS]=a                                          GPRegs-Hold(S68,S166)
	S168= CtrlA=0                                               Premise(F105)
	S169= CtrlB=0                                               Premise(F106)
	S170= CtrlALUOut=0                                          Premise(F107)
	S171= CtrlXERSO=0                                           Premise(F108)
	S172= CtrlXEROV=0                                           Premise(F109)
	S173= CtrlXERCA=0                                           Premise(F110)
	S174= CtrlDR4bit=0                                          Premise(F111)
	S175= CtrlCRRegs=0                                          Premise(F112)
	S176= CtrlCRRegsCR0=0                                       Premise(F113)
	S177= CtrlCRRegsW4bitRegs=0                                 Premise(F114)
	S178= CtrlCRRegsW1bitRegs=0                                 Premise(F115)

ID	S179= PIDReg.Out=pid                                        PIDReg-Out(S146)
	S180= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S146)
	S181= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S146)
	S182= PC.Out=addr+4                                         PC-Out(S150)
	S183= PC.CIA=addr                                           PC-Out(S151)
	S184= PC.CIA31_28=addr[31:28]                               PC-Out(S151)
	S185= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S153)
	S186= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S153)
	S187= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S153)
	S188= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S155)
	S189= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S155)
	S190= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S155)
	S191= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S160)
	S192= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S160)
	S193= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S160)
	S194= IR.Out0_5=24                                          IR-Out(S165)
	S195= IR.Out6_10=rS                                         IR-Out(S165)
	S196= IR.Out11_15=rA                                        IR-Out(S165)
	S197= IR.Out16_31=UIMM                                      IR-Out(S165)
	S198= PIDReg.Out=>IMMU.PID                                  Premise(F116)
	S199= IMMU.PID=pid                                          Path(S179,S198)
	S200= PC.Out=>IMMU.IEA                                      Premise(F117)
	S201= IMMU.IEA=addr+4                                       Path(S182,S200)
	S202= IMMU.Addr={pid,addr+4}                                IMMU-Search(S199,S201)
	S203= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S199,S201)
	S204= IMMU.Addr=>IAddrReg.In                                Premise(F118)
	S205= IAddrReg.In={pid,addr+4}                              Path(S202,S204)
	S206= IMMU.Hit=>IMMUHitReg.In                               Premise(F119)
	S207= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S203,S206)
	S208= PC.Out=>ICache.IEA                                    Premise(F120)
	S209= ICache.IEA=addr+4                                     Path(S182,S208)
	S210= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S209)
	S211= ICache.Out=>ICacheReg.In                              Premise(F121)
	S212= ICache.Hit=>ICacheHitReg.In                           Premise(F122)
	S213= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S210,S212)
	S214= IMMUHitReg.Out=>CU.IMemHit                            Premise(F123)
	S215= CU.IMemHit=IMMUHit(pid,addr)                          Path(S188,S214)
	S216= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F124)
	S217= CU.ICacheHit=ICacheHit(addr)                          Path(S191,S216)
	S218= IAddrReg.Out=>IMem.RAddr                              Premise(F125)
	S219= IMem.RAddr={pid,addr}                                 Path(S185,S218)
	S220= IMem.Out={24,rS,rA,UIMM}                              IMem-Read(S219,S162)
	S221= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S219,S162)
	S222= IMem.Out=>IRMux.MemData                               Premise(F126)
	S223= IRMux.MemData={24,rS,rA,UIMM}                         Path(S220,S222)
	S224= IRMux.Out={24,rS,rA,UIMM}                             IRMux-Select(S223)
	S225= ICacheReg.Out=>IRMux.CacheData                        Premise(F127)
	S226= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F128)
	S227= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S188,S226)
	S228= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F129)
	S229= IRMux.CacheSel=ICacheHit(addr)                        Path(S191,S228)
	S230= IRMux.Out=>IR.In                                      Premise(F130)
	S231= IR.In={24,rS,rA,UIMM}                                 Path(S224,S230)
	S232= IMem.MEM8WordOut=>ICache.WData                        Premise(F131)
	S233= ICache.WData=IMemGet8Word({pid,addr})                 Path(S221,S232)
	S234= PC.Out=>ICache.IEA                                    Premise(F132)
	S235= IR.Out0_5=>CU.Op                                      Premise(F133)
	S236= CU.Op=24                                              Path(S194,S235)
	S237= CU.Func=alu_or                                        CU(S236)
	S238= IR.Out6_10=>GPRegs.RReg1                              Premise(F134)
	S239= GPRegs.RReg1=rS                                       Path(S195,S238)
	S240= GPRegs.Rdata1=a                                       GPRegs-Read(S239,S167)
	S241= IR.Out16_31=>LIMMEXT.In                               Premise(F135)
	S242= LIMMEXT.In=UIMM                                       Path(S197,S241)
	S243= LIMMEXT.Out={16'b0,UIMM}                              LIMMEXT(S242)
	S244= GPRegs.Rdata1=>A.In                                   Premise(F136)
	S245= A.In=a                                                Path(S240,S244)
	S246= LIMMEXT.Out=>B.In                                     Premise(F137)
	S247= B.In={16'b0,UIMM}                                     Path(S243,S246)
	S248= A.Out=>ALU.A                                          Premise(F138)
	S249= B.Out=>ALU.B                                          Premise(F139)
	S250= CU.Func=>ALU.Func                                     Premise(F140)
	S251= ALU.Func=alu_or                                       Path(S237,S250)
	S252= ALU.Out=>ALUOut.In                                    Premise(F141)
	S253= ALU.CMP=>DataCmb.A                                    Premise(F142)
	S254= XER.SOOut=>DataCmb.B                                  Premise(F143)
	S255= DataCmb.Out=>DR4bit.In                                Premise(F144)
	S256= IR.Out11_15=>GPRegs.WReg                              Premise(F145)
	S257= GPRegs.WReg=rA                                        Path(S196,S256)
	S258= ALUOut.Out=>GPRegs.WData                              Premise(F146)
	S259= DR4bit.Out=>CRRegs.CR0In                              Premise(F147)
	S260= CtrlPIDReg=0                                          Premise(F148)
	S261= [PIDReg]=pid                                          PIDReg-Hold(S146,S260)
	S262= CtrlIMMU=0                                            Premise(F149)
	S263= CtrlPC=0                                              Premise(F150)
	S264= CtrlPCInc=0                                           Premise(F151)
	S265= PC[CIA]=addr                                          PC-Hold(S151,S264)
	S266= PC[Out]=addr+4                                        PC-Hold(S150,S263,S264)
	S267= CtrlIAddrReg=0                                        Premise(F152)
	S268= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S153,S267)
	S269= CtrlIMMUHitReg=0                                      Premise(F153)
	S270= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S155,S269)
	S271= CtrlICache=0                                          Premise(F154)
	S272= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S157,S271)
	S273= CtrlICacheReg=0                                       Premise(F155)
	S274= CtrlICacheHitReg=0                                    Premise(F156)
	S275= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S160,S274)
	S276= CtrlIMem=0                                            Premise(F157)
	S277= IMem[{pid,addr}]={24,rS,rA,UIMM}                      IMem-Hold(S162,S276)
	S278= CtrlIRMux=0                                           Premise(F158)
	S279= CtrlIR=0                                              Premise(F159)
	S280= [IR]={24,rS,rA,UIMM}                                  IR-Hold(S165,S279)
	S281= CtrlGPRegs=0                                          Premise(F160)
	S282= GPRegs[rS]=a                                          GPRegs-Hold(S167,S281)
	S283= CtrlA=1                                               Premise(F161)
	S284= [A]=a                                                 A-Write(S245,S283)
	S285= CtrlB=1                                               Premise(F162)
	S286= [B]={16'b0,UIMM}                                      B-Write(S247,S285)
	S287= CtrlALUOut=0                                          Premise(F163)
	S288= CtrlXERSO=0                                           Premise(F164)
	S289= CtrlXEROV=0                                           Premise(F165)
	S290= CtrlXERCA=0                                           Premise(F166)
	S291= CtrlDR4bit=0                                          Premise(F167)
	S292= CtrlCRRegs=0                                          Premise(F168)
	S293= CtrlCRRegsCR0=0                                       Premise(F169)
	S294= CtrlCRRegsW4bitRegs=0                                 Premise(F170)
	S295= CtrlCRRegsW1bitRegs=0                                 Premise(F171)

EX	S296= PIDReg.Out=pid                                        PIDReg-Out(S261)
	S297= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S261)
	S298= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S261)
	S299= PC.CIA=addr                                           PC-Out(S265)
	S300= PC.CIA31_28=addr[31:28]                               PC-Out(S265)
	S301= PC.Out=addr+4                                         PC-Out(S266)
	S302= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S268)
	S303= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S268)
	S304= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S268)
	S305= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S270)
	S306= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S270)
	S307= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S270)
	S308= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S275)
	S309= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S275)
	S310= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S275)
	S311= IR.Out0_5=24                                          IR-Out(S280)
	S312= IR.Out6_10=rS                                         IR-Out(S280)
	S313= IR.Out11_15=rA                                        IR-Out(S280)
	S314= IR.Out16_31=UIMM                                      IR-Out(S280)
	S315= A.Out=a                                               A-Out(S284)
	S316= A.Out26_31=a[26:31]                                   A-Out(S284)
	S317= A.Out30_31=a[30:31]                                   A-Out(S284)
	S318= B.Out={16'b0,UIMM}                                    B-Out(S286)
	S319= B.Out26_31={16'b0,UIMM}[26:31]                        B-Out(S286)
	S320= B.Out30_31={16'b0,UIMM}[30:31]                        B-Out(S286)
	S321= PIDReg.Out=>IMMU.PID                                  Premise(F172)
	S322= IMMU.PID=pid                                          Path(S296,S321)
	S323= PC.Out=>IMMU.IEA                                      Premise(F173)
	S324= IMMU.IEA=addr+4                                       Path(S301,S323)
	S325= IMMU.Addr={pid,addr+4}                                IMMU-Search(S322,S324)
	S326= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S322,S324)
	S327= IMMU.Addr=>IAddrReg.In                                Premise(F174)
	S328= IAddrReg.In={pid,addr+4}                              Path(S325,S327)
	S329= IMMU.Hit=>IMMUHitReg.In                               Premise(F175)
	S330= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S326,S329)
	S331= PC.Out=>ICache.IEA                                    Premise(F176)
	S332= ICache.IEA=addr+4                                     Path(S301,S331)
	S333= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S332)
	S334= ICache.Out=>ICacheReg.In                              Premise(F177)
	S335= ICache.Hit=>ICacheHitReg.In                           Premise(F178)
	S336= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S333,S335)
	S337= IMMUHitReg.Out=>CU.IMemHit                            Premise(F179)
	S338= CU.IMemHit=IMMUHit(pid,addr)                          Path(S305,S337)
	S339= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F180)
	S340= CU.ICacheHit=ICacheHit(addr)                          Path(S308,S339)
	S341= IAddrReg.Out=>IMem.RAddr                              Premise(F181)
	S342= IMem.RAddr={pid,addr}                                 Path(S302,S341)
	S343= IMem.Out={24,rS,rA,UIMM}                              IMem-Read(S342,S277)
	S344= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S342,S277)
	S345= IMem.Out=>IRMux.MemData                               Premise(F182)
	S346= IRMux.MemData={24,rS,rA,UIMM}                         Path(S343,S345)
	S347= IRMux.Out={24,rS,rA,UIMM}                             IRMux-Select(S346)
	S348= ICacheReg.Out=>IRMux.CacheData                        Premise(F183)
	S349= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F184)
	S350= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S305,S349)
	S351= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F185)
	S352= IRMux.CacheSel=ICacheHit(addr)                        Path(S308,S351)
	S353= IRMux.Out=>IR.In                                      Premise(F186)
	S354= IR.In={24,rS,rA,UIMM}                                 Path(S347,S353)
	S355= IMem.MEM8WordOut=>ICache.WData                        Premise(F187)
	S356= ICache.WData=IMemGet8Word({pid,addr})                 Path(S344,S355)
	S357= PC.Out=>ICache.IEA                                    Premise(F188)
	S358= IR.Out0_5=>CU.Op                                      Premise(F189)
	S359= CU.Op=24                                              Path(S311,S358)
	S360= CU.Func=alu_or                                        CU(S359)
	S361= IR.Out6_10=>GPRegs.RReg1                              Premise(F190)
	S362= GPRegs.RReg1=rS                                       Path(S312,S361)
	S363= GPRegs.Rdata1=a                                       GPRegs-Read(S362,S282)
	S364= IR.Out16_31=>LIMMEXT.In                               Premise(F191)
	S365= LIMMEXT.In=UIMM                                       Path(S314,S364)
	S366= LIMMEXT.Out={16'b0,UIMM}                              LIMMEXT(S365)
	S367= GPRegs.Rdata1=>A.In                                   Premise(F192)
	S368= A.In=a                                                Path(S363,S367)
	S369= LIMMEXT.Out=>B.In                                     Premise(F193)
	S370= B.In={16'b0,UIMM}                                     Path(S366,S369)
	S371= A.Out=>ALU.A                                          Premise(F194)
	S372= ALU.A=a                                               Path(S315,S371)
	S373= B.Out=>ALU.B                                          Premise(F195)
	S374= ALU.B={16'b0,UIMM}                                    Path(S318,S373)
	S375= CU.Func=>ALU.Func                                     Premise(F196)
	S376= ALU.Func=alu_or                                       Path(S360,S375)
	S377= ALU.Out=a|{16'b0,UIMM}                                ALU(S372,S374)
	S378= ALU.CMP=Compare0(a|{16'b0,UIMM})                      ALU(S372,S374)
	S379= ALU.OV=OverFlow(a|{16'b0,UIMM})                       ALU(S372,S374)
	S380= ALU.CA=Carry(a|{16'b0,UIMM})                          ALU(S372,S374)
	S381= ALU.Out=>ALUOut.In                                    Premise(F197)
	S382= ALUOut.In=a|{16'b0,UIMM}                              Path(S377,S381)
	S383= ALU.CMP=>DataCmb.A                                    Premise(F198)
	S384= DataCmb.A=Compare0(a|{16'b0,UIMM})                    Path(S378,S383)
	S385= XER.SOOut=>DataCmb.B                                  Premise(F199)
	S386= DataCmb.Out=>DR4bit.In                                Premise(F200)
	S387= IR.Out11_15=>GPRegs.WReg                              Premise(F201)
	S388= GPRegs.WReg=rA                                        Path(S313,S387)
	S389= ALUOut.Out=>GPRegs.WData                              Premise(F202)
	S390= DR4bit.Out=>CRRegs.CR0In                              Premise(F203)
	S391= CtrlPIDReg=0                                          Premise(F204)
	S392= [PIDReg]=pid                                          PIDReg-Hold(S261,S391)
	S393= CtrlIMMU=0                                            Premise(F205)
	S394= CtrlPC=0                                              Premise(F206)
	S395= CtrlPCInc=0                                           Premise(F207)
	S396= PC[CIA]=addr                                          PC-Hold(S265,S395)
	S397= PC[Out]=addr+4                                        PC-Hold(S266,S394,S395)
	S398= CtrlIAddrReg=0                                        Premise(F208)
	S399= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S268,S398)
	S400= CtrlIMMUHitReg=0                                      Premise(F209)
	S401= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S270,S400)
	S402= CtrlICache=0                                          Premise(F210)
	S403= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S272,S402)
	S404= CtrlICacheReg=0                                       Premise(F211)
	S405= CtrlICacheHitReg=0                                    Premise(F212)
	S406= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S275,S405)
	S407= CtrlIMem=0                                            Premise(F213)
	S408= IMem[{pid,addr}]={24,rS,rA,UIMM}                      IMem-Hold(S277,S407)
	S409= CtrlIRMux=0                                           Premise(F214)
	S410= CtrlIR=0                                              Premise(F215)
	S411= [IR]={24,rS,rA,UIMM}                                  IR-Hold(S280,S410)
	S412= CtrlGPRegs=0                                          Premise(F216)
	S413= GPRegs[rS]=a                                          GPRegs-Hold(S282,S412)
	S414= CtrlA=0                                               Premise(F217)
	S415= [A]=a                                                 A-Hold(S284,S414)
	S416= CtrlB=0                                               Premise(F218)
	S417= [B]={16'b0,UIMM}                                      B-Hold(S286,S416)
	S418= CtrlALUOut=1                                          Premise(F219)
	S419= [ALUOut]=a|{16'b0,UIMM}                               ALUOut-Write(S382,S418)
	S420= CtrlXERSO=0                                           Premise(F220)
	S421= CtrlXEROV=0                                           Premise(F221)
	S422= CtrlXERCA=0                                           Premise(F222)
	S423= CtrlDR4bit=1                                          Premise(F223)
	S424= CtrlCRRegs=0                                          Premise(F224)
	S425= CtrlCRRegsCR0=0                                       Premise(F225)
	S426= CtrlCRRegsW4bitRegs=0                                 Premise(F226)
	S427= CtrlCRRegsW1bitRegs=0                                 Premise(F227)

MEM	S428= PIDReg.Out=pid                                        PIDReg-Out(S392)
	S429= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S392)
	S430= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S392)
	S431= PC.CIA=addr                                           PC-Out(S396)
	S432= PC.CIA31_28=addr[31:28]                               PC-Out(S396)
	S433= PC.Out=addr+4                                         PC-Out(S397)
	S434= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S399)
	S435= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S399)
	S436= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S399)
	S437= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S401)
	S438= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S401)
	S439= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S401)
	S440= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S406)
	S441= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S406)
	S442= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S406)
	S443= IR.Out0_5=24                                          IR-Out(S411)
	S444= IR.Out6_10=rS                                         IR-Out(S411)
	S445= IR.Out11_15=rA                                        IR-Out(S411)
	S446= IR.Out16_31=UIMM                                      IR-Out(S411)
	S447= A.Out=a                                               A-Out(S415)
	S448= A.Out26_31=a[26:31]                                   A-Out(S415)
	S449= A.Out30_31=a[30:31]                                   A-Out(S415)
	S450= B.Out={16'b0,UIMM}                                    B-Out(S417)
	S451= B.Out26_31={16'b0,UIMM}[26:31]                        B-Out(S417)
	S452= B.Out30_31={16'b0,UIMM}[30:31]                        B-Out(S417)
	S453= ALUOut.Out=a|{16'b0,UIMM}                             ALUOut-Out(S419)
	S454= ALUOut.Out26_31=a|{16'b0,UIMM}[26:31]                 ALUOut-Out(S419)
	S455= ALUOut.Out30_31=a|{16'b0,UIMM}[30:31]                 ALUOut-Out(S419)
	S456= PIDReg.Out=>IMMU.PID                                  Premise(F228)
	S457= IMMU.PID=pid                                          Path(S428,S456)
	S458= PC.Out=>IMMU.IEA                                      Premise(F229)
	S459= IMMU.IEA=addr+4                                       Path(S433,S458)
	S460= IMMU.Addr={pid,addr+4}                                IMMU-Search(S457,S459)
	S461= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S457,S459)
	S462= IMMU.Addr=>IAddrReg.In                                Premise(F230)
	S463= IAddrReg.In={pid,addr+4}                              Path(S460,S462)
	S464= IMMU.Hit=>IMMUHitReg.In                               Premise(F231)
	S465= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S461,S464)
	S466= PC.Out=>ICache.IEA                                    Premise(F232)
	S467= ICache.IEA=addr+4                                     Path(S433,S466)
	S468= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S467)
	S469= ICache.Out=>ICacheReg.In                              Premise(F233)
	S470= ICache.Hit=>ICacheHitReg.In                           Premise(F234)
	S471= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S468,S470)
	S472= IMMUHitReg.Out=>CU.IMemHit                            Premise(F235)
	S473= CU.IMemHit=IMMUHit(pid,addr)                          Path(S437,S472)
	S474= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F236)
	S475= CU.ICacheHit=ICacheHit(addr)                          Path(S440,S474)
	S476= IAddrReg.Out=>IMem.RAddr                              Premise(F237)
	S477= IMem.RAddr={pid,addr}                                 Path(S434,S476)
	S478= IMem.Out={24,rS,rA,UIMM}                              IMem-Read(S477,S408)
	S479= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S477,S408)
	S480= IMem.Out=>IRMux.MemData                               Premise(F238)
	S481= IRMux.MemData={24,rS,rA,UIMM}                         Path(S478,S480)
	S482= IRMux.Out={24,rS,rA,UIMM}                             IRMux-Select(S481)
	S483= ICacheReg.Out=>IRMux.CacheData                        Premise(F239)
	S484= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F240)
	S485= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S437,S484)
	S486= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F241)
	S487= IRMux.CacheSel=ICacheHit(addr)                        Path(S440,S486)
	S488= IRMux.Out=>IR.In                                      Premise(F242)
	S489= IR.In={24,rS,rA,UIMM}                                 Path(S482,S488)
	S490= IMem.MEM8WordOut=>ICache.WData                        Premise(F243)
	S491= ICache.WData=IMemGet8Word({pid,addr})                 Path(S479,S490)
	S492= PC.Out=>ICache.IEA                                    Premise(F244)
	S493= IR.Out0_5=>CU.Op                                      Premise(F245)
	S494= CU.Op=24                                              Path(S443,S493)
	S495= CU.Func=alu_or                                        CU(S494)
	S496= IR.Out6_10=>GPRegs.RReg1                              Premise(F246)
	S497= GPRegs.RReg1=rS                                       Path(S444,S496)
	S498= GPRegs.Rdata1=a                                       GPRegs-Read(S497,S413)
	S499= IR.Out16_31=>LIMMEXT.In                               Premise(F247)
	S500= LIMMEXT.In=UIMM                                       Path(S446,S499)
	S501= LIMMEXT.Out={16'b0,UIMM}                              LIMMEXT(S500)
	S502= GPRegs.Rdata1=>A.In                                   Premise(F248)
	S503= A.In=a                                                Path(S498,S502)
	S504= LIMMEXT.Out=>B.In                                     Premise(F249)
	S505= B.In={16'b0,UIMM}                                     Path(S501,S504)
	S506= A.Out=>ALU.A                                          Premise(F250)
	S507= ALU.A=a                                               Path(S447,S506)
	S508= B.Out=>ALU.B                                          Premise(F251)
	S509= ALU.B={16'b0,UIMM}                                    Path(S450,S508)
	S510= CU.Func=>ALU.Func                                     Premise(F252)
	S511= ALU.Func=alu_or                                       Path(S495,S510)
	S512= ALU.Out=a|{16'b0,UIMM}                                ALU(S507,S509)
	S513= ALU.CMP=Compare0(a|{16'b0,UIMM})                      ALU(S507,S509)
	S514= ALU.OV=OverFlow(a|{16'b0,UIMM})                       ALU(S507,S509)
	S515= ALU.CA=Carry(a|{16'b0,UIMM})                          ALU(S507,S509)
	S516= ALU.Out=>ALUOut.In                                    Premise(F253)
	S517= ALUOut.In=a|{16'b0,UIMM}                              Path(S512,S516)
	S518= ALU.CMP=>DataCmb.A                                    Premise(F254)
	S519= DataCmb.A=Compare0(a|{16'b0,UIMM})                    Path(S513,S518)
	S520= XER.SOOut=>DataCmb.B                                  Premise(F255)
	S521= DataCmb.Out=>DR4bit.In                                Premise(F256)
	S522= IR.Out11_15=>GPRegs.WReg                              Premise(F257)
	S523= GPRegs.WReg=rA                                        Path(S445,S522)
	S524= ALUOut.Out=>GPRegs.WData                              Premise(F258)
	S525= GPRegs.WData=a|{16'b0,UIMM}                           Path(S453,S524)
	S526= DR4bit.Out=>CRRegs.CR0In                              Premise(F259)
	S527= CtrlPIDReg=0                                          Premise(F260)
	S528= [PIDReg]=pid                                          PIDReg-Hold(S392,S527)
	S529= CtrlIMMU=0                                            Premise(F261)
	S530= CtrlPC=0                                              Premise(F262)
	S531= CtrlPCInc=0                                           Premise(F263)
	S532= PC[CIA]=addr                                          PC-Hold(S396,S531)
	S533= PC[Out]=addr+4                                        PC-Hold(S397,S530,S531)
	S534= CtrlIAddrReg=0                                        Premise(F264)
	S535= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S399,S534)
	S536= CtrlIMMUHitReg=0                                      Premise(F265)
	S537= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S401,S536)
	S538= CtrlICache=0                                          Premise(F266)
	S539= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S403,S538)
	S540= CtrlICacheReg=0                                       Premise(F267)
	S541= CtrlICacheHitReg=0                                    Premise(F268)
	S542= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S406,S541)
	S543= CtrlIMem=0                                            Premise(F269)
	S544= IMem[{pid,addr}]={24,rS,rA,UIMM}                      IMem-Hold(S408,S543)
	S545= CtrlIRMux=0                                           Premise(F270)
	S546= CtrlIR=0                                              Premise(F271)
	S547= [IR]={24,rS,rA,UIMM}                                  IR-Hold(S411,S546)
	S548= CtrlGPRegs=0                                          Premise(F272)
	S549= GPRegs[rS]=a                                          GPRegs-Hold(S413,S548)
	S550= CtrlA=0                                               Premise(F273)
	S551= [A]=a                                                 A-Hold(S415,S550)
	S552= CtrlB=0                                               Premise(F274)
	S553= [B]={16'b0,UIMM}                                      B-Hold(S417,S552)
	S554= CtrlALUOut=0                                          Premise(F275)
	S555= [ALUOut]=a|{16'b0,UIMM}                               ALUOut-Hold(S419,S554)
	S556= CtrlXERSO=0                                           Premise(F276)
	S557= CtrlXEROV=0                                           Premise(F277)
	S558= CtrlXERCA=0                                           Premise(F278)
	S559= CtrlDR4bit=0                                          Premise(F279)
	S560= CtrlCRRegs=0                                          Premise(F280)
	S561= CtrlCRRegsCR0=0                                       Premise(F281)
	S562= CtrlCRRegsW4bitRegs=0                                 Premise(F282)
	S563= CtrlCRRegsW1bitRegs=0                                 Premise(F283)

DMMU1	S564= PIDReg.Out=pid                                        PIDReg-Out(S528)
	S565= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S528)
	S566= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S528)
	S567= PC.CIA=addr                                           PC-Out(S532)
	S568= PC.CIA31_28=addr[31:28]                               PC-Out(S532)
	S569= PC.Out=addr+4                                         PC-Out(S533)
	S570= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S535)
	S571= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S535)
	S572= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S535)
	S573= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S537)
	S574= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S537)
	S575= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S537)
	S576= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S542)
	S577= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S542)
	S578= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S542)
	S579= IR.Out0_5=24                                          IR-Out(S547)
	S580= IR.Out6_10=rS                                         IR-Out(S547)
	S581= IR.Out11_15=rA                                        IR-Out(S547)
	S582= IR.Out16_31=UIMM                                      IR-Out(S547)
	S583= A.Out=a                                               A-Out(S551)
	S584= A.Out26_31=a[26:31]                                   A-Out(S551)
	S585= A.Out30_31=a[30:31]                                   A-Out(S551)
	S586= B.Out={16'b0,UIMM}                                    B-Out(S553)
	S587= B.Out26_31={16'b0,UIMM}[26:31]                        B-Out(S553)
	S588= B.Out30_31={16'b0,UIMM}[30:31]                        B-Out(S553)
	S589= ALUOut.Out=a|{16'b0,UIMM}                             ALUOut-Out(S555)
	S590= ALUOut.Out26_31=a|{16'b0,UIMM}[26:31]                 ALUOut-Out(S555)
	S591= ALUOut.Out30_31=a|{16'b0,UIMM}[30:31]                 ALUOut-Out(S555)
	S592= PIDReg.Out=>IMMU.PID                                  Premise(F284)
	S593= IMMU.PID=pid                                          Path(S564,S592)
	S594= PC.Out=>IMMU.IEA                                      Premise(F285)
	S595= IMMU.IEA=addr+4                                       Path(S569,S594)
	S596= IMMU.Addr={pid,addr+4}                                IMMU-Search(S593,S595)
	S597= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S593,S595)
	S598= IMMU.Addr=>IAddrReg.In                                Premise(F286)
	S599= IAddrReg.In={pid,addr+4}                              Path(S596,S598)
	S600= IMMU.Hit=>IMMUHitReg.In                               Premise(F287)
	S601= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S597,S600)
	S602= PC.Out=>ICache.IEA                                    Premise(F288)
	S603= ICache.IEA=addr+4                                     Path(S569,S602)
	S604= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S603)
	S605= ICache.Out=>ICacheReg.In                              Premise(F289)
	S606= ICache.Hit=>ICacheHitReg.In                           Premise(F290)
	S607= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S604,S606)
	S608= IMMUHitReg.Out=>CU.IMemHit                            Premise(F291)
	S609= CU.IMemHit=IMMUHit(pid,addr)                          Path(S573,S608)
	S610= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F292)
	S611= CU.ICacheHit=ICacheHit(addr)                          Path(S576,S610)
	S612= IAddrReg.Out=>IMem.RAddr                              Premise(F293)
	S613= IMem.RAddr={pid,addr}                                 Path(S570,S612)
	S614= IMem.Out={24,rS,rA,UIMM}                              IMem-Read(S613,S544)
	S615= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S613,S544)
	S616= IMem.Out=>IRMux.MemData                               Premise(F294)
	S617= IRMux.MemData={24,rS,rA,UIMM}                         Path(S614,S616)
	S618= IRMux.Out={24,rS,rA,UIMM}                             IRMux-Select(S617)
	S619= ICacheReg.Out=>IRMux.CacheData                        Premise(F295)
	S620= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F296)
	S621= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S573,S620)
	S622= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F297)
	S623= IRMux.CacheSel=ICacheHit(addr)                        Path(S576,S622)
	S624= IRMux.Out=>IR.In                                      Premise(F298)
	S625= IR.In={24,rS,rA,UIMM}                                 Path(S618,S624)
	S626= IMem.MEM8WordOut=>ICache.WData                        Premise(F299)
	S627= ICache.WData=IMemGet8Word({pid,addr})                 Path(S615,S626)
	S628= PC.Out=>ICache.IEA                                    Premise(F300)
	S629= IR.Out0_5=>CU.Op                                      Premise(F301)
	S630= CU.Op=24                                              Path(S579,S629)
	S631= CU.Func=alu_or                                        CU(S630)
	S632= IR.Out6_10=>GPRegs.RReg1                              Premise(F302)
	S633= GPRegs.RReg1=rS                                       Path(S580,S632)
	S634= GPRegs.Rdata1=a                                       GPRegs-Read(S633,S549)
	S635= IR.Out16_31=>LIMMEXT.In                               Premise(F303)
	S636= LIMMEXT.In=UIMM                                       Path(S582,S635)
	S637= LIMMEXT.Out={16'b0,UIMM}                              LIMMEXT(S636)
	S638= GPRegs.Rdata1=>A.In                                   Premise(F304)
	S639= A.In=a                                                Path(S634,S638)
	S640= LIMMEXT.Out=>B.In                                     Premise(F305)
	S641= B.In={16'b0,UIMM}                                     Path(S637,S640)
	S642= A.Out=>ALU.A                                          Premise(F306)
	S643= ALU.A=a                                               Path(S583,S642)
	S644= B.Out=>ALU.B                                          Premise(F307)
	S645= ALU.B={16'b0,UIMM}                                    Path(S586,S644)
	S646= CU.Func=>ALU.Func                                     Premise(F308)
	S647= ALU.Func=alu_or                                       Path(S631,S646)
	S648= ALU.Out=a|{16'b0,UIMM}                                ALU(S643,S645)
	S649= ALU.CMP=Compare0(a|{16'b0,UIMM})                      ALU(S643,S645)
	S650= ALU.OV=OverFlow(a|{16'b0,UIMM})                       ALU(S643,S645)
	S651= ALU.CA=Carry(a|{16'b0,UIMM})                          ALU(S643,S645)
	S652= ALU.Out=>ALUOut.In                                    Premise(F309)
	S653= ALUOut.In=a|{16'b0,UIMM}                              Path(S648,S652)
	S654= ALU.CMP=>DataCmb.A                                    Premise(F310)
	S655= DataCmb.A=Compare0(a|{16'b0,UIMM})                    Path(S649,S654)
	S656= XER.SOOut=>DataCmb.B                                  Premise(F311)
	S657= DataCmb.Out=>DR4bit.In                                Premise(F312)
	S658= IR.Out11_15=>GPRegs.WReg                              Premise(F313)
	S659= GPRegs.WReg=rA                                        Path(S581,S658)
	S660= ALUOut.Out=>GPRegs.WData                              Premise(F314)
	S661= GPRegs.WData=a|{16'b0,UIMM}                           Path(S589,S660)
	S662= DR4bit.Out=>CRRegs.CR0In                              Premise(F315)
	S663= CtrlPIDReg=0                                          Premise(F316)
	S664= [PIDReg]=pid                                          PIDReg-Hold(S528,S663)
	S665= CtrlIMMU=0                                            Premise(F317)
	S666= CtrlPC=0                                              Premise(F318)
	S667= CtrlPCInc=0                                           Premise(F319)
	S668= PC[CIA]=addr                                          PC-Hold(S532,S667)
	S669= PC[Out]=addr+4                                        PC-Hold(S533,S666,S667)
	S670= CtrlIAddrReg=0                                        Premise(F320)
	S671= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S535,S670)
	S672= CtrlIMMUHitReg=0                                      Premise(F321)
	S673= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S537,S672)
	S674= CtrlICache=0                                          Premise(F322)
	S675= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S539,S674)
	S676= CtrlICacheReg=0                                       Premise(F323)
	S677= CtrlICacheHitReg=0                                    Premise(F324)
	S678= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S542,S677)
	S679= CtrlIMem=0                                            Premise(F325)
	S680= IMem[{pid,addr}]={24,rS,rA,UIMM}                      IMem-Hold(S544,S679)
	S681= CtrlIRMux=0                                           Premise(F326)
	S682= CtrlIR=0                                              Premise(F327)
	S683= [IR]={24,rS,rA,UIMM}                                  IR-Hold(S547,S682)
	S684= CtrlGPRegs=0                                          Premise(F328)
	S685= GPRegs[rS]=a                                          GPRegs-Hold(S549,S684)
	S686= CtrlA=0                                               Premise(F329)
	S687= [A]=a                                                 A-Hold(S551,S686)
	S688= CtrlB=0                                               Premise(F330)
	S689= [B]={16'b0,UIMM}                                      B-Hold(S553,S688)
	S690= CtrlALUOut=0                                          Premise(F331)
	S691= [ALUOut]=a|{16'b0,UIMM}                               ALUOut-Hold(S555,S690)
	S692= CtrlXERSO=0                                           Premise(F332)
	S693= CtrlXEROV=0                                           Premise(F333)
	S694= CtrlXERCA=0                                           Premise(F334)
	S695= CtrlDR4bit=0                                          Premise(F335)
	S696= CtrlCRRegs=0                                          Premise(F336)
	S697= CtrlCRRegsCR0=0                                       Premise(F337)
	S698= CtrlCRRegsW4bitRegs=0                                 Premise(F338)
	S699= CtrlCRRegsW1bitRegs=0                                 Premise(F339)

DMMU2	S700= PIDReg.Out=pid                                        PIDReg-Out(S664)
	S701= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S664)
	S702= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S664)
	S703= PC.CIA=addr                                           PC-Out(S668)
	S704= PC.CIA31_28=addr[31:28]                               PC-Out(S668)
	S705= PC.Out=addr+4                                         PC-Out(S669)
	S706= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S671)
	S707= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S671)
	S708= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S671)
	S709= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S673)
	S710= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S673)
	S711= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S673)
	S712= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S678)
	S713= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S678)
	S714= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S678)
	S715= IR.Out0_5=24                                          IR-Out(S683)
	S716= IR.Out6_10=rS                                         IR-Out(S683)
	S717= IR.Out11_15=rA                                        IR-Out(S683)
	S718= IR.Out16_31=UIMM                                      IR-Out(S683)
	S719= A.Out=a                                               A-Out(S687)
	S720= A.Out26_31=a[26:31]                                   A-Out(S687)
	S721= A.Out30_31=a[30:31]                                   A-Out(S687)
	S722= B.Out={16'b0,UIMM}                                    B-Out(S689)
	S723= B.Out26_31={16'b0,UIMM}[26:31]                        B-Out(S689)
	S724= B.Out30_31={16'b0,UIMM}[30:31]                        B-Out(S689)
	S725= ALUOut.Out=a|{16'b0,UIMM}                             ALUOut-Out(S691)
	S726= ALUOut.Out26_31=a|{16'b0,UIMM}[26:31]                 ALUOut-Out(S691)
	S727= ALUOut.Out30_31=a|{16'b0,UIMM}[30:31]                 ALUOut-Out(S691)
	S728= PIDReg.Out=>IMMU.PID                                  Premise(F340)
	S729= IMMU.PID=pid                                          Path(S700,S728)
	S730= PC.Out=>IMMU.IEA                                      Premise(F341)
	S731= IMMU.IEA=addr+4                                       Path(S705,S730)
	S732= IMMU.Addr={pid,addr+4}                                IMMU-Search(S729,S731)
	S733= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S729,S731)
	S734= IMMU.Addr=>IAddrReg.In                                Premise(F342)
	S735= IAddrReg.In={pid,addr+4}                              Path(S732,S734)
	S736= IMMU.Hit=>IMMUHitReg.In                               Premise(F343)
	S737= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S733,S736)
	S738= PC.Out=>ICache.IEA                                    Premise(F344)
	S739= ICache.IEA=addr+4                                     Path(S705,S738)
	S740= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S739)
	S741= ICache.Out=>ICacheReg.In                              Premise(F345)
	S742= ICache.Hit=>ICacheHitReg.In                           Premise(F346)
	S743= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S740,S742)
	S744= IMMUHitReg.Out=>CU.IMemHit                            Premise(F347)
	S745= CU.IMemHit=IMMUHit(pid,addr)                          Path(S709,S744)
	S746= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F348)
	S747= CU.ICacheHit=ICacheHit(addr)                          Path(S712,S746)
	S748= IAddrReg.Out=>IMem.RAddr                              Premise(F349)
	S749= IMem.RAddr={pid,addr}                                 Path(S706,S748)
	S750= IMem.Out={24,rS,rA,UIMM}                              IMem-Read(S749,S680)
	S751= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S749,S680)
	S752= IMem.Out=>IRMux.MemData                               Premise(F350)
	S753= IRMux.MemData={24,rS,rA,UIMM}                         Path(S750,S752)
	S754= IRMux.Out={24,rS,rA,UIMM}                             IRMux-Select(S753)
	S755= ICacheReg.Out=>IRMux.CacheData                        Premise(F351)
	S756= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F352)
	S757= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S709,S756)
	S758= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F353)
	S759= IRMux.CacheSel=ICacheHit(addr)                        Path(S712,S758)
	S760= IRMux.Out=>IR.In                                      Premise(F354)
	S761= IR.In={24,rS,rA,UIMM}                                 Path(S754,S760)
	S762= IMem.MEM8WordOut=>ICache.WData                        Premise(F355)
	S763= ICache.WData=IMemGet8Word({pid,addr})                 Path(S751,S762)
	S764= PC.Out=>ICache.IEA                                    Premise(F356)
	S765= IR.Out0_5=>CU.Op                                      Premise(F357)
	S766= CU.Op=24                                              Path(S715,S765)
	S767= CU.Func=alu_or                                        CU(S766)
	S768= IR.Out6_10=>GPRegs.RReg1                              Premise(F358)
	S769= GPRegs.RReg1=rS                                       Path(S716,S768)
	S770= GPRegs.Rdata1=a                                       GPRegs-Read(S769,S685)
	S771= IR.Out16_31=>LIMMEXT.In                               Premise(F359)
	S772= LIMMEXT.In=UIMM                                       Path(S718,S771)
	S773= LIMMEXT.Out={16'b0,UIMM}                              LIMMEXT(S772)
	S774= GPRegs.Rdata1=>A.In                                   Premise(F360)
	S775= A.In=a                                                Path(S770,S774)
	S776= LIMMEXT.Out=>B.In                                     Premise(F361)
	S777= B.In={16'b0,UIMM}                                     Path(S773,S776)
	S778= A.Out=>ALU.A                                          Premise(F362)
	S779= ALU.A=a                                               Path(S719,S778)
	S780= B.Out=>ALU.B                                          Premise(F363)
	S781= ALU.B={16'b0,UIMM}                                    Path(S722,S780)
	S782= CU.Func=>ALU.Func                                     Premise(F364)
	S783= ALU.Func=alu_or                                       Path(S767,S782)
	S784= ALU.Out=a|{16'b0,UIMM}                                ALU(S779,S781)
	S785= ALU.CMP=Compare0(a|{16'b0,UIMM})                      ALU(S779,S781)
	S786= ALU.OV=OverFlow(a|{16'b0,UIMM})                       ALU(S779,S781)
	S787= ALU.CA=Carry(a|{16'b0,UIMM})                          ALU(S779,S781)
	S788= ALU.Out=>ALUOut.In                                    Premise(F365)
	S789= ALUOut.In=a|{16'b0,UIMM}                              Path(S784,S788)
	S790= ALU.CMP=>DataCmb.A                                    Premise(F366)
	S791= DataCmb.A=Compare0(a|{16'b0,UIMM})                    Path(S785,S790)
	S792= XER.SOOut=>DataCmb.B                                  Premise(F367)
	S793= DataCmb.Out=>DR4bit.In                                Premise(F368)
	S794= IR.Out11_15=>GPRegs.WReg                              Premise(F369)
	S795= GPRegs.WReg=rA                                        Path(S717,S794)
	S796= ALUOut.Out=>GPRegs.WData                              Premise(F370)
	S797= GPRegs.WData=a|{16'b0,UIMM}                           Path(S725,S796)
	S798= DR4bit.Out=>CRRegs.CR0In                              Premise(F371)
	S799= CtrlPIDReg=0                                          Premise(F372)
	S800= [PIDReg]=pid                                          PIDReg-Hold(S664,S799)
	S801= CtrlIMMU=0                                            Premise(F373)
	S802= CtrlPC=0                                              Premise(F374)
	S803= CtrlPCInc=0                                           Premise(F375)
	S804= PC[CIA]=addr                                          PC-Hold(S668,S803)
	S805= PC[Out]=addr+4                                        PC-Hold(S669,S802,S803)
	S806= CtrlIAddrReg=0                                        Premise(F376)
	S807= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S671,S806)
	S808= CtrlIMMUHitReg=0                                      Premise(F377)
	S809= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S673,S808)
	S810= CtrlICache=0                                          Premise(F378)
	S811= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S675,S810)
	S812= CtrlICacheReg=0                                       Premise(F379)
	S813= CtrlICacheHitReg=0                                    Premise(F380)
	S814= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S678,S813)
	S815= CtrlIMem=0                                            Premise(F381)
	S816= IMem[{pid,addr}]={24,rS,rA,UIMM}                      IMem-Hold(S680,S815)
	S817= CtrlIRMux=0                                           Premise(F382)
	S818= CtrlIR=0                                              Premise(F383)
	S819= [IR]={24,rS,rA,UIMM}                                  IR-Hold(S683,S818)
	S820= CtrlGPRegs=0                                          Premise(F384)
	S821= GPRegs[rS]=a                                          GPRegs-Hold(S685,S820)
	S822= CtrlA=0                                               Premise(F385)
	S823= [A]=a                                                 A-Hold(S687,S822)
	S824= CtrlB=0                                               Premise(F386)
	S825= [B]={16'b0,UIMM}                                      B-Hold(S689,S824)
	S826= CtrlALUOut=0                                          Premise(F387)
	S827= [ALUOut]=a|{16'b0,UIMM}                               ALUOut-Hold(S691,S826)
	S828= CtrlXERSO=0                                           Premise(F388)
	S829= CtrlXEROV=0                                           Premise(F389)
	S830= CtrlXERCA=0                                           Premise(F390)
	S831= CtrlDR4bit=0                                          Premise(F391)
	S832= CtrlCRRegs=0                                          Premise(F392)
	S833= CtrlCRRegsCR0=0                                       Premise(F393)
	S834= CtrlCRRegsW4bitRegs=0                                 Premise(F394)
	S835= CtrlCRRegsW1bitRegs=0                                 Premise(F395)

WB	S836= PIDReg.Out=pid                                        PIDReg-Out(S800)
	S837= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S800)
	S838= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S800)
	S839= PC.CIA=addr                                           PC-Out(S804)
	S840= PC.CIA31_28=addr[31:28]                               PC-Out(S804)
	S841= PC.Out=addr+4                                         PC-Out(S805)
	S842= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S807)
	S843= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S807)
	S844= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S807)
	S845= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S809)
	S846= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S809)
	S847= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S809)
	S848= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S814)
	S849= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S814)
	S850= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S814)
	S851= IR.Out0_5=24                                          IR-Out(S819)
	S852= IR.Out6_10=rS                                         IR-Out(S819)
	S853= IR.Out11_15=rA                                        IR-Out(S819)
	S854= IR.Out16_31=UIMM                                      IR-Out(S819)
	S855= A.Out=a                                               A-Out(S823)
	S856= A.Out26_31=a[26:31]                                   A-Out(S823)
	S857= A.Out30_31=a[30:31]                                   A-Out(S823)
	S858= B.Out={16'b0,UIMM}                                    B-Out(S825)
	S859= B.Out26_31={16'b0,UIMM}[26:31]                        B-Out(S825)
	S860= B.Out30_31={16'b0,UIMM}[30:31]                        B-Out(S825)
	S861= ALUOut.Out=a|{16'b0,UIMM}                             ALUOut-Out(S827)
	S862= ALUOut.Out26_31=a|{16'b0,UIMM}[26:31]                 ALUOut-Out(S827)
	S863= ALUOut.Out30_31=a|{16'b0,UIMM}[30:31]                 ALUOut-Out(S827)
	S864= PIDReg.Out=>IMMU.PID                                  Premise(F396)
	S865= IMMU.PID=pid                                          Path(S836,S864)
	S866= PC.Out=>IMMU.IEA                                      Premise(F397)
	S867= IMMU.IEA=addr+4                                       Path(S841,S866)
	S868= IMMU.Addr={pid,addr+4}                                IMMU-Search(S865,S867)
	S869= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S865,S867)
	S870= IMMU.Addr=>IAddrReg.In                                Premise(F398)
	S871= IAddrReg.In={pid,addr+4}                              Path(S868,S870)
	S872= IMMU.Hit=>IMMUHitReg.In                               Premise(F399)
	S873= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S869,S872)
	S874= PC.Out=>ICache.IEA                                    Premise(F400)
	S875= ICache.IEA=addr+4                                     Path(S841,S874)
	S876= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S875)
	S877= ICache.Out=>ICacheReg.In                              Premise(F401)
	S878= ICache.Hit=>ICacheHitReg.In                           Premise(F402)
	S879= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S876,S878)
	S880= IMMUHitReg.Out=>CU.IMemHit                            Premise(F403)
	S881= CU.IMemHit=IMMUHit(pid,addr)                          Path(S845,S880)
	S882= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F404)
	S883= CU.ICacheHit=ICacheHit(addr)                          Path(S848,S882)
	S884= IAddrReg.Out=>IMem.RAddr                              Premise(F405)
	S885= IMem.RAddr={pid,addr}                                 Path(S842,S884)
	S886= IMem.Out={24,rS,rA,UIMM}                              IMem-Read(S885,S816)
	S887= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S885,S816)
	S888= IMem.Out=>IRMux.MemData                               Premise(F406)
	S889= IRMux.MemData={24,rS,rA,UIMM}                         Path(S886,S888)
	S890= IRMux.Out={24,rS,rA,UIMM}                             IRMux-Select(S889)
	S891= ICacheReg.Out=>IRMux.CacheData                        Premise(F407)
	S892= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F408)
	S893= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S845,S892)
	S894= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F409)
	S895= IRMux.CacheSel=ICacheHit(addr)                        Path(S848,S894)
	S896= IRMux.Out=>IR.In                                      Premise(F410)
	S897= IR.In={24,rS,rA,UIMM}                                 Path(S890,S896)
	S898= IMem.MEM8WordOut=>ICache.WData                        Premise(F411)
	S899= ICache.WData=IMemGet8Word({pid,addr})                 Path(S887,S898)
	S900= PC.Out=>ICache.IEA                                    Premise(F412)
	S901= IR.Out0_5=>CU.Op                                      Premise(F413)
	S902= CU.Op=24                                              Path(S851,S901)
	S903= CU.Func=alu_or                                        CU(S902)
	S904= IR.Out6_10=>GPRegs.RReg1                              Premise(F414)
	S905= GPRegs.RReg1=rS                                       Path(S852,S904)
	S906= GPRegs.Rdata1=a                                       GPRegs-Read(S905,S821)
	S907= IR.Out16_31=>LIMMEXT.In                               Premise(F415)
	S908= LIMMEXT.In=UIMM                                       Path(S854,S907)
	S909= LIMMEXT.Out={16'b0,UIMM}                              LIMMEXT(S908)
	S910= GPRegs.Rdata1=>A.In                                   Premise(F416)
	S911= A.In=a                                                Path(S906,S910)
	S912= LIMMEXT.Out=>B.In                                     Premise(F417)
	S913= B.In={16'b0,UIMM}                                     Path(S909,S912)
	S914= A.Out=>ALU.A                                          Premise(F418)
	S915= ALU.A=a                                               Path(S855,S914)
	S916= B.Out=>ALU.B                                          Premise(F419)
	S917= ALU.B={16'b0,UIMM}                                    Path(S858,S916)
	S918= CU.Func=>ALU.Func                                     Premise(F420)
	S919= ALU.Func=alu_or                                       Path(S903,S918)
	S920= ALU.Out=a|{16'b0,UIMM}                                ALU(S915,S917)
	S921= ALU.CMP=Compare0(a|{16'b0,UIMM})                      ALU(S915,S917)
	S922= ALU.OV=OverFlow(a|{16'b0,UIMM})                       ALU(S915,S917)
	S923= ALU.CA=Carry(a|{16'b0,UIMM})                          ALU(S915,S917)
	S924= ALU.Out=>ALUOut.In                                    Premise(F421)
	S925= ALUOut.In=a|{16'b0,UIMM}                              Path(S920,S924)
	S926= ALU.CMP=>DataCmb.A                                    Premise(F422)
	S927= DataCmb.A=Compare0(a|{16'b0,UIMM})                    Path(S921,S926)
	S928= XER.SOOut=>DataCmb.B                                  Premise(F423)
	S929= DataCmb.Out=>DR4bit.In                                Premise(F424)
	S930= IR.Out11_15=>GPRegs.WReg                              Premise(F425)
	S931= GPRegs.WReg=rA                                        Path(S853,S930)
	S932= ALUOut.Out=>GPRegs.WData                              Premise(F426)
	S933= GPRegs.WData=a|{16'b0,UIMM}                           Path(S861,S932)
	S934= DR4bit.Out=>CRRegs.CR0In                              Premise(F427)
	S935= CtrlPIDReg=0                                          Premise(F428)
	S936= [PIDReg]=pid                                          PIDReg-Hold(S800,S935)
	S937= CtrlIMMU=0                                            Premise(F429)
	S938= CtrlPC=0                                              Premise(F430)
	S939= CtrlPCInc=0                                           Premise(F431)
	S940= PC[CIA]=addr                                          PC-Hold(S804,S939)
	S941= PC[Out]=addr+4                                        PC-Hold(S805,S938,S939)
	S942= CtrlIAddrReg=0                                        Premise(F432)
	S943= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S807,S942)
	S944= CtrlIMMUHitReg=0                                      Premise(F433)
	S945= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S809,S944)
	S946= CtrlICache=0                                          Premise(F434)
	S947= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S811,S946)
	S948= CtrlICacheReg=0                                       Premise(F435)
	S949= CtrlICacheHitReg=0                                    Premise(F436)
	S950= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S814,S949)
	S951= CtrlIMem=0                                            Premise(F437)
	S952= IMem[{pid,addr}]={24,rS,rA,UIMM}                      IMem-Hold(S816,S951)
	S953= CtrlIRMux=0                                           Premise(F438)
	S954= CtrlIR=0                                              Premise(F439)
	S955= [IR]={24,rS,rA,UIMM}                                  IR-Hold(S819,S954)
	S956= CtrlGPRegs=1                                          Premise(F440)
	S957= GPRegs[rA]=a|{16'b0,UIMM}                             GPRegs-Write(S931,S933,S956)
	S958= CtrlA=0                                               Premise(F441)
	S959= [A]=a                                                 A-Hold(S823,S958)
	S960= CtrlB=0                                               Premise(F442)
	S961= [B]={16'b0,UIMM}                                      B-Hold(S825,S960)
	S962= CtrlALUOut=0                                          Premise(F443)
	S963= [ALUOut]=a|{16'b0,UIMM}                               ALUOut-Hold(S827,S962)
	S964= CtrlXERSO=0                                           Premise(F444)
	S965= CtrlXEROV=0                                           Premise(F445)
	S966= CtrlXERCA=0                                           Premise(F446)
	S967= CtrlDR4bit=0                                          Premise(F447)
	S968= CtrlCRRegs=0                                          Premise(F448)
	S969= CtrlCRRegsCR0=1                                       Premise(F449)
	S970= CtrlCRRegsW4bitRegs=0                                 Premise(F450)
	S971= CtrlCRRegsW1bitRegs=0                                 Premise(F451)

POST	S936= [PIDReg]=pid                                          PIDReg-Hold(S800,S935)
	S940= PC[CIA]=addr                                          PC-Hold(S804,S939)
	S941= PC[Out]=addr+4                                        PC-Hold(S805,S938,S939)
	S943= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S807,S942)
	S945= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S809,S944)
	S947= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S811,S946)
	S950= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S814,S949)
	S952= IMem[{pid,addr}]={24,rS,rA,UIMM}                      IMem-Hold(S816,S951)
	S955= [IR]={24,rS,rA,UIMM}                                  IR-Hold(S819,S954)
	S957= GPRegs[rA]=a|{16'b0,UIMM}                             GPRegs-Write(S931,S933,S956)
	S959= [A]=a                                                 A-Hold(S823,S958)
	S961= [B]={16'b0,UIMM}                                      B-Hold(S825,S960)
	S963= [ALUOut]=a|{16'b0,UIMM}                               ALUOut-Hold(S827,S962)

