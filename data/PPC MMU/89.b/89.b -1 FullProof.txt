
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={18,LI,0,0}                            Premise(F2)

IF	S3= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S4= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S5= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PIDReg.Out=>IMMU.PID                                    Premise(F3)
	S8= IMMU.PID=pid                                            Path(S3,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F4)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S8,S10)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F5)
	S14= IAddrReg.In={pid,addr}                                 Path(S11,S13)
	S15= IMMU.Hit=>IMMUHitReg.In                                Premise(F6)
	S16= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S12,S15)
	S17= PC.Out=>ICache.IEA                                     Premise(F7)
	S18= ICache.IEA=addr                                        Path(S6,S17)
	S19= ICache.Hit=ICacheHit(addr)                             ICache-Search(S18)
	S20= ICache.Out=>ICacheReg.In                               Premise(F8)
	S21= ICache.Hit=>ICacheHitReg.In                            Premise(F9)
	S22= ICacheHitReg.In=ICacheHit(addr)                        Path(S19,S21)
	S23= IMMUHitReg.Out=>CU.IMemHit                             Premise(F10)
	S24= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F11)
	S25= IAddrReg.Out=>IMem.RAddr                               Premise(F12)
	S26= IMem.Out=>IRMux.MemData                                Premise(F13)
	S27= ICacheReg.Out=>IRMux.CacheData                         Premise(F14)
	S28= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F15)
	S29= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F16)
	S30= IRMux.Out=>IR.In                                       Premise(F17)
	S31= IMem.MEM8WordOut=>ICache.WData                         Premise(F18)
	S32= PC.Out=>ICache.IEA                                     Premise(F19)
	S33= IR.Out0_5=>CU.Op                                       Premise(F20)
	S34= IR.Out31=>CU.LK                                        Premise(F21)
	S35= PC.Out=>LR.In                                          Premise(F22)
	S36= LR.In=addr                                             Path(S6,S35)
	S37= IR.Out6_29=>Addr24Ext.In                               Premise(F23)
	S38= Addr24Ext.Out=>A.In                                    Premise(F24)
	S39= IR.Out30=>BaseAddrSel.Sel                              Premise(F25)
	S40= PC.CIA=>BaseAddrSel.PC                                 Premise(F26)
	S41= BaseAddrSel.Out=>B.In                                  Premise(F27)
	S42= A.Out=>ALU.A                                           Premise(F28)
	S43= B.Out=>ALU.B                                           Premise(F29)
	S44= CU.Func=>ALU.Func                                      Premise(F30)
	S45= ALU.Out=>ALUOut.In                                     Premise(F31)
	S46= ALUOut.Out=>PC.In                                      Premise(F32)
	S47= CtrlPIDReg=0                                           Premise(F33)
	S48= [PIDReg]=pid                                           PIDReg-Hold(S0,S47)
	S49= CtrlIMMU=0                                             Premise(F34)
	S50= CtrlPC=0                                               Premise(F35)
	S51= CtrlPCInc=0                                            Premise(F36)
	S52= PC[Out]=addr                                           PC-Hold(S1,S50,S51)
	S53= CtrlIAddrReg=1                                         Premise(F37)
	S54= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S14,S53)
	S55= CtrlIMMUHitReg=1                                       Premise(F38)
	S56= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S16,S55)
	S57= CtrlICache=0                                           Premise(F39)
	S58= CtrlICacheReg=1                                        Premise(F40)
	S59= CtrlICacheHitReg=1                                     Premise(F41)
	S60= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S22,S59)
	S61= CtrlIMem=0                                             Premise(F42)
	S62= IMem[{pid,addr}]={18,LI,0,0}                           IMem-Hold(S2,S61)
	S63= CtrlIRMux=0                                            Premise(F43)
	S64= CtrlIR=0                                               Premise(F44)
	S65= CtrlLR=0                                               Premise(F45)
	S66= CtrlA=0                                                Premise(F46)
	S67= CtrlB=0                                                Premise(F47)
	S68= CtrlALUOut=0                                           Premise(F48)

IMMU	S69= PIDReg.Out=pid                                         PIDReg-Out(S48)
	S70= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S48)
	S71= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S48)
	S72= PC.Out=addr                                            PC-Out(S52)
	S73= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S54)
	S74= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S54)
	S75= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S54)
	S76= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S56)
	S77= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S56)
	S78= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]           IMMUHitReg-Out(S56)
	S79= ICacheHitReg.Out=ICacheHit(addr)                       ICacheHitReg-Out(S60)
	S80= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]           ICacheHitReg-Out(S60)
	S81= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]           ICacheHitReg-Out(S60)
	S82= PIDReg.Out=>IMMU.PID                                   Premise(F49)
	S83= IMMU.PID=pid                                           Path(S69,S82)
	S84= PC.Out=>IMMU.IEA                                       Premise(F50)
	S85= IMMU.IEA=addr                                          Path(S72,S84)
	S86= IMMU.Addr={pid,addr}                                   IMMU-Search(S83,S85)
	S87= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S83,S85)
	S88= IMMU.Addr=>IAddrReg.In                                 Premise(F51)
	S89= IAddrReg.In={pid,addr}                                 Path(S86,S88)
	S90= IMMU.Hit=>IMMUHitReg.In                                Premise(F52)
	S91= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S87,S90)
	S92= PC.Out=>ICache.IEA                                     Premise(F53)
	S93= ICache.IEA=addr                                        Path(S72,S92)
	S94= ICache.Hit=ICacheHit(addr)                             ICache-Search(S93)
	S95= ICache.Out=>ICacheReg.In                               Premise(F54)
	S96= ICache.Hit=>ICacheHitReg.In                            Premise(F55)
	S97= ICacheHitReg.In=ICacheHit(addr)                        Path(S94,S96)
	S98= IMMUHitReg.Out=>CU.IMemHit                             Premise(F56)
	S99= CU.IMemHit=IMMUHit(pid,addr)                           Path(S76,S98)
	S100= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F57)
	S101= CU.ICacheHit=ICacheHit(addr)                          Path(S79,S100)
	S102= IAddrReg.Out=>IMem.RAddr                              Premise(F58)
	S103= IMem.RAddr={pid,addr}                                 Path(S73,S102)
	S104= IMem.Out={18,LI,0,0}                                  IMem-Read(S103,S62)
	S105= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S103,S62)
	S106= IMem.Out=>IRMux.MemData                               Premise(F59)
	S107= IRMux.MemData={18,LI,0,0}                             Path(S104,S106)
	S108= IRMux.Out={18,LI,0,0}                                 IRMux-Select(S107)
	S109= ICacheReg.Out=>IRMux.CacheData                        Premise(F60)
	S110= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F61)
	S111= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S76,S110)
	S112= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F62)
	S113= IRMux.CacheSel=ICacheHit(addr)                        Path(S79,S112)
	S114= IRMux.Out=>IR.In                                      Premise(F63)
	S115= IR.In={18,LI,0,0}                                     Path(S108,S114)
	S116= IMem.MEM8WordOut=>ICache.WData                        Premise(F64)
	S117= ICache.WData=IMemGet8Word({pid,addr})                 Path(S105,S116)
	S118= PC.Out=>ICache.IEA                                    Premise(F65)
	S119= IR.Out0_5=>CU.Op                                      Premise(F66)
	S120= IR.Out31=>CU.LK                                       Premise(F67)
	S121= PC.Out=>LR.In                                         Premise(F68)
	S122= LR.In=addr                                            Path(S72,S121)
	S123= IR.Out6_29=>Addr24Ext.In                              Premise(F69)
	S124= Addr24Ext.Out=>A.In                                   Premise(F70)
	S125= IR.Out30=>BaseAddrSel.Sel                             Premise(F71)
	S126= PC.CIA=>BaseAddrSel.PC                                Premise(F72)
	S127= BaseAddrSel.Out=>B.In                                 Premise(F73)
	S128= A.Out=>ALU.A                                          Premise(F74)
	S129= B.Out=>ALU.B                                          Premise(F75)
	S130= CU.Func=>ALU.Func                                     Premise(F76)
	S131= ALU.Out=>ALUOut.In                                    Premise(F77)
	S132= ALUOut.Out=>PC.In                                     Premise(F78)
	S133= CtrlPIDReg=0                                          Premise(F79)
	S134= [PIDReg]=pid                                          PIDReg-Hold(S48,S133)
	S135= CtrlIMMU=0                                            Premise(F80)
	S136= CtrlPC=0                                              Premise(F81)
	S137= CtrlPCInc=1                                           Premise(F82)
	S138= PC[Out]=addr+4                                        PC-Inc(S52,S136,S137)
	S139= PC[CIA]=addr                                          PC-Inc(S52,S136,S137)
	S140= CtrlIAddrReg=0                                        Premise(F83)
	S141= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S54,S140)
	S142= CtrlIMMUHitReg=0                                      Premise(F84)
	S143= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S56,S142)
	S144= CtrlICache=1                                          Premise(F85)
	S145= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S93,S117,S144)
	S146= CtrlICacheReg=0                                       Premise(F86)
	S147= CtrlICacheHitReg=0                                    Premise(F87)
	S148= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S60,S147)
	S149= CtrlIMem=0                                            Premise(F88)
	S150= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S62,S149)
	S151= CtrlIRMux=0                                           Premise(F89)
	S152= CtrlIR=1                                              Premise(F90)
	S153= [IR]={18,LI,0,0}                                      IR-Write(S115,S152)
	S154= CtrlLR=0                                              Premise(F91)
	S155= CtrlA=0                                               Premise(F92)
	S156= CtrlB=0                                               Premise(F93)
	S157= CtrlALUOut=0                                          Premise(F94)

ID	S158= PIDReg.Out=pid                                        PIDReg-Out(S134)
	S159= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S134)
	S160= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S134)
	S161= PC.Out=addr+4                                         PC-Out(S138)
	S162= PC.CIA=addr                                           PC-Out(S139)
	S163= PC.CIA31_28=addr[31:28]                               PC-Out(S139)
	S164= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S141)
	S165= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S141)
	S166= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S141)
	S167= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S143)
	S168= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S143)
	S169= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S143)
	S170= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S148)
	S171= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S148)
	S172= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S148)
	S173= IR.Out0_5=18                                          IR-Out(S153)
	S174= IR.Out6_29=LI                                         IR-Out(S153)
	S175= IR.Out30=0                                            IR-Out(S153)
	S176= IR.Out31=0                                            IR-Out(S153)
	S177= PIDReg.Out=>IMMU.PID                                  Premise(F95)
	S178= IMMU.PID=pid                                          Path(S158,S177)
	S179= PC.Out=>IMMU.IEA                                      Premise(F96)
	S180= IMMU.IEA=addr+4                                       Path(S161,S179)
	S181= IMMU.Addr={pid,addr+4}                                IMMU-Search(S178,S180)
	S182= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S178,S180)
	S183= IMMU.Addr=>IAddrReg.In                                Premise(F97)
	S184= IAddrReg.In={pid,addr+4}                              Path(S181,S183)
	S185= IMMU.Hit=>IMMUHitReg.In                               Premise(F98)
	S186= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S182,S185)
	S187= PC.Out=>ICache.IEA                                    Premise(F99)
	S188= ICache.IEA=addr+4                                     Path(S161,S187)
	S189= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S188)
	S190= ICache.Out=>ICacheReg.In                              Premise(F100)
	S191= ICache.Hit=>ICacheHitReg.In                           Premise(F101)
	S192= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S189,S191)
	S193= IMMUHitReg.Out=>CU.IMemHit                            Premise(F102)
	S194= CU.IMemHit=IMMUHit(pid,addr)                          Path(S167,S193)
	S195= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F103)
	S196= CU.ICacheHit=ICacheHit(addr)                          Path(S170,S195)
	S197= IAddrReg.Out=>IMem.RAddr                              Premise(F104)
	S198= IMem.RAddr={pid,addr}                                 Path(S164,S197)
	S199= IMem.Out={18,LI,0,0}                                  IMem-Read(S198,S150)
	S200= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S198,S150)
	S201= IMem.Out=>IRMux.MemData                               Premise(F105)
	S202= IRMux.MemData={18,LI,0,0}                             Path(S199,S201)
	S203= IRMux.Out={18,LI,0,0}                                 IRMux-Select(S202)
	S204= ICacheReg.Out=>IRMux.CacheData                        Premise(F106)
	S205= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F107)
	S206= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S167,S205)
	S207= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F108)
	S208= IRMux.CacheSel=ICacheHit(addr)                        Path(S170,S207)
	S209= IRMux.Out=>IR.In                                      Premise(F109)
	S210= IR.In={18,LI,0,0}                                     Path(S203,S209)
	S211= IMem.MEM8WordOut=>ICache.WData                        Premise(F110)
	S212= ICache.WData=IMemGet8Word({pid,addr})                 Path(S200,S211)
	S213= PC.Out=>ICache.IEA                                    Premise(F111)
	S214= IR.Out0_5=>CU.Op                                      Premise(F112)
	S215= CU.Op=18                                              Path(S173,S214)
	S216= IR.Out31=>CU.LK                                       Premise(F113)
	S217= CU.LK=0                                               Path(S176,S216)
	S218= CU.Func=alu_add                                       CU(S215,S217)
	S219= PC.Out=>LR.In                                         Premise(F114)
	S220= LR.In=addr+4                                          Path(S161,S219)
	S221= IR.Out6_29=>Addr24Ext.In                              Premise(F115)
	S222= Addr24Ext.In=LI                                       Path(S174,S221)
	S223= Addr24Ext.Out={6{LI[0]},LI,2'b0}                      Addr24Ext-EXT(S222)
	S224= Addr24Ext.Out=>A.In                                   Premise(F116)
	S225= A.In={6{LI[0]},LI,2'b0}                               Path(S223,S224)
	S226= IR.Out30=>BaseAddrSel.Sel                             Premise(F117)
	S227= BaseAddrSel.Sel=0                                     Path(S175,S226)
	S228= PC.CIA=>BaseAddrSel.PC                                Premise(F118)
	S229= BaseAddrSel.PC=addr                                   Path(S162,S228)
	S230= BaseAddrSel.Out=addr                                  BaseAddrSel(S229)
	S231= BaseAddrSel.Out=>B.In                                 Premise(F119)
	S232= B.In=addr                                             Path(S230,S231)
	S233= A.Out=>ALU.A                                          Premise(F120)
	S234= B.Out=>ALU.B                                          Premise(F121)
	S235= CU.Func=>ALU.Func                                     Premise(F122)
	S236= ALU.Func=alu_add                                      Path(S218,S235)
	S237= ALU.Out=>ALUOut.In                                    Premise(F123)
	S238= ALUOut.Out=>PC.In                                     Premise(F124)
	S239= CtrlPIDReg=0                                          Premise(F125)
	S240= [PIDReg]=pid                                          PIDReg-Hold(S134,S239)
	S241= CtrlIMMU=0                                            Premise(F126)
	S242= CtrlPC=0                                              Premise(F127)
	S243= CtrlPCInc=0                                           Premise(F128)
	S244= PC[CIA]=addr                                          PC-Hold(S139,S243)
	S245= PC[Out]=addr+4                                        PC-Hold(S138,S242,S243)
	S246= CtrlIAddrReg=0                                        Premise(F129)
	S247= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S141,S246)
	S248= CtrlIMMUHitReg=0                                      Premise(F130)
	S249= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S143,S248)
	S250= CtrlICache=0                                          Premise(F131)
	S251= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S145,S250)
	S252= CtrlICacheReg=0                                       Premise(F132)
	S253= CtrlICacheHitReg=0                                    Premise(F133)
	S254= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S148,S253)
	S255= CtrlIMem=0                                            Premise(F134)
	S256= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S150,S255)
	S257= CtrlIRMux=0                                           Premise(F135)
	S258= CtrlIR=0                                              Premise(F136)
	S259= [IR]={18,LI,0,0}                                      IR-Hold(S153,S258)
	S260= CtrlLR=0                                              Premise(F137)
	S261= CtrlA=1                                               Premise(F138)
	S262= [A]={6{LI[0]},LI,2'b0}                                A-Write(S225,S261)
	S263= CtrlB=1                                               Premise(F139)
	S264= [B]=addr                                              B-Write(S232,S263)
	S265= CtrlALUOut=0                                          Premise(F140)

EX	S266= PIDReg.Out=pid                                        PIDReg-Out(S240)
	S267= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S240)
	S268= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S240)
	S269= PC.CIA=addr                                           PC-Out(S244)
	S270= PC.CIA31_28=addr[31:28]                               PC-Out(S244)
	S271= PC.Out=addr+4                                         PC-Out(S245)
	S272= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S247)
	S273= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S247)
	S274= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S247)
	S275= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S249)
	S276= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S249)
	S277= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S249)
	S278= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S254)
	S279= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S254)
	S280= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S254)
	S281= IR.Out0_5=18                                          IR-Out(S259)
	S282= IR.Out6_29=LI                                         IR-Out(S259)
	S283= IR.Out30=0                                            IR-Out(S259)
	S284= IR.Out31=0                                            IR-Out(S259)
	S285= A.Out={6{LI[0]},LI,2'b0}                              A-Out(S262)
	S286= A.Out26_31={6{LI[0]},LI,2'b0}[26:31]                  A-Out(S262)
	S287= A.Out30_31={6{LI[0]},LI,2'b0}[30:31]                  A-Out(S262)
	S288= B.Out=addr                                            B-Out(S264)
	S289= B.Out26_31=addr[26:31]                                B-Out(S264)
	S290= B.Out30_31=addr[30:31]                                B-Out(S264)
	S291= PIDReg.Out=>IMMU.PID                                  Premise(F141)
	S292= IMMU.PID=pid                                          Path(S266,S291)
	S293= PC.Out=>IMMU.IEA                                      Premise(F142)
	S294= IMMU.IEA=addr+4                                       Path(S271,S293)
	S295= IMMU.Addr={pid,addr+4}                                IMMU-Search(S292,S294)
	S296= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S292,S294)
	S297= IMMU.Addr=>IAddrReg.In                                Premise(F143)
	S298= IAddrReg.In={pid,addr+4}                              Path(S295,S297)
	S299= IMMU.Hit=>IMMUHitReg.In                               Premise(F144)
	S300= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S296,S299)
	S301= PC.Out=>ICache.IEA                                    Premise(F145)
	S302= ICache.IEA=addr+4                                     Path(S271,S301)
	S303= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S302)
	S304= ICache.Out=>ICacheReg.In                              Premise(F146)
	S305= ICache.Hit=>ICacheHitReg.In                           Premise(F147)
	S306= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S303,S305)
	S307= IMMUHitReg.Out=>CU.IMemHit                            Premise(F148)
	S308= CU.IMemHit=IMMUHit(pid,addr)                          Path(S275,S307)
	S309= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F149)
	S310= CU.ICacheHit=ICacheHit(addr)                          Path(S278,S309)
	S311= IAddrReg.Out=>IMem.RAddr                              Premise(F150)
	S312= IMem.RAddr={pid,addr}                                 Path(S272,S311)
	S313= IMem.Out={18,LI,0,0}                                  IMem-Read(S312,S256)
	S314= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S312,S256)
	S315= IMem.Out=>IRMux.MemData                               Premise(F151)
	S316= IRMux.MemData={18,LI,0,0}                             Path(S313,S315)
	S317= IRMux.Out={18,LI,0,0}                                 IRMux-Select(S316)
	S318= ICacheReg.Out=>IRMux.CacheData                        Premise(F152)
	S319= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F153)
	S320= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S275,S319)
	S321= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F154)
	S322= IRMux.CacheSel=ICacheHit(addr)                        Path(S278,S321)
	S323= IRMux.Out=>IR.In                                      Premise(F155)
	S324= IR.In={18,LI,0,0}                                     Path(S317,S323)
	S325= IMem.MEM8WordOut=>ICache.WData                        Premise(F156)
	S326= ICache.WData=IMemGet8Word({pid,addr})                 Path(S314,S325)
	S327= PC.Out=>ICache.IEA                                    Premise(F157)
	S328= IR.Out0_5=>CU.Op                                      Premise(F158)
	S329= CU.Op=18                                              Path(S281,S328)
	S330= IR.Out31=>CU.LK                                       Premise(F159)
	S331= CU.LK=0                                               Path(S284,S330)
	S332= CU.Func=alu_add                                       CU(S329,S331)
	S333= PC.Out=>LR.In                                         Premise(F160)
	S334= LR.In=addr+4                                          Path(S271,S333)
	S335= IR.Out6_29=>Addr24Ext.In                              Premise(F161)
	S336= Addr24Ext.In=LI                                       Path(S282,S335)
	S337= Addr24Ext.Out={6{LI[0]},LI,2'b0}                      Addr24Ext-EXT(S336)
	S338= Addr24Ext.Out=>A.In                                   Premise(F162)
	S339= A.In={6{LI[0]},LI,2'b0}                               Path(S337,S338)
	S340= IR.Out30=>BaseAddrSel.Sel                             Premise(F163)
	S341= BaseAddrSel.Sel=0                                     Path(S283,S340)
	S342= PC.CIA=>BaseAddrSel.PC                                Premise(F164)
	S343= BaseAddrSel.PC=addr                                   Path(S269,S342)
	S344= BaseAddrSel.Out=addr                                  BaseAddrSel(S343)
	S345= BaseAddrSel.Out=>B.In                                 Premise(F165)
	S346= B.In=addr                                             Path(S344,S345)
	S347= A.Out=>ALU.A                                          Premise(F166)
	S348= ALU.A={6{LI[0]},LI,2'b0}                              Path(S285,S347)
	S349= B.Out=>ALU.B                                          Premise(F167)
	S350= ALU.B=addr                                            Path(S288,S349)
	S351= CU.Func=>ALU.Func                                     Premise(F168)
	S352= ALU.Func=alu_add                                      Path(S332,S351)
	S353= ALU.Out={6{LI[0]},LI,2'b0}+addr                       ALU(S348,S350)
	S354= ALU.CMP=Compare0({6{LI[0]},LI,2'b0}+addr)             ALU(S348,S350)
	S355= ALU.OV=OverFlow({6{LI[0]},LI,2'b0}+addr)              ALU(S348,S350)
	S356= ALU.CA=Carry({6{LI[0]},LI,2'b0}+addr)                 ALU(S348,S350)
	S357= ALU.Out=>ALUOut.In                                    Premise(F169)
	S358= ALUOut.In={6{LI[0]},LI,2'b0}+addr                     Path(S353,S357)
	S359= ALUOut.Out=>PC.In                                     Premise(F170)
	S360= CtrlPIDReg=0                                          Premise(F171)
	S361= [PIDReg]=pid                                          PIDReg-Hold(S240,S360)
	S362= CtrlIMMU=0                                            Premise(F172)
	S363= CtrlPC=0                                              Premise(F173)
	S364= CtrlPCInc=0                                           Premise(F174)
	S365= PC[CIA]=addr                                          PC-Hold(S244,S364)
	S366= PC[Out]=addr+4                                        PC-Hold(S245,S363,S364)
	S367= CtrlIAddrReg=0                                        Premise(F175)
	S368= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S247,S367)
	S369= CtrlIMMUHitReg=0                                      Premise(F176)
	S370= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S249,S369)
	S371= CtrlICache=0                                          Premise(F177)
	S372= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S251,S371)
	S373= CtrlICacheReg=0                                       Premise(F178)
	S374= CtrlICacheHitReg=0                                    Premise(F179)
	S375= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S254,S374)
	S376= CtrlIMem=0                                            Premise(F180)
	S377= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S256,S376)
	S378= CtrlIRMux=0                                           Premise(F181)
	S379= CtrlIR=0                                              Premise(F182)
	S380= [IR]={18,LI,0,0}                                      IR-Hold(S259,S379)
	S381= CtrlLR=0                                              Premise(F183)
	S382= CtrlA=0                                               Premise(F184)
	S383= [A]={6{LI[0]},LI,2'b0}                                A-Hold(S262,S382)
	S384= CtrlB=0                                               Premise(F185)
	S385= [B]=addr                                              B-Hold(S264,S384)
	S386= CtrlALUOut=1                                          Premise(F186)
	S387= [ALUOut]={6{LI[0]},LI,2'b0}+addr                      ALUOut-Write(S358,S386)

MEM	S388= PIDReg.Out=pid                                        PIDReg-Out(S361)
	S389= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S361)
	S390= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S361)
	S391= PC.CIA=addr                                           PC-Out(S365)
	S392= PC.CIA31_28=addr[31:28]                               PC-Out(S365)
	S393= PC.Out=addr+4                                         PC-Out(S366)
	S394= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S368)
	S395= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S368)
	S396= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S368)
	S397= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S370)
	S398= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S370)
	S399= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S370)
	S400= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S375)
	S401= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S375)
	S402= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S375)
	S403= IR.Out0_5=18                                          IR-Out(S380)
	S404= IR.Out6_29=LI                                         IR-Out(S380)
	S405= IR.Out30=0                                            IR-Out(S380)
	S406= IR.Out31=0                                            IR-Out(S380)
	S407= A.Out={6{LI[0]},LI,2'b0}                              A-Out(S383)
	S408= A.Out26_31={6{LI[0]},LI,2'b0}[26:31]                  A-Out(S383)
	S409= A.Out30_31={6{LI[0]},LI,2'b0}[30:31]                  A-Out(S383)
	S410= B.Out=addr                                            B-Out(S385)
	S411= B.Out26_31=addr[26:31]                                B-Out(S385)
	S412= B.Out30_31=addr[30:31]                                B-Out(S385)
	S413= ALUOut.Out={6{LI[0]},LI,2'b0}+addr                    ALUOut-Out(S387)
	S414= ALUOut.Out26_31={6{LI[0]},LI,2'b0}+addr[26:31]        ALUOut-Out(S387)
	S415= ALUOut.Out30_31={6{LI[0]},LI,2'b0}+addr[30:31]        ALUOut-Out(S387)
	S416= PIDReg.Out=>IMMU.PID                                  Premise(F187)
	S417= IMMU.PID=pid                                          Path(S388,S416)
	S418= PC.Out=>IMMU.IEA                                      Premise(F188)
	S419= IMMU.IEA=addr+4                                       Path(S393,S418)
	S420= IMMU.Addr={pid,addr+4}                                IMMU-Search(S417,S419)
	S421= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S417,S419)
	S422= IMMU.Addr=>IAddrReg.In                                Premise(F189)
	S423= IAddrReg.In={pid,addr+4}                              Path(S420,S422)
	S424= IMMU.Hit=>IMMUHitReg.In                               Premise(F190)
	S425= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S421,S424)
	S426= PC.Out=>ICache.IEA                                    Premise(F191)
	S427= ICache.IEA=addr+4                                     Path(S393,S426)
	S428= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S427)
	S429= ICache.Out=>ICacheReg.In                              Premise(F192)
	S430= ICache.Hit=>ICacheHitReg.In                           Premise(F193)
	S431= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S428,S430)
	S432= IMMUHitReg.Out=>CU.IMemHit                            Premise(F194)
	S433= CU.IMemHit=IMMUHit(pid,addr)                          Path(S397,S432)
	S434= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F195)
	S435= CU.ICacheHit=ICacheHit(addr)                          Path(S400,S434)
	S436= IAddrReg.Out=>IMem.RAddr                              Premise(F196)
	S437= IMem.RAddr={pid,addr}                                 Path(S394,S436)
	S438= IMem.Out={18,LI,0,0}                                  IMem-Read(S437,S377)
	S439= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S437,S377)
	S440= IMem.Out=>IRMux.MemData                               Premise(F197)
	S441= IRMux.MemData={18,LI,0,0}                             Path(S438,S440)
	S442= IRMux.Out={18,LI,0,0}                                 IRMux-Select(S441)
	S443= ICacheReg.Out=>IRMux.CacheData                        Premise(F198)
	S444= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F199)
	S445= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S397,S444)
	S446= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F200)
	S447= IRMux.CacheSel=ICacheHit(addr)                        Path(S400,S446)
	S448= IRMux.Out=>IR.In                                      Premise(F201)
	S449= IR.In={18,LI,0,0}                                     Path(S442,S448)
	S450= IMem.MEM8WordOut=>ICache.WData                        Premise(F202)
	S451= ICache.WData=IMemGet8Word({pid,addr})                 Path(S439,S450)
	S452= PC.Out=>ICache.IEA                                    Premise(F203)
	S453= IR.Out0_5=>CU.Op                                      Premise(F204)
	S454= CU.Op=18                                              Path(S403,S453)
	S455= IR.Out31=>CU.LK                                       Premise(F205)
	S456= CU.LK=0                                               Path(S406,S455)
	S457= CU.Func=alu_add                                       CU(S454,S456)
	S458= PC.Out=>LR.In                                         Premise(F206)
	S459= LR.In=addr+4                                          Path(S393,S458)
	S460= IR.Out6_29=>Addr24Ext.In                              Premise(F207)
	S461= Addr24Ext.In=LI                                       Path(S404,S460)
	S462= Addr24Ext.Out={6{LI[0]},LI,2'b0}                      Addr24Ext-EXT(S461)
	S463= Addr24Ext.Out=>A.In                                   Premise(F208)
	S464= A.In={6{LI[0]},LI,2'b0}                               Path(S462,S463)
	S465= IR.Out30=>BaseAddrSel.Sel                             Premise(F209)
	S466= BaseAddrSel.Sel=0                                     Path(S405,S465)
	S467= PC.CIA=>BaseAddrSel.PC                                Premise(F210)
	S468= BaseAddrSel.PC=addr                                   Path(S391,S467)
	S469= BaseAddrSel.Out=addr                                  BaseAddrSel(S468)
	S470= BaseAddrSel.Out=>B.In                                 Premise(F211)
	S471= B.In=addr                                             Path(S469,S470)
	S472= A.Out=>ALU.A                                          Premise(F212)
	S473= ALU.A={6{LI[0]},LI,2'b0}                              Path(S407,S472)
	S474= B.Out=>ALU.B                                          Premise(F213)
	S475= ALU.B=addr                                            Path(S410,S474)
	S476= CU.Func=>ALU.Func                                     Premise(F214)
	S477= ALU.Func=alu_add                                      Path(S457,S476)
	S478= ALU.Out={6{LI[0]},LI,2'b0}+addr                       ALU(S473,S475)
	S479= ALU.CMP=Compare0({6{LI[0]},LI,2'b0}+addr)             ALU(S473,S475)
	S480= ALU.OV=OverFlow({6{LI[0]},LI,2'b0}+addr)              ALU(S473,S475)
	S481= ALU.CA=Carry({6{LI[0]},LI,2'b0}+addr)                 ALU(S473,S475)
	S482= ALU.Out=>ALUOut.In                                    Premise(F215)
	S483= ALUOut.In={6{LI[0]},LI,2'b0}+addr                     Path(S478,S482)
	S484= ALUOut.Out=>PC.In                                     Premise(F216)
	S485= PC.In={6{LI[0]},LI,2'b0}+addr                         Path(S413,S484)
	S486= CtrlPIDReg=0                                          Premise(F217)
	S487= [PIDReg]=pid                                          PIDReg-Hold(S361,S486)
	S488= CtrlIMMU=0                                            Premise(F218)
	S489= CtrlPC=1                                              Premise(F219)
	S490= CtrlPCInc=0                                           Premise(F220)
	S491= PC[CIA]=addr                                          PC-Hold(S365,S490)
	S492= PC[Out]={6{LI[0]},LI,2'b0}+addr                       PC-Write(S485,S489,S490)
	S493= CtrlIAddrReg=0                                        Premise(F221)
	S494= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S368,S493)
	S495= CtrlIMMUHitReg=0                                      Premise(F222)
	S496= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S370,S495)
	S497= CtrlICache=0                                          Premise(F223)
	S498= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S372,S497)
	S499= CtrlICacheReg=0                                       Premise(F224)
	S500= CtrlICacheHitReg=0                                    Premise(F225)
	S501= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S375,S500)
	S502= CtrlIMem=0                                            Premise(F226)
	S503= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S377,S502)
	S504= CtrlIRMux=0                                           Premise(F227)
	S505= CtrlIR=0                                              Premise(F228)
	S506= [IR]={18,LI,0,0}                                      IR-Hold(S380,S505)
	S507= CtrlLR=0                                              Premise(F229)
	S508= CtrlA=0                                               Premise(F230)
	S509= [A]={6{LI[0]},LI,2'b0}                                A-Hold(S383,S508)
	S510= CtrlB=0                                               Premise(F231)
	S511= [B]=addr                                              B-Hold(S385,S510)
	S512= CtrlALUOut=0                                          Premise(F232)
	S513= [ALUOut]={6{LI[0]},LI,2'b0}+addr                      ALUOut-Hold(S387,S512)

DMMU1	S514= PIDReg.Out=pid                                        PIDReg-Out(S487)
	S515= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S487)
	S516= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S487)
	S517= PC.CIA=addr                                           PC-Out(S491)
	S518= PC.CIA31_28=addr[31:28]                               PC-Out(S491)
	S519= PC.Out={6{LI[0]},LI,2'b0}+addr                        PC-Out(S492)
	S520= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S494)
	S521= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S494)
	S522= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S494)
	S523= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S496)
	S524= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S496)
	S525= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S496)
	S526= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S501)
	S527= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S501)
	S528= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S501)
	S529= IR.Out0_5=18                                          IR-Out(S506)
	S530= IR.Out6_29=LI                                         IR-Out(S506)
	S531= IR.Out30=0                                            IR-Out(S506)
	S532= IR.Out31=0                                            IR-Out(S506)
	S533= A.Out={6{LI[0]},LI,2'b0}                              A-Out(S509)
	S534= A.Out26_31={6{LI[0]},LI,2'b0}[26:31]                  A-Out(S509)
	S535= A.Out30_31={6{LI[0]},LI,2'b0}[30:31]                  A-Out(S509)
	S536= B.Out=addr                                            B-Out(S511)
	S537= B.Out26_31=addr[26:31]                                B-Out(S511)
	S538= B.Out30_31=addr[30:31]                                B-Out(S511)
	S539= ALUOut.Out={6{LI[0]},LI,2'b0}+addr                    ALUOut-Out(S513)
	S540= ALUOut.Out26_31={6{LI[0]},LI,2'b0}+addr[26:31]        ALUOut-Out(S513)
	S541= ALUOut.Out30_31={6{LI[0]},LI,2'b0}+addr[30:31]        ALUOut-Out(S513)
	S542= PIDReg.Out=>IMMU.PID                                  Premise(F233)
	S543= IMMU.PID=pid                                          Path(S514,S542)
	S544= PC.Out=>IMMU.IEA                                      Premise(F234)
	S545= IMMU.IEA={6{LI[0]},LI,2'b0}+addr                      Path(S519,S544)
	S546= IMMU.Addr={pid,{6{LI[0]},LI,2'b0}+addr}               IMMU-Search(S543,S545)
	S547= IMMU.Hit=IMMUHit(pid,{6{LI[0]},LI,2'b0}+addr)         IMMU-Search(S543,S545)
	S548= IMMU.Addr=>IAddrReg.In                                Premise(F235)
	S549= IAddrReg.In={pid,{6{LI[0]},LI,2'b0}+addr}             Path(S546,S548)
	S550= IMMU.Hit=>IMMUHitReg.In                               Premise(F236)
	S551= IMMUHitReg.In=IMMUHit(pid,{6{LI[0]},LI,2'b0}+addr)    Path(S547,S550)
	S552= PC.Out=>ICache.IEA                                    Premise(F237)
	S553= ICache.IEA={6{LI[0]},LI,2'b0}+addr                    Path(S519,S552)
	S554= ICache.Hit=ICacheHit({6{LI[0]},LI,2'b0}+addr)         ICache-Search(S553)
	S555= ICache.Out=>ICacheReg.In                              Premise(F238)
	S556= ICache.Hit=>ICacheHitReg.In                           Premise(F239)
	S557= ICacheHitReg.In=ICacheHit({6{LI[0]},LI,2'b0}+addr)    Path(S554,S556)
	S558= IMMUHitReg.Out=>CU.IMemHit                            Premise(F240)
	S559= CU.IMemHit=IMMUHit(pid,addr)                          Path(S523,S558)
	S560= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F241)
	S561= CU.ICacheHit=ICacheHit(addr)                          Path(S526,S560)
	S562= IAddrReg.Out=>IMem.RAddr                              Premise(F242)
	S563= IMem.RAddr={pid,addr}                                 Path(S520,S562)
	S564= IMem.Out={18,LI,0,0}                                  IMem-Read(S563,S503)
	S565= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S563,S503)
	S566= IMem.Out=>IRMux.MemData                               Premise(F243)
	S567= IRMux.MemData={18,LI,0,0}                             Path(S564,S566)
	S568= IRMux.Out={18,LI,0,0}                                 IRMux-Select(S567)
	S569= ICacheReg.Out=>IRMux.CacheData                        Premise(F244)
	S570= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F245)
	S571= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S523,S570)
	S572= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F246)
	S573= IRMux.CacheSel=ICacheHit(addr)                        Path(S526,S572)
	S574= IRMux.Out=>IR.In                                      Premise(F247)
	S575= IR.In={18,LI,0,0}                                     Path(S568,S574)
	S576= IMem.MEM8WordOut=>ICache.WData                        Premise(F248)
	S577= ICache.WData=IMemGet8Word({pid,addr})                 Path(S565,S576)
	S578= PC.Out=>ICache.IEA                                    Premise(F249)
	S579= IR.Out0_5=>CU.Op                                      Premise(F250)
	S580= CU.Op=18                                              Path(S529,S579)
	S581= IR.Out31=>CU.LK                                       Premise(F251)
	S582= CU.LK=0                                               Path(S532,S581)
	S583= CU.Func=alu_add                                       CU(S580,S582)
	S584= PC.Out=>LR.In                                         Premise(F252)
	S585= LR.In={6{LI[0]},LI,2'b0}+addr                         Path(S519,S584)
	S586= IR.Out6_29=>Addr24Ext.In                              Premise(F253)
	S587= Addr24Ext.In=LI                                       Path(S530,S586)
	S588= Addr24Ext.Out={6{LI[0]},LI,2'b0}                      Addr24Ext-EXT(S587)
	S589= Addr24Ext.Out=>A.In                                   Premise(F254)
	S590= A.In={6{LI[0]},LI,2'b0}                               Path(S588,S589)
	S591= IR.Out30=>BaseAddrSel.Sel                             Premise(F255)
	S592= BaseAddrSel.Sel=0                                     Path(S531,S591)
	S593= PC.CIA=>BaseAddrSel.PC                                Premise(F256)
	S594= BaseAddrSel.PC=addr                                   Path(S517,S593)
	S595= BaseAddrSel.Out=addr                                  BaseAddrSel(S594)
	S596= BaseAddrSel.Out=>B.In                                 Premise(F257)
	S597= B.In=addr                                             Path(S595,S596)
	S598= A.Out=>ALU.A                                          Premise(F258)
	S599= ALU.A={6{LI[0]},LI,2'b0}                              Path(S533,S598)
	S600= B.Out=>ALU.B                                          Premise(F259)
	S601= ALU.B=addr                                            Path(S536,S600)
	S602= CU.Func=>ALU.Func                                     Premise(F260)
	S603= ALU.Func=alu_add                                      Path(S583,S602)
	S604= ALU.Out={6{LI[0]},LI,2'b0}+addr                       ALU(S599,S601)
	S605= ALU.CMP=Compare0({6{LI[0]},LI,2'b0}+addr)             ALU(S599,S601)
	S606= ALU.OV=OverFlow({6{LI[0]},LI,2'b0}+addr)              ALU(S599,S601)
	S607= ALU.CA=Carry({6{LI[0]},LI,2'b0}+addr)                 ALU(S599,S601)
	S608= ALU.Out=>ALUOut.In                                    Premise(F261)
	S609= ALUOut.In={6{LI[0]},LI,2'b0}+addr                     Path(S604,S608)
	S610= ALUOut.Out=>PC.In                                     Premise(F262)
	S611= PC.In={6{LI[0]},LI,2'b0}+addr                         Path(S539,S610)
	S612= CtrlPIDReg=0                                          Premise(F263)
	S613= [PIDReg]=pid                                          PIDReg-Hold(S487,S612)
	S614= CtrlIMMU=0                                            Premise(F264)
	S615= CtrlPC=0                                              Premise(F265)
	S616= CtrlPCInc=0                                           Premise(F266)
	S617= PC[CIA]=addr                                          PC-Hold(S491,S616)
	S618= PC[Out]={6{LI[0]},LI,2'b0}+addr                       PC-Hold(S492,S615,S616)
	S619= CtrlIAddrReg=0                                        Premise(F267)
	S620= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S494,S619)
	S621= CtrlIMMUHitReg=0                                      Premise(F268)
	S622= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S496,S621)
	S623= CtrlICache=0                                          Premise(F269)
	S624= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S498,S623)
	S625= CtrlICacheReg=0                                       Premise(F270)
	S626= CtrlICacheHitReg=0                                    Premise(F271)
	S627= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S501,S626)
	S628= CtrlIMem=0                                            Premise(F272)
	S629= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S503,S628)
	S630= CtrlIRMux=0                                           Premise(F273)
	S631= CtrlIR=0                                              Premise(F274)
	S632= [IR]={18,LI,0,0}                                      IR-Hold(S506,S631)
	S633= CtrlLR=0                                              Premise(F275)
	S634= CtrlA=0                                               Premise(F276)
	S635= [A]={6{LI[0]},LI,2'b0}                                A-Hold(S509,S634)
	S636= CtrlB=0                                               Premise(F277)
	S637= [B]=addr                                              B-Hold(S511,S636)
	S638= CtrlALUOut=0                                          Premise(F278)
	S639= [ALUOut]={6{LI[0]},LI,2'b0}+addr                      ALUOut-Hold(S513,S638)

DMMU2	S640= PIDReg.Out=pid                                        PIDReg-Out(S613)
	S641= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S613)
	S642= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S613)
	S643= PC.CIA=addr                                           PC-Out(S617)
	S644= PC.CIA31_28=addr[31:28]                               PC-Out(S617)
	S645= PC.Out={6{LI[0]},LI,2'b0}+addr                        PC-Out(S618)
	S646= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S620)
	S647= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S620)
	S648= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S620)
	S649= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S622)
	S650= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S622)
	S651= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S622)
	S652= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S627)
	S653= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S627)
	S654= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S627)
	S655= IR.Out0_5=18                                          IR-Out(S632)
	S656= IR.Out6_29=LI                                         IR-Out(S632)
	S657= IR.Out30=0                                            IR-Out(S632)
	S658= IR.Out31=0                                            IR-Out(S632)
	S659= A.Out={6{LI[0]},LI,2'b0}                              A-Out(S635)
	S660= A.Out26_31={6{LI[0]},LI,2'b0}[26:31]                  A-Out(S635)
	S661= A.Out30_31={6{LI[0]},LI,2'b0}[30:31]                  A-Out(S635)
	S662= B.Out=addr                                            B-Out(S637)
	S663= B.Out26_31=addr[26:31]                                B-Out(S637)
	S664= B.Out30_31=addr[30:31]                                B-Out(S637)
	S665= ALUOut.Out={6{LI[0]},LI,2'b0}+addr                    ALUOut-Out(S639)
	S666= ALUOut.Out26_31={6{LI[0]},LI,2'b0}+addr[26:31]        ALUOut-Out(S639)
	S667= ALUOut.Out30_31={6{LI[0]},LI,2'b0}+addr[30:31]        ALUOut-Out(S639)
	S668= PIDReg.Out=>IMMU.PID                                  Premise(F279)
	S669= IMMU.PID=pid                                          Path(S640,S668)
	S670= PC.Out=>IMMU.IEA                                      Premise(F280)
	S671= IMMU.IEA={6{LI[0]},LI,2'b0}+addr                      Path(S645,S670)
	S672= IMMU.Addr={pid,{6{LI[0]},LI,2'b0}+addr}               IMMU-Search(S669,S671)
	S673= IMMU.Hit=IMMUHit(pid,{6{LI[0]},LI,2'b0}+addr)         IMMU-Search(S669,S671)
	S674= IMMU.Addr=>IAddrReg.In                                Premise(F281)
	S675= IAddrReg.In={pid,{6{LI[0]},LI,2'b0}+addr}             Path(S672,S674)
	S676= IMMU.Hit=>IMMUHitReg.In                               Premise(F282)
	S677= IMMUHitReg.In=IMMUHit(pid,{6{LI[0]},LI,2'b0}+addr)    Path(S673,S676)
	S678= PC.Out=>ICache.IEA                                    Premise(F283)
	S679= ICache.IEA={6{LI[0]},LI,2'b0}+addr                    Path(S645,S678)
	S680= ICache.Hit=ICacheHit({6{LI[0]},LI,2'b0}+addr)         ICache-Search(S679)
	S681= ICache.Out=>ICacheReg.In                              Premise(F284)
	S682= ICache.Hit=>ICacheHitReg.In                           Premise(F285)
	S683= ICacheHitReg.In=ICacheHit({6{LI[0]},LI,2'b0}+addr)    Path(S680,S682)
	S684= IMMUHitReg.Out=>CU.IMemHit                            Premise(F286)
	S685= CU.IMemHit=IMMUHit(pid,addr)                          Path(S649,S684)
	S686= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F287)
	S687= CU.ICacheHit=ICacheHit(addr)                          Path(S652,S686)
	S688= IAddrReg.Out=>IMem.RAddr                              Premise(F288)
	S689= IMem.RAddr={pid,addr}                                 Path(S646,S688)
	S690= IMem.Out={18,LI,0,0}                                  IMem-Read(S689,S629)
	S691= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S689,S629)
	S692= IMem.Out=>IRMux.MemData                               Premise(F289)
	S693= IRMux.MemData={18,LI,0,0}                             Path(S690,S692)
	S694= IRMux.Out={18,LI,0,0}                                 IRMux-Select(S693)
	S695= ICacheReg.Out=>IRMux.CacheData                        Premise(F290)
	S696= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F291)
	S697= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S649,S696)
	S698= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F292)
	S699= IRMux.CacheSel=ICacheHit(addr)                        Path(S652,S698)
	S700= IRMux.Out=>IR.In                                      Premise(F293)
	S701= IR.In={18,LI,0,0}                                     Path(S694,S700)
	S702= IMem.MEM8WordOut=>ICache.WData                        Premise(F294)
	S703= ICache.WData=IMemGet8Word({pid,addr})                 Path(S691,S702)
	S704= PC.Out=>ICache.IEA                                    Premise(F295)
	S705= IR.Out0_5=>CU.Op                                      Premise(F296)
	S706= CU.Op=18                                              Path(S655,S705)
	S707= IR.Out31=>CU.LK                                       Premise(F297)
	S708= CU.LK=0                                               Path(S658,S707)
	S709= CU.Func=alu_add                                       CU(S706,S708)
	S710= PC.Out=>LR.In                                         Premise(F298)
	S711= LR.In={6{LI[0]},LI,2'b0}+addr                         Path(S645,S710)
	S712= IR.Out6_29=>Addr24Ext.In                              Premise(F299)
	S713= Addr24Ext.In=LI                                       Path(S656,S712)
	S714= Addr24Ext.Out={6{LI[0]},LI,2'b0}                      Addr24Ext-EXT(S713)
	S715= Addr24Ext.Out=>A.In                                   Premise(F300)
	S716= A.In={6{LI[0]},LI,2'b0}                               Path(S714,S715)
	S717= IR.Out30=>BaseAddrSel.Sel                             Premise(F301)
	S718= BaseAddrSel.Sel=0                                     Path(S657,S717)
	S719= PC.CIA=>BaseAddrSel.PC                                Premise(F302)
	S720= BaseAddrSel.PC=addr                                   Path(S643,S719)
	S721= BaseAddrSel.Out=addr                                  BaseAddrSel(S720)
	S722= BaseAddrSel.Out=>B.In                                 Premise(F303)
	S723= B.In=addr                                             Path(S721,S722)
	S724= A.Out=>ALU.A                                          Premise(F304)
	S725= ALU.A={6{LI[0]},LI,2'b0}                              Path(S659,S724)
	S726= B.Out=>ALU.B                                          Premise(F305)
	S727= ALU.B=addr                                            Path(S662,S726)
	S728= CU.Func=>ALU.Func                                     Premise(F306)
	S729= ALU.Func=alu_add                                      Path(S709,S728)
	S730= ALU.Out={6{LI[0]},LI,2'b0}+addr                       ALU(S725,S727)
	S731= ALU.CMP=Compare0({6{LI[0]},LI,2'b0}+addr)             ALU(S725,S727)
	S732= ALU.OV=OverFlow({6{LI[0]},LI,2'b0}+addr)              ALU(S725,S727)
	S733= ALU.CA=Carry({6{LI[0]},LI,2'b0}+addr)                 ALU(S725,S727)
	S734= ALU.Out=>ALUOut.In                                    Premise(F307)
	S735= ALUOut.In={6{LI[0]},LI,2'b0}+addr                     Path(S730,S734)
	S736= ALUOut.Out=>PC.In                                     Premise(F308)
	S737= PC.In={6{LI[0]},LI,2'b0}+addr                         Path(S665,S736)
	S738= CtrlPIDReg=0                                          Premise(F309)
	S739= [PIDReg]=pid                                          PIDReg-Hold(S613,S738)
	S740= CtrlIMMU=0                                            Premise(F310)
	S741= CtrlPC=0                                              Premise(F311)
	S742= CtrlPCInc=0                                           Premise(F312)
	S743= PC[CIA]=addr                                          PC-Hold(S617,S742)
	S744= PC[Out]={6{LI[0]},LI,2'b0}+addr                       PC-Hold(S618,S741,S742)
	S745= CtrlIAddrReg=0                                        Premise(F313)
	S746= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S620,S745)
	S747= CtrlIMMUHitReg=0                                      Premise(F314)
	S748= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S622,S747)
	S749= CtrlICache=0                                          Premise(F315)
	S750= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S624,S749)
	S751= CtrlICacheReg=0                                       Premise(F316)
	S752= CtrlICacheHitReg=0                                    Premise(F317)
	S753= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S627,S752)
	S754= CtrlIMem=0                                            Premise(F318)
	S755= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S629,S754)
	S756= CtrlIRMux=0                                           Premise(F319)
	S757= CtrlIR=0                                              Premise(F320)
	S758= [IR]={18,LI,0,0}                                      IR-Hold(S632,S757)
	S759= CtrlLR=0                                              Premise(F321)
	S760= CtrlA=0                                               Premise(F322)
	S761= [A]={6{LI[0]},LI,2'b0}                                A-Hold(S635,S760)
	S762= CtrlB=0                                               Premise(F323)
	S763= [B]=addr                                              B-Hold(S637,S762)
	S764= CtrlALUOut=0                                          Premise(F324)
	S765= [ALUOut]={6{LI[0]},LI,2'b0}+addr                      ALUOut-Hold(S639,S764)

WB	S766= PIDReg.Out=pid                                        PIDReg-Out(S739)
	S767= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S739)
	S768= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S739)
	S769= PC.CIA=addr                                           PC-Out(S743)
	S770= PC.CIA31_28=addr[31:28]                               PC-Out(S743)
	S771= PC.Out={6{LI[0]},LI,2'b0}+addr                        PC-Out(S744)
	S772= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S746)
	S773= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S746)
	S774= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S746)
	S775= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S748)
	S776= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S748)
	S777= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S748)
	S778= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S753)
	S779= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S753)
	S780= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S753)
	S781= IR.Out0_5=18                                          IR-Out(S758)
	S782= IR.Out6_29=LI                                         IR-Out(S758)
	S783= IR.Out30=0                                            IR-Out(S758)
	S784= IR.Out31=0                                            IR-Out(S758)
	S785= A.Out={6{LI[0]},LI,2'b0}                              A-Out(S761)
	S786= A.Out26_31={6{LI[0]},LI,2'b0}[26:31]                  A-Out(S761)
	S787= A.Out30_31={6{LI[0]},LI,2'b0}[30:31]                  A-Out(S761)
	S788= B.Out=addr                                            B-Out(S763)
	S789= B.Out26_31=addr[26:31]                                B-Out(S763)
	S790= B.Out30_31=addr[30:31]                                B-Out(S763)
	S791= ALUOut.Out={6{LI[0]},LI,2'b0}+addr                    ALUOut-Out(S765)
	S792= ALUOut.Out26_31={6{LI[0]},LI,2'b0}+addr[26:31]        ALUOut-Out(S765)
	S793= ALUOut.Out30_31={6{LI[0]},LI,2'b0}+addr[30:31]        ALUOut-Out(S765)
	S794= PIDReg.Out=>IMMU.PID                                  Premise(F325)
	S795= IMMU.PID=pid                                          Path(S766,S794)
	S796= PC.Out=>IMMU.IEA                                      Premise(F326)
	S797= IMMU.IEA={6{LI[0]},LI,2'b0}+addr                      Path(S771,S796)
	S798= IMMU.Addr={pid,{6{LI[0]},LI,2'b0}+addr}               IMMU-Search(S795,S797)
	S799= IMMU.Hit=IMMUHit(pid,{6{LI[0]},LI,2'b0}+addr)         IMMU-Search(S795,S797)
	S800= IMMU.Addr=>IAddrReg.In                                Premise(F327)
	S801= IAddrReg.In={pid,{6{LI[0]},LI,2'b0}+addr}             Path(S798,S800)
	S802= IMMU.Hit=>IMMUHitReg.In                               Premise(F328)
	S803= IMMUHitReg.In=IMMUHit(pid,{6{LI[0]},LI,2'b0}+addr)    Path(S799,S802)
	S804= PC.Out=>ICache.IEA                                    Premise(F329)
	S805= ICache.IEA={6{LI[0]},LI,2'b0}+addr                    Path(S771,S804)
	S806= ICache.Hit=ICacheHit({6{LI[0]},LI,2'b0}+addr)         ICache-Search(S805)
	S807= ICache.Out=>ICacheReg.In                              Premise(F330)
	S808= ICache.Hit=>ICacheHitReg.In                           Premise(F331)
	S809= ICacheHitReg.In=ICacheHit({6{LI[0]},LI,2'b0}+addr)    Path(S806,S808)
	S810= IMMUHitReg.Out=>CU.IMemHit                            Premise(F332)
	S811= CU.IMemHit=IMMUHit(pid,addr)                          Path(S775,S810)
	S812= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F333)
	S813= CU.ICacheHit=ICacheHit(addr)                          Path(S778,S812)
	S814= IAddrReg.Out=>IMem.RAddr                              Premise(F334)
	S815= IMem.RAddr={pid,addr}                                 Path(S772,S814)
	S816= IMem.Out={18,LI,0,0}                                  IMem-Read(S815,S755)
	S817= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S815,S755)
	S818= IMem.Out=>IRMux.MemData                               Premise(F335)
	S819= IRMux.MemData={18,LI,0,0}                             Path(S816,S818)
	S820= IRMux.Out={18,LI,0,0}                                 IRMux-Select(S819)
	S821= ICacheReg.Out=>IRMux.CacheData                        Premise(F336)
	S822= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F337)
	S823= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S775,S822)
	S824= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F338)
	S825= IRMux.CacheSel=ICacheHit(addr)                        Path(S778,S824)
	S826= IRMux.Out=>IR.In                                      Premise(F339)
	S827= IR.In={18,LI,0,0}                                     Path(S820,S826)
	S828= IMem.MEM8WordOut=>ICache.WData                        Premise(F340)
	S829= ICache.WData=IMemGet8Word({pid,addr})                 Path(S817,S828)
	S830= PC.Out=>ICache.IEA                                    Premise(F341)
	S831= IR.Out0_5=>CU.Op                                      Premise(F342)
	S832= CU.Op=18                                              Path(S781,S831)
	S833= IR.Out31=>CU.LK                                       Premise(F343)
	S834= CU.LK=0                                               Path(S784,S833)
	S835= CU.Func=alu_add                                       CU(S832,S834)
	S836= PC.Out=>LR.In                                         Premise(F344)
	S837= LR.In={6{LI[0]},LI,2'b0}+addr                         Path(S771,S836)
	S838= IR.Out6_29=>Addr24Ext.In                              Premise(F345)
	S839= Addr24Ext.In=LI                                       Path(S782,S838)
	S840= Addr24Ext.Out={6{LI[0]},LI,2'b0}                      Addr24Ext-EXT(S839)
	S841= Addr24Ext.Out=>A.In                                   Premise(F346)
	S842= A.In={6{LI[0]},LI,2'b0}                               Path(S840,S841)
	S843= IR.Out30=>BaseAddrSel.Sel                             Premise(F347)
	S844= BaseAddrSel.Sel=0                                     Path(S783,S843)
	S845= PC.CIA=>BaseAddrSel.PC                                Premise(F348)
	S846= BaseAddrSel.PC=addr                                   Path(S769,S845)
	S847= BaseAddrSel.Out=addr                                  BaseAddrSel(S846)
	S848= BaseAddrSel.Out=>B.In                                 Premise(F349)
	S849= B.In=addr                                             Path(S847,S848)
	S850= A.Out=>ALU.A                                          Premise(F350)
	S851= ALU.A={6{LI[0]},LI,2'b0}                              Path(S785,S850)
	S852= B.Out=>ALU.B                                          Premise(F351)
	S853= ALU.B=addr                                            Path(S788,S852)
	S854= CU.Func=>ALU.Func                                     Premise(F352)
	S855= ALU.Func=alu_add                                      Path(S835,S854)
	S856= ALU.Out={6{LI[0]},LI,2'b0}+addr                       ALU(S851,S853)
	S857= ALU.CMP=Compare0({6{LI[0]},LI,2'b0}+addr)             ALU(S851,S853)
	S858= ALU.OV=OverFlow({6{LI[0]},LI,2'b0}+addr)              ALU(S851,S853)
	S859= ALU.CA=Carry({6{LI[0]},LI,2'b0}+addr)                 ALU(S851,S853)
	S860= ALU.Out=>ALUOut.In                                    Premise(F353)
	S861= ALUOut.In={6{LI[0]},LI,2'b0}+addr                     Path(S856,S860)
	S862= ALUOut.Out=>PC.In                                     Premise(F354)
	S863= PC.In={6{LI[0]},LI,2'b0}+addr                         Path(S791,S862)
	S864= CtrlPIDReg=0                                          Premise(F355)
	S865= [PIDReg]=pid                                          PIDReg-Hold(S739,S864)
	S866= CtrlIMMU=0                                            Premise(F356)
	S867= CtrlPC=0                                              Premise(F357)
	S868= CtrlPCInc=0                                           Premise(F358)
	S869= PC[CIA]=addr                                          PC-Hold(S743,S868)
	S870= PC[Out]={6{LI[0]},LI,2'b0}+addr                       PC-Hold(S744,S867,S868)
	S871= CtrlIAddrReg=0                                        Premise(F359)
	S872= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S746,S871)
	S873= CtrlIMMUHitReg=0                                      Premise(F360)
	S874= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S748,S873)
	S875= CtrlICache=0                                          Premise(F361)
	S876= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S750,S875)
	S877= CtrlICacheReg=0                                       Premise(F362)
	S878= CtrlICacheHitReg=0                                    Premise(F363)
	S879= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S753,S878)
	S880= CtrlIMem=0                                            Premise(F364)
	S881= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S755,S880)
	S882= CtrlIRMux=0                                           Premise(F365)
	S883= CtrlIR=0                                              Premise(F366)
	S884= [IR]={18,LI,0,0}                                      IR-Hold(S758,S883)
	S885= CtrlLR=0                                              Premise(F367)
	S886= CtrlA=0                                               Premise(F368)
	S887= [A]={6{LI[0]},LI,2'b0}                                A-Hold(S761,S886)
	S888= CtrlB=0                                               Premise(F369)
	S889= [B]=addr                                              B-Hold(S763,S888)
	S890= CtrlALUOut=0                                          Premise(F370)
	S891= [ALUOut]={6{LI[0]},LI,2'b0}+addr                      ALUOut-Hold(S765,S890)

POST	S865= [PIDReg]=pid                                          PIDReg-Hold(S739,S864)
	S869= PC[CIA]=addr                                          PC-Hold(S743,S868)
	S870= PC[Out]={6{LI[0]},LI,2'b0}+addr                       PC-Hold(S744,S867,S868)
	S872= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S746,S871)
	S874= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S748,S873)
	S876= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S750,S875)
	S879= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S753,S878)
	S881= IMem[{pid,addr}]={18,LI,0,0}                          IMem-Hold(S755,S880)
	S884= [IR]={18,LI,0,0}                                      IR-Hold(S758,S883)
	S887= [A]={6{LI[0]},LI,2'b0}                                A-Hold(S761,S886)
	S889= [B]=addr                                              B-Hold(S763,S888)
	S891= [ALUOut]={6{LI[0]},LI,2'b0}+addr                      ALUOut-Hold(S765,S890)

