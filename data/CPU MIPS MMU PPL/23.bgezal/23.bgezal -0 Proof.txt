
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={1,rS,17,offset}                       Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= IMMU.Addr=>IAddrReg.In                                  Premise(F66)
	S6= PC.Out=>IMMU.IEA                                        Premise(F71)
	S7= IMMU.IEA=addr                                           Path(S4,S6)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F72)
	S9= IMMU.PID=pid                                            Path(S3,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S7)
	S11= IAddrReg.In={pid,addr}                                 Path(S10,S5)
	S12= CtrlPC=0                                               Premise(F113)
	S13= CtrlPCInc=0                                            Premise(F114)
	S14= PC[Out]=addr                                           PC-Hold(S1,S12,S13)
	S15= CtrlIAddrReg=1                                         Premise(F137)
	S16= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S11,S15)
	S17= CtrlIMem=0                                             Premise(F138)
	S18= IMem[{pid,addr}]={1,rS,17,offset}                      IMem-Hold(S2,S17)
	S19= GPR[rS]=a                                              Premise(F145)

IMMU	S20= PC.Out=addr                                            PC-Out(S14)
	S21= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S16)
	S22= PC.Out=>ICache.IEA                                     Premise(F210)
	S23= ICache.IEA=addr                                        Path(S20,S22)
	S24= IMem.MEM8WordOut=>ICache.WData                         Premise(F212)
	S25= IAddrReg.Out=>IMem.RAddr                               Premise(F216)
	S26= IMem.RAddr={pid,addr}                                  Path(S21,S25)
	S27= IMem.Out={1,rS,17,offset}                              IMem-Read(S26,S18)
	S28= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S26,S18)
	S29= ICache.WData=IMemGet8Word({pid,addr})                  Path(S28,S24)
	S30= IMem.Out=>IRMux.MemData                                Premise(F219)
	S31= IRMux.MemData={1,rS,17,offset}                         Path(S27,S30)
	S32= IRMux.Out={1,rS,17,offset}                             IRMux-Select2(S31)
	S33= IRMux.Out=>IR_ID.In                                    Premise(F225)
	S34= IR_ID.In={1,rS,17,offset}                              Path(S32,S33)
	S35= CtrlPC=0                                               Premise(F256)
	S36= CtrlPCInc=1                                            Premise(F257)
	S37= PC[Out]=addr+4                                         PC-Inc(S14,S35,S36)
	S38= CtrlICache=1                                           Premise(F266)
	S39= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S23,S29,S38)
	S40= CtrlIR_ID=1                                            Premise(F275)
	S41= [IR_ID]={1,rS,17,offset}                               IR_ID-Write(S34,S40)
	S42= CtrlGPR=0                                              Premise(F279)
	S43= GPR[rS]=a                                              GPR-Hold(S19,S42)

ID	S44= IR_ID.Out25_21=rS                                      IR-Out(S41)
	S45= FU.OutID1=>A_EX.In                                     Premise(F292)
	S46= FU.OutID2=>B_EX.In                                     Premise(F294)
	S47= GPR.Rdata1=>FU.InID1                                   Premise(F344)
	S48= GPR.Rdata2=>FU.InID2                                   Premise(F346)
	S49= IR_ID.Out25_21=>GPR.RReg1                              Premise(F348)
	S50= GPR.RReg1=rS                                           Path(S44,S49)
	S51= GPR.Rdata1=a                                           GPR-Read(S50,S43)
	S52= FU.InID1=a                                             Path(S51,S47)
	S53= FU.OutID1=FU(a)                                        FU-Forward(S52)
	S54= A_EX.In=FU(a)                                          Path(S53,S45)
	S55= GPR.Rdata2=32'b0                                       GPR-ReadGPR0()
	S56= FU.InID2=32'b0                                         Path(S55,S48)
	S57= FU.OutID2=FU(32'b0)                                    FU-Forward(S56)
	S58= B_EX.In=FU(32'b0)                                      Path(S57,S46)
	S59= CtrlPC=0                                               Premise(F398)
	S60= CtrlPCInc=0                                            Premise(F399)
	S61= PC[Out]=addr+4                                         PC-Hold(S37,S59,S60)
	S62= CtrlA_EX=1                                             Premise(F402)
	S63= [A_EX]=FU(a)                                           A_EX-Write(S54,S62)
	S64= CtrlB_EX=1                                             Premise(F405)
	S65= [B_EX]=FU(32'b0)                                       B_EX-Write(S58,S64)
	S66= CtrlICache=0                                           Premise(F408)
	S67= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S39,S66)

EX	S68= PC.Out=addr+4                                          PC-Out(S61)
	S69= A_EX.Out=FU(a)                                         A_EX-Out(S63)
	S70= B_EX.Out=FU(32'b0)                                     B_EX-Out(S65)
	S71= A_EX.Out=>CMPU.A                                       Premise(F439)
	S72= CMPU.A=FU(a)                                           Path(S69,S71)
	S73= B_EX.Out=>CMPU.B                                       Premise(F440)
	S74= CMPU.B=FU(32'b0)                                       Path(S70,S73)
	S75= CMPU.lt=CompareS(FU(a),FU(32'b0))                      CMPU-CMPS(S72,S74)
	S76= CMPU.lt=>ConditionReg_MEM.In                           Premise(F475)
	S77= ConditionReg_MEM.In=CompareS(FU(a),FU(32'b0))          Path(S75,S76)
	S78= PC.Out=>GPR.WData                                      Premise(F495)
	S79= GPR.WData=addr+4                                       Path(S68,S78)
	S80= GPR.WReg=5'd31                                         Premise(F496)
	S81= CtrlICache=0                                           Premise(F554)
	S82= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S67,S81)
	S83= CtrlConditionReg_MEM=1                                 Premise(F556)
	S84= [ConditionReg_MEM]=CompareS(FU(a),FU(32'b0))           ConditionReg_MEM-Write(S77,S83)
	S85= CtrlGPR=1                                              Premise(F567)
	S86= GPR[5'd31]=addr+4                                      GPR-Write(S80,S79,S85)

MEM	S87= ConditionReg_MEM.Out=CompareS(FU(a),FU(32'b0))         ConditionReg_MEM-Out(S84)
	S88= ConditionReg_MEM.Out=>ConditionReg_WB.In               Premise(F621)
	S89= ConditionReg_WB.In=CompareS(FU(a),FU(32'b0))           Path(S87,S88)
	S90= CtrlICache=0                                           Premise(F697)
	S91= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S82,S90)
	S92= CtrlConditionReg_WB=1                                  Premise(F702)
	S93= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Write(S89,S92)
	S94= CtrlGPR=0                                              Premise(F710)
	S95= GPR[5'd31]=addr+4                                      GPR-Hold(S86,S94)

WB	S96= CtrlICache=0                                           Premise(F1126)
	S97= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S91,S96)
	S98= CtrlConditionReg_WB=0                                  Premise(F1131)
	S99= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Hold(S93,S98)
	S100= CtrlGPR=0                                             Premise(F1139)
	S101= GPR[5'd31]=addr+4                                     GPR-Hold(S95,S100)

POST	S97= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S91,S96)
	S99= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Hold(S93,S98)
	S101= GPR[5'd31]=addr+4                                     GPR-Hold(S95,S100)

