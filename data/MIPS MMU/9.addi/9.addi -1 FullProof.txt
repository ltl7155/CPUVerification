
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={8,rS,rT,SIMM}                         Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= CP0.ASID=>IMMU.PID                                      Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S7,S9)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S13= IAddrReg.In={pid,addr}                                 Path(S10,S12)
	S14= IMMU.Hit=>CU.IMMUHit                                   Premise(F7)
	S15= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S11,S14)
	S16= PC.Out=>ICache.IEA                                     Premise(F8)
	S17= ICache.IEA=addr                                        Path(S5,S16)
	S18= ICache.Hit=ICacheHit(addr)                             ICache-Search(S17)
	S19= ICache.Out=>IR.In                                      Premise(F9)
	S20= ICache.Out=>ICacheReg.In                               Premise(F10)
	S21= ICache.Hit=>CU.ICacheHit                               Premise(F11)
	S22= CU.ICacheHit=ICacheHit(addr)                           Path(S18,S21)
	S23= CtrlASIDIn=0                                           Premise(F12)
	S24= CtrlCP0=0                                              Premise(F13)
	S25= CP0[ASID]=pid                                          CP0-Hold(S0,S24)
	S26= CtrlEPCIn=0                                            Premise(F14)
	S27= CtrlExCodeIn=0                                         Premise(F15)
	S28= CtrlIMMU=0                                             Premise(F16)
	S29= CtrlPC=0                                               Premise(F17)
	S30= CtrlPCInc=0                                            Premise(F18)
	S31= PC[Out]=addr                                           PC-Hold(S1,S29,S30)
	S32= CtrlIAddrReg=1                                         Premise(F19)
	S33= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S32)
	S34= CtrlICache=0                                           Premise(F20)
	S35= CtrlIR=0                                               Premise(F21)
	S36= CtrlICacheReg=1                                        Premise(F22)
	S37= CtrlIMem=0                                             Premise(F23)
	S38= IMem[{pid,addr}]={8,rS,rT,SIMM}                        IMem-Hold(S2,S37)
	S39= CtrlIRMux=0                                            Premise(F24)
	S40= CtrlGPR=0                                              Premise(F25)
	S41= GPR[rS]=a                                              GPR-Hold(S3,S40)
	S42= CtrlA=0                                                Premise(F26)
	S43= CtrlB=0                                                Premise(F27)
	S44= CtrlALUOut=0                                           Premise(F28)
	S45= CtrlOVReg=0                                            Premise(F29)

IF(IMMU)	S46= CP0.ASID=pid                                           CP0-Read-ASID(S25)
	S47= PC.Out=addr                                            PC-Out(S31)
	S48= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S33)
	S49= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S33)
	S50= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S33)
	S51= CU.IMMUHit=>CU.IMMUHit                                 Premise(F30)
	S52= CU.ICacheHit=>CU.ICacheHit                             Premise(F31)
	S53= IAddrReg.Out=>IMem.RAddr                               Premise(F32)
	S54= IMem.RAddr={pid,addr}                                  Path(S48,S53)
	S55= IMem.Out={8,rS,rT,SIMM}                                IMem-Read(S54,S38)
	S56= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S54,S38)
	S57= IMem.Out=>IRMux.MemData                                Premise(F33)
	S58= IRMux.MemData={8,rS,rT,SIMM}                           Path(S55,S57)
	S59= IRMux.Out={8,rS,rT,SIMM}                               IRMux-Select2(S58)
	S60= ICacheReg.Out=>IRMux.CacheData                         Premise(F34)
	S61= CU.IMMUHit=>IRMux.MemSel                               Premise(F35)
	S62= CU.ICacheHit=>IRMux.CacheSel                           Premise(F36)
	S63= IRMux.Out=>IR.In                                       Premise(F37)
	S64= IR.In={8,rS,rT,SIMM}                                   Path(S59,S63)
	S65= IMem.MEM8WordOut=>ICache.WData                         Premise(F38)
	S66= ICache.WData=IMemGet8Word({pid,addr})                  Path(S56,S65)
	S67= PC.Out=>ICache.IEA                                     Premise(F39)
	S68= ICache.IEA=addr                                        Path(S47,S67)
	S69= ICache.Hit=ICacheHit(addr)                             ICache-Search(S68)
	S70= CtrlASIDIn=0                                           Premise(F40)
	S71= CtrlCP0=0                                              Premise(F41)
	S72= CP0[ASID]=pid                                          CP0-Hold(S25,S71)
	S73= CtrlEPCIn=0                                            Premise(F42)
	S74= CtrlExCodeIn=0                                         Premise(F43)
	S75= CtrlIMMU=0                                             Premise(F44)
	S76= CtrlPC=0                                               Premise(F45)
	S77= CtrlPCInc=1                                            Premise(F46)
	S78= PC[Out]=addr+4                                         PC-Inc(S31,S76,S77)
	S79= PC[CIA]=addr                                           PC-Inc(S31,S76,S77)
	S80= CtrlIAddrReg=0                                         Premise(F47)
	S81= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S33,S80)
	S82= CtrlICache=1                                           Premise(F48)
	S83= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S68,S66,S82)
	S84= CtrlIR=1                                               Premise(F49)
	S85= [IR]={8,rS,rT,SIMM}                                    IR-Write(S64,S84)
	S86= CtrlICacheReg=0                                        Premise(F50)
	S87= CtrlIMem=0                                             Premise(F51)
	S88= IMem[{pid,addr}]={8,rS,rT,SIMM}                        IMem-Hold(S38,S87)
	S89= CtrlIRMux=0                                            Premise(F52)
	S90= CtrlGPR=0                                              Premise(F53)
	S91= GPR[rS]=a                                              GPR-Hold(S41,S90)
	S92= CtrlA=0                                                Premise(F54)
	S93= CtrlB=0                                                Premise(F55)
	S94= CtrlALUOut=0                                           Premise(F56)
	S95= CtrlOVReg=0                                            Premise(F57)

ID	S96= CP0.ASID=pid                                           CP0-Read-ASID(S72)
	S97= PC.Out=addr+4                                          PC-Out(S78)
	S98= PC.CIA=addr                                            PC-Out(S79)
	S99= PC.CIA31_28=addr[31:28]                                PC-Out(S79)
	S100= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S81)
	S101= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S81)
	S102= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S81)
	S103= IR.Out={8,rS,rT,SIMM}                                 IR-Out(S85)
	S104= IR.Out31_26=8                                         IR-Out(S85)
	S105= IR.Out25_21=rS                                        IR-Out(S85)
	S106= IR.Out20_16=rT                                        IR-Out(S85)
	S107= IR.Out15_0=SIMM                                       IR-Out(S85)
	S108= IR.Out31_26=>CU.Op                                    Premise(F58)
	S109= CU.Op=8                                               Path(S104,S108)
	S110= CU.Func=alu_subf                                      CU(S109)
	S111= IR.Out25_21=>GPR.RReg1                                Premise(F59)
	S112= GPR.RReg1=rS                                          Path(S105,S111)
	S113= GPR.Rdata1=a                                          GPR-Read(S112,S91)
	S114= IR.Out15_0=>IMMEXT.In                                 Premise(F60)
	S115= IMMEXT.In=SIMM                                        Path(S107,S114)
	S116= IMMEXT.Out={16{SIMM[15]},SIMM}                        IMMEXT(S115)
	S117= GPR.Rdata1=>A.In                                      Premise(F61)
	S118= A.In=a                                                Path(S113,S117)
	S119= IMMEXT.Out=>B.In                                      Premise(F62)
	S120= B.In={16{SIMM[15]},SIMM}                              Path(S116,S119)
	S121= CtrlASIDIn=0                                          Premise(F63)
	S122= CtrlCP0=0                                             Premise(F64)
	S123= CP0[ASID]=pid                                         CP0-Hold(S72,S122)
	S124= CtrlEPCIn=0                                           Premise(F65)
	S125= CtrlExCodeIn=0                                        Premise(F66)
	S126= CtrlIMMU=0                                            Premise(F67)
	S127= CtrlPC=0                                              Premise(F68)
	S128= CtrlPCInc=0                                           Premise(F69)
	S129= PC[CIA]=addr                                          PC-Hold(S79,S128)
	S130= PC[Out]=addr+4                                        PC-Hold(S78,S127,S128)
	S131= CtrlIAddrReg=0                                        Premise(F70)
	S132= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S81,S131)
	S133= CtrlICache=0                                          Premise(F71)
	S134= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S83,S133)
	S135= CtrlIR=0                                              Premise(F72)
	S136= [IR]={8,rS,rT,SIMM}                                   IR-Hold(S85,S135)
	S137= CtrlICacheReg=0                                       Premise(F73)
	S138= CtrlIMem=0                                            Premise(F74)
	S139= IMem[{pid,addr}]={8,rS,rT,SIMM}                       IMem-Hold(S88,S138)
	S140= CtrlIRMux=0                                           Premise(F75)
	S141= CtrlGPR=0                                             Premise(F76)
	S142= GPR[rS]=a                                             GPR-Hold(S91,S141)
	S143= CtrlA=1                                               Premise(F77)
	S144= [A]=a                                                 A-Write(S118,S143)
	S145= CtrlB=1                                               Premise(F78)
	S146= [B]={16{SIMM[15]},SIMM}                               B-Write(S120,S145)
	S147= CtrlALUOut=0                                          Premise(F79)
	S148= CtrlOVReg=0                                           Premise(F80)

EX	S149= CP0.ASID=pid                                          CP0-Read-ASID(S123)
	S150= PC.CIA=addr                                           PC-Out(S129)
	S151= PC.CIA31_28=addr[31:28]                               PC-Out(S129)
	S152= PC.Out=addr+4                                         PC-Out(S130)
	S153= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S132)
	S154= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S132)
	S155= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S132)
	S156= IR.Out={8,rS,rT,SIMM}                                 IR-Out(S136)
	S157= IR.Out31_26=8                                         IR-Out(S136)
	S158= IR.Out25_21=rS                                        IR-Out(S136)
	S159= IR.Out20_16=rT                                        IR-Out(S136)
	S160= IR.Out15_0=SIMM                                       IR-Out(S136)
	S161= A.Out=a                                               A-Out(S144)
	S162= A.Out1_0={a}[1:0]                                     A-Out(S144)
	S163= A.Out4_0={a}[4:0]                                     A-Out(S144)
	S164= B.Out={16{SIMM[15]},SIMM}                             B-Out(S146)
	S165= B.Out1_0={{16{SIMM[15]},SIMM}}[1:0]                   B-Out(S146)
	S166= B.Out4_0={{16{SIMM[15]},SIMM}}[4:0]                   B-Out(S146)
	S167= A.Out=>ALU.A                                          Premise(F81)
	S168= ALU.A=a                                               Path(S161,S167)
	S169= B.Out=>ALU.B                                          Premise(F82)
	S170= ALU.B={16{SIMM[15]},SIMM}                             Path(S164,S169)
	S171= ALU.Func=6'b000010                                    Premise(F83)
	S172= ALU.Out=a+{16{SIMM[15]},SIMM}                         ALU(S168,S170)
	S173= ALU.Out1_0={a+{16{SIMM[15]},SIMM}}[1:0]               ALU(S168,S170)
	S174= ALU.CMP=Compare0(a+{16{SIMM[15]},SIMM})               ALU(S168,S170)
	S175= ALU.OV=OverFlow(a+{16{SIMM[15]},SIMM})                ALU(S168,S170)
	S176= ALU.CA=Carry(a+{16{SIMM[15]},SIMM})                   ALU(S168,S170)
	S177= ALU.Out=>ALUOut.In                                    Premise(F84)
	S178= ALUOut.In=a+{16{SIMM[15]},SIMM}                       Path(S172,S177)
	S179= ALU.OV=>OVReg.In                                      Premise(F85)
	S180= OVReg.In=OverFlow(a+{16{SIMM[15]},SIMM})              Path(S175,S179)
	S181= CtrlASIDIn=0                                          Premise(F86)
	S182= CtrlCP0=0                                             Premise(F87)
	S183= CP0[ASID]=pid                                         CP0-Hold(S123,S182)
	S184= CtrlEPCIn=0                                           Premise(F88)
	S185= CtrlExCodeIn=0                                        Premise(F89)
	S186= CtrlIMMU=0                                            Premise(F90)
	S187= CtrlPC=0                                              Premise(F91)
	S188= CtrlPCInc=0                                           Premise(F92)
	S189= PC[CIA]=addr                                          PC-Hold(S129,S188)
	S190= PC[Out]=addr+4                                        PC-Hold(S130,S187,S188)
	S191= CtrlIAddrReg=0                                        Premise(F93)
	S192= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S132,S191)
	S193= CtrlICache=0                                          Premise(F94)
	S194= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S134,S193)
	S195= CtrlIR=0                                              Premise(F95)
	S196= [IR]={8,rS,rT,SIMM}                                   IR-Hold(S136,S195)
	S197= CtrlICacheReg=0                                       Premise(F96)
	S198= CtrlIMem=0                                            Premise(F97)
	S199= IMem[{pid,addr}]={8,rS,rT,SIMM}                       IMem-Hold(S139,S198)
	S200= CtrlIRMux=0                                           Premise(F98)
	S201= CtrlGPR=0                                             Premise(F99)
	S202= GPR[rS]=a                                             GPR-Hold(S142,S201)
	S203= CtrlA=0                                               Premise(F100)
	S204= [A]=a                                                 A-Hold(S144,S203)
	S205= CtrlB=0                                               Premise(F101)
	S206= [B]={16{SIMM[15]},SIMM}                               B-Hold(S146,S205)
	S207= CtrlALUOut=1                                          Premise(F102)
	S208= [ALUOut]=a+{16{SIMM[15]},SIMM}                        ALUOut-Write(S178,S207)
	S209= CtrlOVReg=1                                           Premise(F103)
	S210= [OVReg]=OverFlow(a+{16{SIMM[15]},SIMM})               OVReg-Write(S180,S209)

MEM	S211= CP0.ASID=pid                                          CP0-Read-ASID(S183)
	S212= PC.CIA=addr                                           PC-Out(S189)
	S213= PC.CIA31_28=addr[31:28]                               PC-Out(S189)
	S214= PC.Out=addr+4                                         PC-Out(S190)
	S215= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S192)
	S216= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S192)
	S217= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S192)
	S218= IR.Out={8,rS,rT,SIMM}                                 IR-Out(S196)
	S219= IR.Out31_26=8                                         IR-Out(S196)
	S220= IR.Out25_21=rS                                        IR-Out(S196)
	S221= IR.Out20_16=rT                                        IR-Out(S196)
	S222= IR.Out15_0=SIMM                                       IR-Out(S196)
	S223= A.Out=a                                               A-Out(S204)
	S224= A.Out1_0={a}[1:0]                                     A-Out(S204)
	S225= A.Out4_0={a}[4:0]                                     A-Out(S204)
	S226= B.Out={16{SIMM[15]},SIMM}                             B-Out(S206)
	S227= B.Out1_0={{16{SIMM[15]},SIMM}}[1:0]                   B-Out(S206)
	S228= B.Out4_0={{16{SIMM[15]},SIMM}}[4:0]                   B-Out(S206)
	S229= ALUOut.Out=a+{16{SIMM[15]},SIMM}                      ALUOut-Out(S208)
	S230= ALUOut.Out1_0={a+{16{SIMM[15]},SIMM}}[1:0]            ALUOut-Out(S208)
	S231= ALUOut.Out4_0={a+{16{SIMM[15]},SIMM}}[4:0]            ALUOut-Out(S208)
	S232= OVReg.Out=OverFlow(a+{16{SIMM[15]},SIMM})             OVReg-Out(S210)
	S233= OVReg.Out1_0={OverFlow(a+{16{SIMM[15]},SIMM})}[1:0]   OVReg-Out(S210)
	S234= OVReg.Out4_0={OverFlow(a+{16{SIMM[15]},SIMM})}[4:0]   OVReg-Out(S210)
	S235= CtrlASIDIn=0                                          Premise(F104)
	S236= CtrlCP0=0                                             Premise(F105)
	S237= CP0[ASID]=pid                                         CP0-Hold(S183,S236)
	S238= CtrlEPCIn=0                                           Premise(F106)
	S239= CtrlExCodeIn=0                                        Premise(F107)
	S240= CtrlIMMU=0                                            Premise(F108)
	S241= CtrlPC=0                                              Premise(F109)
	S242= CtrlPCInc=0                                           Premise(F110)
	S243= PC[CIA]=addr                                          PC-Hold(S189,S242)
	S244= PC[Out]=addr+4                                        PC-Hold(S190,S241,S242)
	S245= CtrlIAddrReg=0                                        Premise(F111)
	S246= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S192,S245)
	S247= CtrlICache=0                                          Premise(F112)
	S248= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S194,S247)
	S249= CtrlIR=0                                              Premise(F113)
	S250= [IR]={8,rS,rT,SIMM}                                   IR-Hold(S196,S249)
	S251= CtrlICacheReg=0                                       Premise(F114)
	S252= CtrlIMem=0                                            Premise(F115)
	S253= IMem[{pid,addr}]={8,rS,rT,SIMM}                       IMem-Hold(S199,S252)
	S254= CtrlIRMux=0                                           Premise(F116)
	S255= CtrlGPR=0                                             Premise(F117)
	S256= GPR[rS]=a                                             GPR-Hold(S202,S255)
	S257= CtrlA=0                                               Premise(F118)
	S258= [A]=a                                                 A-Hold(S204,S257)
	S259= CtrlB=0                                               Premise(F119)
	S260= [B]={16{SIMM[15]},SIMM}                               B-Hold(S206,S259)
	S261= CtrlALUOut=0                                          Premise(F120)
	S262= [ALUOut]=a+{16{SIMM[15]},SIMM}                        ALUOut-Hold(S208,S261)
	S263= CtrlOVReg=0                                           Premise(F121)
	S264= [OVReg]=OverFlow(a+{16{SIMM[15]},SIMM})               OVReg-Hold(S210,S263)

WB	S265= CP0.ASID=pid                                          CP0-Read-ASID(S237)
	S266= PC.CIA=addr                                           PC-Out(S243)
	S267= PC.CIA31_28=addr[31:28]                               PC-Out(S243)
	S268= PC.Out=addr+4                                         PC-Out(S244)
	S269= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S246)
	S270= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S246)
	S271= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S246)
	S272= IR.Out={8,rS,rT,SIMM}                                 IR-Out(S250)
	S273= IR.Out31_26=8                                         IR-Out(S250)
	S274= IR.Out25_21=rS                                        IR-Out(S250)
	S275= IR.Out20_16=rT                                        IR-Out(S250)
	S276= IR.Out15_0=SIMM                                       IR-Out(S250)
	S277= A.Out=a                                               A-Out(S258)
	S278= A.Out1_0={a}[1:0]                                     A-Out(S258)
	S279= A.Out4_0={a}[4:0]                                     A-Out(S258)
	S280= B.Out={16{SIMM[15]},SIMM}                             B-Out(S260)
	S281= B.Out1_0={{16{SIMM[15]},SIMM}}[1:0]                   B-Out(S260)
	S282= B.Out4_0={{16{SIMM[15]},SIMM}}[4:0]                   B-Out(S260)
	S283= ALUOut.Out=a+{16{SIMM[15]},SIMM}                      ALUOut-Out(S262)
	S284= ALUOut.Out1_0={a+{16{SIMM[15]},SIMM}}[1:0]            ALUOut-Out(S262)
	S285= ALUOut.Out4_0={a+{16{SIMM[15]},SIMM}}[4:0]            ALUOut-Out(S262)
	S286= OVReg.Out=OverFlow(a+{16{SIMM[15]},SIMM})             OVReg-Out(S264)
	S287= OVReg.Out1_0={OverFlow(a+{16{SIMM[15]},SIMM})}[1:0]   OVReg-Out(S264)
	S288= OVReg.Out4_0={OverFlow(a+{16{SIMM[15]},SIMM})}[4:0]   OVReg-Out(S264)
	S289= IR.Out20_16=>GPR.WReg                                 Premise(F158)
	S290= GPR.WReg=rT                                           Path(S275,S289)
	S291= ALUOut.Out=>GPR.WData                                 Premise(F159)
	S292= GPR.WData=a+{16{SIMM[15]},SIMM}                       Path(S283,S291)
	S293= OVReg.Out=>CU.OV                                      Premise(F160)
	S294= CU.OV=OverFlow(a+{16{SIMM[15]},SIMM})                 Path(S286,S293)
	S295= CtrlASIDIn=0                                          Premise(F161)
	S296= CtrlCP0=0                                             Premise(F162)
	S297= CP0[ASID]=pid                                         CP0-Hold(S237,S296)
	S298= CtrlEPCIn=0                                           Premise(F163)
	S299= CtrlExCodeIn=0                                        Premise(F164)
	S300= CtrlIMMU=0                                            Premise(F165)
	S301= CtrlPC=0                                              Premise(F166)
	S302= CtrlPCInc=0                                           Premise(F167)
	S303= PC[CIA]=addr                                          PC-Hold(S243,S302)
	S304= PC[Out]=addr+4                                        PC-Hold(S244,S301,S302)
	S305= CtrlIAddrReg=0                                        Premise(F168)
	S306= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S246,S305)
	S307= CtrlICache=0                                          Premise(F169)
	S308= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S248,S307)
	S309= CtrlIR=0                                              Premise(F170)
	S310= [IR]={8,rS,rT,SIMM}                                   IR-Hold(S250,S309)
	S311= CtrlICacheReg=0                                       Premise(F171)
	S312= CtrlIMem=0                                            Premise(F172)
	S313= IMem[{pid,addr}]={8,rS,rT,SIMM}                       IMem-Hold(S253,S312)
	S314= CtrlIRMux=0                                           Premise(F173)
	S315= CtrlGPR=1                                             Premise(F174)
	S316= GPR[rT]=a+{16{SIMM[15]},SIMM}                         GPR-Write(S290,S292,S315)
	S317= CtrlA=0                                               Premise(F175)
	S318= [A]=a                                                 A-Hold(S258,S317)
	S319= CtrlB=0                                               Premise(F176)
	S320= [B]={16{SIMM[15]},SIMM}                               B-Hold(S260,S319)
	S321= CtrlALUOut=0                                          Premise(F177)
	S322= [ALUOut]=a+{16{SIMM[15]},SIMM}                        ALUOut-Hold(S262,S321)
	S323= CtrlOVReg=0                                           Premise(F178)
	S324= [OVReg]=OverFlow(a+{16{SIMM[15]},SIMM})               OVReg-Hold(S264,S323)

POST	S297= CP0[ASID]=pid                                         CP0-Hold(S237,S296)
	S303= PC[CIA]=addr                                          PC-Hold(S243,S302)
	S304= PC[Out]=addr+4                                        PC-Hold(S244,S301,S302)
	S306= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S246,S305)
	S308= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S248,S307)
	S310= [IR]={8,rS,rT,SIMM}                                   IR-Hold(S250,S309)
	S313= IMem[{pid,addr}]={8,rS,rT,SIMM}                       IMem-Hold(S253,S312)
	S316= GPR[rT]=a+{16{SIMM[15]},SIMM}                         GPR-Write(S290,S292,S315)
	S318= [A]=a                                                 A-Hold(S258,S317)
	S320= [B]={16{SIMM[15]},SIMM}                               B-Hold(S260,S319)
	S322= [ALUOut]=a+{16{SIMM[15]},SIMM}                        ALUOut-Hold(S262,S321)
	S324= [OVReg]=OverFlow(a+{16{SIMM[15]},SIMM})               OVReg-Hold(S264,S323)

