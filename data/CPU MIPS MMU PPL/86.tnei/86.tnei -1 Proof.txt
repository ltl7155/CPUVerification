
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={1,rs,14,imm}                          Premise(F2)
	S3= GPR[rs]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= IMMU.Addr=>IAddrReg.In                                  Premise(F59)
	S7= PC.Out=>IMMU.IEA                                        Premise(F65)
	S8= IMMU.IEA=addr                                           Path(S5,S7)
	S9= CP0.ASID=>IMMU.PID                                      Premise(F66)
	S10= IMMU.PID=pid                                           Path(S4,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S10,S8)
	S12= IAddrReg.In={pid,addr}                                 Path(S11,S6)
	S13= CtrlPC=0                                               Premise(F113)
	S14= CtrlPCInc=0                                            Premise(F114)
	S15= PC[Out]=addr                                           PC-Hold(S1,S13,S14)
	S16= CtrlGPR=0                                              Premise(F132)
	S17= GPR[rs]=a                                              GPR-Hold(S3,S16)
	S18= CtrlIAddrReg=1                                         Premise(F133)
	S19= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S18)
	S20= CtrlIMem=0                                             Premise(F134)
	S21= IMem[{pid,addr}]={1,rs,14,imm}                         IMem-Hold(S2,S20)

IMMU	S22= PC.Out=addr                                            PC-Out(S15)
	S23= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S19)
	S24= PC.Out=>ICache.IEA                                     Premise(F194)
	S25= ICache.IEA=addr                                        Path(S22,S24)
	S26= IMem.MEM8WordOut=>ICache.WData                         Premise(F196)
	S27= IAddrReg.Out=>IMem.RAddr                               Premise(F201)
	S28= IMem.RAddr={pid,addr}                                  Path(S23,S27)
	S29= IMem.Out={1,rs,14,imm}                                 IMem-Read(S28,S21)
	S30= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S28,S21)
	S31= ICache.WData=IMemGet8Word({pid,addr})                  Path(S30,S26)
	S32= IMem.Out=>IRMux.MemData                                Premise(F204)
	S33= IRMux.MemData={1,rs,14,imm}                            Path(S29,S32)
	S34= IRMux.Out={1,rs,14,imm}                                IRMux-Select2(S33)
	S35= IRMux.Out=>IR_ID.In                                    Premise(F210)
	S36= IR_ID.In={1,rs,14,imm}                                 Path(S34,S35)
	S37= CtrlPC=0                                               Premise(F247)
	S38= CtrlPCInc=1                                            Premise(F248)
	S39= PC[Out]=addr+4                                         PC-Inc(S15,S37,S38)
	S40= CtrlICache=1                                           Premise(F253)
	S41= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S25,S31,S40)
	S42= CtrlIR_ID=1                                            Premise(F262)
	S43= [IR_ID]={1,rs,14,imm}                                  IR_ID-Write(S36,S42)
	S44= CtrlGPR=0                                              Premise(F266)
	S45= GPR[rs]=a                                              GPR-Hold(S17,S44)

ID	S46= IR_ID.Out25_21=rs                                      IR-Out(S43)
	S47= IR_ID.Out15_0=imm                                      IR-Out(S43)
	S48= FU.OutID1=>A_EX.In                                     Premise(F272)
	S49= IMMEXT.Out=>B_EX.In                                    Premise(F274)
	S50= GPR.Rdata1=>FU.InID1                                   Premise(F324)
	S51= IR_ID.Out25_21=>GPR.RReg1                              Premise(F327)
	S52= GPR.RReg1=rs                                           Path(S46,S51)
	S53= GPR.Rdata1=a                                           GPR-Read(S52,S45)
	S54= FU.InID1=a                                             Path(S53,S50)
	S55= FU.OutID1=FU(a)                                        FU-Forward(S54)
	S56= A_EX.In=FU(a)                                          Path(S55,S48)
	S57= IR_ID.Out15_0=>IMMEXT.In                               Premise(F333)
	S58= IMMEXT.In=imm                                          Path(S47,S57)
	S59= IMMEXT.Out={16{imm[15]},imm}                           IMMEXT(S58)
	S60= B_EX.In={16{imm[15]},imm}                              Path(S59,S49)
	S61= CtrlA_EX=1                                             Premise(F376)
	S62= [A_EX]=FU(a)                                           A_EX-Write(S56,S61)
	S63= CtrlB_EX=1                                             Premise(F379)
	S64= [B_EX]={16{imm[15]},imm}                               B_EX-Write(S60,S63)
	S65= CtrlPC=0                                               Premise(F382)
	S66= CtrlPCInc=0                                            Premise(F383)
	S67= PC[Out]=addr+4                                         PC-Hold(S39,S65,S66)
	S68= CtrlICache=0                                           Premise(F388)
	S69= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S41,S68)

EX	S70= A_EX.Out=FU(a)                                         A_EX-Out(S62)
	S71= B_EX.Out={16{imm[15]},imm}                             B_EX-Out(S64)
	S72= A_EX.Out=>CMPU.A                                       Premise(F411)
	S73= CMPU.A=FU(a)                                           Path(S70,S72)
	S74= B_EX.Out=>CMPU.B                                       Premise(F412)
	S75= CMPU.B={16{imm[15]},imm}                               Path(S71,S74)
	S76= CMPU.zero=CompareS(FU(a),{16{imm[15]},imm})            CMPU-CMPS(S73,S75)
	S77= CMPU.zero=>ConditionReg_MEM.In                         Premise(F448)
	S78= ConditionReg_MEM.In=CompareS(FU(a),{16{imm[15]},imm})  Path(S76,S77)
	S79= CtrlPC=0                                               Premise(F518)
	S80= CtrlPCInc=0                                            Premise(F519)
	S81= PC[Out]=addr+4                                         PC-Hold(S67,S79,S80)
	S82= CtrlICache=0                                           Premise(F524)
	S83= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S69,S82)
	S84= CtrlConditionReg_MEM=1                                 Premise(F526)
	S85= [ConditionReg_MEM]=CompareS(FU(a),{16{imm[15]},imm})   ConditionReg_MEM-Write(S78,S84)

MEM	S86= PC.Out=addr+4                                          PC-Out(S81)
	S87= ConditionReg_MEM.Out=CompareS(FU(a),{16{imm[15]},imm}) ConditionReg_MEM-Out(S85)
	S88= PC.Out=>CP0.EPCIn                                      Premise(F549)
	S89= CP0.EPCIn=addr+4                                       Path(S86,S88)
	S90= CP0.ExCodeIn=5'h0d                                     Premise(F550)
	S91= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In            Premise(F582)
	S92= ConditionReg_DMMU1.In=CompareS(FU(a),{16{imm[15]},imm})Path(S87,S91)
	S93= CtrlEPCIn=1                                            Premise(F658)
	S94= CP0[EPC]=addr+4                                        CP0-Write-EPC(S89,S93)
	S95= CtrlExCodeIn=1                                         Premise(F659)
	S96= CP0[ExCode]=5'h0d                                      CP0-Write-ExCode(S90,S95)
	S97= CtrlICache=0                                           Premise(F660)
	S98= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S83,S97)
	S99= CtrlConditionReg_DMMU1=1                               Premise(F663)
	S100= [ConditionReg_DMMU1]=CompareS(FU(a),{16{imm[15]},imm})ConditionReg_DMMU1-Write(S92,S99)

DMMU1	S101= ConditionReg_DMMU1.Out=CompareS(FU(a),{16{imm[15]},imm})ConditionReg_DMMU1-Out(S100)
	S102= ConditionReg_DMMU1.Out=>ConditionReg_DMMU2.In         Premise(F718)
	S103= ConditionReg_DMMU2.In=CompareS(FU(a),{16{imm[15]},imm})Path(S101,S102)
	S104= CtrlCP0=0                                             Premise(F792)
	S105= CP0[EPC]=addr+4                                       CP0-Hold(S94,S104)
	S106= CP0[ExCode]=5'h0d                                     CP0-Hold(S96,S104)
	S107= CtrlICache=0                                          Premise(F795)
	S108= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S98,S107)
	S109= CtrlConditionReg_DMMU2=1                              Premise(F799)
	S110= [ConditionReg_DMMU2]=CompareS(FU(a),{16{imm[15]},imm})ConditionReg_DMMU2-Write(S103,S109)

DMMU2	S111= ConditionReg_DMMU2.Out=CompareS(FU(a),{16{imm[15]},imm})ConditionReg_DMMU2-Out(S110)
	S112= ConditionReg_DMMU2.Out=>ConditionReg_WB.In            Premise(F855)
	S113= ConditionReg_WB.In=CompareS(FU(a),{16{imm[15]},imm})  Path(S111,S112)
	S114= CtrlCP0=0                                             Premise(F927)
	S115= CP0[EPC]=addr+4                                       CP0-Hold(S105,S114)
	S116= CP0[ExCode]=5'h0d                                     CP0-Hold(S106,S114)
	S117= CtrlICache=0                                          Premise(F930)
	S118= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S108,S117)
	S119= CtrlConditionReg_WB=1                                 Premise(F935)
	S120= [ConditionReg_WB]=CompareS(FU(a),{16{imm[15]},imm})   ConditionReg_WB-Write(S113,S119)

WB	S121= CtrlCP0=0                                             Premise(F1062)
	S122= CP0[EPC]=addr+4                                       CP0-Hold(S115,S121)
	S123= CP0[ExCode]=5'h0d                                     CP0-Hold(S116,S121)
	S124= CtrlICache=0                                          Premise(F1065)
	S125= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S118,S124)
	S126= CtrlConditionReg_WB=0                                 Premise(F1070)
	S127= [ConditionReg_WB]=CompareS(FU(a),{16{imm[15]},imm})   ConditionReg_WB-Hold(S120,S126)

POST	S122= CP0[EPC]=addr+4                                       CP0-Hold(S115,S121)
	S123= CP0[ExCode]=5'h0d                                     CP0-Hold(S116,S121)
	S125= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S118,S124)
	S127= [ConditionReg_WB]=CompareS(FU(a),{16{imm[15]},imm})   ConditionReg_WB-Hold(S120,S126)

