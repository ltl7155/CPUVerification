
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rs,rt,code,50}                      Premise(F2)
	S3= ICache[addr]={0,rs,rt,code,50}                          Premise(F3)
	S4= GPR[rs]=a                                               Premise(F4)
	S5= GPR[rt]=b                                               Premise(F5)

IF	S6= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S7= PC.Out=addr                                             PC-Out(S1)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F6)
	S9= IMMU.PID=pid                                            Path(S6,S8)
	S10= PC.Out=>IMMU.IEA                                       Premise(F7)
	S11= IMMU.IEA=addr                                          Path(S7,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S11)
	S13= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S9,S11)
	S14= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S15= IAddrReg.In={pid,addr}                                 Path(S12,S14)
	S16= IMMU.Hit=>CU.IMMUHit                                   Premise(F9)
	S17= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S13,S16)
	S18= PC.Out=>ICache.IEA                                     Premise(F10)
	S19= ICache.IEA=addr                                        Path(S7,S18)
	S20= ICache.Hit=ICacheHit(addr)                             ICache-Search(S19)
	S21= ICache.Out={0,rs,rt,code,50}                           ICache-Search(S19,S3)
	S22= ICache.Out=>IR.In                                      Premise(F11)
	S23= IR.In={0,rs,rt,code,50}                                Path(S21,S22)
	S24= ICache.Out=>ICacheReg.In                               Premise(F12)
	S25= ICacheReg.In={0,rs,rt,code,50}                         Path(S21,S24)
	S26= ICache.Hit=>CU.ICacheHit                               Premise(F13)
	S27= CU.ICacheHit=ICacheHit(addr)                           Path(S20,S26)
	S28= CtrlASIDIn=0                                           Premise(F14)
	S29= CtrlCP0=0                                              Premise(F15)
	S30= CP0[ASID]=pid                                          CP0-Hold(S0,S29)
	S31= CtrlEPCIn=0                                            Premise(F16)
	S32= CtrlExCodeIn=0                                         Premise(F17)
	S33= CtrlIMMU=0                                             Premise(F18)
	S34= CtrlPC=0                                               Premise(F19)
	S35= CtrlPCInc=1                                            Premise(F20)
	S36= PC[Out]=addr+4                                         PC-Inc(S1,S34,S35)
	S37= PC[CIA]=addr                                           PC-Inc(S1,S34,S35)
	S38= CtrlIAddrReg=0                                         Premise(F21)
	S39= CtrlICache=0                                           Premise(F22)
	S40= ICache[addr]={0,rs,rt,code,50}                         ICache-Hold(S3,S39)
	S41= CtrlIR=1                                               Premise(F23)
	S42= [IR]={0,rs,rt,code,50}                                 IR-Write(S23,S41)
	S43= CtrlICacheReg=0                                        Premise(F24)
	S44= CtrlIMem=0                                             Premise(F25)
	S45= IMem[{pid,addr}]={0,rs,rt,code,50}                     IMem-Hold(S2,S44)
	S46= CtrlIRMux=0                                            Premise(F26)
	S47= CtrlGPR=0                                              Premise(F27)
	S48= GPR[rs]=a                                              GPR-Hold(S4,S47)
	S49= GPR[rt]=b                                              GPR-Hold(S5,S47)
	S50= CtrlA=0                                                Premise(F28)
	S51= CtrlB=0                                                Premise(F29)
	S52= CtrlConditionReg=0                                     Premise(F30)
	S53= CtrlPIDReg=0                                           Premise(F31)

ID	S54= CP0.ASID=pid                                           CP0-Read-ASID(S30)
	S55= PC.Out=addr+4                                          PC-Out(S36)
	S56= PC.CIA=addr                                            PC-Out(S37)
	S57= PC.CIA31_28=addr[31:28]                                PC-Out(S37)
	S58= IR.Out={0,rs,rt,code,50}                               IR-Out(S42)
	S59= IR.Out31_26=0                                          IR-Out(S42)
	S60= IR.Out25_21=rs                                         IR-Out(S42)
	S61= IR.Out20_16=rt                                         IR-Out(S42)
	S62= IR.Out15_6=code                                        IR-Out(S42)
	S63= IR.Out5_0=50                                           IR-Out(S42)
	S64= IR.Out31_26=>CU.Op                                     Premise(F50)
	S65= CU.Op=0                                                Path(S59,S64)
	S66= IR.Out25_21=>GPR.RReg1                                 Premise(F51)
	S67= GPR.RReg1=rs                                           Path(S60,S66)
	S68= GPR.Rdata1=a                                           GPR-Read(S67,S48)
	S69= IR.Out20_16=>GPR.RReg2                                 Premise(F52)
	S70= GPR.RReg2=rt                                           Path(S61,S69)
	S71= GPR.Rdata2=b                                           GPR-Read(S70,S49)
	S72= IR.Out5_0=>CU.IRFunc                                   Premise(F53)
	S73= CU.IRFunc=50                                           Path(S63,S72)
	S74= GPR.Rdata1=>A.In                                       Premise(F54)
	S75= A.In=a                                                 Path(S68,S74)
	S76= GPR.Rdata2=>B.In                                       Premise(F55)
	S77= B.In=b                                                 Path(S71,S76)
	S78= CtrlASIDIn=0                                           Premise(F56)
	S79= CtrlCP0=0                                              Premise(F57)
	S80= CP0[ASID]=pid                                          CP0-Hold(S30,S79)
	S81= CtrlEPCIn=0                                            Premise(F58)
	S82= CtrlExCodeIn=0                                         Premise(F59)
	S83= CtrlIMMU=0                                             Premise(F60)
	S84= CtrlPC=0                                               Premise(F61)
	S85= CtrlPCInc=0                                            Premise(F62)
	S86= PC[CIA]=addr                                           PC-Hold(S37,S85)
	S87= PC[Out]=addr+4                                         PC-Hold(S36,S84,S85)
	S88= CtrlIAddrReg=0                                         Premise(F63)
	S89= CtrlICache=0                                           Premise(F64)
	S90= ICache[addr]={0,rs,rt,code,50}                         ICache-Hold(S40,S89)
	S91= CtrlIR=0                                               Premise(F65)
	S92= [IR]={0,rs,rt,code,50}                                 IR-Hold(S42,S91)
	S93= CtrlICacheReg=0                                        Premise(F66)
	S94= CtrlIMem=0                                             Premise(F67)
	S95= IMem[{pid,addr}]={0,rs,rt,code,50}                     IMem-Hold(S45,S94)
	S96= CtrlIRMux=0                                            Premise(F68)
	S97= CtrlGPR=0                                              Premise(F69)
	S98= GPR[rs]=a                                              GPR-Hold(S48,S97)
	S99= GPR[rt]=b                                              GPR-Hold(S49,S97)
	S100= CtrlA=1                                               Premise(F70)
	S101= [A]=a                                                 A-Write(S75,S100)
	S102= CtrlB=1                                               Premise(F71)
	S103= [B]=b                                                 B-Write(S77,S102)
	S104= CtrlConditionReg=0                                    Premise(F72)
	S105= CtrlPIDReg=0                                          Premise(F73)

EX	S106= CP0.ASID=pid                                          CP0-Read-ASID(S80)
	S107= PC.CIA=addr                                           PC-Out(S86)
	S108= PC.CIA31_28=addr[31:28]                               PC-Out(S86)
	S109= PC.Out=addr+4                                         PC-Out(S87)
	S110= IR.Out={0,rs,rt,code,50}                              IR-Out(S92)
	S111= IR.Out31_26=0                                         IR-Out(S92)
	S112= IR.Out25_21=rs                                        IR-Out(S92)
	S113= IR.Out20_16=rt                                        IR-Out(S92)
	S114= IR.Out15_6=code                                       IR-Out(S92)
	S115= IR.Out5_0=50                                          IR-Out(S92)
	S116= A.Out=a                                               A-Out(S101)
	S117= A.Out1_0={a}[1:0]                                     A-Out(S101)
	S118= A.Out4_0={a}[4:0]                                     A-Out(S101)
	S119= B.Out=b                                               B-Out(S103)
	S120= B.Out1_0={b}[1:0]                                     B-Out(S103)
	S121= B.Out4_0={b}[4:0]                                     B-Out(S103)
	S122= A.Out=>CMPU.A                                         Premise(F74)
	S123= CMPU.A=a                                              Path(S116,S122)
	S124= B.Out=>CMPU.B                                         Premise(F75)
	S125= CMPU.B=b                                              Path(S119,S124)
	S126= CMPU.Func=6'b000011                                   Premise(F76)
	S127= CMPU.Out=CompareS(a,b)                                CMPU-CMPS(S123,S125)
	S128= CMPU.zero=CompareS(a,b)                               CMPU-CMPS(S123,S125)
	S129= CMPU.gt=CompareS(a,b)                                 CMPU-CMPS(S123,S125)
	S130= CMPU.lt=CompareS(a,b)                                 CMPU-CMPS(S123,S125)
	S131= CMPU.lt=>ConditionReg.In                              Premise(F77)
	S132= ConditionReg.In=CompareS(a,b)                         Path(S130,S131)
	S133= CtrlASIDIn=0                                          Premise(F78)
	S134= CtrlCP0=0                                             Premise(F79)
	S135= CP0[ASID]=pid                                         CP0-Hold(S80,S134)
	S136= CtrlEPCIn=0                                           Premise(F80)
	S137= CtrlExCodeIn=0                                        Premise(F81)
	S138= CtrlIMMU=0                                            Premise(F82)
	S139= CtrlPC=0                                              Premise(F83)
	S140= CtrlPCInc=0                                           Premise(F84)
	S141= PC[CIA]=addr                                          PC-Hold(S86,S140)
	S142= PC[Out]=addr+4                                        PC-Hold(S87,S139,S140)
	S143= CtrlIAddrReg=0                                        Premise(F85)
	S144= CtrlICache=0                                          Premise(F86)
	S145= ICache[addr]={0,rs,rt,code,50}                        ICache-Hold(S90,S144)
	S146= CtrlIR=0                                              Premise(F87)
	S147= [IR]={0,rs,rt,code,50}                                IR-Hold(S92,S146)
	S148= CtrlICacheReg=0                                       Premise(F88)
	S149= CtrlIMem=0                                            Premise(F89)
	S150= IMem[{pid,addr}]={0,rs,rt,code,50}                    IMem-Hold(S95,S149)
	S151= CtrlIRMux=0                                           Premise(F90)
	S152= CtrlGPR=0                                             Premise(F91)
	S153= GPR[rs]=a                                             GPR-Hold(S98,S152)
	S154= GPR[rt]=b                                             GPR-Hold(S99,S152)
	S155= CtrlA=0                                               Premise(F92)
	S156= [A]=a                                                 A-Hold(S101,S155)
	S157= CtrlB=0                                               Premise(F93)
	S158= [B]=b                                                 B-Hold(S103,S157)
	S159= CtrlConditionReg=1                                    Premise(F94)
	S160= [ConditionReg]=CompareS(a,b)                          ConditionReg-Write(S132,S159)
	S161= CtrlPIDReg=0                                          Premise(F95)

MEM	S162= CP0.ASID=pid                                          CP0-Read-ASID(S135)
	S163= PC.CIA=addr                                           PC-Out(S141)
	S164= PC.CIA31_28=addr[31:28]                               PC-Out(S141)
	S165= PC.Out=addr+4                                         PC-Out(S142)
	S166= IR.Out={0,rs,rt,code,50}                              IR-Out(S147)
	S167= IR.Out31_26=0                                         IR-Out(S147)
	S168= IR.Out25_21=rs                                        IR-Out(S147)
	S169= IR.Out20_16=rt                                        IR-Out(S147)
	S170= IR.Out15_6=code                                       IR-Out(S147)
	S171= IR.Out5_0=50                                          IR-Out(S147)
	S172= A.Out=a                                               A-Out(S156)
	S173= A.Out1_0={a}[1:0]                                     A-Out(S156)
	S174= A.Out4_0={a}[4:0]                                     A-Out(S156)
	S175= B.Out=b                                               B-Out(S158)
	S176= B.Out1_0={b}[1:0]                                     B-Out(S158)
	S177= B.Out4_0={b}[4:0]                                     B-Out(S158)
	S178= ConditionReg.Out=CompareS(a,b)                        ConditionReg-Out(S160)
	S179= ConditionReg.Out1_0={CompareS(a,b)}[1:0]              ConditionReg-Out(S160)
	S180= ConditionReg.Out4_0={CompareS(a,b)}[4:0]              ConditionReg-Out(S160)
	S181= PC.Out=>CP0.EPCIn                                     Premise(F96)
	S182= CP0.EPCIn=addr+4                                      Path(S165,S181)
	S183= CP0.ExCodeIn=5'h0d                                    Premise(F97)
	S184= CU.TrapAddr=>PC.In                                    Premise(F98)
	S185= CP0.ASID=>PIDReg.In                                   Premise(F99)
	S186= PIDReg.In=pid                                         Path(S162,S185)
	S187= ConditionReg.Out=>CU.lt                               Premise(F100)
	S188= CU.lt=CompareS(a,b)                                   Path(S178,S187)
	S189= CtrlASIDIn=0                                          Premise(F101)
	S190= CtrlCP0=0                                             Premise(F102)
	S191= CP0[ASID]=pid                                         CP0-Hold(S135,S190)
	S192= CtrlEPCIn=1                                           Premise(F103)
	S193= CP0[EPC]=addr+4                                       CP0-Write-EPC(S182,S192)
	S194= CtrlExCodeIn=1                                        Premise(F104)
	S195= CP0[ExCode]=5'h0d                                     CP0-Write-ExCode(S183,S194)
	S196= CtrlIMMU=0                                            Premise(F105)
	S197= CtrlPC=1                                              Premise(F106)
	S198= CtrlPCInc=0                                           Premise(F107)
	S199= PC[CIA]=addr                                          PC-Hold(S141,S198)
	S200= CtrlIAddrReg=0                                        Premise(F108)
	S201= CtrlICache=0                                          Premise(F109)
	S202= ICache[addr]={0,rs,rt,code,50}                        ICache-Hold(S145,S201)
	S203= CtrlIR=0                                              Premise(F110)
	S204= [IR]={0,rs,rt,code,50}                                IR-Hold(S147,S203)
	S205= CtrlICacheReg=0                                       Premise(F111)
	S206= CtrlIMem=0                                            Premise(F112)
	S207= IMem[{pid,addr}]={0,rs,rt,code,50}                    IMem-Hold(S150,S206)
	S208= CtrlIRMux=0                                           Premise(F113)
	S209= CtrlGPR=0                                             Premise(F114)
	S210= GPR[rs]=a                                             GPR-Hold(S153,S209)
	S211= GPR[rt]=b                                             GPR-Hold(S154,S209)
	S212= CtrlA=0                                               Premise(F115)
	S213= [A]=a                                                 A-Hold(S156,S212)
	S214= CtrlB=0                                               Premise(F116)
	S215= [B]=b                                                 B-Hold(S158,S214)
	S216= CtrlConditionReg=0                                    Premise(F117)
	S217= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S160,S216)
	S218= CtrlPIDReg=1                                          Premise(F118)
	S219= [PIDReg]=pid                                          PIDReg-Write(S186,S218)

MEM(DMMU1)	S220= CP0.ASID=pid                                          CP0-Read-ASID(S191)
	S221= CP0.EPC=addr+4                                        CP0-Read-EPC(S193)
	S222= PC.CIA=addr                                           PC-Out(S199)
	S223= PC.CIA31_28=addr[31:28]                               PC-Out(S199)
	S224= IR.Out={0,rs,rt,code,50}                              IR-Out(S204)
	S225= IR.Out31_26=0                                         IR-Out(S204)
	S226= IR.Out25_21=rs                                        IR-Out(S204)
	S227= IR.Out20_16=rt                                        IR-Out(S204)
	S228= IR.Out15_6=code                                       IR-Out(S204)
	S229= IR.Out5_0=50                                          IR-Out(S204)
	S230= A.Out=a                                               A-Out(S213)
	S231= A.Out1_0={a}[1:0]                                     A-Out(S213)
	S232= A.Out4_0={a}[4:0]                                     A-Out(S213)
	S233= B.Out=b                                               B-Out(S215)
	S234= B.Out1_0={b}[1:0]                                     B-Out(S215)
	S235= B.Out4_0={b}[4:0]                                     B-Out(S215)
	S236= ConditionReg.Out=CompareS(a,b)                        ConditionReg-Out(S217)
	S237= ConditionReg.Out1_0={CompareS(a,b)}[1:0]              ConditionReg-Out(S217)
	S238= ConditionReg.Out4_0={CompareS(a,b)}[4:0]              ConditionReg-Out(S217)
	S239= PIDReg.Out=pid                                        PIDReg-Out(S219)
	S240= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S219)
	S241= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S219)
	S242= CtrlASIDIn=0                                          Premise(F119)
	S243= CtrlCP0=0                                             Premise(F120)
	S244= CP0[ASID]=pid                                         CP0-Hold(S191,S243)
	S245= CP0[EPC]=addr+4                                       CP0-Hold(S193,S243)
	S246= CP0[ExCode]=5'h0d                                     CP0-Hold(S195,S243)
	S247= CtrlEPCIn=0                                           Premise(F121)
	S248= CtrlExCodeIn=0                                        Premise(F122)
	S249= CtrlIMMU=0                                            Premise(F123)
	S250= CtrlPC=0                                              Premise(F124)
	S251= CtrlPCInc=0                                           Premise(F125)
	S252= PC[CIA]=addr                                          PC-Hold(S199,S251)
	S253= CtrlIAddrReg=0                                        Premise(F126)
	S254= CtrlICache=0                                          Premise(F127)
	S255= ICache[addr]={0,rs,rt,code,50}                        ICache-Hold(S202,S254)
	S256= CtrlIR=0                                              Premise(F128)
	S257= [IR]={0,rs,rt,code,50}                                IR-Hold(S204,S256)
	S258= CtrlICacheReg=0                                       Premise(F129)
	S259= CtrlIMem=0                                            Premise(F130)
	S260= IMem[{pid,addr}]={0,rs,rt,code,50}                    IMem-Hold(S207,S259)
	S261= CtrlIRMux=0                                           Premise(F131)
	S262= CtrlGPR=0                                             Premise(F132)
	S263= GPR[rs]=a                                             GPR-Hold(S210,S262)
	S264= GPR[rt]=b                                             GPR-Hold(S211,S262)
	S265= CtrlA=0                                               Premise(F133)
	S266= [A]=a                                                 A-Hold(S213,S265)
	S267= CtrlB=0                                               Premise(F134)
	S268= [B]=b                                                 B-Hold(S215,S267)
	S269= CtrlConditionReg=0                                    Premise(F135)
	S270= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S217,S269)
	S271= CtrlPIDReg=0                                          Premise(F136)
	S272= [PIDReg]=pid                                          PIDReg-Hold(S219,S271)

MEM(DMMU2)	S273= CP0.ASID=pid                                          CP0-Read-ASID(S244)
	S274= CP0.EPC=addr+4                                        CP0-Read-EPC(S245)
	S275= PC.CIA=addr                                           PC-Out(S252)
	S276= PC.CIA31_28=addr[31:28]                               PC-Out(S252)
	S277= IR.Out={0,rs,rt,code,50}                              IR-Out(S257)
	S278= IR.Out31_26=0                                         IR-Out(S257)
	S279= IR.Out25_21=rs                                        IR-Out(S257)
	S280= IR.Out20_16=rt                                        IR-Out(S257)
	S281= IR.Out15_6=code                                       IR-Out(S257)
	S282= IR.Out5_0=50                                          IR-Out(S257)
	S283= A.Out=a                                               A-Out(S266)
	S284= A.Out1_0={a}[1:0]                                     A-Out(S266)
	S285= A.Out4_0={a}[4:0]                                     A-Out(S266)
	S286= B.Out=b                                               B-Out(S268)
	S287= B.Out1_0={b}[1:0]                                     B-Out(S268)
	S288= B.Out4_0={b}[4:0]                                     B-Out(S268)
	S289= ConditionReg.Out=CompareS(a,b)                        ConditionReg-Out(S270)
	S290= ConditionReg.Out1_0={CompareS(a,b)}[1:0]              ConditionReg-Out(S270)
	S291= ConditionReg.Out4_0={CompareS(a,b)}[4:0]              ConditionReg-Out(S270)
	S292= PIDReg.Out=pid                                        PIDReg-Out(S272)
	S293= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S272)
	S294= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S272)
	S295= CtrlASIDIn=0                                          Premise(F137)
	S296= CtrlCP0=0                                             Premise(F138)
	S297= CP0[ASID]=pid                                         CP0-Hold(S244,S296)
	S298= CP0[EPC]=addr+4                                       CP0-Hold(S245,S296)
	S299= CP0[ExCode]=5'h0d                                     CP0-Hold(S246,S296)
	S300= CtrlEPCIn=0                                           Premise(F139)
	S301= CtrlExCodeIn=0                                        Premise(F140)
	S302= CtrlIMMU=0                                            Premise(F141)
	S303= CtrlPC=0                                              Premise(F142)
	S304= CtrlPCInc=0                                           Premise(F143)
	S305= PC[CIA]=addr                                          PC-Hold(S252,S304)
	S306= CtrlIAddrReg=0                                        Premise(F144)
	S307= CtrlICache=0                                          Premise(F145)
	S308= ICache[addr]={0,rs,rt,code,50}                        ICache-Hold(S255,S307)
	S309= CtrlIR=0                                              Premise(F146)
	S310= [IR]={0,rs,rt,code,50}                                IR-Hold(S257,S309)
	S311= CtrlICacheReg=0                                       Premise(F147)
	S312= CtrlIMem=0                                            Premise(F148)
	S313= IMem[{pid,addr}]={0,rs,rt,code,50}                    IMem-Hold(S260,S312)
	S314= CtrlIRMux=0                                           Premise(F149)
	S315= CtrlGPR=0                                             Premise(F150)
	S316= GPR[rs]=a                                             GPR-Hold(S263,S315)
	S317= GPR[rt]=b                                             GPR-Hold(S264,S315)
	S318= CtrlA=0                                               Premise(F151)
	S319= [A]=a                                                 A-Hold(S266,S318)
	S320= CtrlB=0                                               Premise(F152)
	S321= [B]=b                                                 B-Hold(S268,S320)
	S322= CtrlConditionReg=0                                    Premise(F153)
	S323= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S270,S322)
	S324= CtrlPIDReg=0                                          Premise(F154)
	S325= [PIDReg]=pid                                          PIDReg-Hold(S272,S324)

WB	S326= CP0.ASID=pid                                          CP0-Read-ASID(S297)
	S327= CP0.EPC=addr+4                                        CP0-Read-EPC(S298)
	S328= PC.CIA=addr                                           PC-Out(S305)
	S329= PC.CIA31_28=addr[31:28]                               PC-Out(S305)
	S330= IR.Out={0,rs,rt,code,50}                              IR-Out(S310)
	S331= IR.Out31_26=0                                         IR-Out(S310)
	S332= IR.Out25_21=rs                                        IR-Out(S310)
	S333= IR.Out20_16=rt                                        IR-Out(S310)
	S334= IR.Out15_6=code                                       IR-Out(S310)
	S335= IR.Out5_0=50                                          IR-Out(S310)
	S336= A.Out=a                                               A-Out(S319)
	S337= A.Out1_0={a}[1:0]                                     A-Out(S319)
	S338= A.Out4_0={a}[4:0]                                     A-Out(S319)
	S339= B.Out=b                                               B-Out(S321)
	S340= B.Out1_0={b}[1:0]                                     B-Out(S321)
	S341= B.Out4_0={b}[4:0]                                     B-Out(S321)
	S342= ConditionReg.Out=CompareS(a,b)                        ConditionReg-Out(S323)
	S343= ConditionReg.Out1_0={CompareS(a,b)}[1:0]              ConditionReg-Out(S323)
	S344= ConditionReg.Out4_0={CompareS(a,b)}[4:0]              ConditionReg-Out(S323)
	S345= PIDReg.Out=pid                                        PIDReg-Out(S325)
	S346= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S325)
	S347= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S325)
	S348= CtrlASIDIn=0                                          Premise(F155)
	S349= CtrlCP0=0                                             Premise(F156)
	S350= CP0[ASID]=pid                                         CP0-Hold(S297,S349)
	S351= CP0[EPC]=addr+4                                       CP0-Hold(S298,S349)
	S352= CP0[ExCode]=5'h0d                                     CP0-Hold(S299,S349)
	S353= CtrlEPCIn=0                                           Premise(F157)
	S354= CtrlExCodeIn=0                                        Premise(F158)
	S355= CtrlIMMU=0                                            Premise(F159)
	S356= CtrlPC=0                                              Premise(F160)
	S357= CtrlPCInc=0                                           Premise(F161)
	S358= PC[CIA]=addr                                          PC-Hold(S305,S357)
	S359= CtrlIAddrReg=0                                        Premise(F162)
	S360= CtrlICache=0                                          Premise(F163)
	S361= ICache[addr]={0,rs,rt,code,50}                        ICache-Hold(S308,S360)
	S362= CtrlIR=0                                              Premise(F164)
	S363= [IR]={0,rs,rt,code,50}                                IR-Hold(S310,S362)
	S364= CtrlICacheReg=0                                       Premise(F165)
	S365= CtrlIMem=0                                            Premise(F166)
	S366= IMem[{pid,addr}]={0,rs,rt,code,50}                    IMem-Hold(S313,S365)
	S367= CtrlIRMux=0                                           Premise(F167)
	S368= CtrlGPR=0                                             Premise(F168)
	S369= GPR[rs]=a                                             GPR-Hold(S316,S368)
	S370= GPR[rt]=b                                             GPR-Hold(S317,S368)
	S371= CtrlA=0                                               Premise(F169)
	S372= [A]=a                                                 A-Hold(S319,S371)
	S373= CtrlB=0                                               Premise(F170)
	S374= [B]=b                                                 B-Hold(S321,S373)
	S375= CtrlConditionReg=0                                    Premise(F171)
	S376= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S323,S375)
	S377= CtrlPIDReg=0                                          Premise(F172)
	S378= [PIDReg]=pid                                          PIDReg-Hold(S325,S377)

POST	S350= CP0[ASID]=pid                                         CP0-Hold(S297,S349)
	S351= CP0[EPC]=addr+4                                       CP0-Hold(S298,S349)
	S352= CP0[ExCode]=5'h0d                                     CP0-Hold(S299,S349)
	S358= PC[CIA]=addr                                          PC-Hold(S305,S357)
	S361= ICache[addr]={0,rs,rt,code,50}                        ICache-Hold(S308,S360)
	S363= [IR]={0,rs,rt,code,50}                                IR-Hold(S310,S362)
	S366= IMem[{pid,addr}]={0,rs,rt,code,50}                    IMem-Hold(S313,S365)
	S369= GPR[rs]=a                                             GPR-Hold(S316,S368)
	S370= GPR[rt]=b                                             GPR-Hold(S317,S368)
	S372= [A]=a                                                 A-Hold(S319,S371)
	S374= [B]=b                                                 B-Hold(S321,S373)
	S376= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S323,S375)
	S378= [PIDReg]=pid                                          PIDReg-Hold(S325,S377)

