
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={8,rS,rT,SIMM}                         Premise(F2)
	S3= ICache[addr]={8,rS,rT,SIMM}                             Premise(F3)
	S4= GPR[rS]=a                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S8,S10)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S14= IAddrReg.In={pid,addr}                                 Path(S11,S13)
	S15= IMMU.Hit=>CU.IMMUHit                                   Premise(F8)
	S16= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S12,S15)
	S17= PC.Out=>ICache.IEA                                     Premise(F9)
	S18= ICache.IEA=addr                                        Path(S6,S17)
	S19= ICache.Hit=ICacheHit(addr)                             ICache-Search(S18)
	S20= ICache.Out={8,rS,rT,SIMM}                              ICache-Search(S18,S3)
	S21= ICache.Out=>IR.In                                      Premise(F10)
	S22= IR.In={8,rS,rT,SIMM}                                   Path(S20,S21)
	S23= ICache.Out=>ICacheReg.In                               Premise(F11)
	S24= ICacheReg.In={8,rS,rT,SIMM}                            Path(S20,S23)
	S25= ICache.Hit=>CU.ICacheHit                               Premise(F12)
	S26= CU.ICacheHit=ICacheHit(addr)                           Path(S19,S25)
	S27= CtrlASIDIn=0                                           Premise(F13)
	S28= CtrlCP0=0                                              Premise(F14)
	S29= CP0[ASID]=pid                                          CP0-Hold(S0,S28)
	S30= CtrlEPCIn=0                                            Premise(F15)
	S31= CtrlExCodeIn=0                                         Premise(F16)
	S32= CtrlIMMU=0                                             Premise(F17)
	S33= CtrlPC=0                                               Premise(F18)
	S34= CtrlPCInc=1                                            Premise(F19)
	S35= PC[Out]=addr+4                                         PC-Inc(S1,S33,S34)
	S36= PC[CIA]=addr                                           PC-Inc(S1,S33,S34)
	S37= CtrlIAddrReg=0                                         Premise(F20)
	S38= CtrlICache=0                                           Premise(F21)
	S39= ICache[addr]={8,rS,rT,SIMM}                            ICache-Hold(S3,S38)
	S40= CtrlIR=1                                               Premise(F22)
	S41= [IR]={8,rS,rT,SIMM}                                    IR-Write(S22,S40)
	S42= CtrlICacheReg=0                                        Premise(F23)
	S43= CtrlIMem=0                                             Premise(F24)
	S44= IMem[{pid,addr}]={8,rS,rT,SIMM}                        IMem-Hold(S2,S43)
	S45= CtrlIRMux=0                                            Premise(F25)
	S46= CtrlGPR=0                                              Premise(F26)
	S47= GPR[rS]=a                                              GPR-Hold(S4,S46)
	S48= CtrlA=0                                                Premise(F27)
	S49= CtrlB=0                                                Premise(F28)
	S50= CtrlALUOut=0                                           Premise(F29)
	S51= CtrlOVReg=0                                            Premise(F30)

ID	S52= CP0.ASID=pid                                           CP0-Read-ASID(S29)
	S53= PC.Out=addr+4                                          PC-Out(S35)
	S54= PC.CIA=addr                                            PC-Out(S36)
	S55= PC.CIA31_28=addr[31:28]                                PC-Out(S36)
	S56= IR.Out={8,rS,rT,SIMM}                                  IR-Out(S41)
	S57= IR.Out31_26=8                                          IR-Out(S41)
	S58= IR.Out25_21=rS                                         IR-Out(S41)
	S59= IR.Out20_16=rT                                         IR-Out(S41)
	S60= IR.Out15_0=SIMM                                        IR-Out(S41)
	S61= IR.Out31_26=>CU.Op                                     Premise(F49)
	S62= CU.Op=8                                                Path(S57,S61)
	S63= CU.Func=alu_subf                                       CU(S62)
	S64= IR.Out25_21=>GPR.RReg1                                 Premise(F50)
	S65= GPR.RReg1=rS                                           Path(S58,S64)
	S66= GPR.Rdata1=a                                           GPR-Read(S65,S47)
	S67= IR.Out15_0=>IMMEXT.In                                  Premise(F51)
	S68= IMMEXT.In=SIMM                                         Path(S60,S67)
	S69= IMMEXT.Out={16{SIMM[15]},SIMM}                         IMMEXT(S68)
	S70= GPR.Rdata1=>A.In                                       Premise(F52)
	S71= A.In=a                                                 Path(S66,S70)
	S72= IMMEXT.Out=>B.In                                       Premise(F53)
	S73= B.In={16{SIMM[15]},SIMM}                               Path(S69,S72)
	S74= CtrlASIDIn=0                                           Premise(F54)
	S75= CtrlCP0=0                                              Premise(F55)
	S76= CP0[ASID]=pid                                          CP0-Hold(S29,S75)
	S77= CtrlEPCIn=0                                            Premise(F56)
	S78= CtrlExCodeIn=0                                         Premise(F57)
	S79= CtrlIMMU=0                                             Premise(F58)
	S80= CtrlPC=0                                               Premise(F59)
	S81= CtrlPCInc=0                                            Premise(F60)
	S82= PC[CIA]=addr                                           PC-Hold(S36,S81)
	S83= PC[Out]=addr+4                                         PC-Hold(S35,S80,S81)
	S84= CtrlIAddrReg=0                                         Premise(F61)
	S85= CtrlICache=0                                           Premise(F62)
	S86= ICache[addr]={8,rS,rT,SIMM}                            ICache-Hold(S39,S85)
	S87= CtrlIR=0                                               Premise(F63)
	S88= [IR]={8,rS,rT,SIMM}                                    IR-Hold(S41,S87)
	S89= CtrlICacheReg=0                                        Premise(F64)
	S90= CtrlIMem=0                                             Premise(F65)
	S91= IMem[{pid,addr}]={8,rS,rT,SIMM}                        IMem-Hold(S44,S90)
	S92= CtrlIRMux=0                                            Premise(F66)
	S93= CtrlGPR=0                                              Premise(F67)
	S94= GPR[rS]=a                                              GPR-Hold(S47,S93)
	S95= CtrlA=1                                                Premise(F68)
	S96= [A]=a                                                  A-Write(S71,S95)
	S97= CtrlB=1                                                Premise(F69)
	S98= [B]={16{SIMM[15]},SIMM}                                B-Write(S73,S97)
	S99= CtrlALUOut=0                                           Premise(F70)
	S100= CtrlOVReg=0                                           Premise(F71)

EX	S101= CP0.ASID=pid                                          CP0-Read-ASID(S76)
	S102= PC.CIA=addr                                           PC-Out(S82)
	S103= PC.CIA31_28=addr[31:28]                               PC-Out(S82)
	S104= PC.Out=addr+4                                         PC-Out(S83)
	S105= IR.Out={8,rS,rT,SIMM}                                 IR-Out(S88)
	S106= IR.Out31_26=8                                         IR-Out(S88)
	S107= IR.Out25_21=rS                                        IR-Out(S88)
	S108= IR.Out20_16=rT                                        IR-Out(S88)
	S109= IR.Out15_0=SIMM                                       IR-Out(S88)
	S110= A.Out=a                                               A-Out(S96)
	S111= A.Out1_0={a}[1:0]                                     A-Out(S96)
	S112= A.Out4_0={a}[4:0]                                     A-Out(S96)
	S113= B.Out={16{SIMM[15]},SIMM}                             B-Out(S98)
	S114= B.Out1_0={{16{SIMM[15]},SIMM}}[1:0]                   B-Out(S98)
	S115= B.Out4_0={{16{SIMM[15]},SIMM}}[4:0]                   B-Out(S98)
	S116= A.Out=>ALU.A                                          Premise(F72)
	S117= ALU.A=a                                               Path(S110,S116)
	S118= B.Out=>ALU.B                                          Premise(F73)
	S119= ALU.B={16{SIMM[15]},SIMM}                             Path(S113,S118)
	S120= ALU.Func=6'b000010                                    Premise(F74)
	S121= ALU.Out=a+{16{SIMM[15]},SIMM}                         ALU(S117,S119)
	S122= ALU.Out1_0={a+{16{SIMM[15]},SIMM}}[1:0]               ALU(S117,S119)
	S123= ALU.CMP=Compare0(a+{16{SIMM[15]},SIMM})               ALU(S117,S119)
	S124= ALU.OV=OverFlow(a+{16{SIMM[15]},SIMM})                ALU(S117,S119)
	S125= ALU.CA=Carry(a+{16{SIMM[15]},SIMM})                   ALU(S117,S119)
	S126= ALU.Out=>ALUOut.In                                    Premise(F75)
	S127= ALUOut.In=a+{16{SIMM[15]},SIMM}                       Path(S121,S126)
	S128= ALU.OV=>OVReg.In                                      Premise(F76)
	S129= OVReg.In=OverFlow(a+{16{SIMM[15]},SIMM})              Path(S124,S128)
	S130= CtrlASIDIn=0                                          Premise(F77)
	S131= CtrlCP0=0                                             Premise(F78)
	S132= CP0[ASID]=pid                                         CP0-Hold(S76,S131)
	S133= CtrlEPCIn=0                                           Premise(F79)
	S134= CtrlExCodeIn=0                                        Premise(F80)
	S135= CtrlIMMU=0                                            Premise(F81)
	S136= CtrlPC=0                                              Premise(F82)
	S137= CtrlPCInc=0                                           Premise(F83)
	S138= PC[CIA]=addr                                          PC-Hold(S82,S137)
	S139= PC[Out]=addr+4                                        PC-Hold(S83,S136,S137)
	S140= CtrlIAddrReg=0                                        Premise(F84)
	S141= CtrlICache=0                                          Premise(F85)
	S142= ICache[addr]={8,rS,rT,SIMM}                           ICache-Hold(S86,S141)
	S143= CtrlIR=0                                              Premise(F86)
	S144= [IR]={8,rS,rT,SIMM}                                   IR-Hold(S88,S143)
	S145= CtrlICacheReg=0                                       Premise(F87)
	S146= CtrlIMem=0                                            Premise(F88)
	S147= IMem[{pid,addr}]={8,rS,rT,SIMM}                       IMem-Hold(S91,S146)
	S148= CtrlIRMux=0                                           Premise(F89)
	S149= CtrlGPR=0                                             Premise(F90)
	S150= GPR[rS]=a                                             GPR-Hold(S94,S149)
	S151= CtrlA=0                                               Premise(F91)
	S152= [A]=a                                                 A-Hold(S96,S151)
	S153= CtrlB=0                                               Premise(F92)
	S154= [B]={16{SIMM[15]},SIMM}                               B-Hold(S98,S153)
	S155= CtrlALUOut=1                                          Premise(F93)
	S156= [ALUOut]=a+{16{SIMM[15]},SIMM}                        ALUOut-Write(S127,S155)
	S157= CtrlOVReg=1                                           Premise(F94)
	S158= [OVReg]=OverFlow(a+{16{SIMM[15]},SIMM})               OVReg-Write(S129,S157)

MEM	S159= CP0.ASID=pid                                          CP0-Read-ASID(S132)
	S160= PC.CIA=addr                                           PC-Out(S138)
	S161= PC.CIA31_28=addr[31:28]                               PC-Out(S138)
	S162= PC.Out=addr+4                                         PC-Out(S139)
	S163= IR.Out={8,rS,rT,SIMM}                                 IR-Out(S144)
	S164= IR.Out31_26=8                                         IR-Out(S144)
	S165= IR.Out25_21=rS                                        IR-Out(S144)
	S166= IR.Out20_16=rT                                        IR-Out(S144)
	S167= IR.Out15_0=SIMM                                       IR-Out(S144)
	S168= A.Out=a                                               A-Out(S152)
	S169= A.Out1_0={a}[1:0]                                     A-Out(S152)
	S170= A.Out4_0={a}[4:0]                                     A-Out(S152)
	S171= B.Out={16{SIMM[15]},SIMM}                             B-Out(S154)
	S172= B.Out1_0={{16{SIMM[15]},SIMM}}[1:0]                   B-Out(S154)
	S173= B.Out4_0={{16{SIMM[15]},SIMM}}[4:0]                   B-Out(S154)
	S174= ALUOut.Out=a+{16{SIMM[15]},SIMM}                      ALUOut-Out(S156)
	S175= ALUOut.Out1_0={a+{16{SIMM[15]},SIMM}}[1:0]            ALUOut-Out(S156)
	S176= ALUOut.Out4_0={a+{16{SIMM[15]},SIMM}}[4:0]            ALUOut-Out(S156)
	S177= OVReg.Out=OverFlow(a+{16{SIMM[15]},SIMM})             OVReg-Out(S158)
	S178= OVReg.Out1_0={OverFlow(a+{16{SIMM[15]},SIMM})}[1:0]   OVReg-Out(S158)
	S179= OVReg.Out4_0={OverFlow(a+{16{SIMM[15]},SIMM})}[4:0]   OVReg-Out(S158)
	S180= CtrlASIDIn=0                                          Premise(F95)
	S181= CtrlCP0=0                                             Premise(F96)
	S182= CP0[ASID]=pid                                         CP0-Hold(S132,S181)
	S183= CtrlEPCIn=0                                           Premise(F97)
	S184= CtrlExCodeIn=0                                        Premise(F98)
	S185= CtrlIMMU=0                                            Premise(F99)
	S186= CtrlPC=0                                              Premise(F100)
	S187= CtrlPCInc=0                                           Premise(F101)
	S188= PC[CIA]=addr                                          PC-Hold(S138,S187)
	S189= PC[Out]=addr+4                                        PC-Hold(S139,S186,S187)
	S190= CtrlIAddrReg=0                                        Premise(F102)
	S191= CtrlICache=0                                          Premise(F103)
	S192= ICache[addr]={8,rS,rT,SIMM}                           ICache-Hold(S142,S191)
	S193= CtrlIR=0                                              Premise(F104)
	S194= [IR]={8,rS,rT,SIMM}                                   IR-Hold(S144,S193)
	S195= CtrlICacheReg=0                                       Premise(F105)
	S196= CtrlIMem=0                                            Premise(F106)
	S197= IMem[{pid,addr}]={8,rS,rT,SIMM}                       IMem-Hold(S147,S196)
	S198= CtrlIRMux=0                                           Premise(F107)
	S199= CtrlGPR=0                                             Premise(F108)
	S200= GPR[rS]=a                                             GPR-Hold(S150,S199)
	S201= CtrlA=0                                               Premise(F109)
	S202= [A]=a                                                 A-Hold(S152,S201)
	S203= CtrlB=0                                               Premise(F110)
	S204= [B]={16{SIMM[15]},SIMM}                               B-Hold(S154,S203)
	S205= CtrlALUOut=0                                          Premise(F111)
	S206= [ALUOut]=a+{16{SIMM[15]},SIMM}                        ALUOut-Hold(S156,S205)
	S207= CtrlOVReg=0                                           Premise(F112)
	S208= [OVReg]=OverFlow(a+{16{SIMM[15]},SIMM})               OVReg-Hold(S158,S207)

WB	S209= CP0.ASID=pid                                          CP0-Read-ASID(S182)
	S210= PC.CIA=addr                                           PC-Out(S188)
	S211= PC.CIA31_28=addr[31:28]                               PC-Out(S188)
	S212= PC.Out=addr+4                                         PC-Out(S189)
	S213= IR.Out={8,rS,rT,SIMM}                                 IR-Out(S194)
	S214= IR.Out31_26=8                                         IR-Out(S194)
	S215= IR.Out25_21=rS                                        IR-Out(S194)
	S216= IR.Out20_16=rT                                        IR-Out(S194)
	S217= IR.Out15_0=SIMM                                       IR-Out(S194)
	S218= A.Out=a                                               A-Out(S202)
	S219= A.Out1_0={a}[1:0]                                     A-Out(S202)
	S220= A.Out4_0={a}[4:0]                                     A-Out(S202)
	S221= B.Out={16{SIMM[15]},SIMM}                             B-Out(S204)
	S222= B.Out1_0={{16{SIMM[15]},SIMM}}[1:0]                   B-Out(S204)
	S223= B.Out4_0={{16{SIMM[15]},SIMM}}[4:0]                   B-Out(S204)
	S224= ALUOut.Out=a+{16{SIMM[15]},SIMM}                      ALUOut-Out(S206)
	S225= ALUOut.Out1_0={a+{16{SIMM[15]},SIMM}}[1:0]            ALUOut-Out(S206)
	S226= ALUOut.Out4_0={a+{16{SIMM[15]},SIMM}}[4:0]            ALUOut-Out(S206)
	S227= OVReg.Out=OverFlow(a+{16{SIMM[15]},SIMM})             OVReg-Out(S208)
	S228= OVReg.Out1_0={OverFlow(a+{16{SIMM[15]},SIMM})}[1:0]   OVReg-Out(S208)
	S229= OVReg.Out4_0={OverFlow(a+{16{SIMM[15]},SIMM})}[4:0]   OVReg-Out(S208)
	S230= IR.Out20_16=>GPR.WReg                                 Premise(F149)
	S231= GPR.WReg=rT                                           Path(S216,S230)
	S232= ALUOut.Out=>GPR.WData                                 Premise(F150)
	S233= GPR.WData=a+{16{SIMM[15]},SIMM}                       Path(S224,S232)
	S234= OVReg.Out=>CU.OV                                      Premise(F151)
	S235= CU.OV=OverFlow(a+{16{SIMM[15]},SIMM})                 Path(S227,S234)
	S236= CtrlASIDIn=0                                          Premise(F152)
	S237= CtrlCP0=0                                             Premise(F153)
	S238= CP0[ASID]=pid                                         CP0-Hold(S182,S237)
	S239= CtrlEPCIn=0                                           Premise(F154)
	S240= CtrlExCodeIn=0                                        Premise(F155)
	S241= CtrlIMMU=0                                            Premise(F156)
	S242= CtrlPC=0                                              Premise(F157)
	S243= CtrlPCInc=0                                           Premise(F158)
	S244= PC[CIA]=addr                                          PC-Hold(S188,S243)
	S245= PC[Out]=addr+4                                        PC-Hold(S189,S242,S243)
	S246= CtrlIAddrReg=0                                        Premise(F159)
	S247= CtrlICache=0                                          Premise(F160)
	S248= ICache[addr]={8,rS,rT,SIMM}                           ICache-Hold(S192,S247)
	S249= CtrlIR=0                                              Premise(F161)
	S250= [IR]={8,rS,rT,SIMM}                                   IR-Hold(S194,S249)
	S251= CtrlICacheReg=0                                       Premise(F162)
	S252= CtrlIMem=0                                            Premise(F163)
	S253= IMem[{pid,addr}]={8,rS,rT,SIMM}                       IMem-Hold(S197,S252)
	S254= CtrlIRMux=0                                           Premise(F164)
	S255= CtrlGPR=0                                             Premise(F165)
	S256= GPR[rS]=a                                             GPR-Hold(S200,S255)
	S257= CtrlA=0                                               Premise(F166)
	S258= [A]=a                                                 A-Hold(S202,S257)
	S259= CtrlB=0                                               Premise(F167)
	S260= [B]={16{SIMM[15]},SIMM}                               B-Hold(S204,S259)
	S261= CtrlALUOut=0                                          Premise(F168)
	S262= [ALUOut]=a+{16{SIMM[15]},SIMM}                        ALUOut-Hold(S206,S261)
	S263= CtrlOVReg=0                                           Premise(F169)
	S264= [OVReg]=OverFlow(a+{16{SIMM[15]},SIMM})               OVReg-Hold(S208,S263)

POST	S238= CP0[ASID]=pid                                         CP0-Hold(S182,S237)
	S244= PC[CIA]=addr                                          PC-Hold(S188,S243)
	S245= PC[Out]=addr+4                                        PC-Hold(S189,S242,S243)
	S248= ICache[addr]={8,rS,rT,SIMM}                           ICache-Hold(S192,S247)
	S250= [IR]={8,rS,rT,SIMM}                                   IR-Hold(S194,S249)
	S253= IMem[{pid,addr}]={8,rS,rT,SIMM}                       IMem-Hold(S197,S252)
	S256= GPR[rS]=a                                             GPR-Hold(S200,S255)
	S258= [A]=a                                                 A-Hold(S202,S257)
	S260= [B]={16{SIMM[15]},SIMM}                               B-Hold(S204,S259)
	S262= [ALUOut]=a+{16{SIMM[15]},SIMM}                        ALUOut-Hold(S206,S261)
	S264= [OVReg]=OverFlow(a+{16{SIMM[15]},SIMM})               OVReg-Hold(S208,S263)

