
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={28,rS,rT,0,0,5}                       Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)
	S4= GPR[rT]=b                                               Premise(F4)
	S5= [Lo]=lo                                                 Premise(F5)
	S6= [Hi]=hi                                                 Premise(F6)

IF	S7= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S8= PC.Out=addr                                             PC-Out(S1)
	S9= PC.Out=>IMem.RAddr                                      Premise(F7)
	S10= IMem.RAddr=addr                                        Path(S8,S9)
	S11= CP0.ASID=>IMem.ASID                                    Premise(F8)
	S12= IMem.ASID=pid                                          Path(S7,S11)
	S13= IMem.Out={28,rS,rT,0,0,5}                              IMem-Read(S12,S10,S2)
	S14= IMem.Out=>IR.In                                        Premise(F9)
	S15= IR.In={28,rS,rT,0,0,5}                                 Path(S13,S14)
	S16= CtrlPC=0                                               Premise(F10)
	S17= CtrlPCInc=1                                            Premise(F11)
	S18= PC[Out]=addr+4                                         PC-Inc(S1,S16,S17)
	S19= CtrlIR=1                                               Premise(F17)
	S20= [IR]={28,rS,rT,0,0,5}                                  IR-Write(S15,S19)
	S21= CtrlGPR=0                                              Premise(F18)
	S22= GPR[rS]=a                                              GPR-Hold(S3,S21)
	S23= GPR[rT]=b                                              GPR-Hold(S4,S21)
	S24= CtrlHi=0                                               Premise(F21)
	S25= [Hi]=hi                                                Hi-Hold(S6,S24)
	S26= CtrlLo=0                                               Premise(F22)
	S27= [Lo]=lo                                                Lo-Hold(S5,S26)

ID	S28= IR.Out25_21=rS                                         IR-Out(S20)
	S29= IR.Out20_16=rT                                         IR-Out(S20)
	S30= IR.Out25_21=>GPR.RReg1                                 Premise(F24)
	S31= GPR.RReg1=rS                                           Path(S28,S30)
	S32= GPR.Rdata1=a                                           GPR-Read(S31,S22)
	S33= IR.Out20_16=>GPR.RReg2                                 Premise(F25)
	S34= GPR.RReg2=rT                                           Path(S29,S33)
	S35= GPR.Rdata2=b                                           GPR-Read(S34,S23)
	S36= GPR.Rdata1=>A.In                                       Premise(F27)
	S37= A.In=a                                                 Path(S32,S36)
	S38= GPR.Rdata2=>B.In                                       Premise(F28)
	S39= B.In=b                                                 Path(S35,S38)
	S40= CtrlPC=0                                               Premise(F29)
	S41= CtrlPCInc=0                                            Premise(F30)
	S42= PC[Out]=addr+4                                         PC-Hold(S18,S40,S41)
	S43= CtrlA=1                                                Premise(F38)
	S44= [A]=a                                                  A-Write(S37,S43)
	S45= CtrlB=1                                                Premise(F39)
	S46= [B]=b                                                  B-Write(S39,S45)
	S47= CtrlHi=0                                               Premise(F40)
	S48= [Hi]=hi                                                Hi-Hold(S25,S47)
	S49= CtrlLo=0                                               Premise(F41)
	S50= [Lo]=lo                                                Lo-Hold(S27,S49)

EX	S51= A.Out=a                                                A-Out(S44)
	S52= B.Out=b                                                B-Out(S46)
	S53= Hi.Out=hi                                              Hi-Out(S48)
	S54= Lo.Out=lo                                              Lo-Out(S50)
	S55= Hi.Out=>MDU.Hi                                         Premise(F42)
	S56= MDU.Hi=hi                                              Path(S53,S55)
	S57= Lo.Out=>MDU.Lo                                         Premise(F43)
	S58= MDU.Lo=lo                                              Path(S54,S57)
	S59= A.Out=>MDU.A                                           Premise(F44)
	S60= MDU.A=a                                                Path(S51,S59)
	S61= B.Out=>MDU.B                                           Premise(F45)
	S62= MDU.B=b                                                Path(S52,S61)
	S63= MDU.lo=({hi,lo}-a*b)[31:0]                             MDU(S60,S62,S56,S58)
	S64= MDU.hi=({hi,lo}-a*b)[63:32]                            MDU(S60,S62,S56,S58)
	S65= MDU.hi=>Hi.In                                          Premise(F47)
	S66= Hi.In=({hi,lo}-a*b)[63:32]                             Path(S64,S65)
	S67= MDU.lo=>Lo.In                                          Premise(F48)
	S68= Lo.In=({hi,lo}-a*b)[31:0]                              Path(S63,S67)
	S69= CtrlPC=0                                               Premise(F49)
	S70= CtrlPCInc=0                                            Premise(F50)
	S71= PC[Out]=addr+4                                         PC-Hold(S42,S69,S70)
	S72= CtrlHi=1                                               Premise(F60)
	S73= [Hi]=({hi,lo}-a*b)[63:32]                              Hi-Write(S66,S72)
	S74= CtrlLo=1                                               Premise(F61)
	S75= [Lo]=({hi,lo}-a*b)[31:0]                               Lo-Write(S68,S74)

MEM	S76= CtrlPC=0                                               Premise(F62)
	S77= CtrlPCInc=0                                            Premise(F63)
	S78= PC[Out]=addr+4                                         PC-Hold(S71,S76,S77)
	S79= CtrlHi=0                                               Premise(F73)
	S80= [Hi]=({hi,lo}-a*b)[63:32]                              Hi-Hold(S73,S79)
	S81= CtrlLo=0                                               Premise(F74)
	S82= [Lo]=({hi,lo}-a*b)[31:0]                               Lo-Hold(S75,S81)

WB	S83= CtrlPC=0                                               Premise(F75)
	S84= CtrlPCInc=0                                            Premise(F76)
	S85= PC[Out]=addr+4                                         PC-Hold(S78,S83,S84)
	S86= CtrlHi=0                                               Premise(F86)
	S87= [Hi]=({hi,lo}-a*b)[63:32]                              Hi-Hold(S80,S86)
	S88= CtrlLo=0                                               Premise(F87)
	S89= [Lo]=({hi,lo}-a*b)[31:0]                               Lo-Hold(S82,S88)

POST	S85= PC[Out]=addr+4                                         PC-Hold(S78,S83,S84)
	S87= [Hi]=({hi,lo}-a*b)[63:32]                              Hi-Hold(S80,S86)
	S89= [Lo]=({hi,lo}-a*b)[31:0]                               Lo-Hold(S82,S88)

