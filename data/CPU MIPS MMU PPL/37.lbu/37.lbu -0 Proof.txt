
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={36,rS,rT,offset}                      Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= IMMU.Addr=>IAddrReg.In                                  Premise(F81)
	S6= PC.Out=>IMMU.IEA                                        Premise(F87)
	S7= IMMU.IEA=addr                                           Path(S4,S6)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F88)
	S9= IMMU.PID=pid                                            Path(S3,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S7)
	S11= IAddrReg.In={pid,addr}                                 Path(S10,S5)
	S12= CtrlCP0=0                                              Premise(F150)
	S13= CP0[ASID]=pid                                          CP0-Hold(S0,S12)
	S14= CtrlIAddrReg=1                                         Premise(F164)
	S15= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S11,S14)
	S16= CtrlPC=0                                               Premise(F165)
	S17= CtrlPCInc=0                                            Premise(F166)
	S18= PC[Out]=addr                                           PC-Hold(S1,S16,S17)
	S19= CtrlIMem=0                                             Premise(F167)
	S20= IMem[{pid,addr}]={36,rS,rT,offset}                     IMem-Hold(S2,S19)
	S21= GPR[rS]=base                                           Premise(F170)

IMMU	S22= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S15)
	S23= PC.Out=addr                                            PC-Out(S18)
	S24= PC.Out=>ICache.IEA                                     Premise(F250)
	S25= ICache.IEA=addr                                        Path(S23,S24)
	S26= IMem.MEM8WordOut=>ICache.WData                         Premise(F252)
	S27= IAddrReg.Out=>IMem.RAddr                               Premise(F257)
	S28= IMem.RAddr={pid,addr}                                  Path(S22,S27)
	S29= IMem.Out={36,rS,rT,offset}                             IMem-Read(S28,S20)
	S30= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S28,S20)
	S31= ICache.WData=IMemGet8Word({pid,addr})                  Path(S30,S26)
	S32= IMem.Out=>IRMux.MemData                                Premise(F260)
	S33= IRMux.MemData={36,rS,rT,offset}                        Path(S29,S32)
	S34= IRMux.Out={36,rS,rT,offset}                            IRMux-Select2(S33)
	S35= IRMux.Out=>IR_ID.In                                    Premise(F266)
	S36= IR_ID.In={36,rS,rT,offset}                             Path(S34,S35)
	S37= CtrlICache=1                                           Premise(F307)
	S38= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S25,S31,S37)
	S39= CtrlCP0=0                                              Premise(F318)
	S40= CP0[ASID]=pid                                          CP0-Hold(S13,S39)
	S41= CtrlIR_ID=1                                            Premise(F327)
	S42= [IR_ID]={36,rS,rT,offset}                              IR_ID-Write(S36,S41)
	S43= CtrlGPR=0                                              Premise(F331)
	S44= GPR[rS]=base                                           GPR-Hold(S21,S43)
	S45= CtrlPC=0                                               Premise(F333)
	S46= CtrlPCInc=1                                            Premise(F334)
	S47= PC[Out]=addr+4                                         PC-Inc(S18,S45,S46)

ID	S48= IR_ID.Out={36,rS,rT,offset}                            IR-Out(S42)
	S49= IR_ID.Out25_21=rS                                      IR-Out(S42)
	S50= IR_ID.Out15_0=offset                                   IR-Out(S42)
	S51= FU.OutID1=>A_EX.In                                     Premise(F344)
	S52= IMMEXT.Out=>B_EX.In                                    Premise(F345)
	S53= GPR.Rdata1=>FU.InID1                                   Premise(F408)
	S54= IR_ID.Out25_21=>GPR.RReg1                              Premise(F414)
	S55= GPR.RReg1=rS                                           Path(S49,S54)
	S56= GPR.Rdata1=base                                        GPR-Read(S55,S44)
	S57= FU.InID1=base                                          Path(S56,S53)
	S58= FU.OutID1=FU(base)                                     FU-Forward(S57)
	S59= A_EX.In=FU(base)                                       Path(S58,S51)
	S60= IR_ID.Out15_0=>IMMEXT.In                               Premise(F422)
	S61= IMMEXT.In=offset                                       Path(S50,S60)
	S62= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S61)
	S63= B_EX.In={16{offset[15]},offset}                        Path(S62,S52)
	S64= IR_ID.Out=>IR_EX.In                                    Premise(F432)
	S65= IR_EX.In={36,rS,rT,offset}                             Path(S48,S64)
	S66= CtrlA_EX=1                                             Premise(F464)
	S67= [A_EX]=FU(base)                                        A_EX-Write(S59,S66)
	S68= CtrlB_EX=1                                             Premise(F465)
	S69= [B_EX]={16{offset[15]},offset}                         B_EX-Write(S63,S68)
	S70= CtrlICache=0                                           Premise(F475)
	S71= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S38,S70)
	S72= CtrlCP0=0                                              Premise(F486)
	S73= CP0[ASID]=pid                                          CP0-Hold(S40,S72)
	S74= CtrlIR_EX=1                                            Premise(F494)
	S75= [IR_EX]={36,rS,rT,offset}                              IR_EX-Write(S65,S74)
	S76= CtrlPC=0                                               Premise(F501)
	S77= CtrlPCInc=0                                            Premise(F502)
	S78= PC[Out]=addr+4                                         PC-Hold(S47,S76,S77)

EX	S79= A_EX.Out=FU(base)                                      A_EX-Out(S67)
	S80= B_EX.Out={16{offset[15]},offset}                       B_EX-Out(S69)
	S81= IR_EX.Out={36,rS,rT,offset}                            IR_EX-Out(S75)
	S82= A_EX.Out=>ALU.A                                        Premise(F506)
	S83= ALU.A=FU(base)                                         Path(S79,S82)
	S84= B_EX.Out=>ALU.B                                        Premise(F507)
	S85= ALU.B={16{offset[15]},offset}                          Path(S80,S84)
	S86= ALU.Out=FU(base)+{16{offset[15]},offset}               ALU(S83,S85)
	S87= ALU.Out=>ALUOut_MEM.In                                 Premise(F511)
	S88= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}         Path(S86,S87)
	S89= IR_EX.Out=>IR_MEM.In                                   Premise(F604)
	S90= IR_MEM.In={36,rS,rT,offset}                            Path(S81,S89)
	S91= CtrlALUOut_MEM=1                                       Premise(F634)
	S92= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}          ALUOut_MEM-Write(S88,S91)
	S93= CtrlICache=0                                           Premise(F643)
	S94= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S71,S93)
	S95= CtrlCP0=0                                              Premise(F654)
	S96= CP0[ASID]=pid                                          CP0-Hold(S73,S95)
	S97= CtrlIR_MEM=1                                           Premise(F665)
	S98= [IR_MEM]={36,rS,rT,offset}                             IR_MEM-Write(S90,S97)
	S99= CtrlPC=0                                               Premise(F669)
	S100= CtrlPCInc=0                                           Premise(F670)
	S101= PC[Out]=addr+4                                        PC-Hold(S78,S99,S100)
	S102= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        Premise(F674)

MEM	S103= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}       ALUOut_MEM-Out(S92)
	S104= CP0.ASID=pid                                          CP0-Read-ASID(S96)
	S105= IR_MEM.Out={36,rS,rT,offset}                          IR_MEM-Out(S98)
	S106= ALUOut_MEM.Out=>ALUOut_DMMU1.In                       Premise(F678)
	S107= ALUOut_DMMU1.In=FU(base)+{16{offset[15]},offset}      Path(S103,S106)
	S108= DMMU.Addr=>DAddrReg_DMMU1.In                          Premise(F717)
	S109= ALUOut_MEM.Out=>DMMU.IEA                              Premise(F723)
	S110= DMMU.IEA=FU(base)+{16{offset[15]},offset}             Path(S103,S109)
	S111= CP0.ASID=>DMMU.PID                                    Premise(F725)
	S112= DMMU.PID=pid                                          Path(S104,S111)
	S113= DMMU.Addr={pid,FU(base)+{16{offset[15]},offset}}      DMMU-Search(S112,S110)
	S114= DAddrReg_DMMU1.In={pid,FU(base)+{16{offset[15]},offset}}Path(S113,S108)
	S115= IR_MEM.Out=>IR_DMMU1.In                               Premise(F767)
	S116= IR_DMMU1.In={36,rS,rT,offset}                         Path(S105,S115)
	S117= CtrlALUOut_DMMU1=1                                    Premise(F804)
	S118= [ALUOut_DMMU1]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU1-Write(S107,S117)
	S119= CtrlICache=0                                          Premise(F812)
	S120= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S94,S119)
	S121= CtrlDAddrReg_DMMU1=1                                  Premise(F815)
	S122= [DAddrReg_DMMU1]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Write(S114,S121)
	S123= CtrlDMem=0                                            Premise(F819)
	S124= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S102,S123)
	S125= CtrlCP0=0                                             Premise(F823)
	S126= CP0[ASID]=pid                                         CP0-Hold(S96,S125)
	S127= CtrlIR_DMMU1=1                                        Premise(F829)
	S128= [IR_DMMU1]={36,rS,rT,offset}                          IR_DMMU1-Write(S116,S127)
	S129= CtrlPC=0                                              Premise(F838)
	S130= CtrlPCInc=0                                           Premise(F839)
	S131= PC[Out]=addr+4                                        PC-Hold(S101,S129,S130)

DMMU1	S132= ALUOut_DMMU1.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU1-Out(S118)
	S133= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S134= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S135= DAddrReg_DMMU1.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Out(S122)
	S136= CP0.ASID=pid                                          CP0-Read-ASID(S126)
	S137= IR_DMMU1.Out={36,rS,rT,offset}                        IR_DMMU1-Out(S128)
	S138= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                     Premise(F846)
	S139= ALUOut_DMMU2.In=FU(base)+{16{offset[15]},offset}      Path(S132,S138)
	S140= DAddrReg_DMMU1.Out=>DAddrReg_DMMU2.In                 Premise(F885)
	S141= DAddrReg_DMMU2.In={pid,FU(base)+{16{offset[15]},offset}}Path(S135,S140)
	S142= DCache.RLineEA=>DMMU.IEAR                             Premise(F891)
	S143= DMMU.IEAR=DCacheRLineEA()                             Path(S133,S142)
	S144= CP0.ASID=>DMMU.PID                                    Premise(F892)
	S145= DMMU.PID=pid                                          Path(S136,S144)
	S146= DMMU.AddrR={pid,DCacheRLineEA()}                      DMMU-RSearch(S145,S143)
	S147= DMMU.AddrR=>DMem.MEM8WordWAddr                        Premise(F894)
	S148= DMem.MEM8WordWAddr={pid,DCacheRLineEA()}              Path(S146,S147)
	S149= DCache.RLineData=>DMem.MEM8WordWData                  Premise(F895)
	S150= DMem.MEM8WordWData=DCacheRLineData()                  Path(S134,S149)
	S151= IR_DMMU1.Out=>IR_DMMU2.In                             Premise(F935)
	S152= IR_DMMU2.In={36,rS,rT,offset}                         Path(S137,S151)
	S153= CtrlALUOut_DMMU2=1                                    Premise(F972)
	S154= [ALUOut_DMMU2]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU2-Write(S139,S153)
	S155= CtrlICache=0                                          Premise(F979)
	S156= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S120,S155)
	S157= CtrlDAddrReg_DMMU2=1                                  Premise(F983)
	S158= [DAddrReg_DMMU2]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Write(S141,S157)
	S159= CtrlDMem=0                                            Premise(F986)
	S160= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S124,S159)
	S161= CtrlDMem8Word=1                                       Premise(F987)
	S162= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Write8Word(S148,S150,S161)
	S163= CtrlIR_DMMU2=1                                        Premise(F997)
	S164= [IR_DMMU2]={36,rS,rT,offset}                          IR_DMMU2-Write(S152,S163)
	S165= CtrlPC=0                                              Premise(F1005)
	S166= CtrlPCInc=0                                           Premise(F1006)
	S167= PC[Out]=addr+4                                        PC-Hold(S131,S165,S166)

DMMU2	S168= ALUOut_DMMU2.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU2-Out(S154)
	S169= DAddrReg_DMMU2.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Out(S158)
	S170= IR_DMMU2.Out={36,rS,rT,offset}                        IR_DMMU2-Out(S164)
	S171= ALUOut_DMMU2.Out=>ALUOut_WB.In                        Premise(F1015)
	S172= ALUOut_WB.In=FU(base)+{16{offset[15]},offset}         Path(S168,S171)
	S173= ALUOut_DMMU2.Out=>DCache.IEA                          Premise(F1053)
	S174= DCache.IEA=FU(base)+{16{offset[15]},offset}           Path(S168,S173)
	S175= DMem.MEM8WordOut=>DCache.WData                        Premise(F1055)
	S176= DAddrReg_DMMU2.Out=>DMem.RAddr                        Premise(F1063)
	S177= DMem.RAddr={pid,FU(base)+{16{offset[15]},offset}}     Path(S169,S176)
	S178= DMem.Out=>DR_WB.In                                    Premise(F1066)
	S179= IR_DMMU2.Out=>IR_WB.In                                Premise(F1108)
	S180= IR_WB.In={36,rS,rT,offset}                            Path(S170,S179)
	S181= CtrlALUOut_WB=1                                       Premise(F1140)
	S182= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}          ALUOut_WB-Write(S172,S181)
	S183= CtrlDCache=1                                          Premise(F1145)
	S184= CtrlICache=0                                          Premise(F1146)
	S185= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S156,S184)
	S186= CtrlDMem=0                                            Premise(F1153)
	S187= CtrlDMem8Word=0                                       Premise(F1154)
	S188= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S162,S187)
	S189= DMem.Out=a                                            DMem-Read(S177,S160,S186,S187)
	S190= DR_WB.In=a                                            Path(S189,S178)
	S191= DMem.MEM8WordOut=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DMem-Read(S177,S160,S186,S187)
	S192= DCache.WData=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})Path(S191,S175)
	S193= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Write8Word(S174,S192,S183)
	S194= CtrlDR_WB=1                                           Premise(F1162)
	S195= [DR_WB]=a                                             DR_WB-Write(S190,S194)
	S196= CtrlIR_WB=1                                           Premise(F1169)
	S197= [IR_WB]={36,rS,rT,offset}                             IR_WB-Write(S180,S196)
	S198= CtrlPC=0                                              Premise(F1172)
	S199= CtrlPCInc=0                                           Premise(F1173)
	S200= PC[Out]=addr+4                                        PC-Hold(S167,S198,S199)

WB	S201= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S182)
	S202= DR_WB.Out=a                                           DR_WB-Out(S195)
	S203= IR_WB.Out20_16=rT                                     IR-Out(S197)
	S204= MemDataSelL.Out=>GPR.WData                            Premise(F1253)
	S205= IR_WB.Out20_16=>GPR.WReg                              Premise(F1254)
	S206= GPR.WReg=rT                                           Path(S203,S205)
	S207= ALUOut_WB.Out1_0=>MemDataSelL.Addr                    Premise(F1276)
	S208= MemDataSelL.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S201,S207)
	S209= DR_WB.Out=>MemDataSelL.In                             Premise(F1278)
	S210= MemDataSelL.In=a                                      Path(S202,S209)
	S211= MemDataSelL.Out={24{0},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}MemDataSelL(S210,S208)
	S212= GPR.WData={24{0},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}Path(S211,S204)
	S213= CtrlDCache=0                                          Premise(F1313)
	S214= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S193,S213)
	S215= CtrlICache=0                                          Premise(F1314)
	S216= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S185,S215)
	S217= CtrlDMem8Word=0                                       Premise(F1322)
	S218= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S188,S217)
	S219= CtrlGPR=1                                             Premise(F1338)
	S220= GPR[rT]={24{0},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S206,S212,S219)
	S221= CtrlPC=0                                              Premise(F1340)
	S222= CtrlPCInc=0                                           Premise(F1341)
	S223= PC[Out]=addr+4                                        PC-Hold(S200,S221,S222)

POST	S214= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S193,S213)
	S216= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S185,S215)
	S218= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S188,S217)
	S220= GPR[rT]={24{0},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S206,S212,S219)
	S223= PC[Out]=addr+4                                        PC-Hold(S200,S221,S222)

