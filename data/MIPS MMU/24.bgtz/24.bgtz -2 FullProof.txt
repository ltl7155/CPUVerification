
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={7,rS,0,offset}                        Premise(F2)
	S3= ICache[addr]={7,rS,0,offset}                            Premise(F3)
	S4= GPR[rS]=a                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S8,S10)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S14= IAddrReg.In={pid,addr}                                 Path(S11,S13)
	S15= IMMU.Hit=>CU.IMMUHit                                   Premise(F8)
	S16= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S12,S15)
	S17= PC.Out=>ICache.IEA                                     Premise(F9)
	S18= ICache.IEA=addr                                        Path(S6,S17)
	S19= ICache.Hit=ICacheHit(addr)                             ICache-Search(S18)
	S20= ICache.Out={7,rS,0,offset}                             ICache-Search(S18,S3)
	S21= ICache.Out=>IR.In                                      Premise(F10)
	S22= IR.In={7,rS,0,offset}                                  Path(S20,S21)
	S23= ICache.Out=>ICacheReg.In                               Premise(F11)
	S24= ICacheReg.In={7,rS,0,offset}                           Path(S20,S23)
	S25= ICache.Hit=>CU.ICacheHit                               Premise(F12)
	S26= CU.ICacheHit=ICacheHit(addr)                           Path(S19,S25)
	S27= CtrlASIDIn=0                                           Premise(F13)
	S28= CtrlCP0=0                                              Premise(F14)
	S29= CP0[ASID]=pid                                          CP0-Hold(S0,S28)
	S30= CtrlEPCIn=0                                            Premise(F15)
	S31= CtrlExCodeIn=0                                         Premise(F16)
	S32= CtrlIMMU=0                                             Premise(F17)
	S33= CtrlPC=0                                               Premise(F18)
	S34= CtrlPCInc=1                                            Premise(F19)
	S35= PC[Out]=addr+4                                         PC-Inc(S1,S33,S34)
	S36= PC[CIA]=addr                                           PC-Inc(S1,S33,S34)
	S37= CtrlIAddrReg=0                                         Premise(F20)
	S38= CtrlICache=0                                           Premise(F21)
	S39= ICache[addr]={7,rS,0,offset}                           ICache-Hold(S3,S38)
	S40= CtrlIR=1                                               Premise(F22)
	S41= [IR]={7,rS,0,offset}                                   IR-Write(S22,S40)
	S42= CtrlICacheReg=0                                        Premise(F23)
	S43= CtrlIMem=0                                             Premise(F24)
	S44= IMem[{pid,addr}]={7,rS,0,offset}                       IMem-Hold(S2,S43)
	S45= CtrlIRMux=0                                            Premise(F25)
	S46= CtrlGPR=0                                              Premise(F26)
	S47= GPR[rS]=a                                              GPR-Hold(S4,S46)
	S48= CtrlA=0                                                Premise(F27)
	S49= CtrlB=0                                                Premise(F28)
	S50= CtrlALUOut=0                                           Premise(F29)
	S51= CtrlConditionReg=0                                     Premise(F30)

ID	S52= CP0.ASID=pid                                           CP0-Read-ASID(S29)
	S53= PC.Out=addr+4                                          PC-Out(S35)
	S54= PC.CIA=addr                                            PC-Out(S36)
	S55= PC.CIA31_28=addr[31:28]                                PC-Out(S36)
	S56= IR.Out={7,rS,0,offset}                                 IR-Out(S41)
	S57= IR.Out31_26=7                                          IR-Out(S41)
	S58= IR.Out25_21=rS                                         IR-Out(S41)
	S59= IR.Out20_16=0                                          IR-Out(S41)
	S60= IR.Out15_0=offset                                      IR-Out(S41)
	S61= IR.Out31_26=>CU.Op                                     Premise(F49)
	S62= CU.Op=7                                                Path(S57,S61)
	S63= CU.Func=mdu_mul                                        CU(S62)
	S64= IR.Out25_21=>GPR.RReg1                                 Premise(F50)
	S65= GPR.RReg1=rS                                           Path(S58,S64)
	S66= GPR.Rdata1=a                                           GPR-Read(S65,S47)
	S67= IR.Out20_16=>GPR.RReg2                                 Premise(F51)
	S68= GPR.RReg2=0                                            Path(S59,S67)
	S69= GPR.Rdata2=32'b0                                       GPR-ReadGPR0()
	S70= GPR.Rdata1=>A.In                                       Premise(F52)
	S71= A.In=a                                                 Path(S66,S70)
	S72= GPR.Rdata2=>B.In                                       Premise(F53)
	S73= B.In=32'b0                                             Path(S69,S72)
	S74= CtrlASIDIn=0                                           Premise(F54)
	S75= CtrlCP0=0                                              Premise(F55)
	S76= CP0[ASID]=pid                                          CP0-Hold(S29,S75)
	S77= CtrlEPCIn=0                                            Premise(F56)
	S78= CtrlExCodeIn=0                                         Premise(F57)
	S79= CtrlIMMU=0                                             Premise(F58)
	S80= CtrlPC=0                                               Premise(F59)
	S81= CtrlPCInc=0                                            Premise(F60)
	S82= PC[CIA]=addr                                           PC-Hold(S36,S81)
	S83= PC[Out]=addr+4                                         PC-Hold(S35,S80,S81)
	S84= CtrlIAddrReg=0                                         Premise(F61)
	S85= CtrlICache=0                                           Premise(F62)
	S86= ICache[addr]={7,rS,0,offset}                           ICache-Hold(S39,S85)
	S87= CtrlIR=0                                               Premise(F63)
	S88= [IR]={7,rS,0,offset}                                   IR-Hold(S41,S87)
	S89= CtrlICacheReg=0                                        Premise(F64)
	S90= CtrlIMem=0                                             Premise(F65)
	S91= IMem[{pid,addr}]={7,rS,0,offset}                       IMem-Hold(S44,S90)
	S92= CtrlIRMux=0                                            Premise(F66)
	S93= CtrlGPR=0                                              Premise(F67)
	S94= GPR[rS]=a                                              GPR-Hold(S47,S93)
	S95= CtrlA=1                                                Premise(F68)
	S96= [A]=a                                                  A-Write(S71,S95)
	S97= CtrlB=1                                                Premise(F69)
	S98= [B]=32'b0                                              B-Write(S73,S97)
	S99= CtrlALUOut=0                                           Premise(F70)
	S100= CtrlConditionReg=0                                    Premise(F71)

EX	S101= CP0.ASID=pid                                          CP0-Read-ASID(S76)
	S102= PC.CIA=addr                                           PC-Out(S82)
	S103= PC.CIA31_28=addr[31:28]                               PC-Out(S82)
	S104= PC.Out=addr+4                                         PC-Out(S83)
	S105= IR.Out={7,rS,0,offset}                                IR-Out(S88)
	S106= IR.Out31_26=7                                         IR-Out(S88)
	S107= IR.Out25_21=rS                                        IR-Out(S88)
	S108= IR.Out20_16=0                                         IR-Out(S88)
	S109= IR.Out15_0=offset                                     IR-Out(S88)
	S110= A.Out=a                                               A-Out(S96)
	S111= A.Out1_0={a}[1:0]                                     A-Out(S96)
	S112= A.Out4_0={a}[4:0]                                     A-Out(S96)
	S113= B.Out=32'b0                                           B-Out(S98)
	S114= B.Out1_0={32'b0}[1:0]                                 B-Out(S98)
	S115= B.Out4_0={32'b0}[4:0]                                 B-Out(S98)
	S116= IR.Out15_0=>SEXT.In                                   Premise(F72)
	S117= SEXT.In=offset                                        Path(S109,S116)
	S118= SEXT.Out={14{offset[15]},offset,2{0}}                 SEXT(S117)
	S119= PC.CIA=>ALU.A                                         Premise(F73)
	S120= ALU.A=addr                                            Path(S102,S119)
	S121= SEXT.Out=>ALU.B                                       Premise(F74)
	S122= ALU.B={14{offset[15]},offset,2{0}}                    Path(S118,S121)
	S123= ALU.Func=6'b010010                                    Premise(F75)
	S124= ALU.Out=addr+{14{offset[15]},offset,2{0}}             ALU(S120,S122)
	S125= ALU.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]   ALU(S120,S122)
	S126= ALU.CMP=Compare0(addr+{14{offset[15]},offset,2{0}})   ALU(S120,S122)
	S127= ALU.OV=OverFlow(addr+{14{offset[15]},offset,2{0}})    ALU(S120,S122)
	S128= ALU.CA=Carry(addr+{14{offset[15]},offset,2{0}})       ALU(S120,S122)
	S129= ALU.Out=>ALUOut.In                                    Premise(F76)
	S130= ALUOut.In=addr+{14{offset[15]},offset,2{0}}           Path(S124,S129)
	S131= A.Out=>CMPU.A                                         Premise(F77)
	S132= CMPU.A=a                                              Path(S110,S131)
	S133= B.Out=>CMPU.B                                         Premise(F78)
	S134= CMPU.B=32'b0                                          Path(S113,S133)
	S135= CMPU.Func=6'b000011                                   Premise(F79)
	S136= CMPU.Out=CompareS(a,32'b0)                            CMPU-CMPS(S132,S134)
	S137= CMPU.zero=CompareS(a,32'b0)                           CMPU-CMPS(S132,S134)
	S138= CMPU.gt=CompareS(a,32'b0)                             CMPU-CMPS(S132,S134)
	S139= CMPU.lt=CompareS(a,32'b0)                             CMPU-CMPS(S132,S134)
	S140= CMPU.gt=>ConditionReg.In                              Premise(F80)
	S141= ConditionReg.In=CompareS(a,32'b0)                     Path(S138,S140)
	S142= CtrlASIDIn=0                                          Premise(F81)
	S143= CtrlCP0=0                                             Premise(F82)
	S144= CP0[ASID]=pid                                         CP0-Hold(S76,S143)
	S145= CtrlEPCIn=0                                           Premise(F83)
	S146= CtrlExCodeIn=0                                        Premise(F84)
	S147= CtrlIMMU=0                                            Premise(F85)
	S148= CtrlPC=0                                              Premise(F86)
	S149= CtrlPCInc=0                                           Premise(F87)
	S150= PC[CIA]=addr                                          PC-Hold(S82,S149)
	S151= PC[Out]=addr+4                                        PC-Hold(S83,S148,S149)
	S152= CtrlIAddrReg=0                                        Premise(F88)
	S153= CtrlICache=0                                          Premise(F89)
	S154= ICache[addr]={7,rS,0,offset}                          ICache-Hold(S86,S153)
	S155= CtrlIR=0                                              Premise(F90)
	S156= [IR]={7,rS,0,offset}                                  IR-Hold(S88,S155)
	S157= CtrlICacheReg=0                                       Premise(F91)
	S158= CtrlIMem=0                                            Premise(F92)
	S159= IMem[{pid,addr}]={7,rS,0,offset}                      IMem-Hold(S91,S158)
	S160= CtrlIRMux=0                                           Premise(F93)
	S161= CtrlGPR=0                                             Premise(F94)
	S162= GPR[rS]=a                                             GPR-Hold(S94,S161)
	S163= CtrlA=0                                               Premise(F95)
	S164= [A]=a                                                 A-Hold(S96,S163)
	S165= CtrlB=0                                               Premise(F96)
	S166= [B]=32'b0                                             B-Hold(S98,S165)
	S167= CtrlALUOut=1                                          Premise(F97)
	S168= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Write(S130,S167)
	S169= CtrlConditionReg=1                                    Premise(F98)
	S170= [ConditionReg]=CompareS(a,32'b0)                      ConditionReg-Write(S141,S169)

MEM	S171= CP0.ASID=pid                                          CP0-Read-ASID(S144)
	S172= PC.CIA=addr                                           PC-Out(S150)
	S173= PC.CIA31_28=addr[31:28]                               PC-Out(S150)
	S174= PC.Out=addr+4                                         PC-Out(S151)
	S175= IR.Out={7,rS,0,offset}                                IR-Out(S156)
	S176= IR.Out31_26=7                                         IR-Out(S156)
	S177= IR.Out25_21=rS                                        IR-Out(S156)
	S178= IR.Out20_16=0                                         IR-Out(S156)
	S179= IR.Out15_0=offset                                     IR-Out(S156)
	S180= A.Out=a                                               A-Out(S164)
	S181= A.Out1_0={a}[1:0]                                     A-Out(S164)
	S182= A.Out4_0={a}[4:0]                                     A-Out(S164)
	S183= B.Out=32'b0                                           B-Out(S166)
	S184= B.Out1_0={32'b0}[1:0]                                 B-Out(S166)
	S185= B.Out4_0={32'b0}[4:0]                                 B-Out(S166)
	S186= ALUOut.Out=addr+{14{offset[15]},offset,2{0}}          ALUOut-Out(S168)
	S187= ALUOut.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut-Out(S168)
	S188= ALUOut.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut-Out(S168)
	S189= ConditionReg.Out=CompareS(a,32'b0)                    ConditionReg-Out(S170)
	S190= ConditionReg.Out1_0={CompareS(a,32'b0)}[1:0]          ConditionReg-Out(S170)
	S191= ConditionReg.Out4_0={CompareS(a,32'b0)}[4:0]          ConditionReg-Out(S170)
	S192= ALUOut.Out=>PC.In                                     Premise(F99)
	S193= PC.In=addr+{14{offset[15]},offset,2{0}}               Path(S186,S192)
	S194= ConditionReg.Out=>CU.gt                               Premise(F100)
	S195= CU.gt=CompareS(a,32'b0)                               Path(S189,S194)
	S196= CtrlASIDIn=0                                          Premise(F101)
	S197= CtrlCP0=0                                             Premise(F102)
	S198= CP0[ASID]=pid                                         CP0-Hold(S144,S197)
	S199= CtrlEPCIn=0                                           Premise(F103)
	S200= CtrlExCodeIn=0                                        Premise(F104)
	S201= CtrlIMMU=0                                            Premise(F105)
	S202= CtrlPC=1                                              Premise(F106)
	S203= CtrlPCInc=0                                           Premise(F107)
	S204= PC[CIA]=addr                                          PC-Hold(S150,S203)
	S205= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Write(S193,S202,S203)
	S206= CtrlIAddrReg=0                                        Premise(F108)
	S207= CtrlICache=0                                          Premise(F109)
	S208= ICache[addr]={7,rS,0,offset}                          ICache-Hold(S154,S207)
	S209= CtrlIR=0                                              Premise(F110)
	S210= [IR]={7,rS,0,offset}                                  IR-Hold(S156,S209)
	S211= CtrlICacheReg=0                                       Premise(F111)
	S212= CtrlIMem=0                                            Premise(F112)
	S213= IMem[{pid,addr}]={7,rS,0,offset}                      IMem-Hold(S159,S212)
	S214= CtrlIRMux=0                                           Premise(F113)
	S215= CtrlGPR=0                                             Premise(F114)
	S216= GPR[rS]=a                                             GPR-Hold(S162,S215)
	S217= CtrlA=0                                               Premise(F115)
	S218= [A]=a                                                 A-Hold(S164,S217)
	S219= CtrlB=0                                               Premise(F116)
	S220= [B]=32'b0                                             B-Hold(S166,S219)
	S221= CtrlALUOut=0                                          Premise(F117)
	S222= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Hold(S168,S221)
	S223= CtrlConditionReg=0                                    Premise(F118)
	S224= [ConditionReg]=CompareS(a,32'b0)                      ConditionReg-Hold(S170,S223)

WB	S225= CP0.ASID=pid                                          CP0-Read-ASID(S198)
	S226= PC.CIA=addr                                           PC-Out(S204)
	S227= PC.CIA31_28=addr[31:28]                               PC-Out(S204)
	S228= PC.Out=addr+{14{offset[15]},offset,2{0}}              PC-Out(S205)
	S229= IR.Out={7,rS,0,offset}                                IR-Out(S210)
	S230= IR.Out31_26=7                                         IR-Out(S210)
	S231= IR.Out25_21=rS                                        IR-Out(S210)
	S232= IR.Out20_16=0                                         IR-Out(S210)
	S233= IR.Out15_0=offset                                     IR-Out(S210)
	S234= A.Out=a                                               A-Out(S218)
	S235= A.Out1_0={a}[1:0]                                     A-Out(S218)
	S236= A.Out4_0={a}[4:0]                                     A-Out(S218)
	S237= B.Out=32'b0                                           B-Out(S220)
	S238= B.Out1_0={32'b0}[1:0]                                 B-Out(S220)
	S239= B.Out4_0={32'b0}[4:0]                                 B-Out(S220)
	S240= ALUOut.Out=addr+{14{offset[15]},offset,2{0}}          ALUOut-Out(S222)
	S241= ALUOut.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut-Out(S222)
	S242= ALUOut.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut-Out(S222)
	S243= ConditionReg.Out=CompareS(a,32'b0)                    ConditionReg-Out(S224)
	S244= ConditionReg.Out1_0={CompareS(a,32'b0)}[1:0]          ConditionReg-Out(S224)
	S245= ConditionReg.Out4_0={CompareS(a,32'b0)}[4:0]          ConditionReg-Out(S224)
	S246= CtrlASIDIn=0                                          Premise(F155)
	S247= CtrlCP0=0                                             Premise(F156)
	S248= CP0[ASID]=pid                                         CP0-Hold(S198,S247)
	S249= CtrlEPCIn=0                                           Premise(F157)
	S250= CtrlExCodeIn=0                                        Premise(F158)
	S251= CtrlIMMU=0                                            Premise(F159)
	S252= CtrlPC=0                                              Premise(F160)
	S253= CtrlPCInc=0                                           Premise(F161)
	S254= PC[CIA]=addr                                          PC-Hold(S204,S253)
	S255= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Hold(S205,S252,S253)
	S256= CtrlIAddrReg=0                                        Premise(F162)
	S257= CtrlICache=0                                          Premise(F163)
	S258= ICache[addr]={7,rS,0,offset}                          ICache-Hold(S208,S257)
	S259= CtrlIR=0                                              Premise(F164)
	S260= [IR]={7,rS,0,offset}                                  IR-Hold(S210,S259)
	S261= CtrlICacheReg=0                                       Premise(F165)
	S262= CtrlIMem=0                                            Premise(F166)
	S263= IMem[{pid,addr}]={7,rS,0,offset}                      IMem-Hold(S213,S262)
	S264= CtrlIRMux=0                                           Premise(F167)
	S265= CtrlGPR=0                                             Premise(F168)
	S266= GPR[rS]=a                                             GPR-Hold(S216,S265)
	S267= CtrlA=0                                               Premise(F169)
	S268= [A]=a                                                 A-Hold(S218,S267)
	S269= CtrlB=0                                               Premise(F170)
	S270= [B]=32'b0                                             B-Hold(S220,S269)
	S271= CtrlALUOut=0                                          Premise(F171)
	S272= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Hold(S222,S271)
	S273= CtrlConditionReg=0                                    Premise(F172)
	S274= [ConditionReg]=CompareS(a,32'b0)                      ConditionReg-Hold(S224,S273)

POST	S248= CP0[ASID]=pid                                         CP0-Hold(S198,S247)
	S254= PC[CIA]=addr                                          PC-Hold(S204,S253)
	S255= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Hold(S205,S252,S253)
	S258= ICache[addr]={7,rS,0,offset}                          ICache-Hold(S208,S257)
	S260= [IR]={7,rS,0,offset}                                  IR-Hold(S210,S259)
	S263= IMem[{pid,addr}]={7,rS,0,offset}                      IMem-Hold(S213,S262)
	S266= GPR[rS]=a                                             GPR-Hold(S216,S265)
	S268= [A]=a                                                 A-Hold(S218,S267)
	S270= [B]=32'b0                                             B-Hold(S220,S269)
	S272= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Hold(S222,S271)
	S274= [ConditionReg]=CompareS(a,32'b0)                      ConditionReg-Hold(S224,S273)

