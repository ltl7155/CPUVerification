
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={16,4,rT,rD,0,sel}                     Premise(F2)
	S3= GPR[rT]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={16,4,rT,rD,0,sel}                            IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR_ID.In                                     Premise(F7)
	S12= IR_ID.In={16,4,rT,rD,0,sel}                            Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F33)
	S14= CtrlPCInc=1                                            Premise(F34)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR_ID=1                                            Premise(F40)
	S17= [IR_ID]={16,4,rT,rD,0,sel}                             IR_ID-Write(S12,S16)
	S18= CtrlGPR=0                                              Premise(F41)
	S19= GPR[rT]=a                                              GPR-Hold(S3,S18)

ID	S20= IR_ID.Out={16,4,rT,rD,0,sel}                           IR-Out(S17)
	S21= IR_ID.Out20_16=rT                                      IR-Out(S17)
	S22= IR_ID.Out20_16=>GPR.RReg1                              Premise(F55)
	S23= GPR.RReg1=rT                                           Path(S21,S22)
	S24= GPR.Rdata1=a                                           GPR-Read(S23,S19)
	S25= GPR.Rdata1=>FU.InID1                                   Premise(F56)
	S26= FU.InID1=a                                             Path(S24,S25)
	S27= FU.OutID1=FU(a)                                        FU-Forward(S26)
	S28= FU.OutID1=>A_EX.In                                     Premise(F58)
	S29= A_EX.In=FU(a)                                          Path(S27,S28)
	S30= IR_ID.Out=>IR_EX.In                                    Premise(F59)
	S31= IR_EX.In={16,4,rT,rD,0,sel}                            Path(S20,S30)
	S32= CtrlPC=0                                               Premise(F76)
	S33= CtrlPCInc=0                                            Premise(F77)
	S34= PC[Out]=addr+4                                         PC-Hold(S15,S32,S33)
	S35= CtrlA_EX=1                                             Premise(F85)
	S36= [A_EX]=FU(a)                                           A_EX-Write(S29,S35)
	S37= CtrlIR_EX=1                                            Premise(F86)
	S38= [IR_EX]={16,4,rT,rD,0,sel}                             IR_EX-Write(S31,S37)

EX	S39= A_EX.Out=FU(a)                                         A_EX-Out(S36)
	S40= IR_EX.Out15_11=rD                                      IR_EX-Out(S38)
	S41= IR_EX.Out15_11=>CP0.WReg                               Premise(F108)
	S42= CP0.WReg=rD                                            Path(S40,S41)
	S43= A_EX.Out=>CP0.Wdata                                    Premise(F109)
	S44= CP0.Wdata=FU(a)                                        Path(S39,S43)
	S45= CtrlPC=0                                               Premise(F119)
	S46= CtrlPCInc=0                                            Premise(F120)
	S47= PC[Out]=addr+4                                         PC-Hold(S34,S45,S46)
	S48= CtrlCP0=1                                              Premise(F123)
	S49= CP0[rD]=FU(a)                                          CP0-Write-Nomal(S42,S44,S48)

MEM	S50= CtrlPC=0                                               Premise(F162)
	S51= CtrlPCInc=0                                            Premise(F163)
	S52= PC[Out]=addr+4                                         PC-Hold(S47,S50,S51)
	S53= CtrlCP0=0                                              Premise(F166)
	S54= CP0[rD]=FU(a)                                          CP0-Hold(S49,S53)

WB	S55= CtrlPC=0                                               Premise(F205)
	S56= CtrlPCInc=0                                            Premise(F206)
	S57= PC[Out]=addr+4                                         PC-Hold(S52,S55,S56)
	S58= CtrlCP0=0                                              Premise(F209)
	S59= CP0[rD]=FU(a)                                          CP0-Hold(S54,S58)

POST	S57= PC[Out]=addr+4                                         PC-Hold(S52,S55,S56)
	S59= CP0[rD]=FU(a)                                          CP0-Hold(S54,S58)

