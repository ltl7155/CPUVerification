
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,1495}                     Premise(F2)
	S3= ICache[addr]={31,rT,rA,rB,1495}                         Premise(F3)
	S4= GPRegs[rA]=a                                            Premise(F4)
	S5= GPRegs[rB]=b                                            Premise(F5)
	S6= XER[SO]=so                                              Premise(F6)

IF	S7= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S8= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S9= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S10= PC.Out=addr                                            PC-Out(S1)
	S11= XER.SOOut=so                                           XER-SO-Out(S6)
	S12= PIDReg.Out=>IMMU.PID                                   Premise(F7)
	S13= IMMU.PID=pid                                           Path(S7,S12)
	S14= PC.Out=>IMMU.IEA                                       Premise(F8)
	S15= IMMU.IEA=addr                                          Path(S10,S14)
	S16= IMMU.Addr={pid,addr}                                   IMMU-Search(S13,S15)
	S17= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S13,S15)
	S18= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S19= IAddrReg.In={pid,addr}                                 Path(S16,S18)
	S20= IMMU.Hit=>IMMUHitReg.In                                Premise(F10)
	S21= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S17,S20)
	S22= PC.Out=>ICache.IEA                                     Premise(F11)
	S23= ICache.IEA=addr                                        Path(S10,S22)
	S24= ICache.Hit=ICacheHit(addr)                             ICache-Search(S23)
	S25= ICache.Out={31,rT,rA,rB,1495}                          ICache-Search(S23,S3)
	S26= ICache.Out=>ICacheReg.In                               Premise(F12)
	S27= ICacheReg.In={31,rT,rA,rB,1495}                        Path(S25,S26)
	S28= ICache.Hit=>ICacheHitReg.In                            Premise(F13)
	S29= ICacheHitReg.In=ICacheHit(addr)                        Path(S24,S28)
	S30= IMMUHitReg.Out=>CU.IMemHit                             Premise(F14)
	S31= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F15)
	S32= IAddrReg.Out=>IMem.RAddr                               Premise(F16)
	S33= IMem.Out=>IRMux.MemData                                Premise(F17)
	S34= ICacheReg.Out=>IRMux.CacheData                         Premise(F18)
	S35= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F19)
	S36= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F20)
	S37= IRMux.Out=>IR.In                                       Premise(F21)
	S38= IMem.MEM8WordOut=>ICache.WData                         Premise(F22)
	S39= PC.Out=>ICache.IEA                                     Premise(F23)
	S40= IR.Out0_5=>CU.Op                                       Premise(F24)
	S41= IR.Out11_15=>GPRegs.RReg1                              Premise(F25)
	S42= IR.Out16_20=>GPRegs.RReg2                              Premise(F26)
	S43= IR.Out21_31=>CU.IRFunc                                 Premise(F27)
	S44= GPRegs.Rdata1=>A.In                                    Premise(F28)
	S45= GPRegs.Rdata2=>B.In                                    Premise(F29)
	S46= A.Out=>MDU.A                                           Premise(F30)
	S47= B.Out=>MDU.B                                           Premise(F31)
	S48= CU.Func=>MDU.Func                                      Premise(F32)
	S49= MDU.Out32_63=>MDUOut.In                                Premise(F33)
	S50= XER.SOOut=>ORGate.A                                    Premise(F34)
	S51= ORGate.A=so                                            Path(S11,S50)
	S52= MDU.OV=>ORGate.B                                       Premise(F35)
	S53= MDU.OV=>OVReg.In                                       Premise(F36)
	S54= ORGate.Out=>DR1bit.In                                  Premise(F37)
	S55= MDU.CMP=>DataCmb.A                                     Premise(F38)
	S56= XER.SOOut=>DataCmb.B                                   Premise(F39)
	S57= DataCmb.B=so                                           Path(S11,S56)
	S58= DataCmb.Out=>DR4bit.In                                 Premise(F40)
	S59= IR.Out6_10=>GPRegs.WReg                                Premise(F41)
	S60= MDUOut.Out=>GPRegs.WData                               Premise(F42)
	S61= DR4bit.Out=>CRRegs.CR0In                               Premise(F43)
	S62= DR1bit.Out=>XER.SOIn                                   Premise(F44)
	S63= OVReg.Out=>XER.OVIn                                    Premise(F45)
	S64= CtrlPIDReg=0                                           Premise(F46)
	S65= [PIDReg]=pid                                           PIDReg-Hold(S0,S64)
	S66= CtrlIMMU=0                                             Premise(F47)
	S67= CtrlPC=0                                               Premise(F48)
	S68= CtrlPCInc=0                                            Premise(F49)
	S69= PC[Out]=addr                                           PC-Hold(S1,S67,S68)
	S70= CtrlIAddrReg=1                                         Premise(F50)
	S71= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S19,S70)
	S72= CtrlIMMUHitReg=1                                       Premise(F51)
	S73= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S21,S72)
	S74= CtrlICache=0                                           Premise(F52)
	S75= ICache[addr]={31,rT,rA,rB,1495}                        ICache-Hold(S3,S74)
	S76= CtrlICacheReg=1                                        Premise(F53)
	S77= [ICacheReg]={31,rT,rA,rB,1495}                         ICacheReg-Write(S27,S76)
	S78= CtrlICacheHitReg=1                                     Premise(F54)
	S79= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S29,S78)
	S80= CtrlIMem=0                                             Premise(F55)
	S81= IMem[{pid,addr}]={31,rT,rA,rB,1495}                    IMem-Hold(S2,S80)
	S82= CtrlIRMux=0                                            Premise(F56)
	S83= CtrlIR=0                                               Premise(F57)
	S84= CtrlGPRegs=0                                           Premise(F58)
	S85= GPRegs[rA]=a                                           GPRegs-Hold(S4,S84)
	S86= GPRegs[rB]=b                                           GPRegs-Hold(S5,S84)
	S87= CtrlA=0                                                Premise(F59)
	S88= CtrlB=0                                                Premise(F60)
	S89= CtrlMDUOut=0                                           Premise(F61)
	S90= CtrlXERSO=0                                            Premise(F62)
	S91= XER[SO]=so                                             XER-SO-Hold(S6,S90)
	S92= CtrlXEROV=0                                            Premise(F63)
	S93= CtrlXERCA=0                                            Premise(F64)
	S94= CtrlOVReg=0                                            Premise(F65)
	S95= CtrlDR1bit=0                                           Premise(F66)
	S96= CtrlDR4bit=0                                           Premise(F67)
	S97= CtrlCRRegs=0                                           Premise(F68)
	S98= CtrlCRRegsCR0=0                                        Premise(F69)
	S99= CtrlCRRegsW4bitRegs=0                                  Premise(F70)
	S100= CtrlCRRegsW1bitRegs=0                                 Premise(F71)

IMMU	S101= PIDReg.Out=pid                                        PIDReg-Out(S65)
	S102= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S65)
	S103= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S65)
	S104= PC.Out=addr                                           PC-Out(S69)
	S105= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S71)
	S106= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S71)
	S107= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S71)
	S108= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S73)
	S109= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S73)
	S110= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S73)
	S111= ICacheReg.Out={31,rT,rA,rB,1495}                      ICacheReg-Out(S77)
	S112= ICacheReg.Out26_31={31,rT,rA,rB,1495}[26:31]          ICacheReg-Out(S77)
	S113= ICacheReg.Out30_31={31,rT,rA,rB,1495}[30:31]          ICacheReg-Out(S77)
	S114= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S79)
	S115= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S79)
	S116= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S79)
	S117= XER.SOOut=so                                          XER-SO-Out(S91)
	S118= PIDReg.Out=>IMMU.PID                                  Premise(F72)
	S119= IMMU.PID=pid                                          Path(S101,S118)
	S120= PC.Out=>IMMU.IEA                                      Premise(F73)
	S121= IMMU.IEA=addr                                         Path(S104,S120)
	S122= IMMU.Addr={pid,addr}                                  IMMU-Search(S119,S121)
	S123= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S119,S121)
	S124= IMMU.Addr=>IAddrReg.In                                Premise(F74)
	S125= IAddrReg.In={pid,addr}                                Path(S122,S124)
	S126= IMMU.Hit=>IMMUHitReg.In                               Premise(F75)
	S127= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S123,S126)
	S128= PC.Out=>ICache.IEA                                    Premise(F76)
	S129= ICache.IEA=addr                                       Path(S104,S128)
	S130= ICache.Hit=ICacheHit(addr)                            ICache-Search(S129)
	S131= ICache.Out={31,rT,rA,rB,1495}                         ICache-Search(S129,S75)
	S132= ICache.Out=>ICacheReg.In                              Premise(F77)
	S133= ICacheReg.In={31,rT,rA,rB,1495}                       Path(S131,S132)
	S134= ICache.Hit=>ICacheHitReg.In                           Premise(F78)
	S135= ICacheHitReg.In=ICacheHit(addr)                       Path(S130,S134)
	S136= IMMUHitReg.Out=>CU.IMemHit                            Premise(F79)
	S137= CU.IMemHit=IMMUHit(pid,addr)                          Path(S108,S136)
	S138= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F80)
	S139= CU.ICacheHit=ICacheHit(addr)                          Path(S114,S138)
	S140= IAddrReg.Out=>IMem.RAddr                              Premise(F81)
	S141= IMem.RAddr={pid,addr}                                 Path(S105,S140)
	S142= IMem.Out={31,rT,rA,rB,1495}                           IMem-Read(S141,S81)
	S143= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S141,S81)
	S144= IMem.Out=>IRMux.MemData                               Premise(F82)
	S145= IRMux.MemData={31,rT,rA,rB,1495}                      Path(S142,S144)
	S146= ICacheReg.Out=>IRMux.CacheData                        Premise(F83)
	S147= IRMux.CacheData={31,rT,rA,rB,1495}                    Path(S111,S146)
	S148= IRMux.Out={31,rT,rA,rB,1495}                          IRMux-Select(S145,S147)
	S149= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F84)
	S150= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S108,S149)
	S151= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F85)
	S152= IRMux.CacheSel=ICacheHit(addr)                        Path(S114,S151)
	S153= IRMux.Out=>IR.In                                      Premise(F86)
	S154= IR.In={31,rT,rA,rB,1495}                              Path(S148,S153)
	S155= IMem.MEM8WordOut=>ICache.WData                        Premise(F87)
	S156= ICache.WData=IMemGet8Word({pid,addr})                 Path(S143,S155)
	S157= PC.Out=>ICache.IEA                                    Premise(F88)
	S158= IR.Out0_5=>CU.Op                                      Premise(F89)
	S159= IR.Out11_15=>GPRegs.RReg1                             Premise(F90)
	S160= IR.Out16_20=>GPRegs.RReg2                             Premise(F91)
	S161= IR.Out21_31=>CU.IRFunc                                Premise(F92)
	S162= GPRegs.Rdata1=>A.In                                   Premise(F93)
	S163= GPRegs.Rdata2=>B.In                                   Premise(F94)
	S164= A.Out=>MDU.A                                          Premise(F95)
	S165= B.Out=>MDU.B                                          Premise(F96)
	S166= CU.Func=>MDU.Func                                     Premise(F97)
	S167= MDU.Out32_63=>MDUOut.In                               Premise(F98)
	S168= XER.SOOut=>ORGate.A                                   Premise(F99)
	S169= ORGate.A=so                                           Path(S117,S168)
	S170= MDU.OV=>ORGate.B                                      Premise(F100)
	S171= MDU.OV=>OVReg.In                                      Premise(F101)
	S172= ORGate.Out=>DR1bit.In                                 Premise(F102)
	S173= MDU.CMP=>DataCmb.A                                    Premise(F103)
	S174= XER.SOOut=>DataCmb.B                                  Premise(F104)
	S175= DataCmb.B=so                                          Path(S117,S174)
	S176= DataCmb.Out=>DR4bit.In                                Premise(F105)
	S177= IR.Out6_10=>GPRegs.WReg                               Premise(F106)
	S178= MDUOut.Out=>GPRegs.WData                              Premise(F107)
	S179= DR4bit.Out=>CRRegs.CR0In                              Premise(F108)
	S180= DR1bit.Out=>XER.SOIn                                  Premise(F109)
	S181= OVReg.Out=>XER.OVIn                                   Premise(F110)
	S182= CtrlPIDReg=0                                          Premise(F111)
	S183= [PIDReg]=pid                                          PIDReg-Hold(S65,S182)
	S184= CtrlIMMU=0                                            Premise(F112)
	S185= CtrlPC=0                                              Premise(F113)
	S186= CtrlPCInc=1                                           Premise(F114)
	S187= PC[Out]=addr+4                                        PC-Inc(S69,S185,S186)
	S188= PC[CIA]=addr                                          PC-Inc(S69,S185,S186)
	S189= CtrlIAddrReg=0                                        Premise(F115)
	S190= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S71,S189)
	S191= CtrlIMMUHitReg=0                                      Premise(F116)
	S192= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S73,S191)
	S193= CtrlICache=0                                          Premise(F117)
	S194= ICache[addr]={31,rT,rA,rB,1495}                       ICache-Hold(S75,S193)
	S195= CtrlICacheReg=0                                       Premise(F118)
	S196= [ICacheReg]={31,rT,rA,rB,1495}                        ICacheReg-Hold(S77,S195)
	S197= CtrlICacheHitReg=0                                    Premise(F119)
	S198= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S79,S197)
	S199= CtrlIMem=0                                            Premise(F120)
	S200= IMem[{pid,addr}]={31,rT,rA,rB,1495}                   IMem-Hold(S81,S199)
	S201= CtrlIRMux=0                                           Premise(F121)
	S202= CtrlIR=1                                              Premise(F122)
	S203= [IR]={31,rT,rA,rB,1495}                               IR-Write(S154,S202)
	S204= CtrlGPRegs=0                                          Premise(F123)
	S205= GPRegs[rA]=a                                          GPRegs-Hold(S85,S204)
	S206= GPRegs[rB]=b                                          GPRegs-Hold(S86,S204)
	S207= CtrlA=0                                               Premise(F124)
	S208= CtrlB=0                                               Premise(F125)
	S209= CtrlMDUOut=0                                          Premise(F126)
	S210= CtrlXERSO=0                                           Premise(F127)
	S211= XER[SO]=so                                            XER-SO-Hold(S91,S210)
	S212= CtrlXEROV=0                                           Premise(F128)
	S213= CtrlXERCA=0                                           Premise(F129)
	S214= CtrlOVReg=0                                           Premise(F130)
	S215= CtrlDR1bit=0                                          Premise(F131)
	S216= CtrlDR4bit=0                                          Premise(F132)
	S217= CtrlCRRegs=0                                          Premise(F133)
	S218= CtrlCRRegsCR0=0                                       Premise(F134)
	S219= CtrlCRRegsW4bitRegs=0                                 Premise(F135)
	S220= CtrlCRRegsW1bitRegs=0                                 Premise(F136)

ID	S221= PIDReg.Out=pid                                        PIDReg-Out(S183)
	S222= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S183)
	S223= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S183)
	S224= PC.Out=addr+4                                         PC-Out(S187)
	S225= PC.CIA=addr                                           PC-Out(S188)
	S226= PC.CIA31_28=addr[31:28]                               PC-Out(S188)
	S227= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S190)
	S228= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S190)
	S229= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S190)
	S230= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S192)
	S231= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S192)
	S232= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S192)
	S233= ICacheReg.Out={31,rT,rA,rB,1495}                      ICacheReg-Out(S196)
	S234= ICacheReg.Out26_31={31,rT,rA,rB,1495}[26:31]          ICacheReg-Out(S196)
	S235= ICacheReg.Out30_31={31,rT,rA,rB,1495}[30:31]          ICacheReg-Out(S196)
	S236= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S198)
	S237= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S198)
	S238= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S198)
	S239= IR.Out0_5=31                                          IR-Out(S203)
	S240= IR.Out6_10=rT                                         IR-Out(S203)
	S241= IR.Out11_15=rA                                        IR-Out(S203)
	S242= IR.Out16_20=rB                                        IR-Out(S203)
	S243= IR.Out21_31=1495                                      IR-Out(S203)
	S244= XER.SOOut=so                                          XER-SO-Out(S211)
	S245= PIDReg.Out=>IMMU.PID                                  Premise(F137)
	S246= IMMU.PID=pid                                          Path(S221,S245)
	S247= PC.Out=>IMMU.IEA                                      Premise(F138)
	S248= IMMU.IEA=addr+4                                       Path(S224,S247)
	S249= IMMU.Addr={pid,addr+4}                                IMMU-Search(S246,S248)
	S250= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S246,S248)
	S251= IMMU.Addr=>IAddrReg.In                                Premise(F139)
	S252= IAddrReg.In={pid,addr+4}                              Path(S249,S251)
	S253= IMMU.Hit=>IMMUHitReg.In                               Premise(F140)
	S254= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S250,S253)
	S255= PC.Out=>ICache.IEA                                    Premise(F141)
	S256= ICache.IEA=addr+4                                     Path(S224,S255)
	S257= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S256)
	S258= ICache.Out=>ICacheReg.In                              Premise(F142)
	S259= ICache.Hit=>ICacheHitReg.In                           Premise(F143)
	S260= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S257,S259)
	S261= IMMUHitReg.Out=>CU.IMemHit                            Premise(F144)
	S262= CU.IMemHit=IMMUHit(pid,addr)                          Path(S230,S261)
	S263= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F145)
	S264= CU.ICacheHit=ICacheHit(addr)                          Path(S236,S263)
	S265= IAddrReg.Out=>IMem.RAddr                              Premise(F146)
	S266= IMem.RAddr={pid,addr}                                 Path(S227,S265)
	S267= IMem.Out={31,rT,rA,rB,1495}                           IMem-Read(S266,S200)
	S268= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S266,S200)
	S269= IMem.Out=>IRMux.MemData                               Premise(F147)
	S270= IRMux.MemData={31,rT,rA,rB,1495}                      Path(S267,S269)
	S271= ICacheReg.Out=>IRMux.CacheData                        Premise(F148)
	S272= IRMux.CacheData={31,rT,rA,rB,1495}                    Path(S233,S271)
	S273= IRMux.Out={31,rT,rA,rB,1495}                          IRMux-Select(S270,S272)
	S274= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F149)
	S275= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S230,S274)
	S276= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F150)
	S277= IRMux.CacheSel=ICacheHit(addr)                        Path(S236,S276)
	S278= IRMux.Out=>IR.In                                      Premise(F151)
	S279= IR.In={31,rT,rA,rB,1495}                              Path(S273,S278)
	S280= IMem.MEM8WordOut=>ICache.WData                        Premise(F152)
	S281= ICache.WData=IMemGet8Word({pid,addr})                 Path(S268,S280)
	S282= PC.Out=>ICache.IEA                                    Premise(F153)
	S283= IR.Out0_5=>CU.Op                                      Premise(F154)
	S284= CU.Op=31                                              Path(S239,S283)
	S285= IR.Out11_15=>GPRegs.RReg1                             Premise(F155)
	S286= GPRegs.RReg1=rA                                       Path(S241,S285)
	S287= GPRegs.Rdata1=a                                       GPRegs-Read(S286,S205)
	S288= IR.Out16_20=>GPRegs.RReg2                             Premise(F156)
	S289= GPRegs.RReg2=rB                                       Path(S242,S288)
	S290= GPRegs.Rdata2=b                                       GPRegs-Read(S289,S206)
	S291= IR.Out21_31=>CU.IRFunc                                Premise(F157)
	S292= CU.IRFunc=1495                                        Path(S243,S291)
	S293= CU.Func=mdu_mul                                       CU(S284,S292)
	S294= GPRegs.Rdata1=>A.In                                   Premise(F158)
	S295= A.In=a                                                Path(S287,S294)
	S296= GPRegs.Rdata2=>B.In                                   Premise(F159)
	S297= B.In=b                                                Path(S290,S296)
	S298= A.Out=>MDU.A                                          Premise(F160)
	S299= B.Out=>MDU.B                                          Premise(F161)
	S300= CU.Func=>MDU.Func                                     Premise(F162)
	S301= MDU.Func=mdu_mul                                      Path(S293,S300)
	S302= MDU.Out32_63=>MDUOut.In                               Premise(F163)
	S303= XER.SOOut=>ORGate.A                                   Premise(F164)
	S304= ORGate.A=so                                           Path(S244,S303)
	S305= MDU.OV=>ORGate.B                                      Premise(F165)
	S306= MDU.OV=>OVReg.In                                      Premise(F166)
	S307= ORGate.Out=>DR1bit.In                                 Premise(F167)
	S308= MDU.CMP=>DataCmb.A                                    Premise(F168)
	S309= XER.SOOut=>DataCmb.B                                  Premise(F169)
	S310= DataCmb.B=so                                          Path(S244,S309)
	S311= DataCmb.Out=>DR4bit.In                                Premise(F170)
	S312= IR.Out6_10=>GPRegs.WReg                               Premise(F171)
	S313= GPRegs.WReg=rT                                        Path(S240,S312)
	S314= MDUOut.Out=>GPRegs.WData                              Premise(F172)
	S315= DR4bit.Out=>CRRegs.CR0In                              Premise(F173)
	S316= DR1bit.Out=>XER.SOIn                                  Premise(F174)
	S317= OVReg.Out=>XER.OVIn                                   Premise(F175)
	S318= CtrlPIDReg=0                                          Premise(F176)
	S319= [PIDReg]=pid                                          PIDReg-Hold(S183,S318)
	S320= CtrlIMMU=0                                            Premise(F177)
	S321= CtrlPC=0                                              Premise(F178)
	S322= CtrlPCInc=0                                           Premise(F179)
	S323= PC[CIA]=addr                                          PC-Hold(S188,S322)
	S324= PC[Out]=addr+4                                        PC-Hold(S187,S321,S322)
	S325= CtrlIAddrReg=0                                        Premise(F180)
	S326= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S190,S325)
	S327= CtrlIMMUHitReg=0                                      Premise(F181)
	S328= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S192,S327)
	S329= CtrlICache=0                                          Premise(F182)
	S330= ICache[addr]={31,rT,rA,rB,1495}                       ICache-Hold(S194,S329)
	S331= CtrlICacheReg=0                                       Premise(F183)
	S332= [ICacheReg]={31,rT,rA,rB,1495}                        ICacheReg-Hold(S196,S331)
	S333= CtrlICacheHitReg=0                                    Premise(F184)
	S334= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S198,S333)
	S335= CtrlIMem=0                                            Premise(F185)
	S336= IMem[{pid,addr}]={31,rT,rA,rB,1495}                   IMem-Hold(S200,S335)
	S337= CtrlIRMux=0                                           Premise(F186)
	S338= CtrlIR=0                                              Premise(F187)
	S339= [IR]={31,rT,rA,rB,1495}                               IR-Hold(S203,S338)
	S340= CtrlGPRegs=0                                          Premise(F188)
	S341= GPRegs[rA]=a                                          GPRegs-Hold(S205,S340)
	S342= GPRegs[rB]=b                                          GPRegs-Hold(S206,S340)
	S343= CtrlA=1                                               Premise(F189)
	S344= [A]=a                                                 A-Write(S295,S343)
	S345= CtrlB=1                                               Premise(F190)
	S346= [B]=b                                                 B-Write(S297,S345)
	S347= CtrlMDUOut=0                                          Premise(F191)
	S348= CtrlXERSO=0                                           Premise(F192)
	S349= XER[SO]=so                                            XER-SO-Hold(S211,S348)
	S350= CtrlXEROV=0                                           Premise(F193)
	S351= CtrlXERCA=0                                           Premise(F194)
	S352= CtrlOVReg=0                                           Premise(F195)
	S353= CtrlDR1bit=0                                          Premise(F196)
	S354= CtrlDR4bit=0                                          Premise(F197)
	S355= CtrlCRRegs=0                                          Premise(F198)
	S356= CtrlCRRegsCR0=0                                       Premise(F199)
	S357= CtrlCRRegsW4bitRegs=0                                 Premise(F200)
	S358= CtrlCRRegsW1bitRegs=0                                 Premise(F201)

EX	S359= PIDReg.Out=pid                                        PIDReg-Out(S319)
	S360= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S319)
	S361= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S319)
	S362= PC.CIA=addr                                           PC-Out(S323)
	S363= PC.CIA31_28=addr[31:28]                               PC-Out(S323)
	S364= PC.Out=addr+4                                         PC-Out(S324)
	S365= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S326)
	S366= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S326)
	S367= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S326)
	S368= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S328)
	S369= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S328)
	S370= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S328)
	S371= ICacheReg.Out={31,rT,rA,rB,1495}                      ICacheReg-Out(S332)
	S372= ICacheReg.Out26_31={31,rT,rA,rB,1495}[26:31]          ICacheReg-Out(S332)
	S373= ICacheReg.Out30_31={31,rT,rA,rB,1495}[30:31]          ICacheReg-Out(S332)
	S374= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S334)
	S375= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S334)
	S376= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S334)
	S377= IR.Out0_5=31                                          IR-Out(S339)
	S378= IR.Out6_10=rT                                         IR-Out(S339)
	S379= IR.Out11_15=rA                                        IR-Out(S339)
	S380= IR.Out16_20=rB                                        IR-Out(S339)
	S381= IR.Out21_31=1495                                      IR-Out(S339)
	S382= A.Out=a                                               A-Out(S344)
	S383= A.Out26_31=a[26:31]                                   A-Out(S344)
	S384= A.Out30_31=a[30:31]                                   A-Out(S344)
	S385= B.Out=b                                               B-Out(S346)
	S386= B.Out26_31=b[26:31]                                   B-Out(S346)
	S387= B.Out30_31=b[30:31]                                   B-Out(S346)
	S388= XER.SOOut=so                                          XER-SO-Out(S349)
	S389= PIDReg.Out=>IMMU.PID                                  Premise(F202)
	S390= IMMU.PID=pid                                          Path(S359,S389)
	S391= PC.Out=>IMMU.IEA                                      Premise(F203)
	S392= IMMU.IEA=addr+4                                       Path(S364,S391)
	S393= IMMU.Addr={pid,addr+4}                                IMMU-Search(S390,S392)
	S394= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S390,S392)
	S395= IMMU.Addr=>IAddrReg.In                                Premise(F204)
	S396= IAddrReg.In={pid,addr+4}                              Path(S393,S395)
	S397= IMMU.Hit=>IMMUHitReg.In                               Premise(F205)
	S398= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S394,S397)
	S399= PC.Out=>ICache.IEA                                    Premise(F206)
	S400= ICache.IEA=addr+4                                     Path(S364,S399)
	S401= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S400)
	S402= ICache.Out=>ICacheReg.In                              Premise(F207)
	S403= ICache.Hit=>ICacheHitReg.In                           Premise(F208)
	S404= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S401,S403)
	S405= IMMUHitReg.Out=>CU.IMemHit                            Premise(F209)
	S406= CU.IMemHit=IMMUHit(pid,addr)                          Path(S368,S405)
	S407= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F210)
	S408= CU.ICacheHit=ICacheHit(addr)                          Path(S374,S407)
	S409= IAddrReg.Out=>IMem.RAddr                              Premise(F211)
	S410= IMem.RAddr={pid,addr}                                 Path(S365,S409)
	S411= IMem.Out={31,rT,rA,rB,1495}                           IMem-Read(S410,S336)
	S412= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S410,S336)
	S413= IMem.Out=>IRMux.MemData                               Premise(F212)
	S414= IRMux.MemData={31,rT,rA,rB,1495}                      Path(S411,S413)
	S415= ICacheReg.Out=>IRMux.CacheData                        Premise(F213)
	S416= IRMux.CacheData={31,rT,rA,rB,1495}                    Path(S371,S415)
	S417= IRMux.Out={31,rT,rA,rB,1495}                          IRMux-Select(S414,S416)
	S418= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F214)
	S419= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S368,S418)
	S420= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F215)
	S421= IRMux.CacheSel=ICacheHit(addr)                        Path(S374,S420)
	S422= IRMux.Out=>IR.In                                      Premise(F216)
	S423= IR.In={31,rT,rA,rB,1495}                              Path(S417,S422)
	S424= IMem.MEM8WordOut=>ICache.WData                        Premise(F217)
	S425= ICache.WData=IMemGet8Word({pid,addr})                 Path(S412,S424)
	S426= PC.Out=>ICache.IEA                                    Premise(F218)
	S427= IR.Out0_5=>CU.Op                                      Premise(F219)
	S428= CU.Op=31                                              Path(S377,S427)
	S429= IR.Out11_15=>GPRegs.RReg1                             Premise(F220)
	S430= GPRegs.RReg1=rA                                       Path(S379,S429)
	S431= GPRegs.Rdata1=a                                       GPRegs-Read(S430,S341)
	S432= IR.Out16_20=>GPRegs.RReg2                             Premise(F221)
	S433= GPRegs.RReg2=rB                                       Path(S380,S432)
	S434= GPRegs.Rdata2=b                                       GPRegs-Read(S433,S342)
	S435= IR.Out21_31=>CU.IRFunc                                Premise(F222)
	S436= CU.IRFunc=1495                                        Path(S381,S435)
	S437= CU.Func=mdu_mul                                       CU(S428,S436)
	S438= GPRegs.Rdata1=>A.In                                   Premise(F223)
	S439= A.In=a                                                Path(S431,S438)
	S440= GPRegs.Rdata2=>B.In                                   Premise(F224)
	S441= B.In=b                                                Path(S434,S440)
	S442= A.Out=>MDU.A                                          Premise(F225)
	S443= MDU.A=a                                               Path(S382,S442)
	S444= B.Out=>MDU.B                                          Premise(F226)
	S445= MDU.B=b                                               Path(S385,S444)
	S446= CU.Func=>MDU.Func                                     Premise(F227)
	S447= MDU.Func=mdu_mul                                      Path(S437,S446)
	S448= MDU.Out0_31=(a×b)[0:31]                               MDU(S443,S445)
	S449= MDU.Out32_63=(a×b)[32:63]                             MDU(S443,S445)
	S450= MDU.Out16_47=(a×b)[16:47]                             MDU(S443,S445)
	S451= MDU.CMP=Compare0(a×b)                                 MDU(S443,S445)
	S452= MDU.OV=OverFlow(a×b)                                  MDU(S443,S445)
	S453= MDU.Out32_63=>MDUOut.In                               Premise(F228)
	S454= MDUOut.In=(a×b)[32:63]                                Path(S449,S453)
	S455= XER.SOOut=>ORGate.A                                   Premise(F229)
	S456= ORGate.A=so                                           Path(S388,S455)
	S457= MDU.OV=>ORGate.B                                      Premise(F230)
	S458= ORGate.B=OverFlow(a×b)                                Path(S452,S457)
	S459= ORGate.Out=so|OverFlow(a×b)                           ORGate(S456,S458)
	S460= MDU.OV=>OVReg.In                                      Premise(F231)
	S461= OVReg.In=OverFlow(a×b)                                Path(S452,S460)
	S462= ORGate.Out=>DR1bit.In                                 Premise(F232)
	S463= DR1bit.In=so|OverFlow(a×b)                            Path(S459,S462)
	S464= MDU.CMP=>DataCmb.A                                    Premise(F233)
	S465= DataCmb.A=Compare0(a×b)                               Path(S451,S464)
	S466= XER.SOOut=>DataCmb.B                                  Premise(F234)
	S467= DataCmb.B=so                                          Path(S388,S466)
	S468= DataCmb.Out={Compare0(a×b),so}                        DataCmb(S465,S467)
	S469= DataCmb.Out=>DR4bit.In                                Premise(F235)
	S470= DR4bit.In={Compare0(a×b),so}                          Path(S468,S469)
	S471= IR.Out6_10=>GPRegs.WReg                               Premise(F236)
	S472= GPRegs.WReg=rT                                        Path(S378,S471)
	S473= MDUOut.Out=>GPRegs.WData                              Premise(F237)
	S474= DR4bit.Out=>CRRegs.CR0In                              Premise(F238)
	S475= DR1bit.Out=>XER.SOIn                                  Premise(F239)
	S476= OVReg.Out=>XER.OVIn                                   Premise(F240)
	S477= CtrlPIDReg=0                                          Premise(F241)
	S478= [PIDReg]=pid                                          PIDReg-Hold(S319,S477)
	S479= CtrlIMMU=0                                            Premise(F242)
	S480= CtrlPC=0                                              Premise(F243)
	S481= CtrlPCInc=0                                           Premise(F244)
	S482= PC[CIA]=addr                                          PC-Hold(S323,S481)
	S483= PC[Out]=addr+4                                        PC-Hold(S324,S480,S481)
	S484= CtrlIAddrReg=0                                        Premise(F245)
	S485= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S326,S484)
	S486= CtrlIMMUHitReg=0                                      Premise(F246)
	S487= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S328,S486)
	S488= CtrlICache=0                                          Premise(F247)
	S489= ICache[addr]={31,rT,rA,rB,1495}                       ICache-Hold(S330,S488)
	S490= CtrlICacheReg=0                                       Premise(F248)
	S491= [ICacheReg]={31,rT,rA,rB,1495}                        ICacheReg-Hold(S332,S490)
	S492= CtrlICacheHitReg=0                                    Premise(F249)
	S493= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S334,S492)
	S494= CtrlIMem=0                                            Premise(F250)
	S495= IMem[{pid,addr}]={31,rT,rA,rB,1495}                   IMem-Hold(S336,S494)
	S496= CtrlIRMux=0                                           Premise(F251)
	S497= CtrlIR=0                                              Premise(F252)
	S498= [IR]={31,rT,rA,rB,1495}                               IR-Hold(S339,S497)
	S499= CtrlGPRegs=0                                          Premise(F253)
	S500= GPRegs[rA]=a                                          GPRegs-Hold(S341,S499)
	S501= GPRegs[rB]=b                                          GPRegs-Hold(S342,S499)
	S502= CtrlA=0                                               Premise(F254)
	S503= [A]=a                                                 A-Hold(S344,S502)
	S504= CtrlB=0                                               Premise(F255)
	S505= [B]=b                                                 B-Hold(S346,S504)
	S506= CtrlMDUOut=1                                          Premise(F256)
	S507= [MDUOut]=(a×b)[32:63]                                 MDUOut-Write(S454,S506)
	S508= CtrlXERSO=0                                           Premise(F257)
	S509= XER[SO]=so                                            XER-SO-Hold(S349,S508)
	S510= CtrlXEROV=0                                           Premise(F258)
	S511= CtrlXERCA=0                                           Premise(F259)
	S512= CtrlOVReg=1                                           Premise(F260)
	S513= [OVReg]=OverFlow(a×b)                                 OVReg-Write(S461,S512)
	S514= CtrlDR1bit=1                                          Premise(F261)
	S515= [DR1bit]=so|OverFlow(a×b)                             DR1bit-Write(S463,S514)
	S516= CtrlDR4bit=1                                          Premise(F262)
	S517= [DR4bit]={Compare0(a×b),so}                           DR4bit-Write(S470,S516)
	S518= CtrlCRRegs=0                                          Premise(F263)
	S519= CtrlCRRegsCR0=0                                       Premise(F264)
	S520= CtrlCRRegsW4bitRegs=0                                 Premise(F265)
	S521= CtrlCRRegsW1bitRegs=0                                 Premise(F266)

MEM	S522= PIDReg.Out=pid                                        PIDReg-Out(S478)
	S523= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S478)
	S524= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S478)
	S525= PC.CIA=addr                                           PC-Out(S482)
	S526= PC.CIA31_28=addr[31:28]                               PC-Out(S482)
	S527= PC.Out=addr+4                                         PC-Out(S483)
	S528= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S485)
	S529= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S485)
	S530= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S485)
	S531= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S487)
	S532= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S487)
	S533= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S487)
	S534= ICacheReg.Out={31,rT,rA,rB,1495}                      ICacheReg-Out(S491)
	S535= ICacheReg.Out26_31={31,rT,rA,rB,1495}[26:31]          ICacheReg-Out(S491)
	S536= ICacheReg.Out30_31={31,rT,rA,rB,1495}[30:31]          ICacheReg-Out(S491)
	S537= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S493)
	S538= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S493)
	S539= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S493)
	S540= IR.Out0_5=31                                          IR-Out(S498)
	S541= IR.Out6_10=rT                                         IR-Out(S498)
	S542= IR.Out11_15=rA                                        IR-Out(S498)
	S543= IR.Out16_20=rB                                        IR-Out(S498)
	S544= IR.Out21_31=1495                                      IR-Out(S498)
	S545= A.Out=a                                               A-Out(S503)
	S546= A.Out26_31=a[26:31]                                   A-Out(S503)
	S547= A.Out30_31=a[30:31]                                   A-Out(S503)
	S548= B.Out=b                                               B-Out(S505)
	S549= B.Out26_31=b[26:31]                                   B-Out(S505)
	S550= B.Out30_31=b[30:31]                                   B-Out(S505)
	S551= MDUOut.Out=(a×b)[32:63]                               MDUOut-Out(S507)
	S552= MDUOut.Out26_31=(a×b)[32:63][26:31]                   MDUOut-Out(S507)
	S553= MDUOut.Out30_31=(a×b)[32:63][30:31]                   MDUOut-Out(S507)
	S554= XER.SOOut=so                                          XER-SO-Out(S509)
	S555= OVReg.Out=OverFlow(a×b)                               OVReg-Out(S513)
	S556= OVReg.Out26_31=OverFlow(a×b)[26:31]                   OVReg-Out(S513)
	S557= OVReg.Out30_31=OverFlow(a×b)[30:31]                   OVReg-Out(S513)
	S558= DR1bit.Out=so|OverFlow(a×b)                           DR1bit-Out(S515)
	S559= DR1bit.Out26_31=so|OverFlow(a×b)[26:31]               DR1bit-Out(S515)
	S560= DR1bit.Out30_31=so|OverFlow(a×b)[30:31]               DR1bit-Out(S515)
	S561= DR4bit.Out={Compare0(a×b),so}                         DR4bit-Out(S517)
	S562= DR4bit.Out26_31={Compare0(a×b),so}[26:31]             DR4bit-Out(S517)
	S563= DR4bit.Out30_31={Compare0(a×b),so}[30:31]             DR4bit-Out(S517)
	S564= PIDReg.Out=>IMMU.PID                                  Premise(F267)
	S565= IMMU.PID=pid                                          Path(S522,S564)
	S566= PC.Out=>IMMU.IEA                                      Premise(F268)
	S567= IMMU.IEA=addr+4                                       Path(S527,S566)
	S568= IMMU.Addr={pid,addr+4}                                IMMU-Search(S565,S567)
	S569= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S565,S567)
	S570= IMMU.Addr=>IAddrReg.In                                Premise(F269)
	S571= IAddrReg.In={pid,addr+4}                              Path(S568,S570)
	S572= IMMU.Hit=>IMMUHitReg.In                               Premise(F270)
	S573= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S569,S572)
	S574= PC.Out=>ICache.IEA                                    Premise(F271)
	S575= ICache.IEA=addr+4                                     Path(S527,S574)
	S576= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S575)
	S577= ICache.Out=>ICacheReg.In                              Premise(F272)
	S578= ICache.Hit=>ICacheHitReg.In                           Premise(F273)
	S579= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S576,S578)
	S580= IMMUHitReg.Out=>CU.IMemHit                            Premise(F274)
	S581= CU.IMemHit=IMMUHit(pid,addr)                          Path(S531,S580)
	S582= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F275)
	S583= CU.ICacheHit=ICacheHit(addr)                          Path(S537,S582)
	S584= IAddrReg.Out=>IMem.RAddr                              Premise(F276)
	S585= IMem.RAddr={pid,addr}                                 Path(S528,S584)
	S586= IMem.Out={31,rT,rA,rB,1495}                           IMem-Read(S585,S495)
	S587= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S585,S495)
	S588= IMem.Out=>IRMux.MemData                               Premise(F277)
	S589= IRMux.MemData={31,rT,rA,rB,1495}                      Path(S586,S588)
	S590= ICacheReg.Out=>IRMux.CacheData                        Premise(F278)
	S591= IRMux.CacheData={31,rT,rA,rB,1495}                    Path(S534,S590)
	S592= IRMux.Out={31,rT,rA,rB,1495}                          IRMux-Select(S589,S591)
	S593= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F279)
	S594= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S531,S593)
	S595= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F280)
	S596= IRMux.CacheSel=ICacheHit(addr)                        Path(S537,S595)
	S597= IRMux.Out=>IR.In                                      Premise(F281)
	S598= IR.In={31,rT,rA,rB,1495}                              Path(S592,S597)
	S599= IMem.MEM8WordOut=>ICache.WData                        Premise(F282)
	S600= ICache.WData=IMemGet8Word({pid,addr})                 Path(S587,S599)
	S601= PC.Out=>ICache.IEA                                    Premise(F283)
	S602= IR.Out0_5=>CU.Op                                      Premise(F284)
	S603= CU.Op=31                                              Path(S540,S602)
	S604= IR.Out11_15=>GPRegs.RReg1                             Premise(F285)
	S605= GPRegs.RReg1=rA                                       Path(S542,S604)
	S606= GPRegs.Rdata1=a                                       GPRegs-Read(S605,S500)
	S607= IR.Out16_20=>GPRegs.RReg2                             Premise(F286)
	S608= GPRegs.RReg2=rB                                       Path(S543,S607)
	S609= GPRegs.Rdata2=b                                       GPRegs-Read(S608,S501)
	S610= IR.Out21_31=>CU.IRFunc                                Premise(F287)
	S611= CU.IRFunc=1495                                        Path(S544,S610)
	S612= CU.Func=mdu_mul                                       CU(S603,S611)
	S613= GPRegs.Rdata1=>A.In                                   Premise(F288)
	S614= A.In=a                                                Path(S606,S613)
	S615= GPRegs.Rdata2=>B.In                                   Premise(F289)
	S616= B.In=b                                                Path(S609,S615)
	S617= A.Out=>MDU.A                                          Premise(F290)
	S618= MDU.A=a                                               Path(S545,S617)
	S619= B.Out=>MDU.B                                          Premise(F291)
	S620= MDU.B=b                                               Path(S548,S619)
	S621= CU.Func=>MDU.Func                                     Premise(F292)
	S622= MDU.Func=mdu_mul                                      Path(S612,S621)
	S623= MDU.Out0_31=(a×b)[0:31]                               MDU(S618,S620)
	S624= MDU.Out32_63=(a×b)[32:63]                             MDU(S618,S620)
	S625= MDU.Out16_47=(a×b)[16:47]                             MDU(S618,S620)
	S626= MDU.CMP=Compare0(a×b)                                 MDU(S618,S620)
	S627= MDU.OV=OverFlow(a×b)                                  MDU(S618,S620)
	S628= MDU.Out32_63=>MDUOut.In                               Premise(F293)
	S629= MDUOut.In=(a×b)[32:63]                                Path(S624,S628)
	S630= XER.SOOut=>ORGate.A                                   Premise(F294)
	S631= ORGate.A=so                                           Path(S554,S630)
	S632= MDU.OV=>ORGate.B                                      Premise(F295)
	S633= ORGate.B=OverFlow(a×b)                                Path(S627,S632)
	S634= ORGate.Out=so|OverFlow(a×b)                           ORGate(S631,S633)
	S635= MDU.OV=>OVReg.In                                      Premise(F296)
	S636= OVReg.In=OverFlow(a×b)                                Path(S627,S635)
	S637= ORGate.Out=>DR1bit.In                                 Premise(F297)
	S638= DR1bit.In=so|OverFlow(a×b)                            Path(S634,S637)
	S639= MDU.CMP=>DataCmb.A                                    Premise(F298)
	S640= DataCmb.A=Compare0(a×b)                               Path(S626,S639)
	S641= XER.SOOut=>DataCmb.B                                  Premise(F299)
	S642= DataCmb.B=so                                          Path(S554,S641)
	S643= DataCmb.Out={Compare0(a×b),so}                        DataCmb(S640,S642)
	S644= DataCmb.Out=>DR4bit.In                                Premise(F300)
	S645= DR4bit.In={Compare0(a×b),so}                          Path(S643,S644)
	S646= IR.Out6_10=>GPRegs.WReg                               Premise(F301)
	S647= GPRegs.WReg=rT                                        Path(S541,S646)
	S648= MDUOut.Out=>GPRegs.WData                              Premise(F302)
	S649= GPRegs.WData=(a×b)[32:63]                             Path(S551,S648)
	S650= DR4bit.Out=>CRRegs.CR0In                              Premise(F303)
	S651= CRRegs.CR0In={Compare0(a×b),so}                       Path(S561,S650)
	S652= DR1bit.Out=>XER.SOIn                                  Premise(F304)
	S653= XER.SOIn=so|OverFlow(a×b)                             Path(S558,S652)
	S654= OVReg.Out=>XER.OVIn                                   Premise(F305)
	S655= XER.OVIn=OverFlow(a×b)                                Path(S555,S654)
	S656= CtrlPIDReg=0                                          Premise(F306)
	S657= [PIDReg]=pid                                          PIDReg-Hold(S478,S656)
	S658= CtrlIMMU=0                                            Premise(F307)
	S659= CtrlPC=0                                              Premise(F308)
	S660= CtrlPCInc=0                                           Premise(F309)
	S661= PC[CIA]=addr                                          PC-Hold(S482,S660)
	S662= PC[Out]=addr+4                                        PC-Hold(S483,S659,S660)
	S663= CtrlIAddrReg=0                                        Premise(F310)
	S664= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S485,S663)
	S665= CtrlIMMUHitReg=0                                      Premise(F311)
	S666= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S487,S665)
	S667= CtrlICache=0                                          Premise(F312)
	S668= ICache[addr]={31,rT,rA,rB,1495}                       ICache-Hold(S489,S667)
	S669= CtrlICacheReg=0                                       Premise(F313)
	S670= [ICacheReg]={31,rT,rA,rB,1495}                        ICacheReg-Hold(S491,S669)
	S671= CtrlICacheHitReg=0                                    Premise(F314)
	S672= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S493,S671)
	S673= CtrlIMem=0                                            Premise(F315)
	S674= IMem[{pid,addr}]={31,rT,rA,rB,1495}                   IMem-Hold(S495,S673)
	S675= CtrlIRMux=0                                           Premise(F316)
	S676= CtrlIR=0                                              Premise(F317)
	S677= [IR]={31,rT,rA,rB,1495}                               IR-Hold(S498,S676)
	S678= CtrlGPRegs=0                                          Premise(F318)
	S679= GPRegs[rA]=a                                          GPRegs-Hold(S500,S678)
	S680= GPRegs[rB]=b                                          GPRegs-Hold(S501,S678)
	S681= CtrlA=0                                               Premise(F319)
	S682= [A]=a                                                 A-Hold(S503,S681)
	S683= CtrlB=0                                               Premise(F320)
	S684= [B]=b                                                 B-Hold(S505,S683)
	S685= CtrlMDUOut=0                                          Premise(F321)
	S686= [MDUOut]=(a×b)[32:63]                                 MDUOut-Hold(S507,S685)
	S687= CtrlXERSO=0                                           Premise(F322)
	S688= XER[SO]=so                                            XER-SO-Hold(S509,S687)
	S689= CtrlXEROV=0                                           Premise(F323)
	S690= CtrlXERCA=0                                           Premise(F324)
	S691= CtrlOVReg=0                                           Premise(F325)
	S692= [OVReg]=OverFlow(a×b)                                 OVReg-Hold(S513,S691)
	S693= CtrlDR1bit=0                                          Premise(F326)
	S694= [DR1bit]=so|OverFlow(a×b)                             DR1bit-Hold(S515,S693)
	S695= CtrlDR4bit=0                                          Premise(F327)
	S696= [DR4bit]={Compare0(a×b),so}                           DR4bit-Hold(S517,S695)
	S697= CtrlCRRegs=0                                          Premise(F328)
	S698= CtrlCRRegsCR0=0                                       Premise(F329)
	S699= CtrlCRRegsW4bitRegs=0                                 Premise(F330)
	S700= CtrlCRRegsW1bitRegs=0                                 Premise(F331)

DMMU1	S701= PIDReg.Out=pid                                        PIDReg-Out(S657)
	S702= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S657)
	S703= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S657)
	S704= PC.CIA=addr                                           PC-Out(S661)
	S705= PC.CIA31_28=addr[31:28]                               PC-Out(S661)
	S706= PC.Out=addr+4                                         PC-Out(S662)
	S707= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S664)
	S708= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S664)
	S709= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S664)
	S710= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S666)
	S711= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S666)
	S712= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S666)
	S713= ICacheReg.Out={31,rT,rA,rB,1495}                      ICacheReg-Out(S670)
	S714= ICacheReg.Out26_31={31,rT,rA,rB,1495}[26:31]          ICacheReg-Out(S670)
	S715= ICacheReg.Out30_31={31,rT,rA,rB,1495}[30:31]          ICacheReg-Out(S670)
	S716= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S672)
	S717= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S672)
	S718= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S672)
	S719= IR.Out0_5=31                                          IR-Out(S677)
	S720= IR.Out6_10=rT                                         IR-Out(S677)
	S721= IR.Out11_15=rA                                        IR-Out(S677)
	S722= IR.Out16_20=rB                                        IR-Out(S677)
	S723= IR.Out21_31=1495                                      IR-Out(S677)
	S724= A.Out=a                                               A-Out(S682)
	S725= A.Out26_31=a[26:31]                                   A-Out(S682)
	S726= A.Out30_31=a[30:31]                                   A-Out(S682)
	S727= B.Out=b                                               B-Out(S684)
	S728= B.Out26_31=b[26:31]                                   B-Out(S684)
	S729= B.Out30_31=b[30:31]                                   B-Out(S684)
	S730= MDUOut.Out=(a×b)[32:63]                               MDUOut-Out(S686)
	S731= MDUOut.Out26_31=(a×b)[32:63][26:31]                   MDUOut-Out(S686)
	S732= MDUOut.Out30_31=(a×b)[32:63][30:31]                   MDUOut-Out(S686)
	S733= XER.SOOut=so                                          XER-SO-Out(S688)
	S734= OVReg.Out=OverFlow(a×b)                               OVReg-Out(S692)
	S735= OVReg.Out26_31=OverFlow(a×b)[26:31]                   OVReg-Out(S692)
	S736= OVReg.Out30_31=OverFlow(a×b)[30:31]                   OVReg-Out(S692)
	S737= DR1bit.Out=so|OverFlow(a×b)                           DR1bit-Out(S694)
	S738= DR1bit.Out26_31=so|OverFlow(a×b)[26:31]               DR1bit-Out(S694)
	S739= DR1bit.Out30_31=so|OverFlow(a×b)[30:31]               DR1bit-Out(S694)
	S740= DR4bit.Out={Compare0(a×b),so}                         DR4bit-Out(S696)
	S741= DR4bit.Out26_31={Compare0(a×b),so}[26:31]             DR4bit-Out(S696)
	S742= DR4bit.Out30_31={Compare0(a×b),so}[30:31]             DR4bit-Out(S696)
	S743= PIDReg.Out=>IMMU.PID                                  Premise(F332)
	S744= IMMU.PID=pid                                          Path(S701,S743)
	S745= PC.Out=>IMMU.IEA                                      Premise(F333)
	S746= IMMU.IEA=addr+4                                       Path(S706,S745)
	S747= IMMU.Addr={pid,addr+4}                                IMMU-Search(S744,S746)
	S748= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S744,S746)
	S749= IMMU.Addr=>IAddrReg.In                                Premise(F334)
	S750= IAddrReg.In={pid,addr+4}                              Path(S747,S749)
	S751= IMMU.Hit=>IMMUHitReg.In                               Premise(F335)
	S752= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S748,S751)
	S753= PC.Out=>ICache.IEA                                    Premise(F336)
	S754= ICache.IEA=addr+4                                     Path(S706,S753)
	S755= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S754)
	S756= ICache.Out=>ICacheReg.In                              Premise(F337)
	S757= ICache.Hit=>ICacheHitReg.In                           Premise(F338)
	S758= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S755,S757)
	S759= IMMUHitReg.Out=>CU.IMemHit                            Premise(F339)
	S760= CU.IMemHit=IMMUHit(pid,addr)                          Path(S710,S759)
	S761= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F340)
	S762= CU.ICacheHit=ICacheHit(addr)                          Path(S716,S761)
	S763= IAddrReg.Out=>IMem.RAddr                              Premise(F341)
	S764= IMem.RAddr={pid,addr}                                 Path(S707,S763)
	S765= IMem.Out={31,rT,rA,rB,1495}                           IMem-Read(S764,S674)
	S766= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S764,S674)
	S767= IMem.Out=>IRMux.MemData                               Premise(F342)
	S768= IRMux.MemData={31,rT,rA,rB,1495}                      Path(S765,S767)
	S769= ICacheReg.Out=>IRMux.CacheData                        Premise(F343)
	S770= IRMux.CacheData={31,rT,rA,rB,1495}                    Path(S713,S769)
	S771= IRMux.Out={31,rT,rA,rB,1495}                          IRMux-Select(S768,S770)
	S772= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F344)
	S773= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S710,S772)
	S774= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F345)
	S775= IRMux.CacheSel=ICacheHit(addr)                        Path(S716,S774)
	S776= IRMux.Out=>IR.In                                      Premise(F346)
	S777= IR.In={31,rT,rA,rB,1495}                              Path(S771,S776)
	S778= IMem.MEM8WordOut=>ICache.WData                        Premise(F347)
	S779= ICache.WData=IMemGet8Word({pid,addr})                 Path(S766,S778)
	S780= PC.Out=>ICache.IEA                                    Premise(F348)
	S781= IR.Out0_5=>CU.Op                                      Premise(F349)
	S782= CU.Op=31                                              Path(S719,S781)
	S783= IR.Out11_15=>GPRegs.RReg1                             Premise(F350)
	S784= GPRegs.RReg1=rA                                       Path(S721,S783)
	S785= GPRegs.Rdata1=a                                       GPRegs-Read(S784,S679)
	S786= IR.Out16_20=>GPRegs.RReg2                             Premise(F351)
	S787= GPRegs.RReg2=rB                                       Path(S722,S786)
	S788= GPRegs.Rdata2=b                                       GPRegs-Read(S787,S680)
	S789= IR.Out21_31=>CU.IRFunc                                Premise(F352)
	S790= CU.IRFunc=1495                                        Path(S723,S789)
	S791= CU.Func=mdu_mul                                       CU(S782,S790)
	S792= GPRegs.Rdata1=>A.In                                   Premise(F353)
	S793= A.In=a                                                Path(S785,S792)
	S794= GPRegs.Rdata2=>B.In                                   Premise(F354)
	S795= B.In=b                                                Path(S788,S794)
	S796= A.Out=>MDU.A                                          Premise(F355)
	S797= MDU.A=a                                               Path(S724,S796)
	S798= B.Out=>MDU.B                                          Premise(F356)
	S799= MDU.B=b                                               Path(S727,S798)
	S800= CU.Func=>MDU.Func                                     Premise(F357)
	S801= MDU.Func=mdu_mul                                      Path(S791,S800)
	S802= MDU.Out0_31=(a×b)[0:31]                               MDU(S797,S799)
	S803= MDU.Out32_63=(a×b)[32:63]                             MDU(S797,S799)
	S804= MDU.Out16_47=(a×b)[16:47]                             MDU(S797,S799)
	S805= MDU.CMP=Compare0(a×b)                                 MDU(S797,S799)
	S806= MDU.OV=OverFlow(a×b)                                  MDU(S797,S799)
	S807= MDU.Out32_63=>MDUOut.In                               Premise(F358)
	S808= MDUOut.In=(a×b)[32:63]                                Path(S803,S807)
	S809= XER.SOOut=>ORGate.A                                   Premise(F359)
	S810= ORGate.A=so                                           Path(S733,S809)
	S811= MDU.OV=>ORGate.B                                      Premise(F360)
	S812= ORGate.B=OverFlow(a×b)                                Path(S806,S811)
	S813= ORGate.Out=so|OverFlow(a×b)                           ORGate(S810,S812)
	S814= MDU.OV=>OVReg.In                                      Premise(F361)
	S815= OVReg.In=OverFlow(a×b)                                Path(S806,S814)
	S816= ORGate.Out=>DR1bit.In                                 Premise(F362)
	S817= DR1bit.In=so|OverFlow(a×b)                            Path(S813,S816)
	S818= MDU.CMP=>DataCmb.A                                    Premise(F363)
	S819= DataCmb.A=Compare0(a×b)                               Path(S805,S818)
	S820= XER.SOOut=>DataCmb.B                                  Premise(F364)
	S821= DataCmb.B=so                                          Path(S733,S820)
	S822= DataCmb.Out={Compare0(a×b),so}                        DataCmb(S819,S821)
	S823= DataCmb.Out=>DR4bit.In                                Premise(F365)
	S824= DR4bit.In={Compare0(a×b),so}                          Path(S822,S823)
	S825= IR.Out6_10=>GPRegs.WReg                               Premise(F366)
	S826= GPRegs.WReg=rT                                        Path(S720,S825)
	S827= MDUOut.Out=>GPRegs.WData                              Premise(F367)
	S828= GPRegs.WData=(a×b)[32:63]                             Path(S730,S827)
	S829= DR4bit.Out=>CRRegs.CR0In                              Premise(F368)
	S830= CRRegs.CR0In={Compare0(a×b),so}                       Path(S740,S829)
	S831= DR1bit.Out=>XER.SOIn                                  Premise(F369)
	S832= XER.SOIn=so|OverFlow(a×b)                             Path(S737,S831)
	S833= OVReg.Out=>XER.OVIn                                   Premise(F370)
	S834= XER.OVIn=OverFlow(a×b)                                Path(S734,S833)
	S835= CtrlPIDReg=0                                          Premise(F371)
	S836= [PIDReg]=pid                                          PIDReg-Hold(S657,S835)
	S837= CtrlIMMU=0                                            Premise(F372)
	S838= CtrlPC=0                                              Premise(F373)
	S839= CtrlPCInc=0                                           Premise(F374)
	S840= PC[CIA]=addr                                          PC-Hold(S661,S839)
	S841= PC[Out]=addr+4                                        PC-Hold(S662,S838,S839)
	S842= CtrlIAddrReg=0                                        Premise(F375)
	S843= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S664,S842)
	S844= CtrlIMMUHitReg=0                                      Premise(F376)
	S845= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S666,S844)
	S846= CtrlICache=0                                          Premise(F377)
	S847= ICache[addr]={31,rT,rA,rB,1495}                       ICache-Hold(S668,S846)
	S848= CtrlICacheReg=0                                       Premise(F378)
	S849= [ICacheReg]={31,rT,rA,rB,1495}                        ICacheReg-Hold(S670,S848)
	S850= CtrlICacheHitReg=0                                    Premise(F379)
	S851= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S672,S850)
	S852= CtrlIMem=0                                            Premise(F380)
	S853= IMem[{pid,addr}]={31,rT,rA,rB,1495}                   IMem-Hold(S674,S852)
	S854= CtrlIRMux=0                                           Premise(F381)
	S855= CtrlIR=0                                              Premise(F382)
	S856= [IR]={31,rT,rA,rB,1495}                               IR-Hold(S677,S855)
	S857= CtrlGPRegs=0                                          Premise(F383)
	S858= GPRegs[rA]=a                                          GPRegs-Hold(S679,S857)
	S859= GPRegs[rB]=b                                          GPRegs-Hold(S680,S857)
	S860= CtrlA=0                                               Premise(F384)
	S861= [A]=a                                                 A-Hold(S682,S860)
	S862= CtrlB=0                                               Premise(F385)
	S863= [B]=b                                                 B-Hold(S684,S862)
	S864= CtrlMDUOut=0                                          Premise(F386)
	S865= [MDUOut]=(a×b)[32:63]                                 MDUOut-Hold(S686,S864)
	S866= CtrlXERSO=0                                           Premise(F387)
	S867= XER[SO]=so                                            XER-SO-Hold(S688,S866)
	S868= CtrlXEROV=0                                           Premise(F388)
	S869= CtrlXERCA=0                                           Premise(F389)
	S870= CtrlOVReg=0                                           Premise(F390)
	S871= [OVReg]=OverFlow(a×b)                                 OVReg-Hold(S692,S870)
	S872= CtrlDR1bit=0                                          Premise(F391)
	S873= [DR1bit]=so|OverFlow(a×b)                             DR1bit-Hold(S694,S872)
	S874= CtrlDR4bit=0                                          Premise(F392)
	S875= [DR4bit]={Compare0(a×b),so}                           DR4bit-Hold(S696,S874)
	S876= CtrlCRRegs=0                                          Premise(F393)
	S877= CtrlCRRegsCR0=0                                       Premise(F394)
	S878= CtrlCRRegsW4bitRegs=0                                 Premise(F395)
	S879= CtrlCRRegsW1bitRegs=0                                 Premise(F396)

DMMU2	S880= PIDReg.Out=pid                                        PIDReg-Out(S836)
	S881= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S836)
	S882= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S836)
	S883= PC.CIA=addr                                           PC-Out(S840)
	S884= PC.CIA31_28=addr[31:28]                               PC-Out(S840)
	S885= PC.Out=addr+4                                         PC-Out(S841)
	S886= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S843)
	S887= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S843)
	S888= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S843)
	S889= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S845)
	S890= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S845)
	S891= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S845)
	S892= ICacheReg.Out={31,rT,rA,rB,1495}                      ICacheReg-Out(S849)
	S893= ICacheReg.Out26_31={31,rT,rA,rB,1495}[26:31]          ICacheReg-Out(S849)
	S894= ICacheReg.Out30_31={31,rT,rA,rB,1495}[30:31]          ICacheReg-Out(S849)
	S895= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S851)
	S896= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S851)
	S897= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S851)
	S898= IR.Out0_5=31                                          IR-Out(S856)
	S899= IR.Out6_10=rT                                         IR-Out(S856)
	S900= IR.Out11_15=rA                                        IR-Out(S856)
	S901= IR.Out16_20=rB                                        IR-Out(S856)
	S902= IR.Out21_31=1495                                      IR-Out(S856)
	S903= A.Out=a                                               A-Out(S861)
	S904= A.Out26_31=a[26:31]                                   A-Out(S861)
	S905= A.Out30_31=a[30:31]                                   A-Out(S861)
	S906= B.Out=b                                               B-Out(S863)
	S907= B.Out26_31=b[26:31]                                   B-Out(S863)
	S908= B.Out30_31=b[30:31]                                   B-Out(S863)
	S909= MDUOut.Out=(a×b)[32:63]                               MDUOut-Out(S865)
	S910= MDUOut.Out26_31=(a×b)[32:63][26:31]                   MDUOut-Out(S865)
	S911= MDUOut.Out30_31=(a×b)[32:63][30:31]                   MDUOut-Out(S865)
	S912= XER.SOOut=so                                          XER-SO-Out(S867)
	S913= OVReg.Out=OverFlow(a×b)                               OVReg-Out(S871)
	S914= OVReg.Out26_31=OverFlow(a×b)[26:31]                   OVReg-Out(S871)
	S915= OVReg.Out30_31=OverFlow(a×b)[30:31]                   OVReg-Out(S871)
	S916= DR1bit.Out=so|OverFlow(a×b)                           DR1bit-Out(S873)
	S917= DR1bit.Out26_31=so|OverFlow(a×b)[26:31]               DR1bit-Out(S873)
	S918= DR1bit.Out30_31=so|OverFlow(a×b)[30:31]               DR1bit-Out(S873)
	S919= DR4bit.Out={Compare0(a×b),so}                         DR4bit-Out(S875)
	S920= DR4bit.Out26_31={Compare0(a×b),so}[26:31]             DR4bit-Out(S875)
	S921= DR4bit.Out30_31={Compare0(a×b),so}[30:31]             DR4bit-Out(S875)
	S922= PIDReg.Out=>IMMU.PID                                  Premise(F397)
	S923= IMMU.PID=pid                                          Path(S880,S922)
	S924= PC.Out=>IMMU.IEA                                      Premise(F398)
	S925= IMMU.IEA=addr+4                                       Path(S885,S924)
	S926= IMMU.Addr={pid,addr+4}                                IMMU-Search(S923,S925)
	S927= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S923,S925)
	S928= IMMU.Addr=>IAddrReg.In                                Premise(F399)
	S929= IAddrReg.In={pid,addr+4}                              Path(S926,S928)
	S930= IMMU.Hit=>IMMUHitReg.In                               Premise(F400)
	S931= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S927,S930)
	S932= PC.Out=>ICache.IEA                                    Premise(F401)
	S933= ICache.IEA=addr+4                                     Path(S885,S932)
	S934= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S933)
	S935= ICache.Out=>ICacheReg.In                              Premise(F402)
	S936= ICache.Hit=>ICacheHitReg.In                           Premise(F403)
	S937= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S934,S936)
	S938= IMMUHitReg.Out=>CU.IMemHit                            Premise(F404)
	S939= CU.IMemHit=IMMUHit(pid,addr)                          Path(S889,S938)
	S940= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F405)
	S941= CU.ICacheHit=ICacheHit(addr)                          Path(S895,S940)
	S942= IAddrReg.Out=>IMem.RAddr                              Premise(F406)
	S943= IMem.RAddr={pid,addr}                                 Path(S886,S942)
	S944= IMem.Out={31,rT,rA,rB,1495}                           IMem-Read(S943,S853)
	S945= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S943,S853)
	S946= IMem.Out=>IRMux.MemData                               Premise(F407)
	S947= IRMux.MemData={31,rT,rA,rB,1495}                      Path(S944,S946)
	S948= ICacheReg.Out=>IRMux.CacheData                        Premise(F408)
	S949= IRMux.CacheData={31,rT,rA,rB,1495}                    Path(S892,S948)
	S950= IRMux.Out={31,rT,rA,rB,1495}                          IRMux-Select(S947,S949)
	S951= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F409)
	S952= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S889,S951)
	S953= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F410)
	S954= IRMux.CacheSel=ICacheHit(addr)                        Path(S895,S953)
	S955= IRMux.Out=>IR.In                                      Premise(F411)
	S956= IR.In={31,rT,rA,rB,1495}                              Path(S950,S955)
	S957= IMem.MEM8WordOut=>ICache.WData                        Premise(F412)
	S958= ICache.WData=IMemGet8Word({pid,addr})                 Path(S945,S957)
	S959= PC.Out=>ICache.IEA                                    Premise(F413)
	S960= IR.Out0_5=>CU.Op                                      Premise(F414)
	S961= CU.Op=31                                              Path(S898,S960)
	S962= IR.Out11_15=>GPRegs.RReg1                             Premise(F415)
	S963= GPRegs.RReg1=rA                                       Path(S900,S962)
	S964= GPRegs.Rdata1=a                                       GPRegs-Read(S963,S858)
	S965= IR.Out16_20=>GPRegs.RReg2                             Premise(F416)
	S966= GPRegs.RReg2=rB                                       Path(S901,S965)
	S967= GPRegs.Rdata2=b                                       GPRegs-Read(S966,S859)
	S968= IR.Out21_31=>CU.IRFunc                                Premise(F417)
	S969= CU.IRFunc=1495                                        Path(S902,S968)
	S970= CU.Func=mdu_mul                                       CU(S961,S969)
	S971= GPRegs.Rdata1=>A.In                                   Premise(F418)
	S972= A.In=a                                                Path(S964,S971)
	S973= GPRegs.Rdata2=>B.In                                   Premise(F419)
	S974= B.In=b                                                Path(S967,S973)
	S975= A.Out=>MDU.A                                          Premise(F420)
	S976= MDU.A=a                                               Path(S903,S975)
	S977= B.Out=>MDU.B                                          Premise(F421)
	S978= MDU.B=b                                               Path(S906,S977)
	S979= CU.Func=>MDU.Func                                     Premise(F422)
	S980= MDU.Func=mdu_mul                                      Path(S970,S979)
	S981= MDU.Out0_31=(a×b)[0:31]                               MDU(S976,S978)
	S982= MDU.Out32_63=(a×b)[32:63]                             MDU(S976,S978)
	S983= MDU.Out16_47=(a×b)[16:47]                             MDU(S976,S978)
	S984= MDU.CMP=Compare0(a×b)                                 MDU(S976,S978)
	S985= MDU.OV=OverFlow(a×b)                                  MDU(S976,S978)
	S986= MDU.Out32_63=>MDUOut.In                               Premise(F423)
	S987= MDUOut.In=(a×b)[32:63]                                Path(S982,S986)
	S988= XER.SOOut=>ORGate.A                                   Premise(F424)
	S989= ORGate.A=so                                           Path(S912,S988)
	S990= MDU.OV=>ORGate.B                                      Premise(F425)
	S991= ORGate.B=OverFlow(a×b)                                Path(S985,S990)
	S992= ORGate.Out=so|OverFlow(a×b)                           ORGate(S989,S991)
	S993= MDU.OV=>OVReg.In                                      Premise(F426)
	S994= OVReg.In=OverFlow(a×b)                                Path(S985,S993)
	S995= ORGate.Out=>DR1bit.In                                 Premise(F427)
	S996= DR1bit.In=so|OverFlow(a×b)                            Path(S992,S995)
	S997= MDU.CMP=>DataCmb.A                                    Premise(F428)
	S998= DataCmb.A=Compare0(a×b)                               Path(S984,S997)
	S999= XER.SOOut=>DataCmb.B                                  Premise(F429)
	S1000= DataCmb.B=so                                         Path(S912,S999)
	S1001= DataCmb.Out={Compare0(a×b),so}                       DataCmb(S998,S1000)
	S1002= DataCmb.Out=>DR4bit.In                               Premise(F430)
	S1003= DR4bit.In={Compare0(a×b),so}                         Path(S1001,S1002)
	S1004= IR.Out6_10=>GPRegs.WReg                              Premise(F431)
	S1005= GPRegs.WReg=rT                                       Path(S899,S1004)
	S1006= MDUOut.Out=>GPRegs.WData                             Premise(F432)
	S1007= GPRegs.WData=(a×b)[32:63]                            Path(S909,S1006)
	S1008= DR4bit.Out=>CRRegs.CR0In                             Premise(F433)
	S1009= CRRegs.CR0In={Compare0(a×b),so}                      Path(S919,S1008)
	S1010= DR1bit.Out=>XER.SOIn                                 Premise(F434)
	S1011= XER.SOIn=so|OverFlow(a×b)                            Path(S916,S1010)
	S1012= OVReg.Out=>XER.OVIn                                  Premise(F435)
	S1013= XER.OVIn=OverFlow(a×b)                               Path(S913,S1012)
	S1014= CtrlPIDReg=0                                         Premise(F436)
	S1015= [PIDReg]=pid                                         PIDReg-Hold(S836,S1014)
	S1016= CtrlIMMU=0                                           Premise(F437)
	S1017= CtrlPC=0                                             Premise(F438)
	S1018= CtrlPCInc=0                                          Premise(F439)
	S1019= PC[CIA]=addr                                         PC-Hold(S840,S1018)
	S1020= PC[Out]=addr+4                                       PC-Hold(S841,S1017,S1018)
	S1021= CtrlIAddrReg=0                                       Premise(F440)
	S1022= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S843,S1021)
	S1023= CtrlIMMUHitReg=0                                     Premise(F441)
	S1024= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S845,S1023)
	S1025= CtrlICache=0                                         Premise(F442)
	S1026= ICache[addr]={31,rT,rA,rB,1495}                      ICache-Hold(S847,S1025)
	S1027= CtrlICacheReg=0                                      Premise(F443)
	S1028= [ICacheReg]={31,rT,rA,rB,1495}                       ICacheReg-Hold(S849,S1027)
	S1029= CtrlICacheHitReg=0                                   Premise(F444)
	S1030= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S851,S1029)
	S1031= CtrlIMem=0                                           Premise(F445)
	S1032= IMem[{pid,addr}]={31,rT,rA,rB,1495}                  IMem-Hold(S853,S1031)
	S1033= CtrlIRMux=0                                          Premise(F446)
	S1034= CtrlIR=0                                             Premise(F447)
	S1035= [IR]={31,rT,rA,rB,1495}                              IR-Hold(S856,S1034)
	S1036= CtrlGPRegs=0                                         Premise(F448)
	S1037= GPRegs[rA]=a                                         GPRegs-Hold(S858,S1036)
	S1038= GPRegs[rB]=b                                         GPRegs-Hold(S859,S1036)
	S1039= CtrlA=0                                              Premise(F449)
	S1040= [A]=a                                                A-Hold(S861,S1039)
	S1041= CtrlB=0                                              Premise(F450)
	S1042= [B]=b                                                B-Hold(S863,S1041)
	S1043= CtrlMDUOut=0                                         Premise(F451)
	S1044= [MDUOut]=(a×b)[32:63]                                MDUOut-Hold(S865,S1043)
	S1045= CtrlXERSO=0                                          Premise(F452)
	S1046= XER[SO]=so                                           XER-SO-Hold(S867,S1045)
	S1047= CtrlXEROV=0                                          Premise(F453)
	S1048= CtrlXERCA=0                                          Premise(F454)
	S1049= CtrlOVReg=0                                          Premise(F455)
	S1050= [OVReg]=OverFlow(a×b)                                OVReg-Hold(S871,S1049)
	S1051= CtrlDR1bit=0                                         Premise(F456)
	S1052= [DR1bit]=so|OverFlow(a×b)                            DR1bit-Hold(S873,S1051)
	S1053= CtrlDR4bit=0                                         Premise(F457)
	S1054= [DR4bit]={Compare0(a×b),so}                          DR4bit-Hold(S875,S1053)
	S1055= CtrlCRRegs=0                                         Premise(F458)
	S1056= CtrlCRRegsCR0=0                                      Premise(F459)
	S1057= CtrlCRRegsW4bitRegs=0                                Premise(F460)
	S1058= CtrlCRRegsW1bitRegs=0                                Premise(F461)

WB	S1059= PIDReg.Out=pid                                       PIDReg-Out(S1015)
	S1060= PIDReg.Out26_31=pid[26:31]                           PIDReg-Out(S1015)
	S1061= PIDReg.Out30_31=pid[30:31]                           PIDReg-Out(S1015)
	S1062= PC.CIA=addr                                          PC-Out(S1019)
	S1063= PC.CIA31_28=addr[31:28]                              PC-Out(S1019)
	S1064= PC.Out=addr+4                                        PC-Out(S1020)
	S1065= IAddrReg.Out={pid,addr}                              IAddrReg-Out(S1022)
	S1066= IAddrReg.Out26_31={pid,addr}[26:31]                  IAddrReg-Out(S1022)
	S1067= IAddrReg.Out30_31={pid,addr}[30:31]                  IAddrReg-Out(S1022)
	S1068= IMMUHitReg.Out=IMMUHit(pid,addr)                     IMMUHitReg-Out(S1024)
	S1069= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S1024)
	S1070= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S1024)
	S1071= ICacheReg.Out={31,rT,rA,rB,1495}                     ICacheReg-Out(S1028)
	S1072= ICacheReg.Out26_31={31,rT,rA,rB,1495}[26:31]         ICacheReg-Out(S1028)
	S1073= ICacheReg.Out30_31={31,rT,rA,rB,1495}[30:31]         ICacheReg-Out(S1028)
	S1074= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S1030)
	S1075= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S1030)
	S1076= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S1030)
	S1077= IR.Out0_5=31                                         IR-Out(S1035)
	S1078= IR.Out6_10=rT                                        IR-Out(S1035)
	S1079= IR.Out11_15=rA                                       IR-Out(S1035)
	S1080= IR.Out16_20=rB                                       IR-Out(S1035)
	S1081= IR.Out21_31=1495                                     IR-Out(S1035)
	S1082= A.Out=a                                              A-Out(S1040)
	S1083= A.Out26_31=a[26:31]                                  A-Out(S1040)
	S1084= A.Out30_31=a[30:31]                                  A-Out(S1040)
	S1085= B.Out=b                                              B-Out(S1042)
	S1086= B.Out26_31=b[26:31]                                  B-Out(S1042)
	S1087= B.Out30_31=b[30:31]                                  B-Out(S1042)
	S1088= MDUOut.Out=(a×b)[32:63]                              MDUOut-Out(S1044)
	S1089= MDUOut.Out26_31=(a×b)[32:63][26:31]                  MDUOut-Out(S1044)
	S1090= MDUOut.Out30_31=(a×b)[32:63][30:31]                  MDUOut-Out(S1044)
	S1091= XER.SOOut=so                                         XER-SO-Out(S1046)
	S1092= OVReg.Out=OverFlow(a×b)                              OVReg-Out(S1050)
	S1093= OVReg.Out26_31=OverFlow(a×b)[26:31]                  OVReg-Out(S1050)
	S1094= OVReg.Out30_31=OverFlow(a×b)[30:31]                  OVReg-Out(S1050)
	S1095= DR1bit.Out=so|OverFlow(a×b)                          DR1bit-Out(S1052)
	S1096= DR1bit.Out26_31=so|OverFlow(a×b)[26:31]              DR1bit-Out(S1052)
	S1097= DR1bit.Out30_31=so|OverFlow(a×b)[30:31]              DR1bit-Out(S1052)
	S1098= DR4bit.Out={Compare0(a×b),so}                        DR4bit-Out(S1054)
	S1099= DR4bit.Out26_31={Compare0(a×b),so}[26:31]            DR4bit-Out(S1054)
	S1100= DR4bit.Out30_31={Compare0(a×b),so}[30:31]            DR4bit-Out(S1054)
	S1101= PIDReg.Out=>IMMU.PID                                 Premise(F462)
	S1102= IMMU.PID=pid                                         Path(S1059,S1101)
	S1103= PC.Out=>IMMU.IEA                                     Premise(F463)
	S1104= IMMU.IEA=addr+4                                      Path(S1064,S1103)
	S1105= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1102,S1104)
	S1106= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1102,S1104)
	S1107= IMMU.Addr=>IAddrReg.In                               Premise(F464)
	S1108= IAddrReg.In={pid,addr+4}                             Path(S1105,S1107)
	S1109= IMMU.Hit=>IMMUHitReg.In                              Premise(F465)
	S1110= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1106,S1109)
	S1111= PC.Out=>ICache.IEA                                   Premise(F466)
	S1112= ICache.IEA=addr+4                                    Path(S1064,S1111)
	S1113= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1112)
	S1114= ICache.Out=>ICacheReg.In                             Premise(F467)
	S1115= ICache.Hit=>ICacheHitReg.In                          Premise(F468)
	S1116= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1113,S1115)
	S1117= IMMUHitReg.Out=>CU.IMemHit                           Premise(F469)
	S1118= CU.IMemHit=IMMUHit(pid,addr)                         Path(S1068,S1117)
	S1119= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F470)
	S1120= CU.ICacheHit=ICacheHit(addr)                         Path(S1074,S1119)
	S1121= IAddrReg.Out=>IMem.RAddr                             Premise(F471)
	S1122= IMem.RAddr={pid,addr}                                Path(S1065,S1121)
	S1123= IMem.Out={31,rT,rA,rB,1495}                          IMem-Read(S1122,S1032)
	S1124= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1122,S1032)
	S1125= IMem.Out=>IRMux.MemData                              Premise(F472)
	S1126= IRMux.MemData={31,rT,rA,rB,1495}                     Path(S1123,S1125)
	S1127= ICacheReg.Out=>IRMux.CacheData                       Premise(F473)
	S1128= IRMux.CacheData={31,rT,rA,rB,1495}                   Path(S1071,S1127)
	S1129= IRMux.Out={31,rT,rA,rB,1495}                         IRMux-Select(S1126,S1128)
	S1130= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F474)
	S1131= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S1068,S1130)
	S1132= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F475)
	S1133= IRMux.CacheSel=ICacheHit(addr)                       Path(S1074,S1132)
	S1134= IRMux.Out=>IR.In                                     Premise(F476)
	S1135= IR.In={31,rT,rA,rB,1495}                             Path(S1129,S1134)
	S1136= IMem.MEM8WordOut=>ICache.WData                       Premise(F477)
	S1137= ICache.WData=IMemGet8Word({pid,addr})                Path(S1124,S1136)
	S1138= PC.Out=>ICache.IEA                                   Premise(F478)
	S1139= IR.Out0_5=>CU.Op                                     Premise(F479)
	S1140= CU.Op=31                                             Path(S1077,S1139)
	S1141= IR.Out11_15=>GPRegs.RReg1                            Premise(F480)
	S1142= GPRegs.RReg1=rA                                      Path(S1079,S1141)
	S1143= GPRegs.Rdata1=a                                      GPRegs-Read(S1142,S1037)
	S1144= IR.Out16_20=>GPRegs.RReg2                            Premise(F481)
	S1145= GPRegs.RReg2=rB                                      Path(S1080,S1144)
	S1146= GPRegs.Rdata2=b                                      GPRegs-Read(S1145,S1038)
	S1147= IR.Out21_31=>CU.IRFunc                               Premise(F482)
	S1148= CU.IRFunc=1495                                       Path(S1081,S1147)
	S1149= CU.Func=mdu_mul                                      CU(S1140,S1148)
	S1150= GPRegs.Rdata1=>A.In                                  Premise(F483)
	S1151= A.In=a                                               Path(S1143,S1150)
	S1152= GPRegs.Rdata2=>B.In                                  Premise(F484)
	S1153= B.In=b                                               Path(S1146,S1152)
	S1154= A.Out=>MDU.A                                         Premise(F485)
	S1155= MDU.A=a                                              Path(S1082,S1154)
	S1156= B.Out=>MDU.B                                         Premise(F486)
	S1157= MDU.B=b                                              Path(S1085,S1156)
	S1158= CU.Func=>MDU.Func                                    Premise(F487)
	S1159= MDU.Func=mdu_mul                                     Path(S1149,S1158)
	S1160= MDU.Out0_31=(a×b)[0:31]                              MDU(S1155,S1157)
	S1161= MDU.Out32_63=(a×b)[32:63]                            MDU(S1155,S1157)
	S1162= MDU.Out16_47=(a×b)[16:47]                            MDU(S1155,S1157)
	S1163= MDU.CMP=Compare0(a×b)                                MDU(S1155,S1157)
	S1164= MDU.OV=OverFlow(a×b)                                 MDU(S1155,S1157)
	S1165= MDU.Out32_63=>MDUOut.In                              Premise(F488)
	S1166= MDUOut.In=(a×b)[32:63]                               Path(S1161,S1165)
	S1167= XER.SOOut=>ORGate.A                                  Premise(F489)
	S1168= ORGate.A=so                                          Path(S1091,S1167)
	S1169= MDU.OV=>ORGate.B                                     Premise(F490)
	S1170= ORGate.B=OverFlow(a×b)                               Path(S1164,S1169)
	S1171= ORGate.Out=so|OverFlow(a×b)                          ORGate(S1168,S1170)
	S1172= MDU.OV=>OVReg.In                                     Premise(F491)
	S1173= OVReg.In=OverFlow(a×b)                               Path(S1164,S1172)
	S1174= ORGate.Out=>DR1bit.In                                Premise(F492)
	S1175= DR1bit.In=so|OverFlow(a×b)                           Path(S1171,S1174)
	S1176= MDU.CMP=>DataCmb.A                                   Premise(F493)
	S1177= DataCmb.A=Compare0(a×b)                              Path(S1163,S1176)
	S1178= XER.SOOut=>DataCmb.B                                 Premise(F494)
	S1179= DataCmb.B=so                                         Path(S1091,S1178)
	S1180= DataCmb.Out={Compare0(a×b),so}                       DataCmb(S1177,S1179)
	S1181= DataCmb.Out=>DR4bit.In                               Premise(F495)
	S1182= DR4bit.In={Compare0(a×b),so}                         Path(S1180,S1181)
	S1183= IR.Out6_10=>GPRegs.WReg                              Premise(F496)
	S1184= GPRegs.WReg=rT                                       Path(S1078,S1183)
	S1185= MDUOut.Out=>GPRegs.WData                             Premise(F497)
	S1186= GPRegs.WData=(a×b)[32:63]                            Path(S1088,S1185)
	S1187= DR4bit.Out=>CRRegs.CR0In                             Premise(F498)
	S1188= CRRegs.CR0In={Compare0(a×b),so}                      Path(S1098,S1187)
	S1189= DR1bit.Out=>XER.SOIn                                 Premise(F499)
	S1190= XER.SOIn=so|OverFlow(a×b)                            Path(S1095,S1189)
	S1191= OVReg.Out=>XER.OVIn                                  Premise(F500)
	S1192= XER.OVIn=OverFlow(a×b)                               Path(S1092,S1191)
	S1193= CtrlPIDReg=0                                         Premise(F501)
	S1194= [PIDReg]=pid                                         PIDReg-Hold(S1015,S1193)
	S1195= CtrlIMMU=0                                           Premise(F502)
	S1196= CtrlPC=0                                             Premise(F503)
	S1197= CtrlPCInc=0                                          Premise(F504)
	S1198= PC[CIA]=addr                                         PC-Hold(S1019,S1197)
	S1199= PC[Out]=addr+4                                       PC-Hold(S1020,S1196,S1197)
	S1200= CtrlIAddrReg=0                                       Premise(F505)
	S1201= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1022,S1200)
	S1202= CtrlIMMUHitReg=0                                     Premise(F506)
	S1203= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1024,S1202)
	S1204= CtrlICache=0                                         Premise(F507)
	S1205= ICache[addr]={31,rT,rA,rB,1495}                      ICache-Hold(S1026,S1204)
	S1206= CtrlICacheReg=0                                      Premise(F508)
	S1207= [ICacheReg]={31,rT,rA,rB,1495}                       ICacheReg-Hold(S1028,S1206)
	S1208= CtrlICacheHitReg=0                                   Premise(F509)
	S1209= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1030,S1208)
	S1210= CtrlIMem=0                                           Premise(F510)
	S1211= IMem[{pid,addr}]={31,rT,rA,rB,1495}                  IMem-Hold(S1032,S1210)
	S1212= CtrlIRMux=0                                          Premise(F511)
	S1213= CtrlIR=0                                             Premise(F512)
	S1214= [IR]={31,rT,rA,rB,1495}                              IR-Hold(S1035,S1213)
	S1215= CtrlGPRegs=1                                         Premise(F513)
	S1216= GPRegs[rT]=(a×b)[32:63]                              GPRegs-Write(S1184,S1186,S1215)
	S1217= CtrlA=0                                              Premise(F514)
	S1218= [A]=a                                                A-Hold(S1040,S1217)
	S1219= CtrlB=0                                              Premise(F515)
	S1220= [B]=b                                                B-Hold(S1042,S1219)
	S1221= CtrlMDUOut=0                                         Premise(F516)
	S1222= [MDUOut]=(a×b)[32:63]                                MDUOut-Hold(S1044,S1221)
	S1223= CtrlXERSO=1                                          Premise(F517)
	S1224= XER[SO]=so|OverFlow(a×b)                             XER-SO-Write(S1190,S1223)
	S1225= CtrlXEROV=1                                          Premise(F518)
	S1226= XER[OV]=OverFlow(a×b)                                XER-OV-Write(S1192,S1225)
	S1227= CtrlXERCA=0                                          Premise(F519)
	S1228= CtrlOVReg=0                                          Premise(F520)
	S1229= [OVReg]=OverFlow(a×b)                                OVReg-Hold(S1050,S1228)
	S1230= CtrlDR1bit=0                                         Premise(F521)
	S1231= [DR1bit]=so|OverFlow(a×b)                            DR1bit-Hold(S1052,S1230)
	S1232= CtrlDR4bit=0                                         Premise(F522)
	S1233= [DR4bit]={Compare0(a×b),so}                          DR4bit-Hold(S1054,S1232)
	S1234= CtrlCRRegs=0                                         Premise(F523)
	S1235= CtrlCRRegsCR0=1                                      Premise(F524)
	S1236= CRRegs[CR0]={Compare0(a×b),so}                       CRRegs-CR0-Write(S1188,S1235)
	S1237= CtrlCRRegsW4bitRegs=0                                Premise(F525)
	S1238= CtrlCRRegsW1bitRegs=0                                Premise(F526)

POST	S1194= [PIDReg]=pid                                         PIDReg-Hold(S1015,S1193)
	S1198= PC[CIA]=addr                                         PC-Hold(S1019,S1197)
	S1199= PC[Out]=addr+4                                       PC-Hold(S1020,S1196,S1197)
	S1201= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1022,S1200)
	S1203= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1024,S1202)
	S1205= ICache[addr]={31,rT,rA,rB,1495}                      ICache-Hold(S1026,S1204)
	S1207= [ICacheReg]={31,rT,rA,rB,1495}                       ICacheReg-Hold(S1028,S1206)
	S1209= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1030,S1208)
	S1211= IMem[{pid,addr}]={31,rT,rA,rB,1495}                  IMem-Hold(S1032,S1210)
	S1214= [IR]={31,rT,rA,rB,1495}                              IR-Hold(S1035,S1213)
	S1216= GPRegs[rT]=(a×b)[32:63]                              GPRegs-Write(S1184,S1186,S1215)
	S1218= [A]=a                                                A-Hold(S1040,S1217)
	S1220= [B]=b                                                B-Hold(S1042,S1219)
	S1222= [MDUOut]=(a×b)[32:63]                                MDUOut-Hold(S1044,S1221)
	S1224= XER[SO]=so|OverFlow(a×b)                             XER-SO-Write(S1190,S1223)
	S1226= XER[OV]=OverFlow(a×b)                                XER-OV-Write(S1192,S1225)
	S1229= [OVReg]=OverFlow(a×b)                                OVReg-Hold(S1050,S1228)
	S1231= [DR1bit]=so|OverFlow(a×b)                            DR1bit-Hold(S1052,S1230)
	S1233= [DR4bit]={Compare0(a×b),so}                          DR4bit-Hold(S1054,S1232)
	S1236= CRRegs[CR0]={Compare0(a×b),so}                       CRRegs-CR0-Write(S1188,S1235)

