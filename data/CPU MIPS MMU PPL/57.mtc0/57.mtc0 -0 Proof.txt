
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={16,4,rT,rD,0,sel}                     Premise(F2)
	S3= GPR[rT]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= IMMU.Addr=>IAddrReg.In                                  Premise(F50)
	S7= PC.Out=>IMMU.IEA                                        Premise(F55)
	S8= IMMU.IEA=addr                                           Path(S5,S7)
	S9= CP0.ASID=>IMMU.PID                                      Premise(F56)
	S10= IMMU.PID=pid                                           Path(S4,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S10,S8)
	S12= IAddrReg.In={pid,addr}                                 Path(S11,S6)
	S13= CtrlGPR=0                                              Premise(F111)
	S14= GPR[rT]=a                                              GPR-Hold(S3,S13)
	S15= CtrlIAddrReg=1                                         Premise(F112)
	S16= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S15)
	S17= CtrlPC=0                                               Premise(F113)
	S18= CtrlPCInc=0                                            Premise(F114)
	S19= PC[Out]=addr                                           PC-Hold(S1,S17,S18)
	S20= CtrlIMem=0                                             Premise(F115)
	S21= IMem[{pid,addr}]={16,4,rT,rD,0,sel}                    IMem-Hold(S2,S20)

IMMU	S22= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S16)
	S23= PC.Out=addr                                            PC-Out(S19)
	S24= PC.Out=>ICache.IEA                                     Premise(F165)
	S25= ICache.IEA=addr                                        Path(S23,S24)
	S26= IMem.MEM8WordOut=>ICache.WData                         Premise(F167)
	S27= IAddrReg.Out=>IMem.RAddr                               Premise(F171)
	S28= IMem.RAddr={pid,addr}                                  Path(S22,S27)
	S29= IMem.Out={16,4,rT,rD,0,sel}                            IMem-Read(S28,S21)
	S30= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S28,S21)
	S31= ICache.WData=IMemGet8Word({pid,addr})                  Path(S30,S26)
	S32= IMem.Out=>IRMux.MemData                                Premise(F174)
	S33= IRMux.MemData={16,4,rT,rD,0,sel}                       Path(S29,S32)
	S34= IRMux.Out={16,4,rT,rD,0,sel}                           IRMux-Select2(S33)
	S35= IRMux.Out=>IR_ID.In                                    Premise(F180)
	S36= IR_ID.In={16,4,rT,rD,0,sel}                            Path(S34,S35)
	S37= CtrlICache=1                                           Premise(F217)
	S38= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S25,S31,S37)
	S39= CtrlIR_ID=1                                            Premise(F221)
	S40= [IR_ID]={16,4,rT,rD,0,sel}                             IR_ID-Write(S36,S39)
	S41= CtrlGPR=0                                              Premise(F225)
	S42= GPR[rT]=a                                              GPR-Hold(S14,S41)
	S43= CtrlPC=0                                               Premise(F227)
	S44= CtrlPCInc=1                                            Premise(F228)
	S45= PC[Out]=addr+4                                         PC-Inc(S19,S43,S44)

ID	S46= IR_ID.Out={16,4,rT,rD,0,sel}                           IR-Out(S40)
	S47= IR_ID.Out20_16=rT                                      IR-Out(S40)
	S48= FU.OutID1=>A_EX.In                                     Premise(F232)
	S49= GPR.Rdata1=>FU.InID1                                   Premise(F275)
	S50= IR_ID.Out20_16=>GPR.RReg1                              Premise(F278)
	S51= GPR.RReg1=rT                                           Path(S47,S50)
	S52= GPR.Rdata1=a                                           GPR-Read(S51,S42)
	S53= FU.InID1=a                                             Path(S52,S49)
	S54= FU.OutID1=FU(a)                                        FU-Forward(S53)
	S55= A_EX.In=FU(a)                                          Path(S54,S48)
	S56= IR_ID.Out=>IR_EX.In                                    Premise(F293)
	S57= IR_EX.In={16,4,rT,rD,0,sel}                            Path(S46,S56)
	S58= CtrlA_EX=1                                             Premise(F324)
	S59= [A_EX]=FU(a)                                           A_EX-Write(S55,S58)
	S60= CtrlIR_EX=1                                            Premise(F327)
	S61= [IR_EX]={16,4,rT,rD,0,sel}                             IR_EX-Write(S57,S60)
	S62= CtrlICache=0                                           Premise(F332)
	S63= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S38,S62)
	S64= CtrlPC=0                                               Premise(F342)
	S65= CtrlPCInc=0                                            Premise(F343)
	S66= PC[Out]=addr+4                                         PC-Hold(S45,S64,S65)

EX	S67= A_EX.Out=FU(a)                                         A_EX-Out(S59)
	S68= IR_EX.Out15_11=rD                                      IR_EX-Out(S61)
	S69= IR_EX.Out15_11=>CP0.WReg                               Premise(F349)
	S70= CP0.WReg=rD                                            Path(S68,S69)
	S71= A_EX.Out=>CP0.Wdata                                    Premise(F350)
	S72= CP0.Wdata=FU(a)                                        Path(S67,S71)
	S73= CtrlCP0=1                                              Premise(F444)
	S74= CP0[rD]=FU(a)                                          CP0-Write-Nomal(S70,S72,S73)
	S75= CtrlICache=0                                           Premise(F447)
	S76= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S63,S75)
	S77= CtrlPC=0                                               Premise(F457)
	S78= CtrlPCInc=0                                            Premise(F458)
	S79= PC[Out]=addr+4                                         PC-Hold(S66,S77,S78)

MEM	S80= CtrlCP0=0                                              Premise(F559)
	S81= CP0[rD]=FU(a)                                          CP0-Hold(S74,S80)
	S82= CtrlICache=0                                           Premise(F562)
	S83= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S76,S82)
	S84= CtrlPC=0                                               Premise(F572)
	S85= CtrlPCInc=0                                            Premise(F573)
	S86= PC[Out]=addr+4                                         PC-Hold(S79,S84,S85)

DMMU1	S87= CtrlCP0=0                                              Premise(F674)
	S88= CP0[rD]=FU(a)                                          CP0-Hold(S81,S87)
	S89= CtrlICache=0                                           Premise(F677)
	S90= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S83,S89)
	S91= CtrlPC=0                                               Premise(F687)
	S92= CtrlPCInc=0                                            Premise(F688)
	S93= PC[Out]=addr+4                                         PC-Hold(S86,S91,S92)

DMMU2	S94= CtrlCP0=0                                              Premise(F789)
	S95= CP0[rD]=FU(a)                                          CP0-Hold(S88,S94)
	S96= CtrlICache=0                                           Premise(F792)
	S97= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S90,S96)
	S98= CtrlPC=0                                               Premise(F802)
	S99= CtrlPCInc=0                                            Premise(F803)
	S100= PC[Out]=addr+4                                        PC-Hold(S93,S98,S99)

WB	S101= CtrlCP0=0                                             Premise(F904)
	S102= CP0[rD]=FU(a)                                         CP0-Hold(S95,S101)
	S103= CtrlICache=0                                          Premise(F907)
	S104= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S97,S103)
	S105= CtrlPC=0                                              Premise(F917)
	S106= CtrlPCInc=0                                           Premise(F918)
	S107= PC[Out]=addr+4                                        PC-Hold(S100,S105,S106)

POST	S102= CP0[rD]=FU(a)                                         CP0-Hold(S95,S101)
	S104= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S97,S103)
	S107= PC[Out]=addr+4                                        PC-Hold(S100,S105,S106)

