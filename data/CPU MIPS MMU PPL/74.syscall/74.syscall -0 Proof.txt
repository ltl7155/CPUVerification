
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,code,12}                            Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= IMMU.Addr=>IAddrReg.In                                  Premise(F43)
	S6= PC.Out=>IMMU.IEA                                        Premise(F48)
	S7= IMMU.IEA=addr                                           Path(S4,S6)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F49)
	S9= IMMU.PID=pid                                            Path(S3,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S7)
	S11= IAddrReg.In={pid,addr}                                 Path(S10,S5)
	S12= CtrlPC=0                                               Premise(F90)
	S13= CtrlPCInc=0                                            Premise(F91)
	S14= PC[Out]=addr                                           PC-Hold(S1,S12,S13)
	S15= CtrlCP0=0                                              Premise(F93)
	S16= CP0[ASID]=pid                                          CP0-Hold(S0,S15)
	S17= CtrlIAddrReg=1                                         Premise(F105)
	S18= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S11,S17)
	S19= CtrlIMem=0                                             Premise(F106)
	S20= IMem[{pid,addr}]={0,code,12}                           IMem-Hold(S2,S19)

IMMU	S21= PC.Out=addr                                            PC-Out(S14)
	S22= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S18)
	S23= PC.Out=>ICache.IEA                                     Premise(F151)
	S24= ICache.IEA=addr                                        Path(S21,S23)
	S25= IMem.MEM8WordOut=>ICache.WData                         Premise(F153)
	S26= IAddrReg.Out=>IMem.RAddr                               Premise(F157)
	S27= IMem.RAddr={pid,addr}                                  Path(S22,S26)
	S28= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S27,S20)
	S29= ICache.WData=IMemGet8Word({pid,addr})                  Path(S28,S25)
	S30= CtrlPC=0                                               Premise(F197)
	S31= CtrlPCInc=1                                            Premise(F198)
	S32= PC[Out]=addr+4                                         PC-Inc(S14,S30,S31)
	S33= CtrlCP0=0                                              Premise(F200)
	S34= CP0[ASID]=pid                                          CP0-Hold(S16,S33)
	S35= CtrlICache=1                                           Premise(F203)
	S36= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S24,S29,S35)

ID	S37= PC.Out=addr+4                                          PC-Out(S32)
	S38= CP0.ASID=pid                                           CP0-Read-ASID(S34)
	S39= PC.Out=>CP0.EPCIn                                      Premise(F217)
	S40= CP0.EPCIn=addr+4                                       Path(S37,S39)
	S41= CP0.ExCodeIn=5'h08                                     Premise(F218)
	S42= CP0.ASID=>PIDReg.In                                    Premise(F282)
	S43= PIDReg.In=pid                                          Path(S38,S42)
	S44= CtrlEPCIn=1                                            Premise(F311)
	S45= CP0[EPC]=addr+4                                        CP0-Write-EPC(S40,S44)
	S46= CtrlExCodeIn=1                                         Premise(F312)
	S47= CP0[ExCode]=5'h08                                      CP0-Write-ExCode(S41,S46)
	S48= CtrlICache=0                                           Premise(F313)
	S49= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S36,S48)
	S50= CtrlPIDReg=1                                           Premise(F326)
	S51= [PIDReg]=pid                                           PIDReg-Write(S43,S50)

EX	S52= CtrlCP0=0                                              Premise(F418)
	S53= CP0[EPC]=addr+4                                        CP0-Hold(S45,S52)
	S54= CP0[ExCode]=5'h08                                      CP0-Hold(S47,S52)
	S55= CtrlICache=0                                           Premise(F421)
	S56= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S49,S55)
	S57= CtrlPIDReg=0                                           Premise(F434)
	S58= [PIDReg]=pid                                           PIDReg-Hold(S51,S57)

MEM	S59= CtrlCP0=0                                              Premise(F526)
	S60= CP0[EPC]=addr+4                                        CP0-Hold(S53,S59)
	S61= CP0[ExCode]=5'h08                                      CP0-Hold(S54,S59)
	S62= CtrlICache=0                                           Premise(F529)
	S63= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S56,S62)
	S64= CtrlPIDReg=0                                           Premise(F542)
	S65= [PIDReg]=pid                                           PIDReg-Hold(S58,S64)

DMMU1	S66= CtrlCP0=0                                              Premise(F634)
	S67= CP0[EPC]=addr+4                                        CP0-Hold(S60,S66)
	S68= CP0[ExCode]=5'h08                                      CP0-Hold(S61,S66)
	S69= CtrlICache=0                                           Premise(F637)
	S70= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S63,S69)
	S71= CtrlPIDReg=0                                           Premise(F650)
	S72= [PIDReg]=pid                                           PIDReg-Hold(S65,S71)

DMMU2	S73= CtrlCP0=0                                              Premise(F742)
	S74= CP0[EPC]=addr+4                                        CP0-Hold(S67,S73)
	S75= CP0[ExCode]=5'h08                                      CP0-Hold(S68,S73)
	S76= CtrlICache=0                                           Premise(F745)
	S77= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S70,S76)
	S78= CtrlPIDReg=0                                           Premise(F758)
	S79= [PIDReg]=pid                                           PIDReg-Hold(S72,S78)

WB	S80= CtrlCP0=0                                              Premise(F850)
	S81= CP0[EPC]=addr+4                                        CP0-Hold(S74,S80)
	S82= CP0[ExCode]=5'h08                                      CP0-Hold(S75,S80)
	S83= CtrlICache=0                                           Premise(F853)
	S84= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S77,S83)
	S85= CtrlPIDReg=0                                           Premise(F866)
	S86= [PIDReg]=pid                                           PIDReg-Hold(S79,S85)

POST	S81= CP0[EPC]=addr+4                                        CP0-Hold(S74,S80)
	S82= CP0[ExCode]=5'h08                                      CP0-Hold(S75,S80)
	S84= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S77,S83)
	S86= [PIDReg]=pid                                           PIDReg-Hold(S79,S85)

