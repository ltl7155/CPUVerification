
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={12,rS,rD,UIMM}                            Premise(F3)

IF	S2= PC.Out=addr                                             PC-Out(S0)
	S3= PC.Out=>ICache.IEA                                      Premise(F65)
	S4= ICache.IEA=addr                                         Path(S2,S3)
	S5= ICache.Out={12,rS,rD,UIMM}                              ICache-Search(S4,S1)
	S6= ICache.Out=>IR_ID.In                                    Premise(F72)
	S7= IR_ID.In={12,rS,rD,UIMM}                                Path(S5,S6)
	S8= CtrlIR_ID=1                                             Premise(F117)
	S9= [IR_ID]={12,rS,rD,UIMM}                                 IR_ID-Write(S7,S8)
	S10= CtrlPC=0                                               Premise(F123)
	S11= CtrlPCInc=1                                            Premise(F124)
	S12= PC[Out]=addr+4                                         PC-Inc(S0,S10,S11)
	S13= GPR[rS]=a                                              Premise(F132)

ID	S14= IR_ID.Out={12,rS,rD,UIMM}                              IR-Out(S9)
	S15= IR_ID.Out25_21=rS                                      IR-Out(S9)
	S16= IR_ID.Out15_0=UIMM                                     IR-Out(S9)
	S17= FU.OutID1=>A_EX.In                                     Premise(F268)
	S18= LIMMEXT.Out=>B_EX.In                                   Premise(F270)
	S19= GPR.Rdata1=>FU.InID1                                   Premise(F312)
	S20= IR_ID.Out25_21=>GPR.RReg1                              Premise(F319)
	S21= GPR.RReg1=rS                                           Path(S15,S20)
	S22= GPR.Rdata1=a                                           GPR-Read(S21,S13)
	S23= FU.InID1=a                                             Path(S22,S19)
	S24= FU.OutID1=FU(a)                                        FU-Forward(S23)
	S25= A_EX.In=FU(a)                                          Path(S24,S17)
	S26= IR_ID.Out=>IR_EX.In                                    Premise(F329)
	S27= IR_EX.In={12,rS,rD,UIMM}                               Path(S14,S26)
	S28= IR_ID.Out15_0=>LIMMEXT.In                              Premise(F335)
	S29= LIMMEXT.In=UIMM                                        Path(S16,S28)
	S30= LIMMEXT.Out={16{0},UIMM}                               LIMMEXT(S29)
	S31= B_EX.In={16{0},UIMM}                                   Path(S30,S18)
	S32= CtrlA_EX=1                                             Premise(F360)
	S33= [A_EX]=FU(a)                                           A_EX-Write(S25,S32)
	S34= CtrlB_EX=1                                             Premise(F361)
	S35= [B_EX]={16{0},UIMM}                                    B_EX-Write(S31,S34)
	S36= CtrlIR_EX=1                                            Premise(F374)
	S37= [IR_EX]={12,rS,rD,UIMM}                                IR_EX-Write(S27,S36)
	S38= CtrlPC=0                                               Premise(F381)
	S39= CtrlPCInc=0                                            Premise(F382)
	S40= PC[Out]=addr+4                                         PC-Hold(S12,S38,S39)

EX	S41= A_EX.Out=FU(a)                                         A_EX-Out(S33)
	S42= B_EX.Out={16{0},UIMM}                                  B_EX-Out(S35)
	S43= IR_EX.Out={12,rS,rD,UIMM}                              IR_EX-Out(S37)
	S44= A_EX.Out=>ALU.A                                        Premise(F390)
	S45= ALU.A=FU(a)                                            Path(S41,S44)
	S46= B_EX.Out=>ALU.B                                        Premise(F391)
	S47= ALU.B={16{0},UIMM}                                     Path(S42,S46)
	S48= ALU.Out=FU(a)&{16{0},UIMM}                             ALU(S45,S47)
	S49= ALU.Out=>ALUOut_MEM.In                                 Premise(F395)
	S50= ALUOut_MEM.In=FU(a)&{16{0},UIMM}                       Path(S48,S49)
	S51= IR_EX.Out=>IR_MEM.In                                   Premise(F461)
	S52= IR_MEM.In={12,rS,rD,UIMM}                              Path(S43,S51)
	S53= CtrlALUOut_MEM=1                                       Premise(F491)
	S54= [ALUOut_MEM]=FU(a)&{16{0},UIMM}                        ALUOut_MEM-Write(S50,S53)
	S55= CtrlIR_MEM=1                                           Premise(F506)
	S56= [IR_MEM]={12,rS,rD,UIMM}                               IR_MEM-Write(S52,S55)
	S57= CtrlPC=0                                               Premise(F510)
	S58= CtrlPCInc=0                                            Premise(F511)
	S59= PC[Out]=addr+4                                         PC-Hold(S40,S57,S58)

MEM	S60= ALUOut_MEM.Out=FU(a)&{16{0},UIMM}                      ALUOut_MEM-Out(S54)
	S61= IR_MEM.Out={12,rS,rD,UIMM}                             IR_MEM-Out(S56)
	S62= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F525)
	S63= ALUOut_WB.In=FU(a)&{16{0},UIMM}                        Path(S60,S62)
	S64= IR_MEM.Out=>IR_WB.In                                   Premise(F591)
	S65= IR_WB.In={12,rS,rD,UIMM}                               Path(S61,S64)
	S66= CtrlALUOut_WB=1                                        Premise(F622)
	S67= [ALUOut_WB]=FU(a)&{16{0},UIMM}                         ALUOut_WB-Write(S63,S66)
	S68= CtrlIR_WB=1                                            Premise(F635)
	S69= [IR_WB]={12,rS,rD,UIMM}                                IR_WB-Write(S65,S68)
	S70= CtrlPC=0                                               Premise(F638)
	S71= CtrlPCInc=0                                            Premise(F639)
	S72= PC[Out]=addr+4                                         PC-Hold(S59,S70,S71)

WB	S73= ALUOut_WB.Out=FU(a)&{16{0},UIMM}                       ALUOut_WB-Out(S67)
	S74= IR_WB.Out20_16=rD                                      IR-Out(S69)
	S75= ALUOut_WB.Out=>GPR.WData                               Premise(F961)
	S76= GPR.WData=FU(a)&{16{0},UIMM}                           Path(S73,S75)
	S77= IR_WB.Out20_16=>GPR.WReg                               Premise(F962)
	S78= GPR.WReg=rD                                            Path(S74,S77)
	S79= CtrlGPR=1                                              Premise(F1020)
	S80= GPR[rD]=FU(a)&{16{0},UIMM}                             GPR-Write(S78,S76,S79)
	S81= CtrlPC=0                                               Premise(F1022)
	S82= CtrlPCInc=0                                            Premise(F1023)
	S83= PC[Out]=addr+4                                         PC-Hold(S72,S81,S82)

POST	S80= GPR[rD]=FU(a)&{16{0},UIMM}                             GPR-Write(S78,S76,S79)
	S83= PC[Out]=addr+4                                         PC-Hold(S72,S81,S82)

