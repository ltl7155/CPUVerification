
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={5,rS,rT,offset}                       Premise(F2)
	S3= ICache[addr]={5,rS,rT,offset}                           Premise(F3)
	S4= GPR[rS]=a                                               Premise(F4)
	S5= GPR[rT]=b                                               Premise(F5)

IF	S6= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S7= PC.Out=addr                                             PC-Out(S1)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F6)
	S9= IMMU.PID=pid                                            Path(S6,S8)
	S10= PC.Out=>IMMU.IEA                                       Premise(F7)
	S11= IMMU.IEA=addr                                          Path(S7,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S11)
	S13= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S9,S11)
	S14= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S15= IAddrReg.In={pid,addr}                                 Path(S12,S14)
	S16= IMMU.Hit=>CU.IMMUHit                                   Premise(F9)
	S17= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S13,S16)
	S18= PC.Out=>ICache.IEA                                     Premise(F10)
	S19= ICache.IEA=addr                                        Path(S7,S18)
	S20= ICache.Hit=ICacheHit(addr)                             ICache-Search(S19)
	S21= ICache.Out={5,rS,rT,offset}                            ICache-Search(S19,S3)
	S22= ICache.Out=>IR.In                                      Premise(F11)
	S23= IR.In={5,rS,rT,offset}                                 Path(S21,S22)
	S24= ICache.Out=>ICacheReg.In                               Premise(F12)
	S25= ICacheReg.In={5,rS,rT,offset}                          Path(S21,S24)
	S26= ICache.Hit=>CU.ICacheHit                               Premise(F13)
	S27= CU.ICacheHit=ICacheHit(addr)                           Path(S20,S26)
	S28= CtrlASIDIn=0                                           Premise(F14)
	S29= CtrlCP0=0                                              Premise(F15)
	S30= CP0[ASID]=pid                                          CP0-Hold(S0,S29)
	S31= CtrlEPCIn=0                                            Premise(F16)
	S32= CtrlExCodeIn=0                                         Premise(F17)
	S33= CtrlIMMU=0                                             Premise(F18)
	S34= CtrlPC=0                                               Premise(F19)
	S35= CtrlPCInc=1                                            Premise(F20)
	S36= PC[Out]=addr+4                                         PC-Inc(S1,S34,S35)
	S37= PC[CIA]=addr                                           PC-Inc(S1,S34,S35)
	S38= CtrlIAddrReg=0                                         Premise(F21)
	S39= CtrlICache=0                                           Premise(F22)
	S40= ICache[addr]={5,rS,rT,offset}                          ICache-Hold(S3,S39)
	S41= CtrlIR=1                                               Premise(F23)
	S42= [IR]={5,rS,rT,offset}                                  IR-Write(S23,S41)
	S43= CtrlICacheReg=0                                        Premise(F24)
	S44= CtrlIMem=0                                             Premise(F25)
	S45= IMem[{pid,addr}]={5,rS,rT,offset}                      IMem-Hold(S2,S44)
	S46= CtrlIRMux=0                                            Premise(F26)
	S47= CtrlGPR=0                                              Premise(F27)
	S48= GPR[rS]=a                                              GPR-Hold(S4,S47)
	S49= GPR[rT]=b                                              GPR-Hold(S5,S47)
	S50= CtrlA=0                                                Premise(F28)
	S51= CtrlB=0                                                Premise(F29)
	S52= CtrlALUOut=0                                           Premise(F30)
	S53= CtrlConditionReg=0                                     Premise(F31)

ID	S54= CP0.ASID=pid                                           CP0-Read-ASID(S30)
	S55= PC.Out=addr+4                                          PC-Out(S36)
	S56= PC.CIA=addr                                            PC-Out(S37)
	S57= PC.CIA31_28=addr[31:28]                                PC-Out(S37)
	S58= IR.Out={5,rS,rT,offset}                                IR-Out(S42)
	S59= IR.Out31_26=5                                          IR-Out(S42)
	S60= IR.Out25_21=rS                                         IR-Out(S42)
	S61= IR.Out20_16=rT                                         IR-Out(S42)
	S62= IR.Out15_0=offset                                      IR-Out(S42)
	S63= IR.Out31_26=>CU.Op                                     Premise(F50)
	S64= CU.Op=5                                                Path(S59,S63)
	S65= IR.Out25_21=>GPR.RReg1                                 Premise(F51)
	S66= GPR.RReg1=rS                                           Path(S60,S65)
	S67= GPR.Rdata1=a                                           GPR-Read(S66,S48)
	S68= IR.Out20_16=>GPR.RReg2                                 Premise(F52)
	S69= GPR.RReg2=rT                                           Path(S61,S68)
	S70= GPR.Rdata2=b                                           GPR-Read(S69,S49)
	S71= GPR.Rdata1=>A.In                                       Premise(F53)
	S72= A.In=a                                                 Path(S67,S71)
	S73= GPR.Rdata2=>B.In                                       Premise(F54)
	S74= B.In=b                                                 Path(S70,S73)
	S75= CtrlASIDIn=0                                           Premise(F55)
	S76= CtrlCP0=0                                              Premise(F56)
	S77= CP0[ASID]=pid                                          CP0-Hold(S30,S76)
	S78= CtrlEPCIn=0                                            Premise(F57)
	S79= CtrlExCodeIn=0                                         Premise(F58)
	S80= CtrlIMMU=0                                             Premise(F59)
	S81= CtrlPC=0                                               Premise(F60)
	S82= CtrlPCInc=0                                            Premise(F61)
	S83= PC[CIA]=addr                                           PC-Hold(S37,S82)
	S84= PC[Out]=addr+4                                         PC-Hold(S36,S81,S82)
	S85= CtrlIAddrReg=0                                         Premise(F62)
	S86= CtrlICache=0                                           Premise(F63)
	S87= ICache[addr]={5,rS,rT,offset}                          ICache-Hold(S40,S86)
	S88= CtrlIR=0                                               Premise(F64)
	S89= [IR]={5,rS,rT,offset}                                  IR-Hold(S42,S88)
	S90= CtrlICacheReg=0                                        Premise(F65)
	S91= CtrlIMem=0                                             Premise(F66)
	S92= IMem[{pid,addr}]={5,rS,rT,offset}                      IMem-Hold(S45,S91)
	S93= CtrlIRMux=0                                            Premise(F67)
	S94= CtrlGPR=0                                              Premise(F68)
	S95= GPR[rS]=a                                              GPR-Hold(S48,S94)
	S96= GPR[rT]=b                                              GPR-Hold(S49,S94)
	S97= CtrlA=1                                                Premise(F69)
	S98= [A]=a                                                  A-Write(S72,S97)
	S99= CtrlB=1                                                Premise(F70)
	S100= [B]=b                                                 B-Write(S74,S99)
	S101= CtrlALUOut=0                                          Premise(F71)
	S102= CtrlConditionReg=0                                    Premise(F72)

EX	S103= CP0.ASID=pid                                          CP0-Read-ASID(S77)
	S104= PC.CIA=addr                                           PC-Out(S83)
	S105= PC.CIA31_28=addr[31:28]                               PC-Out(S83)
	S106= PC.Out=addr+4                                         PC-Out(S84)
	S107= IR.Out={5,rS,rT,offset}                               IR-Out(S89)
	S108= IR.Out31_26=5                                         IR-Out(S89)
	S109= IR.Out25_21=rS                                        IR-Out(S89)
	S110= IR.Out20_16=rT                                        IR-Out(S89)
	S111= IR.Out15_0=offset                                     IR-Out(S89)
	S112= A.Out=a                                               A-Out(S98)
	S113= A.Out1_0={a}[1:0]                                     A-Out(S98)
	S114= A.Out4_0={a}[4:0]                                     A-Out(S98)
	S115= B.Out=b                                               B-Out(S100)
	S116= B.Out1_0={b}[1:0]                                     B-Out(S100)
	S117= B.Out4_0={b}[4:0]                                     B-Out(S100)
	S118= IR.Out15_0=>SEXT.In                                   Premise(F73)
	S119= SEXT.In=offset                                        Path(S111,S118)
	S120= SEXT.Out={14{offset[15]},offset,2{0}}                 SEXT(S119)
	S121= PC.CIA=>ALU.A                                         Premise(F74)
	S122= ALU.A=addr                                            Path(S104,S121)
	S123= SEXT.Out=>ALU.B                                       Premise(F75)
	S124= ALU.B={14{offset[15]},offset,2{0}}                    Path(S120,S123)
	S125= ALU.Func=6'b010010                                    Premise(F76)
	S126= ALU.Out=addr+{14{offset[15]},offset,2{0}}             ALU(S122,S124)
	S127= ALU.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]   ALU(S122,S124)
	S128= ALU.CMP=Compare0(addr+{14{offset[15]},offset,2{0}})   ALU(S122,S124)
	S129= ALU.OV=OverFlow(addr+{14{offset[15]},offset,2{0}})    ALU(S122,S124)
	S130= ALU.CA=Carry(addr+{14{offset[15]},offset,2{0}})       ALU(S122,S124)
	S131= ALU.Out=>ALUOut.In                                    Premise(F77)
	S132= ALUOut.In=addr+{14{offset[15]},offset,2{0}}           Path(S126,S131)
	S133= A.Out=>CMPU.A                                         Premise(F78)
	S134= CMPU.A=a                                              Path(S112,S133)
	S135= B.Out=>CMPU.B                                         Premise(F79)
	S136= CMPU.B=b                                              Path(S115,S135)
	S137= CMPU.Func=6'b000011                                   Premise(F80)
	S138= CMPU.Out=CompareS(a,b)                                CMPU-CMPS(S134,S136)
	S139= CMPU.zero=CompareS(a,b)                               CMPU-CMPS(S134,S136)
	S140= CMPU.gt=CompareS(a,b)                                 CMPU-CMPS(S134,S136)
	S141= CMPU.lt=CompareS(a,b)                                 CMPU-CMPS(S134,S136)
	S142= CMPU.zero=>ConditionReg.In                            Premise(F81)
	S143= ConditionReg.In=CompareS(a,b)                         Path(S139,S142)
	S144= CtrlASIDIn=0                                          Premise(F82)
	S145= CtrlCP0=0                                             Premise(F83)
	S146= CP0[ASID]=pid                                         CP0-Hold(S77,S145)
	S147= CtrlEPCIn=0                                           Premise(F84)
	S148= CtrlExCodeIn=0                                        Premise(F85)
	S149= CtrlIMMU=0                                            Premise(F86)
	S150= CtrlPC=0                                              Premise(F87)
	S151= CtrlPCInc=0                                           Premise(F88)
	S152= PC[CIA]=addr                                          PC-Hold(S83,S151)
	S153= PC[Out]=addr+4                                        PC-Hold(S84,S150,S151)
	S154= CtrlIAddrReg=0                                        Premise(F89)
	S155= CtrlICache=0                                          Premise(F90)
	S156= ICache[addr]={5,rS,rT,offset}                         ICache-Hold(S87,S155)
	S157= CtrlIR=0                                              Premise(F91)
	S158= [IR]={5,rS,rT,offset}                                 IR-Hold(S89,S157)
	S159= CtrlICacheReg=0                                       Premise(F92)
	S160= CtrlIMem=0                                            Premise(F93)
	S161= IMem[{pid,addr}]={5,rS,rT,offset}                     IMem-Hold(S92,S160)
	S162= CtrlIRMux=0                                           Premise(F94)
	S163= CtrlGPR=0                                             Premise(F95)
	S164= GPR[rS]=a                                             GPR-Hold(S95,S163)
	S165= GPR[rT]=b                                             GPR-Hold(S96,S163)
	S166= CtrlA=0                                               Premise(F96)
	S167= [A]=a                                                 A-Hold(S98,S166)
	S168= CtrlB=0                                               Premise(F97)
	S169= [B]=b                                                 B-Hold(S100,S168)
	S170= CtrlALUOut=1                                          Premise(F98)
	S171= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Write(S132,S170)
	S172= CtrlConditionReg=1                                    Premise(F99)
	S173= [ConditionReg]=CompareS(a,b)                          ConditionReg-Write(S143,S172)

MEM	S174= CP0.ASID=pid                                          CP0-Read-ASID(S146)
	S175= PC.CIA=addr                                           PC-Out(S152)
	S176= PC.CIA31_28=addr[31:28]                               PC-Out(S152)
	S177= PC.Out=addr+4                                         PC-Out(S153)
	S178= IR.Out={5,rS,rT,offset}                               IR-Out(S158)
	S179= IR.Out31_26=5                                         IR-Out(S158)
	S180= IR.Out25_21=rS                                        IR-Out(S158)
	S181= IR.Out20_16=rT                                        IR-Out(S158)
	S182= IR.Out15_0=offset                                     IR-Out(S158)
	S183= A.Out=a                                               A-Out(S167)
	S184= A.Out1_0={a}[1:0]                                     A-Out(S167)
	S185= A.Out4_0={a}[4:0]                                     A-Out(S167)
	S186= B.Out=b                                               B-Out(S169)
	S187= B.Out1_0={b}[1:0]                                     B-Out(S169)
	S188= B.Out4_0={b}[4:0]                                     B-Out(S169)
	S189= ALUOut.Out=addr+{14{offset[15]},offset,2{0}}          ALUOut-Out(S171)
	S190= ALUOut.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut-Out(S171)
	S191= ALUOut.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut-Out(S171)
	S192= ConditionReg.Out=CompareS(a,b)                        ConditionReg-Out(S173)
	S193= ConditionReg.Out1_0={CompareS(a,b)}[1:0]              ConditionReg-Out(S173)
	S194= ConditionReg.Out4_0={CompareS(a,b)}[4:0]              ConditionReg-Out(S173)
	S195= ALUOut.Out=>PC.In                                     Premise(F100)
	S196= PC.In=addr+{14{offset[15]},offset,2{0}}               Path(S189,S195)
	S197= ConditionReg.Out=>CU.zero                             Premise(F101)
	S198= CU.zero=CompareS(a,b)                                 Path(S192,S197)
	S199= CtrlASIDIn=0                                          Premise(F102)
	S200= CtrlCP0=0                                             Premise(F103)
	S201= CP0[ASID]=pid                                         CP0-Hold(S146,S200)
	S202= CtrlEPCIn=0                                           Premise(F104)
	S203= CtrlExCodeIn=0                                        Premise(F105)
	S204= CtrlIMMU=0                                            Premise(F106)
	S205= CtrlPC=1                                              Premise(F107)
	S206= CtrlPCInc=0                                           Premise(F108)
	S207= PC[CIA]=addr                                          PC-Hold(S152,S206)
	S208= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Write(S196,S205,S206)
	S209= CtrlIAddrReg=0                                        Premise(F109)
	S210= CtrlICache=0                                          Premise(F110)
	S211= ICache[addr]={5,rS,rT,offset}                         ICache-Hold(S156,S210)
	S212= CtrlIR=0                                              Premise(F111)
	S213= [IR]={5,rS,rT,offset}                                 IR-Hold(S158,S212)
	S214= CtrlICacheReg=0                                       Premise(F112)
	S215= CtrlIMem=0                                            Premise(F113)
	S216= IMem[{pid,addr}]={5,rS,rT,offset}                     IMem-Hold(S161,S215)
	S217= CtrlIRMux=0                                           Premise(F114)
	S218= CtrlGPR=0                                             Premise(F115)
	S219= GPR[rS]=a                                             GPR-Hold(S164,S218)
	S220= GPR[rT]=b                                             GPR-Hold(S165,S218)
	S221= CtrlA=0                                               Premise(F116)
	S222= [A]=a                                                 A-Hold(S167,S221)
	S223= CtrlB=0                                               Premise(F117)
	S224= [B]=b                                                 B-Hold(S169,S223)
	S225= CtrlALUOut=0                                          Premise(F118)
	S226= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Hold(S171,S225)
	S227= CtrlConditionReg=0                                    Premise(F119)
	S228= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S173,S227)

WB	S229= CP0.ASID=pid                                          CP0-Read-ASID(S201)
	S230= PC.CIA=addr                                           PC-Out(S207)
	S231= PC.CIA31_28=addr[31:28]                               PC-Out(S207)
	S232= PC.Out=addr+{14{offset[15]},offset,2{0}}              PC-Out(S208)
	S233= IR.Out={5,rS,rT,offset}                               IR-Out(S213)
	S234= IR.Out31_26=5                                         IR-Out(S213)
	S235= IR.Out25_21=rS                                        IR-Out(S213)
	S236= IR.Out20_16=rT                                        IR-Out(S213)
	S237= IR.Out15_0=offset                                     IR-Out(S213)
	S238= A.Out=a                                               A-Out(S222)
	S239= A.Out1_0={a}[1:0]                                     A-Out(S222)
	S240= A.Out4_0={a}[4:0]                                     A-Out(S222)
	S241= B.Out=b                                               B-Out(S224)
	S242= B.Out1_0={b}[1:0]                                     B-Out(S224)
	S243= B.Out4_0={b}[4:0]                                     B-Out(S224)
	S244= ALUOut.Out=addr+{14{offset[15]},offset,2{0}}          ALUOut-Out(S226)
	S245= ALUOut.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut-Out(S226)
	S246= ALUOut.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut-Out(S226)
	S247= ConditionReg.Out=CompareS(a,b)                        ConditionReg-Out(S228)
	S248= ConditionReg.Out1_0={CompareS(a,b)}[1:0]              ConditionReg-Out(S228)
	S249= ConditionReg.Out4_0={CompareS(a,b)}[4:0]              ConditionReg-Out(S228)
	S250= CtrlASIDIn=0                                          Premise(F156)
	S251= CtrlCP0=0                                             Premise(F157)
	S252= CP0[ASID]=pid                                         CP0-Hold(S201,S251)
	S253= CtrlEPCIn=0                                           Premise(F158)
	S254= CtrlExCodeIn=0                                        Premise(F159)
	S255= CtrlIMMU=0                                            Premise(F160)
	S256= CtrlPC=0                                              Premise(F161)
	S257= CtrlPCInc=0                                           Premise(F162)
	S258= PC[CIA]=addr                                          PC-Hold(S207,S257)
	S259= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Hold(S208,S256,S257)
	S260= CtrlIAddrReg=0                                        Premise(F163)
	S261= CtrlICache=0                                          Premise(F164)
	S262= ICache[addr]={5,rS,rT,offset}                         ICache-Hold(S211,S261)
	S263= CtrlIR=0                                              Premise(F165)
	S264= [IR]={5,rS,rT,offset}                                 IR-Hold(S213,S263)
	S265= CtrlICacheReg=0                                       Premise(F166)
	S266= CtrlIMem=0                                            Premise(F167)
	S267= IMem[{pid,addr}]={5,rS,rT,offset}                     IMem-Hold(S216,S266)
	S268= CtrlIRMux=0                                           Premise(F168)
	S269= CtrlGPR=0                                             Premise(F169)
	S270= GPR[rS]=a                                             GPR-Hold(S219,S269)
	S271= GPR[rT]=b                                             GPR-Hold(S220,S269)
	S272= CtrlA=0                                               Premise(F170)
	S273= [A]=a                                                 A-Hold(S222,S272)
	S274= CtrlB=0                                               Premise(F171)
	S275= [B]=b                                                 B-Hold(S224,S274)
	S276= CtrlALUOut=0                                          Premise(F172)
	S277= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Hold(S226,S276)
	S278= CtrlConditionReg=0                                    Premise(F173)
	S279= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S228,S278)

POST	S252= CP0[ASID]=pid                                         CP0-Hold(S201,S251)
	S258= PC[CIA]=addr                                          PC-Hold(S207,S257)
	S259= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Hold(S208,S256,S257)
	S262= ICache[addr]={5,rS,rT,offset}                         ICache-Hold(S211,S261)
	S264= [IR]={5,rS,rT,offset}                                 IR-Hold(S213,S263)
	S267= IMem[{pid,addr}]={5,rS,rT,offset}                     IMem-Hold(S216,S266)
	S270= GPR[rS]=a                                             GPR-Hold(S219,S269)
	S271= GPR[rT]=b                                             GPR-Hold(S220,S269)
	S273= [A]=a                                                 A-Hold(S222,S272)
	S275= [B]=b                                                 B-Hold(S224,S274)
	S277= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Hold(S226,S276)
	S279= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S228,S278)

