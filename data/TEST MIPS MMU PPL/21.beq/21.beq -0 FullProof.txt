
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={4,rS,rT,offset}                       Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= CP0.ASID=>IMMU.PID                                      Premise(F3)
	S6= IMMU.PID=pid                                            Path(S3,S5)
	S7= PC.Out=>IMMU.IEA                                        Premise(F4)
	S8= IMMU.IEA=addr                                           Path(S4,S7)
	S9= IMMU.Addr={pid,addr}                                    IMMU-Search(S6,S8)
	S10= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S6,S8)
	S11= IMMU.Addr=>IAddrReg.In                                 Premise(F5)
	S12= IAddrReg.In={pid,addr}                                 Path(S9,S11)
	S13= IMMU.Hit=>CU_IF.IMMUHit                                Premise(F6)
	S14= CU_IF.IMMUHit=IMMUHit(pid,addr)                        Path(S10,S13)
	S15= PC.Out=>ICache.IEA                                     Premise(F7)
	S16= ICache.IEA=addr                                        Path(S4,S15)
	S17= ICache.Hit=ICacheHit(addr)                             ICache-Search(S16)
	S18= ICache.Out=>ICacheReg.In                               Premise(F8)
	S19= ICache.Out=>IR_IMMU.In                                 Premise(F9)
	S20= ICache.Hit=>CU_IF.ICacheHit                            Premise(F10)
	S21= CU_IF.ICacheHit=ICacheHit(addr)                        Path(S17,S20)
	S22= ICache.Out=>IR_ID.In                                   Premise(F11)
	S23= CU_IF.IMMUHitOut=>CU_ID.IMMUHit                        Premise(F12)
	S24= CU_IF.ICacheHitOut=>CU_ID.ICacheHit                    Premise(F13)
	S25= CU_IF.IMMUHitOut=>CU_IMMU.IMMUHit                      Premise(F14)
	S26= CU_IF.ICacheHitOut=>CU_IMMU.ICacheHit                  Premise(F15)
	S27= ICache.Hit=>FU.ICacheHit                               Premise(F16)
	S28= FU.ICacheHit=ICacheHit(addr)                           Path(S17,S27)
	S29= FU.Halt_IF=>CU_IF.Halt                                 Premise(F17)
	S30= FU.Bub_IF=>CU_IF.Bub                                   Premise(F18)
	S31= CtrlASIDIn=0                                           Premise(F19)
	S32= CtrlCP0=0                                              Premise(F20)
	S33= CP0[ASID]=pid                                          CP0-Hold(S0,S32)
	S34= CtrlEPCIn=0                                            Premise(F21)
	S35= CtrlExCodeIn=0                                         Premise(F22)
	S36= CtrlIMMU=0                                             Premise(F23)
	S37= CtrlPC=0                                               Premise(F24)
	S38= CtrlPCInc=0                                            Premise(F25)
	S39= PC[Out]=addr                                           PC-Hold(S1,S37,S38)
	S40= CtrlIAddrReg=1                                         Premise(F26)
	S41= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S40)
	S42= CtrlICache=0                                           Premise(F27)
	S43= CtrlICacheReg=1                                        Premise(F28)
	S44= CtrlIR_IMMU=1                                          Premise(F29)
	S45= CtrlIR_ID=0                                            Premise(F30)
	S46= CtrlIMem=0                                             Premise(F31)
	S47= IMem[{pid,addr}]={4,rS,rT,offset}                      IMem-Hold(S2,S46)
	S48= CtrlIRMux=0                                            Premise(F32)
	S49= CtrlGPR=0                                              Premise(F33)
	S50= CtrlA_EX=0                                             Premise(F34)
	S51= CtrlB_EX=0                                             Premise(F35)
	S52= CtrlIR_EX=0                                            Premise(F36)
	S53= CtrlALUOut_MEM=0                                       Premise(F37)
	S54= CtrlConditionReg_MEM=0                                 Premise(F38)
	S55= CtrlIR_MEM=0                                           Premise(F39)
	S56= CtrlIR_DMMU1=0                                         Premise(F40)
	S57= CtrlIR_WB=0                                            Premise(F41)
	S58= CtrlA_MEM=0                                            Premise(F42)
	S59= CtrlA_WB=0                                             Premise(F43)
	S60= CtrlB_MEM=0                                            Premise(F44)
	S61= CtrlB_WB=0                                             Premise(F45)
	S62= CtrlALUOut_WB=0                                        Premise(F46)
	S63= CtrlConditionReg_WB=0                                  Premise(F47)
	S64= CtrlIR_DMMU2=0                                         Premise(F48)
	S65= GPR[rS]=a                                              Premise(F49)
	S66= GPR[rT]=b                                              Premise(F50)

IF(IMMU)	S67= CP0.ASID=pid                                           CP0-Read-ASID(S33)
	S68= PC.Out=addr                                            PC-Out(S39)
	S69= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S41)
	S70= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S41)
	S71= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S41)
	S72= IR_IMMU.Out=>FU.IR_IMMU                                Premise(F51)
	S73= CU_ID.IMMUHitOut=>CU_ID.IMMUHit                        Premise(F52)
	S74= CU_ID.ICacheHitOut=>CU_ID.ICacheHit                    Premise(F53)
	S75= IAddrReg.Out=>IMem.RAddr                               Premise(F54)
	S76= IMem.RAddr={pid,addr}                                  Path(S69,S75)
	S77= IMem.Out={4,rS,rT,offset}                              IMem-Read(S76,S47)
	S78= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S76,S47)
	S79= IMem.Out=>IRMux.MemData                                Premise(F55)
	S80= IRMux.MemData={4,rS,rT,offset}                         Path(S77,S79)
	S81= IRMux.Out={4,rS,rT,offset}                             IRMux-Select2(S80)
	S82= ICacheReg.Out=>IRMux.CacheData                         Premise(F56)
	S83= CU_IMMU.IMMUHit=>IRMux.MemSel                          Premise(F57)
	S84= CU_IMMU.ICacheHit=>IRMux.CacheSel                      Premise(F58)
	S85= IRMux.Out=>IR_ID.In                                    Premise(F59)
	S86= IR_ID.In={4,rS,rT,offset}                              Path(S81,S85)
	S87= IMem.MEM8WordOut=>ICache.WData                         Premise(F60)
	S88= ICache.WData=IMemGet8Word({pid,addr})                  Path(S78,S87)
	S89= PC.Out=>ICache.IEA                                     Premise(F61)
	S90= ICache.IEA=addr                                        Path(S68,S89)
	S91= ICache.Hit=ICacheHit(addr)                             ICache-Search(S90)
	S92= FU.Halt_IMMU=>CU_IMMU.Halt                             Premise(F62)
	S93= FU.Bub_IMMU=>CU_IMMU.Bub                               Premise(F63)
	S94= CtrlASIDIn=0                                           Premise(F64)
	S95= CtrlCP0=0                                              Premise(F65)
	S96= CP0[ASID]=pid                                          CP0-Hold(S33,S95)
	S97= CtrlEPCIn=0                                            Premise(F66)
	S98= CtrlExCodeIn=0                                         Premise(F67)
	S99= CtrlIMMU=0                                             Premise(F68)
	S100= CtrlPC=0                                              Premise(F69)
	S101= CtrlPCInc=1                                           Premise(F70)
	S102= PC[Out]=addr+4                                        PC-Inc(S39,S100,S101)
	S103= PC[CIA]=addr                                          PC-Inc(S39,S100,S101)
	S104= CtrlIAddrReg=0                                        Premise(F71)
	S105= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S41,S104)
	S106= CtrlICache=1                                          Premise(F72)
	S107= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S90,S88,S106)
	S108= CtrlICacheReg=0                                       Premise(F73)
	S109= CtrlIR_IMMU=0                                         Premise(F74)
	S110= CtrlIR_ID=1                                           Premise(F75)
	S111= [IR_ID]={4,rS,rT,offset}                              IR_ID-Write(S86,S110)
	S112= CtrlIMem=0                                            Premise(F76)
	S113= IMem[{pid,addr}]={4,rS,rT,offset}                     IMem-Hold(S47,S112)
	S114= CtrlIRMux=0                                           Premise(F77)
	S115= CtrlGPR=0                                             Premise(F78)
	S116= GPR[rS]=a                                             GPR-Hold(S65,S115)
	S117= GPR[rT]=b                                             GPR-Hold(S66,S115)
	S118= CtrlA_EX=0                                            Premise(F79)
	S119= CtrlB_EX=0                                            Premise(F80)
	S120= CtrlIR_EX=0                                           Premise(F81)
	S121= CtrlALUOut_MEM=0                                      Premise(F82)
	S122= CtrlConditionReg_MEM=0                                Premise(F83)
	S123= CtrlIR_MEM=0                                          Premise(F84)
	S124= CtrlIR_DMMU1=0                                        Premise(F85)
	S125= CtrlIR_WB=0                                           Premise(F86)
	S126= CtrlA_MEM=0                                           Premise(F87)
	S127= CtrlA_WB=0                                            Premise(F88)
	S128= CtrlB_MEM=0                                           Premise(F89)
	S129= CtrlB_WB=0                                            Premise(F90)
	S130= CtrlALUOut_WB=0                                       Premise(F91)
	S131= CtrlConditionReg_WB=0                                 Premise(F92)
	S132= CtrlIR_DMMU2=0                                        Premise(F93)

ID	S133= CP0.ASID=pid                                          CP0-Read-ASID(S96)
	S134= PC.Out=addr+4                                         PC-Out(S102)
	S135= PC.CIA=addr                                           PC-Out(S103)
	S136= PC.CIA31_28=addr[31:28]                               PC-Out(S103)
	S137= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S105)
	S138= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S105)
	S139= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S105)
	S140= IR_ID.Out={4,rS,rT,offset}                            IR-Out(S111)
	S141= IR_ID.Out31_26=4                                      IR-Out(S111)
	S142= IR_ID.Out25_21=rS                                     IR-Out(S111)
	S143= IR_ID.Out20_16=rT                                     IR-Out(S111)
	S144= IR_ID.Out15_0=offset                                  IR-Out(S111)
	S145= IR_ID.Out=>FU.IR_ID                                   Premise(F94)
	S146= FU.IR_ID={4,rS,rT,offset}                             Path(S140,S145)
	S147= CU_ID.IMMUHitOut=>CU_EX.IMMUHit                       Premise(F95)
	S148= CU_ID.ICacheHitOut=>CU_EX.ICacheHit                   Premise(F96)
	S149= IR_ID.Out31_26=>CU_ID.Op                              Premise(F97)
	S150= CU_ID.Op=4                                            Path(S141,S149)
	S151= IR_ID.Out25_21=>GPR.RReg1                             Premise(F98)
	S152= GPR.RReg1=rS                                          Path(S142,S151)
	S153= GPR.Rdata1=a                                          GPR-Read(S152,S116)
	S154= IR_ID.Out20_16=>GPR.RReg2                             Premise(F99)
	S155= GPR.RReg2=rT                                          Path(S143,S154)
	S156= GPR.Rdata2=b                                          GPR-Read(S155,S117)
	S157= GPR.Rdata1=>FU.InID1                                  Premise(F100)
	S158= FU.InID1=a                                            Path(S153,S157)
	S159= FU.OutID1=FU(a)                                       FU-Forward(S158)
	S160= IR_ID.Out25_21=>FU.InID1_RReg                         Premise(F101)
	S161= FU.InID1_RReg=rS                                      Path(S142,S160)
	S162= FU.OutID1=>A_EX.In                                    Premise(F102)
	S163= A_EX.In=FU(a)                                         Path(S159,S162)
	S164= GPR.Rdata2=>FU.InID2                                  Premise(F103)
	S165= FU.InID2=b                                            Path(S156,S164)
	S166= FU.OutID2=FU(b)                                       FU-Forward(S165)
	S167= IR_ID.Out20_16=>FU.InID2_RReg                         Premise(F104)
	S168= FU.InID2_RReg=rT                                      Path(S143,S167)
	S169= FU.OutID2=>B_EX.In                                    Premise(F105)
	S170= B_EX.In=FU(b)                                         Path(S166,S169)
	S171= IR_ID.Out=>IR_EX.In                                   Premise(F106)
	S172= IR_EX.In={4,rS,rT,offset}                             Path(S140,S171)
	S173= FU.Halt_ID=>CU_ID.Halt                                Premise(F107)
	S174= FU.Bub_ID=>CU_ID.Bub                                  Premise(F108)
	S175= CtrlASIDIn=0                                          Premise(F109)
	S176= CtrlCP0=0                                             Premise(F110)
	S177= CP0[ASID]=pid                                         CP0-Hold(S96,S176)
	S178= CtrlEPCIn=0                                           Premise(F111)
	S179= CtrlExCodeIn=0                                        Premise(F112)
	S180= CtrlIMMU=0                                            Premise(F113)
	S181= CtrlPC=0                                              Premise(F114)
	S182= CtrlPCInc=0                                           Premise(F115)
	S183= PC[CIA]=addr                                          PC-Hold(S103,S182)
	S184= PC[Out]=addr+4                                        PC-Hold(S102,S181,S182)
	S185= CtrlIAddrReg=0                                        Premise(F116)
	S186= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S105,S185)
	S187= CtrlICache=0                                          Premise(F117)
	S188= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S107,S187)
	S189= CtrlICacheReg=0                                       Premise(F118)
	S190= CtrlIR_IMMU=0                                         Premise(F119)
	S191= CtrlIR_ID=0                                           Premise(F120)
	S192= [IR_ID]={4,rS,rT,offset}                              IR_ID-Hold(S111,S191)
	S193= CtrlIMem=0                                            Premise(F121)
	S194= IMem[{pid,addr}]={4,rS,rT,offset}                     IMem-Hold(S113,S193)
	S195= CtrlIRMux=0                                           Premise(F122)
	S196= CtrlGPR=0                                             Premise(F123)
	S197= GPR[rS]=a                                             GPR-Hold(S116,S196)
	S198= GPR[rT]=b                                             GPR-Hold(S117,S196)
	S199= CtrlA_EX=1                                            Premise(F124)
	S200= [A_EX]=FU(a)                                          A_EX-Write(S163,S199)
	S201= CtrlB_EX=1                                            Premise(F125)
	S202= [B_EX]=FU(b)                                          B_EX-Write(S170,S201)
	S203= CtrlIR_EX=1                                           Premise(F126)
	S204= [IR_EX]={4,rS,rT,offset}                              IR_EX-Write(S172,S203)
	S205= CtrlALUOut_MEM=0                                      Premise(F127)
	S206= CtrlConditionReg_MEM=0                                Premise(F128)
	S207= CtrlIR_MEM=0                                          Premise(F129)
	S208= CtrlIR_DMMU1=0                                        Premise(F130)
	S209= CtrlIR_WB=0                                           Premise(F131)
	S210= CtrlA_MEM=0                                           Premise(F132)
	S211= CtrlA_WB=0                                            Premise(F133)
	S212= CtrlB_MEM=0                                           Premise(F134)
	S213= CtrlB_WB=0                                            Premise(F135)
	S214= CtrlALUOut_WB=0                                       Premise(F136)
	S215= CtrlConditionReg_WB=0                                 Premise(F137)
	S216= CtrlIR_DMMU2=0                                        Premise(F138)

EX	S217= CP0.ASID=pid                                          CP0-Read-ASID(S177)
	S218= PC.CIA=addr                                           PC-Out(S183)
	S219= PC.CIA31_28=addr[31:28]                               PC-Out(S183)
	S220= PC.Out=addr+4                                         PC-Out(S184)
	S221= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S186)
	S222= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S186)
	S223= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S186)
	S224= IR_ID.Out={4,rS,rT,offset}                            IR-Out(S192)
	S225= IR_ID.Out31_26=4                                      IR-Out(S192)
	S226= IR_ID.Out25_21=rS                                     IR-Out(S192)
	S227= IR_ID.Out20_16=rT                                     IR-Out(S192)
	S228= IR_ID.Out15_0=offset                                  IR-Out(S192)
	S229= A_EX.Out=FU(a)                                        A_EX-Out(S200)
	S230= A_EX.Out1_0={FU(a)}[1:0]                              A_EX-Out(S200)
	S231= A_EX.Out4_0={FU(a)}[4:0]                              A_EX-Out(S200)
	S232= B_EX.Out=FU(b)                                        B_EX-Out(S202)
	S233= B_EX.Out1_0={FU(b)}[1:0]                              B_EX-Out(S202)
	S234= B_EX.Out4_0={FU(b)}[4:0]                              B_EX-Out(S202)
	S235= IR_EX.Out={4,rS,rT,offset}                            IR_EX-Out(S204)
	S236= IR_EX.Out31_26=4                                      IR_EX-Out(S204)
	S237= IR_EX.Out25_21=rS                                     IR_EX-Out(S204)
	S238= IR_EX.Out20_16=rT                                     IR_EX-Out(S204)
	S239= IR_EX.Out15_0=offset                                  IR_EX-Out(S204)
	S240= IR_EX.Out=>FU.IR_EX                                   Premise(F139)
	S241= FU.IR_EX={4,rS,rT,offset}                             Path(S235,S240)
	S242= CU_EX.IMMUHitOut=>CU_MEM.IMMUHit                      Premise(F140)
	S243= CU_EX.ICacheHitOut=>CU_MEM.ICacheHit                  Premise(F141)
	S244= IR_EX.Out31_26=>CU_EX.Op                              Premise(F142)
	S245= CU_EX.Op=4                                            Path(S236,S244)
	S246= IR_EX.Out15_0=>SEXT.In                                Premise(F143)
	S247= SEXT.In=offset                                        Path(S239,S246)
	S248= SEXT.Out={14{offset[15]},offset,2{0}}                 SEXT(S247)
	S249= PC.CIA=>ALU.A                                         Premise(F144)
	S250= ALU.A=addr                                            Path(S218,S249)
	S251= SEXT.Out=>ALU.B                                       Premise(F145)
	S252= ALU.B={14{offset[15]},offset,2{0}}                    Path(S248,S251)
	S253= ALU.Func=6'b010010                                    Premise(F146)
	S254= ALU.Out=addr+{14{offset[15]},offset,2{0}}             ALU(S250,S252)
	S255= ALU.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]   ALU(S250,S252)
	S256= ALU.CMP=Compare0(addr+{14{offset[15]},offset,2{0}})   ALU(S250,S252)
	S257= ALU.OV=OverFlow(addr+{14{offset[15]},offset,2{0}})    ALU(S250,S252)
	S258= ALU.CA=Carry(addr+{14{offset[15]},offset,2{0}})       ALU(S250,S252)
	S259= ALU.Out=>ALUOut_MEM.In                                Premise(F147)
	S260= ALUOut_MEM.In=addr+{14{offset[15]},offset,2{0}}       Path(S254,S259)
	S261= A_EX.Out=>CMPU.A                                      Premise(F148)
	S262= CMPU.A=FU(a)                                          Path(S229,S261)
	S263= B_EX.Out=>CMPU.B                                      Premise(F149)
	S264= CMPU.B=FU(b)                                          Path(S232,S263)
	S265= CMPU.Func=6'b000011                                   Premise(F150)
	S266= CMPU.Out=CompareS(FU(a),FU(b))                        CMPU-CMPS(S262,S264)
	S267= CMPU.zero=CompareS(FU(a),FU(b))                       CMPU-CMPS(S262,S264)
	S268= CMPU.gt=CompareS(FU(a),FU(b))                         CMPU-CMPS(S262,S264)
	S269= CMPU.lt=CompareS(FU(a),FU(b))                         CMPU-CMPS(S262,S264)
	S270= CMPU.zero=>ConditionReg_MEM.In                        Premise(F151)
	S271= ConditionReg_MEM.In=CompareS(FU(a),FU(b))             Path(S267,S270)
	S272= IR_EX.Out=>IR_MEM.In                                  Premise(F152)
	S273= IR_MEM.In={4,rS,rT,offset}                            Path(S235,S272)
	S274= FU.InEX_WReg=5'b00000                                 Premise(F153)
	S275= CtrlASIDIn=0                                          Premise(F154)
	S276= CtrlCP0=0                                             Premise(F155)
	S277= CP0[ASID]=pid                                         CP0-Hold(S177,S276)
	S278= CtrlEPCIn=0                                           Premise(F156)
	S279= CtrlExCodeIn=0                                        Premise(F157)
	S280= CtrlIMMU=0                                            Premise(F158)
	S281= CtrlPC=0                                              Premise(F159)
	S282= CtrlPCInc=0                                           Premise(F160)
	S283= PC[CIA]=addr                                          PC-Hold(S183,S282)
	S284= PC[Out]=addr+4                                        PC-Hold(S184,S281,S282)
	S285= CtrlIAddrReg=0                                        Premise(F161)
	S286= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S186,S285)
	S287= CtrlICache=0                                          Premise(F162)
	S288= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S188,S287)
	S289= CtrlICacheReg=0                                       Premise(F163)
	S290= CtrlIR_IMMU=0                                         Premise(F164)
	S291= CtrlIR_ID=0                                           Premise(F165)
	S292= [IR_ID]={4,rS,rT,offset}                              IR_ID-Hold(S192,S291)
	S293= CtrlIMem=0                                            Premise(F166)
	S294= IMem[{pid,addr}]={4,rS,rT,offset}                     IMem-Hold(S194,S293)
	S295= CtrlIRMux=0                                           Premise(F167)
	S296= CtrlGPR=0                                             Premise(F168)
	S297= GPR[rS]=a                                             GPR-Hold(S197,S296)
	S298= GPR[rT]=b                                             GPR-Hold(S198,S296)
	S299= CtrlA_EX=0                                            Premise(F169)
	S300= [A_EX]=FU(a)                                          A_EX-Hold(S200,S299)
	S301= CtrlB_EX=0                                            Premise(F170)
	S302= [B_EX]=FU(b)                                          B_EX-Hold(S202,S301)
	S303= CtrlIR_EX=0                                           Premise(F171)
	S304= [IR_EX]={4,rS,rT,offset}                              IR_EX-Hold(S204,S303)
	S305= CtrlALUOut_MEM=1                                      Premise(F172)
	S306= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Write(S260,S305)
	S307= CtrlConditionReg_MEM=1                                Premise(F173)
	S308= [ConditionReg_MEM]=CompareS(FU(a),FU(b))              ConditionReg_MEM-Write(S271,S307)
	S309= CtrlIR_MEM=1                                          Premise(F174)
	S310= [IR_MEM]={4,rS,rT,offset}                             IR_MEM-Write(S273,S309)
	S311= CtrlIR_DMMU1=0                                        Premise(F175)
	S312= CtrlIR_WB=0                                           Premise(F176)
	S313= CtrlA_MEM=0                                           Premise(F177)
	S314= CtrlA_WB=0                                            Premise(F178)
	S315= CtrlB_MEM=0                                           Premise(F179)
	S316= CtrlB_WB=0                                            Premise(F180)
	S317= CtrlALUOut_WB=0                                       Premise(F181)
	S318= CtrlConditionReg_WB=0                                 Premise(F182)
	S319= CtrlIR_DMMU2=0                                        Premise(F183)

MEM	S320= CP0.ASID=pid                                          CP0-Read-ASID(S277)
	S321= PC.CIA=addr                                           PC-Out(S283)
	S322= PC.CIA31_28=addr[31:28]                               PC-Out(S283)
	S323= PC.Out=addr+4                                         PC-Out(S284)
	S324= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S286)
	S325= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S286)
	S326= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S286)
	S327= IR_ID.Out={4,rS,rT,offset}                            IR-Out(S292)
	S328= IR_ID.Out31_26=4                                      IR-Out(S292)
	S329= IR_ID.Out25_21=rS                                     IR-Out(S292)
	S330= IR_ID.Out20_16=rT                                     IR-Out(S292)
	S331= IR_ID.Out15_0=offset                                  IR-Out(S292)
	S332= A_EX.Out=FU(a)                                        A_EX-Out(S300)
	S333= A_EX.Out1_0={FU(a)}[1:0]                              A_EX-Out(S300)
	S334= A_EX.Out4_0={FU(a)}[4:0]                              A_EX-Out(S300)
	S335= B_EX.Out=FU(b)                                        B_EX-Out(S302)
	S336= B_EX.Out1_0={FU(b)}[1:0]                              B_EX-Out(S302)
	S337= B_EX.Out4_0={FU(b)}[4:0]                              B_EX-Out(S302)
	S338= IR_EX.Out={4,rS,rT,offset}                            IR_EX-Out(S304)
	S339= IR_EX.Out31_26=4                                      IR_EX-Out(S304)
	S340= IR_EX.Out25_21=rS                                     IR_EX-Out(S304)
	S341= IR_EX.Out20_16=rT                                     IR_EX-Out(S304)
	S342= IR_EX.Out15_0=offset                                  IR_EX-Out(S304)
	S343= ALUOut_MEM.Out=addr+{14{offset[15]},offset,2{0}}      ALUOut_MEM-Out(S306)
	S344= ALUOut_MEM.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut_MEM-Out(S306)
	S345= ALUOut_MEM.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut_MEM-Out(S306)
	S346= ConditionReg_MEM.Out=CompareS(FU(a),FU(b))            ConditionReg_MEM-Out(S308)
	S347= ConditionReg_MEM.Out1_0={CompareS(FU(a),FU(b))}[1:0]  ConditionReg_MEM-Out(S308)
	S348= ConditionReg_MEM.Out4_0={CompareS(FU(a),FU(b))}[4:0]  ConditionReg_MEM-Out(S308)
	S349= IR_MEM.Out={4,rS,rT,offset}                           IR_MEM-Out(S310)
	S350= IR_MEM.Out31_26=4                                     IR_MEM-Out(S310)
	S351= IR_MEM.Out25_21=rS                                    IR_MEM-Out(S310)
	S352= IR_MEM.Out20_16=rT                                    IR_MEM-Out(S310)
	S353= IR_MEM.Out15_0=offset                                 IR_MEM-Out(S310)
	S354= IR_MEM.Out=>FU.IR_MEM                                 Premise(F184)
	S355= FU.IR_MEM={4,rS,rT,offset}                            Path(S349,S354)
	S356= CU_MEM.IMMUHitOut=>CU_DMMU1.IMMUHit                   Premise(F185)
	S357= CU_MEM.ICacheHitOut=>CU_DMMU1.ICacheHit               Premise(F186)
	S358= CU_MEM.DMMUHitOut=>CU_DMMU1.DMMUHit                   Premise(F187)
	S359= CU_MEM.DCacheHitOut=>CU_DMMU1.DCacheHit               Premise(F188)
	S360= IR_MEM.Out31_26=>CU_MEM.Op                            Premise(F189)
	S361= CU_MEM.Op=4                                           Path(S350,S360)
	S362= ALUOut_MEM.Out=>PC.In                                 Premise(F190)
	S363= PC.In=addr+{14{offset[15]},offset,2{0}}               Path(S343,S362)
	S364= ConditionReg_MEM.Out=>CU_MEM.zero                     Premise(F191)
	S365= CU_MEM.zero=CompareS(FU(a),FU(b))                     Path(S346,S364)
	S366= IR_MEM.Out=>IR_DMMU1.In                               Premise(F192)
	S367= IR_DMMU1.In={4,rS,rT,offset}                          Path(S349,S366)
	S368= IR_MEM.Out=>IR_WB.In                                  Premise(F193)
	S369= IR_WB.In={4,rS,rT,offset}                             Path(S349,S368)
	S370= A_MEM.Out=>A_WB.In                                    Premise(F194)
	S371= B_MEM.Out=>B_WB.In                                    Premise(F195)
	S372= ALUOut_MEM.Out=>ALUOut_WB.In                          Premise(F196)
	S373= ALUOut_WB.In=addr+{14{offset[15]},offset,2{0}}        Path(S343,S372)
	S374= ConditionReg_MEM.Out=>ConditionReg_WB.In              Premise(F197)
	S375= ConditionReg_WB.In=CompareS(FU(a),FU(b))              Path(S346,S374)
	S376= CU_MEM.IMMUHitOut=>CU_WB.IMMUHit                      Premise(F198)
	S377= CU_MEM.ICacheHitOut=>CU_WB.ICacheHit                  Premise(F199)
	S378= FU.InMEM_WReg=5'b00000                                Premise(F200)
	S379= CtrlASIDIn=0                                          Premise(F201)
	S380= CtrlCP0=0                                             Premise(F202)
	S381= CP0[ASID]=pid                                         CP0-Hold(S277,S380)
	S382= CtrlEPCIn=0                                           Premise(F203)
	S383= CtrlExCodeIn=0                                        Premise(F204)
	S384= CtrlIMMU=0                                            Premise(F205)
	S385= CtrlPC=1                                              Premise(F206)
	S386= CtrlPCInc=0                                           Premise(F207)
	S387= PC[CIA]=addr                                          PC-Hold(S283,S386)
	S388= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Write(S363,S385,S386)
	S389= CtrlIAddrReg=0                                        Premise(F208)
	S390= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S286,S389)
	S391= CtrlICache=0                                          Premise(F209)
	S392= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S288,S391)
	S393= CtrlICacheReg=0                                       Premise(F210)
	S394= CtrlIR_IMMU=0                                         Premise(F211)
	S395= CtrlIR_ID=0                                           Premise(F212)
	S396= [IR_ID]={4,rS,rT,offset}                              IR_ID-Hold(S292,S395)
	S397= CtrlIMem=0                                            Premise(F213)
	S398= IMem[{pid,addr}]={4,rS,rT,offset}                     IMem-Hold(S294,S397)
	S399= CtrlIRMux=0                                           Premise(F214)
	S400= CtrlGPR=0                                             Premise(F215)
	S401= GPR[rS]=a                                             GPR-Hold(S297,S400)
	S402= GPR[rT]=b                                             GPR-Hold(S298,S400)
	S403= CtrlA_EX=0                                            Premise(F216)
	S404= [A_EX]=FU(a)                                          A_EX-Hold(S300,S403)
	S405= CtrlB_EX=0                                            Premise(F217)
	S406= [B_EX]=FU(b)                                          B_EX-Hold(S302,S405)
	S407= CtrlIR_EX=0                                           Premise(F218)
	S408= [IR_EX]={4,rS,rT,offset}                              IR_EX-Hold(S304,S407)
	S409= CtrlALUOut_MEM=0                                      Premise(F219)
	S410= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Hold(S306,S409)
	S411= CtrlConditionReg_MEM=0                                Premise(F220)
	S412= [ConditionReg_MEM]=CompareS(FU(a),FU(b))              ConditionReg_MEM-Hold(S308,S411)
	S413= CtrlIR_MEM=0                                          Premise(F221)
	S414= [IR_MEM]={4,rS,rT,offset}                             IR_MEM-Hold(S310,S413)
	S415= CtrlIR_DMMU1=1                                        Premise(F222)
	S416= [IR_DMMU1]={4,rS,rT,offset}                           IR_DMMU1-Write(S367,S415)
	S417= CtrlIR_WB=1                                           Premise(F223)
	S418= [IR_WB]={4,rS,rT,offset}                              IR_WB-Write(S369,S417)
	S419= CtrlA_MEM=0                                           Premise(F224)
	S420= CtrlA_WB=1                                            Premise(F225)
	S421= CtrlB_MEM=0                                           Premise(F226)
	S422= CtrlB_WB=1                                            Premise(F227)
	S423= CtrlALUOut_WB=1                                       Premise(F228)
	S424= [ALUOut_WB]=addr+{14{offset[15]},offset,2{0}}         ALUOut_WB-Write(S373,S423)
	S425= CtrlConditionReg_WB=1                                 Premise(F229)
	S426= [ConditionReg_WB]=CompareS(FU(a),FU(b))               ConditionReg_WB-Write(S375,S425)
	S427= CtrlIR_DMMU2=0                                        Premise(F230)

WB	S428= CP0.ASID=pid                                          CP0-Read-ASID(S381)
	S429= PC.CIA=addr                                           PC-Out(S387)
	S430= PC.CIA31_28=addr[31:28]                               PC-Out(S387)
	S431= PC.Out=addr+{14{offset[15]},offset,2{0}}              PC-Out(S388)
	S432= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S390)
	S433= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S390)
	S434= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S390)
	S435= IR_ID.Out={4,rS,rT,offset}                            IR-Out(S396)
	S436= IR_ID.Out31_26=4                                      IR-Out(S396)
	S437= IR_ID.Out25_21=rS                                     IR-Out(S396)
	S438= IR_ID.Out20_16=rT                                     IR-Out(S396)
	S439= IR_ID.Out15_0=offset                                  IR-Out(S396)
	S440= A_EX.Out=FU(a)                                        A_EX-Out(S404)
	S441= A_EX.Out1_0={FU(a)}[1:0]                              A_EX-Out(S404)
	S442= A_EX.Out4_0={FU(a)}[4:0]                              A_EX-Out(S404)
	S443= B_EX.Out=FU(b)                                        B_EX-Out(S406)
	S444= B_EX.Out1_0={FU(b)}[1:0]                              B_EX-Out(S406)
	S445= B_EX.Out4_0={FU(b)}[4:0]                              B_EX-Out(S406)
	S446= IR_EX.Out={4,rS,rT,offset}                            IR_EX-Out(S408)
	S447= IR_EX.Out31_26=4                                      IR_EX-Out(S408)
	S448= IR_EX.Out25_21=rS                                     IR_EX-Out(S408)
	S449= IR_EX.Out20_16=rT                                     IR_EX-Out(S408)
	S450= IR_EX.Out15_0=offset                                  IR_EX-Out(S408)
	S451= ALUOut_MEM.Out=addr+{14{offset[15]},offset,2{0}}      ALUOut_MEM-Out(S410)
	S452= ALUOut_MEM.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut_MEM-Out(S410)
	S453= ALUOut_MEM.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut_MEM-Out(S410)
	S454= ConditionReg_MEM.Out=CompareS(FU(a),FU(b))            ConditionReg_MEM-Out(S412)
	S455= ConditionReg_MEM.Out1_0={CompareS(FU(a),FU(b))}[1:0]  ConditionReg_MEM-Out(S412)
	S456= ConditionReg_MEM.Out4_0={CompareS(FU(a),FU(b))}[4:0]  ConditionReg_MEM-Out(S412)
	S457= IR_MEM.Out={4,rS,rT,offset}                           IR_MEM-Out(S414)
	S458= IR_MEM.Out31_26=4                                     IR_MEM-Out(S414)
	S459= IR_MEM.Out25_21=rS                                    IR_MEM-Out(S414)
	S460= IR_MEM.Out20_16=rT                                    IR_MEM-Out(S414)
	S461= IR_MEM.Out15_0=offset                                 IR_MEM-Out(S414)
	S462= IR_DMMU1.Out={4,rS,rT,offset}                         IR_DMMU1-Out(S416)
	S463= IR_DMMU1.Out31_26=4                                   IR_DMMU1-Out(S416)
	S464= IR_DMMU1.Out25_21=rS                                  IR_DMMU1-Out(S416)
	S465= IR_DMMU1.Out20_16=rT                                  IR_DMMU1-Out(S416)
	S466= IR_DMMU1.Out15_0=offset                               IR_DMMU1-Out(S416)
	S467= IR_WB.Out={4,rS,rT,offset}                            IR-Out(S418)
	S468= IR_WB.Out31_26=4                                      IR-Out(S418)
	S469= IR_WB.Out25_21=rS                                     IR-Out(S418)
	S470= IR_WB.Out20_16=rT                                     IR-Out(S418)
	S471= IR_WB.Out15_0=offset                                  IR-Out(S418)
	S472= ALUOut_WB.Out=addr+{14{offset[15]},offset,2{0}}       ALUOut_WB-Out(S424)
	S473= ALUOut_WB.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut_WB-Out(S424)
	S474= ALUOut_WB.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut_WB-Out(S424)
	S475= ConditionReg_WB.Out=CompareS(FU(a),FU(b))             ConditionReg_WB-Out(S426)
	S476= ConditionReg_WB.Out1_0={CompareS(FU(a),FU(b))}[1:0]   ConditionReg_WB-Out(S426)
	S477= ConditionReg_WB.Out4_0={CompareS(FU(a),FU(b))}[4:0]   ConditionReg_WB-Out(S426)
	S478= IR_WB.Out=>FU.IR_WB                                   Premise(F306)
	S479= FU.IR_WB={4,rS,rT,offset}                             Path(S467,S478)
	S480= IR_WB.Out31_26=>CU_WB.Op                              Premise(F307)
	S481= CU_WB.Op=4                                            Path(S468,S480)
	S482= FU.InWB_WReg=5'b00000                                 Premise(F308)
	S483= CtrlASIDIn=0                                          Premise(F309)
	S484= CtrlCP0=0                                             Premise(F310)
	S485= CP0[ASID]=pid                                         CP0-Hold(S381,S484)
	S486= CtrlEPCIn=0                                           Premise(F311)
	S487= CtrlExCodeIn=0                                        Premise(F312)
	S488= CtrlIMMU=0                                            Premise(F313)
	S489= CtrlPC=0                                              Premise(F314)
	S490= CtrlPCInc=0                                           Premise(F315)
	S491= PC[CIA]=addr                                          PC-Hold(S387,S490)
	S492= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Hold(S388,S489,S490)
	S493= CtrlIAddrReg=0                                        Premise(F316)
	S494= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S390,S493)
	S495= CtrlICache=0                                          Premise(F317)
	S496= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S392,S495)
	S497= CtrlICacheReg=0                                       Premise(F318)
	S498= CtrlIR_IMMU=0                                         Premise(F319)
	S499= CtrlIR_ID=0                                           Premise(F320)
	S500= [IR_ID]={4,rS,rT,offset}                              IR_ID-Hold(S396,S499)
	S501= CtrlIMem=0                                            Premise(F321)
	S502= IMem[{pid,addr}]={4,rS,rT,offset}                     IMem-Hold(S398,S501)
	S503= CtrlIRMux=0                                           Premise(F322)
	S504= CtrlGPR=0                                             Premise(F323)
	S505= GPR[rS]=a                                             GPR-Hold(S401,S504)
	S506= GPR[rT]=b                                             GPR-Hold(S402,S504)
	S507= CtrlA_EX=0                                            Premise(F324)
	S508= [A_EX]=FU(a)                                          A_EX-Hold(S404,S507)
	S509= CtrlB_EX=0                                            Premise(F325)
	S510= [B_EX]=FU(b)                                          B_EX-Hold(S406,S509)
	S511= CtrlIR_EX=0                                           Premise(F326)
	S512= [IR_EX]={4,rS,rT,offset}                              IR_EX-Hold(S408,S511)
	S513= CtrlALUOut_MEM=0                                      Premise(F327)
	S514= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Hold(S410,S513)
	S515= CtrlConditionReg_MEM=0                                Premise(F328)
	S516= [ConditionReg_MEM]=CompareS(FU(a),FU(b))              ConditionReg_MEM-Hold(S412,S515)
	S517= CtrlIR_MEM=0                                          Premise(F329)
	S518= [IR_MEM]={4,rS,rT,offset}                             IR_MEM-Hold(S414,S517)
	S519= CtrlIR_DMMU1=0                                        Premise(F330)
	S520= [IR_DMMU1]={4,rS,rT,offset}                           IR_DMMU1-Hold(S416,S519)
	S521= CtrlIR_WB=0                                           Premise(F331)
	S522= [IR_WB]={4,rS,rT,offset}                              IR_WB-Hold(S418,S521)
	S523= CtrlA_MEM=0                                           Premise(F332)
	S524= CtrlA_WB=0                                            Premise(F333)
	S525= CtrlB_MEM=0                                           Premise(F334)
	S526= CtrlB_WB=0                                            Premise(F335)
	S527= CtrlALUOut_WB=0                                       Premise(F336)
	S528= [ALUOut_WB]=addr+{14{offset[15]},offset,2{0}}         ALUOut_WB-Hold(S424,S527)
	S529= CtrlConditionReg_WB=0                                 Premise(F337)
	S530= [ConditionReg_WB]=CompareS(FU(a),FU(b))               ConditionReg_WB-Hold(S426,S529)
	S531= CtrlIR_DMMU2=0                                        Premise(F338)

POST	S485= CP0[ASID]=pid                                         CP0-Hold(S381,S484)
	S491= PC[CIA]=addr                                          PC-Hold(S387,S490)
	S492= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Hold(S388,S489,S490)
	S494= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S390,S493)
	S496= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S392,S495)
	S500= [IR_ID]={4,rS,rT,offset}                              IR_ID-Hold(S396,S499)
	S502= IMem[{pid,addr}]={4,rS,rT,offset}                     IMem-Hold(S398,S501)
	S505= GPR[rS]=a                                             GPR-Hold(S401,S504)
	S506= GPR[rT]=b                                             GPR-Hold(S402,S504)
	S508= [A_EX]=FU(a)                                          A_EX-Hold(S404,S507)
	S510= [B_EX]=FU(b)                                          B_EX-Hold(S406,S509)
	S512= [IR_EX]={4,rS,rT,offset}                              IR_EX-Hold(S408,S511)
	S514= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Hold(S410,S513)
	S516= [ConditionReg_MEM]=CompareS(FU(a),FU(b))              ConditionReg_MEM-Hold(S412,S515)
	S518= [IR_MEM]={4,rS,rT,offset}                             IR_MEM-Hold(S414,S517)
	S520= [IR_DMMU1]={4,rS,rT,offset}                           IR_DMMU1-Hold(S416,S519)
	S522= [IR_WB]={4,rS,rT,offset}                              IR_WB-Hold(S418,S521)
	S528= [ALUOut_WB]=addr+{14{offset[15]},offset,2{0}}         ALUOut_WB-Hold(S424,S527)
	S530= [ConditionReg_WB]=CompareS(FU(a),FU(b))               ConditionReg_WB-Hold(S426,S529)

