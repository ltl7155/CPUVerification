
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                     Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= CP0.ASID=>IMMU.PID                                      Premise(F3)
	S6= IMMU.PID=pid                                            Path(S3,S5)
	S7= PC.Out=>IMMU.IEA                                        Premise(F4)
	S8= IMMU.IEA=addr                                           Path(S4,S7)
	S9= IMMU.Addr={pid,addr}                                    IMMU-Search(S6,S8)
	S10= IMMU.Addr=>IAddrReg.In                                 Premise(F5)
	S11= IAddrReg.In={pid,addr}                                 Path(S9,S10)
	S12= CtrlPC=0                                               Premise(F24)
	S13= CtrlPCInc=0                                            Premise(F25)
	S14= PC[Out]=addr                                           PC-Hold(S1,S12,S13)
	S15= CtrlIAddrReg=1                                         Premise(F26)
	S16= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S11,S15)
	S17= CtrlIMem=0                                             Premise(F31)
	S18= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                    IMem-Hold(S2,S17)
	S19= GPR[rS]=a                                              Premise(F39)

IF(IMMU)	S20= PC.Out=addr                                            PC-Out(S14)
	S21= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S16)
	S22= IAddrReg.Out=>IMem.RAddr                               Premise(F43)
	S23= IMem.RAddr={pid,addr}                                  Path(S21,S22)
	S24= IMem.Out={0,rS,0,rD,hint,9}                            IMem-Read(S23,S18)
	S25= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S23,S18)
	S26= IMem.Out=>IRMux.MemData                                Premise(F44)
	S27= IRMux.MemData={0,rS,0,rD,hint,9}                       Path(S24,S26)
	S28= IRMux.Out={0,rS,0,rD,hint,9}                           IRMux-Select2(S27)
	S29= IRMux.Out=>IR_ID.In                                    Premise(F48)
	S30= IR_ID.In={0,rS,0,rD,hint,9}                            Path(S28,S29)
	S31= IMem.MEM8WordOut=>ICache.WData                         Premise(F49)
	S32= ICache.WData=IMemGet8Word({pid,addr})                  Path(S25,S31)
	S33= PC.Out=>ICache.IEA                                     Premise(F50)
	S34= ICache.IEA=addr                                        Path(S20,S33)
	S35= CtrlPC=0                                               Premise(F58)
	S36= CtrlPCInc=1                                            Premise(F59)
	S37= PC[Out]=addr+4                                         PC-Inc(S14,S35,S36)
	S38= CtrlICache=1                                           Premise(F61)
	S39= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S34,S32,S38)
	S40= CtrlIR_ID=1                                            Premise(F64)
	S41= [IR_ID]={0,rS,0,rD,hint,9}                             IR_ID-Write(S30,S40)
	S42= CtrlGPR=0                                              Premise(F67)
	S43= GPR[rS]=a                                              GPR-Hold(S19,S42)

ID	S44= PC.Out=addr+4                                          PC-Out(S37)
	S45= IR_ID.Out25_21=rS                                      IR-Out(S41)
	S46= IR_ID.Out15_11=rD                                      IR-Out(S41)
	S47= IR_ID.Out15_11=>GPR.WReg                               Premise(F78)
	S48= GPR.WReg=rD                                            Path(S46,S47)
	S49= PC.Out=>GPR.WData                                      Premise(F79)
	S50= GPR.WData=addr+4                                       Path(S44,S49)
	S51= IR_ID.Out25_21=>GPR.RReg1                              Premise(F80)
	S52= GPR.RReg1=rS                                           Path(S45,S51)
	S53= GPR.Rdata1=a                                           GPR-Read(S52,S43)
	S54= GPR.Rdata1=>FU.InID1                                   Premise(F81)
	S55= FU.InID1=a                                             Path(S53,S54)
	S56= FU.OutID1=FU(a)                                        FU-Forward(S55)
	S57= FU.OutID1=>PC.In                                       Premise(F83)
	S58= PC.In=FU(a)                                            Path(S56,S57)
	S59= CtrlPC=1                                               Premise(F93)
	S60= CtrlPCInc=0                                            Premise(F94)
	S61= PC[Out]=FU(a)                                          PC-Write(S58,S59,S60)
	S62= CtrlICache=0                                           Premise(F96)
	S63= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S39,S62)
	S64= CtrlGPR=1                                              Premise(F102)
	S65= GPR[rD]=addr+4                                         GPR-Write(S48,S50,S64)

EX	S66= CtrlPC=0                                               Premise(F120)
	S67= CtrlPCInc=0                                            Premise(F121)
	S68= PC[Out]=FU(a)                                          PC-Hold(S61,S66,S67)
	S69= CtrlICache=0                                           Premise(F123)
	S70= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S63,S69)
	S71= CtrlGPR=0                                              Premise(F129)
	S72= GPR[rD]=addr+4                                         GPR-Hold(S65,S71)

MEM	S73= CtrlPC=0                                               Premise(F152)
	S74= CtrlPCInc=0                                            Premise(F153)
	S75= PC[Out]=FU(a)                                          PC-Hold(S68,S73,S74)
	S76= CtrlICache=0                                           Premise(F155)
	S77= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S70,S76)
	S78= CtrlGPR=0                                              Premise(F161)
	S79= GPR[rD]=addr+4                                         GPR-Hold(S72,S78)

WB	S80= CtrlPC=0                                               Premise(F233)
	S81= CtrlPCInc=0                                            Premise(F234)
	S82= PC[Out]=FU(a)                                          PC-Hold(S75,S80,S81)
	S83= CtrlICache=0                                           Premise(F236)
	S84= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S77,S83)
	S85= CtrlGPR=0                                              Premise(F242)
	S86= GPR[rD]=addr+4                                         GPR-Hold(S79,S85)

POST	S82= PC[Out]=FU(a)                                          PC-Hold(S75,S80,S81)
	S84= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S77,S83)
	S86= GPR[rD]=addr+4                                         GPR-Hold(S79,S85)

