
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={3,imm}                                Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= PC.Out=>IMem.RAddr                                      Premise(F3)
	S6= IMem.RAddr=addr                                         Path(S4,S5)
	S7= CP0.ASID=>IMem.ASID                                     Premise(F4)
	S8= IMem.ASID=pid                                           Path(S3,S7)
	S9= IMem.Out={3,imm}                                        IMem-Read(S8,S6,S2)
	S10= IMem.Out=>IR_ID.In                                     Premise(F6)
	S11= IR_ID.In={3,imm}                                       Path(S9,S10)
	S12= CtrlPC=0                                               Premise(F32)
	S13= CtrlPCInc=1                                            Premise(F33)
	S14= PC[Out]=addr+4                                         PC-Inc(S1,S12,S13)
	S15= PC[CIA]=addr                                           PC-Inc(S1,S12,S13)
	S16= CtrlIR_ID=1                                            Premise(F39)
	S17= [IR_ID]={3,imm}                                        IR_ID-Write(S11,S16)

ID	S18= PC.Out=addr+4                                          PC-Out(S14)
	S19= PC.CIA31_28=addr[31:28]                                PC-Out(S15)
	S20= IR_ID.Out25_0=imm                                      IR-Out(S17)
	S21= PC.CIA31_28=>ADDREXT.PCpart                            Premise(F55)
	S22= ADDREXT.PCpart=addr[31:28]                             Path(S19,S21)
	S23= IR_ID.Out25_0=>ADDREXT.In                              Premise(F56)
	S24= ADDREXT.In=imm                                         Path(S20,S23)
	S25= ADDREXT.Out={addr[31:28],imm,2'b0}                     ADDREXT-EXT(S22,S24)
	S26= ADDREXT.Out=>PC.In                                     Premise(F57)
	S27= PC.In={addr[31:28],imm,2'b0}                           Path(S25,S26)
	S28= PC.Out=>ALUOut_EX.In                                   Premise(F58)
	S29= ALUOut_EX.In=addr+4                                    Path(S18,S28)
	S30= CtrlPC=1                                               Premise(F78)
	S31= CtrlPCInc=0                                            Premise(F79)
	S32= PC[Out]={addr[31:28],imm,2'b0}                         PC-Write(S27,S30,S31)
	S33= CtrlALUOut_EX=1                                        Premise(F86)
	S34= [ALUOut_EX]=addr+4                                     ALUOut_EX-Write(S29,S33)

EX	S35= ALUOut_EX.Out=addr+4                                   ALUOut_EX-Out(S34)
	S36= ALUOut_EX.Out=>ALUOut_MEM.In                           Premise(F111)
	S37= ALUOut_MEM.In=addr+4                                   Path(S35,S36)
	S38= CtrlPC=0                                               Premise(F123)
	S39= CtrlPCInc=0                                            Premise(F124)
	S40= PC[Out]={addr[31:28],imm,2'b0}                         PC-Hold(S32,S38,S39)
	S41= CtrlALUOut_MEM=1                                       Premise(F134)
	S42= [ALUOut_MEM]=addr+4                                    ALUOut_MEM-Write(S37,S41)

MEM	S43= ALUOut_MEM.Out=addr+4                                  ALUOut_MEM-Out(S42)
	S44= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F161)
	S45= ALUOut_WB.In=addr+4                                    Path(S43,S44)
	S46= CtrlPC=0                                               Premise(F168)
	S47= CtrlPCInc=0                                            Premise(F169)
	S48= PC[Out]={addr[31:28],imm,2'b0}                         PC-Hold(S40,S46,S47)
	S49= CtrlALUOut_WB=1                                        Premise(F181)
	S50= [ALUOut_WB]=addr+4                                     ALUOut_WB-Write(S45,S49)

WB	S51= ALUOut_WB.Out=addr+4                                   ALUOut_WB-Out(S50)
	S52= GPR.WReg=5'd31                                         Premise(F210)
	S53= ALUOut_WB.Out=>GPR.WData                               Premise(F211)
	S54= GPR.WData=addr+4                                       Path(S51,S53)
	S55= CtrlPC=0                                               Premise(F214)
	S56= CtrlPCInc=0                                            Premise(F215)
	S57= PC[Out]={addr[31:28],imm,2'b0}                         PC-Hold(S48,S55,S56)
	S58= CtrlGPR=1                                              Premise(F228)
	S59= GPR[5'd31]=addr+4                                      GPR-Write(S52,S54,S58)

POST	S57= PC[Out]={addr[31:28],imm,2'b0}                         PC-Hold(S48,S55,S56)
	S59= GPR[5'd31]=addr+4                                      GPR-Write(S52,S54,S58)

