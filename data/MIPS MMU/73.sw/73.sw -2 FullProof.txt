
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={43,rS,rT,offset}                      Premise(F2)
	S3= ICache[addr]={43,rS,rT,offset}                          Premise(F3)
	S4= GPR[rS]=base                                            Premise(F4)
	S5= GPR[rT]=a                                               Premise(F5)

IF	S6= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S7= PC.Out=addr                                             PC-Out(S1)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F6)
	S9= IMMU.PID=pid                                            Path(S6,S8)
	S10= PC.Out=>IMMU.IEA                                       Premise(F7)
	S11= IMMU.IEA=addr                                          Path(S7,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S11)
	S13= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S9,S11)
	S14= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S15= IAddrReg.In={pid,addr}                                 Path(S12,S14)
	S16= IMMU.Hit=>CU.IMMUHit                                   Premise(F9)
	S17= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S13,S16)
	S18= PC.Out=>ICache.IEA                                     Premise(F10)
	S19= ICache.IEA=addr                                        Path(S7,S18)
	S20= ICache.Hit=ICacheHit(addr)                             ICache-Search(S19)
	S21= ICache.Out={43,rS,rT,offset}                           ICache-Search(S19,S3)
	S22= ICache.Out=>IR.In                                      Premise(F11)
	S23= IR.In={43,rS,rT,offset}                                Path(S21,S22)
	S24= ICache.Out=>ICacheReg.In                               Premise(F12)
	S25= ICacheReg.In={43,rS,rT,offset}                         Path(S21,S24)
	S26= ICache.Hit=>CU.ICacheHit                               Premise(F13)
	S27= CU.ICacheHit=ICacheHit(addr)                           Path(S20,S26)
	S28= CtrlASIDIn=0                                           Premise(F14)
	S29= CtrlCP0=0                                              Premise(F15)
	S30= CP0[ASID]=pid                                          CP0-Hold(S0,S29)
	S31= CtrlEPCIn=0                                            Premise(F16)
	S32= CtrlExCodeIn=0                                         Premise(F17)
	S33= CtrlIMMU=0                                             Premise(F18)
	S34= CtrlPC=0                                               Premise(F19)
	S35= CtrlPCInc=1                                            Premise(F20)
	S36= PC[Out]=addr+4                                         PC-Inc(S1,S34,S35)
	S37= PC[CIA]=addr                                           PC-Inc(S1,S34,S35)
	S38= CtrlIAddrReg=0                                         Premise(F21)
	S39= CtrlICache=0                                           Premise(F22)
	S40= ICache[addr]={43,rS,rT,offset}                         ICache-Hold(S3,S39)
	S41= CtrlIR=1                                               Premise(F23)
	S42= [IR]={43,rS,rT,offset}                                 IR-Write(S23,S41)
	S43= CtrlICacheReg=0                                        Premise(F24)
	S44= CtrlIMem=0                                             Premise(F25)
	S45= IMem[{pid,addr}]={43,rS,rT,offset}                     IMem-Hold(S2,S44)
	S46= CtrlIRMux=0                                            Premise(F26)
	S47= CtrlGPR=0                                              Premise(F27)
	S48= GPR[rS]=base                                           GPR-Hold(S4,S47)
	S49= GPR[rT]=a                                              GPR-Hold(S5,S47)
	S50= CtrlA=0                                                Premise(F28)
	S51= CtrlB=0                                                Premise(F29)
	S52= CtrlALUOut=0                                           Premise(F30)
	S53= CtrlDR=0                                               Premise(F31)
	S54= CtrlDMMU=0                                             Premise(F32)
	S55= CtrlDAddrReg=0                                         Premise(F33)
	S56= CtrlDCache=0                                           Premise(F34)
	S57= DCache.RLineEA=DCacheRLineEA()                         DCache-WriteBack()
	S58= DCache.RLineData=DCacheRLineData()                     DCache-WriteBack()
	S59= DCache.RLineDirty=DCacheRLineDirty()                   DCache-WriteBack()
	S60= CtrlDMem=0                                             Premise(F35)
	S61= CtrlDMem8Word=0                                        Premise(F36)

ID	S62= CP0.ASID=pid                                           CP0-Read-ASID(S30)
	S63= PC.Out=addr+4                                          PC-Out(S36)
	S64= PC.CIA=addr                                            PC-Out(S37)
	S65= PC.CIA31_28=addr[31:28]                                PC-Out(S37)
	S66= IR.Out={43,rS,rT,offset}                               IR-Out(S42)
	S67= IR.Out31_26=43                                         IR-Out(S42)
	S68= IR.Out25_21=rS                                         IR-Out(S42)
	S69= IR.Out20_16=rT                                         IR-Out(S42)
	S70= IR.Out15_0=offset                                      IR-Out(S42)
	S71= IR.Out31_26=>CU.Op                                     Premise(F60)
	S72= CU.Op=43                                               Path(S67,S71)
	S73= CU.Func=alu_add                                        CU(S72)
	S74= CU.MemDataSelFunc=mds_lha                              CU(S72)
	S75= IR.Out25_21=>GPR.RReg1                                 Premise(F61)
	S76= GPR.RReg1=rS                                           Path(S68,S75)
	S77= GPR.Rdata1=base                                        GPR-Read(S76,S48)
	S78= IR.Out15_0=>IMMEXT.In                                  Premise(F62)
	S79= IMMEXT.In=offset                                       Path(S70,S78)
	S80= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S79)
	S81= GPR.Rdata1=>A.In                                       Premise(F63)
	S82= A.In=base                                              Path(S77,S81)
	S83= IMMEXT.Out=>B.In                                       Premise(F64)
	S84= B.In={16{offset[15]},offset}                           Path(S80,S83)
	S85= CtrlASIDIn=0                                           Premise(F65)
	S86= CtrlCP0=0                                              Premise(F66)
	S87= CP0[ASID]=pid                                          CP0-Hold(S30,S86)
	S88= CtrlEPCIn=0                                            Premise(F67)
	S89= CtrlExCodeIn=0                                         Premise(F68)
	S90= CtrlIMMU=0                                             Premise(F69)
	S91= CtrlPC=0                                               Premise(F70)
	S92= CtrlPCInc=0                                            Premise(F71)
	S93= PC[CIA]=addr                                           PC-Hold(S37,S92)
	S94= PC[Out]=addr+4                                         PC-Hold(S36,S91,S92)
	S95= CtrlIAddrReg=0                                         Premise(F72)
	S96= CtrlICache=0                                           Premise(F73)
	S97= ICache[addr]={43,rS,rT,offset}                         ICache-Hold(S40,S96)
	S98= CtrlIR=0                                               Premise(F74)
	S99= [IR]={43,rS,rT,offset}                                 IR-Hold(S42,S98)
	S100= CtrlICacheReg=0                                       Premise(F75)
	S101= CtrlIMem=0                                            Premise(F76)
	S102= IMem[{pid,addr}]={43,rS,rT,offset}                    IMem-Hold(S45,S101)
	S103= CtrlIRMux=0                                           Premise(F77)
	S104= CtrlGPR=0                                             Premise(F78)
	S105= GPR[rS]=base                                          GPR-Hold(S48,S104)
	S106= GPR[rT]=a                                             GPR-Hold(S49,S104)
	S107= CtrlA=1                                               Premise(F79)
	S108= [A]=base                                              A-Write(S82,S107)
	S109= CtrlB=1                                               Premise(F80)
	S110= [B]={16{offset[15]},offset}                           B-Write(S84,S109)
	S111= CtrlALUOut=0                                          Premise(F81)
	S112= CtrlDR=0                                              Premise(F82)
	S113= CtrlDMMU=0                                            Premise(F83)
	S114= CtrlDAddrReg=0                                        Premise(F84)
	S115= CtrlDCache=0                                          Premise(F85)
	S116= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S117= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S118= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S119= CtrlDMem=0                                            Premise(F86)
	S120= CtrlDMem8Word=0                                       Premise(F87)

EX	S121= CP0.ASID=pid                                          CP0-Read-ASID(S87)
	S122= PC.CIA=addr                                           PC-Out(S93)
	S123= PC.CIA31_28=addr[31:28]                               PC-Out(S93)
	S124= PC.Out=addr+4                                         PC-Out(S94)
	S125= IR.Out={43,rS,rT,offset}                              IR-Out(S99)
	S126= IR.Out31_26=43                                        IR-Out(S99)
	S127= IR.Out25_21=rS                                        IR-Out(S99)
	S128= IR.Out20_16=rT                                        IR-Out(S99)
	S129= IR.Out15_0=offset                                     IR-Out(S99)
	S130= A.Out=base                                            A-Out(S108)
	S131= A.Out1_0={base}[1:0]                                  A-Out(S108)
	S132= A.Out4_0={base}[4:0]                                  A-Out(S108)
	S133= B.Out={16{offset[15]},offset}                         B-Out(S110)
	S134= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S110)
	S135= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S110)
	S136= A.Out=>ALU.A                                          Premise(F88)
	S137= ALU.A=base                                            Path(S130,S136)
	S138= B.Out=>ALU.B                                          Premise(F89)
	S139= ALU.B={16{offset[15]},offset}                         Path(S133,S138)
	S140= ALU.Func=6'b010010                                    Premise(F90)
	S141= ALU.Out=base+{16{offset[15]},offset}                  ALU(S137,S139)
	S142= ALU.Out1_0={base+{16{offset[15]},offset}}[1:0]        ALU(S137,S139)
	S143= ALU.CMP=Compare0(base+{16{offset[15]},offset})        ALU(S137,S139)
	S144= ALU.OV=OverFlow(base+{16{offset[15]},offset})         ALU(S137,S139)
	S145= ALU.CA=Carry(base+{16{offset[15]},offset})            ALU(S137,S139)
	S146= ALU.Out=>ALUOut.In                                    Premise(F91)
	S147= ALUOut.In=base+{16{offset[15]},offset}                Path(S141,S146)
	S148= IR.Out20_16=>GPR.RReg2                                Premise(F92)
	S149= GPR.RReg2=rT                                          Path(S128,S148)
	S150= GPR.Rdata2=a                                          GPR-Read(S149,S106)
	S151= GPR.Rdata2=>MemDataSelS.In                            Premise(F93)
	S152= MemDataSelS.In=a                                      Path(S150,S151)
	S153= ALU.Out1_0=>MemDataSelS.Addr                          Premise(F94)
	S154= MemDataSelS.Addr={base+{16{offset[15]},offset}}[1:0]  Path(S142,S153)
	S155= MemDataSelS.Func=6'b010101                            Premise(F95)
	S156= MemDataSelS.Out=a                                     MemDataSelS(S152,S154)
	S157= MemDataSelS.Out=>DR.In                                Premise(F96)
	S158= DR.In=a                                               Path(S156,S157)
	S159= CtrlASIDIn=0                                          Premise(F97)
	S160= CtrlCP0=0                                             Premise(F98)
	S161= CP0[ASID]=pid                                         CP0-Hold(S87,S160)
	S162= CtrlEPCIn=0                                           Premise(F99)
	S163= CtrlExCodeIn=0                                        Premise(F100)
	S164= CtrlIMMU=0                                            Premise(F101)
	S165= CtrlPC=0                                              Premise(F102)
	S166= CtrlPCInc=0                                           Premise(F103)
	S167= PC[CIA]=addr                                          PC-Hold(S93,S166)
	S168= PC[Out]=addr+4                                        PC-Hold(S94,S165,S166)
	S169= CtrlIAddrReg=0                                        Premise(F104)
	S170= CtrlICache=0                                          Premise(F105)
	S171= ICache[addr]={43,rS,rT,offset}                        ICache-Hold(S97,S170)
	S172= CtrlIR=0                                              Premise(F106)
	S173= [IR]={43,rS,rT,offset}                                IR-Hold(S99,S172)
	S174= CtrlICacheReg=0                                       Premise(F107)
	S175= CtrlIMem=0                                            Premise(F108)
	S176= IMem[{pid,addr}]={43,rS,rT,offset}                    IMem-Hold(S102,S175)
	S177= CtrlIRMux=0                                           Premise(F109)
	S178= CtrlGPR=0                                             Premise(F110)
	S179= GPR[rS]=base                                          GPR-Hold(S105,S178)
	S180= GPR[rT]=a                                             GPR-Hold(S106,S178)
	S181= CtrlA=0                                               Premise(F111)
	S182= [A]=base                                              A-Hold(S108,S181)
	S183= CtrlB=0                                               Premise(F112)
	S184= [B]={16{offset[15]},offset}                           B-Hold(S110,S183)
	S185= CtrlALUOut=1                                          Premise(F113)
	S186= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Write(S147,S185)
	S187= CtrlDR=1                                              Premise(F114)
	S188= [DR]=a                                                DR-Write(S158,S187)
	S189= CtrlDMMU=0                                            Premise(F115)
	S190= CtrlDAddrReg=0                                        Premise(F116)
	S191= CtrlDCache=0                                          Premise(F117)
	S192= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S193= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S194= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S195= CtrlDMem=0                                            Premise(F118)
	S196= CtrlDMem8Word=0                                       Premise(F119)

MEM	S197= CP0.ASID=pid                                          CP0-Read-ASID(S161)
	S198= PC.CIA=addr                                           PC-Out(S167)
	S199= PC.CIA31_28=addr[31:28]                               PC-Out(S167)
	S200= PC.Out=addr+4                                         PC-Out(S168)
	S201= IR.Out={43,rS,rT,offset}                              IR-Out(S173)
	S202= IR.Out31_26=43                                        IR-Out(S173)
	S203= IR.Out25_21=rS                                        IR-Out(S173)
	S204= IR.Out20_16=rT                                        IR-Out(S173)
	S205= IR.Out15_0=offset                                     IR-Out(S173)
	S206= A.Out=base                                            A-Out(S182)
	S207= A.Out1_0={base}[1:0]                                  A-Out(S182)
	S208= A.Out4_0={base}[4:0]                                  A-Out(S182)
	S209= B.Out={16{offset[15]},offset}                         B-Out(S184)
	S210= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S184)
	S211= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S184)
	S212= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S186)
	S213= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S186)
	S214= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S186)
	S215= DR.Out=a                                              DR-Out(S188)
	S216= DR.Out1_0={a}[1:0]                                    DR-Out(S188)
	S217= DR.Out4_0={a}[4:0]                                    DR-Out(S188)
	S218= CP0.ASID=>DMMU.PID                                    Premise(F120)
	S219= DMMU.PID=pid                                          Path(S197,S218)
	S220= ALUOut.Out=>DMMU.IEA                                  Premise(F121)
	S221= DMMU.IEA=base+{16{offset[15]},offset}                 Path(S212,S220)
	S222= DMMU.Addr={pid,base+{16{offset[15]},offset}}          DMMU-Search(S219,S221)
	S223= DMMU.Hit=DMMUHit(pid,base+{16{offset[15]},offset})    DMMU-Search(S219,S221)
	S224= DMMU.Addr=>DAddrReg.In                                Premise(F122)
	S225= DAddrReg.In={pid,base+{16{offset[15]},offset}}        Path(S222,S224)
	S226= DMMU.Hit=>CU.DMMUHit                                  Premise(F123)
	S227= CU.DMMUHit=DMMUHit(pid,base+{16{offset[15]},offset})  Path(S223,S226)
	S228= ALUOut.Out=>DCache.IEA                                Premise(F124)
	S229= DCache.IEA=base+{16{offset[15]},offset}               Path(S212,S228)
	S230= DCache.Hit=DCacheHit(base+{16{offset[15]},offset})    DCache-Search(S229)
	S231= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S232= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S233= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S234= DCache.Hit=>CU.DCacheHit                              Premise(F125)
	S235= CU.DCacheHit=DCacheHit(base+{16{offset[15]},offset})  Path(S230,S234)
	S236= DR.Out=>DCache.In                                     Premise(F126)
	S237= DCache.In=a                                           Path(S215,S236)
	S238= CtrlASIDIn=0                                          Premise(F127)
	S239= CtrlCP0=0                                             Premise(F128)
	S240= CP0[ASID]=pid                                         CP0-Hold(S161,S239)
	S241= CtrlEPCIn=0                                           Premise(F129)
	S242= CtrlExCodeIn=0                                        Premise(F130)
	S243= CtrlIMMU=0                                            Premise(F131)
	S244= CtrlPC=0                                              Premise(F132)
	S245= CtrlPCInc=0                                           Premise(F133)
	S246= PC[CIA]=addr                                          PC-Hold(S167,S245)
	S247= PC[Out]=addr+4                                        PC-Hold(S168,S244,S245)
	S248= CtrlIAddrReg=0                                        Premise(F134)
	S249= CtrlICache=0                                          Premise(F135)
	S250= ICache[addr]={43,rS,rT,offset}                        ICache-Hold(S171,S249)
	S251= CtrlIR=0                                              Premise(F136)
	S252= [IR]={43,rS,rT,offset}                                IR-Hold(S173,S251)
	S253= CtrlICacheReg=0                                       Premise(F137)
	S254= CtrlIMem=0                                            Premise(F138)
	S255= IMem[{pid,addr}]={43,rS,rT,offset}                    IMem-Hold(S176,S254)
	S256= CtrlIRMux=0                                           Premise(F139)
	S257= CtrlGPR=0                                             Premise(F140)
	S258= GPR[rS]=base                                          GPR-Hold(S179,S257)
	S259= GPR[rT]=a                                             GPR-Hold(S180,S257)
	S260= CtrlA=0                                               Premise(F141)
	S261= [A]=base                                              A-Hold(S182,S260)
	S262= CtrlB=0                                               Premise(F142)
	S263= [B]={16{offset[15]},offset}                           B-Hold(S184,S262)
	S264= CtrlALUOut=0                                          Premise(F143)
	S265= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S186,S264)
	S266= CtrlDR=0                                              Premise(F144)
	S267= [DR]=a                                                DR-Hold(S188,S266)
	S268= CtrlDMMU=0                                            Premise(F145)
	S269= CtrlDAddrReg=1                                        Premise(F146)
	S270= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Write(S225,S269)
	S271= CtrlDCache=0                                          Premise(F147)
	S272= CtrlDMem=0                                            Premise(F148)
	S273= CtrlDMem8Word=0                                       Premise(F149)

MEM(DMMU1)	S274= CP0.ASID=pid                                          CP0-Read-ASID(S240)
	S275= PC.CIA=addr                                           PC-Out(S246)
	S276= PC.CIA31_28=addr[31:28]                               PC-Out(S246)
	S277= PC.Out=addr+4                                         PC-Out(S247)
	S278= IR.Out={43,rS,rT,offset}                              IR-Out(S252)
	S279= IR.Out31_26=43                                        IR-Out(S252)
	S280= IR.Out25_21=rS                                        IR-Out(S252)
	S281= IR.Out20_16=rT                                        IR-Out(S252)
	S282= IR.Out15_0=offset                                     IR-Out(S252)
	S283= A.Out=base                                            A-Out(S261)
	S284= A.Out1_0={base}[1:0]                                  A-Out(S261)
	S285= A.Out4_0={base}[4:0]                                  A-Out(S261)
	S286= B.Out={16{offset[15]},offset}                         B-Out(S263)
	S287= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S263)
	S288= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S263)
	S289= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S265)
	S290= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S265)
	S291= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S265)
	S292= DR.Out=a                                              DR-Out(S267)
	S293= DR.Out1_0={a}[1:0]                                    DR-Out(S267)
	S294= DR.Out4_0={a}[4:0]                                    DR-Out(S267)
	S295= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S270)
	S296= DAddrReg.Out1_0={{pid,base+{16{offset[15]},offset}}}[1:0]DAddrReg-Out(S270)
	S297= DAddrReg.Out4_0={{pid,base+{16{offset[15]},offset}}}[4:0]DAddrReg-Out(S270)
	S298= CtrlASIDIn=0                                          Premise(F150)
	S299= CtrlCP0=0                                             Premise(F151)
	S300= CP0[ASID]=pid                                         CP0-Hold(S240,S299)
	S301= CtrlEPCIn=0                                           Premise(F152)
	S302= CtrlExCodeIn=0                                        Premise(F153)
	S303= CtrlIMMU=0                                            Premise(F154)
	S304= CtrlPC=0                                              Premise(F155)
	S305= CtrlPCInc=0                                           Premise(F156)
	S306= PC[CIA]=addr                                          PC-Hold(S246,S305)
	S307= PC[Out]=addr+4                                        PC-Hold(S247,S304,S305)
	S308= CtrlIAddrReg=0                                        Premise(F157)
	S309= CtrlICache=0                                          Premise(F158)
	S310= ICache[addr]={43,rS,rT,offset}                        ICache-Hold(S250,S309)
	S311= CtrlIR=0                                              Premise(F159)
	S312= [IR]={43,rS,rT,offset}                                IR-Hold(S252,S311)
	S313= CtrlICacheReg=0                                       Premise(F160)
	S314= CtrlIMem=0                                            Premise(F161)
	S315= IMem[{pid,addr}]={43,rS,rT,offset}                    IMem-Hold(S255,S314)
	S316= CtrlIRMux=0                                           Premise(F162)
	S317= CtrlGPR=0                                             Premise(F163)
	S318= GPR[rS]=base                                          GPR-Hold(S258,S317)
	S319= GPR[rT]=a                                             GPR-Hold(S259,S317)
	S320= CtrlA=0                                               Premise(F164)
	S321= [A]=base                                              A-Hold(S261,S320)
	S322= CtrlB=0                                               Premise(F165)
	S323= [B]={16{offset[15]},offset}                           B-Hold(S263,S322)
	S324= CtrlALUOut=0                                          Premise(F166)
	S325= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S265,S324)
	S326= CtrlDR=0                                              Premise(F167)
	S327= [DR]=a                                                DR-Hold(S267,S326)
	S328= CtrlDMMU=0                                            Premise(F168)
	S329= CtrlDAddrReg=0                                        Premise(F169)
	S330= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S270,S329)
	S331= CtrlDCache=0                                          Premise(F170)
	S332= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S333= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S334= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S335= CtrlDMem=0                                            Premise(F171)
	S336= CtrlDMem8Word=0                                       Premise(F172)

MEM(DMMU2)	S337= CP0.ASID=pid                                          CP0-Read-ASID(S300)
	S338= PC.CIA=addr                                           PC-Out(S306)
	S339= PC.CIA31_28=addr[31:28]                               PC-Out(S306)
	S340= PC.Out=addr+4                                         PC-Out(S307)
	S341= IR.Out={43,rS,rT,offset}                              IR-Out(S312)
	S342= IR.Out31_26=43                                        IR-Out(S312)
	S343= IR.Out25_21=rS                                        IR-Out(S312)
	S344= IR.Out20_16=rT                                        IR-Out(S312)
	S345= IR.Out15_0=offset                                     IR-Out(S312)
	S346= A.Out=base                                            A-Out(S321)
	S347= A.Out1_0={base}[1:0]                                  A-Out(S321)
	S348= A.Out4_0={base}[4:0]                                  A-Out(S321)
	S349= B.Out={16{offset[15]},offset}                         B-Out(S323)
	S350= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S323)
	S351= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S323)
	S352= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S325)
	S353= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S325)
	S354= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S325)
	S355= DR.Out=a                                              DR-Out(S327)
	S356= DR.Out1_0={a}[1:0]                                    DR-Out(S327)
	S357= DR.Out4_0={a}[4:0]                                    DR-Out(S327)
	S358= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S330)
	S359= DAddrReg.Out1_0={{pid,base+{16{offset[15]},offset}}}[1:0]DAddrReg-Out(S330)
	S360= DAddrReg.Out4_0={{pid,base+{16{offset[15]},offset}}}[4:0]DAddrReg-Out(S330)
	S361= CU.DMMUHit=>CU.DMMUHit                                Premise(F173)
	S362= CU.DCacheHit=>CU.DCacheHit                            Premise(F174)
	S363= DAddrReg.Out=>DMem.WAddr                              Premise(F175)
	S364= DMem.WAddr={pid,base+{16{offset[15]},offset}}         Path(S358,S363)
	S365= DR.Out=>DMem.WData                                    Premise(F176)
	S366= DMem.WData=a                                          Path(S355,S365)
	S367= ALUOut.Out=>DCache.IEA                                Premise(F177)
	S368= DCache.IEA=base+{16{offset[15]},offset}               Path(S352,S367)
	S369= DCache.Hit=DCacheHit(base+{16{offset[15]},offset})    DCache-Search(S368)
	S370= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S371= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S372= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S373= DR.Out=>DCache.In                                     Premise(F178)
	S374= DCache.In=a                                           Path(S355,S373)
	S375= CtrlASIDIn=0                                          Premise(F179)
	S376= CtrlCP0=0                                             Premise(F180)
	S377= CP0[ASID]=pid                                         CP0-Hold(S300,S376)
	S378= CtrlEPCIn=0                                           Premise(F181)
	S379= CtrlExCodeIn=0                                        Premise(F182)
	S380= CtrlIMMU=0                                            Premise(F183)
	S381= CtrlPC=0                                              Premise(F184)
	S382= CtrlPCInc=0                                           Premise(F185)
	S383= PC[CIA]=addr                                          PC-Hold(S306,S382)
	S384= PC[Out]=addr+4                                        PC-Hold(S307,S381,S382)
	S385= CtrlIAddrReg=0                                        Premise(F186)
	S386= CtrlICache=0                                          Premise(F187)
	S387= ICache[addr]={43,rS,rT,offset}                        ICache-Hold(S310,S386)
	S388= CtrlIR=0                                              Premise(F188)
	S389= [IR]={43,rS,rT,offset}                                IR-Hold(S312,S388)
	S390= CtrlICacheReg=0                                       Premise(F189)
	S391= CtrlIMem=0                                            Premise(F190)
	S392= IMem[{pid,addr}]={43,rS,rT,offset}                    IMem-Hold(S315,S391)
	S393= CtrlIRMux=0                                           Premise(F191)
	S394= CtrlGPR=0                                             Premise(F192)
	S395= GPR[rS]=base                                          GPR-Hold(S318,S394)
	S396= GPR[rT]=a                                             GPR-Hold(S319,S394)
	S397= CtrlA=0                                               Premise(F193)
	S398= [A]=base                                              A-Hold(S321,S397)
	S399= CtrlB=0                                               Premise(F194)
	S400= [B]={16{offset[15]},offset}                           B-Hold(S323,S399)
	S401= CtrlALUOut=0                                          Premise(F195)
	S402= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S325,S401)
	S403= CtrlDR=0                                              Premise(F196)
	S404= [DR]=a                                                DR-Hold(S327,S403)
	S405= CtrlDMMU=0                                            Premise(F197)
	S406= CtrlDAddrReg=0                                        Premise(F198)
	S407= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S330,S406)
	S408= CtrlDCache=0                                          Premise(F199)
	S409= CtrlDMem=1                                            Premise(F200)
	S410= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Write(S364,S366,S409)
	S411= CtrlDMem8Word=0                                       Premise(F201)

WB	S412= CP0.ASID=pid                                          CP0-Read-ASID(S377)
	S413= PC.CIA=addr                                           PC-Out(S383)
	S414= PC.CIA31_28=addr[31:28]                               PC-Out(S383)
	S415= PC.Out=addr+4                                         PC-Out(S384)
	S416= IR.Out={43,rS,rT,offset}                              IR-Out(S389)
	S417= IR.Out31_26=43                                        IR-Out(S389)
	S418= IR.Out25_21=rS                                        IR-Out(S389)
	S419= IR.Out20_16=rT                                        IR-Out(S389)
	S420= IR.Out15_0=offset                                     IR-Out(S389)
	S421= A.Out=base                                            A-Out(S398)
	S422= A.Out1_0={base}[1:0]                                  A-Out(S398)
	S423= A.Out4_0={base}[4:0]                                  A-Out(S398)
	S424= B.Out={16{offset[15]},offset}                         B-Out(S400)
	S425= B.Out1_0={{16{offset[15]},offset}}[1:0]               B-Out(S400)
	S426= B.Out4_0={{16{offset[15]},offset}}[4:0]               B-Out(S400)
	S427= ALUOut.Out=base+{16{offset[15]},offset}               ALUOut-Out(S402)
	S428= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]     ALUOut-Out(S402)
	S429= ALUOut.Out4_0={base+{16{offset[15]},offset}}[4:0]     ALUOut-Out(S402)
	S430= DR.Out=a                                              DR-Out(S404)
	S431= DR.Out1_0={a}[1:0]                                    DR-Out(S404)
	S432= DR.Out4_0={a}[4:0]                                    DR-Out(S404)
	S433= DAddrReg.Out={pid,base+{16{offset[15]},offset}}       DAddrReg-Out(S407)
	S434= DAddrReg.Out1_0={{pid,base+{16{offset[15]},offset}}}[1:0]DAddrReg-Out(S407)
	S435= DAddrReg.Out4_0={{pid,base+{16{offset[15]},offset}}}[4:0]DAddrReg-Out(S407)
	S436= CtrlASIDIn=0                                          Premise(F202)
	S437= CtrlCP0=0                                             Premise(F203)
	S438= CP0[ASID]=pid                                         CP0-Hold(S377,S437)
	S439= CtrlEPCIn=0                                           Premise(F204)
	S440= CtrlExCodeIn=0                                        Premise(F205)
	S441= CtrlIMMU=0                                            Premise(F206)
	S442= CtrlPC=0                                              Premise(F207)
	S443= CtrlPCInc=0                                           Premise(F208)
	S444= PC[CIA]=addr                                          PC-Hold(S383,S443)
	S445= PC[Out]=addr+4                                        PC-Hold(S384,S442,S443)
	S446= CtrlIAddrReg=0                                        Premise(F209)
	S447= CtrlICache=0                                          Premise(F210)
	S448= ICache[addr]={43,rS,rT,offset}                        ICache-Hold(S387,S447)
	S449= CtrlIR=0                                              Premise(F211)
	S450= [IR]={43,rS,rT,offset}                                IR-Hold(S389,S449)
	S451= CtrlICacheReg=0                                       Premise(F212)
	S452= CtrlIMem=0                                            Premise(F213)
	S453= IMem[{pid,addr}]={43,rS,rT,offset}                    IMem-Hold(S392,S452)
	S454= CtrlIRMux=0                                           Premise(F214)
	S455= CtrlGPR=0                                             Premise(F215)
	S456= GPR[rS]=base                                          GPR-Hold(S395,S455)
	S457= GPR[rT]=a                                             GPR-Hold(S396,S455)
	S458= CtrlA=0                                               Premise(F216)
	S459= [A]=base                                              A-Hold(S398,S458)
	S460= CtrlB=0                                               Premise(F217)
	S461= [B]={16{offset[15]},offset}                           B-Hold(S400,S460)
	S462= CtrlALUOut=0                                          Premise(F218)
	S463= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S402,S462)
	S464= CtrlDR=0                                              Premise(F219)
	S465= [DR]=a                                                DR-Hold(S404,S464)
	S466= CtrlDMMU=0                                            Premise(F220)
	S467= CtrlDAddrReg=0                                        Premise(F221)
	S468= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S407,S467)
	S469= CtrlDCache=0                                          Premise(F222)
	S470= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S471= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S472= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S473= CtrlDMem=0                                            Premise(F223)
	S474= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S410,S473)
	S475= CtrlDMem8Word=0                                       Premise(F224)

POST	S438= CP0[ASID]=pid                                         CP0-Hold(S377,S437)
	S444= PC[CIA]=addr                                          PC-Hold(S383,S443)
	S445= PC[Out]=addr+4                                        PC-Hold(S384,S442,S443)
	S448= ICache[addr]={43,rS,rT,offset}                        ICache-Hold(S387,S447)
	S450= [IR]={43,rS,rT,offset}                                IR-Hold(S389,S449)
	S453= IMem[{pid,addr}]={43,rS,rT,offset}                    IMem-Hold(S392,S452)
	S456= GPR[rS]=base                                          GPR-Hold(S395,S455)
	S457= GPR[rT]=a                                             GPR-Hold(S396,S455)
	S459= [A]=base                                              A-Hold(S398,S458)
	S461= [B]={16{offset[15]},offset}                           B-Hold(S400,S460)
	S463= [ALUOut]=base+{16{offset[15]},offset}                 ALUOut-Hold(S402,S462)
	S465= [DR]=a                                                DR-Hold(S404,S464)
	S468= [DAddrReg]={pid,base+{16{offset[15]},offset}}         DAddrReg-Hold(S407,S467)
	S474= DMem[{pid,base+{16{offset[15]},offset}}]=a            DMem-Hold(S410,S473)

