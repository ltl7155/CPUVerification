
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,1040}                     Premise(F2)
	S3= ICache[addr]={31,rT,rA,rB,1040}                         Premise(F3)
	S4= GPRegs[rA]=a                                            Premise(F4)
	S5= GPRegs[rB]=b                                            Premise(F5)
	S6= XER[SO]=so                                              Premise(F6)

IF	S7= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S8= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S9= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S10= PC.Out=addr                                            PC-Out(S1)
	S11= XER.SOOut=so                                           XER-SO-Out(S6)
	S12= PIDReg.Out=>IMMU.PID                                   Premise(F7)
	S13= IMMU.PID=pid                                           Path(S7,S12)
	S14= PC.Out=>IMMU.IEA                                       Premise(F8)
	S15= IMMU.IEA=addr                                          Path(S10,S14)
	S16= IMMU.Addr={pid,addr}                                   IMMU-Search(S13,S15)
	S17= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S13,S15)
	S18= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S19= IAddrReg.In={pid,addr}                                 Path(S16,S18)
	S20= IMMU.Hit=>IMMUHitReg.In                                Premise(F10)
	S21= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S17,S20)
	S22= PC.Out=>ICache.IEA                                     Premise(F11)
	S23= ICache.IEA=addr                                        Path(S10,S22)
	S24= ICache.Hit=ICacheHit(addr)                             ICache-Search(S23)
	S25= ICache.Out={31,rT,rA,rB,1040}                          ICache-Search(S23,S3)
	S26= ICache.Out=>ICacheReg.In                               Premise(F12)
	S27= ICacheReg.In={31,rT,rA,rB,1040}                        Path(S25,S26)
	S28= ICache.Hit=>ICacheHitReg.In                            Premise(F13)
	S29= ICacheHitReg.In=ICacheHit(addr)                        Path(S24,S28)
	S30= IMMUHitReg.Out=>CU.IMemHit                             Premise(F14)
	S31= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F15)
	S32= IAddrReg.Out=>IMem.RAddr                               Premise(F16)
	S33= IMem.Out=>IRMux.MemData                                Premise(F17)
	S34= ICacheReg.Out=>IRMux.CacheData                         Premise(F18)
	S35= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F19)
	S36= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F20)
	S37= IRMux.Out=>IR.In                                       Premise(F21)
	S38= IMem.MEM8WordOut=>ICache.WData                         Premise(F22)
	S39= PC.Out=>ICache.IEA                                     Premise(F23)
	S40= IR.Out0_5=>CU.Op                                       Premise(F24)
	S41= IR.Out11_15=>GPRegs.RReg1                              Premise(F25)
	S42= IR.Out16_20=>GPRegs.RReg2                              Premise(F26)
	S43= IR.Out21_31=>CU.IRFunc                                 Premise(F27)
	S44= GPRegs.Rdata1=>A.In                                    Premise(F28)
	S45= GPRegs.Rdata2=>B.In                                    Premise(F29)
	S46= A.Out=>ALU.A                                           Premise(F30)
	S47= B.Out=>ALU.B                                           Premise(F31)
	S48= CU.Func=>ALU.Func                                      Premise(F32)
	S49= ALU.Out=>ALUOut.In                                     Premise(F33)
	S50= ALU.CA=>CAReg.In                                       Premise(F34)
	S51= ALU.OV=>OVReg.In                                       Premise(F35)
	S52= XER.SOOut=>ORGate.A                                    Premise(F36)
	S53= ORGate.A=so                                            Path(S11,S52)
	S54= ALU.OV=>ORGate.B                                       Premise(F37)
	S55= ORGate.Out=>DR1bit.In                                  Premise(F38)
	S56= IR.Out6_10=>GPRegs.WReg                                Premise(F39)
	S57= ALUOut.Out=>GPRegs.WData                               Premise(F40)
	S58= DR1bit.Out=>XER.SOIn                                   Premise(F41)
	S59= CAReg.Out=>XER.CAIn                                    Premise(F42)
	S60= OVReg.Out=>XER.OVIn                                    Premise(F43)
	S61= CtrlPIDReg=0                                           Premise(F44)
	S62= [PIDReg]=pid                                           PIDReg-Hold(S0,S61)
	S63= CtrlIMMU=0                                             Premise(F45)
	S64= CtrlPC=0                                               Premise(F46)
	S65= CtrlPCInc=0                                            Premise(F47)
	S66= PC[Out]=addr                                           PC-Hold(S1,S64,S65)
	S67= CtrlIAddrReg=1                                         Premise(F48)
	S68= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S19,S67)
	S69= CtrlIMMUHitReg=1                                       Premise(F49)
	S70= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S21,S69)
	S71= CtrlICache=0                                           Premise(F50)
	S72= ICache[addr]={31,rT,rA,rB,1040}                        ICache-Hold(S3,S71)
	S73= CtrlICacheReg=1                                        Premise(F51)
	S74= [ICacheReg]={31,rT,rA,rB,1040}                         ICacheReg-Write(S27,S73)
	S75= CtrlICacheHitReg=1                                     Premise(F52)
	S76= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S29,S75)
	S77= CtrlIMem=0                                             Premise(F53)
	S78= IMem[{pid,addr}]={31,rT,rA,rB,1040}                    IMem-Hold(S2,S77)
	S79= CtrlIRMux=0                                            Premise(F54)
	S80= CtrlIR=0                                               Premise(F55)
	S81= CtrlGPRegs=0                                           Premise(F56)
	S82= GPRegs[rA]=a                                           GPRegs-Hold(S4,S81)
	S83= GPRegs[rB]=b                                           GPRegs-Hold(S5,S81)
	S84= CtrlA=0                                                Premise(F57)
	S85= CtrlB=0                                                Premise(F58)
	S86= CtrlALUOut=0                                           Premise(F59)
	S87= CtrlCAReg=0                                            Premise(F60)
	S88= CtrlOVReg=0                                            Premise(F61)
	S89= CtrlXERSO=0                                            Premise(F62)
	S90= XER[SO]=so                                             XER-SO-Hold(S6,S89)
	S91= CtrlXEROV=0                                            Premise(F63)
	S92= CtrlXERCA=0                                            Premise(F64)
	S93= CtrlDR1bit=0                                           Premise(F65)

IMMU	S94= PIDReg.Out=pid                                         PIDReg-Out(S62)
	S95= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S62)
	S96= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S62)
	S97= PC.Out=addr                                            PC-Out(S66)
	S98= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S68)
	S99= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S68)
	S100= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S68)
	S101= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S70)
	S102= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S70)
	S103= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S70)
	S104= ICacheReg.Out={31,rT,rA,rB,1040}                      ICacheReg-Out(S74)
	S105= ICacheReg.Out26_31={31,rT,rA,rB,1040}[26:31]          ICacheReg-Out(S74)
	S106= ICacheReg.Out30_31={31,rT,rA,rB,1040}[30:31]          ICacheReg-Out(S74)
	S107= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S76)
	S108= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S76)
	S109= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S76)
	S110= XER.SOOut=so                                          XER-SO-Out(S90)
	S111= PIDReg.Out=>IMMU.PID                                  Premise(F66)
	S112= IMMU.PID=pid                                          Path(S94,S111)
	S113= PC.Out=>IMMU.IEA                                      Premise(F67)
	S114= IMMU.IEA=addr                                         Path(S97,S113)
	S115= IMMU.Addr={pid,addr}                                  IMMU-Search(S112,S114)
	S116= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S112,S114)
	S117= IMMU.Addr=>IAddrReg.In                                Premise(F68)
	S118= IAddrReg.In={pid,addr}                                Path(S115,S117)
	S119= IMMU.Hit=>IMMUHitReg.In                               Premise(F69)
	S120= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S116,S119)
	S121= PC.Out=>ICache.IEA                                    Premise(F70)
	S122= ICache.IEA=addr                                       Path(S97,S121)
	S123= ICache.Hit=ICacheHit(addr)                            ICache-Search(S122)
	S124= ICache.Out={31,rT,rA,rB,1040}                         ICache-Search(S122,S72)
	S125= ICache.Out=>ICacheReg.In                              Premise(F71)
	S126= ICacheReg.In={31,rT,rA,rB,1040}                       Path(S124,S125)
	S127= ICache.Hit=>ICacheHitReg.In                           Premise(F72)
	S128= ICacheHitReg.In=ICacheHit(addr)                       Path(S123,S127)
	S129= IMMUHitReg.Out=>CU.IMemHit                            Premise(F73)
	S130= CU.IMemHit=IMMUHit(pid,addr)                          Path(S101,S129)
	S131= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F74)
	S132= CU.ICacheHit=ICacheHit(addr)                          Path(S107,S131)
	S133= IAddrReg.Out=>IMem.RAddr                              Premise(F75)
	S134= IMem.RAddr={pid,addr}                                 Path(S98,S133)
	S135= IMem.Out={31,rT,rA,rB,1040}                           IMem-Read(S134,S78)
	S136= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S134,S78)
	S137= IMem.Out=>IRMux.MemData                               Premise(F76)
	S138= IRMux.MemData={31,rT,rA,rB,1040}                      Path(S135,S137)
	S139= ICacheReg.Out=>IRMux.CacheData                        Premise(F77)
	S140= IRMux.CacheData={31,rT,rA,rB,1040}                    Path(S104,S139)
	S141= IRMux.Out={31,rT,rA,rB,1040}                          IRMux-Select(S138,S140)
	S142= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F78)
	S143= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S101,S142)
	S144= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F79)
	S145= IRMux.CacheSel=ICacheHit(addr)                        Path(S107,S144)
	S146= IRMux.Out=>IR.In                                      Premise(F80)
	S147= IR.In={31,rT,rA,rB,1040}                              Path(S141,S146)
	S148= IMem.MEM8WordOut=>ICache.WData                        Premise(F81)
	S149= ICache.WData=IMemGet8Word({pid,addr})                 Path(S136,S148)
	S150= PC.Out=>ICache.IEA                                    Premise(F82)
	S151= IR.Out0_5=>CU.Op                                      Premise(F83)
	S152= IR.Out11_15=>GPRegs.RReg1                             Premise(F84)
	S153= IR.Out16_20=>GPRegs.RReg2                             Premise(F85)
	S154= IR.Out21_31=>CU.IRFunc                                Premise(F86)
	S155= GPRegs.Rdata1=>A.In                                   Premise(F87)
	S156= GPRegs.Rdata2=>B.In                                   Premise(F88)
	S157= A.Out=>ALU.A                                          Premise(F89)
	S158= B.Out=>ALU.B                                          Premise(F90)
	S159= CU.Func=>ALU.Func                                     Premise(F91)
	S160= ALU.Out=>ALUOut.In                                    Premise(F92)
	S161= ALU.CA=>CAReg.In                                      Premise(F93)
	S162= ALU.OV=>OVReg.In                                      Premise(F94)
	S163= XER.SOOut=>ORGate.A                                   Premise(F95)
	S164= ORGate.A=so                                           Path(S110,S163)
	S165= ALU.OV=>ORGate.B                                      Premise(F96)
	S166= ORGate.Out=>DR1bit.In                                 Premise(F97)
	S167= IR.Out6_10=>GPRegs.WReg                               Premise(F98)
	S168= ALUOut.Out=>GPRegs.WData                              Premise(F99)
	S169= DR1bit.Out=>XER.SOIn                                  Premise(F100)
	S170= CAReg.Out=>XER.CAIn                                   Premise(F101)
	S171= OVReg.Out=>XER.OVIn                                   Premise(F102)
	S172= CtrlPIDReg=0                                          Premise(F103)
	S173= [PIDReg]=pid                                          PIDReg-Hold(S62,S172)
	S174= CtrlIMMU=0                                            Premise(F104)
	S175= CtrlPC=0                                              Premise(F105)
	S176= CtrlPCInc=1                                           Premise(F106)
	S177= PC[Out]=addr+4                                        PC-Inc(S66,S175,S176)
	S178= PC[CIA]=addr                                          PC-Inc(S66,S175,S176)
	S179= CtrlIAddrReg=0                                        Premise(F107)
	S180= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S68,S179)
	S181= CtrlIMMUHitReg=0                                      Premise(F108)
	S182= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S70,S181)
	S183= CtrlICache=0                                          Premise(F109)
	S184= ICache[addr]={31,rT,rA,rB,1040}                       ICache-Hold(S72,S183)
	S185= CtrlICacheReg=0                                       Premise(F110)
	S186= [ICacheReg]={31,rT,rA,rB,1040}                        ICacheReg-Hold(S74,S185)
	S187= CtrlICacheHitReg=0                                    Premise(F111)
	S188= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S76,S187)
	S189= CtrlIMem=0                                            Premise(F112)
	S190= IMem[{pid,addr}]={31,rT,rA,rB,1040}                   IMem-Hold(S78,S189)
	S191= CtrlIRMux=0                                           Premise(F113)
	S192= CtrlIR=1                                              Premise(F114)
	S193= [IR]={31,rT,rA,rB,1040}                               IR-Write(S147,S192)
	S194= CtrlGPRegs=0                                          Premise(F115)
	S195= GPRegs[rA]=a                                          GPRegs-Hold(S82,S194)
	S196= GPRegs[rB]=b                                          GPRegs-Hold(S83,S194)
	S197= CtrlA=0                                               Premise(F116)
	S198= CtrlB=0                                               Premise(F117)
	S199= CtrlALUOut=0                                          Premise(F118)
	S200= CtrlCAReg=0                                           Premise(F119)
	S201= CtrlOVReg=0                                           Premise(F120)
	S202= CtrlXERSO=0                                           Premise(F121)
	S203= XER[SO]=so                                            XER-SO-Hold(S90,S202)
	S204= CtrlXEROV=0                                           Premise(F122)
	S205= CtrlXERCA=0                                           Premise(F123)
	S206= CtrlDR1bit=0                                          Premise(F124)

ID	S207= PIDReg.Out=pid                                        PIDReg-Out(S173)
	S208= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S173)
	S209= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S173)
	S210= PC.Out=addr+4                                         PC-Out(S177)
	S211= PC.CIA=addr                                           PC-Out(S178)
	S212= PC.CIA31_28=addr[31:28]                               PC-Out(S178)
	S213= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S180)
	S214= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S180)
	S215= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S180)
	S216= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S182)
	S217= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S182)
	S218= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S182)
	S219= ICacheReg.Out={31,rT,rA,rB,1040}                      ICacheReg-Out(S186)
	S220= ICacheReg.Out26_31={31,rT,rA,rB,1040}[26:31]          ICacheReg-Out(S186)
	S221= ICacheReg.Out30_31={31,rT,rA,rB,1040}[30:31]          ICacheReg-Out(S186)
	S222= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S188)
	S223= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S188)
	S224= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S188)
	S225= IR.Out0_5=31                                          IR-Out(S193)
	S226= IR.Out6_10=rT                                         IR-Out(S193)
	S227= IR.Out11_15=rA                                        IR-Out(S193)
	S228= IR.Out16_20=rB                                        IR-Out(S193)
	S229= IR.Out21_31=1040                                      IR-Out(S193)
	S230= XER.SOOut=so                                          XER-SO-Out(S203)
	S231= PIDReg.Out=>IMMU.PID                                  Premise(F125)
	S232= IMMU.PID=pid                                          Path(S207,S231)
	S233= PC.Out=>IMMU.IEA                                      Premise(F126)
	S234= IMMU.IEA=addr+4                                       Path(S210,S233)
	S235= IMMU.Addr={pid,addr+4}                                IMMU-Search(S232,S234)
	S236= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S232,S234)
	S237= IMMU.Addr=>IAddrReg.In                                Premise(F127)
	S238= IAddrReg.In={pid,addr+4}                              Path(S235,S237)
	S239= IMMU.Hit=>IMMUHitReg.In                               Premise(F128)
	S240= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S236,S239)
	S241= PC.Out=>ICache.IEA                                    Premise(F129)
	S242= ICache.IEA=addr+4                                     Path(S210,S241)
	S243= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S242)
	S244= ICache.Out=>ICacheReg.In                              Premise(F130)
	S245= ICache.Hit=>ICacheHitReg.In                           Premise(F131)
	S246= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S243,S245)
	S247= IMMUHitReg.Out=>CU.IMemHit                            Premise(F132)
	S248= CU.IMemHit=IMMUHit(pid,addr)                          Path(S216,S247)
	S249= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F133)
	S250= CU.ICacheHit=ICacheHit(addr)                          Path(S222,S249)
	S251= IAddrReg.Out=>IMem.RAddr                              Premise(F134)
	S252= IMem.RAddr={pid,addr}                                 Path(S213,S251)
	S253= IMem.Out={31,rT,rA,rB,1040}                           IMem-Read(S252,S190)
	S254= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S252,S190)
	S255= IMem.Out=>IRMux.MemData                               Premise(F135)
	S256= IRMux.MemData={31,rT,rA,rB,1040}                      Path(S253,S255)
	S257= ICacheReg.Out=>IRMux.CacheData                        Premise(F136)
	S258= IRMux.CacheData={31,rT,rA,rB,1040}                    Path(S219,S257)
	S259= IRMux.Out={31,rT,rA,rB,1040}                          IRMux-Select(S256,S258)
	S260= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F137)
	S261= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S216,S260)
	S262= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F138)
	S263= IRMux.CacheSel=ICacheHit(addr)                        Path(S222,S262)
	S264= IRMux.Out=>IR.In                                      Premise(F139)
	S265= IR.In={31,rT,rA,rB,1040}                              Path(S259,S264)
	S266= IMem.MEM8WordOut=>ICache.WData                        Premise(F140)
	S267= ICache.WData=IMemGet8Word({pid,addr})                 Path(S254,S266)
	S268= PC.Out=>ICache.IEA                                    Premise(F141)
	S269= IR.Out0_5=>CU.Op                                      Premise(F142)
	S270= CU.Op=31                                              Path(S225,S269)
	S271= IR.Out11_15=>GPRegs.RReg1                             Premise(F143)
	S272= GPRegs.RReg1=rA                                       Path(S227,S271)
	S273= GPRegs.Rdata1=a                                       GPRegs-Read(S272,S195)
	S274= IR.Out16_20=>GPRegs.RReg2                             Premise(F144)
	S275= GPRegs.RReg2=rB                                       Path(S228,S274)
	S276= GPRegs.Rdata2=b                                       GPRegs-Read(S275,S196)
	S277= IR.Out21_31=>CU.IRFunc                                Premise(F145)
	S278= CU.IRFunc=1040                                        Path(S229,S277)
	S279= CU.Func=alu_subf                                      CU(S270,S278)
	S280= GPRegs.Rdata1=>A.In                                   Premise(F146)
	S281= A.In=a                                                Path(S273,S280)
	S282= GPRegs.Rdata2=>B.In                                   Premise(F147)
	S283= B.In=b                                                Path(S276,S282)
	S284= A.Out=>ALU.A                                          Premise(F148)
	S285= B.Out=>ALU.B                                          Premise(F149)
	S286= CU.Func=>ALU.Func                                     Premise(F150)
	S287= ALU.Func=alu_subf                                     Path(S279,S286)
	S288= ALU.Out=>ALUOut.In                                    Premise(F151)
	S289= ALU.CA=>CAReg.In                                      Premise(F152)
	S290= ALU.OV=>OVReg.In                                      Premise(F153)
	S291= XER.SOOut=>ORGate.A                                   Premise(F154)
	S292= ORGate.A=so                                           Path(S230,S291)
	S293= ALU.OV=>ORGate.B                                      Premise(F155)
	S294= ORGate.Out=>DR1bit.In                                 Premise(F156)
	S295= IR.Out6_10=>GPRegs.WReg                               Premise(F157)
	S296= GPRegs.WReg=rT                                        Path(S226,S295)
	S297= ALUOut.Out=>GPRegs.WData                              Premise(F158)
	S298= DR1bit.Out=>XER.SOIn                                  Premise(F159)
	S299= CAReg.Out=>XER.CAIn                                   Premise(F160)
	S300= OVReg.Out=>XER.OVIn                                   Premise(F161)
	S301= CtrlPIDReg=0                                          Premise(F162)
	S302= [PIDReg]=pid                                          PIDReg-Hold(S173,S301)
	S303= CtrlIMMU=0                                            Premise(F163)
	S304= CtrlPC=0                                              Premise(F164)
	S305= CtrlPCInc=0                                           Premise(F165)
	S306= PC[CIA]=addr                                          PC-Hold(S178,S305)
	S307= PC[Out]=addr+4                                        PC-Hold(S177,S304,S305)
	S308= CtrlIAddrReg=0                                        Premise(F166)
	S309= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S180,S308)
	S310= CtrlIMMUHitReg=0                                      Premise(F167)
	S311= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S182,S310)
	S312= CtrlICache=0                                          Premise(F168)
	S313= ICache[addr]={31,rT,rA,rB,1040}                       ICache-Hold(S184,S312)
	S314= CtrlICacheReg=0                                       Premise(F169)
	S315= [ICacheReg]={31,rT,rA,rB,1040}                        ICacheReg-Hold(S186,S314)
	S316= CtrlICacheHitReg=0                                    Premise(F170)
	S317= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S188,S316)
	S318= CtrlIMem=0                                            Premise(F171)
	S319= IMem[{pid,addr}]={31,rT,rA,rB,1040}                   IMem-Hold(S190,S318)
	S320= CtrlIRMux=0                                           Premise(F172)
	S321= CtrlIR=0                                              Premise(F173)
	S322= [IR]={31,rT,rA,rB,1040}                               IR-Hold(S193,S321)
	S323= CtrlGPRegs=0                                          Premise(F174)
	S324= GPRegs[rA]=a                                          GPRegs-Hold(S195,S323)
	S325= GPRegs[rB]=b                                          GPRegs-Hold(S196,S323)
	S326= CtrlA=1                                               Premise(F175)
	S327= [A]=a                                                 A-Write(S281,S326)
	S328= CtrlB=1                                               Premise(F176)
	S329= [B]=b                                                 B-Write(S283,S328)
	S330= CtrlALUOut=0                                          Premise(F177)
	S331= CtrlCAReg=0                                           Premise(F178)
	S332= CtrlOVReg=0                                           Premise(F179)
	S333= CtrlXERSO=0                                           Premise(F180)
	S334= XER[SO]=so                                            XER-SO-Hold(S203,S333)
	S335= CtrlXEROV=0                                           Premise(F181)
	S336= CtrlXERCA=0                                           Premise(F182)
	S337= CtrlDR1bit=0                                          Premise(F183)

EX	S338= PIDReg.Out=pid                                        PIDReg-Out(S302)
	S339= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S302)
	S340= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S302)
	S341= PC.CIA=addr                                           PC-Out(S306)
	S342= PC.CIA31_28=addr[31:28]                               PC-Out(S306)
	S343= PC.Out=addr+4                                         PC-Out(S307)
	S344= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S309)
	S345= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S309)
	S346= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S309)
	S347= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S311)
	S348= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S311)
	S349= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S311)
	S350= ICacheReg.Out={31,rT,rA,rB,1040}                      ICacheReg-Out(S315)
	S351= ICacheReg.Out26_31={31,rT,rA,rB,1040}[26:31]          ICacheReg-Out(S315)
	S352= ICacheReg.Out30_31={31,rT,rA,rB,1040}[30:31]          ICacheReg-Out(S315)
	S353= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S317)
	S354= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S317)
	S355= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S317)
	S356= IR.Out0_5=31                                          IR-Out(S322)
	S357= IR.Out6_10=rT                                         IR-Out(S322)
	S358= IR.Out11_15=rA                                        IR-Out(S322)
	S359= IR.Out16_20=rB                                        IR-Out(S322)
	S360= IR.Out21_31=1040                                      IR-Out(S322)
	S361= A.Out=a                                               A-Out(S327)
	S362= A.Out26_31=a[26:31]                                   A-Out(S327)
	S363= A.Out30_31=a[30:31]                                   A-Out(S327)
	S364= B.Out=b                                               B-Out(S329)
	S365= B.Out26_31=b[26:31]                                   B-Out(S329)
	S366= B.Out30_31=b[30:31]                                   B-Out(S329)
	S367= XER.SOOut=so                                          XER-SO-Out(S334)
	S368= PIDReg.Out=>IMMU.PID                                  Premise(F184)
	S369= IMMU.PID=pid                                          Path(S338,S368)
	S370= PC.Out=>IMMU.IEA                                      Premise(F185)
	S371= IMMU.IEA=addr+4                                       Path(S343,S370)
	S372= IMMU.Addr={pid,addr+4}                                IMMU-Search(S369,S371)
	S373= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S369,S371)
	S374= IMMU.Addr=>IAddrReg.In                                Premise(F186)
	S375= IAddrReg.In={pid,addr+4}                              Path(S372,S374)
	S376= IMMU.Hit=>IMMUHitReg.In                               Premise(F187)
	S377= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S373,S376)
	S378= PC.Out=>ICache.IEA                                    Premise(F188)
	S379= ICache.IEA=addr+4                                     Path(S343,S378)
	S380= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S379)
	S381= ICache.Out=>ICacheReg.In                              Premise(F189)
	S382= ICache.Hit=>ICacheHitReg.In                           Premise(F190)
	S383= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S380,S382)
	S384= IMMUHitReg.Out=>CU.IMemHit                            Premise(F191)
	S385= CU.IMemHit=IMMUHit(pid,addr)                          Path(S347,S384)
	S386= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F192)
	S387= CU.ICacheHit=ICacheHit(addr)                          Path(S353,S386)
	S388= IAddrReg.Out=>IMem.RAddr                              Premise(F193)
	S389= IMem.RAddr={pid,addr}                                 Path(S344,S388)
	S390= IMem.Out={31,rT,rA,rB,1040}                           IMem-Read(S389,S319)
	S391= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S389,S319)
	S392= IMem.Out=>IRMux.MemData                               Premise(F194)
	S393= IRMux.MemData={31,rT,rA,rB,1040}                      Path(S390,S392)
	S394= ICacheReg.Out=>IRMux.CacheData                        Premise(F195)
	S395= IRMux.CacheData={31,rT,rA,rB,1040}                    Path(S350,S394)
	S396= IRMux.Out={31,rT,rA,rB,1040}                          IRMux-Select(S393,S395)
	S397= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F196)
	S398= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S347,S397)
	S399= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F197)
	S400= IRMux.CacheSel=ICacheHit(addr)                        Path(S353,S399)
	S401= IRMux.Out=>IR.In                                      Premise(F198)
	S402= IR.In={31,rT,rA,rB,1040}                              Path(S396,S401)
	S403= IMem.MEM8WordOut=>ICache.WData                        Premise(F199)
	S404= ICache.WData=IMemGet8Word({pid,addr})                 Path(S391,S403)
	S405= PC.Out=>ICache.IEA                                    Premise(F200)
	S406= IR.Out0_5=>CU.Op                                      Premise(F201)
	S407= CU.Op=31                                              Path(S356,S406)
	S408= IR.Out11_15=>GPRegs.RReg1                             Premise(F202)
	S409= GPRegs.RReg1=rA                                       Path(S358,S408)
	S410= GPRegs.Rdata1=a                                       GPRegs-Read(S409,S324)
	S411= IR.Out16_20=>GPRegs.RReg2                             Premise(F203)
	S412= GPRegs.RReg2=rB                                       Path(S359,S411)
	S413= GPRegs.Rdata2=b                                       GPRegs-Read(S412,S325)
	S414= IR.Out21_31=>CU.IRFunc                                Premise(F204)
	S415= CU.IRFunc=1040                                        Path(S360,S414)
	S416= CU.Func=alu_subf                                      CU(S407,S415)
	S417= GPRegs.Rdata1=>A.In                                   Premise(F205)
	S418= A.In=a                                                Path(S410,S417)
	S419= GPRegs.Rdata2=>B.In                                   Premise(F206)
	S420= B.In=b                                                Path(S413,S419)
	S421= A.Out=>ALU.A                                          Premise(F207)
	S422= ALU.A=a                                               Path(S361,S421)
	S423= B.Out=>ALU.B                                          Premise(F208)
	S424= ALU.B=b                                               Path(S364,S423)
	S425= CU.Func=>ALU.Func                                     Premise(F209)
	S426= ALU.Func=alu_subf                                     Path(S416,S425)
	S427= ALU.Out=b-a                                           ALU(S422,S424)
	S428= ALU.CMP=Compare0(b-a)                                 ALU(S422,S424)
	S429= ALU.OV=OverFlow(b-a)                                  ALU(S422,S424)
	S430= ALU.CA=Carry(b-a)                                     ALU(S422,S424)
	S431= ALU.Out=>ALUOut.In                                    Premise(F210)
	S432= ALUOut.In=b-a                                         Path(S427,S431)
	S433= ALU.CA=>CAReg.In                                      Premise(F211)
	S434= CAReg.In=Carry(b-a)                                   Path(S430,S433)
	S435= ALU.OV=>OVReg.In                                      Premise(F212)
	S436= OVReg.In=OverFlow(b-a)                                Path(S429,S435)
	S437= XER.SOOut=>ORGate.A                                   Premise(F213)
	S438= ORGate.A=so                                           Path(S367,S437)
	S439= ALU.OV=>ORGate.B                                      Premise(F214)
	S440= ORGate.B=OverFlow(b-a)                                Path(S429,S439)
	S441= ORGate.Out=so|OverFlow(b-a)                           ORGate(S438,S440)
	S442= ORGate.Out=>DR1bit.In                                 Premise(F215)
	S443= DR1bit.In=so|OverFlow(b-a)                            Path(S441,S442)
	S444= IR.Out6_10=>GPRegs.WReg                               Premise(F216)
	S445= GPRegs.WReg=rT                                        Path(S357,S444)
	S446= ALUOut.Out=>GPRegs.WData                              Premise(F217)
	S447= DR1bit.Out=>XER.SOIn                                  Premise(F218)
	S448= CAReg.Out=>XER.CAIn                                   Premise(F219)
	S449= OVReg.Out=>XER.OVIn                                   Premise(F220)
	S450= CtrlPIDReg=0                                          Premise(F221)
	S451= [PIDReg]=pid                                          PIDReg-Hold(S302,S450)
	S452= CtrlIMMU=0                                            Premise(F222)
	S453= CtrlPC=0                                              Premise(F223)
	S454= CtrlPCInc=0                                           Premise(F224)
	S455= PC[CIA]=addr                                          PC-Hold(S306,S454)
	S456= PC[Out]=addr+4                                        PC-Hold(S307,S453,S454)
	S457= CtrlIAddrReg=0                                        Premise(F225)
	S458= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S309,S457)
	S459= CtrlIMMUHitReg=0                                      Premise(F226)
	S460= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S311,S459)
	S461= CtrlICache=0                                          Premise(F227)
	S462= ICache[addr]={31,rT,rA,rB,1040}                       ICache-Hold(S313,S461)
	S463= CtrlICacheReg=0                                       Premise(F228)
	S464= [ICacheReg]={31,rT,rA,rB,1040}                        ICacheReg-Hold(S315,S463)
	S465= CtrlICacheHitReg=0                                    Premise(F229)
	S466= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S317,S465)
	S467= CtrlIMem=0                                            Premise(F230)
	S468= IMem[{pid,addr}]={31,rT,rA,rB,1040}                   IMem-Hold(S319,S467)
	S469= CtrlIRMux=0                                           Premise(F231)
	S470= CtrlIR=0                                              Premise(F232)
	S471= [IR]={31,rT,rA,rB,1040}                               IR-Hold(S322,S470)
	S472= CtrlGPRegs=0                                          Premise(F233)
	S473= GPRegs[rA]=a                                          GPRegs-Hold(S324,S472)
	S474= GPRegs[rB]=b                                          GPRegs-Hold(S325,S472)
	S475= CtrlA=0                                               Premise(F234)
	S476= [A]=a                                                 A-Hold(S327,S475)
	S477= CtrlB=0                                               Premise(F235)
	S478= [B]=b                                                 B-Hold(S329,S477)
	S479= CtrlALUOut=1                                          Premise(F236)
	S480= [ALUOut]=b-a                                          ALUOut-Write(S432,S479)
	S481= CtrlCAReg=1                                           Premise(F237)
	S482= [CAReg]=Carry(b-a)                                    CAReg-Write(S434,S481)
	S483= CtrlOVReg=1                                           Premise(F238)
	S484= [OVReg]=OverFlow(b-a)                                 OVReg-Write(S436,S483)
	S485= CtrlXERSO=0                                           Premise(F239)
	S486= XER[SO]=so                                            XER-SO-Hold(S334,S485)
	S487= CtrlXEROV=0                                           Premise(F240)
	S488= CtrlXERCA=0                                           Premise(F241)
	S489= CtrlDR1bit=1                                          Premise(F242)
	S490= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Write(S443,S489)

MEM	S491= PIDReg.Out=pid                                        PIDReg-Out(S451)
	S492= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S451)
	S493= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S451)
	S494= PC.CIA=addr                                           PC-Out(S455)
	S495= PC.CIA31_28=addr[31:28]                               PC-Out(S455)
	S496= PC.Out=addr+4                                         PC-Out(S456)
	S497= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S458)
	S498= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S458)
	S499= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S458)
	S500= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S460)
	S501= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S460)
	S502= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S460)
	S503= ICacheReg.Out={31,rT,rA,rB,1040}                      ICacheReg-Out(S464)
	S504= ICacheReg.Out26_31={31,rT,rA,rB,1040}[26:31]          ICacheReg-Out(S464)
	S505= ICacheReg.Out30_31={31,rT,rA,rB,1040}[30:31]          ICacheReg-Out(S464)
	S506= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S466)
	S507= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S466)
	S508= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S466)
	S509= IR.Out0_5=31                                          IR-Out(S471)
	S510= IR.Out6_10=rT                                         IR-Out(S471)
	S511= IR.Out11_15=rA                                        IR-Out(S471)
	S512= IR.Out16_20=rB                                        IR-Out(S471)
	S513= IR.Out21_31=1040                                      IR-Out(S471)
	S514= A.Out=a                                               A-Out(S476)
	S515= A.Out26_31=a[26:31]                                   A-Out(S476)
	S516= A.Out30_31=a[30:31]                                   A-Out(S476)
	S517= B.Out=b                                               B-Out(S478)
	S518= B.Out26_31=b[26:31]                                   B-Out(S478)
	S519= B.Out30_31=b[30:31]                                   B-Out(S478)
	S520= ALUOut.Out=b-a                                        ALUOut-Out(S480)
	S521= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S480)
	S522= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S480)
	S523= CAReg.Out=Carry(b-a)                                  CAReg-Out(S482)
	S524= CAReg.Out26_31=Carry(b-a)[26:31]                      CAReg-Out(S482)
	S525= CAReg.Out30_31=Carry(b-a)[30:31]                      CAReg-Out(S482)
	S526= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S484)
	S527= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S484)
	S528= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S484)
	S529= XER.SOOut=so                                          XER-SO-Out(S486)
	S530= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S490)
	S531= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S490)
	S532= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S490)
	S533= PIDReg.Out=>IMMU.PID                                  Premise(F243)
	S534= IMMU.PID=pid                                          Path(S491,S533)
	S535= PC.Out=>IMMU.IEA                                      Premise(F244)
	S536= IMMU.IEA=addr+4                                       Path(S496,S535)
	S537= IMMU.Addr={pid,addr+4}                                IMMU-Search(S534,S536)
	S538= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S534,S536)
	S539= IMMU.Addr=>IAddrReg.In                                Premise(F245)
	S540= IAddrReg.In={pid,addr+4}                              Path(S537,S539)
	S541= IMMU.Hit=>IMMUHitReg.In                               Premise(F246)
	S542= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S538,S541)
	S543= PC.Out=>ICache.IEA                                    Premise(F247)
	S544= ICache.IEA=addr+4                                     Path(S496,S543)
	S545= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S544)
	S546= ICache.Out=>ICacheReg.In                              Premise(F248)
	S547= ICache.Hit=>ICacheHitReg.In                           Premise(F249)
	S548= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S545,S547)
	S549= IMMUHitReg.Out=>CU.IMemHit                            Premise(F250)
	S550= CU.IMemHit=IMMUHit(pid,addr)                          Path(S500,S549)
	S551= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F251)
	S552= CU.ICacheHit=ICacheHit(addr)                          Path(S506,S551)
	S553= IAddrReg.Out=>IMem.RAddr                              Premise(F252)
	S554= IMem.RAddr={pid,addr}                                 Path(S497,S553)
	S555= IMem.Out={31,rT,rA,rB,1040}                           IMem-Read(S554,S468)
	S556= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S554,S468)
	S557= IMem.Out=>IRMux.MemData                               Premise(F253)
	S558= IRMux.MemData={31,rT,rA,rB,1040}                      Path(S555,S557)
	S559= ICacheReg.Out=>IRMux.CacheData                        Premise(F254)
	S560= IRMux.CacheData={31,rT,rA,rB,1040}                    Path(S503,S559)
	S561= IRMux.Out={31,rT,rA,rB,1040}                          IRMux-Select(S558,S560)
	S562= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F255)
	S563= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S500,S562)
	S564= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F256)
	S565= IRMux.CacheSel=ICacheHit(addr)                        Path(S506,S564)
	S566= IRMux.Out=>IR.In                                      Premise(F257)
	S567= IR.In={31,rT,rA,rB,1040}                              Path(S561,S566)
	S568= IMem.MEM8WordOut=>ICache.WData                        Premise(F258)
	S569= ICache.WData=IMemGet8Word({pid,addr})                 Path(S556,S568)
	S570= PC.Out=>ICache.IEA                                    Premise(F259)
	S571= IR.Out0_5=>CU.Op                                      Premise(F260)
	S572= CU.Op=31                                              Path(S509,S571)
	S573= IR.Out11_15=>GPRegs.RReg1                             Premise(F261)
	S574= GPRegs.RReg1=rA                                       Path(S511,S573)
	S575= GPRegs.Rdata1=a                                       GPRegs-Read(S574,S473)
	S576= IR.Out16_20=>GPRegs.RReg2                             Premise(F262)
	S577= GPRegs.RReg2=rB                                       Path(S512,S576)
	S578= GPRegs.Rdata2=b                                       GPRegs-Read(S577,S474)
	S579= IR.Out21_31=>CU.IRFunc                                Premise(F263)
	S580= CU.IRFunc=1040                                        Path(S513,S579)
	S581= CU.Func=alu_subf                                      CU(S572,S580)
	S582= GPRegs.Rdata1=>A.In                                   Premise(F264)
	S583= A.In=a                                                Path(S575,S582)
	S584= GPRegs.Rdata2=>B.In                                   Premise(F265)
	S585= B.In=b                                                Path(S578,S584)
	S586= A.Out=>ALU.A                                          Premise(F266)
	S587= ALU.A=a                                               Path(S514,S586)
	S588= B.Out=>ALU.B                                          Premise(F267)
	S589= ALU.B=b                                               Path(S517,S588)
	S590= CU.Func=>ALU.Func                                     Premise(F268)
	S591= ALU.Func=alu_subf                                     Path(S581,S590)
	S592= ALU.Out=b-a                                           ALU(S587,S589)
	S593= ALU.CMP=Compare0(b-a)                                 ALU(S587,S589)
	S594= ALU.OV=OverFlow(b-a)                                  ALU(S587,S589)
	S595= ALU.CA=Carry(b-a)                                     ALU(S587,S589)
	S596= ALU.Out=>ALUOut.In                                    Premise(F269)
	S597= ALUOut.In=b-a                                         Path(S592,S596)
	S598= ALU.CA=>CAReg.In                                      Premise(F270)
	S599= CAReg.In=Carry(b-a)                                   Path(S595,S598)
	S600= ALU.OV=>OVReg.In                                      Premise(F271)
	S601= OVReg.In=OverFlow(b-a)                                Path(S594,S600)
	S602= XER.SOOut=>ORGate.A                                   Premise(F272)
	S603= ORGate.A=so                                           Path(S529,S602)
	S604= ALU.OV=>ORGate.B                                      Premise(F273)
	S605= ORGate.B=OverFlow(b-a)                                Path(S594,S604)
	S606= ORGate.Out=so|OverFlow(b-a)                           ORGate(S603,S605)
	S607= ORGate.Out=>DR1bit.In                                 Premise(F274)
	S608= DR1bit.In=so|OverFlow(b-a)                            Path(S606,S607)
	S609= IR.Out6_10=>GPRegs.WReg                               Premise(F275)
	S610= GPRegs.WReg=rT                                        Path(S510,S609)
	S611= ALUOut.Out=>GPRegs.WData                              Premise(F276)
	S612= GPRegs.WData=b-a                                      Path(S520,S611)
	S613= DR1bit.Out=>XER.SOIn                                  Premise(F277)
	S614= XER.SOIn=so|OverFlow(b-a)                             Path(S530,S613)
	S615= CAReg.Out=>XER.CAIn                                   Premise(F278)
	S616= XER.CAIn=Carry(b-a)                                   Path(S523,S615)
	S617= OVReg.Out=>XER.OVIn                                   Premise(F279)
	S618= XER.OVIn=OverFlow(b-a)                                Path(S526,S617)
	S619= CtrlPIDReg=0                                          Premise(F280)
	S620= [PIDReg]=pid                                          PIDReg-Hold(S451,S619)
	S621= CtrlIMMU=0                                            Premise(F281)
	S622= CtrlPC=0                                              Premise(F282)
	S623= CtrlPCInc=0                                           Premise(F283)
	S624= PC[CIA]=addr                                          PC-Hold(S455,S623)
	S625= PC[Out]=addr+4                                        PC-Hold(S456,S622,S623)
	S626= CtrlIAddrReg=0                                        Premise(F284)
	S627= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S458,S626)
	S628= CtrlIMMUHitReg=0                                      Premise(F285)
	S629= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S460,S628)
	S630= CtrlICache=0                                          Premise(F286)
	S631= ICache[addr]={31,rT,rA,rB,1040}                       ICache-Hold(S462,S630)
	S632= CtrlICacheReg=0                                       Premise(F287)
	S633= [ICacheReg]={31,rT,rA,rB,1040}                        ICacheReg-Hold(S464,S632)
	S634= CtrlICacheHitReg=0                                    Premise(F288)
	S635= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S466,S634)
	S636= CtrlIMem=0                                            Premise(F289)
	S637= IMem[{pid,addr}]={31,rT,rA,rB,1040}                   IMem-Hold(S468,S636)
	S638= CtrlIRMux=0                                           Premise(F290)
	S639= CtrlIR=0                                              Premise(F291)
	S640= [IR]={31,rT,rA,rB,1040}                               IR-Hold(S471,S639)
	S641= CtrlGPRegs=0                                          Premise(F292)
	S642= GPRegs[rA]=a                                          GPRegs-Hold(S473,S641)
	S643= GPRegs[rB]=b                                          GPRegs-Hold(S474,S641)
	S644= CtrlA=0                                               Premise(F293)
	S645= [A]=a                                                 A-Hold(S476,S644)
	S646= CtrlB=0                                               Premise(F294)
	S647= [B]=b                                                 B-Hold(S478,S646)
	S648= CtrlALUOut=0                                          Premise(F295)
	S649= [ALUOut]=b-a                                          ALUOut-Hold(S480,S648)
	S650= CtrlCAReg=0                                           Premise(F296)
	S651= [CAReg]=Carry(b-a)                                    CAReg-Hold(S482,S650)
	S652= CtrlOVReg=0                                           Premise(F297)
	S653= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S484,S652)
	S654= CtrlXERSO=0                                           Premise(F298)
	S655= XER[SO]=so                                            XER-SO-Hold(S486,S654)
	S656= CtrlXEROV=0                                           Premise(F299)
	S657= CtrlXERCA=0                                           Premise(F300)
	S658= CtrlDR1bit=0                                          Premise(F301)
	S659= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S490,S658)

DMMU1	S660= PIDReg.Out=pid                                        PIDReg-Out(S620)
	S661= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S620)
	S662= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S620)
	S663= PC.CIA=addr                                           PC-Out(S624)
	S664= PC.CIA31_28=addr[31:28]                               PC-Out(S624)
	S665= PC.Out=addr+4                                         PC-Out(S625)
	S666= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S627)
	S667= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S627)
	S668= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S627)
	S669= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S629)
	S670= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S629)
	S671= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S629)
	S672= ICacheReg.Out={31,rT,rA,rB,1040}                      ICacheReg-Out(S633)
	S673= ICacheReg.Out26_31={31,rT,rA,rB,1040}[26:31]          ICacheReg-Out(S633)
	S674= ICacheReg.Out30_31={31,rT,rA,rB,1040}[30:31]          ICacheReg-Out(S633)
	S675= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S635)
	S676= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S635)
	S677= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S635)
	S678= IR.Out0_5=31                                          IR-Out(S640)
	S679= IR.Out6_10=rT                                         IR-Out(S640)
	S680= IR.Out11_15=rA                                        IR-Out(S640)
	S681= IR.Out16_20=rB                                        IR-Out(S640)
	S682= IR.Out21_31=1040                                      IR-Out(S640)
	S683= A.Out=a                                               A-Out(S645)
	S684= A.Out26_31=a[26:31]                                   A-Out(S645)
	S685= A.Out30_31=a[30:31]                                   A-Out(S645)
	S686= B.Out=b                                               B-Out(S647)
	S687= B.Out26_31=b[26:31]                                   B-Out(S647)
	S688= B.Out30_31=b[30:31]                                   B-Out(S647)
	S689= ALUOut.Out=b-a                                        ALUOut-Out(S649)
	S690= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S649)
	S691= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S649)
	S692= CAReg.Out=Carry(b-a)                                  CAReg-Out(S651)
	S693= CAReg.Out26_31=Carry(b-a)[26:31]                      CAReg-Out(S651)
	S694= CAReg.Out30_31=Carry(b-a)[30:31]                      CAReg-Out(S651)
	S695= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S653)
	S696= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S653)
	S697= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S653)
	S698= XER.SOOut=so                                          XER-SO-Out(S655)
	S699= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S659)
	S700= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S659)
	S701= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S659)
	S702= PIDReg.Out=>IMMU.PID                                  Premise(F302)
	S703= IMMU.PID=pid                                          Path(S660,S702)
	S704= PC.Out=>IMMU.IEA                                      Premise(F303)
	S705= IMMU.IEA=addr+4                                       Path(S665,S704)
	S706= IMMU.Addr={pid,addr+4}                                IMMU-Search(S703,S705)
	S707= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S703,S705)
	S708= IMMU.Addr=>IAddrReg.In                                Premise(F304)
	S709= IAddrReg.In={pid,addr+4}                              Path(S706,S708)
	S710= IMMU.Hit=>IMMUHitReg.In                               Premise(F305)
	S711= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S707,S710)
	S712= PC.Out=>ICache.IEA                                    Premise(F306)
	S713= ICache.IEA=addr+4                                     Path(S665,S712)
	S714= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S713)
	S715= ICache.Out=>ICacheReg.In                              Premise(F307)
	S716= ICache.Hit=>ICacheHitReg.In                           Premise(F308)
	S717= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S714,S716)
	S718= IMMUHitReg.Out=>CU.IMemHit                            Premise(F309)
	S719= CU.IMemHit=IMMUHit(pid,addr)                          Path(S669,S718)
	S720= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F310)
	S721= CU.ICacheHit=ICacheHit(addr)                          Path(S675,S720)
	S722= IAddrReg.Out=>IMem.RAddr                              Premise(F311)
	S723= IMem.RAddr={pid,addr}                                 Path(S666,S722)
	S724= IMem.Out={31,rT,rA,rB,1040}                           IMem-Read(S723,S637)
	S725= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S723,S637)
	S726= IMem.Out=>IRMux.MemData                               Premise(F312)
	S727= IRMux.MemData={31,rT,rA,rB,1040}                      Path(S724,S726)
	S728= ICacheReg.Out=>IRMux.CacheData                        Premise(F313)
	S729= IRMux.CacheData={31,rT,rA,rB,1040}                    Path(S672,S728)
	S730= IRMux.Out={31,rT,rA,rB,1040}                          IRMux-Select(S727,S729)
	S731= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F314)
	S732= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S669,S731)
	S733= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F315)
	S734= IRMux.CacheSel=ICacheHit(addr)                        Path(S675,S733)
	S735= IRMux.Out=>IR.In                                      Premise(F316)
	S736= IR.In={31,rT,rA,rB,1040}                              Path(S730,S735)
	S737= IMem.MEM8WordOut=>ICache.WData                        Premise(F317)
	S738= ICache.WData=IMemGet8Word({pid,addr})                 Path(S725,S737)
	S739= PC.Out=>ICache.IEA                                    Premise(F318)
	S740= IR.Out0_5=>CU.Op                                      Premise(F319)
	S741= CU.Op=31                                              Path(S678,S740)
	S742= IR.Out11_15=>GPRegs.RReg1                             Premise(F320)
	S743= GPRegs.RReg1=rA                                       Path(S680,S742)
	S744= GPRegs.Rdata1=a                                       GPRegs-Read(S743,S642)
	S745= IR.Out16_20=>GPRegs.RReg2                             Premise(F321)
	S746= GPRegs.RReg2=rB                                       Path(S681,S745)
	S747= GPRegs.Rdata2=b                                       GPRegs-Read(S746,S643)
	S748= IR.Out21_31=>CU.IRFunc                                Premise(F322)
	S749= CU.IRFunc=1040                                        Path(S682,S748)
	S750= CU.Func=alu_subf                                      CU(S741,S749)
	S751= GPRegs.Rdata1=>A.In                                   Premise(F323)
	S752= A.In=a                                                Path(S744,S751)
	S753= GPRegs.Rdata2=>B.In                                   Premise(F324)
	S754= B.In=b                                                Path(S747,S753)
	S755= A.Out=>ALU.A                                          Premise(F325)
	S756= ALU.A=a                                               Path(S683,S755)
	S757= B.Out=>ALU.B                                          Premise(F326)
	S758= ALU.B=b                                               Path(S686,S757)
	S759= CU.Func=>ALU.Func                                     Premise(F327)
	S760= ALU.Func=alu_subf                                     Path(S750,S759)
	S761= ALU.Out=b-a                                           ALU(S756,S758)
	S762= ALU.CMP=Compare0(b-a)                                 ALU(S756,S758)
	S763= ALU.OV=OverFlow(b-a)                                  ALU(S756,S758)
	S764= ALU.CA=Carry(b-a)                                     ALU(S756,S758)
	S765= ALU.Out=>ALUOut.In                                    Premise(F328)
	S766= ALUOut.In=b-a                                         Path(S761,S765)
	S767= ALU.CA=>CAReg.In                                      Premise(F329)
	S768= CAReg.In=Carry(b-a)                                   Path(S764,S767)
	S769= ALU.OV=>OVReg.In                                      Premise(F330)
	S770= OVReg.In=OverFlow(b-a)                                Path(S763,S769)
	S771= XER.SOOut=>ORGate.A                                   Premise(F331)
	S772= ORGate.A=so                                           Path(S698,S771)
	S773= ALU.OV=>ORGate.B                                      Premise(F332)
	S774= ORGate.B=OverFlow(b-a)                                Path(S763,S773)
	S775= ORGate.Out=so|OverFlow(b-a)                           ORGate(S772,S774)
	S776= ORGate.Out=>DR1bit.In                                 Premise(F333)
	S777= DR1bit.In=so|OverFlow(b-a)                            Path(S775,S776)
	S778= IR.Out6_10=>GPRegs.WReg                               Premise(F334)
	S779= GPRegs.WReg=rT                                        Path(S679,S778)
	S780= ALUOut.Out=>GPRegs.WData                              Premise(F335)
	S781= GPRegs.WData=b-a                                      Path(S689,S780)
	S782= DR1bit.Out=>XER.SOIn                                  Premise(F336)
	S783= XER.SOIn=so|OverFlow(b-a)                             Path(S699,S782)
	S784= CAReg.Out=>XER.CAIn                                   Premise(F337)
	S785= XER.CAIn=Carry(b-a)                                   Path(S692,S784)
	S786= OVReg.Out=>XER.OVIn                                   Premise(F338)
	S787= XER.OVIn=OverFlow(b-a)                                Path(S695,S786)
	S788= CtrlPIDReg=0                                          Premise(F339)
	S789= [PIDReg]=pid                                          PIDReg-Hold(S620,S788)
	S790= CtrlIMMU=0                                            Premise(F340)
	S791= CtrlPC=0                                              Premise(F341)
	S792= CtrlPCInc=0                                           Premise(F342)
	S793= PC[CIA]=addr                                          PC-Hold(S624,S792)
	S794= PC[Out]=addr+4                                        PC-Hold(S625,S791,S792)
	S795= CtrlIAddrReg=0                                        Premise(F343)
	S796= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S627,S795)
	S797= CtrlIMMUHitReg=0                                      Premise(F344)
	S798= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S629,S797)
	S799= CtrlICache=0                                          Premise(F345)
	S800= ICache[addr]={31,rT,rA,rB,1040}                       ICache-Hold(S631,S799)
	S801= CtrlICacheReg=0                                       Premise(F346)
	S802= [ICacheReg]={31,rT,rA,rB,1040}                        ICacheReg-Hold(S633,S801)
	S803= CtrlICacheHitReg=0                                    Premise(F347)
	S804= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S635,S803)
	S805= CtrlIMem=0                                            Premise(F348)
	S806= IMem[{pid,addr}]={31,rT,rA,rB,1040}                   IMem-Hold(S637,S805)
	S807= CtrlIRMux=0                                           Premise(F349)
	S808= CtrlIR=0                                              Premise(F350)
	S809= [IR]={31,rT,rA,rB,1040}                               IR-Hold(S640,S808)
	S810= CtrlGPRegs=0                                          Premise(F351)
	S811= GPRegs[rA]=a                                          GPRegs-Hold(S642,S810)
	S812= GPRegs[rB]=b                                          GPRegs-Hold(S643,S810)
	S813= CtrlA=0                                               Premise(F352)
	S814= [A]=a                                                 A-Hold(S645,S813)
	S815= CtrlB=0                                               Premise(F353)
	S816= [B]=b                                                 B-Hold(S647,S815)
	S817= CtrlALUOut=0                                          Premise(F354)
	S818= [ALUOut]=b-a                                          ALUOut-Hold(S649,S817)
	S819= CtrlCAReg=0                                           Premise(F355)
	S820= [CAReg]=Carry(b-a)                                    CAReg-Hold(S651,S819)
	S821= CtrlOVReg=0                                           Premise(F356)
	S822= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S653,S821)
	S823= CtrlXERSO=0                                           Premise(F357)
	S824= XER[SO]=so                                            XER-SO-Hold(S655,S823)
	S825= CtrlXEROV=0                                           Premise(F358)
	S826= CtrlXERCA=0                                           Premise(F359)
	S827= CtrlDR1bit=0                                          Premise(F360)
	S828= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S659,S827)

DMMU2	S829= PIDReg.Out=pid                                        PIDReg-Out(S789)
	S830= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S789)
	S831= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S789)
	S832= PC.CIA=addr                                           PC-Out(S793)
	S833= PC.CIA31_28=addr[31:28]                               PC-Out(S793)
	S834= PC.Out=addr+4                                         PC-Out(S794)
	S835= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S796)
	S836= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S796)
	S837= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S796)
	S838= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S798)
	S839= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S798)
	S840= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S798)
	S841= ICacheReg.Out={31,rT,rA,rB,1040}                      ICacheReg-Out(S802)
	S842= ICacheReg.Out26_31={31,rT,rA,rB,1040}[26:31]          ICacheReg-Out(S802)
	S843= ICacheReg.Out30_31={31,rT,rA,rB,1040}[30:31]          ICacheReg-Out(S802)
	S844= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S804)
	S845= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S804)
	S846= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S804)
	S847= IR.Out0_5=31                                          IR-Out(S809)
	S848= IR.Out6_10=rT                                         IR-Out(S809)
	S849= IR.Out11_15=rA                                        IR-Out(S809)
	S850= IR.Out16_20=rB                                        IR-Out(S809)
	S851= IR.Out21_31=1040                                      IR-Out(S809)
	S852= A.Out=a                                               A-Out(S814)
	S853= A.Out26_31=a[26:31]                                   A-Out(S814)
	S854= A.Out30_31=a[30:31]                                   A-Out(S814)
	S855= B.Out=b                                               B-Out(S816)
	S856= B.Out26_31=b[26:31]                                   B-Out(S816)
	S857= B.Out30_31=b[30:31]                                   B-Out(S816)
	S858= ALUOut.Out=b-a                                        ALUOut-Out(S818)
	S859= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S818)
	S860= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S818)
	S861= CAReg.Out=Carry(b-a)                                  CAReg-Out(S820)
	S862= CAReg.Out26_31=Carry(b-a)[26:31]                      CAReg-Out(S820)
	S863= CAReg.Out30_31=Carry(b-a)[30:31]                      CAReg-Out(S820)
	S864= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S822)
	S865= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S822)
	S866= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S822)
	S867= XER.SOOut=so                                          XER-SO-Out(S824)
	S868= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S828)
	S869= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S828)
	S870= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S828)
	S871= PIDReg.Out=>IMMU.PID                                  Premise(F361)
	S872= IMMU.PID=pid                                          Path(S829,S871)
	S873= PC.Out=>IMMU.IEA                                      Premise(F362)
	S874= IMMU.IEA=addr+4                                       Path(S834,S873)
	S875= IMMU.Addr={pid,addr+4}                                IMMU-Search(S872,S874)
	S876= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S872,S874)
	S877= IMMU.Addr=>IAddrReg.In                                Premise(F363)
	S878= IAddrReg.In={pid,addr+4}                              Path(S875,S877)
	S879= IMMU.Hit=>IMMUHitReg.In                               Premise(F364)
	S880= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S876,S879)
	S881= PC.Out=>ICache.IEA                                    Premise(F365)
	S882= ICache.IEA=addr+4                                     Path(S834,S881)
	S883= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S882)
	S884= ICache.Out=>ICacheReg.In                              Premise(F366)
	S885= ICache.Hit=>ICacheHitReg.In                           Premise(F367)
	S886= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S883,S885)
	S887= IMMUHitReg.Out=>CU.IMemHit                            Premise(F368)
	S888= CU.IMemHit=IMMUHit(pid,addr)                          Path(S838,S887)
	S889= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F369)
	S890= CU.ICacheHit=ICacheHit(addr)                          Path(S844,S889)
	S891= IAddrReg.Out=>IMem.RAddr                              Premise(F370)
	S892= IMem.RAddr={pid,addr}                                 Path(S835,S891)
	S893= IMem.Out={31,rT,rA,rB,1040}                           IMem-Read(S892,S806)
	S894= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S892,S806)
	S895= IMem.Out=>IRMux.MemData                               Premise(F371)
	S896= IRMux.MemData={31,rT,rA,rB,1040}                      Path(S893,S895)
	S897= ICacheReg.Out=>IRMux.CacheData                        Premise(F372)
	S898= IRMux.CacheData={31,rT,rA,rB,1040}                    Path(S841,S897)
	S899= IRMux.Out={31,rT,rA,rB,1040}                          IRMux-Select(S896,S898)
	S900= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F373)
	S901= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S838,S900)
	S902= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F374)
	S903= IRMux.CacheSel=ICacheHit(addr)                        Path(S844,S902)
	S904= IRMux.Out=>IR.In                                      Premise(F375)
	S905= IR.In={31,rT,rA,rB,1040}                              Path(S899,S904)
	S906= IMem.MEM8WordOut=>ICache.WData                        Premise(F376)
	S907= ICache.WData=IMemGet8Word({pid,addr})                 Path(S894,S906)
	S908= PC.Out=>ICache.IEA                                    Premise(F377)
	S909= IR.Out0_5=>CU.Op                                      Premise(F378)
	S910= CU.Op=31                                              Path(S847,S909)
	S911= IR.Out11_15=>GPRegs.RReg1                             Premise(F379)
	S912= GPRegs.RReg1=rA                                       Path(S849,S911)
	S913= GPRegs.Rdata1=a                                       GPRegs-Read(S912,S811)
	S914= IR.Out16_20=>GPRegs.RReg2                             Premise(F380)
	S915= GPRegs.RReg2=rB                                       Path(S850,S914)
	S916= GPRegs.Rdata2=b                                       GPRegs-Read(S915,S812)
	S917= IR.Out21_31=>CU.IRFunc                                Premise(F381)
	S918= CU.IRFunc=1040                                        Path(S851,S917)
	S919= CU.Func=alu_subf                                      CU(S910,S918)
	S920= GPRegs.Rdata1=>A.In                                   Premise(F382)
	S921= A.In=a                                                Path(S913,S920)
	S922= GPRegs.Rdata2=>B.In                                   Premise(F383)
	S923= B.In=b                                                Path(S916,S922)
	S924= A.Out=>ALU.A                                          Premise(F384)
	S925= ALU.A=a                                               Path(S852,S924)
	S926= B.Out=>ALU.B                                          Premise(F385)
	S927= ALU.B=b                                               Path(S855,S926)
	S928= CU.Func=>ALU.Func                                     Premise(F386)
	S929= ALU.Func=alu_subf                                     Path(S919,S928)
	S930= ALU.Out=b-a                                           ALU(S925,S927)
	S931= ALU.CMP=Compare0(b-a)                                 ALU(S925,S927)
	S932= ALU.OV=OverFlow(b-a)                                  ALU(S925,S927)
	S933= ALU.CA=Carry(b-a)                                     ALU(S925,S927)
	S934= ALU.Out=>ALUOut.In                                    Premise(F387)
	S935= ALUOut.In=b-a                                         Path(S930,S934)
	S936= ALU.CA=>CAReg.In                                      Premise(F388)
	S937= CAReg.In=Carry(b-a)                                   Path(S933,S936)
	S938= ALU.OV=>OVReg.In                                      Premise(F389)
	S939= OVReg.In=OverFlow(b-a)                                Path(S932,S938)
	S940= XER.SOOut=>ORGate.A                                   Premise(F390)
	S941= ORGate.A=so                                           Path(S867,S940)
	S942= ALU.OV=>ORGate.B                                      Premise(F391)
	S943= ORGate.B=OverFlow(b-a)                                Path(S932,S942)
	S944= ORGate.Out=so|OverFlow(b-a)                           ORGate(S941,S943)
	S945= ORGate.Out=>DR1bit.In                                 Premise(F392)
	S946= DR1bit.In=so|OverFlow(b-a)                            Path(S944,S945)
	S947= IR.Out6_10=>GPRegs.WReg                               Premise(F393)
	S948= GPRegs.WReg=rT                                        Path(S848,S947)
	S949= ALUOut.Out=>GPRegs.WData                              Premise(F394)
	S950= GPRegs.WData=b-a                                      Path(S858,S949)
	S951= DR1bit.Out=>XER.SOIn                                  Premise(F395)
	S952= XER.SOIn=so|OverFlow(b-a)                             Path(S868,S951)
	S953= CAReg.Out=>XER.CAIn                                   Premise(F396)
	S954= XER.CAIn=Carry(b-a)                                   Path(S861,S953)
	S955= OVReg.Out=>XER.OVIn                                   Premise(F397)
	S956= XER.OVIn=OverFlow(b-a)                                Path(S864,S955)
	S957= CtrlPIDReg=0                                          Premise(F398)
	S958= [PIDReg]=pid                                          PIDReg-Hold(S789,S957)
	S959= CtrlIMMU=0                                            Premise(F399)
	S960= CtrlPC=0                                              Premise(F400)
	S961= CtrlPCInc=0                                           Premise(F401)
	S962= PC[CIA]=addr                                          PC-Hold(S793,S961)
	S963= PC[Out]=addr+4                                        PC-Hold(S794,S960,S961)
	S964= CtrlIAddrReg=0                                        Premise(F402)
	S965= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S796,S964)
	S966= CtrlIMMUHitReg=0                                      Premise(F403)
	S967= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S798,S966)
	S968= CtrlICache=0                                          Premise(F404)
	S969= ICache[addr]={31,rT,rA,rB,1040}                       ICache-Hold(S800,S968)
	S970= CtrlICacheReg=0                                       Premise(F405)
	S971= [ICacheReg]={31,rT,rA,rB,1040}                        ICacheReg-Hold(S802,S970)
	S972= CtrlICacheHitReg=0                                    Premise(F406)
	S973= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S804,S972)
	S974= CtrlIMem=0                                            Premise(F407)
	S975= IMem[{pid,addr}]={31,rT,rA,rB,1040}                   IMem-Hold(S806,S974)
	S976= CtrlIRMux=0                                           Premise(F408)
	S977= CtrlIR=0                                              Premise(F409)
	S978= [IR]={31,rT,rA,rB,1040}                               IR-Hold(S809,S977)
	S979= CtrlGPRegs=0                                          Premise(F410)
	S980= GPRegs[rA]=a                                          GPRegs-Hold(S811,S979)
	S981= GPRegs[rB]=b                                          GPRegs-Hold(S812,S979)
	S982= CtrlA=0                                               Premise(F411)
	S983= [A]=a                                                 A-Hold(S814,S982)
	S984= CtrlB=0                                               Premise(F412)
	S985= [B]=b                                                 B-Hold(S816,S984)
	S986= CtrlALUOut=0                                          Premise(F413)
	S987= [ALUOut]=b-a                                          ALUOut-Hold(S818,S986)
	S988= CtrlCAReg=0                                           Premise(F414)
	S989= [CAReg]=Carry(b-a)                                    CAReg-Hold(S820,S988)
	S990= CtrlOVReg=0                                           Premise(F415)
	S991= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S822,S990)
	S992= CtrlXERSO=0                                           Premise(F416)
	S993= XER[SO]=so                                            XER-SO-Hold(S824,S992)
	S994= CtrlXEROV=0                                           Premise(F417)
	S995= CtrlXERCA=0                                           Premise(F418)
	S996= CtrlDR1bit=0                                          Premise(F419)
	S997= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S828,S996)

WB	S998= PIDReg.Out=pid                                        PIDReg-Out(S958)
	S999= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S958)
	S1000= PIDReg.Out30_31=pid[30:31]                           PIDReg-Out(S958)
	S1001= PC.CIA=addr                                          PC-Out(S962)
	S1002= PC.CIA31_28=addr[31:28]                              PC-Out(S962)
	S1003= PC.Out=addr+4                                        PC-Out(S963)
	S1004= IAddrReg.Out={pid,addr}                              IAddrReg-Out(S965)
	S1005= IAddrReg.Out26_31={pid,addr}[26:31]                  IAddrReg-Out(S965)
	S1006= IAddrReg.Out30_31={pid,addr}[30:31]                  IAddrReg-Out(S965)
	S1007= IMMUHitReg.Out=IMMUHit(pid,addr)                     IMMUHitReg-Out(S967)
	S1008= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S967)
	S1009= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S967)
	S1010= ICacheReg.Out={31,rT,rA,rB,1040}                     ICacheReg-Out(S971)
	S1011= ICacheReg.Out26_31={31,rT,rA,rB,1040}[26:31]         ICacheReg-Out(S971)
	S1012= ICacheReg.Out30_31={31,rT,rA,rB,1040}[30:31]         ICacheReg-Out(S971)
	S1013= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S973)
	S1014= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S973)
	S1015= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S973)
	S1016= IR.Out0_5=31                                         IR-Out(S978)
	S1017= IR.Out6_10=rT                                        IR-Out(S978)
	S1018= IR.Out11_15=rA                                       IR-Out(S978)
	S1019= IR.Out16_20=rB                                       IR-Out(S978)
	S1020= IR.Out21_31=1040                                     IR-Out(S978)
	S1021= A.Out=a                                              A-Out(S983)
	S1022= A.Out26_31=a[26:31]                                  A-Out(S983)
	S1023= A.Out30_31=a[30:31]                                  A-Out(S983)
	S1024= B.Out=b                                              B-Out(S985)
	S1025= B.Out26_31=b[26:31]                                  B-Out(S985)
	S1026= B.Out30_31=b[30:31]                                  B-Out(S985)
	S1027= ALUOut.Out=b-a                                       ALUOut-Out(S987)
	S1028= ALUOut.Out26_31=b-a[26:31]                           ALUOut-Out(S987)
	S1029= ALUOut.Out30_31=b-a[30:31]                           ALUOut-Out(S987)
	S1030= CAReg.Out=Carry(b-a)                                 CAReg-Out(S989)
	S1031= CAReg.Out26_31=Carry(b-a)[26:31]                     CAReg-Out(S989)
	S1032= CAReg.Out30_31=Carry(b-a)[30:31]                     CAReg-Out(S989)
	S1033= OVReg.Out=OverFlow(b-a)                              OVReg-Out(S991)
	S1034= OVReg.Out26_31=OverFlow(b-a)[26:31]                  OVReg-Out(S991)
	S1035= OVReg.Out30_31=OverFlow(b-a)[30:31]                  OVReg-Out(S991)
	S1036= XER.SOOut=so                                         XER-SO-Out(S993)
	S1037= DR1bit.Out=so|OverFlow(b-a)                          DR1bit-Out(S997)
	S1038= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]              DR1bit-Out(S997)
	S1039= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]              DR1bit-Out(S997)
	S1040= PIDReg.Out=>IMMU.PID                                 Premise(F420)
	S1041= IMMU.PID=pid                                         Path(S998,S1040)
	S1042= PC.Out=>IMMU.IEA                                     Premise(F421)
	S1043= IMMU.IEA=addr+4                                      Path(S1003,S1042)
	S1044= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1041,S1043)
	S1045= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1041,S1043)
	S1046= IMMU.Addr=>IAddrReg.In                               Premise(F422)
	S1047= IAddrReg.In={pid,addr+4}                             Path(S1044,S1046)
	S1048= IMMU.Hit=>IMMUHitReg.In                              Premise(F423)
	S1049= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1045,S1048)
	S1050= PC.Out=>ICache.IEA                                   Premise(F424)
	S1051= ICache.IEA=addr+4                                    Path(S1003,S1050)
	S1052= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1051)
	S1053= ICache.Out=>ICacheReg.In                             Premise(F425)
	S1054= ICache.Hit=>ICacheHitReg.In                          Premise(F426)
	S1055= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1052,S1054)
	S1056= IMMUHitReg.Out=>CU.IMemHit                           Premise(F427)
	S1057= CU.IMemHit=IMMUHit(pid,addr)                         Path(S1007,S1056)
	S1058= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F428)
	S1059= CU.ICacheHit=ICacheHit(addr)                         Path(S1013,S1058)
	S1060= IAddrReg.Out=>IMem.RAddr                             Premise(F429)
	S1061= IMem.RAddr={pid,addr}                                Path(S1004,S1060)
	S1062= IMem.Out={31,rT,rA,rB,1040}                          IMem-Read(S1061,S975)
	S1063= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1061,S975)
	S1064= IMem.Out=>IRMux.MemData                              Premise(F430)
	S1065= IRMux.MemData={31,rT,rA,rB,1040}                     Path(S1062,S1064)
	S1066= ICacheReg.Out=>IRMux.CacheData                       Premise(F431)
	S1067= IRMux.CacheData={31,rT,rA,rB,1040}                   Path(S1010,S1066)
	S1068= IRMux.Out={31,rT,rA,rB,1040}                         IRMux-Select(S1065,S1067)
	S1069= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F432)
	S1070= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S1007,S1069)
	S1071= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F433)
	S1072= IRMux.CacheSel=ICacheHit(addr)                       Path(S1013,S1071)
	S1073= IRMux.Out=>IR.In                                     Premise(F434)
	S1074= IR.In={31,rT,rA,rB,1040}                             Path(S1068,S1073)
	S1075= IMem.MEM8WordOut=>ICache.WData                       Premise(F435)
	S1076= ICache.WData=IMemGet8Word({pid,addr})                Path(S1063,S1075)
	S1077= PC.Out=>ICache.IEA                                   Premise(F436)
	S1078= IR.Out0_5=>CU.Op                                     Premise(F437)
	S1079= CU.Op=31                                             Path(S1016,S1078)
	S1080= IR.Out11_15=>GPRegs.RReg1                            Premise(F438)
	S1081= GPRegs.RReg1=rA                                      Path(S1018,S1080)
	S1082= GPRegs.Rdata1=a                                      GPRegs-Read(S1081,S980)
	S1083= IR.Out16_20=>GPRegs.RReg2                            Premise(F439)
	S1084= GPRegs.RReg2=rB                                      Path(S1019,S1083)
	S1085= GPRegs.Rdata2=b                                      GPRegs-Read(S1084,S981)
	S1086= IR.Out21_31=>CU.IRFunc                               Premise(F440)
	S1087= CU.IRFunc=1040                                       Path(S1020,S1086)
	S1088= CU.Func=alu_subf                                     CU(S1079,S1087)
	S1089= GPRegs.Rdata1=>A.In                                  Premise(F441)
	S1090= A.In=a                                               Path(S1082,S1089)
	S1091= GPRegs.Rdata2=>B.In                                  Premise(F442)
	S1092= B.In=b                                               Path(S1085,S1091)
	S1093= A.Out=>ALU.A                                         Premise(F443)
	S1094= ALU.A=a                                              Path(S1021,S1093)
	S1095= B.Out=>ALU.B                                         Premise(F444)
	S1096= ALU.B=b                                              Path(S1024,S1095)
	S1097= CU.Func=>ALU.Func                                    Premise(F445)
	S1098= ALU.Func=alu_subf                                    Path(S1088,S1097)
	S1099= ALU.Out=b-a                                          ALU(S1094,S1096)
	S1100= ALU.CMP=Compare0(b-a)                                ALU(S1094,S1096)
	S1101= ALU.OV=OverFlow(b-a)                                 ALU(S1094,S1096)
	S1102= ALU.CA=Carry(b-a)                                    ALU(S1094,S1096)
	S1103= ALU.Out=>ALUOut.In                                   Premise(F446)
	S1104= ALUOut.In=b-a                                        Path(S1099,S1103)
	S1105= ALU.CA=>CAReg.In                                     Premise(F447)
	S1106= CAReg.In=Carry(b-a)                                  Path(S1102,S1105)
	S1107= ALU.OV=>OVReg.In                                     Premise(F448)
	S1108= OVReg.In=OverFlow(b-a)                               Path(S1101,S1107)
	S1109= XER.SOOut=>ORGate.A                                  Premise(F449)
	S1110= ORGate.A=so                                          Path(S1036,S1109)
	S1111= ALU.OV=>ORGate.B                                     Premise(F450)
	S1112= ORGate.B=OverFlow(b-a)                               Path(S1101,S1111)
	S1113= ORGate.Out=so|OverFlow(b-a)                          ORGate(S1110,S1112)
	S1114= ORGate.Out=>DR1bit.In                                Premise(F451)
	S1115= DR1bit.In=so|OverFlow(b-a)                           Path(S1113,S1114)
	S1116= IR.Out6_10=>GPRegs.WReg                              Premise(F452)
	S1117= GPRegs.WReg=rT                                       Path(S1017,S1116)
	S1118= ALUOut.Out=>GPRegs.WData                             Premise(F453)
	S1119= GPRegs.WData=b-a                                     Path(S1027,S1118)
	S1120= DR1bit.Out=>XER.SOIn                                 Premise(F454)
	S1121= XER.SOIn=so|OverFlow(b-a)                            Path(S1037,S1120)
	S1122= CAReg.Out=>XER.CAIn                                  Premise(F455)
	S1123= XER.CAIn=Carry(b-a)                                  Path(S1030,S1122)
	S1124= OVReg.Out=>XER.OVIn                                  Premise(F456)
	S1125= XER.OVIn=OverFlow(b-a)                               Path(S1033,S1124)
	S1126= CtrlPIDReg=0                                         Premise(F457)
	S1127= [PIDReg]=pid                                         PIDReg-Hold(S958,S1126)
	S1128= CtrlIMMU=0                                           Premise(F458)
	S1129= CtrlPC=0                                             Premise(F459)
	S1130= CtrlPCInc=0                                          Premise(F460)
	S1131= PC[CIA]=addr                                         PC-Hold(S962,S1130)
	S1132= PC[Out]=addr+4                                       PC-Hold(S963,S1129,S1130)
	S1133= CtrlIAddrReg=0                                       Premise(F461)
	S1134= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S965,S1133)
	S1135= CtrlIMMUHitReg=0                                     Premise(F462)
	S1136= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S967,S1135)
	S1137= CtrlICache=0                                         Premise(F463)
	S1138= ICache[addr]={31,rT,rA,rB,1040}                      ICache-Hold(S969,S1137)
	S1139= CtrlICacheReg=0                                      Premise(F464)
	S1140= [ICacheReg]={31,rT,rA,rB,1040}                       ICacheReg-Hold(S971,S1139)
	S1141= CtrlICacheHitReg=0                                   Premise(F465)
	S1142= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S973,S1141)
	S1143= CtrlIMem=0                                           Premise(F466)
	S1144= IMem[{pid,addr}]={31,rT,rA,rB,1040}                  IMem-Hold(S975,S1143)
	S1145= CtrlIRMux=0                                          Premise(F467)
	S1146= CtrlIR=0                                             Premise(F468)
	S1147= [IR]={31,rT,rA,rB,1040}                              IR-Hold(S978,S1146)
	S1148= CtrlGPRegs=1                                         Premise(F469)
	S1149= GPRegs[rT]=b-a                                       GPRegs-Write(S1117,S1119,S1148)
	S1150= CtrlA=0                                              Premise(F470)
	S1151= [A]=a                                                A-Hold(S983,S1150)
	S1152= CtrlB=0                                              Premise(F471)
	S1153= [B]=b                                                B-Hold(S985,S1152)
	S1154= CtrlALUOut=0                                         Premise(F472)
	S1155= [ALUOut]=b-a                                         ALUOut-Hold(S987,S1154)
	S1156= CtrlCAReg=0                                          Premise(F473)
	S1157= [CAReg]=Carry(b-a)                                   CAReg-Hold(S989,S1156)
	S1158= CtrlOVReg=0                                          Premise(F474)
	S1159= [OVReg]=OverFlow(b-a)                                OVReg-Hold(S991,S1158)
	S1160= CtrlXERSO=1                                          Premise(F475)
	S1161= XER[SO]=so|OverFlow(b-a)                             XER-SO-Write(S1121,S1160)
	S1162= CtrlXEROV=1                                          Premise(F476)
	S1163= XER[OV]=OverFlow(b-a)                                XER-OV-Write(S1125,S1162)
	S1164= CtrlXERCA=1                                          Premise(F477)
	S1165= XER[CA]=Carry(b-a)                                   XER-CA-Write(S1123,S1164)
	S1166= CtrlDR1bit=0                                         Premise(F478)
	S1167= [DR1bit]=so|OverFlow(b-a)                            DR1bit-Hold(S997,S1166)

POST	S1127= [PIDReg]=pid                                         PIDReg-Hold(S958,S1126)
	S1131= PC[CIA]=addr                                         PC-Hold(S962,S1130)
	S1132= PC[Out]=addr+4                                       PC-Hold(S963,S1129,S1130)
	S1134= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S965,S1133)
	S1136= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S967,S1135)
	S1138= ICache[addr]={31,rT,rA,rB,1040}                      ICache-Hold(S969,S1137)
	S1140= [ICacheReg]={31,rT,rA,rB,1040}                       ICacheReg-Hold(S971,S1139)
	S1142= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S973,S1141)
	S1144= IMem[{pid,addr}]={31,rT,rA,rB,1040}                  IMem-Hold(S975,S1143)
	S1147= [IR]={31,rT,rA,rB,1040}                              IR-Hold(S978,S1146)
	S1149= GPRegs[rT]=b-a                                       GPRegs-Write(S1117,S1119,S1148)
	S1151= [A]=a                                                A-Hold(S983,S1150)
	S1153= [B]=b                                                B-Hold(S985,S1152)
	S1155= [ALUOut]=b-a                                         ALUOut-Hold(S987,S1154)
	S1157= [CAReg]=Carry(b-a)                                   CAReg-Hold(S989,S1156)
	S1159= [OVReg]=OverFlow(b-a)                                OVReg-Hold(S991,S1158)
	S1161= XER[SO]=so|OverFlow(b-a)                             XER-SO-Write(S1121,S1160)
	S1163= XER[OV]=OverFlow(b-a)                                XER-OV-Write(S1125,S1162)
	S1165= XER[CA]=Carry(b-a)                                   XER-CA-Write(S1123,S1164)
	S1167= [DR1bit]=so|OverFlow(b-a)                            DR1bit-Hold(S997,S1166)

