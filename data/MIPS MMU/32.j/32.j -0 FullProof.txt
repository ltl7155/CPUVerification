
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={2,imm}                                Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= CP0.ASID=>IMMU.PID                                      Premise(F3)
	S6= IMMU.PID=pid                                            Path(S3,S5)
	S7= PC.Out=>IMMU.IEA                                        Premise(F4)
	S8= IMMU.IEA=addr                                           Path(S4,S7)
	S9= IMMU.Addr={pid,addr}                                    IMMU-Search(S6,S8)
	S10= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S6,S8)
	S11= IMMU.Addr=>IAddrReg.In                                 Premise(F5)
	S12= IAddrReg.In={pid,addr}                                 Path(S9,S11)
	S13= IMMU.Hit=>CU.IMMUHit                                   Premise(F6)
	S14= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S10,S13)
	S15= PC.Out=>ICache.IEA                                     Premise(F7)
	S16= ICache.IEA=addr                                        Path(S4,S15)
	S17= ICache.Hit=ICacheHit(addr)                             ICache-Search(S16)
	S18= ICache.Out=>IR.In                                      Premise(F8)
	S19= ICache.Out=>ICacheReg.In                               Premise(F9)
	S20= ICache.Hit=>CU.ICacheHit                               Premise(F10)
	S21= CU.ICacheHit=ICacheHit(addr)                           Path(S17,S20)
	S22= CtrlASIDIn=0                                           Premise(F11)
	S23= CtrlCP0=0                                              Premise(F12)
	S24= CP0[ASID]=pid                                          CP0-Hold(S0,S23)
	S25= CtrlEPCIn=0                                            Premise(F13)
	S26= CtrlExCodeIn=0                                         Premise(F14)
	S27= CtrlIMMU=0                                             Premise(F15)
	S28= CtrlPC=0                                               Premise(F16)
	S29= CtrlPCInc=0                                            Premise(F17)
	S30= PC[Out]=addr                                           PC-Hold(S1,S28,S29)
	S31= CtrlIAddrReg=1                                         Premise(F18)
	S32= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S31)
	S33= CtrlICache=0                                           Premise(F19)
	S34= CtrlIR=0                                               Premise(F20)
	S35= CtrlICacheReg=1                                        Premise(F21)
	S36= CtrlIMem=0                                             Premise(F22)
	S37= IMem[{pid,addr}]={2,imm}                               IMem-Hold(S2,S36)
	S38= CtrlIRMux=0                                            Premise(F23)

IF(IMMU)	S39= CP0.ASID=pid                                           CP0-Read-ASID(S24)
	S40= PC.Out=addr                                            PC-Out(S30)
	S41= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S32)
	S42= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S32)
	S43= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S32)
	S44= CU.IMMUHit=>CU.IMMUHit                                 Premise(F24)
	S45= CU.ICacheHit=>CU.ICacheHit                             Premise(F25)
	S46= IAddrReg.Out=>IMem.RAddr                               Premise(F26)
	S47= IMem.RAddr={pid,addr}                                  Path(S41,S46)
	S48= IMem.Out={2,imm}                                       IMem-Read(S47,S37)
	S49= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S47,S37)
	S50= IMem.Out=>IRMux.MemData                                Premise(F27)
	S51= IRMux.MemData={2,imm}                                  Path(S48,S50)
	S52= IRMux.Out={2,imm}                                      IRMux-Select2(S51)
	S53= ICacheReg.Out=>IRMux.CacheData                         Premise(F28)
	S54= CU.IMMUHit=>IRMux.MemSel                               Premise(F29)
	S55= CU.ICacheHit=>IRMux.CacheSel                           Premise(F30)
	S56= IRMux.Out=>IR.In                                       Premise(F31)
	S57= IR.In={2,imm}                                          Path(S52,S56)
	S58= IMem.MEM8WordOut=>ICache.WData                         Premise(F32)
	S59= ICache.WData=IMemGet8Word({pid,addr})                  Path(S49,S58)
	S60= PC.Out=>ICache.IEA                                     Premise(F33)
	S61= ICache.IEA=addr                                        Path(S40,S60)
	S62= ICache.Hit=ICacheHit(addr)                             ICache-Search(S61)
	S63= CtrlASIDIn=0                                           Premise(F34)
	S64= CtrlCP0=0                                              Premise(F35)
	S65= CP0[ASID]=pid                                          CP0-Hold(S24,S64)
	S66= CtrlEPCIn=0                                            Premise(F36)
	S67= CtrlExCodeIn=0                                         Premise(F37)
	S68= CtrlIMMU=0                                             Premise(F38)
	S69= CtrlPC=0                                               Premise(F39)
	S70= CtrlPCInc=1                                            Premise(F40)
	S71= PC[Out]=addr+4                                         PC-Inc(S30,S69,S70)
	S72= PC[CIA]=addr                                           PC-Inc(S30,S69,S70)
	S73= CtrlIAddrReg=0                                         Premise(F41)
	S74= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S32,S73)
	S75= CtrlICache=1                                           Premise(F42)
	S76= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S61,S59,S75)
	S77= CtrlIR=1                                               Premise(F43)
	S78= [IR]={2,imm}                                           IR-Write(S57,S77)
	S79= CtrlICacheReg=0                                        Premise(F44)
	S80= CtrlIMem=0                                             Premise(F45)
	S81= IMem[{pid,addr}]={2,imm}                               IMem-Hold(S37,S80)
	S82= CtrlIRMux=0                                            Premise(F46)

ID	S83= CP0.ASID=pid                                           CP0-Read-ASID(S65)
	S84= PC.Out=addr+4                                          PC-Out(S71)
	S85= PC.CIA=addr                                            PC-Out(S72)
	S86= PC.CIA31_28=addr[31:28]                                PC-Out(S72)
	S87= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S74)
	S88= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S74)
	S89= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S74)
	S90= IR.Out={2,imm}                                         IR-Out(S78)
	S91= IR.Out31_26=2                                          IR-Out(S78)
	S92= IR.Out25_0=imm                                         IR-Out(S78)
	S93= IR.Out31_26=>CU.Op                                     Premise(F47)
	S94= CU.Op=2                                                Path(S91,S93)
	S95= PC.CIA31_28=>ADDREXT.PCpart                            Premise(F48)
	S96= ADDREXT.PCpart=addr[31:28]                             Path(S86,S95)
	S97= IR.Out25_0=>ADDREXT.In                                 Premise(F49)
	S98= ADDREXT.In=imm                                         Path(S92,S97)
	S99= ADDREXT.Out={addr[31:28],imm,2'b0}                     ADDREXT-EXT(S96,S98)
	S100= ADDREXT.Out=>PC.In                                    Premise(F50)
	S101= PC.In={addr[31:28],imm,2'b0}                          Path(S99,S100)
	S102= CtrlASIDIn=0                                          Premise(F51)
	S103= CtrlCP0=0                                             Premise(F52)
	S104= CP0[ASID]=pid                                         CP0-Hold(S65,S103)
	S105= CtrlEPCIn=0                                           Premise(F53)
	S106= CtrlExCodeIn=0                                        Premise(F54)
	S107= CtrlIMMU=0                                            Premise(F55)
	S108= CtrlPC=1                                              Premise(F56)
	S109= CtrlPCInc=0                                           Premise(F57)
	S110= PC[CIA]=addr                                          PC-Hold(S72,S109)
	S111= PC[Out]={addr[31:28],imm,2'b0}                        PC-Write(S101,S108,S109)
	S112= CtrlIAddrReg=0                                        Premise(F58)
	S113= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S74,S112)
	S114= CtrlICache=0                                          Premise(F59)
	S115= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S76,S114)
	S116= CtrlIR=0                                              Premise(F60)
	S117= [IR]={2,imm}                                          IR-Hold(S78,S116)
	S118= CtrlICacheReg=0                                       Premise(F61)
	S119= CtrlIMem=0                                            Premise(F62)
	S120= IMem[{pid,addr}]={2,imm}                              IMem-Hold(S81,S119)
	S121= CtrlIRMux=0                                           Premise(F63)

EX	S122= CP0.ASID=pid                                          CP0-Read-ASID(S104)
	S123= PC.CIA=addr                                           PC-Out(S110)
	S124= PC.CIA31_28=addr[31:28]                               PC-Out(S110)
	S125= PC.Out={addr[31:28],imm,2'b0}                         PC-Out(S111)
	S126= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S113)
	S127= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S113)
	S128= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S113)
	S129= IR.Out={2,imm}                                        IR-Out(S117)
	S130= IR.Out31_26=2                                         IR-Out(S117)
	S131= IR.Out25_0=imm                                        IR-Out(S117)
	S132= CtrlASIDIn=0                                          Premise(F64)
	S133= CtrlCP0=0                                             Premise(F65)
	S134= CP0[ASID]=pid                                         CP0-Hold(S104,S133)
	S135= CtrlEPCIn=0                                           Premise(F66)
	S136= CtrlExCodeIn=0                                        Premise(F67)
	S137= CtrlIMMU=0                                            Premise(F68)
	S138= CtrlPC=0                                              Premise(F69)
	S139= CtrlPCInc=0                                           Premise(F70)
	S140= PC[CIA]=addr                                          PC-Hold(S110,S139)
	S141= PC[Out]={addr[31:28],imm,2'b0}                        PC-Hold(S111,S138,S139)
	S142= CtrlIAddrReg=0                                        Premise(F71)
	S143= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S113,S142)
	S144= CtrlICache=0                                          Premise(F72)
	S145= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S115,S144)
	S146= CtrlIR=0                                              Premise(F73)
	S147= [IR]={2,imm}                                          IR-Hold(S117,S146)
	S148= CtrlICacheReg=0                                       Premise(F74)
	S149= CtrlIMem=0                                            Premise(F75)
	S150= IMem[{pid,addr}]={2,imm}                              IMem-Hold(S120,S149)
	S151= CtrlIRMux=0                                           Premise(F76)

MEM	S152= CP0.ASID=pid                                          CP0-Read-ASID(S134)
	S153= PC.CIA=addr                                           PC-Out(S140)
	S154= PC.CIA31_28=addr[31:28]                               PC-Out(S140)
	S155= PC.Out={addr[31:28],imm,2'b0}                         PC-Out(S141)
	S156= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S143)
	S157= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S143)
	S158= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S143)
	S159= IR.Out={2,imm}                                        IR-Out(S147)
	S160= IR.Out31_26=2                                         IR-Out(S147)
	S161= IR.Out25_0=imm                                        IR-Out(S147)
	S162= CtrlASIDIn=0                                          Premise(F77)
	S163= CtrlCP0=0                                             Premise(F78)
	S164= CP0[ASID]=pid                                         CP0-Hold(S134,S163)
	S165= CtrlEPCIn=0                                           Premise(F79)
	S166= CtrlExCodeIn=0                                        Premise(F80)
	S167= CtrlIMMU=0                                            Premise(F81)
	S168= CtrlPC=0                                              Premise(F82)
	S169= CtrlPCInc=0                                           Premise(F83)
	S170= PC[CIA]=addr                                          PC-Hold(S140,S169)
	S171= PC[Out]={addr[31:28],imm,2'b0}                        PC-Hold(S141,S168,S169)
	S172= CtrlIAddrReg=0                                        Premise(F84)
	S173= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S143,S172)
	S174= CtrlICache=0                                          Premise(F85)
	S175= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S145,S174)
	S176= CtrlIR=0                                              Premise(F86)
	S177= [IR]={2,imm}                                          IR-Hold(S147,S176)
	S178= CtrlICacheReg=0                                       Premise(F87)
	S179= CtrlIMem=0                                            Premise(F88)
	S180= IMem[{pid,addr}]={2,imm}                              IMem-Hold(S150,S179)
	S181= CtrlIRMux=0                                           Premise(F89)

WB	S182= CP0.ASID=pid                                          CP0-Read-ASID(S164)
	S183= PC.CIA=addr                                           PC-Out(S170)
	S184= PC.CIA31_28=addr[31:28]                               PC-Out(S170)
	S185= PC.Out={addr[31:28],imm,2'b0}                         PC-Out(S171)
	S186= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S173)
	S187= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S173)
	S188= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S173)
	S189= IR.Out={2,imm}                                        IR-Out(S177)
	S190= IR.Out31_26=2                                         IR-Out(S177)
	S191= IR.Out25_0=imm                                        IR-Out(S177)
	S192= CtrlASIDIn=0                                          Premise(F116)
	S193= CtrlCP0=0                                             Premise(F117)
	S194= CP0[ASID]=pid                                         CP0-Hold(S164,S193)
	S195= CtrlEPCIn=0                                           Premise(F118)
	S196= CtrlExCodeIn=0                                        Premise(F119)
	S197= CtrlIMMU=0                                            Premise(F120)
	S198= CtrlPC=0                                              Premise(F121)
	S199= CtrlPCInc=0                                           Premise(F122)
	S200= PC[CIA]=addr                                          PC-Hold(S170,S199)
	S201= PC[Out]={addr[31:28],imm,2'b0}                        PC-Hold(S171,S198,S199)
	S202= CtrlIAddrReg=0                                        Premise(F123)
	S203= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S173,S202)
	S204= CtrlICache=0                                          Premise(F124)
	S205= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S175,S204)
	S206= CtrlIR=0                                              Premise(F125)
	S207= [IR]={2,imm}                                          IR-Hold(S177,S206)
	S208= CtrlICacheReg=0                                       Premise(F126)
	S209= CtrlIMem=0                                            Premise(F127)
	S210= IMem[{pid,addr}]={2,imm}                              IMem-Hold(S180,S209)
	S211= CtrlIRMux=0                                           Premise(F128)

POST	S194= CP0[ASID]=pid                                         CP0-Hold(S164,S193)
	S200= PC[CIA]=addr                                          PC-Hold(S170,S199)
	S201= PC[Out]={addr[31:28],imm,2'b0}                        PC-Hold(S171,S198,S199)
	S203= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S173,S202)
	S205= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S175,S204)
	S207= [IR]={2,imm}                                          IR-Hold(S177,S206)
	S210= IMem[{pid,addr}]={2,imm}                              IMem-Hold(S180,S209)

