
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                       Premise(F2)
	S3= GPR[rT]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= CP0.ASID=>IMMU.PID                                      Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S7,S9)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S13= IAddrReg.In={pid,addr}                                 Path(S10,S12)
	S14= IMMU.Hit=>CU.IMMUHit                                   Premise(F7)
	S15= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S11,S14)
	S16= PC.Out=>ICache.IEA                                     Premise(F8)
	S17= ICache.IEA=addr                                        Path(S5,S16)
	S18= ICache.Hit=ICacheHit(addr)                             ICache-Search(S17)
	S19= ICache.Out=>IR.In                                      Premise(F9)
	S20= ICache.Out=>ICacheReg.In                               Premise(F10)
	S21= ICache.Hit=>CU.ICacheHit                               Premise(F11)
	S22= CU.ICacheHit=ICacheHit(addr)                           Path(S18,S21)
	S23= CtrlASIDIn=0                                           Premise(F12)
	S24= CtrlCP0=0                                              Premise(F13)
	S25= CP0[ASID]=pid                                          CP0-Hold(S0,S24)
	S26= CtrlEPCIn=0                                            Premise(F14)
	S27= CtrlExCodeIn=0                                         Premise(F15)
	S28= CtrlIMMU=0                                             Premise(F16)
	S29= CtrlPC=0                                               Premise(F17)
	S30= CtrlPCInc=0                                            Premise(F18)
	S31= PC[Out]=addr                                           PC-Hold(S1,S29,S30)
	S32= CtrlIAddrReg=1                                         Premise(F19)
	S33= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S32)
	S34= CtrlICache=0                                           Premise(F20)
	S35= CtrlIR=0                                               Premise(F21)
	S36= CtrlICacheReg=1                                        Premise(F22)
	S37= CtrlIMem=0                                             Premise(F23)
	S38= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                      IMem-Hold(S2,S37)
	S39= CtrlIRMux=0                                            Premise(F24)
	S40= CtrlGPR=0                                              Premise(F25)
	S41= GPR[rT]=a                                              GPR-Hold(S3,S40)
	S42= CtrlB=0                                                Premise(F26)
	S43= CtrlALUOut=0                                           Premise(F27)

IF(IMMU)	S44= CP0.ASID=pid                                           CP0-Read-ASID(S25)
	S45= PC.Out=addr                                            PC-Out(S31)
	S46= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S33)
	S47= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S33)
	S48= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S33)
	S49= CU.IMMUHit=>CU.IMMUHit                                 Premise(F28)
	S50= CU.ICacheHit=>CU.ICacheHit                             Premise(F29)
	S51= IAddrReg.Out=>IMem.RAddr                               Premise(F30)
	S52= IMem.RAddr={pid,addr}                                  Path(S46,S51)
	S53= IMem.Out={0,0,rT,rD,sa,3}                              IMem-Read(S52,S38)
	S54= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S52,S38)
	S55= IMem.Out=>IRMux.MemData                                Premise(F31)
	S56= IRMux.MemData={0,0,rT,rD,sa,3}                         Path(S53,S55)
	S57= IRMux.Out={0,0,rT,rD,sa,3}                             IRMux-Select2(S56)
	S58= ICacheReg.Out=>IRMux.CacheData                         Premise(F32)
	S59= CU.IMMUHit=>IRMux.MemSel                               Premise(F33)
	S60= CU.ICacheHit=>IRMux.CacheSel                           Premise(F34)
	S61= IRMux.Out=>IR.In                                       Premise(F35)
	S62= IR.In={0,0,rT,rD,sa,3}                                 Path(S57,S61)
	S63= IMem.MEM8WordOut=>ICache.WData                         Premise(F36)
	S64= ICache.WData=IMemGet8Word({pid,addr})                  Path(S54,S63)
	S65= PC.Out=>ICache.IEA                                     Premise(F37)
	S66= ICache.IEA=addr                                        Path(S45,S65)
	S67= ICache.Hit=ICacheHit(addr)                             ICache-Search(S66)
	S68= CtrlASIDIn=0                                           Premise(F38)
	S69= CtrlCP0=0                                              Premise(F39)
	S70= CP0[ASID]=pid                                          CP0-Hold(S25,S69)
	S71= CtrlEPCIn=0                                            Premise(F40)
	S72= CtrlExCodeIn=0                                         Premise(F41)
	S73= CtrlIMMU=0                                             Premise(F42)
	S74= CtrlPC=0                                               Premise(F43)
	S75= CtrlPCInc=1                                            Premise(F44)
	S76= PC[Out]=addr+4                                         PC-Inc(S31,S74,S75)
	S77= PC[CIA]=addr                                           PC-Inc(S31,S74,S75)
	S78= CtrlIAddrReg=0                                         Premise(F45)
	S79= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S33,S78)
	S80= CtrlICache=1                                           Premise(F46)
	S81= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S66,S64,S80)
	S82= CtrlIR=1                                               Premise(F47)
	S83= [IR]={0,0,rT,rD,sa,3}                                  IR-Write(S62,S82)
	S84= CtrlICacheReg=0                                        Premise(F48)
	S85= CtrlIMem=0                                             Premise(F49)
	S86= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                      IMem-Hold(S38,S85)
	S87= CtrlIRMux=0                                            Premise(F50)
	S88= CtrlGPR=0                                              Premise(F51)
	S89= GPR[rT]=a                                              GPR-Hold(S41,S88)
	S90= CtrlB=0                                                Premise(F52)
	S91= CtrlALUOut=0                                           Premise(F53)

ID	S92= CP0.ASID=pid                                           CP0-Read-ASID(S70)
	S93= PC.Out=addr+4                                          PC-Out(S76)
	S94= PC.CIA=addr                                            PC-Out(S77)
	S95= PC.CIA31_28=addr[31:28]                                PC-Out(S77)
	S96= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S79)
	S97= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S79)
	S98= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S79)
	S99= IR.Out={0,0,rT,rD,sa,3}                                IR-Out(S83)
	S100= IR.Out31_26=0                                         IR-Out(S83)
	S101= IR.Out25_21=0                                         IR-Out(S83)
	S102= IR.Out20_16=rT                                        IR-Out(S83)
	S103= IR.Out15_11=rD                                        IR-Out(S83)
	S104= IR.Out10_6=sa                                         IR-Out(S83)
	S105= IR.Out5_0=3                                           IR-Out(S83)
	S106= IR.Out31_26=>CU.Op                                    Premise(F54)
	S107= CU.Op=0                                               Path(S100,S106)
	S108= IR.Out20_16=>GPR.RReg2                                Premise(F55)
	S109= GPR.RReg2=rT                                          Path(S102,S108)
	S110= GPR.Rdata2=a                                          GPR-Read(S109,S89)
	S111= IR.Out5_0=>CU.IRFunc                                  Premise(F56)
	S112= CU.IRFunc=3                                           Path(S105,S111)
	S113= GPR.Rdata2=>B.In                                      Premise(F57)
	S114= B.In=a                                                Path(S110,S113)
	S115= CtrlASIDIn=0                                          Premise(F58)
	S116= CtrlCP0=0                                             Premise(F59)
	S117= CP0[ASID]=pid                                         CP0-Hold(S70,S116)
	S118= CtrlEPCIn=0                                           Premise(F60)
	S119= CtrlExCodeIn=0                                        Premise(F61)
	S120= CtrlIMMU=0                                            Premise(F62)
	S121= CtrlPC=0                                              Premise(F63)
	S122= CtrlPCInc=0                                           Premise(F64)
	S123= PC[CIA]=addr                                          PC-Hold(S77,S122)
	S124= PC[Out]=addr+4                                        PC-Hold(S76,S121,S122)
	S125= CtrlIAddrReg=0                                        Premise(F65)
	S126= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S79,S125)
	S127= CtrlICache=0                                          Premise(F66)
	S128= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S81,S127)
	S129= CtrlIR=0                                              Premise(F67)
	S130= [IR]={0,0,rT,rD,sa,3}                                 IR-Hold(S83,S129)
	S131= CtrlICacheReg=0                                       Premise(F68)
	S132= CtrlIMem=0                                            Premise(F69)
	S133= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                     IMem-Hold(S86,S132)
	S134= CtrlIRMux=0                                           Premise(F70)
	S135= CtrlGPR=0                                             Premise(F71)
	S136= GPR[rT]=a                                             GPR-Hold(S89,S135)
	S137= CtrlB=1                                               Premise(F72)
	S138= [B]=a                                                 B-Write(S114,S137)
	S139= CtrlALUOut=0                                          Premise(F73)

EX	S140= CP0.ASID=pid                                          CP0-Read-ASID(S117)
	S141= PC.CIA=addr                                           PC-Out(S123)
	S142= PC.CIA31_28=addr[31:28]                               PC-Out(S123)
	S143= PC.Out=addr+4                                         PC-Out(S124)
	S144= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S126)
	S145= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S126)
	S146= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S126)
	S147= IR.Out={0,0,rT,rD,sa,3}                               IR-Out(S130)
	S148= IR.Out31_26=0                                         IR-Out(S130)
	S149= IR.Out25_21=0                                         IR-Out(S130)
	S150= IR.Out20_16=rT                                        IR-Out(S130)
	S151= IR.Out15_11=rD                                        IR-Out(S130)
	S152= IR.Out10_6=sa                                         IR-Out(S130)
	S153= IR.Out5_0=3                                           IR-Out(S130)
	S154= B.Out=a                                               B-Out(S138)
	S155= B.Out1_0={a}[1:0]                                     B-Out(S138)
	S156= B.Out4_0={a}[4:0]                                     B-Out(S138)
	S157= IR.Out10_6=>SU.Shamt                                  Premise(F74)
	S158= SU.Shamt=sa                                           Path(S152,S157)
	S159= B.Out=>SU.Data                                        Premise(F75)
	S160= SU.Data=a                                             Path(S154,S159)
	S161= SU.Func=6'b000110                                     Premise(F76)
	S162= SU.Out=a>>sa                                          SU(S160,S158)
	S163= SU.CMP=Compare0(a>>sa)                                SU(S160,S158)
	S164= SU.CA=Carry(a>>sa)                                    SU(S160,S158)
	S165= SU.Out=>ALUOut.In                                     Premise(F77)
	S166= ALUOut.In=a>>sa                                       Path(S162,S165)
	S167= CtrlASIDIn=0                                          Premise(F78)
	S168= CtrlCP0=0                                             Premise(F79)
	S169= CP0[ASID]=pid                                         CP0-Hold(S117,S168)
	S170= CtrlEPCIn=0                                           Premise(F80)
	S171= CtrlExCodeIn=0                                        Premise(F81)
	S172= CtrlIMMU=0                                            Premise(F82)
	S173= CtrlPC=0                                              Premise(F83)
	S174= CtrlPCInc=0                                           Premise(F84)
	S175= PC[CIA]=addr                                          PC-Hold(S123,S174)
	S176= PC[Out]=addr+4                                        PC-Hold(S124,S173,S174)
	S177= CtrlIAddrReg=0                                        Premise(F85)
	S178= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S126,S177)
	S179= CtrlICache=0                                          Premise(F86)
	S180= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S128,S179)
	S181= CtrlIR=0                                              Premise(F87)
	S182= [IR]={0,0,rT,rD,sa,3}                                 IR-Hold(S130,S181)
	S183= CtrlICacheReg=0                                       Premise(F88)
	S184= CtrlIMem=0                                            Premise(F89)
	S185= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                     IMem-Hold(S133,S184)
	S186= CtrlIRMux=0                                           Premise(F90)
	S187= CtrlGPR=0                                             Premise(F91)
	S188= GPR[rT]=a                                             GPR-Hold(S136,S187)
	S189= CtrlB=0                                               Premise(F92)
	S190= [B]=a                                                 B-Hold(S138,S189)
	S191= CtrlALUOut=1                                          Premise(F93)
	S192= [ALUOut]=a>>sa                                        ALUOut-Write(S166,S191)

MEM	S193= CP0.ASID=pid                                          CP0-Read-ASID(S169)
	S194= PC.CIA=addr                                           PC-Out(S175)
	S195= PC.CIA31_28=addr[31:28]                               PC-Out(S175)
	S196= PC.Out=addr+4                                         PC-Out(S176)
	S197= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S178)
	S198= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S178)
	S199= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S178)
	S200= IR.Out={0,0,rT,rD,sa,3}                               IR-Out(S182)
	S201= IR.Out31_26=0                                         IR-Out(S182)
	S202= IR.Out25_21=0                                         IR-Out(S182)
	S203= IR.Out20_16=rT                                        IR-Out(S182)
	S204= IR.Out15_11=rD                                        IR-Out(S182)
	S205= IR.Out10_6=sa                                         IR-Out(S182)
	S206= IR.Out5_0=3                                           IR-Out(S182)
	S207= B.Out=a                                               B-Out(S190)
	S208= B.Out1_0={a}[1:0]                                     B-Out(S190)
	S209= B.Out4_0={a}[4:0]                                     B-Out(S190)
	S210= ALUOut.Out=a>>sa                                      ALUOut-Out(S192)
	S211= ALUOut.Out1_0={a>>sa}[1:0]                            ALUOut-Out(S192)
	S212= ALUOut.Out4_0={a>>sa}[4:0]                            ALUOut-Out(S192)
	S213= CtrlASIDIn=0                                          Premise(F94)
	S214= CtrlCP0=0                                             Premise(F95)
	S215= CP0[ASID]=pid                                         CP0-Hold(S169,S214)
	S216= CtrlEPCIn=0                                           Premise(F96)
	S217= CtrlExCodeIn=0                                        Premise(F97)
	S218= CtrlIMMU=0                                            Premise(F98)
	S219= CtrlPC=0                                              Premise(F99)
	S220= CtrlPCInc=0                                           Premise(F100)
	S221= PC[CIA]=addr                                          PC-Hold(S175,S220)
	S222= PC[Out]=addr+4                                        PC-Hold(S176,S219,S220)
	S223= CtrlIAddrReg=0                                        Premise(F101)
	S224= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S178,S223)
	S225= CtrlICache=0                                          Premise(F102)
	S226= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S180,S225)
	S227= CtrlIR=0                                              Premise(F103)
	S228= [IR]={0,0,rT,rD,sa,3}                                 IR-Hold(S182,S227)
	S229= CtrlICacheReg=0                                       Premise(F104)
	S230= CtrlIMem=0                                            Premise(F105)
	S231= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                     IMem-Hold(S185,S230)
	S232= CtrlIRMux=0                                           Premise(F106)
	S233= CtrlGPR=0                                             Premise(F107)
	S234= GPR[rT]=a                                             GPR-Hold(S188,S233)
	S235= CtrlB=0                                               Premise(F108)
	S236= [B]=a                                                 B-Hold(S190,S235)
	S237= CtrlALUOut=0                                          Premise(F109)
	S238= [ALUOut]=a>>sa                                        ALUOut-Hold(S192,S237)

MEM(DMMU1)	S239= CP0.ASID=pid                                          CP0-Read-ASID(S215)
	S240= PC.CIA=addr                                           PC-Out(S221)
	S241= PC.CIA31_28=addr[31:28]                               PC-Out(S221)
	S242= PC.Out=addr+4                                         PC-Out(S222)
	S243= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S224)
	S244= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S224)
	S245= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S224)
	S246= IR.Out={0,0,rT,rD,sa,3}                               IR-Out(S228)
	S247= IR.Out31_26=0                                         IR-Out(S228)
	S248= IR.Out25_21=0                                         IR-Out(S228)
	S249= IR.Out20_16=rT                                        IR-Out(S228)
	S250= IR.Out15_11=rD                                        IR-Out(S228)
	S251= IR.Out10_6=sa                                         IR-Out(S228)
	S252= IR.Out5_0=3                                           IR-Out(S228)
	S253= B.Out=a                                               B-Out(S236)
	S254= B.Out1_0={a}[1:0]                                     B-Out(S236)
	S255= B.Out4_0={a}[4:0]                                     B-Out(S236)
	S256= ALUOut.Out=a>>sa                                      ALUOut-Out(S238)
	S257= ALUOut.Out1_0={a>>sa}[1:0]                            ALUOut-Out(S238)
	S258= ALUOut.Out4_0={a>>sa}[4:0]                            ALUOut-Out(S238)
	S259= CtrlASIDIn=0                                          Premise(F110)
	S260= CtrlCP0=0                                             Premise(F111)
	S261= CP0[ASID]=pid                                         CP0-Hold(S215,S260)
	S262= CtrlEPCIn=0                                           Premise(F112)
	S263= CtrlExCodeIn=0                                        Premise(F113)
	S264= CtrlIMMU=0                                            Premise(F114)
	S265= CtrlPC=0                                              Premise(F115)
	S266= CtrlPCInc=0                                           Premise(F116)
	S267= PC[CIA]=addr                                          PC-Hold(S221,S266)
	S268= PC[Out]=addr+4                                        PC-Hold(S222,S265,S266)
	S269= CtrlIAddrReg=0                                        Premise(F117)
	S270= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S224,S269)
	S271= CtrlICache=0                                          Premise(F118)
	S272= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S226,S271)
	S273= CtrlIR=0                                              Premise(F119)
	S274= [IR]={0,0,rT,rD,sa,3}                                 IR-Hold(S228,S273)
	S275= CtrlICacheReg=0                                       Premise(F120)
	S276= CtrlIMem=0                                            Premise(F121)
	S277= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                     IMem-Hold(S231,S276)
	S278= CtrlIRMux=0                                           Premise(F122)
	S279= CtrlGPR=0                                             Premise(F123)
	S280= GPR[rT]=a                                             GPR-Hold(S234,S279)
	S281= CtrlB=0                                               Premise(F124)
	S282= [B]=a                                                 B-Hold(S236,S281)
	S283= CtrlALUOut=0                                          Premise(F125)
	S284= [ALUOut]=a>>sa                                        ALUOut-Hold(S238,S283)

MEM(DMMU2)	S285= CP0.ASID=pid                                          CP0-Read-ASID(S261)
	S286= PC.CIA=addr                                           PC-Out(S267)
	S287= PC.CIA31_28=addr[31:28]                               PC-Out(S267)
	S288= PC.Out=addr+4                                         PC-Out(S268)
	S289= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S270)
	S290= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S270)
	S291= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S270)
	S292= IR.Out={0,0,rT,rD,sa,3}                               IR-Out(S274)
	S293= IR.Out31_26=0                                         IR-Out(S274)
	S294= IR.Out25_21=0                                         IR-Out(S274)
	S295= IR.Out20_16=rT                                        IR-Out(S274)
	S296= IR.Out15_11=rD                                        IR-Out(S274)
	S297= IR.Out10_6=sa                                         IR-Out(S274)
	S298= IR.Out5_0=3                                           IR-Out(S274)
	S299= B.Out=a                                               B-Out(S282)
	S300= B.Out1_0={a}[1:0]                                     B-Out(S282)
	S301= B.Out4_0={a}[4:0]                                     B-Out(S282)
	S302= ALUOut.Out=a>>sa                                      ALUOut-Out(S284)
	S303= ALUOut.Out1_0={a>>sa}[1:0]                            ALUOut-Out(S284)
	S304= ALUOut.Out4_0={a>>sa}[4:0]                            ALUOut-Out(S284)
	S305= CtrlASIDIn=0                                          Premise(F126)
	S306= CtrlCP0=0                                             Premise(F127)
	S307= CP0[ASID]=pid                                         CP0-Hold(S261,S306)
	S308= CtrlEPCIn=0                                           Premise(F128)
	S309= CtrlExCodeIn=0                                        Premise(F129)
	S310= CtrlIMMU=0                                            Premise(F130)
	S311= CtrlPC=0                                              Premise(F131)
	S312= CtrlPCInc=0                                           Premise(F132)
	S313= PC[CIA]=addr                                          PC-Hold(S267,S312)
	S314= PC[Out]=addr+4                                        PC-Hold(S268,S311,S312)
	S315= CtrlIAddrReg=0                                        Premise(F133)
	S316= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S270,S315)
	S317= CtrlICache=0                                          Premise(F134)
	S318= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S272,S317)
	S319= CtrlIR=0                                              Premise(F135)
	S320= [IR]={0,0,rT,rD,sa,3}                                 IR-Hold(S274,S319)
	S321= CtrlICacheReg=0                                       Premise(F136)
	S322= CtrlIMem=0                                            Premise(F137)
	S323= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                     IMem-Hold(S277,S322)
	S324= CtrlIRMux=0                                           Premise(F138)
	S325= CtrlGPR=0                                             Premise(F139)
	S326= GPR[rT]=a                                             GPR-Hold(S280,S325)
	S327= CtrlB=0                                               Premise(F140)
	S328= [B]=a                                                 B-Hold(S282,S327)
	S329= CtrlALUOut=0                                          Premise(F141)
	S330= [ALUOut]=a>>sa                                        ALUOut-Hold(S284,S329)

WB	S331= CP0.ASID=pid                                          CP0-Read-ASID(S307)
	S332= PC.CIA=addr                                           PC-Out(S313)
	S333= PC.CIA31_28=addr[31:28]                               PC-Out(S313)
	S334= PC.Out=addr+4                                         PC-Out(S314)
	S335= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S316)
	S336= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S316)
	S337= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S316)
	S338= IR.Out={0,0,rT,rD,sa,3}                               IR-Out(S320)
	S339= IR.Out31_26=0                                         IR-Out(S320)
	S340= IR.Out25_21=0                                         IR-Out(S320)
	S341= IR.Out20_16=rT                                        IR-Out(S320)
	S342= IR.Out15_11=rD                                        IR-Out(S320)
	S343= IR.Out10_6=sa                                         IR-Out(S320)
	S344= IR.Out5_0=3                                           IR-Out(S320)
	S345= B.Out=a                                               B-Out(S328)
	S346= B.Out1_0={a}[1:0]                                     B-Out(S328)
	S347= B.Out4_0={a}[4:0]                                     B-Out(S328)
	S348= ALUOut.Out=a>>sa                                      ALUOut-Out(S330)
	S349= ALUOut.Out1_0={a>>sa}[1:0]                            ALUOut-Out(S330)
	S350= ALUOut.Out4_0={a>>sa}[4:0]                            ALUOut-Out(S330)
	S351= IR.Out15_11=>GPR.WReg                                 Premise(F142)
	S352= GPR.WReg=rD                                           Path(S342,S351)
	S353= ALUOut.Out=>GPR.WData                                 Premise(F143)
	S354= GPR.WData=a>>sa                                       Path(S348,S353)
	S355= CtrlASIDIn=0                                          Premise(F144)
	S356= CtrlCP0=0                                             Premise(F145)
	S357= CP0[ASID]=pid                                         CP0-Hold(S307,S356)
	S358= CtrlEPCIn=0                                           Premise(F146)
	S359= CtrlExCodeIn=0                                        Premise(F147)
	S360= CtrlIMMU=0                                            Premise(F148)
	S361= CtrlPC=0                                              Premise(F149)
	S362= CtrlPCInc=0                                           Premise(F150)
	S363= PC[CIA]=addr                                          PC-Hold(S313,S362)
	S364= PC[Out]=addr+4                                        PC-Hold(S314,S361,S362)
	S365= CtrlIAddrReg=0                                        Premise(F151)
	S366= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S316,S365)
	S367= CtrlICache=0                                          Premise(F152)
	S368= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S318,S367)
	S369= CtrlIR=0                                              Premise(F153)
	S370= [IR]={0,0,rT,rD,sa,3}                                 IR-Hold(S320,S369)
	S371= CtrlICacheReg=0                                       Premise(F154)
	S372= CtrlIMem=0                                            Premise(F155)
	S373= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                     IMem-Hold(S323,S372)
	S374= CtrlIRMux=0                                           Premise(F156)
	S375= CtrlGPR=1                                             Premise(F157)
	S376= GPR[rD]=a>>sa                                         GPR-Write(S352,S354,S375)
	S377= CtrlB=0                                               Premise(F158)
	S378= [B]=a                                                 B-Hold(S328,S377)
	S379= CtrlALUOut=0                                          Premise(F159)
	S380= [ALUOut]=a>>sa                                        ALUOut-Hold(S330,S379)

POST	S357= CP0[ASID]=pid                                         CP0-Hold(S307,S356)
	S363= PC[CIA]=addr                                          PC-Hold(S313,S362)
	S364= PC[Out]=addr+4                                        PC-Hold(S314,S361,S362)
	S366= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S316,S365)
	S368= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S318,S367)
	S370= [IR]={0,0,rT,rD,sa,3}                                 IR-Hold(S320,S369)
	S373= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                     IMem-Hold(S323,S372)
	S376= GPR[rD]=a>>sa                                         GPR-Write(S352,S354,S375)
	S378= [B]=a                                                 B-Hold(S328,S377)
	S380= [ALUOut]=a>>sa                                        ALUOut-Hold(S330,S379)

