
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={1,rS,17,offset}                       Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= CP0.ASID=>IMMU.PID                                      Premise(F3)
	S6= IMMU.PID=pid                                            Path(S3,S5)
	S7= PC.Out=>IMMU.IEA                                        Premise(F4)
	S8= IMMU.IEA=addr                                           Path(S4,S7)
	S9= IMMU.Addr={pid,addr}                                    IMMU-Search(S6,S8)
	S10= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S6,S8)
	S11= IMMU.Addr=>IAddrReg.In                                 Premise(F5)
	S12= IAddrReg.In={pid,addr}                                 Path(S9,S11)
	S13= IMMU.Hit=>CU_IF.IMMUHit                                Premise(F6)
	S14= CU_IF.IMMUHit=IMMUHit(pid,addr)                        Path(S10,S13)
	S15= PC.Out=>ICache.IEA                                     Premise(F7)
	S16= ICache.IEA=addr                                        Path(S4,S15)
	S17= ICache.Hit=ICacheHit(addr)                             ICache-Search(S16)
	S18= ICache.Out=>IR_IMMU.In                                 Premise(F8)
	S19= ICache.Out=>ICacheReg.In                               Premise(F9)
	S20= ICache.Hit=>CU_IF.ICacheHit                            Premise(F10)
	S21= CU_IF.ICacheHit=ICacheHit(addr)                        Path(S17,S20)
	S22= ICache.Out=>IR_ID.In                                   Premise(F11)
	S23= CU_IF.IMMUHitOut=>CU_ID.IMMUHit                        Premise(F12)
	S24= CU_IF.ICacheHitOut=>CU_ID.ICacheHit                    Premise(F13)
	S25= CU_IF.IMMUHitOut=>CU_IMMU.IMMUHit                      Premise(F14)
	S26= CU_IF.ICacheHitOut=>CU_IMMU.ICacheHit                  Premise(F15)
	S27= ICache.Hit=>FU.ICacheHit                               Premise(F16)
	S28= FU.ICacheHit=ICacheHit(addr)                           Path(S17,S27)
	S29= FU.Halt_IF=>CU_IF.Halt                                 Premise(F17)
	S30= FU.Bub_IF=>CU_IF.Bub                                   Premise(F18)
	S31= CtrlASIDIn=0                                           Premise(F19)
	S32= CtrlCP0=0                                              Premise(F20)
	S33= CP0[ASID]=pid                                          CP0-Hold(S0,S32)
	S34= CtrlEPCIn=0                                            Premise(F21)
	S35= CtrlExCodeIn=0                                         Premise(F22)
	S36= CtrlIMMU=0                                             Premise(F23)
	S37= CtrlPC=0                                               Premise(F24)
	S38= CtrlPCInc=0                                            Premise(F25)
	S39= PC[Out]=addr                                           PC-Hold(S1,S37,S38)
	S40= CtrlIAddrReg=1                                         Premise(F26)
	S41= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S40)
	S42= CtrlICache=0                                           Premise(F27)
	S43= CtrlIR_IMMU=1                                          Premise(F28)
	S44= CtrlICacheReg=1                                        Premise(F29)
	S45= CtrlIR_ID=0                                            Premise(F30)
	S46= CtrlIMem=0                                             Premise(F31)
	S47= IMem[{pid,addr}]={1,rS,17,offset}                      IMem-Hold(S2,S46)
	S48= CtrlIRMux=0                                            Premise(F32)
	S49= CtrlGPR=0                                              Premise(F33)
	S50= CtrlA_EX=0                                             Premise(F34)
	S51= CtrlB_EX=0                                             Premise(F35)
	S52= CtrlIR_EX=0                                            Premise(F36)
	S53= CtrlALUOut_MEM=0                                       Premise(F37)
	S54= CtrlConditionReg_MEM=0                                 Premise(F38)
	S55= CtrlIR_MEM=0                                           Premise(F39)
	S56= CtrlIR_DMMU1=0                                         Premise(F40)
	S57= CtrlIR_WB=0                                            Premise(F41)
	S58= CtrlA_MEM=0                                            Premise(F42)
	S59= CtrlA_WB=0                                             Premise(F43)
	S60= CtrlB_MEM=0                                            Premise(F44)
	S61= CtrlB_WB=0                                             Premise(F45)
	S62= CtrlALUOut_WB=0                                        Premise(F46)
	S63= CtrlConditionReg_DMMU1=0                               Premise(F47)
	S64= CtrlConditionReg_WB=0                                  Premise(F48)
	S65= CtrlIR_DMMU2=0                                         Premise(F49)
	S66= CtrlConditionReg_DMMU2=0                               Premise(F50)
	S67= GPR[rS]=a                                              Premise(F51)

IF(IMMU)	S68= CP0.ASID=pid                                           CP0-Read-ASID(S33)
	S69= PC.Out=addr                                            PC-Out(S39)
	S70= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S41)
	S71= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S41)
	S72= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S41)
	S73= IR_IMMU.Out=>FU.IR_IMMU                                Premise(F52)
	S74= CU_ID.IMMUHitOut=>CU_ID.IMMUHit                        Premise(F53)
	S75= CU_ID.ICacheHitOut=>CU_ID.ICacheHit                    Premise(F54)
	S76= IAddrReg.Out=>IMem.RAddr                               Premise(F55)
	S77= IMem.RAddr={pid,addr}                                  Path(S70,S76)
	S78= IMem.Out={1,rS,17,offset}                              IMem-Read(S77,S47)
	S79= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S77,S47)
	S80= IMem.Out=>IRMux.MemData                                Premise(F56)
	S81= IRMux.MemData={1,rS,17,offset}                         Path(S78,S80)
	S82= IRMux.Out={1,rS,17,offset}                             IRMux-Select2(S81)
	S83= ICacheReg.Out=>IRMux.CacheData                         Premise(F57)
	S84= CU_IMMU.IMMUHit=>IRMux.MemSel                          Premise(F58)
	S85= CU_IMMU.ICacheHit=>IRMux.CacheSel                      Premise(F59)
	S86= IRMux.Out=>IR_ID.In                                    Premise(F60)
	S87= IR_ID.In={1,rS,17,offset}                              Path(S82,S86)
	S88= IMem.MEM8WordOut=>ICache.WData                         Premise(F61)
	S89= ICache.WData=IMemGet8Word({pid,addr})                  Path(S79,S88)
	S90= PC.Out=>ICache.IEA                                     Premise(F62)
	S91= ICache.IEA=addr                                        Path(S69,S90)
	S92= ICache.Hit=ICacheHit(addr)                             ICache-Search(S91)
	S93= FU.Halt_IMMU=>CU_IMMU.Halt                             Premise(F63)
	S94= FU.Bub_IMMU=>CU_IMMU.Bub                               Premise(F64)
	S95= CtrlASIDIn=0                                           Premise(F65)
	S96= CtrlCP0=0                                              Premise(F66)
	S97= CP0[ASID]=pid                                          CP0-Hold(S33,S96)
	S98= CtrlEPCIn=0                                            Premise(F67)
	S99= CtrlExCodeIn=0                                         Premise(F68)
	S100= CtrlIMMU=0                                            Premise(F69)
	S101= CtrlPC=0                                              Premise(F70)
	S102= CtrlPCInc=1                                           Premise(F71)
	S103= PC[Out]=addr+4                                        PC-Inc(S39,S101,S102)
	S104= PC[CIA]=addr                                          PC-Inc(S39,S101,S102)
	S105= CtrlIAddrReg=0                                        Premise(F72)
	S106= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S41,S105)
	S107= CtrlICache=1                                          Premise(F73)
	S108= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S91,S89,S107)
	S109= CtrlIR_IMMU=0                                         Premise(F74)
	S110= CtrlICacheReg=0                                       Premise(F75)
	S111= CtrlIR_ID=1                                           Premise(F76)
	S112= [IR_ID]={1,rS,17,offset}                              IR_ID-Write(S87,S111)
	S113= CtrlIMem=0                                            Premise(F77)
	S114= IMem[{pid,addr}]={1,rS,17,offset}                     IMem-Hold(S47,S113)
	S115= CtrlIRMux=0                                           Premise(F78)
	S116= CtrlGPR=0                                             Premise(F79)
	S117= GPR[rS]=a                                             GPR-Hold(S67,S116)
	S118= CtrlA_EX=0                                            Premise(F80)
	S119= CtrlB_EX=0                                            Premise(F81)
	S120= CtrlIR_EX=0                                           Premise(F82)
	S121= CtrlALUOut_MEM=0                                      Premise(F83)
	S122= CtrlConditionReg_MEM=0                                Premise(F84)
	S123= CtrlIR_MEM=0                                          Premise(F85)
	S124= CtrlIR_DMMU1=0                                        Premise(F86)
	S125= CtrlIR_WB=0                                           Premise(F87)
	S126= CtrlA_MEM=0                                           Premise(F88)
	S127= CtrlA_WB=0                                            Premise(F89)
	S128= CtrlB_MEM=0                                           Premise(F90)
	S129= CtrlB_WB=0                                            Premise(F91)
	S130= CtrlALUOut_WB=0                                       Premise(F92)
	S131= CtrlConditionReg_DMMU1=0                              Premise(F93)
	S132= CtrlConditionReg_WB=0                                 Premise(F94)
	S133= CtrlIR_DMMU2=0                                        Premise(F95)
	S134= CtrlConditionReg_DMMU2=0                              Premise(F96)

ID	S135= CP0.ASID=pid                                          CP0-Read-ASID(S97)
	S136= PC.Out=addr+4                                         PC-Out(S103)
	S137= PC.CIA=addr                                           PC-Out(S104)
	S138= PC.CIA31_28=addr[31:28]                               PC-Out(S104)
	S139= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S106)
	S140= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S106)
	S141= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S106)
	S142= IR_ID.Out={1,rS,17,offset}                            IR-Out(S112)
	S143= IR_ID.Out31_26=1                                      IR-Out(S112)
	S144= IR_ID.Out25_21=rS                                     IR-Out(S112)
	S145= IR_ID.Out20_16=17                                     IR-Out(S112)
	S146= IR_ID.Out15_0=offset                                  IR-Out(S112)
	S147= IR_ID.Out=>FU.IR_ID                                   Premise(F97)
	S148= FU.IR_ID={1,rS,17,offset}                             Path(S142,S147)
	S149= CU_ID.IMMUHitOut=>CU_EX.IMMUHit                       Premise(F98)
	S150= CU_ID.ICacheHitOut=>CU_EX.ICacheHit                   Premise(F99)
	S151= IR_ID.Out31_26=>CU_ID.Op                              Premise(F100)
	S152= CU_ID.Op=1                                            Path(S143,S151)
	S153= IR_ID.Out25_21=>GPR.RReg1                             Premise(F101)
	S154= GPR.RReg1=rS                                          Path(S144,S153)
	S155= GPR.Rdata1=a                                          GPR-Read(S154,S117)
	S156= IR_ID.Out20_16=>GPR.RReg2                             Premise(F102)
	S157= GPR.RReg2=17                                          Path(S145,S156)
	S158= GPR.Rdata2=32'b0                                      GPR-ReadGPR0()
	S159= GPR.Rdata1=>FU.InID1                                  Premise(F103)
	S160= FU.InID1=a                                            Path(S155,S159)
	S161= FU.OutID1=FU(a)                                       FU-Forward(S160)
	S162= IR_ID.Out25_21=>FU.InID1_RReg                         Premise(F104)
	S163= FU.InID1_RReg=rS                                      Path(S144,S162)
	S164= FU.OutID1=>A_EX.In                                    Premise(F105)
	S165= A_EX.In=FU(a)                                         Path(S161,S164)
	S166= GPR.Rdata2=>FU.InID2                                  Premise(F106)
	S167= FU.InID2=32'b0                                        Path(S158,S166)
	S168= FU.OutID2=FU(32'b0)                                   FU-Forward(S167)
	S169= IR_ID.Out20_16=>FU.InID2_RReg                         Premise(F107)
	S170= FU.InID2_RReg=17                                      Path(S145,S169)
	S171= FU.OutID2=>B_EX.In                                    Premise(F108)
	S172= B_EX.In=FU(32'b0)                                     Path(S168,S171)
	S173= IR_ID.Out=>IR_EX.In                                   Premise(F109)
	S174= IR_EX.In={1,rS,17,offset}                             Path(S142,S173)
	S175= FU.Halt_ID=>CU_ID.Halt                                Premise(F110)
	S176= FU.Bub_ID=>CU_ID.Bub                                  Premise(F111)
	S177= CtrlASIDIn=0                                          Premise(F112)
	S178= CtrlCP0=0                                             Premise(F113)
	S179= CP0[ASID]=pid                                         CP0-Hold(S97,S178)
	S180= CtrlEPCIn=0                                           Premise(F114)
	S181= CtrlExCodeIn=0                                        Premise(F115)
	S182= CtrlIMMU=0                                            Premise(F116)
	S183= CtrlPC=0                                              Premise(F117)
	S184= CtrlPCInc=0                                           Premise(F118)
	S185= PC[CIA]=addr                                          PC-Hold(S104,S184)
	S186= PC[Out]=addr+4                                        PC-Hold(S103,S183,S184)
	S187= CtrlIAddrReg=0                                        Premise(F119)
	S188= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S106,S187)
	S189= CtrlICache=0                                          Premise(F120)
	S190= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S108,S189)
	S191= CtrlIR_IMMU=0                                         Premise(F121)
	S192= CtrlICacheReg=0                                       Premise(F122)
	S193= CtrlIR_ID=0                                           Premise(F123)
	S194= [IR_ID]={1,rS,17,offset}                              IR_ID-Hold(S112,S193)
	S195= CtrlIMem=0                                            Premise(F124)
	S196= IMem[{pid,addr}]={1,rS,17,offset}                     IMem-Hold(S114,S195)
	S197= CtrlIRMux=0                                           Premise(F125)
	S198= CtrlGPR=0                                             Premise(F126)
	S199= GPR[rS]=a                                             GPR-Hold(S117,S198)
	S200= CtrlA_EX=1                                            Premise(F127)
	S201= [A_EX]=FU(a)                                          A_EX-Write(S165,S200)
	S202= CtrlB_EX=1                                            Premise(F128)
	S203= [B_EX]=FU(32'b0)                                      B_EX-Write(S172,S202)
	S204= CtrlIR_EX=1                                           Premise(F129)
	S205= [IR_EX]={1,rS,17,offset}                              IR_EX-Write(S174,S204)
	S206= CtrlALUOut_MEM=0                                      Premise(F130)
	S207= CtrlConditionReg_MEM=0                                Premise(F131)
	S208= CtrlIR_MEM=0                                          Premise(F132)
	S209= CtrlIR_DMMU1=0                                        Premise(F133)
	S210= CtrlIR_WB=0                                           Premise(F134)
	S211= CtrlA_MEM=0                                           Premise(F135)
	S212= CtrlA_WB=0                                            Premise(F136)
	S213= CtrlB_MEM=0                                           Premise(F137)
	S214= CtrlB_WB=0                                            Premise(F138)
	S215= CtrlALUOut_WB=0                                       Premise(F139)
	S216= CtrlConditionReg_DMMU1=0                              Premise(F140)
	S217= CtrlConditionReg_WB=0                                 Premise(F141)
	S218= CtrlIR_DMMU2=0                                        Premise(F142)
	S219= CtrlConditionReg_DMMU2=0                              Premise(F143)

EX	S220= CP0.ASID=pid                                          CP0-Read-ASID(S179)
	S221= PC.CIA=addr                                           PC-Out(S185)
	S222= PC.CIA31_28=addr[31:28]                               PC-Out(S185)
	S223= PC.Out=addr+4                                         PC-Out(S186)
	S224= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S188)
	S225= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S188)
	S226= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S188)
	S227= IR_ID.Out={1,rS,17,offset}                            IR-Out(S194)
	S228= IR_ID.Out31_26=1                                      IR-Out(S194)
	S229= IR_ID.Out25_21=rS                                     IR-Out(S194)
	S230= IR_ID.Out20_16=17                                     IR-Out(S194)
	S231= IR_ID.Out15_0=offset                                  IR-Out(S194)
	S232= A_EX.Out=FU(a)                                        A_EX-Out(S201)
	S233= A_EX.Out1_0={FU(a)}[1:0]                              A_EX-Out(S201)
	S234= A_EX.Out4_0={FU(a)}[4:0]                              A_EX-Out(S201)
	S235= B_EX.Out=FU(32'b0)                                    B_EX-Out(S203)
	S236= B_EX.Out1_0={FU(32'b0)}[1:0]                          B_EX-Out(S203)
	S237= B_EX.Out4_0={FU(32'b0)}[4:0]                          B_EX-Out(S203)
	S238= IR_EX.Out={1,rS,17,offset}                            IR_EX-Out(S205)
	S239= IR_EX.Out31_26=1                                      IR_EX-Out(S205)
	S240= IR_EX.Out25_21=rS                                     IR_EX-Out(S205)
	S241= IR_EX.Out20_16=17                                     IR_EX-Out(S205)
	S242= IR_EX.Out15_0=offset                                  IR_EX-Out(S205)
	S243= IR_EX.Out=>FU.IR_EX                                   Premise(F144)
	S244= FU.IR_EX={1,rS,17,offset}                             Path(S238,S243)
	S245= CU_EX.IMMUHitOut=>CU_MEM.IMMUHit                      Premise(F145)
	S246= CU_EX.ICacheHitOut=>CU_MEM.ICacheHit                  Premise(F146)
	S247= IR_EX.Out31_26=>CU_EX.Op                              Premise(F147)
	S248= CU_EX.Op=1                                            Path(S239,S247)
	S249= IR_EX.Out15_0=>SEXT.In                                Premise(F148)
	S250= SEXT.In=offset                                        Path(S242,S249)
	S251= SEXT.Out={14{offset[15]},offset,2{0}}                 SEXT(S250)
	S252= PC.CIA=>ALU.A                                         Premise(F149)
	S253= ALU.A=addr                                            Path(S221,S252)
	S254= SEXT.Out=>ALU.B                                       Premise(F150)
	S255= ALU.B={14{offset[15]},offset,2{0}}                    Path(S251,S254)
	S256= ALU.Func=6'b010010                                    Premise(F151)
	S257= ALU.Out=addr+{14{offset[15]},offset,2{0}}             ALU(S253,S255)
	S258= ALU.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]   ALU(S253,S255)
	S259= ALU.CMP=Compare0(addr+{14{offset[15]},offset,2{0}})   ALU(S253,S255)
	S260= ALU.OV=OverFlow(addr+{14{offset[15]},offset,2{0}})    ALU(S253,S255)
	S261= ALU.CA=Carry(addr+{14{offset[15]},offset,2{0}})       ALU(S253,S255)
	S262= ALU.Out=>ALUOut_MEM.In                                Premise(F152)
	S263= ALUOut_MEM.In=addr+{14{offset[15]},offset,2{0}}       Path(S257,S262)
	S264= A_EX.Out=>CMPU.A                                      Premise(F153)
	S265= CMPU.A=FU(a)                                          Path(S232,S264)
	S266= B_EX.Out=>CMPU.B                                      Premise(F154)
	S267= CMPU.B=FU(32'b0)                                      Path(S235,S266)
	S268= CMPU.Func=6'b000011                                   Premise(F155)
	S269= CMPU.Out=CompareS(FU(a),FU(32'b0))                    CMPU-CMPS(S265,S267)
	S270= CMPU.zero=CompareS(FU(a),FU(32'b0))                   CMPU-CMPS(S265,S267)
	S271= CMPU.gt=CompareS(FU(a),FU(32'b0))                     CMPU-CMPS(S265,S267)
	S272= CMPU.lt=CompareS(FU(a),FU(32'b0))                     CMPU-CMPS(S265,S267)
	S273= CMPU.lt=>ConditionReg_MEM.In                          Premise(F156)
	S274= ConditionReg_MEM.In=CompareS(FU(a),FU(32'b0))         Path(S272,S273)
	S275= GPR.WReg=5'd31                                        Premise(F157)
	S276= PC.Out=>GPR.WData                                     Premise(F158)
	S277= GPR.WData=addr+4                                      Path(S223,S276)
	S278= PC.Out=>FU.InEX                                       Premise(F159)
	S279= FU.InEX=addr+4                                        Path(S223,S278)
	S280= FU.InEX_WReg=5'd31                                    Premise(F160)
	S281= IR_EX.Out=>IR_MEM.In                                  Premise(F161)
	S282= IR_MEM.In={1,rS,17,offset}                            Path(S238,S281)
	S283= CtrlASIDIn=0                                          Premise(F162)
	S284= CtrlCP0=0                                             Premise(F163)
	S285= CP0[ASID]=pid                                         CP0-Hold(S179,S284)
	S286= CtrlEPCIn=0                                           Premise(F164)
	S287= CtrlExCodeIn=0                                        Premise(F165)
	S288= CtrlIMMU=0                                            Premise(F166)
	S289= CtrlPC=0                                              Premise(F167)
	S290= CtrlPCInc=0                                           Premise(F168)
	S291= PC[CIA]=addr                                          PC-Hold(S185,S290)
	S292= PC[Out]=addr+4                                        PC-Hold(S186,S289,S290)
	S293= CtrlIAddrReg=0                                        Premise(F169)
	S294= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S188,S293)
	S295= CtrlICache=0                                          Premise(F170)
	S296= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S190,S295)
	S297= CtrlIR_IMMU=0                                         Premise(F171)
	S298= CtrlICacheReg=0                                       Premise(F172)
	S299= CtrlIR_ID=0                                           Premise(F173)
	S300= [IR_ID]={1,rS,17,offset}                              IR_ID-Hold(S194,S299)
	S301= CtrlIMem=0                                            Premise(F174)
	S302= IMem[{pid,addr}]={1,rS,17,offset}                     IMem-Hold(S196,S301)
	S303= CtrlIRMux=0                                           Premise(F175)
	S304= CtrlGPR=1                                             Premise(F176)
	S305= GPR[5'd31]=addr+4                                     GPR-Write(S275,S277,S304)
	S306= CtrlA_EX=0                                            Premise(F177)
	S307= [A_EX]=FU(a)                                          A_EX-Hold(S201,S306)
	S308= CtrlB_EX=0                                            Premise(F178)
	S309= [B_EX]=FU(32'b0)                                      B_EX-Hold(S203,S308)
	S310= CtrlIR_EX=0                                           Premise(F179)
	S311= [IR_EX]={1,rS,17,offset}                              IR_EX-Hold(S205,S310)
	S312= CtrlALUOut_MEM=1                                      Premise(F180)
	S313= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Write(S263,S312)
	S314= CtrlConditionReg_MEM=1                                Premise(F181)
	S315= [ConditionReg_MEM]=CompareS(FU(a),FU(32'b0))          ConditionReg_MEM-Write(S274,S314)
	S316= CtrlIR_MEM=1                                          Premise(F182)
	S317= [IR_MEM]={1,rS,17,offset}                             IR_MEM-Write(S282,S316)
	S318= CtrlIR_DMMU1=0                                        Premise(F183)
	S319= CtrlIR_WB=0                                           Premise(F184)
	S320= CtrlA_MEM=0                                           Premise(F185)
	S321= CtrlA_WB=0                                            Premise(F186)
	S322= CtrlB_MEM=0                                           Premise(F187)
	S323= CtrlB_WB=0                                            Premise(F188)
	S324= CtrlALUOut_WB=0                                       Premise(F189)
	S325= CtrlConditionReg_DMMU1=0                              Premise(F190)
	S326= CtrlConditionReg_WB=0                                 Premise(F191)
	S327= CtrlIR_DMMU2=0                                        Premise(F192)
	S328= CtrlConditionReg_DMMU2=0                              Premise(F193)

MEM	S329= CP0.ASID=pid                                          CP0-Read-ASID(S285)
	S330= PC.CIA=addr                                           PC-Out(S291)
	S331= PC.CIA31_28=addr[31:28]                               PC-Out(S291)
	S332= PC.Out=addr+4                                         PC-Out(S292)
	S333= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S294)
	S334= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S294)
	S335= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S294)
	S336= IR_ID.Out={1,rS,17,offset}                            IR-Out(S300)
	S337= IR_ID.Out31_26=1                                      IR-Out(S300)
	S338= IR_ID.Out25_21=rS                                     IR-Out(S300)
	S339= IR_ID.Out20_16=17                                     IR-Out(S300)
	S340= IR_ID.Out15_0=offset                                  IR-Out(S300)
	S341= A_EX.Out=FU(a)                                        A_EX-Out(S307)
	S342= A_EX.Out1_0={FU(a)}[1:0]                              A_EX-Out(S307)
	S343= A_EX.Out4_0={FU(a)}[4:0]                              A_EX-Out(S307)
	S344= B_EX.Out=FU(32'b0)                                    B_EX-Out(S309)
	S345= B_EX.Out1_0={FU(32'b0)}[1:0]                          B_EX-Out(S309)
	S346= B_EX.Out4_0={FU(32'b0)}[4:0]                          B_EX-Out(S309)
	S347= IR_EX.Out={1,rS,17,offset}                            IR_EX-Out(S311)
	S348= IR_EX.Out31_26=1                                      IR_EX-Out(S311)
	S349= IR_EX.Out25_21=rS                                     IR_EX-Out(S311)
	S350= IR_EX.Out20_16=17                                     IR_EX-Out(S311)
	S351= IR_EX.Out15_0=offset                                  IR_EX-Out(S311)
	S352= ALUOut_MEM.Out=addr+{14{offset[15]},offset,2{0}}      ALUOut_MEM-Out(S313)
	S353= ALUOut_MEM.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut_MEM-Out(S313)
	S354= ALUOut_MEM.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut_MEM-Out(S313)
	S355= ConditionReg_MEM.Out=CompareS(FU(a),FU(32'b0))        ConditionReg_MEM-Out(S315)
	S356= ConditionReg_MEM.Out1_0={CompareS(FU(a),FU(32'b0))}[1:0]ConditionReg_MEM-Out(S315)
	S357= ConditionReg_MEM.Out4_0={CompareS(FU(a),FU(32'b0))}[4:0]ConditionReg_MEM-Out(S315)
	S358= IR_MEM.Out={1,rS,17,offset}                           IR_MEM-Out(S317)
	S359= IR_MEM.Out31_26=1                                     IR_MEM-Out(S317)
	S360= IR_MEM.Out25_21=rS                                    IR_MEM-Out(S317)
	S361= IR_MEM.Out20_16=17                                    IR_MEM-Out(S317)
	S362= IR_MEM.Out15_0=offset                                 IR_MEM-Out(S317)
	S363= IR_MEM.Out=>FU.IR_MEM                                 Premise(F194)
	S364= FU.IR_MEM={1,rS,17,offset}                            Path(S358,S363)
	S365= CU_MEM.IMMUHitOut=>CU_DMMU1.IMMUHit                   Premise(F195)
	S366= CU_MEM.ICacheHitOut=>CU_DMMU1.ICacheHit               Premise(F196)
	S367= CU_MEM.DMMUHitOut=>CU_DMMU1.DMMUHit                   Premise(F197)
	S368= CU_MEM.DCacheHitOut=>CU_DMMU1.DCacheHit               Premise(F198)
	S369= IR_MEM.Out31_26=>CU_MEM.Op                            Premise(F199)
	S370= CU_MEM.Op=1                                           Path(S359,S369)
	S371= ALUOut_MEM.Out=>PC.In                                 Premise(F200)
	S372= PC.In=addr+{14{offset[15]},offset,2{0}}               Path(S352,S371)
	S373= ConditionReg_MEM.Out=>CU_MEM.lt                       Premise(F201)
	S374= CU_MEM.lt=CompareS(FU(a),FU(32'b0))                   Path(S355,S373)
	S375= IR_MEM.Out=>IR_DMMU1.In                               Premise(F202)
	S376= IR_DMMU1.In={1,rS,17,offset}                          Path(S358,S375)
	S377= IR_MEM.Out=>IR_WB.In                                  Premise(F203)
	S378= IR_WB.In={1,rS,17,offset}                             Path(S358,S377)
	S379= A_MEM.Out=>A_WB.In                                    Premise(F204)
	S380= B_MEM.Out=>B_WB.In                                    Premise(F205)
	S381= ALUOut_MEM.Out=>ALUOut_WB.In                          Premise(F206)
	S382= ALUOut_WB.In=addr+{14{offset[15]},offset,2{0}}        Path(S352,S381)
	S383= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In           Premise(F207)
	S384= ConditionReg_DMMU1.In=CompareS(FU(a),FU(32'b0))       Path(S355,S383)
	S385= ConditionReg_MEM.Out=>ConditionReg_WB.In              Premise(F208)
	S386= ConditionReg_WB.In=CompareS(FU(a),FU(32'b0))          Path(S355,S385)
	S387= CU_MEM.IMMUHitOut=>CU_WB.IMMUHit                      Premise(F209)
	S388= CU_MEM.ICacheHitOut=>CU_WB.ICacheHit                  Premise(F210)
	S389= FU.InMEM_WReg=5'd31                                   Premise(F211)
	S390= CtrlASIDIn=0                                          Premise(F212)
	S391= CtrlCP0=0                                             Premise(F213)
	S392= CP0[ASID]=pid                                         CP0-Hold(S285,S391)
	S393= CtrlEPCIn=0                                           Premise(F214)
	S394= CtrlExCodeIn=0                                        Premise(F215)
	S395= CtrlIMMU=0                                            Premise(F216)
	S396= CtrlPC=0                                              Premise(F217)
	S397= CtrlPCInc=0                                           Premise(F218)
	S398= PC[CIA]=addr                                          PC-Hold(S291,S397)
	S399= PC[Out]=addr+4                                        PC-Hold(S292,S396,S397)
	S400= CtrlIAddrReg=0                                        Premise(F219)
	S401= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S294,S400)
	S402= CtrlICache=0                                          Premise(F220)
	S403= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S296,S402)
	S404= CtrlIR_IMMU=0                                         Premise(F221)
	S405= CtrlICacheReg=0                                       Premise(F222)
	S406= CtrlIR_ID=0                                           Premise(F223)
	S407= [IR_ID]={1,rS,17,offset}                              IR_ID-Hold(S300,S406)
	S408= CtrlIMem=0                                            Premise(F224)
	S409= IMem[{pid,addr}]={1,rS,17,offset}                     IMem-Hold(S302,S408)
	S410= CtrlIRMux=0                                           Premise(F225)
	S411= CtrlGPR=0                                             Premise(F226)
	S412= GPR[5'd31]=addr+4                                     GPR-Hold(S305,S411)
	S413= CtrlA_EX=0                                            Premise(F227)
	S414= [A_EX]=FU(a)                                          A_EX-Hold(S307,S413)
	S415= CtrlB_EX=0                                            Premise(F228)
	S416= [B_EX]=FU(32'b0)                                      B_EX-Hold(S309,S415)
	S417= CtrlIR_EX=0                                           Premise(F229)
	S418= [IR_EX]={1,rS,17,offset}                              IR_EX-Hold(S311,S417)
	S419= CtrlALUOut_MEM=0                                      Premise(F230)
	S420= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Hold(S313,S419)
	S421= CtrlConditionReg_MEM=0                                Premise(F231)
	S422= [ConditionReg_MEM]=CompareS(FU(a),FU(32'b0))          ConditionReg_MEM-Hold(S315,S421)
	S423= CtrlIR_MEM=0                                          Premise(F232)
	S424= [IR_MEM]={1,rS,17,offset}                             IR_MEM-Hold(S317,S423)
	S425= CtrlIR_DMMU1=1                                        Premise(F233)
	S426= [IR_DMMU1]={1,rS,17,offset}                           IR_DMMU1-Write(S376,S425)
	S427= CtrlIR_WB=1                                           Premise(F234)
	S428= [IR_WB]={1,rS,17,offset}                              IR_WB-Write(S378,S427)
	S429= CtrlA_MEM=0                                           Premise(F235)
	S430= CtrlA_WB=1                                            Premise(F236)
	S431= CtrlB_MEM=0                                           Premise(F237)
	S432= CtrlB_WB=1                                            Premise(F238)
	S433= CtrlALUOut_WB=1                                       Premise(F239)
	S434= [ALUOut_WB]=addr+{14{offset[15]},offset,2{0}}         ALUOut_WB-Write(S382,S433)
	S435= CtrlConditionReg_DMMU1=1                              Premise(F240)
	S436= [ConditionReg_DMMU1]=CompareS(FU(a),FU(32'b0))        ConditionReg_DMMU1-Write(S384,S435)
	S437= CtrlConditionReg_WB=1                                 Premise(F241)
	S438= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))           ConditionReg_WB-Write(S386,S437)
	S439= CtrlIR_DMMU2=0                                        Premise(F242)
	S440= CtrlConditionReg_DMMU2=0                              Premise(F243)

WB	S441= CP0.ASID=pid                                          CP0-Read-ASID(S392)
	S442= PC.CIA=addr                                           PC-Out(S398)
	S443= PC.CIA31_28=addr[31:28]                               PC-Out(S398)
	S444= PC.Out=addr+4                                         PC-Out(S399)
	S445= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S401)
	S446= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S401)
	S447= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S401)
	S448= IR_ID.Out={1,rS,17,offset}                            IR-Out(S407)
	S449= IR_ID.Out31_26=1                                      IR-Out(S407)
	S450= IR_ID.Out25_21=rS                                     IR-Out(S407)
	S451= IR_ID.Out20_16=17                                     IR-Out(S407)
	S452= IR_ID.Out15_0=offset                                  IR-Out(S407)
	S453= A_EX.Out=FU(a)                                        A_EX-Out(S414)
	S454= A_EX.Out1_0={FU(a)}[1:0]                              A_EX-Out(S414)
	S455= A_EX.Out4_0={FU(a)}[4:0]                              A_EX-Out(S414)
	S456= B_EX.Out=FU(32'b0)                                    B_EX-Out(S416)
	S457= B_EX.Out1_0={FU(32'b0)}[1:0]                          B_EX-Out(S416)
	S458= B_EX.Out4_0={FU(32'b0)}[4:0]                          B_EX-Out(S416)
	S459= IR_EX.Out={1,rS,17,offset}                            IR_EX-Out(S418)
	S460= IR_EX.Out31_26=1                                      IR_EX-Out(S418)
	S461= IR_EX.Out25_21=rS                                     IR_EX-Out(S418)
	S462= IR_EX.Out20_16=17                                     IR_EX-Out(S418)
	S463= IR_EX.Out15_0=offset                                  IR_EX-Out(S418)
	S464= ALUOut_MEM.Out=addr+{14{offset[15]},offset,2{0}}      ALUOut_MEM-Out(S420)
	S465= ALUOut_MEM.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut_MEM-Out(S420)
	S466= ALUOut_MEM.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut_MEM-Out(S420)
	S467= ConditionReg_MEM.Out=CompareS(FU(a),FU(32'b0))        ConditionReg_MEM-Out(S422)
	S468= ConditionReg_MEM.Out1_0={CompareS(FU(a),FU(32'b0))}[1:0]ConditionReg_MEM-Out(S422)
	S469= ConditionReg_MEM.Out4_0={CompareS(FU(a),FU(32'b0))}[4:0]ConditionReg_MEM-Out(S422)
	S470= IR_MEM.Out={1,rS,17,offset}                           IR_MEM-Out(S424)
	S471= IR_MEM.Out31_26=1                                     IR_MEM-Out(S424)
	S472= IR_MEM.Out25_21=rS                                    IR_MEM-Out(S424)
	S473= IR_MEM.Out20_16=17                                    IR_MEM-Out(S424)
	S474= IR_MEM.Out15_0=offset                                 IR_MEM-Out(S424)
	S475= IR_DMMU1.Out={1,rS,17,offset}                         IR_DMMU1-Out(S426)
	S476= IR_DMMU1.Out31_26=1                                   IR_DMMU1-Out(S426)
	S477= IR_DMMU1.Out25_21=rS                                  IR_DMMU1-Out(S426)
	S478= IR_DMMU1.Out20_16=17                                  IR_DMMU1-Out(S426)
	S479= IR_DMMU1.Out15_0=offset                               IR_DMMU1-Out(S426)
	S480= IR_WB.Out={1,rS,17,offset}                            IR-Out(S428)
	S481= IR_WB.Out31_26=1                                      IR-Out(S428)
	S482= IR_WB.Out25_21=rS                                     IR-Out(S428)
	S483= IR_WB.Out20_16=17                                     IR-Out(S428)
	S484= IR_WB.Out15_0=offset                                  IR-Out(S428)
	S485= ALUOut_WB.Out=addr+{14{offset[15]},offset,2{0}}       ALUOut_WB-Out(S434)
	S486= ALUOut_WB.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut_WB-Out(S434)
	S487= ALUOut_WB.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut_WB-Out(S434)
	S488= ConditionReg_DMMU1.Out=CompareS(FU(a),FU(32'b0))      ConditionReg_DMMU1-Out(S436)
	S489= ConditionReg_DMMU1.Out1_0={CompareS(FU(a),FU(32'b0))}[1:0]ConditionReg_DMMU1-Out(S436)
	S490= ConditionReg_DMMU1.Out4_0={CompareS(FU(a),FU(32'b0))}[4:0]ConditionReg_DMMU1-Out(S436)
	S491= ConditionReg_WB.Out=CompareS(FU(a),FU(32'b0))         ConditionReg_WB-Out(S438)
	S492= ConditionReg_WB.Out1_0={CompareS(FU(a),FU(32'b0))}[1:0]ConditionReg_WB-Out(S438)
	S493= ConditionReg_WB.Out4_0={CompareS(FU(a),FU(32'b0))}[4:0]ConditionReg_WB-Out(S438)
	S494= IR_WB.Out=>FU.IR_WB                                   Premise(F325)
	S495= FU.IR_WB={1,rS,17,offset}                             Path(S480,S494)
	S496= IR_WB.Out31_26=>CU_WB.Op                              Premise(F326)
	S497= CU_WB.Op=1                                            Path(S481,S496)
	S498= FU.InWB_WReg=5'd31                                    Premise(F327)
	S499= CtrlASIDIn=0                                          Premise(F328)
	S500= CtrlCP0=0                                             Premise(F329)
	S501= CP0[ASID]=pid                                         CP0-Hold(S392,S500)
	S502= CtrlEPCIn=0                                           Premise(F330)
	S503= CtrlExCodeIn=0                                        Premise(F331)
	S504= CtrlIMMU=0                                            Premise(F332)
	S505= CtrlPC=0                                              Premise(F333)
	S506= CtrlPCInc=0                                           Premise(F334)
	S507= PC[CIA]=addr                                          PC-Hold(S398,S506)
	S508= PC[Out]=addr+4                                        PC-Hold(S399,S505,S506)
	S509= CtrlIAddrReg=0                                        Premise(F335)
	S510= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S401,S509)
	S511= CtrlICache=0                                          Premise(F336)
	S512= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S403,S511)
	S513= CtrlIR_IMMU=0                                         Premise(F337)
	S514= CtrlICacheReg=0                                       Premise(F338)
	S515= CtrlIR_ID=0                                           Premise(F339)
	S516= [IR_ID]={1,rS,17,offset}                              IR_ID-Hold(S407,S515)
	S517= CtrlIMem=0                                            Premise(F340)
	S518= IMem[{pid,addr}]={1,rS,17,offset}                     IMem-Hold(S409,S517)
	S519= CtrlIRMux=0                                           Premise(F341)
	S520= CtrlGPR=0                                             Premise(F342)
	S521= GPR[5'd31]=addr+4                                     GPR-Hold(S412,S520)
	S522= CtrlA_EX=0                                            Premise(F343)
	S523= [A_EX]=FU(a)                                          A_EX-Hold(S414,S522)
	S524= CtrlB_EX=0                                            Premise(F344)
	S525= [B_EX]=FU(32'b0)                                      B_EX-Hold(S416,S524)
	S526= CtrlIR_EX=0                                           Premise(F345)
	S527= [IR_EX]={1,rS,17,offset}                              IR_EX-Hold(S418,S526)
	S528= CtrlALUOut_MEM=0                                      Premise(F346)
	S529= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Hold(S420,S528)
	S530= CtrlConditionReg_MEM=0                                Premise(F347)
	S531= [ConditionReg_MEM]=CompareS(FU(a),FU(32'b0))          ConditionReg_MEM-Hold(S422,S530)
	S532= CtrlIR_MEM=0                                          Premise(F348)
	S533= [IR_MEM]={1,rS,17,offset}                             IR_MEM-Hold(S424,S532)
	S534= CtrlIR_DMMU1=0                                        Premise(F349)
	S535= [IR_DMMU1]={1,rS,17,offset}                           IR_DMMU1-Hold(S426,S534)
	S536= CtrlIR_WB=0                                           Premise(F350)
	S537= [IR_WB]={1,rS,17,offset}                              IR_WB-Hold(S428,S536)
	S538= CtrlA_MEM=0                                           Premise(F351)
	S539= CtrlA_WB=0                                            Premise(F352)
	S540= CtrlB_MEM=0                                           Premise(F353)
	S541= CtrlB_WB=0                                            Premise(F354)
	S542= CtrlALUOut_WB=0                                       Premise(F355)
	S543= [ALUOut_WB]=addr+{14{offset[15]},offset,2{0}}         ALUOut_WB-Hold(S434,S542)
	S544= CtrlConditionReg_DMMU1=0                              Premise(F356)
	S545= [ConditionReg_DMMU1]=CompareS(FU(a),FU(32'b0))        ConditionReg_DMMU1-Hold(S436,S544)
	S546= CtrlConditionReg_WB=0                                 Premise(F357)
	S547= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))           ConditionReg_WB-Hold(S438,S546)
	S548= CtrlIR_DMMU2=0                                        Premise(F358)
	S549= CtrlConditionReg_DMMU2=0                              Premise(F359)

POST	S501= CP0[ASID]=pid                                         CP0-Hold(S392,S500)
	S507= PC[CIA]=addr                                          PC-Hold(S398,S506)
	S508= PC[Out]=addr+4                                        PC-Hold(S399,S505,S506)
	S510= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S401,S509)
	S512= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S403,S511)
	S516= [IR_ID]={1,rS,17,offset}                              IR_ID-Hold(S407,S515)
	S518= IMem[{pid,addr}]={1,rS,17,offset}                     IMem-Hold(S409,S517)
	S521= GPR[5'd31]=addr+4                                     GPR-Hold(S412,S520)
	S523= [A_EX]=FU(a)                                          A_EX-Hold(S414,S522)
	S525= [B_EX]=FU(32'b0)                                      B_EX-Hold(S416,S524)
	S527= [IR_EX]={1,rS,17,offset}                              IR_EX-Hold(S418,S526)
	S529= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Hold(S420,S528)
	S531= [ConditionReg_MEM]=CompareS(FU(a),FU(32'b0))          ConditionReg_MEM-Hold(S422,S530)
	S533= [IR_MEM]={1,rS,17,offset}                             IR_MEM-Hold(S424,S532)
	S535= [IR_DMMU1]={1,rS,17,offset}                           IR_DMMU1-Hold(S426,S534)
	S537= [IR_WB]={1,rS,17,offset}                              IR_WB-Hold(S428,S536)
	S543= [ALUOut_WB]=addr+{14{offset[15]},offset,2{0}}         ALUOut_WB-Hold(S434,S542)
	S545= [ConditionReg_DMMU1]=CompareS(FU(a),FU(32'b0))        ConditionReg_DMMU1-Hold(S436,S544)
	S547= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))           ConditionReg_WB-Hold(S438,S546)

