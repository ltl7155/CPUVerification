
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,1044}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S8= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S9= PC.Out=addr                                             PC-Out(S1)
	S10= XER.SOOut=so                                           XER-SO-Out(S5)
	S11= PIDReg.Out=>IMMU.PID                                   Premise(F6)
	S12= IMMU.PID=pid                                           Path(S6,S11)
	S13= PC.Out=>IMMU.IEA                                       Premise(F7)
	S14= IMMU.IEA=addr                                          Path(S9,S13)
	S15= IMMU.Addr={pid,addr}                                   IMMU-Search(S12,S14)
	S16= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S12,S14)
	S17= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S18= IAddrReg.In={pid,addr}                                 Path(S15,S17)
	S19= IMMU.Hit=>IMMUHitReg.In                                Premise(F9)
	S20= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S16,S19)
	S21= PC.Out=>ICache.IEA                                     Premise(F10)
	S22= ICache.IEA=addr                                        Path(S9,S21)
	S23= ICache.Hit=ICacheHit(addr)                             ICache-Search(S22)
	S24= ICache.Out=>ICacheReg.In                               Premise(F11)
	S25= ICache.Hit=>ICacheHitReg.In                            Premise(F12)
	S26= ICacheHitReg.In=ICacheHit(addr)                        Path(S23,S25)
	S27= IMMUHitReg.Out=>CU.IMemHit                             Premise(F13)
	S28= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F14)
	S29= IAddrReg.Out=>IMem.RAddr                               Premise(F15)
	S30= IMem.Out=>IRMux.MemData                                Premise(F16)
	S31= ICacheReg.Out=>IRMux.CacheData                         Premise(F17)
	S32= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F18)
	S33= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F19)
	S34= IRMux.Out=>IR.In                                       Premise(F20)
	S35= IMem.MEM8WordOut=>ICache.WData                         Premise(F21)
	S36= PC.Out=>ICache.IEA                                     Premise(F22)
	S37= IR.Out0_5=>CU.Op                                       Premise(F23)
	S38= IR.Out11_15=>GPRegs.RReg1                              Premise(F24)
	S39= IR.Out16_20=>GPRegs.RReg2                              Premise(F25)
	S40= IR.Out21_31=>CU.IRFunc                                 Premise(F26)
	S41= GPRegs.Rdata1=>A.In                                    Premise(F27)
	S42= GPRegs.Rdata2=>B.In                                    Premise(F28)
	S43= A.Out=>ALU.A                                           Premise(F29)
	S44= B.Out=>ALU.B                                           Premise(F30)
	S45= CU.Func=>ALU.Func                                      Premise(F31)
	S46= ALU.Out=>ALUOut.In                                     Premise(F32)
	S47= ALU.CA=>CAReg.In                                       Premise(F33)
	S48= ALU.OV=>OVReg.In                                       Premise(F34)
	S49= XER.SOOut=>ORGate.A                                    Premise(F35)
	S50= ORGate.A=so                                            Path(S10,S49)
	S51= ALU.OV=>ORGate.B                                       Premise(F36)
	S52= ORGate.Out=>DR1bit.In                                  Premise(F37)
	S53= IR.Out6_10=>GPRegs.WReg                                Premise(F38)
	S54= ALUOut.Out=>GPRegs.WData                               Premise(F39)
	S55= DR1bit.Out=>XER.SOIn                                   Premise(F40)
	S56= CAReg.Out=>XER.CAIn                                    Premise(F41)
	S57= OVReg.Out=>XER.OVIn                                    Premise(F42)
	S58= CtrlPIDReg=0                                           Premise(F43)
	S59= [PIDReg]=pid                                           PIDReg-Hold(S0,S58)
	S60= CtrlIMMU=0                                             Premise(F44)
	S61= CtrlPC=0                                               Premise(F45)
	S62= CtrlPCInc=0                                            Premise(F46)
	S63= PC[Out]=addr                                           PC-Hold(S1,S61,S62)
	S64= CtrlIAddrReg=1                                         Premise(F47)
	S65= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S18,S64)
	S66= CtrlIMMUHitReg=1                                       Premise(F48)
	S67= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S20,S66)
	S68= CtrlICache=0                                           Premise(F49)
	S69= CtrlICacheReg=1                                        Premise(F50)
	S70= CtrlICacheHitReg=1                                     Premise(F51)
	S71= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S26,S70)
	S72= CtrlIMem=0                                             Premise(F52)
	S73= IMem[{pid,addr}]={31,rT,rA,rB,1044}                    IMem-Hold(S2,S72)
	S74= CtrlIRMux=0                                            Premise(F53)
	S75= CtrlIR=0                                               Premise(F54)
	S76= CtrlGPRegs=0                                           Premise(F55)
	S77= GPRegs[rA]=a                                           GPRegs-Hold(S3,S76)
	S78= GPRegs[rB]=b                                           GPRegs-Hold(S4,S76)
	S79= CtrlA=0                                                Premise(F56)
	S80= CtrlB=0                                                Premise(F57)
	S81= CtrlALUOut=0                                           Premise(F58)
	S82= CtrlCAReg=0                                            Premise(F59)
	S83= CtrlOVReg=0                                            Premise(F60)
	S84= CtrlXERSO=0                                            Premise(F61)
	S85= XER[SO]=so                                             XER-SO-Hold(S5,S84)
	S86= CtrlXEROV=0                                            Premise(F62)
	S87= CtrlXERCA=0                                            Premise(F63)
	S88= CtrlDR1bit=0                                           Premise(F64)

IMMU	S89= PIDReg.Out=pid                                         PIDReg-Out(S59)
	S90= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S59)
	S91= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S59)
	S92= PC.Out=addr                                            PC-Out(S63)
	S93= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S65)
	S94= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S65)
	S95= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S65)
	S96= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S67)
	S97= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S67)
	S98= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]           IMMUHitReg-Out(S67)
	S99= ICacheHitReg.Out=ICacheHit(addr)                       ICacheHitReg-Out(S71)
	S100= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S71)
	S101= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S71)
	S102= XER.SOOut=so                                          XER-SO-Out(S85)
	S103= PIDReg.Out=>IMMU.PID                                  Premise(F65)
	S104= IMMU.PID=pid                                          Path(S89,S103)
	S105= PC.Out=>IMMU.IEA                                      Premise(F66)
	S106= IMMU.IEA=addr                                         Path(S92,S105)
	S107= IMMU.Addr={pid,addr}                                  IMMU-Search(S104,S106)
	S108= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S104,S106)
	S109= IMMU.Addr=>IAddrReg.In                                Premise(F67)
	S110= IAddrReg.In={pid,addr}                                Path(S107,S109)
	S111= IMMU.Hit=>IMMUHitReg.In                               Premise(F68)
	S112= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S108,S111)
	S113= PC.Out=>ICache.IEA                                    Premise(F69)
	S114= ICache.IEA=addr                                       Path(S92,S113)
	S115= ICache.Hit=ICacheHit(addr)                            ICache-Search(S114)
	S116= ICache.Out=>ICacheReg.In                              Premise(F70)
	S117= ICache.Hit=>ICacheHitReg.In                           Premise(F71)
	S118= ICacheHitReg.In=ICacheHit(addr)                       Path(S115,S117)
	S119= IMMUHitReg.Out=>CU.IMemHit                            Premise(F72)
	S120= CU.IMemHit=IMMUHit(pid,addr)                          Path(S96,S119)
	S121= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F73)
	S122= CU.ICacheHit=ICacheHit(addr)                          Path(S99,S121)
	S123= IAddrReg.Out=>IMem.RAddr                              Premise(F74)
	S124= IMem.RAddr={pid,addr}                                 Path(S93,S123)
	S125= IMem.Out={31,rT,rA,rB,1044}                           IMem-Read(S124,S73)
	S126= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S124,S73)
	S127= IMem.Out=>IRMux.MemData                               Premise(F75)
	S128= IRMux.MemData={31,rT,rA,rB,1044}                      Path(S125,S127)
	S129= IRMux.Out={31,rT,rA,rB,1044}                          IRMux-Select(S128)
	S130= ICacheReg.Out=>IRMux.CacheData                        Premise(F76)
	S131= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F77)
	S132= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S96,S131)
	S133= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F78)
	S134= IRMux.CacheSel=ICacheHit(addr)                        Path(S99,S133)
	S135= IRMux.Out=>IR.In                                      Premise(F79)
	S136= IR.In={31,rT,rA,rB,1044}                              Path(S129,S135)
	S137= IMem.MEM8WordOut=>ICache.WData                        Premise(F80)
	S138= ICache.WData=IMemGet8Word({pid,addr})                 Path(S126,S137)
	S139= PC.Out=>ICache.IEA                                    Premise(F81)
	S140= IR.Out0_5=>CU.Op                                      Premise(F82)
	S141= IR.Out11_15=>GPRegs.RReg1                             Premise(F83)
	S142= IR.Out16_20=>GPRegs.RReg2                             Premise(F84)
	S143= IR.Out21_31=>CU.IRFunc                                Premise(F85)
	S144= GPRegs.Rdata1=>A.In                                   Premise(F86)
	S145= GPRegs.Rdata2=>B.In                                   Premise(F87)
	S146= A.Out=>ALU.A                                          Premise(F88)
	S147= B.Out=>ALU.B                                          Premise(F89)
	S148= CU.Func=>ALU.Func                                     Premise(F90)
	S149= ALU.Out=>ALUOut.In                                    Premise(F91)
	S150= ALU.CA=>CAReg.In                                      Premise(F92)
	S151= ALU.OV=>OVReg.In                                      Premise(F93)
	S152= XER.SOOut=>ORGate.A                                   Premise(F94)
	S153= ORGate.A=so                                           Path(S102,S152)
	S154= ALU.OV=>ORGate.B                                      Premise(F95)
	S155= ORGate.Out=>DR1bit.In                                 Premise(F96)
	S156= IR.Out6_10=>GPRegs.WReg                               Premise(F97)
	S157= ALUOut.Out=>GPRegs.WData                              Premise(F98)
	S158= DR1bit.Out=>XER.SOIn                                  Premise(F99)
	S159= CAReg.Out=>XER.CAIn                                   Premise(F100)
	S160= OVReg.Out=>XER.OVIn                                   Premise(F101)
	S161= CtrlPIDReg=0                                          Premise(F102)
	S162= [PIDReg]=pid                                          PIDReg-Hold(S59,S161)
	S163= CtrlIMMU=0                                            Premise(F103)
	S164= CtrlPC=0                                              Premise(F104)
	S165= CtrlPCInc=1                                           Premise(F105)
	S166= PC[Out]=addr+4                                        PC-Inc(S63,S164,S165)
	S167= PC[CIA]=addr                                          PC-Inc(S63,S164,S165)
	S168= CtrlIAddrReg=0                                        Premise(F106)
	S169= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S65,S168)
	S170= CtrlIMMUHitReg=0                                      Premise(F107)
	S171= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S67,S170)
	S172= CtrlICache=1                                          Premise(F108)
	S173= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S114,S138,S172)
	S174= CtrlICacheReg=0                                       Premise(F109)
	S175= CtrlICacheHitReg=0                                    Premise(F110)
	S176= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S71,S175)
	S177= CtrlIMem=0                                            Premise(F111)
	S178= IMem[{pid,addr}]={31,rT,rA,rB,1044}                   IMem-Hold(S73,S177)
	S179= CtrlIRMux=0                                           Premise(F112)
	S180= CtrlIR=1                                              Premise(F113)
	S181= [IR]={31,rT,rA,rB,1044}                               IR-Write(S136,S180)
	S182= CtrlGPRegs=0                                          Premise(F114)
	S183= GPRegs[rA]=a                                          GPRegs-Hold(S77,S182)
	S184= GPRegs[rB]=b                                          GPRegs-Hold(S78,S182)
	S185= CtrlA=0                                               Premise(F115)
	S186= CtrlB=0                                               Premise(F116)
	S187= CtrlALUOut=0                                          Premise(F117)
	S188= CtrlCAReg=0                                           Premise(F118)
	S189= CtrlOVReg=0                                           Premise(F119)
	S190= CtrlXERSO=0                                           Premise(F120)
	S191= XER[SO]=so                                            XER-SO-Hold(S85,S190)
	S192= CtrlXEROV=0                                           Premise(F121)
	S193= CtrlXERCA=0                                           Premise(F122)
	S194= CtrlDR1bit=0                                          Premise(F123)

ID	S195= PIDReg.Out=pid                                        PIDReg-Out(S162)
	S196= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S162)
	S197= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S162)
	S198= PC.Out=addr+4                                         PC-Out(S166)
	S199= PC.CIA=addr                                           PC-Out(S167)
	S200= PC.CIA31_28=addr[31:28]                               PC-Out(S167)
	S201= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S169)
	S202= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S169)
	S203= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S169)
	S204= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S171)
	S205= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S171)
	S206= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S171)
	S207= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S176)
	S208= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S176)
	S209= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S176)
	S210= IR.Out0_5=31                                          IR-Out(S181)
	S211= IR.Out6_10=rT                                         IR-Out(S181)
	S212= IR.Out11_15=rA                                        IR-Out(S181)
	S213= IR.Out16_20=rB                                        IR-Out(S181)
	S214= IR.Out21_31=1044                                      IR-Out(S181)
	S215= XER.SOOut=so                                          XER-SO-Out(S191)
	S216= PIDReg.Out=>IMMU.PID                                  Premise(F124)
	S217= IMMU.PID=pid                                          Path(S195,S216)
	S218= PC.Out=>IMMU.IEA                                      Premise(F125)
	S219= IMMU.IEA=addr+4                                       Path(S198,S218)
	S220= IMMU.Addr={pid,addr+4}                                IMMU-Search(S217,S219)
	S221= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S217,S219)
	S222= IMMU.Addr=>IAddrReg.In                                Premise(F126)
	S223= IAddrReg.In={pid,addr+4}                              Path(S220,S222)
	S224= IMMU.Hit=>IMMUHitReg.In                               Premise(F127)
	S225= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S221,S224)
	S226= PC.Out=>ICache.IEA                                    Premise(F128)
	S227= ICache.IEA=addr+4                                     Path(S198,S226)
	S228= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S227)
	S229= ICache.Out=>ICacheReg.In                              Premise(F129)
	S230= ICache.Hit=>ICacheHitReg.In                           Premise(F130)
	S231= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S228,S230)
	S232= IMMUHitReg.Out=>CU.IMemHit                            Premise(F131)
	S233= CU.IMemHit=IMMUHit(pid,addr)                          Path(S204,S232)
	S234= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F132)
	S235= CU.ICacheHit=ICacheHit(addr)                          Path(S207,S234)
	S236= IAddrReg.Out=>IMem.RAddr                              Premise(F133)
	S237= IMem.RAddr={pid,addr}                                 Path(S201,S236)
	S238= IMem.Out={31,rT,rA,rB,1044}                           IMem-Read(S237,S178)
	S239= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S237,S178)
	S240= IMem.Out=>IRMux.MemData                               Premise(F134)
	S241= IRMux.MemData={31,rT,rA,rB,1044}                      Path(S238,S240)
	S242= IRMux.Out={31,rT,rA,rB,1044}                          IRMux-Select(S241)
	S243= ICacheReg.Out=>IRMux.CacheData                        Premise(F135)
	S244= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F136)
	S245= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S204,S244)
	S246= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F137)
	S247= IRMux.CacheSel=ICacheHit(addr)                        Path(S207,S246)
	S248= IRMux.Out=>IR.In                                      Premise(F138)
	S249= IR.In={31,rT,rA,rB,1044}                              Path(S242,S248)
	S250= IMem.MEM8WordOut=>ICache.WData                        Premise(F139)
	S251= ICache.WData=IMemGet8Word({pid,addr})                 Path(S239,S250)
	S252= PC.Out=>ICache.IEA                                    Premise(F140)
	S253= IR.Out0_5=>CU.Op                                      Premise(F141)
	S254= CU.Op=31                                              Path(S210,S253)
	S255= IR.Out11_15=>GPRegs.RReg1                             Premise(F142)
	S256= GPRegs.RReg1=rA                                       Path(S212,S255)
	S257= GPRegs.Rdata1=a                                       GPRegs-Read(S256,S183)
	S258= IR.Out16_20=>GPRegs.RReg2                             Premise(F143)
	S259= GPRegs.RReg2=rB                                       Path(S213,S258)
	S260= GPRegs.Rdata2=b                                       GPRegs-Read(S259,S184)
	S261= IR.Out21_31=>CU.IRFunc                                Premise(F144)
	S262= CU.IRFunc=1044                                        Path(S214,S261)
	S263= CU.Func=alu_add                                       CU(S254,S262)
	S264= GPRegs.Rdata1=>A.In                                   Premise(F145)
	S265= A.In=a                                                Path(S257,S264)
	S266= GPRegs.Rdata2=>B.In                                   Premise(F146)
	S267= B.In=b                                                Path(S260,S266)
	S268= A.Out=>ALU.A                                          Premise(F147)
	S269= B.Out=>ALU.B                                          Premise(F148)
	S270= CU.Func=>ALU.Func                                     Premise(F149)
	S271= ALU.Func=alu_add                                      Path(S263,S270)
	S272= ALU.Out=>ALUOut.In                                    Premise(F150)
	S273= ALU.CA=>CAReg.In                                      Premise(F151)
	S274= ALU.OV=>OVReg.In                                      Premise(F152)
	S275= XER.SOOut=>ORGate.A                                   Premise(F153)
	S276= ORGate.A=so                                           Path(S215,S275)
	S277= ALU.OV=>ORGate.B                                      Premise(F154)
	S278= ORGate.Out=>DR1bit.In                                 Premise(F155)
	S279= IR.Out6_10=>GPRegs.WReg                               Premise(F156)
	S280= GPRegs.WReg=rT                                        Path(S211,S279)
	S281= ALUOut.Out=>GPRegs.WData                              Premise(F157)
	S282= DR1bit.Out=>XER.SOIn                                  Premise(F158)
	S283= CAReg.Out=>XER.CAIn                                   Premise(F159)
	S284= OVReg.Out=>XER.OVIn                                   Premise(F160)
	S285= CtrlPIDReg=0                                          Premise(F161)
	S286= [PIDReg]=pid                                          PIDReg-Hold(S162,S285)
	S287= CtrlIMMU=0                                            Premise(F162)
	S288= CtrlPC=0                                              Premise(F163)
	S289= CtrlPCInc=0                                           Premise(F164)
	S290= PC[CIA]=addr                                          PC-Hold(S167,S289)
	S291= PC[Out]=addr+4                                        PC-Hold(S166,S288,S289)
	S292= CtrlIAddrReg=0                                        Premise(F165)
	S293= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S169,S292)
	S294= CtrlIMMUHitReg=0                                      Premise(F166)
	S295= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S171,S294)
	S296= CtrlICache=0                                          Premise(F167)
	S297= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S173,S296)
	S298= CtrlICacheReg=0                                       Premise(F168)
	S299= CtrlICacheHitReg=0                                    Premise(F169)
	S300= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S176,S299)
	S301= CtrlIMem=0                                            Premise(F170)
	S302= IMem[{pid,addr}]={31,rT,rA,rB,1044}                   IMem-Hold(S178,S301)
	S303= CtrlIRMux=0                                           Premise(F171)
	S304= CtrlIR=0                                              Premise(F172)
	S305= [IR]={31,rT,rA,rB,1044}                               IR-Hold(S181,S304)
	S306= CtrlGPRegs=0                                          Premise(F173)
	S307= GPRegs[rA]=a                                          GPRegs-Hold(S183,S306)
	S308= GPRegs[rB]=b                                          GPRegs-Hold(S184,S306)
	S309= CtrlA=1                                               Premise(F174)
	S310= [A]=a                                                 A-Write(S265,S309)
	S311= CtrlB=1                                               Premise(F175)
	S312= [B]=b                                                 B-Write(S267,S311)
	S313= CtrlALUOut=0                                          Premise(F176)
	S314= CtrlCAReg=0                                           Premise(F177)
	S315= CtrlOVReg=0                                           Premise(F178)
	S316= CtrlXERSO=0                                           Premise(F179)
	S317= XER[SO]=so                                            XER-SO-Hold(S191,S316)
	S318= CtrlXEROV=0                                           Premise(F180)
	S319= CtrlXERCA=0                                           Premise(F181)
	S320= CtrlDR1bit=0                                          Premise(F182)

EX	S321= PIDReg.Out=pid                                        PIDReg-Out(S286)
	S322= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S286)
	S323= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S286)
	S324= PC.CIA=addr                                           PC-Out(S290)
	S325= PC.CIA31_28=addr[31:28]                               PC-Out(S290)
	S326= PC.Out=addr+4                                         PC-Out(S291)
	S327= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S293)
	S328= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S293)
	S329= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S293)
	S330= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S295)
	S331= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S295)
	S332= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S295)
	S333= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S300)
	S334= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S300)
	S335= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S300)
	S336= IR.Out0_5=31                                          IR-Out(S305)
	S337= IR.Out6_10=rT                                         IR-Out(S305)
	S338= IR.Out11_15=rA                                        IR-Out(S305)
	S339= IR.Out16_20=rB                                        IR-Out(S305)
	S340= IR.Out21_31=1044                                      IR-Out(S305)
	S341= A.Out=a                                               A-Out(S310)
	S342= A.Out26_31=a[26:31]                                   A-Out(S310)
	S343= A.Out30_31=a[30:31]                                   A-Out(S310)
	S344= B.Out=b                                               B-Out(S312)
	S345= B.Out26_31=b[26:31]                                   B-Out(S312)
	S346= B.Out30_31=b[30:31]                                   B-Out(S312)
	S347= XER.SOOut=so                                          XER-SO-Out(S317)
	S348= PIDReg.Out=>IMMU.PID                                  Premise(F183)
	S349= IMMU.PID=pid                                          Path(S321,S348)
	S350= PC.Out=>IMMU.IEA                                      Premise(F184)
	S351= IMMU.IEA=addr+4                                       Path(S326,S350)
	S352= IMMU.Addr={pid,addr+4}                                IMMU-Search(S349,S351)
	S353= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S349,S351)
	S354= IMMU.Addr=>IAddrReg.In                                Premise(F185)
	S355= IAddrReg.In={pid,addr+4}                              Path(S352,S354)
	S356= IMMU.Hit=>IMMUHitReg.In                               Premise(F186)
	S357= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S353,S356)
	S358= PC.Out=>ICache.IEA                                    Premise(F187)
	S359= ICache.IEA=addr+4                                     Path(S326,S358)
	S360= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S359)
	S361= ICache.Out=>ICacheReg.In                              Premise(F188)
	S362= ICache.Hit=>ICacheHitReg.In                           Premise(F189)
	S363= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S360,S362)
	S364= IMMUHitReg.Out=>CU.IMemHit                            Premise(F190)
	S365= CU.IMemHit=IMMUHit(pid,addr)                          Path(S330,S364)
	S366= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F191)
	S367= CU.ICacheHit=ICacheHit(addr)                          Path(S333,S366)
	S368= IAddrReg.Out=>IMem.RAddr                              Premise(F192)
	S369= IMem.RAddr={pid,addr}                                 Path(S327,S368)
	S370= IMem.Out={31,rT,rA,rB,1044}                           IMem-Read(S369,S302)
	S371= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S369,S302)
	S372= IMem.Out=>IRMux.MemData                               Premise(F193)
	S373= IRMux.MemData={31,rT,rA,rB,1044}                      Path(S370,S372)
	S374= IRMux.Out={31,rT,rA,rB,1044}                          IRMux-Select(S373)
	S375= ICacheReg.Out=>IRMux.CacheData                        Premise(F194)
	S376= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F195)
	S377= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S330,S376)
	S378= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F196)
	S379= IRMux.CacheSel=ICacheHit(addr)                        Path(S333,S378)
	S380= IRMux.Out=>IR.In                                      Premise(F197)
	S381= IR.In={31,rT,rA,rB,1044}                              Path(S374,S380)
	S382= IMem.MEM8WordOut=>ICache.WData                        Premise(F198)
	S383= ICache.WData=IMemGet8Word({pid,addr})                 Path(S371,S382)
	S384= PC.Out=>ICache.IEA                                    Premise(F199)
	S385= IR.Out0_5=>CU.Op                                      Premise(F200)
	S386= CU.Op=31                                              Path(S336,S385)
	S387= IR.Out11_15=>GPRegs.RReg1                             Premise(F201)
	S388= GPRegs.RReg1=rA                                       Path(S338,S387)
	S389= GPRegs.Rdata1=a                                       GPRegs-Read(S388,S307)
	S390= IR.Out16_20=>GPRegs.RReg2                             Premise(F202)
	S391= GPRegs.RReg2=rB                                       Path(S339,S390)
	S392= GPRegs.Rdata2=b                                       GPRegs-Read(S391,S308)
	S393= IR.Out21_31=>CU.IRFunc                                Premise(F203)
	S394= CU.IRFunc=1044                                        Path(S340,S393)
	S395= CU.Func=alu_add                                       CU(S386,S394)
	S396= GPRegs.Rdata1=>A.In                                   Premise(F204)
	S397= A.In=a                                                Path(S389,S396)
	S398= GPRegs.Rdata2=>B.In                                   Premise(F205)
	S399= B.In=b                                                Path(S392,S398)
	S400= A.Out=>ALU.A                                          Premise(F206)
	S401= ALU.A=a                                               Path(S341,S400)
	S402= B.Out=>ALU.B                                          Premise(F207)
	S403= ALU.B=b                                               Path(S344,S402)
	S404= CU.Func=>ALU.Func                                     Premise(F208)
	S405= ALU.Func=alu_add                                      Path(S395,S404)
	S406= ALU.Out=a+b                                           ALU(S401,S403)
	S407= ALU.CMP=Compare0(a+b)                                 ALU(S401,S403)
	S408= ALU.OV=OverFlow(a+b)                                  ALU(S401,S403)
	S409= ALU.CA=Carry(a+b)                                     ALU(S401,S403)
	S410= ALU.Out=>ALUOut.In                                    Premise(F209)
	S411= ALUOut.In=a+b                                         Path(S406,S410)
	S412= ALU.CA=>CAReg.In                                      Premise(F210)
	S413= CAReg.In=Carry(a+b)                                   Path(S409,S412)
	S414= ALU.OV=>OVReg.In                                      Premise(F211)
	S415= OVReg.In=OverFlow(a+b)                                Path(S408,S414)
	S416= XER.SOOut=>ORGate.A                                   Premise(F212)
	S417= ORGate.A=so                                           Path(S347,S416)
	S418= ALU.OV=>ORGate.B                                      Premise(F213)
	S419= ORGate.B=OverFlow(a+b)                                Path(S408,S418)
	S420= ORGate.Out=so|OverFlow(a+b)                           ORGate(S417,S419)
	S421= ORGate.Out=>DR1bit.In                                 Premise(F214)
	S422= DR1bit.In=so|OverFlow(a+b)                            Path(S420,S421)
	S423= IR.Out6_10=>GPRegs.WReg                               Premise(F215)
	S424= GPRegs.WReg=rT                                        Path(S337,S423)
	S425= ALUOut.Out=>GPRegs.WData                              Premise(F216)
	S426= DR1bit.Out=>XER.SOIn                                  Premise(F217)
	S427= CAReg.Out=>XER.CAIn                                   Premise(F218)
	S428= OVReg.Out=>XER.OVIn                                   Premise(F219)
	S429= CtrlPIDReg=0                                          Premise(F220)
	S430= [PIDReg]=pid                                          PIDReg-Hold(S286,S429)
	S431= CtrlIMMU=0                                            Premise(F221)
	S432= CtrlPC=0                                              Premise(F222)
	S433= CtrlPCInc=0                                           Premise(F223)
	S434= PC[CIA]=addr                                          PC-Hold(S290,S433)
	S435= PC[Out]=addr+4                                        PC-Hold(S291,S432,S433)
	S436= CtrlIAddrReg=0                                        Premise(F224)
	S437= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S293,S436)
	S438= CtrlIMMUHitReg=0                                      Premise(F225)
	S439= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S295,S438)
	S440= CtrlICache=0                                          Premise(F226)
	S441= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S297,S440)
	S442= CtrlICacheReg=0                                       Premise(F227)
	S443= CtrlICacheHitReg=0                                    Premise(F228)
	S444= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S300,S443)
	S445= CtrlIMem=0                                            Premise(F229)
	S446= IMem[{pid,addr}]={31,rT,rA,rB,1044}                   IMem-Hold(S302,S445)
	S447= CtrlIRMux=0                                           Premise(F230)
	S448= CtrlIR=0                                              Premise(F231)
	S449= [IR]={31,rT,rA,rB,1044}                               IR-Hold(S305,S448)
	S450= CtrlGPRegs=0                                          Premise(F232)
	S451= GPRegs[rA]=a                                          GPRegs-Hold(S307,S450)
	S452= GPRegs[rB]=b                                          GPRegs-Hold(S308,S450)
	S453= CtrlA=0                                               Premise(F233)
	S454= [A]=a                                                 A-Hold(S310,S453)
	S455= CtrlB=0                                               Premise(F234)
	S456= [B]=b                                                 B-Hold(S312,S455)
	S457= CtrlALUOut=1                                          Premise(F235)
	S458= [ALUOut]=a+b                                          ALUOut-Write(S411,S457)
	S459= CtrlCAReg=1                                           Premise(F236)
	S460= [CAReg]=Carry(a+b)                                    CAReg-Write(S413,S459)
	S461= CtrlOVReg=1                                           Premise(F237)
	S462= [OVReg]=OverFlow(a+b)                                 OVReg-Write(S415,S461)
	S463= CtrlXERSO=0                                           Premise(F238)
	S464= XER[SO]=so                                            XER-SO-Hold(S317,S463)
	S465= CtrlXEROV=0                                           Premise(F239)
	S466= CtrlXERCA=0                                           Premise(F240)
	S467= CtrlDR1bit=1                                          Premise(F241)
	S468= [DR1bit]=so|OverFlow(a+b)                             DR1bit-Write(S422,S467)

MEM	S469= PIDReg.Out=pid                                        PIDReg-Out(S430)
	S470= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S430)
	S471= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S430)
	S472= PC.CIA=addr                                           PC-Out(S434)
	S473= PC.CIA31_28=addr[31:28]                               PC-Out(S434)
	S474= PC.Out=addr+4                                         PC-Out(S435)
	S475= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S437)
	S476= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S437)
	S477= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S437)
	S478= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S439)
	S479= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S439)
	S480= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S439)
	S481= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S444)
	S482= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S444)
	S483= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S444)
	S484= IR.Out0_5=31                                          IR-Out(S449)
	S485= IR.Out6_10=rT                                         IR-Out(S449)
	S486= IR.Out11_15=rA                                        IR-Out(S449)
	S487= IR.Out16_20=rB                                        IR-Out(S449)
	S488= IR.Out21_31=1044                                      IR-Out(S449)
	S489= A.Out=a                                               A-Out(S454)
	S490= A.Out26_31=a[26:31]                                   A-Out(S454)
	S491= A.Out30_31=a[30:31]                                   A-Out(S454)
	S492= B.Out=b                                               B-Out(S456)
	S493= B.Out26_31=b[26:31]                                   B-Out(S456)
	S494= B.Out30_31=b[30:31]                                   B-Out(S456)
	S495= ALUOut.Out=a+b                                        ALUOut-Out(S458)
	S496= ALUOut.Out26_31=a+b[26:31]                            ALUOut-Out(S458)
	S497= ALUOut.Out30_31=a+b[30:31]                            ALUOut-Out(S458)
	S498= CAReg.Out=Carry(a+b)                                  CAReg-Out(S460)
	S499= CAReg.Out26_31=Carry(a+b)[26:31]                      CAReg-Out(S460)
	S500= CAReg.Out30_31=Carry(a+b)[30:31]                      CAReg-Out(S460)
	S501= OVReg.Out=OverFlow(a+b)                               OVReg-Out(S462)
	S502= OVReg.Out26_31=OverFlow(a+b)[26:31]                   OVReg-Out(S462)
	S503= OVReg.Out30_31=OverFlow(a+b)[30:31]                   OVReg-Out(S462)
	S504= XER.SOOut=so                                          XER-SO-Out(S464)
	S505= DR1bit.Out=so|OverFlow(a+b)                           DR1bit-Out(S468)
	S506= DR1bit.Out26_31=so|OverFlow(a+b)[26:31]               DR1bit-Out(S468)
	S507= DR1bit.Out30_31=so|OverFlow(a+b)[30:31]               DR1bit-Out(S468)
	S508= PIDReg.Out=>IMMU.PID                                  Premise(F242)
	S509= IMMU.PID=pid                                          Path(S469,S508)
	S510= PC.Out=>IMMU.IEA                                      Premise(F243)
	S511= IMMU.IEA=addr+4                                       Path(S474,S510)
	S512= IMMU.Addr={pid,addr+4}                                IMMU-Search(S509,S511)
	S513= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S509,S511)
	S514= IMMU.Addr=>IAddrReg.In                                Premise(F244)
	S515= IAddrReg.In={pid,addr+4}                              Path(S512,S514)
	S516= IMMU.Hit=>IMMUHitReg.In                               Premise(F245)
	S517= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S513,S516)
	S518= PC.Out=>ICache.IEA                                    Premise(F246)
	S519= ICache.IEA=addr+4                                     Path(S474,S518)
	S520= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S519)
	S521= ICache.Out=>ICacheReg.In                              Premise(F247)
	S522= ICache.Hit=>ICacheHitReg.In                           Premise(F248)
	S523= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S520,S522)
	S524= IMMUHitReg.Out=>CU.IMemHit                            Premise(F249)
	S525= CU.IMemHit=IMMUHit(pid,addr)                          Path(S478,S524)
	S526= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F250)
	S527= CU.ICacheHit=ICacheHit(addr)                          Path(S481,S526)
	S528= IAddrReg.Out=>IMem.RAddr                              Premise(F251)
	S529= IMem.RAddr={pid,addr}                                 Path(S475,S528)
	S530= IMem.Out={31,rT,rA,rB,1044}                           IMem-Read(S529,S446)
	S531= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S529,S446)
	S532= IMem.Out=>IRMux.MemData                               Premise(F252)
	S533= IRMux.MemData={31,rT,rA,rB,1044}                      Path(S530,S532)
	S534= IRMux.Out={31,rT,rA,rB,1044}                          IRMux-Select(S533)
	S535= ICacheReg.Out=>IRMux.CacheData                        Premise(F253)
	S536= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F254)
	S537= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S478,S536)
	S538= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F255)
	S539= IRMux.CacheSel=ICacheHit(addr)                        Path(S481,S538)
	S540= IRMux.Out=>IR.In                                      Premise(F256)
	S541= IR.In={31,rT,rA,rB,1044}                              Path(S534,S540)
	S542= IMem.MEM8WordOut=>ICache.WData                        Premise(F257)
	S543= ICache.WData=IMemGet8Word({pid,addr})                 Path(S531,S542)
	S544= PC.Out=>ICache.IEA                                    Premise(F258)
	S545= IR.Out0_5=>CU.Op                                      Premise(F259)
	S546= CU.Op=31                                              Path(S484,S545)
	S547= IR.Out11_15=>GPRegs.RReg1                             Premise(F260)
	S548= GPRegs.RReg1=rA                                       Path(S486,S547)
	S549= GPRegs.Rdata1=a                                       GPRegs-Read(S548,S451)
	S550= IR.Out16_20=>GPRegs.RReg2                             Premise(F261)
	S551= GPRegs.RReg2=rB                                       Path(S487,S550)
	S552= GPRegs.Rdata2=b                                       GPRegs-Read(S551,S452)
	S553= IR.Out21_31=>CU.IRFunc                                Premise(F262)
	S554= CU.IRFunc=1044                                        Path(S488,S553)
	S555= CU.Func=alu_add                                       CU(S546,S554)
	S556= GPRegs.Rdata1=>A.In                                   Premise(F263)
	S557= A.In=a                                                Path(S549,S556)
	S558= GPRegs.Rdata2=>B.In                                   Premise(F264)
	S559= B.In=b                                                Path(S552,S558)
	S560= A.Out=>ALU.A                                          Premise(F265)
	S561= ALU.A=a                                               Path(S489,S560)
	S562= B.Out=>ALU.B                                          Premise(F266)
	S563= ALU.B=b                                               Path(S492,S562)
	S564= CU.Func=>ALU.Func                                     Premise(F267)
	S565= ALU.Func=alu_add                                      Path(S555,S564)
	S566= ALU.Out=a+b                                           ALU(S561,S563)
	S567= ALU.CMP=Compare0(a+b)                                 ALU(S561,S563)
	S568= ALU.OV=OverFlow(a+b)                                  ALU(S561,S563)
	S569= ALU.CA=Carry(a+b)                                     ALU(S561,S563)
	S570= ALU.Out=>ALUOut.In                                    Premise(F268)
	S571= ALUOut.In=a+b                                         Path(S566,S570)
	S572= ALU.CA=>CAReg.In                                      Premise(F269)
	S573= CAReg.In=Carry(a+b)                                   Path(S569,S572)
	S574= ALU.OV=>OVReg.In                                      Premise(F270)
	S575= OVReg.In=OverFlow(a+b)                                Path(S568,S574)
	S576= XER.SOOut=>ORGate.A                                   Premise(F271)
	S577= ORGate.A=so                                           Path(S504,S576)
	S578= ALU.OV=>ORGate.B                                      Premise(F272)
	S579= ORGate.B=OverFlow(a+b)                                Path(S568,S578)
	S580= ORGate.Out=so|OverFlow(a+b)                           ORGate(S577,S579)
	S581= ORGate.Out=>DR1bit.In                                 Premise(F273)
	S582= DR1bit.In=so|OverFlow(a+b)                            Path(S580,S581)
	S583= IR.Out6_10=>GPRegs.WReg                               Premise(F274)
	S584= GPRegs.WReg=rT                                        Path(S485,S583)
	S585= ALUOut.Out=>GPRegs.WData                              Premise(F275)
	S586= GPRegs.WData=a+b                                      Path(S495,S585)
	S587= DR1bit.Out=>XER.SOIn                                  Premise(F276)
	S588= XER.SOIn=so|OverFlow(a+b)                             Path(S505,S587)
	S589= CAReg.Out=>XER.CAIn                                   Premise(F277)
	S590= XER.CAIn=Carry(a+b)                                   Path(S498,S589)
	S591= OVReg.Out=>XER.OVIn                                   Premise(F278)
	S592= XER.OVIn=OverFlow(a+b)                                Path(S501,S591)
	S593= CtrlPIDReg=0                                          Premise(F279)
	S594= [PIDReg]=pid                                          PIDReg-Hold(S430,S593)
	S595= CtrlIMMU=0                                            Premise(F280)
	S596= CtrlPC=0                                              Premise(F281)
	S597= CtrlPCInc=0                                           Premise(F282)
	S598= PC[CIA]=addr                                          PC-Hold(S434,S597)
	S599= PC[Out]=addr+4                                        PC-Hold(S435,S596,S597)
	S600= CtrlIAddrReg=0                                        Premise(F283)
	S601= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S437,S600)
	S602= CtrlIMMUHitReg=0                                      Premise(F284)
	S603= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S439,S602)
	S604= CtrlICache=0                                          Premise(F285)
	S605= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S441,S604)
	S606= CtrlICacheReg=0                                       Premise(F286)
	S607= CtrlICacheHitReg=0                                    Premise(F287)
	S608= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S444,S607)
	S609= CtrlIMem=0                                            Premise(F288)
	S610= IMem[{pid,addr}]={31,rT,rA,rB,1044}                   IMem-Hold(S446,S609)
	S611= CtrlIRMux=0                                           Premise(F289)
	S612= CtrlIR=0                                              Premise(F290)
	S613= [IR]={31,rT,rA,rB,1044}                               IR-Hold(S449,S612)
	S614= CtrlGPRegs=0                                          Premise(F291)
	S615= GPRegs[rA]=a                                          GPRegs-Hold(S451,S614)
	S616= GPRegs[rB]=b                                          GPRegs-Hold(S452,S614)
	S617= CtrlA=0                                               Premise(F292)
	S618= [A]=a                                                 A-Hold(S454,S617)
	S619= CtrlB=0                                               Premise(F293)
	S620= [B]=b                                                 B-Hold(S456,S619)
	S621= CtrlALUOut=0                                          Premise(F294)
	S622= [ALUOut]=a+b                                          ALUOut-Hold(S458,S621)
	S623= CtrlCAReg=0                                           Premise(F295)
	S624= [CAReg]=Carry(a+b)                                    CAReg-Hold(S460,S623)
	S625= CtrlOVReg=0                                           Premise(F296)
	S626= [OVReg]=OverFlow(a+b)                                 OVReg-Hold(S462,S625)
	S627= CtrlXERSO=0                                           Premise(F297)
	S628= XER[SO]=so                                            XER-SO-Hold(S464,S627)
	S629= CtrlXEROV=0                                           Premise(F298)
	S630= CtrlXERCA=0                                           Premise(F299)
	S631= CtrlDR1bit=0                                          Premise(F300)
	S632= [DR1bit]=so|OverFlow(a+b)                             DR1bit-Hold(S468,S631)

DMMU1	S633= PIDReg.Out=pid                                        PIDReg-Out(S594)
	S634= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S594)
	S635= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S594)
	S636= PC.CIA=addr                                           PC-Out(S598)
	S637= PC.CIA31_28=addr[31:28]                               PC-Out(S598)
	S638= PC.Out=addr+4                                         PC-Out(S599)
	S639= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S601)
	S640= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S601)
	S641= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S601)
	S642= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S603)
	S643= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S603)
	S644= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S603)
	S645= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S608)
	S646= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S608)
	S647= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S608)
	S648= IR.Out0_5=31                                          IR-Out(S613)
	S649= IR.Out6_10=rT                                         IR-Out(S613)
	S650= IR.Out11_15=rA                                        IR-Out(S613)
	S651= IR.Out16_20=rB                                        IR-Out(S613)
	S652= IR.Out21_31=1044                                      IR-Out(S613)
	S653= A.Out=a                                               A-Out(S618)
	S654= A.Out26_31=a[26:31]                                   A-Out(S618)
	S655= A.Out30_31=a[30:31]                                   A-Out(S618)
	S656= B.Out=b                                               B-Out(S620)
	S657= B.Out26_31=b[26:31]                                   B-Out(S620)
	S658= B.Out30_31=b[30:31]                                   B-Out(S620)
	S659= ALUOut.Out=a+b                                        ALUOut-Out(S622)
	S660= ALUOut.Out26_31=a+b[26:31]                            ALUOut-Out(S622)
	S661= ALUOut.Out30_31=a+b[30:31]                            ALUOut-Out(S622)
	S662= CAReg.Out=Carry(a+b)                                  CAReg-Out(S624)
	S663= CAReg.Out26_31=Carry(a+b)[26:31]                      CAReg-Out(S624)
	S664= CAReg.Out30_31=Carry(a+b)[30:31]                      CAReg-Out(S624)
	S665= OVReg.Out=OverFlow(a+b)                               OVReg-Out(S626)
	S666= OVReg.Out26_31=OverFlow(a+b)[26:31]                   OVReg-Out(S626)
	S667= OVReg.Out30_31=OverFlow(a+b)[30:31]                   OVReg-Out(S626)
	S668= XER.SOOut=so                                          XER-SO-Out(S628)
	S669= DR1bit.Out=so|OverFlow(a+b)                           DR1bit-Out(S632)
	S670= DR1bit.Out26_31=so|OverFlow(a+b)[26:31]               DR1bit-Out(S632)
	S671= DR1bit.Out30_31=so|OverFlow(a+b)[30:31]               DR1bit-Out(S632)
	S672= PIDReg.Out=>IMMU.PID                                  Premise(F301)
	S673= IMMU.PID=pid                                          Path(S633,S672)
	S674= PC.Out=>IMMU.IEA                                      Premise(F302)
	S675= IMMU.IEA=addr+4                                       Path(S638,S674)
	S676= IMMU.Addr={pid,addr+4}                                IMMU-Search(S673,S675)
	S677= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S673,S675)
	S678= IMMU.Addr=>IAddrReg.In                                Premise(F303)
	S679= IAddrReg.In={pid,addr+4}                              Path(S676,S678)
	S680= IMMU.Hit=>IMMUHitReg.In                               Premise(F304)
	S681= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S677,S680)
	S682= PC.Out=>ICache.IEA                                    Premise(F305)
	S683= ICache.IEA=addr+4                                     Path(S638,S682)
	S684= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S683)
	S685= ICache.Out=>ICacheReg.In                              Premise(F306)
	S686= ICache.Hit=>ICacheHitReg.In                           Premise(F307)
	S687= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S684,S686)
	S688= IMMUHitReg.Out=>CU.IMemHit                            Premise(F308)
	S689= CU.IMemHit=IMMUHit(pid,addr)                          Path(S642,S688)
	S690= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F309)
	S691= CU.ICacheHit=ICacheHit(addr)                          Path(S645,S690)
	S692= IAddrReg.Out=>IMem.RAddr                              Premise(F310)
	S693= IMem.RAddr={pid,addr}                                 Path(S639,S692)
	S694= IMem.Out={31,rT,rA,rB,1044}                           IMem-Read(S693,S610)
	S695= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S693,S610)
	S696= IMem.Out=>IRMux.MemData                               Premise(F311)
	S697= IRMux.MemData={31,rT,rA,rB,1044}                      Path(S694,S696)
	S698= IRMux.Out={31,rT,rA,rB,1044}                          IRMux-Select(S697)
	S699= ICacheReg.Out=>IRMux.CacheData                        Premise(F312)
	S700= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F313)
	S701= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S642,S700)
	S702= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F314)
	S703= IRMux.CacheSel=ICacheHit(addr)                        Path(S645,S702)
	S704= IRMux.Out=>IR.In                                      Premise(F315)
	S705= IR.In={31,rT,rA,rB,1044}                              Path(S698,S704)
	S706= IMem.MEM8WordOut=>ICache.WData                        Premise(F316)
	S707= ICache.WData=IMemGet8Word({pid,addr})                 Path(S695,S706)
	S708= PC.Out=>ICache.IEA                                    Premise(F317)
	S709= IR.Out0_5=>CU.Op                                      Premise(F318)
	S710= CU.Op=31                                              Path(S648,S709)
	S711= IR.Out11_15=>GPRegs.RReg1                             Premise(F319)
	S712= GPRegs.RReg1=rA                                       Path(S650,S711)
	S713= GPRegs.Rdata1=a                                       GPRegs-Read(S712,S615)
	S714= IR.Out16_20=>GPRegs.RReg2                             Premise(F320)
	S715= GPRegs.RReg2=rB                                       Path(S651,S714)
	S716= GPRegs.Rdata2=b                                       GPRegs-Read(S715,S616)
	S717= IR.Out21_31=>CU.IRFunc                                Premise(F321)
	S718= CU.IRFunc=1044                                        Path(S652,S717)
	S719= CU.Func=alu_add                                       CU(S710,S718)
	S720= GPRegs.Rdata1=>A.In                                   Premise(F322)
	S721= A.In=a                                                Path(S713,S720)
	S722= GPRegs.Rdata2=>B.In                                   Premise(F323)
	S723= B.In=b                                                Path(S716,S722)
	S724= A.Out=>ALU.A                                          Premise(F324)
	S725= ALU.A=a                                               Path(S653,S724)
	S726= B.Out=>ALU.B                                          Premise(F325)
	S727= ALU.B=b                                               Path(S656,S726)
	S728= CU.Func=>ALU.Func                                     Premise(F326)
	S729= ALU.Func=alu_add                                      Path(S719,S728)
	S730= ALU.Out=a+b                                           ALU(S725,S727)
	S731= ALU.CMP=Compare0(a+b)                                 ALU(S725,S727)
	S732= ALU.OV=OverFlow(a+b)                                  ALU(S725,S727)
	S733= ALU.CA=Carry(a+b)                                     ALU(S725,S727)
	S734= ALU.Out=>ALUOut.In                                    Premise(F327)
	S735= ALUOut.In=a+b                                         Path(S730,S734)
	S736= ALU.CA=>CAReg.In                                      Premise(F328)
	S737= CAReg.In=Carry(a+b)                                   Path(S733,S736)
	S738= ALU.OV=>OVReg.In                                      Premise(F329)
	S739= OVReg.In=OverFlow(a+b)                                Path(S732,S738)
	S740= XER.SOOut=>ORGate.A                                   Premise(F330)
	S741= ORGate.A=so                                           Path(S668,S740)
	S742= ALU.OV=>ORGate.B                                      Premise(F331)
	S743= ORGate.B=OverFlow(a+b)                                Path(S732,S742)
	S744= ORGate.Out=so|OverFlow(a+b)                           ORGate(S741,S743)
	S745= ORGate.Out=>DR1bit.In                                 Premise(F332)
	S746= DR1bit.In=so|OverFlow(a+b)                            Path(S744,S745)
	S747= IR.Out6_10=>GPRegs.WReg                               Premise(F333)
	S748= GPRegs.WReg=rT                                        Path(S649,S747)
	S749= ALUOut.Out=>GPRegs.WData                              Premise(F334)
	S750= GPRegs.WData=a+b                                      Path(S659,S749)
	S751= DR1bit.Out=>XER.SOIn                                  Premise(F335)
	S752= XER.SOIn=so|OverFlow(a+b)                             Path(S669,S751)
	S753= CAReg.Out=>XER.CAIn                                   Premise(F336)
	S754= XER.CAIn=Carry(a+b)                                   Path(S662,S753)
	S755= OVReg.Out=>XER.OVIn                                   Premise(F337)
	S756= XER.OVIn=OverFlow(a+b)                                Path(S665,S755)
	S757= CtrlPIDReg=0                                          Premise(F338)
	S758= [PIDReg]=pid                                          PIDReg-Hold(S594,S757)
	S759= CtrlIMMU=0                                            Premise(F339)
	S760= CtrlPC=0                                              Premise(F340)
	S761= CtrlPCInc=0                                           Premise(F341)
	S762= PC[CIA]=addr                                          PC-Hold(S598,S761)
	S763= PC[Out]=addr+4                                        PC-Hold(S599,S760,S761)
	S764= CtrlIAddrReg=0                                        Premise(F342)
	S765= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S601,S764)
	S766= CtrlIMMUHitReg=0                                      Premise(F343)
	S767= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S603,S766)
	S768= CtrlICache=0                                          Premise(F344)
	S769= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S605,S768)
	S770= CtrlICacheReg=0                                       Premise(F345)
	S771= CtrlICacheHitReg=0                                    Premise(F346)
	S772= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S608,S771)
	S773= CtrlIMem=0                                            Premise(F347)
	S774= IMem[{pid,addr}]={31,rT,rA,rB,1044}                   IMem-Hold(S610,S773)
	S775= CtrlIRMux=0                                           Premise(F348)
	S776= CtrlIR=0                                              Premise(F349)
	S777= [IR]={31,rT,rA,rB,1044}                               IR-Hold(S613,S776)
	S778= CtrlGPRegs=0                                          Premise(F350)
	S779= GPRegs[rA]=a                                          GPRegs-Hold(S615,S778)
	S780= GPRegs[rB]=b                                          GPRegs-Hold(S616,S778)
	S781= CtrlA=0                                               Premise(F351)
	S782= [A]=a                                                 A-Hold(S618,S781)
	S783= CtrlB=0                                               Premise(F352)
	S784= [B]=b                                                 B-Hold(S620,S783)
	S785= CtrlALUOut=0                                          Premise(F353)
	S786= [ALUOut]=a+b                                          ALUOut-Hold(S622,S785)
	S787= CtrlCAReg=0                                           Premise(F354)
	S788= [CAReg]=Carry(a+b)                                    CAReg-Hold(S624,S787)
	S789= CtrlOVReg=0                                           Premise(F355)
	S790= [OVReg]=OverFlow(a+b)                                 OVReg-Hold(S626,S789)
	S791= CtrlXERSO=0                                           Premise(F356)
	S792= XER[SO]=so                                            XER-SO-Hold(S628,S791)
	S793= CtrlXEROV=0                                           Premise(F357)
	S794= CtrlXERCA=0                                           Premise(F358)
	S795= CtrlDR1bit=0                                          Premise(F359)
	S796= [DR1bit]=so|OverFlow(a+b)                             DR1bit-Hold(S632,S795)

DMMU2	S797= PIDReg.Out=pid                                        PIDReg-Out(S758)
	S798= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S758)
	S799= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S758)
	S800= PC.CIA=addr                                           PC-Out(S762)
	S801= PC.CIA31_28=addr[31:28]                               PC-Out(S762)
	S802= PC.Out=addr+4                                         PC-Out(S763)
	S803= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S765)
	S804= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S765)
	S805= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S765)
	S806= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S767)
	S807= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S767)
	S808= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S767)
	S809= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S772)
	S810= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S772)
	S811= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S772)
	S812= IR.Out0_5=31                                          IR-Out(S777)
	S813= IR.Out6_10=rT                                         IR-Out(S777)
	S814= IR.Out11_15=rA                                        IR-Out(S777)
	S815= IR.Out16_20=rB                                        IR-Out(S777)
	S816= IR.Out21_31=1044                                      IR-Out(S777)
	S817= A.Out=a                                               A-Out(S782)
	S818= A.Out26_31=a[26:31]                                   A-Out(S782)
	S819= A.Out30_31=a[30:31]                                   A-Out(S782)
	S820= B.Out=b                                               B-Out(S784)
	S821= B.Out26_31=b[26:31]                                   B-Out(S784)
	S822= B.Out30_31=b[30:31]                                   B-Out(S784)
	S823= ALUOut.Out=a+b                                        ALUOut-Out(S786)
	S824= ALUOut.Out26_31=a+b[26:31]                            ALUOut-Out(S786)
	S825= ALUOut.Out30_31=a+b[30:31]                            ALUOut-Out(S786)
	S826= CAReg.Out=Carry(a+b)                                  CAReg-Out(S788)
	S827= CAReg.Out26_31=Carry(a+b)[26:31]                      CAReg-Out(S788)
	S828= CAReg.Out30_31=Carry(a+b)[30:31]                      CAReg-Out(S788)
	S829= OVReg.Out=OverFlow(a+b)                               OVReg-Out(S790)
	S830= OVReg.Out26_31=OverFlow(a+b)[26:31]                   OVReg-Out(S790)
	S831= OVReg.Out30_31=OverFlow(a+b)[30:31]                   OVReg-Out(S790)
	S832= XER.SOOut=so                                          XER-SO-Out(S792)
	S833= DR1bit.Out=so|OverFlow(a+b)                           DR1bit-Out(S796)
	S834= DR1bit.Out26_31=so|OverFlow(a+b)[26:31]               DR1bit-Out(S796)
	S835= DR1bit.Out30_31=so|OverFlow(a+b)[30:31]               DR1bit-Out(S796)
	S836= PIDReg.Out=>IMMU.PID                                  Premise(F360)
	S837= IMMU.PID=pid                                          Path(S797,S836)
	S838= PC.Out=>IMMU.IEA                                      Premise(F361)
	S839= IMMU.IEA=addr+4                                       Path(S802,S838)
	S840= IMMU.Addr={pid,addr+4}                                IMMU-Search(S837,S839)
	S841= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S837,S839)
	S842= IMMU.Addr=>IAddrReg.In                                Premise(F362)
	S843= IAddrReg.In={pid,addr+4}                              Path(S840,S842)
	S844= IMMU.Hit=>IMMUHitReg.In                               Premise(F363)
	S845= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S841,S844)
	S846= PC.Out=>ICache.IEA                                    Premise(F364)
	S847= ICache.IEA=addr+4                                     Path(S802,S846)
	S848= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S847)
	S849= ICache.Out=>ICacheReg.In                              Premise(F365)
	S850= ICache.Hit=>ICacheHitReg.In                           Premise(F366)
	S851= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S848,S850)
	S852= IMMUHitReg.Out=>CU.IMemHit                            Premise(F367)
	S853= CU.IMemHit=IMMUHit(pid,addr)                          Path(S806,S852)
	S854= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F368)
	S855= CU.ICacheHit=ICacheHit(addr)                          Path(S809,S854)
	S856= IAddrReg.Out=>IMem.RAddr                              Premise(F369)
	S857= IMem.RAddr={pid,addr}                                 Path(S803,S856)
	S858= IMem.Out={31,rT,rA,rB,1044}                           IMem-Read(S857,S774)
	S859= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S857,S774)
	S860= IMem.Out=>IRMux.MemData                               Premise(F370)
	S861= IRMux.MemData={31,rT,rA,rB,1044}                      Path(S858,S860)
	S862= IRMux.Out={31,rT,rA,rB,1044}                          IRMux-Select(S861)
	S863= ICacheReg.Out=>IRMux.CacheData                        Premise(F371)
	S864= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F372)
	S865= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S806,S864)
	S866= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F373)
	S867= IRMux.CacheSel=ICacheHit(addr)                        Path(S809,S866)
	S868= IRMux.Out=>IR.In                                      Premise(F374)
	S869= IR.In={31,rT,rA,rB,1044}                              Path(S862,S868)
	S870= IMem.MEM8WordOut=>ICache.WData                        Premise(F375)
	S871= ICache.WData=IMemGet8Word({pid,addr})                 Path(S859,S870)
	S872= PC.Out=>ICache.IEA                                    Premise(F376)
	S873= IR.Out0_5=>CU.Op                                      Premise(F377)
	S874= CU.Op=31                                              Path(S812,S873)
	S875= IR.Out11_15=>GPRegs.RReg1                             Premise(F378)
	S876= GPRegs.RReg1=rA                                       Path(S814,S875)
	S877= GPRegs.Rdata1=a                                       GPRegs-Read(S876,S779)
	S878= IR.Out16_20=>GPRegs.RReg2                             Premise(F379)
	S879= GPRegs.RReg2=rB                                       Path(S815,S878)
	S880= GPRegs.Rdata2=b                                       GPRegs-Read(S879,S780)
	S881= IR.Out21_31=>CU.IRFunc                                Premise(F380)
	S882= CU.IRFunc=1044                                        Path(S816,S881)
	S883= CU.Func=alu_add                                       CU(S874,S882)
	S884= GPRegs.Rdata1=>A.In                                   Premise(F381)
	S885= A.In=a                                                Path(S877,S884)
	S886= GPRegs.Rdata2=>B.In                                   Premise(F382)
	S887= B.In=b                                                Path(S880,S886)
	S888= A.Out=>ALU.A                                          Premise(F383)
	S889= ALU.A=a                                               Path(S817,S888)
	S890= B.Out=>ALU.B                                          Premise(F384)
	S891= ALU.B=b                                               Path(S820,S890)
	S892= CU.Func=>ALU.Func                                     Premise(F385)
	S893= ALU.Func=alu_add                                      Path(S883,S892)
	S894= ALU.Out=a+b                                           ALU(S889,S891)
	S895= ALU.CMP=Compare0(a+b)                                 ALU(S889,S891)
	S896= ALU.OV=OverFlow(a+b)                                  ALU(S889,S891)
	S897= ALU.CA=Carry(a+b)                                     ALU(S889,S891)
	S898= ALU.Out=>ALUOut.In                                    Premise(F386)
	S899= ALUOut.In=a+b                                         Path(S894,S898)
	S900= ALU.CA=>CAReg.In                                      Premise(F387)
	S901= CAReg.In=Carry(a+b)                                   Path(S897,S900)
	S902= ALU.OV=>OVReg.In                                      Premise(F388)
	S903= OVReg.In=OverFlow(a+b)                                Path(S896,S902)
	S904= XER.SOOut=>ORGate.A                                   Premise(F389)
	S905= ORGate.A=so                                           Path(S832,S904)
	S906= ALU.OV=>ORGate.B                                      Premise(F390)
	S907= ORGate.B=OverFlow(a+b)                                Path(S896,S906)
	S908= ORGate.Out=so|OverFlow(a+b)                           ORGate(S905,S907)
	S909= ORGate.Out=>DR1bit.In                                 Premise(F391)
	S910= DR1bit.In=so|OverFlow(a+b)                            Path(S908,S909)
	S911= IR.Out6_10=>GPRegs.WReg                               Premise(F392)
	S912= GPRegs.WReg=rT                                        Path(S813,S911)
	S913= ALUOut.Out=>GPRegs.WData                              Premise(F393)
	S914= GPRegs.WData=a+b                                      Path(S823,S913)
	S915= DR1bit.Out=>XER.SOIn                                  Premise(F394)
	S916= XER.SOIn=so|OverFlow(a+b)                             Path(S833,S915)
	S917= CAReg.Out=>XER.CAIn                                   Premise(F395)
	S918= XER.CAIn=Carry(a+b)                                   Path(S826,S917)
	S919= OVReg.Out=>XER.OVIn                                   Premise(F396)
	S920= XER.OVIn=OverFlow(a+b)                                Path(S829,S919)
	S921= CtrlPIDReg=0                                          Premise(F397)
	S922= [PIDReg]=pid                                          PIDReg-Hold(S758,S921)
	S923= CtrlIMMU=0                                            Premise(F398)
	S924= CtrlPC=0                                              Premise(F399)
	S925= CtrlPCInc=0                                           Premise(F400)
	S926= PC[CIA]=addr                                          PC-Hold(S762,S925)
	S927= PC[Out]=addr+4                                        PC-Hold(S763,S924,S925)
	S928= CtrlIAddrReg=0                                        Premise(F401)
	S929= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S765,S928)
	S930= CtrlIMMUHitReg=0                                      Premise(F402)
	S931= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S767,S930)
	S932= CtrlICache=0                                          Premise(F403)
	S933= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S769,S932)
	S934= CtrlICacheReg=0                                       Premise(F404)
	S935= CtrlICacheHitReg=0                                    Premise(F405)
	S936= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S772,S935)
	S937= CtrlIMem=0                                            Premise(F406)
	S938= IMem[{pid,addr}]={31,rT,rA,rB,1044}                   IMem-Hold(S774,S937)
	S939= CtrlIRMux=0                                           Premise(F407)
	S940= CtrlIR=0                                              Premise(F408)
	S941= [IR]={31,rT,rA,rB,1044}                               IR-Hold(S777,S940)
	S942= CtrlGPRegs=0                                          Premise(F409)
	S943= GPRegs[rA]=a                                          GPRegs-Hold(S779,S942)
	S944= GPRegs[rB]=b                                          GPRegs-Hold(S780,S942)
	S945= CtrlA=0                                               Premise(F410)
	S946= [A]=a                                                 A-Hold(S782,S945)
	S947= CtrlB=0                                               Premise(F411)
	S948= [B]=b                                                 B-Hold(S784,S947)
	S949= CtrlALUOut=0                                          Premise(F412)
	S950= [ALUOut]=a+b                                          ALUOut-Hold(S786,S949)
	S951= CtrlCAReg=0                                           Premise(F413)
	S952= [CAReg]=Carry(a+b)                                    CAReg-Hold(S788,S951)
	S953= CtrlOVReg=0                                           Premise(F414)
	S954= [OVReg]=OverFlow(a+b)                                 OVReg-Hold(S790,S953)
	S955= CtrlXERSO=0                                           Premise(F415)
	S956= XER[SO]=so                                            XER-SO-Hold(S792,S955)
	S957= CtrlXEROV=0                                           Premise(F416)
	S958= CtrlXERCA=0                                           Premise(F417)
	S959= CtrlDR1bit=0                                          Premise(F418)
	S960= [DR1bit]=so|OverFlow(a+b)                             DR1bit-Hold(S796,S959)

WB	S961= PIDReg.Out=pid                                        PIDReg-Out(S922)
	S962= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S922)
	S963= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S922)
	S964= PC.CIA=addr                                           PC-Out(S926)
	S965= PC.CIA31_28=addr[31:28]                               PC-Out(S926)
	S966= PC.Out=addr+4                                         PC-Out(S927)
	S967= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S929)
	S968= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S929)
	S969= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S929)
	S970= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S931)
	S971= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S931)
	S972= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S931)
	S973= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S936)
	S974= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S936)
	S975= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S936)
	S976= IR.Out0_5=31                                          IR-Out(S941)
	S977= IR.Out6_10=rT                                         IR-Out(S941)
	S978= IR.Out11_15=rA                                        IR-Out(S941)
	S979= IR.Out16_20=rB                                        IR-Out(S941)
	S980= IR.Out21_31=1044                                      IR-Out(S941)
	S981= A.Out=a                                               A-Out(S946)
	S982= A.Out26_31=a[26:31]                                   A-Out(S946)
	S983= A.Out30_31=a[30:31]                                   A-Out(S946)
	S984= B.Out=b                                               B-Out(S948)
	S985= B.Out26_31=b[26:31]                                   B-Out(S948)
	S986= B.Out30_31=b[30:31]                                   B-Out(S948)
	S987= ALUOut.Out=a+b                                        ALUOut-Out(S950)
	S988= ALUOut.Out26_31=a+b[26:31]                            ALUOut-Out(S950)
	S989= ALUOut.Out30_31=a+b[30:31]                            ALUOut-Out(S950)
	S990= CAReg.Out=Carry(a+b)                                  CAReg-Out(S952)
	S991= CAReg.Out26_31=Carry(a+b)[26:31]                      CAReg-Out(S952)
	S992= CAReg.Out30_31=Carry(a+b)[30:31]                      CAReg-Out(S952)
	S993= OVReg.Out=OverFlow(a+b)                               OVReg-Out(S954)
	S994= OVReg.Out26_31=OverFlow(a+b)[26:31]                   OVReg-Out(S954)
	S995= OVReg.Out30_31=OverFlow(a+b)[30:31]                   OVReg-Out(S954)
	S996= XER.SOOut=so                                          XER-SO-Out(S956)
	S997= DR1bit.Out=so|OverFlow(a+b)                           DR1bit-Out(S960)
	S998= DR1bit.Out26_31=so|OverFlow(a+b)[26:31]               DR1bit-Out(S960)
	S999= DR1bit.Out30_31=so|OverFlow(a+b)[30:31]               DR1bit-Out(S960)
	S1000= PIDReg.Out=>IMMU.PID                                 Premise(F419)
	S1001= IMMU.PID=pid                                         Path(S961,S1000)
	S1002= PC.Out=>IMMU.IEA                                     Premise(F420)
	S1003= IMMU.IEA=addr+4                                      Path(S966,S1002)
	S1004= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1001,S1003)
	S1005= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1001,S1003)
	S1006= IMMU.Addr=>IAddrReg.In                               Premise(F421)
	S1007= IAddrReg.In={pid,addr+4}                             Path(S1004,S1006)
	S1008= IMMU.Hit=>IMMUHitReg.In                              Premise(F422)
	S1009= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1005,S1008)
	S1010= PC.Out=>ICache.IEA                                   Premise(F423)
	S1011= ICache.IEA=addr+4                                    Path(S966,S1010)
	S1012= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1011)
	S1013= ICache.Out=>ICacheReg.In                             Premise(F424)
	S1014= ICache.Hit=>ICacheHitReg.In                          Premise(F425)
	S1015= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1012,S1014)
	S1016= IMMUHitReg.Out=>CU.IMemHit                           Premise(F426)
	S1017= CU.IMemHit=IMMUHit(pid,addr)                         Path(S970,S1016)
	S1018= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F427)
	S1019= CU.ICacheHit=ICacheHit(addr)                         Path(S973,S1018)
	S1020= IAddrReg.Out=>IMem.RAddr                             Premise(F428)
	S1021= IMem.RAddr={pid,addr}                                Path(S967,S1020)
	S1022= IMem.Out={31,rT,rA,rB,1044}                          IMem-Read(S1021,S938)
	S1023= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1021,S938)
	S1024= IMem.Out=>IRMux.MemData                              Premise(F429)
	S1025= IRMux.MemData={31,rT,rA,rB,1044}                     Path(S1022,S1024)
	S1026= IRMux.Out={31,rT,rA,rB,1044}                         IRMux-Select(S1025)
	S1027= ICacheReg.Out=>IRMux.CacheData                       Premise(F430)
	S1028= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F431)
	S1029= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S970,S1028)
	S1030= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F432)
	S1031= IRMux.CacheSel=ICacheHit(addr)                       Path(S973,S1030)
	S1032= IRMux.Out=>IR.In                                     Premise(F433)
	S1033= IR.In={31,rT,rA,rB,1044}                             Path(S1026,S1032)
	S1034= IMem.MEM8WordOut=>ICache.WData                       Premise(F434)
	S1035= ICache.WData=IMemGet8Word({pid,addr})                Path(S1023,S1034)
	S1036= PC.Out=>ICache.IEA                                   Premise(F435)
	S1037= IR.Out0_5=>CU.Op                                     Premise(F436)
	S1038= CU.Op=31                                             Path(S976,S1037)
	S1039= IR.Out11_15=>GPRegs.RReg1                            Premise(F437)
	S1040= GPRegs.RReg1=rA                                      Path(S978,S1039)
	S1041= GPRegs.Rdata1=a                                      GPRegs-Read(S1040,S943)
	S1042= IR.Out16_20=>GPRegs.RReg2                            Premise(F438)
	S1043= GPRegs.RReg2=rB                                      Path(S979,S1042)
	S1044= GPRegs.Rdata2=b                                      GPRegs-Read(S1043,S944)
	S1045= IR.Out21_31=>CU.IRFunc                               Premise(F439)
	S1046= CU.IRFunc=1044                                       Path(S980,S1045)
	S1047= CU.Func=alu_add                                      CU(S1038,S1046)
	S1048= GPRegs.Rdata1=>A.In                                  Premise(F440)
	S1049= A.In=a                                               Path(S1041,S1048)
	S1050= GPRegs.Rdata2=>B.In                                  Premise(F441)
	S1051= B.In=b                                               Path(S1044,S1050)
	S1052= A.Out=>ALU.A                                         Premise(F442)
	S1053= ALU.A=a                                              Path(S981,S1052)
	S1054= B.Out=>ALU.B                                         Premise(F443)
	S1055= ALU.B=b                                              Path(S984,S1054)
	S1056= CU.Func=>ALU.Func                                    Premise(F444)
	S1057= ALU.Func=alu_add                                     Path(S1047,S1056)
	S1058= ALU.Out=a+b                                          ALU(S1053,S1055)
	S1059= ALU.CMP=Compare0(a+b)                                ALU(S1053,S1055)
	S1060= ALU.OV=OverFlow(a+b)                                 ALU(S1053,S1055)
	S1061= ALU.CA=Carry(a+b)                                    ALU(S1053,S1055)
	S1062= ALU.Out=>ALUOut.In                                   Premise(F445)
	S1063= ALUOut.In=a+b                                        Path(S1058,S1062)
	S1064= ALU.CA=>CAReg.In                                     Premise(F446)
	S1065= CAReg.In=Carry(a+b)                                  Path(S1061,S1064)
	S1066= ALU.OV=>OVReg.In                                     Premise(F447)
	S1067= OVReg.In=OverFlow(a+b)                               Path(S1060,S1066)
	S1068= XER.SOOut=>ORGate.A                                  Premise(F448)
	S1069= ORGate.A=so                                          Path(S996,S1068)
	S1070= ALU.OV=>ORGate.B                                     Premise(F449)
	S1071= ORGate.B=OverFlow(a+b)                               Path(S1060,S1070)
	S1072= ORGate.Out=so|OverFlow(a+b)                          ORGate(S1069,S1071)
	S1073= ORGate.Out=>DR1bit.In                                Premise(F450)
	S1074= DR1bit.In=so|OverFlow(a+b)                           Path(S1072,S1073)
	S1075= IR.Out6_10=>GPRegs.WReg                              Premise(F451)
	S1076= GPRegs.WReg=rT                                       Path(S977,S1075)
	S1077= ALUOut.Out=>GPRegs.WData                             Premise(F452)
	S1078= GPRegs.WData=a+b                                     Path(S987,S1077)
	S1079= DR1bit.Out=>XER.SOIn                                 Premise(F453)
	S1080= XER.SOIn=so|OverFlow(a+b)                            Path(S997,S1079)
	S1081= CAReg.Out=>XER.CAIn                                  Premise(F454)
	S1082= XER.CAIn=Carry(a+b)                                  Path(S990,S1081)
	S1083= OVReg.Out=>XER.OVIn                                  Premise(F455)
	S1084= XER.OVIn=OverFlow(a+b)                               Path(S993,S1083)
	S1085= CtrlPIDReg=0                                         Premise(F456)
	S1086= [PIDReg]=pid                                         PIDReg-Hold(S922,S1085)
	S1087= CtrlIMMU=0                                           Premise(F457)
	S1088= CtrlPC=0                                             Premise(F458)
	S1089= CtrlPCInc=0                                          Premise(F459)
	S1090= PC[CIA]=addr                                         PC-Hold(S926,S1089)
	S1091= PC[Out]=addr+4                                       PC-Hold(S927,S1088,S1089)
	S1092= CtrlIAddrReg=0                                       Premise(F460)
	S1093= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S929,S1092)
	S1094= CtrlIMMUHitReg=0                                     Premise(F461)
	S1095= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S931,S1094)
	S1096= CtrlICache=0                                         Premise(F462)
	S1097= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S933,S1096)
	S1098= CtrlICacheReg=0                                      Premise(F463)
	S1099= CtrlICacheHitReg=0                                   Premise(F464)
	S1100= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S936,S1099)
	S1101= CtrlIMem=0                                           Premise(F465)
	S1102= IMem[{pid,addr}]={31,rT,rA,rB,1044}                  IMem-Hold(S938,S1101)
	S1103= CtrlIRMux=0                                          Premise(F466)
	S1104= CtrlIR=0                                             Premise(F467)
	S1105= [IR]={31,rT,rA,rB,1044}                              IR-Hold(S941,S1104)
	S1106= CtrlGPRegs=1                                         Premise(F468)
	S1107= GPRegs[rT]=a+b                                       GPRegs-Write(S1076,S1078,S1106)
	S1108= CtrlA=0                                              Premise(F469)
	S1109= [A]=a                                                A-Hold(S946,S1108)
	S1110= CtrlB=0                                              Premise(F470)
	S1111= [B]=b                                                B-Hold(S948,S1110)
	S1112= CtrlALUOut=0                                         Premise(F471)
	S1113= [ALUOut]=a+b                                         ALUOut-Hold(S950,S1112)
	S1114= CtrlCAReg=0                                          Premise(F472)
	S1115= [CAReg]=Carry(a+b)                                   CAReg-Hold(S952,S1114)
	S1116= CtrlOVReg=0                                          Premise(F473)
	S1117= [OVReg]=OverFlow(a+b)                                OVReg-Hold(S954,S1116)
	S1118= CtrlXERSO=1                                          Premise(F474)
	S1119= XER[SO]=so|OverFlow(a+b)                             XER-SO-Write(S1080,S1118)
	S1120= CtrlXEROV=1                                          Premise(F475)
	S1121= XER[OV]=OverFlow(a+b)                                XER-OV-Write(S1084,S1120)
	S1122= CtrlXERCA=1                                          Premise(F476)
	S1123= XER[CA]=Carry(a+b)                                   XER-CA-Write(S1082,S1122)
	S1124= CtrlDR1bit=0                                         Premise(F477)
	S1125= [DR1bit]=so|OverFlow(a+b)                            DR1bit-Hold(S960,S1124)

POST	S1086= [PIDReg]=pid                                         PIDReg-Hold(S922,S1085)
	S1090= PC[CIA]=addr                                         PC-Hold(S926,S1089)
	S1091= PC[Out]=addr+4                                       PC-Hold(S927,S1088,S1089)
	S1093= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S929,S1092)
	S1095= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S931,S1094)
	S1097= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S933,S1096)
	S1100= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S936,S1099)
	S1102= IMem[{pid,addr}]={31,rT,rA,rB,1044}                  IMem-Hold(S938,S1101)
	S1105= [IR]={31,rT,rA,rB,1044}                              IR-Hold(S941,S1104)
	S1107= GPRegs[rT]=a+b                                       GPRegs-Write(S1076,S1078,S1106)
	S1109= [A]=a                                                A-Hold(S946,S1108)
	S1111= [B]=b                                                B-Hold(S948,S1110)
	S1113= [ALUOut]=a+b                                         ALUOut-Hold(S950,S1112)
	S1115= [CAReg]=Carry(a+b)                                   CAReg-Hold(S952,S1114)
	S1117= [OVReg]=OverFlow(a+b)                                OVReg-Hold(S954,S1116)
	S1119= XER[SO]=so|OverFlow(a+b)                             XER-SO-Write(S1080,S1118)
	S1121= XER[OV]=OverFlow(a+b)                                XER-OV-Write(S1084,S1120)
	S1123= XER[CA]=Carry(a+b)                                   XER-CA-Write(S1082,S1122)
	S1125= [DR1bit]=so|OverFlow(a+b)                            DR1bit-Hold(S960,S1124)

