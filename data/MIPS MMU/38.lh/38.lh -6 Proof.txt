
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={33,rS,rT,offset}                          Premise(F3)
	S2= GPR[rS]=base                                            Premise(F4)
	S3= DCache[base+{16{offset[15]},offset}]=a                  Premise(F6)

IF	S4= PC.Out=addr                                             PC-Out(S0)
	S5= PC.Out=>ICache.IEA                                      Premise(F12)
	S6= ICache.IEA=addr                                         Path(S4,S5)
	S7= ICache.Out={33,rS,rT,offset}                            ICache-Search(S6,S1)
	S8= ICache.Out=>IR.In                                       Premise(F13)
	S9= IR.In={33,rS,rT,offset}                                 Path(S7,S8)
	S10= CtrlPC=0                                               Premise(F21)
	S11= CtrlPCInc=1                                            Premise(F22)
	S12= PC[Out]=addr+4                                         PC-Inc(S0,S10,S11)
	S13= CtrlIR=1                                               Premise(F25)
	S14= [IR]={33,rS,rT,offset}                                 IR-Write(S9,S13)
	S15= CtrlGPR=0                                              Premise(F29)
	S16= GPR[rS]=base                                           GPR-Hold(S2,S15)
	S17= CtrlDCache=0                                           Premise(F35)
	S18= DCache[base+{16{offset[15]},offset}]=a                 DCache-Hold(S3,S17)

ID	S19= IR.Out25_21=rS                                         IR-Out(S14)
	S20= IR.Out15_0=offset                                      IR-Out(S14)
	S21= IR.Out25_21=>GPR.RReg1                                 Premise(F65)
	S22= GPR.RReg1=rS                                           Path(S19,S21)
	S23= GPR.Rdata1=base                                        GPR-Read(S22,S16)
	S24= IR.Out15_0=>IMMEXT.In                                  Premise(F66)
	S25= IMMEXT.In=offset                                       Path(S20,S24)
	S26= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S25)
	S27= GPR.Rdata1=>A.In                                       Premise(F67)
	S28= A.In=base                                              Path(S23,S27)
	S29= IMMEXT.Out=>B.In                                       Premise(F68)
	S30= B.In={16{offset[15]},offset}                           Path(S26,S29)
	S31= CtrlPC=0                                               Premise(F74)
	S32= CtrlPCInc=0                                            Premise(F75)
	S33= PC[Out]=addr+4                                         PC-Hold(S12,S31,S32)
	S34= CtrlIR=0                                               Premise(F78)
	S35= [IR]={33,rS,rT,offset}                                 IR-Hold(S14,S34)
	S36= CtrlA=1                                                Premise(F83)
	S37= [A]=base                                               A-Write(S28,S36)
	S38= CtrlB=1                                                Premise(F84)
	S39= [B]={16{offset[15]},offset}                            B-Write(S30,S38)
	S40= CtrlDCache=0                                           Premise(F88)
	S41= DCache[base+{16{offset[15]},offset}]=a                 DCache-Hold(S18,S40)

EX	S42= A.Out=base                                             A-Out(S37)
	S43= B.Out={16{offset[15]},offset}                          B-Out(S39)
	S44= A.Out=>ALU.A                                           Premise(F93)
	S45= ALU.A=base                                             Path(S42,S44)
	S46= B.Out=>ALU.B                                           Premise(F94)
	S47= ALU.B={16{offset[15]},offset}                          Path(S43,S46)
	S48= ALU.Out=base+{16{offset[15]},offset}                   ALU(S45,S47)
	S49= ALU.Out=>ALUOut.In                                     Premise(F96)
	S50= ALUOut.In=base+{16{offset[15]},offset}                 Path(S48,S49)
	S51= CtrlPC=0                                               Premise(F102)
	S52= CtrlPCInc=0                                            Premise(F103)
	S53= PC[Out]=addr+4                                         PC-Hold(S33,S51,S52)
	S54= CtrlIR=0                                               Premise(F106)
	S55= [IR]={33,rS,rT,offset}                                 IR-Hold(S35,S54)
	S56= CtrlALUOut=1                                           Premise(F113)
	S57= [ALUOut]=base+{16{offset[15]},offset}                  ALUOut-Write(S50,S56)
	S58= CtrlDCache=0                                           Premise(F116)
	S59= DCache[base+{16{offset[15]},offset}]=a                 DCache-Hold(S41,S58)

MEM	S60= ALUOut.Out=base+{16{offset[15]},offset}                ALUOut-Out(S57)
	S61= ALUOut.Out=>DCache.IEA                                 Premise(F125)
	S62= DCache.IEA=base+{16{offset[15]},offset}                Path(S60,S61)
	S63= DCache.Out=a                                           DCache-Search(S62,S59)
	S64= DCache.Out=>DR.In                                      Premise(F127)
	S65= DR.In=a                                                Path(S63,S64)
	S66= CtrlPC=0                                               Premise(F134)
	S67= CtrlPCInc=0                                            Premise(F135)
	S68= PC[Out]=addr+4                                         PC-Hold(S53,S66,S67)
	S69= CtrlIR=0                                               Premise(F138)
	S70= [IR]={33,rS,rT,offset}                                 IR-Hold(S55,S69)
	S71= CtrlALUOut=0                                           Premise(F145)
	S72= [ALUOut]=base+{16{offset[15]},offset}                  ALUOut-Hold(S57,S71)
	S73= CtrlDR=1                                               Premise(F150)
	S74= [DR]=a                                                 DR-Write(S65,S73)

WB	S75= IR.Out20_16=rT                                         IR-Out(S70)
	S76= ALUOut.Out1_0={base+{16{offset[15]},offset}}[1:0]      ALUOut-Out(S72)
	S77= DR.Out=a                                               DR-Out(S74)
	S78= IR.Out20_16=>GPR.WReg                                  Premise(F201)
	S79= GPR.WReg=rT                                            Path(S75,S78)
	S80= DR.Out=>MemDataSelL.In                                 Premise(F202)
	S81= MemDataSelL.In=a                                       Path(S77,S80)
	S82= ALUOut.Out1_0=>MemDataSelL.Addr                        Premise(F203)
	S83= MemDataSelL.Addr={base+{16{offset[15]},offset}}[1:0]   Path(S76,S82)
	S84= MemDataSelL.Out={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}MemDataSelL(S81,S83)
	S85= MemDataSelL.Out=>GPR.WData                             Premise(F205)
	S86= GPR.WData={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}Path(S84,S85)
	S87= CtrlPC=0                                               Premise(F211)
	S88= CtrlPCInc=0                                            Premise(F212)
	S89= PC[Out]=addr+4                                         PC-Hold(S68,S87,S88)
	S90= CtrlGPR=1                                              Premise(F219)
	S91= GPR[rT]={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S79,S86,S90)

POST	S89= PC[Out]=addr+4                                         PC-Hold(S68,S87,S88)
	S91= GPR[rT]={16{a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8][15]},a[{base+{16{offset[15]},offset}}[1:0]*8+15,{base+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S79,S86,S90)

