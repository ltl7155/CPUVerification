
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,0,1233}                      Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= XER[SO]=so                                              Premise(F4)

IF	S5= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S6= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S7= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S8= PC.Out=addr                                             PC-Out(S1)
	S9= XER.SOOut=so                                            XER-SO-Out(S4)
	S10= PIDReg.Out=>IMMU.PID                                   Premise(F5)
	S11= IMMU.PID=pid                                           Path(S5,S10)
	S12= PC.Out=>IMMU.IEA                                       Premise(F6)
	S13= IMMU.IEA=addr                                          Path(S8,S12)
	S14= IMMU.Addr={pid,addr}                                   IMMU-Search(S11,S13)
	S15= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S11,S13)
	S16= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S17= IAddrReg.In={pid,addr}                                 Path(S14,S16)
	S18= IMMU.Hit=>IMMUHitReg.In                                Premise(F8)
	S19= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S15,S18)
	S20= PC.Out=>ICache.IEA                                     Premise(F9)
	S21= ICache.IEA=addr                                        Path(S8,S20)
	S22= ICache.Hit=ICacheHit(addr)                             ICache-Search(S21)
	S23= ICache.Out=>ICacheReg.In                               Premise(F10)
	S24= ICache.Hit=>ICacheHitReg.In                            Premise(F11)
	S25= ICacheHitReg.In=ICacheHit(addr)                        Path(S22,S24)
	S26= IMMUHitReg.Out=>CU.IMemHit                             Premise(F12)
	S27= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F13)
	S28= IAddrReg.Out=>IMem.RAddr                               Premise(F14)
	S29= IMem.Out=>IRMux.MemData                                Premise(F15)
	S30= ICacheReg.Out=>IRMux.CacheData                         Premise(F16)
	S31= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F17)
	S32= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F18)
	S33= IRMux.Out=>IR.In                                       Premise(F19)
	S34= IMem.MEM8WordOut=>ICache.WData                         Premise(F20)
	S35= PC.Out=>ICache.IEA                                     Premise(F21)
	S36= IR.Out0_5=>CU.Op                                       Premise(F22)
	S37= IR.Out11_15=>GPRegs.RReg1                              Premise(F23)
	S38= IR.Out21_31=>CU.IRFunc                                 Premise(F24)
	S39= GPRegs.Rdata1=>A.In                                    Premise(F25)
	S40= A.Out=>ALU.A                                           Premise(F26)
	S41= B.Out=>ALU.B                                           Premise(F27)
	S42= CU.Func=>ALU.Func                                      Premise(F28)
	S43= ALU.Out=>ALUOut.In                                     Premise(F29)
	S44= ALU.CMP=>DataCmb.A                                     Premise(F30)
	S45= ORGate.Out=>DataCmb.B                                  Premise(F31)
	S46= ALU.OV=>OVReg.In                                       Premise(F32)
	S47= XER.SOOut=>ORGate.A                                    Premise(F33)
	S48= ORGate.A=so                                            Path(S9,S47)
	S49= ALU.OV=>ORGate.B                                       Premise(F34)
	S50= ORGate.Out=>DR1bit.In                                  Premise(F35)
	S51= DataCmb.Out=>DR4bit.In                                 Premise(F36)
	S52= IR.Out6_10=>GPRegs.WReg                                Premise(F37)
	S53= ALUOut.Out=>GPRegs.WData                               Premise(F38)
	S54= DR4bit.Out=>CRRegs.CR0In                               Premise(F39)
	S55= DR1bit.Out=>XER.SOIn                                   Premise(F40)
	S56= OVReg.Out=>XER.OVIn                                    Premise(F41)
	S57= CtrlPIDReg=0                                           Premise(F42)
	S58= [PIDReg]=pid                                           PIDReg-Hold(S0,S57)
	S59= CtrlIMMU=0                                             Premise(F43)
	S60= CtrlPC=0                                               Premise(F44)
	S61= CtrlPCInc=0                                            Premise(F45)
	S62= PC[Out]=addr                                           PC-Hold(S1,S60,S61)
	S63= CtrlIAddrReg=1                                         Premise(F46)
	S64= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S17,S63)
	S65= CtrlIMMUHitReg=1                                       Premise(F47)
	S66= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S19,S65)
	S67= CtrlICache=0                                           Premise(F48)
	S68= CtrlICacheReg=1                                        Premise(F49)
	S69= CtrlICacheHitReg=1                                     Premise(F50)
	S70= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S25,S69)
	S71= CtrlIMem=0                                             Premise(F51)
	S72= IMem[{pid,addr}]={31,rT,rA,0,1233}                     IMem-Hold(S2,S71)
	S73= CtrlIRMux=0                                            Premise(F52)
	S74= CtrlIR=0                                               Premise(F53)
	S75= CtrlGPRegs=0                                           Premise(F54)
	S76= GPRegs[rA]=a                                           GPRegs-Hold(S3,S75)
	S77= CtrlA=0                                                Premise(F55)
	S78= CtrlB=0                                                Premise(F56)
	S79= CtrlALUOut=0                                           Premise(F57)
	S80= CtrlOVReg=0                                            Premise(F58)
	S81= CtrlXERSO=0                                            Premise(F59)
	S82= XER[SO]=so                                             XER-SO-Hold(S4,S81)
	S83= CtrlXEROV=0                                            Premise(F60)
	S84= CtrlXERCA=0                                            Premise(F61)
	S85= CtrlDR1bit=0                                           Premise(F62)
	S86= CtrlDR4bit=0                                           Premise(F63)
	S87= CtrlCRRegs=0                                           Premise(F64)
	S88= CtrlCRRegsCR0=0                                        Premise(F65)
	S89= CtrlCRRegsW4bitRegs=0                                  Premise(F66)
	S90= CtrlCRRegsW1bitRegs=0                                  Premise(F67)

IMMU	S91= PIDReg.Out=pid                                         PIDReg-Out(S58)
	S92= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S58)
	S93= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S58)
	S94= PC.Out=addr                                            PC-Out(S62)
	S95= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S64)
	S96= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S64)
	S97= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S64)
	S98= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S66)
	S99= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S66)
	S100= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S66)
	S101= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S70)
	S102= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S70)
	S103= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S70)
	S104= XER.SOOut=so                                          XER-SO-Out(S82)
	S105= PIDReg.Out=>IMMU.PID                                  Premise(F68)
	S106= IMMU.PID=pid                                          Path(S91,S105)
	S107= PC.Out=>IMMU.IEA                                      Premise(F69)
	S108= IMMU.IEA=addr                                         Path(S94,S107)
	S109= IMMU.Addr={pid,addr}                                  IMMU-Search(S106,S108)
	S110= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S106,S108)
	S111= IMMU.Addr=>IAddrReg.In                                Premise(F70)
	S112= IAddrReg.In={pid,addr}                                Path(S109,S111)
	S113= IMMU.Hit=>IMMUHitReg.In                               Premise(F71)
	S114= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S110,S113)
	S115= PC.Out=>ICache.IEA                                    Premise(F72)
	S116= ICache.IEA=addr                                       Path(S94,S115)
	S117= ICache.Hit=ICacheHit(addr)                            ICache-Search(S116)
	S118= ICache.Out=>ICacheReg.In                              Premise(F73)
	S119= ICache.Hit=>ICacheHitReg.In                           Premise(F74)
	S120= ICacheHitReg.In=ICacheHit(addr)                       Path(S117,S119)
	S121= IMMUHitReg.Out=>CU.IMemHit                            Premise(F75)
	S122= CU.IMemHit=IMMUHit(pid,addr)                          Path(S98,S121)
	S123= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F76)
	S124= CU.ICacheHit=ICacheHit(addr)                          Path(S101,S123)
	S125= IAddrReg.Out=>IMem.RAddr                              Premise(F77)
	S126= IMem.RAddr={pid,addr}                                 Path(S95,S125)
	S127= IMem.Out={31,rT,rA,0,1233}                            IMem-Read(S126,S72)
	S128= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S126,S72)
	S129= IMem.Out=>IRMux.MemData                               Premise(F78)
	S130= IRMux.MemData={31,rT,rA,0,1233}                       Path(S127,S129)
	S131= IRMux.Out={31,rT,rA,0,1233}                           IRMux-Select(S130)
	S132= ICacheReg.Out=>IRMux.CacheData                        Premise(F79)
	S133= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F80)
	S134= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S98,S133)
	S135= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F81)
	S136= IRMux.CacheSel=ICacheHit(addr)                        Path(S101,S135)
	S137= IRMux.Out=>IR.In                                      Premise(F82)
	S138= IR.In={31,rT,rA,0,1233}                               Path(S131,S137)
	S139= IMem.MEM8WordOut=>ICache.WData                        Premise(F83)
	S140= ICache.WData=IMemGet8Word({pid,addr})                 Path(S128,S139)
	S141= PC.Out=>ICache.IEA                                    Premise(F84)
	S142= IR.Out0_5=>CU.Op                                      Premise(F85)
	S143= IR.Out11_15=>GPRegs.RReg1                             Premise(F86)
	S144= IR.Out21_31=>CU.IRFunc                                Premise(F87)
	S145= GPRegs.Rdata1=>A.In                                   Premise(F88)
	S146= A.Out=>ALU.A                                          Premise(F89)
	S147= B.Out=>ALU.B                                          Premise(F90)
	S148= CU.Func=>ALU.Func                                     Premise(F91)
	S149= ALU.Out=>ALUOut.In                                    Premise(F92)
	S150= ALU.CMP=>DataCmb.A                                    Premise(F93)
	S151= ORGate.Out=>DataCmb.B                                 Premise(F94)
	S152= ALU.OV=>OVReg.In                                      Premise(F95)
	S153= XER.SOOut=>ORGate.A                                   Premise(F96)
	S154= ORGate.A=so                                           Path(S104,S153)
	S155= ALU.OV=>ORGate.B                                      Premise(F97)
	S156= ORGate.Out=>DR1bit.In                                 Premise(F98)
	S157= DataCmb.Out=>DR4bit.In                                Premise(F99)
	S158= IR.Out6_10=>GPRegs.WReg                               Premise(F100)
	S159= ALUOut.Out=>GPRegs.WData                              Premise(F101)
	S160= DR4bit.Out=>CRRegs.CR0In                              Premise(F102)
	S161= DR1bit.Out=>XER.SOIn                                  Premise(F103)
	S162= OVReg.Out=>XER.OVIn                                   Premise(F104)
	S163= CtrlPIDReg=0                                          Premise(F105)
	S164= [PIDReg]=pid                                          PIDReg-Hold(S58,S163)
	S165= CtrlIMMU=0                                            Premise(F106)
	S166= CtrlPC=0                                              Premise(F107)
	S167= CtrlPCInc=1                                           Premise(F108)
	S168= PC[Out]=addr+4                                        PC-Inc(S62,S166,S167)
	S169= PC[CIA]=addr                                          PC-Inc(S62,S166,S167)
	S170= CtrlIAddrReg=0                                        Premise(F109)
	S171= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S64,S170)
	S172= CtrlIMMUHitReg=0                                      Premise(F110)
	S173= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S66,S172)
	S174= CtrlICache=1                                          Premise(F111)
	S175= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S116,S140,S174)
	S176= CtrlICacheReg=0                                       Premise(F112)
	S177= CtrlICacheHitReg=0                                    Premise(F113)
	S178= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S70,S177)
	S179= CtrlIMem=0                                            Premise(F114)
	S180= IMem[{pid,addr}]={31,rT,rA,0,1233}                    IMem-Hold(S72,S179)
	S181= CtrlIRMux=0                                           Premise(F115)
	S182= CtrlIR=1                                              Premise(F116)
	S183= [IR]={31,rT,rA,0,1233}                                IR-Write(S138,S182)
	S184= CtrlGPRegs=0                                          Premise(F117)
	S185= GPRegs[rA]=a                                          GPRegs-Hold(S76,S184)
	S186= CtrlA=0                                               Premise(F118)
	S187= CtrlB=0                                               Premise(F119)
	S188= CtrlALUOut=0                                          Premise(F120)
	S189= CtrlOVReg=0                                           Premise(F121)
	S190= CtrlXERSO=0                                           Premise(F122)
	S191= XER[SO]=so                                            XER-SO-Hold(S82,S190)
	S192= CtrlXEROV=0                                           Premise(F123)
	S193= CtrlXERCA=0                                           Premise(F124)
	S194= CtrlDR1bit=0                                          Premise(F125)
	S195= CtrlDR4bit=0                                          Premise(F126)
	S196= CtrlCRRegs=0                                          Premise(F127)
	S197= CtrlCRRegsCR0=0                                       Premise(F128)
	S198= CtrlCRRegsW4bitRegs=0                                 Premise(F129)
	S199= CtrlCRRegsW1bitRegs=0                                 Premise(F130)

ID	S200= PIDReg.Out=pid                                        PIDReg-Out(S164)
	S201= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S164)
	S202= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S164)
	S203= PC.Out=addr+4                                         PC-Out(S168)
	S204= PC.CIA=addr                                           PC-Out(S169)
	S205= PC.CIA31_28=addr[31:28]                               PC-Out(S169)
	S206= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S171)
	S207= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S171)
	S208= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S171)
	S209= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S173)
	S210= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S173)
	S211= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S173)
	S212= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S178)
	S213= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S178)
	S214= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S178)
	S215= IR.Out0_5=31                                          IR-Out(S183)
	S216= IR.Out6_10=rT                                         IR-Out(S183)
	S217= IR.Out11_15=rA                                        IR-Out(S183)
	S218= IR.Out16_20=0                                         IR-Out(S183)
	S219= IR.Out21_31=1233                                      IR-Out(S183)
	S220= XER.SOOut=so                                          XER-SO-Out(S191)
	S221= PIDReg.Out=>IMMU.PID                                  Premise(F131)
	S222= IMMU.PID=pid                                          Path(S200,S221)
	S223= PC.Out=>IMMU.IEA                                      Premise(F132)
	S224= IMMU.IEA=addr+4                                       Path(S203,S223)
	S225= IMMU.Addr={pid,addr+4}                                IMMU-Search(S222,S224)
	S226= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S222,S224)
	S227= IMMU.Addr=>IAddrReg.In                                Premise(F133)
	S228= IAddrReg.In={pid,addr+4}                              Path(S225,S227)
	S229= IMMU.Hit=>IMMUHitReg.In                               Premise(F134)
	S230= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S226,S229)
	S231= PC.Out=>ICache.IEA                                    Premise(F135)
	S232= ICache.IEA=addr+4                                     Path(S203,S231)
	S233= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S232)
	S234= ICache.Out=>ICacheReg.In                              Premise(F136)
	S235= ICache.Hit=>ICacheHitReg.In                           Premise(F137)
	S236= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S233,S235)
	S237= IMMUHitReg.Out=>CU.IMemHit                            Premise(F138)
	S238= CU.IMemHit=IMMUHit(pid,addr)                          Path(S209,S237)
	S239= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F139)
	S240= CU.ICacheHit=ICacheHit(addr)                          Path(S212,S239)
	S241= IAddrReg.Out=>IMem.RAddr                              Premise(F140)
	S242= IMem.RAddr={pid,addr}                                 Path(S206,S241)
	S243= IMem.Out={31,rT,rA,0,1233}                            IMem-Read(S242,S180)
	S244= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S242,S180)
	S245= IMem.Out=>IRMux.MemData                               Premise(F141)
	S246= IRMux.MemData={31,rT,rA,0,1233}                       Path(S243,S245)
	S247= IRMux.Out={31,rT,rA,0,1233}                           IRMux-Select(S246)
	S248= ICacheReg.Out=>IRMux.CacheData                        Premise(F142)
	S249= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F143)
	S250= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S209,S249)
	S251= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F144)
	S252= IRMux.CacheSel=ICacheHit(addr)                        Path(S212,S251)
	S253= IRMux.Out=>IR.In                                      Premise(F145)
	S254= IR.In={31,rT,rA,0,1233}                               Path(S247,S253)
	S255= IMem.MEM8WordOut=>ICache.WData                        Premise(F146)
	S256= ICache.WData=IMemGet8Word({pid,addr})                 Path(S244,S255)
	S257= PC.Out=>ICache.IEA                                    Premise(F147)
	S258= IR.Out0_5=>CU.Op                                      Premise(F148)
	S259= CU.Op=31                                              Path(S215,S258)
	S260= IR.Out11_15=>GPRegs.RReg1                             Premise(F149)
	S261= GPRegs.RReg1=rA                                       Path(S217,S260)
	S262= GPRegs.Rdata1=a                                       GPRegs-Read(S261,S185)
	S263= IR.Out21_31=>CU.IRFunc                                Premise(F150)
	S264= CU.IRFunc=1233                                        Path(S219,S263)
	S265= CU.Func=alu_neg                                       CU(S259,S264)
	S266= GPRegs.Rdata1=>A.In                                   Premise(F151)
	S267= A.In=a                                                Path(S262,S266)
	S268= B.In=32'b0                                            Premise(F152)
	S269= A.Out=>ALU.A                                          Premise(F153)
	S270= B.Out=>ALU.B                                          Premise(F154)
	S271= CU.Func=>ALU.Func                                     Premise(F155)
	S272= ALU.Func=alu_neg                                      Path(S265,S271)
	S273= ALU.Out=>ALUOut.In                                    Premise(F156)
	S274= ALU.CMP=>DataCmb.A                                    Premise(F157)
	S275= ORGate.Out=>DataCmb.B                                 Premise(F158)
	S276= ALU.OV=>OVReg.In                                      Premise(F159)
	S277= XER.SOOut=>ORGate.A                                   Premise(F160)
	S278= ORGate.A=so                                           Path(S220,S277)
	S279= ALU.OV=>ORGate.B                                      Premise(F161)
	S280= ORGate.Out=>DR1bit.In                                 Premise(F162)
	S281= DataCmb.Out=>DR4bit.In                                Premise(F163)
	S282= IR.Out6_10=>GPRegs.WReg                               Premise(F164)
	S283= GPRegs.WReg=rT                                        Path(S216,S282)
	S284= ALUOut.Out=>GPRegs.WData                              Premise(F165)
	S285= DR4bit.Out=>CRRegs.CR0In                              Premise(F166)
	S286= DR1bit.Out=>XER.SOIn                                  Premise(F167)
	S287= OVReg.Out=>XER.OVIn                                   Premise(F168)
	S288= CtrlPIDReg=0                                          Premise(F169)
	S289= [PIDReg]=pid                                          PIDReg-Hold(S164,S288)
	S290= CtrlIMMU=0                                            Premise(F170)
	S291= CtrlPC=0                                              Premise(F171)
	S292= CtrlPCInc=0                                           Premise(F172)
	S293= PC[CIA]=addr                                          PC-Hold(S169,S292)
	S294= PC[Out]=addr+4                                        PC-Hold(S168,S291,S292)
	S295= CtrlIAddrReg=0                                        Premise(F173)
	S296= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S171,S295)
	S297= CtrlIMMUHitReg=0                                      Premise(F174)
	S298= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S173,S297)
	S299= CtrlICache=0                                          Premise(F175)
	S300= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S175,S299)
	S301= CtrlICacheReg=0                                       Premise(F176)
	S302= CtrlICacheHitReg=0                                    Premise(F177)
	S303= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S178,S302)
	S304= CtrlIMem=0                                            Premise(F178)
	S305= IMem[{pid,addr}]={31,rT,rA,0,1233}                    IMem-Hold(S180,S304)
	S306= CtrlIRMux=0                                           Premise(F179)
	S307= CtrlIR=0                                              Premise(F180)
	S308= [IR]={31,rT,rA,0,1233}                                IR-Hold(S183,S307)
	S309= CtrlGPRegs=0                                          Premise(F181)
	S310= GPRegs[rA]=a                                          GPRegs-Hold(S185,S309)
	S311= CtrlA=1                                               Premise(F182)
	S312= [A]=a                                                 A-Write(S267,S311)
	S313= CtrlB=1                                               Premise(F183)
	S314= [B]=32'b0                                             B-Write(S268,S313)
	S315= CtrlALUOut=0                                          Premise(F184)
	S316= CtrlOVReg=0                                           Premise(F185)
	S317= CtrlXERSO=0                                           Premise(F186)
	S318= XER[SO]=so                                            XER-SO-Hold(S191,S317)
	S319= CtrlXEROV=0                                           Premise(F187)
	S320= CtrlXERCA=0                                           Premise(F188)
	S321= CtrlDR1bit=0                                          Premise(F189)
	S322= CtrlDR4bit=0                                          Premise(F190)
	S323= CtrlCRRegs=0                                          Premise(F191)
	S324= CtrlCRRegsCR0=0                                       Premise(F192)
	S325= CtrlCRRegsW4bitRegs=0                                 Premise(F193)
	S326= CtrlCRRegsW1bitRegs=0                                 Premise(F194)

EX	S327= PIDReg.Out=pid                                        PIDReg-Out(S289)
	S328= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S289)
	S329= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S289)
	S330= PC.CIA=addr                                           PC-Out(S293)
	S331= PC.CIA31_28=addr[31:28]                               PC-Out(S293)
	S332= PC.Out=addr+4                                         PC-Out(S294)
	S333= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S296)
	S334= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S296)
	S335= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S296)
	S336= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S298)
	S337= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S298)
	S338= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S298)
	S339= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S303)
	S340= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S303)
	S341= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S303)
	S342= IR.Out0_5=31                                          IR-Out(S308)
	S343= IR.Out6_10=rT                                         IR-Out(S308)
	S344= IR.Out11_15=rA                                        IR-Out(S308)
	S345= IR.Out16_20=0                                         IR-Out(S308)
	S346= IR.Out21_31=1233                                      IR-Out(S308)
	S347= A.Out=a                                               A-Out(S312)
	S348= A.Out26_31=a[26:31]                                   A-Out(S312)
	S349= A.Out30_31=a[30:31]                                   A-Out(S312)
	S350= B.Out=32'b0                                           B-Out(S314)
	S351= B.Out26_31=32'b0[26:31]                               B-Out(S314)
	S352= B.Out30_31=32'b0[30:31]                               B-Out(S314)
	S353= XER.SOOut=so                                          XER-SO-Out(S318)
	S354= PIDReg.Out=>IMMU.PID                                  Premise(F195)
	S355= IMMU.PID=pid                                          Path(S327,S354)
	S356= PC.Out=>IMMU.IEA                                      Premise(F196)
	S357= IMMU.IEA=addr+4                                       Path(S332,S356)
	S358= IMMU.Addr={pid,addr+4}                                IMMU-Search(S355,S357)
	S359= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S355,S357)
	S360= IMMU.Addr=>IAddrReg.In                                Premise(F197)
	S361= IAddrReg.In={pid,addr+4}                              Path(S358,S360)
	S362= IMMU.Hit=>IMMUHitReg.In                               Premise(F198)
	S363= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S359,S362)
	S364= PC.Out=>ICache.IEA                                    Premise(F199)
	S365= ICache.IEA=addr+4                                     Path(S332,S364)
	S366= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S365)
	S367= ICache.Out=>ICacheReg.In                              Premise(F200)
	S368= ICache.Hit=>ICacheHitReg.In                           Premise(F201)
	S369= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S366,S368)
	S370= IMMUHitReg.Out=>CU.IMemHit                            Premise(F202)
	S371= CU.IMemHit=IMMUHit(pid,addr)                          Path(S336,S370)
	S372= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F203)
	S373= CU.ICacheHit=ICacheHit(addr)                          Path(S339,S372)
	S374= IAddrReg.Out=>IMem.RAddr                              Premise(F204)
	S375= IMem.RAddr={pid,addr}                                 Path(S333,S374)
	S376= IMem.Out={31,rT,rA,0,1233}                            IMem-Read(S375,S305)
	S377= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S375,S305)
	S378= IMem.Out=>IRMux.MemData                               Premise(F205)
	S379= IRMux.MemData={31,rT,rA,0,1233}                       Path(S376,S378)
	S380= IRMux.Out={31,rT,rA,0,1233}                           IRMux-Select(S379)
	S381= ICacheReg.Out=>IRMux.CacheData                        Premise(F206)
	S382= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F207)
	S383= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S336,S382)
	S384= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F208)
	S385= IRMux.CacheSel=ICacheHit(addr)                        Path(S339,S384)
	S386= IRMux.Out=>IR.In                                      Premise(F209)
	S387= IR.In={31,rT,rA,0,1233}                               Path(S380,S386)
	S388= IMem.MEM8WordOut=>ICache.WData                        Premise(F210)
	S389= ICache.WData=IMemGet8Word({pid,addr})                 Path(S377,S388)
	S390= PC.Out=>ICache.IEA                                    Premise(F211)
	S391= IR.Out0_5=>CU.Op                                      Premise(F212)
	S392= CU.Op=31                                              Path(S342,S391)
	S393= IR.Out11_15=>GPRegs.RReg1                             Premise(F213)
	S394= GPRegs.RReg1=rA                                       Path(S344,S393)
	S395= GPRegs.Rdata1=a                                       GPRegs-Read(S394,S310)
	S396= IR.Out21_31=>CU.IRFunc                                Premise(F214)
	S397= CU.IRFunc=1233                                        Path(S346,S396)
	S398= CU.Func=alu_neg                                       CU(S392,S397)
	S399= GPRegs.Rdata1=>A.In                                   Premise(F215)
	S400= A.In=a                                                Path(S395,S399)
	S401= A.Out=>ALU.A                                          Premise(F216)
	S402= ALU.A=a                                               Path(S347,S401)
	S403= B.Out=>ALU.B                                          Premise(F217)
	S404= ALU.B=32'b0                                           Path(S350,S403)
	S405= CU.Func=>ALU.Func                                     Premise(F218)
	S406= ALU.Func=alu_neg                                      Path(S398,S405)
	S407= ALU.Out=(-a)                                          ALU(S402)
	S408= ALU.CMP=Compare0((-a))                                ALU(S402)
	S409= ALU.OV=OverFlow((-a))                                 ALU(S402)
	S410= ALU.CA=Carry((-a))                                    ALU(S402)
	S411= ALU.Out=>ALUOut.In                                    Premise(F219)
	S412= ALUOut.In=(-a)                                        Path(S407,S411)
	S413= ALU.CMP=>DataCmb.A                                    Premise(F220)
	S414= DataCmb.A=Compare0((-a))                              Path(S408,S413)
	S415= ORGate.Out=>DataCmb.B                                 Premise(F221)
	S416= ALU.OV=>OVReg.In                                      Premise(F222)
	S417= OVReg.In=OverFlow((-a))                               Path(S409,S416)
	S418= XER.SOOut=>ORGate.A                                   Premise(F223)
	S419= ORGate.A=so                                           Path(S353,S418)
	S420= ALU.OV=>ORGate.B                                      Premise(F224)
	S421= ORGate.B=OverFlow((-a))                               Path(S409,S420)
	S422= ORGate.Out=so|OverFlow((-a))                          ORGate(S419,S421)
	S423= DataCmb.B=so|OverFlow((-a))                           Path(S422,S415)
	S424= DataCmb.Out={Compare0((-a)),so|OverFlow((-a))}        DataCmb(S414,S423)
	S425= ORGate.Out=>DR1bit.In                                 Premise(F225)
	S426= DR1bit.In=so|OverFlow((-a))                           Path(S422,S425)
	S427= DataCmb.Out=>DR4bit.In                                Premise(F226)
	S428= DR4bit.In={Compare0((-a)),so|OverFlow((-a))}          Path(S424,S427)
	S429= IR.Out6_10=>GPRegs.WReg                               Premise(F227)
	S430= GPRegs.WReg=rT                                        Path(S343,S429)
	S431= ALUOut.Out=>GPRegs.WData                              Premise(F228)
	S432= DR4bit.Out=>CRRegs.CR0In                              Premise(F229)
	S433= DR1bit.Out=>XER.SOIn                                  Premise(F230)
	S434= OVReg.Out=>XER.OVIn                                   Premise(F231)
	S435= CtrlPIDReg=0                                          Premise(F232)
	S436= [PIDReg]=pid                                          PIDReg-Hold(S289,S435)
	S437= CtrlIMMU=0                                            Premise(F233)
	S438= CtrlPC=0                                              Premise(F234)
	S439= CtrlPCInc=0                                           Premise(F235)
	S440= PC[CIA]=addr                                          PC-Hold(S293,S439)
	S441= PC[Out]=addr+4                                        PC-Hold(S294,S438,S439)
	S442= CtrlIAddrReg=0                                        Premise(F236)
	S443= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S296,S442)
	S444= CtrlIMMUHitReg=0                                      Premise(F237)
	S445= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S298,S444)
	S446= CtrlICache=0                                          Premise(F238)
	S447= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S300,S446)
	S448= CtrlICacheReg=0                                       Premise(F239)
	S449= CtrlICacheHitReg=0                                    Premise(F240)
	S450= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S303,S449)
	S451= CtrlIMem=0                                            Premise(F241)
	S452= IMem[{pid,addr}]={31,rT,rA,0,1233}                    IMem-Hold(S305,S451)
	S453= CtrlIRMux=0                                           Premise(F242)
	S454= CtrlIR=0                                              Premise(F243)
	S455= [IR]={31,rT,rA,0,1233}                                IR-Hold(S308,S454)
	S456= CtrlGPRegs=0                                          Premise(F244)
	S457= GPRegs[rA]=a                                          GPRegs-Hold(S310,S456)
	S458= CtrlA=0                                               Premise(F245)
	S459= [A]=a                                                 A-Hold(S312,S458)
	S460= CtrlB=0                                               Premise(F246)
	S461= [B]=32'b0                                             B-Hold(S314,S460)
	S462= CtrlALUOut=1                                          Premise(F247)
	S463= [ALUOut]=(-a)                                         ALUOut-Write(S412,S462)
	S464= CtrlOVReg=1                                           Premise(F248)
	S465= [OVReg]=OverFlow((-a))                                OVReg-Write(S417,S464)
	S466= CtrlXERSO=0                                           Premise(F249)
	S467= XER[SO]=so                                            XER-SO-Hold(S318,S466)
	S468= CtrlXEROV=0                                           Premise(F250)
	S469= CtrlXERCA=0                                           Premise(F251)
	S470= CtrlDR1bit=1                                          Premise(F252)
	S471= [DR1bit]=so|OverFlow((-a))                            DR1bit-Write(S426,S470)
	S472= CtrlDR4bit=1                                          Premise(F253)
	S473= [DR4bit]={Compare0((-a)),so|OverFlow((-a))}           DR4bit-Write(S428,S472)
	S474= CtrlCRRegs=0                                          Premise(F254)
	S475= CtrlCRRegsCR0=0                                       Premise(F255)
	S476= CtrlCRRegsW4bitRegs=0                                 Premise(F256)
	S477= CtrlCRRegsW1bitRegs=0                                 Premise(F257)

MEM	S478= PIDReg.Out=pid                                        PIDReg-Out(S436)
	S479= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S436)
	S480= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S436)
	S481= PC.CIA=addr                                           PC-Out(S440)
	S482= PC.CIA31_28=addr[31:28]                               PC-Out(S440)
	S483= PC.Out=addr+4                                         PC-Out(S441)
	S484= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S443)
	S485= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S443)
	S486= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S443)
	S487= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S445)
	S488= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S445)
	S489= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S445)
	S490= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S450)
	S491= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S450)
	S492= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S450)
	S493= IR.Out0_5=31                                          IR-Out(S455)
	S494= IR.Out6_10=rT                                         IR-Out(S455)
	S495= IR.Out11_15=rA                                        IR-Out(S455)
	S496= IR.Out16_20=0                                         IR-Out(S455)
	S497= IR.Out21_31=1233                                      IR-Out(S455)
	S498= A.Out=a                                               A-Out(S459)
	S499= A.Out26_31=a[26:31]                                   A-Out(S459)
	S500= A.Out30_31=a[30:31]                                   A-Out(S459)
	S501= B.Out=32'b0                                           B-Out(S461)
	S502= B.Out26_31=32'b0[26:31]                               B-Out(S461)
	S503= B.Out30_31=32'b0[30:31]                               B-Out(S461)
	S504= ALUOut.Out=(-a)                                       ALUOut-Out(S463)
	S505= ALUOut.Out26_31=(-a)[26:31]                           ALUOut-Out(S463)
	S506= ALUOut.Out30_31=(-a)[30:31]                           ALUOut-Out(S463)
	S507= OVReg.Out=OverFlow((-a))                              OVReg-Out(S465)
	S508= OVReg.Out26_31=OverFlow((-a))[26:31]                  OVReg-Out(S465)
	S509= OVReg.Out30_31=OverFlow((-a))[30:31]                  OVReg-Out(S465)
	S510= XER.SOOut=so                                          XER-SO-Out(S467)
	S511= DR1bit.Out=so|OverFlow((-a))                          DR1bit-Out(S471)
	S512= DR1bit.Out26_31=so|OverFlow((-a))[26:31]              DR1bit-Out(S471)
	S513= DR1bit.Out30_31=so|OverFlow((-a))[30:31]              DR1bit-Out(S471)
	S514= DR4bit.Out={Compare0((-a)),so|OverFlow((-a))}         DR4bit-Out(S473)
	S515= DR4bit.Out26_31={Compare0((-a)),so|OverFlow((-a))}[26:31]DR4bit-Out(S473)
	S516= DR4bit.Out30_31={Compare0((-a)),so|OverFlow((-a))}[30:31]DR4bit-Out(S473)
	S517= PIDReg.Out=>IMMU.PID                                  Premise(F258)
	S518= IMMU.PID=pid                                          Path(S478,S517)
	S519= PC.Out=>IMMU.IEA                                      Premise(F259)
	S520= IMMU.IEA=addr+4                                       Path(S483,S519)
	S521= IMMU.Addr={pid,addr+4}                                IMMU-Search(S518,S520)
	S522= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S518,S520)
	S523= IMMU.Addr=>IAddrReg.In                                Premise(F260)
	S524= IAddrReg.In={pid,addr+4}                              Path(S521,S523)
	S525= IMMU.Hit=>IMMUHitReg.In                               Premise(F261)
	S526= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S522,S525)
	S527= PC.Out=>ICache.IEA                                    Premise(F262)
	S528= ICache.IEA=addr+4                                     Path(S483,S527)
	S529= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S528)
	S530= ICache.Out=>ICacheReg.In                              Premise(F263)
	S531= ICache.Hit=>ICacheHitReg.In                           Premise(F264)
	S532= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S529,S531)
	S533= IMMUHitReg.Out=>CU.IMemHit                            Premise(F265)
	S534= CU.IMemHit=IMMUHit(pid,addr)                          Path(S487,S533)
	S535= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F266)
	S536= CU.ICacheHit=ICacheHit(addr)                          Path(S490,S535)
	S537= IAddrReg.Out=>IMem.RAddr                              Premise(F267)
	S538= IMem.RAddr={pid,addr}                                 Path(S484,S537)
	S539= IMem.Out={31,rT,rA,0,1233}                            IMem-Read(S538,S452)
	S540= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S538,S452)
	S541= IMem.Out=>IRMux.MemData                               Premise(F268)
	S542= IRMux.MemData={31,rT,rA,0,1233}                       Path(S539,S541)
	S543= IRMux.Out={31,rT,rA,0,1233}                           IRMux-Select(S542)
	S544= ICacheReg.Out=>IRMux.CacheData                        Premise(F269)
	S545= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F270)
	S546= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S487,S545)
	S547= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F271)
	S548= IRMux.CacheSel=ICacheHit(addr)                        Path(S490,S547)
	S549= IRMux.Out=>IR.In                                      Premise(F272)
	S550= IR.In={31,rT,rA,0,1233}                               Path(S543,S549)
	S551= IMem.MEM8WordOut=>ICache.WData                        Premise(F273)
	S552= ICache.WData=IMemGet8Word({pid,addr})                 Path(S540,S551)
	S553= PC.Out=>ICache.IEA                                    Premise(F274)
	S554= IR.Out0_5=>CU.Op                                      Premise(F275)
	S555= CU.Op=31                                              Path(S493,S554)
	S556= IR.Out11_15=>GPRegs.RReg1                             Premise(F276)
	S557= GPRegs.RReg1=rA                                       Path(S495,S556)
	S558= GPRegs.Rdata1=a                                       GPRegs-Read(S557,S457)
	S559= IR.Out21_31=>CU.IRFunc                                Premise(F277)
	S560= CU.IRFunc=1233                                        Path(S497,S559)
	S561= CU.Func=alu_neg                                       CU(S555,S560)
	S562= GPRegs.Rdata1=>A.In                                   Premise(F278)
	S563= A.In=a                                                Path(S558,S562)
	S564= A.Out=>ALU.A                                          Premise(F279)
	S565= ALU.A=a                                               Path(S498,S564)
	S566= B.Out=>ALU.B                                          Premise(F280)
	S567= ALU.B=32'b0                                           Path(S501,S566)
	S568= CU.Func=>ALU.Func                                     Premise(F281)
	S569= ALU.Func=alu_neg                                      Path(S561,S568)
	S570= ALU.Out=(-a)                                          ALU(S565)
	S571= ALU.CMP=Compare0((-a))                                ALU(S565)
	S572= ALU.OV=OverFlow((-a))                                 ALU(S565)
	S573= ALU.CA=Carry((-a))                                    ALU(S565)
	S574= ALU.Out=>ALUOut.In                                    Premise(F282)
	S575= ALUOut.In=(-a)                                        Path(S570,S574)
	S576= ALU.CMP=>DataCmb.A                                    Premise(F283)
	S577= DataCmb.A=Compare0((-a))                              Path(S571,S576)
	S578= ORGate.Out=>DataCmb.B                                 Premise(F284)
	S579= ALU.OV=>OVReg.In                                      Premise(F285)
	S580= OVReg.In=OverFlow((-a))                               Path(S572,S579)
	S581= XER.SOOut=>ORGate.A                                   Premise(F286)
	S582= ORGate.A=so                                           Path(S510,S581)
	S583= ALU.OV=>ORGate.B                                      Premise(F287)
	S584= ORGate.B=OverFlow((-a))                               Path(S572,S583)
	S585= ORGate.Out=so|OverFlow((-a))                          ORGate(S582,S584)
	S586= DataCmb.B=so|OverFlow((-a))                           Path(S585,S578)
	S587= DataCmb.Out={Compare0((-a)),so|OverFlow((-a))}        DataCmb(S577,S586)
	S588= ORGate.Out=>DR1bit.In                                 Premise(F288)
	S589= DR1bit.In=so|OverFlow((-a))                           Path(S585,S588)
	S590= DataCmb.Out=>DR4bit.In                                Premise(F289)
	S591= DR4bit.In={Compare0((-a)),so|OverFlow((-a))}          Path(S587,S590)
	S592= IR.Out6_10=>GPRegs.WReg                               Premise(F290)
	S593= GPRegs.WReg=rT                                        Path(S494,S592)
	S594= ALUOut.Out=>GPRegs.WData                              Premise(F291)
	S595= GPRegs.WData=(-a)                                     Path(S504,S594)
	S596= DR4bit.Out=>CRRegs.CR0In                              Premise(F292)
	S597= CRRegs.CR0In={Compare0((-a)),so|OverFlow((-a))}       Path(S514,S596)
	S598= DR1bit.Out=>XER.SOIn                                  Premise(F293)
	S599= XER.SOIn=so|OverFlow((-a))                            Path(S511,S598)
	S600= OVReg.Out=>XER.OVIn                                   Premise(F294)
	S601= XER.OVIn=OverFlow((-a))                               Path(S507,S600)
	S602= CtrlPIDReg=0                                          Premise(F295)
	S603= [PIDReg]=pid                                          PIDReg-Hold(S436,S602)
	S604= CtrlIMMU=0                                            Premise(F296)
	S605= CtrlPC=0                                              Premise(F297)
	S606= CtrlPCInc=0                                           Premise(F298)
	S607= PC[CIA]=addr                                          PC-Hold(S440,S606)
	S608= PC[Out]=addr+4                                        PC-Hold(S441,S605,S606)
	S609= CtrlIAddrReg=0                                        Premise(F299)
	S610= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S443,S609)
	S611= CtrlIMMUHitReg=0                                      Premise(F300)
	S612= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S445,S611)
	S613= CtrlICache=0                                          Premise(F301)
	S614= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S447,S613)
	S615= CtrlICacheReg=0                                       Premise(F302)
	S616= CtrlICacheHitReg=0                                    Premise(F303)
	S617= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S450,S616)
	S618= CtrlIMem=0                                            Premise(F304)
	S619= IMem[{pid,addr}]={31,rT,rA,0,1233}                    IMem-Hold(S452,S618)
	S620= CtrlIRMux=0                                           Premise(F305)
	S621= CtrlIR=0                                              Premise(F306)
	S622= [IR]={31,rT,rA,0,1233}                                IR-Hold(S455,S621)
	S623= CtrlGPRegs=0                                          Premise(F307)
	S624= GPRegs[rA]=a                                          GPRegs-Hold(S457,S623)
	S625= CtrlA=0                                               Premise(F308)
	S626= [A]=a                                                 A-Hold(S459,S625)
	S627= CtrlB=0                                               Premise(F309)
	S628= [B]=32'b0                                             B-Hold(S461,S627)
	S629= CtrlALUOut=0                                          Premise(F310)
	S630= [ALUOut]=(-a)                                         ALUOut-Hold(S463,S629)
	S631= CtrlOVReg=0                                           Premise(F311)
	S632= [OVReg]=OverFlow((-a))                                OVReg-Hold(S465,S631)
	S633= CtrlXERSO=0                                           Premise(F312)
	S634= XER[SO]=so                                            XER-SO-Hold(S467,S633)
	S635= CtrlXEROV=0                                           Premise(F313)
	S636= CtrlXERCA=0                                           Premise(F314)
	S637= CtrlDR1bit=0                                          Premise(F315)
	S638= [DR1bit]=so|OverFlow((-a))                            DR1bit-Hold(S471,S637)
	S639= CtrlDR4bit=0                                          Premise(F316)
	S640= [DR4bit]={Compare0((-a)),so|OverFlow((-a))}           DR4bit-Hold(S473,S639)
	S641= CtrlCRRegs=0                                          Premise(F317)
	S642= CtrlCRRegsCR0=0                                       Premise(F318)
	S643= CtrlCRRegsW4bitRegs=0                                 Premise(F319)
	S644= CtrlCRRegsW1bitRegs=0                                 Premise(F320)

DMMU1	S645= PIDReg.Out=pid                                        PIDReg-Out(S603)
	S646= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S603)
	S647= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S603)
	S648= PC.CIA=addr                                           PC-Out(S607)
	S649= PC.CIA31_28=addr[31:28]                               PC-Out(S607)
	S650= PC.Out=addr+4                                         PC-Out(S608)
	S651= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S610)
	S652= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S610)
	S653= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S610)
	S654= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S612)
	S655= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S612)
	S656= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S612)
	S657= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S617)
	S658= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S617)
	S659= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S617)
	S660= IR.Out0_5=31                                          IR-Out(S622)
	S661= IR.Out6_10=rT                                         IR-Out(S622)
	S662= IR.Out11_15=rA                                        IR-Out(S622)
	S663= IR.Out16_20=0                                         IR-Out(S622)
	S664= IR.Out21_31=1233                                      IR-Out(S622)
	S665= A.Out=a                                               A-Out(S626)
	S666= A.Out26_31=a[26:31]                                   A-Out(S626)
	S667= A.Out30_31=a[30:31]                                   A-Out(S626)
	S668= B.Out=32'b0                                           B-Out(S628)
	S669= B.Out26_31=32'b0[26:31]                               B-Out(S628)
	S670= B.Out30_31=32'b0[30:31]                               B-Out(S628)
	S671= ALUOut.Out=(-a)                                       ALUOut-Out(S630)
	S672= ALUOut.Out26_31=(-a)[26:31]                           ALUOut-Out(S630)
	S673= ALUOut.Out30_31=(-a)[30:31]                           ALUOut-Out(S630)
	S674= OVReg.Out=OverFlow((-a))                              OVReg-Out(S632)
	S675= OVReg.Out26_31=OverFlow((-a))[26:31]                  OVReg-Out(S632)
	S676= OVReg.Out30_31=OverFlow((-a))[30:31]                  OVReg-Out(S632)
	S677= XER.SOOut=so                                          XER-SO-Out(S634)
	S678= DR1bit.Out=so|OverFlow((-a))                          DR1bit-Out(S638)
	S679= DR1bit.Out26_31=so|OverFlow((-a))[26:31]              DR1bit-Out(S638)
	S680= DR1bit.Out30_31=so|OverFlow((-a))[30:31]              DR1bit-Out(S638)
	S681= DR4bit.Out={Compare0((-a)),so|OverFlow((-a))}         DR4bit-Out(S640)
	S682= DR4bit.Out26_31={Compare0((-a)),so|OverFlow((-a))}[26:31]DR4bit-Out(S640)
	S683= DR4bit.Out30_31={Compare0((-a)),so|OverFlow((-a))}[30:31]DR4bit-Out(S640)
	S684= PIDReg.Out=>IMMU.PID                                  Premise(F321)
	S685= IMMU.PID=pid                                          Path(S645,S684)
	S686= PC.Out=>IMMU.IEA                                      Premise(F322)
	S687= IMMU.IEA=addr+4                                       Path(S650,S686)
	S688= IMMU.Addr={pid,addr+4}                                IMMU-Search(S685,S687)
	S689= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S685,S687)
	S690= IMMU.Addr=>IAddrReg.In                                Premise(F323)
	S691= IAddrReg.In={pid,addr+4}                              Path(S688,S690)
	S692= IMMU.Hit=>IMMUHitReg.In                               Premise(F324)
	S693= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S689,S692)
	S694= PC.Out=>ICache.IEA                                    Premise(F325)
	S695= ICache.IEA=addr+4                                     Path(S650,S694)
	S696= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S695)
	S697= ICache.Out=>ICacheReg.In                              Premise(F326)
	S698= ICache.Hit=>ICacheHitReg.In                           Premise(F327)
	S699= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S696,S698)
	S700= IMMUHitReg.Out=>CU.IMemHit                            Premise(F328)
	S701= CU.IMemHit=IMMUHit(pid,addr)                          Path(S654,S700)
	S702= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F329)
	S703= CU.ICacheHit=ICacheHit(addr)                          Path(S657,S702)
	S704= IAddrReg.Out=>IMem.RAddr                              Premise(F330)
	S705= IMem.RAddr={pid,addr}                                 Path(S651,S704)
	S706= IMem.Out={31,rT,rA,0,1233}                            IMem-Read(S705,S619)
	S707= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S705,S619)
	S708= IMem.Out=>IRMux.MemData                               Premise(F331)
	S709= IRMux.MemData={31,rT,rA,0,1233}                       Path(S706,S708)
	S710= IRMux.Out={31,rT,rA,0,1233}                           IRMux-Select(S709)
	S711= ICacheReg.Out=>IRMux.CacheData                        Premise(F332)
	S712= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F333)
	S713= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S654,S712)
	S714= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F334)
	S715= IRMux.CacheSel=ICacheHit(addr)                        Path(S657,S714)
	S716= IRMux.Out=>IR.In                                      Premise(F335)
	S717= IR.In={31,rT,rA,0,1233}                               Path(S710,S716)
	S718= IMem.MEM8WordOut=>ICache.WData                        Premise(F336)
	S719= ICache.WData=IMemGet8Word({pid,addr})                 Path(S707,S718)
	S720= PC.Out=>ICache.IEA                                    Premise(F337)
	S721= IR.Out0_5=>CU.Op                                      Premise(F338)
	S722= CU.Op=31                                              Path(S660,S721)
	S723= IR.Out11_15=>GPRegs.RReg1                             Premise(F339)
	S724= GPRegs.RReg1=rA                                       Path(S662,S723)
	S725= GPRegs.Rdata1=a                                       GPRegs-Read(S724,S624)
	S726= IR.Out21_31=>CU.IRFunc                                Premise(F340)
	S727= CU.IRFunc=1233                                        Path(S664,S726)
	S728= CU.Func=alu_neg                                       CU(S722,S727)
	S729= GPRegs.Rdata1=>A.In                                   Premise(F341)
	S730= A.In=a                                                Path(S725,S729)
	S731= A.Out=>ALU.A                                          Premise(F342)
	S732= ALU.A=a                                               Path(S665,S731)
	S733= B.Out=>ALU.B                                          Premise(F343)
	S734= ALU.B=32'b0                                           Path(S668,S733)
	S735= CU.Func=>ALU.Func                                     Premise(F344)
	S736= ALU.Func=alu_neg                                      Path(S728,S735)
	S737= ALU.Out=(-a)                                          ALU(S732)
	S738= ALU.CMP=Compare0((-a))                                ALU(S732)
	S739= ALU.OV=OverFlow((-a))                                 ALU(S732)
	S740= ALU.CA=Carry((-a))                                    ALU(S732)
	S741= ALU.Out=>ALUOut.In                                    Premise(F345)
	S742= ALUOut.In=(-a)                                        Path(S737,S741)
	S743= ALU.CMP=>DataCmb.A                                    Premise(F346)
	S744= DataCmb.A=Compare0((-a))                              Path(S738,S743)
	S745= ORGate.Out=>DataCmb.B                                 Premise(F347)
	S746= ALU.OV=>OVReg.In                                      Premise(F348)
	S747= OVReg.In=OverFlow((-a))                               Path(S739,S746)
	S748= XER.SOOut=>ORGate.A                                   Premise(F349)
	S749= ORGate.A=so                                           Path(S677,S748)
	S750= ALU.OV=>ORGate.B                                      Premise(F350)
	S751= ORGate.B=OverFlow((-a))                               Path(S739,S750)
	S752= ORGate.Out=so|OverFlow((-a))                          ORGate(S749,S751)
	S753= DataCmb.B=so|OverFlow((-a))                           Path(S752,S745)
	S754= DataCmb.Out={Compare0((-a)),so|OverFlow((-a))}        DataCmb(S744,S753)
	S755= ORGate.Out=>DR1bit.In                                 Premise(F351)
	S756= DR1bit.In=so|OverFlow((-a))                           Path(S752,S755)
	S757= DataCmb.Out=>DR4bit.In                                Premise(F352)
	S758= DR4bit.In={Compare0((-a)),so|OverFlow((-a))}          Path(S754,S757)
	S759= IR.Out6_10=>GPRegs.WReg                               Premise(F353)
	S760= GPRegs.WReg=rT                                        Path(S661,S759)
	S761= ALUOut.Out=>GPRegs.WData                              Premise(F354)
	S762= GPRegs.WData=(-a)                                     Path(S671,S761)
	S763= DR4bit.Out=>CRRegs.CR0In                              Premise(F355)
	S764= CRRegs.CR0In={Compare0((-a)),so|OverFlow((-a))}       Path(S681,S763)
	S765= DR1bit.Out=>XER.SOIn                                  Premise(F356)
	S766= XER.SOIn=so|OverFlow((-a))                            Path(S678,S765)
	S767= OVReg.Out=>XER.OVIn                                   Premise(F357)
	S768= XER.OVIn=OverFlow((-a))                               Path(S674,S767)
	S769= CtrlPIDReg=0                                          Premise(F358)
	S770= [PIDReg]=pid                                          PIDReg-Hold(S603,S769)
	S771= CtrlIMMU=0                                            Premise(F359)
	S772= CtrlPC=0                                              Premise(F360)
	S773= CtrlPCInc=0                                           Premise(F361)
	S774= PC[CIA]=addr                                          PC-Hold(S607,S773)
	S775= PC[Out]=addr+4                                        PC-Hold(S608,S772,S773)
	S776= CtrlIAddrReg=0                                        Premise(F362)
	S777= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S610,S776)
	S778= CtrlIMMUHitReg=0                                      Premise(F363)
	S779= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S612,S778)
	S780= CtrlICache=0                                          Premise(F364)
	S781= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S614,S780)
	S782= CtrlICacheReg=0                                       Premise(F365)
	S783= CtrlICacheHitReg=0                                    Premise(F366)
	S784= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S617,S783)
	S785= CtrlIMem=0                                            Premise(F367)
	S786= IMem[{pid,addr}]={31,rT,rA,0,1233}                    IMem-Hold(S619,S785)
	S787= CtrlIRMux=0                                           Premise(F368)
	S788= CtrlIR=0                                              Premise(F369)
	S789= [IR]={31,rT,rA,0,1233}                                IR-Hold(S622,S788)
	S790= CtrlGPRegs=0                                          Premise(F370)
	S791= GPRegs[rA]=a                                          GPRegs-Hold(S624,S790)
	S792= CtrlA=0                                               Premise(F371)
	S793= [A]=a                                                 A-Hold(S626,S792)
	S794= CtrlB=0                                               Premise(F372)
	S795= [B]=32'b0                                             B-Hold(S628,S794)
	S796= CtrlALUOut=0                                          Premise(F373)
	S797= [ALUOut]=(-a)                                         ALUOut-Hold(S630,S796)
	S798= CtrlOVReg=0                                           Premise(F374)
	S799= [OVReg]=OverFlow((-a))                                OVReg-Hold(S632,S798)
	S800= CtrlXERSO=0                                           Premise(F375)
	S801= XER[SO]=so                                            XER-SO-Hold(S634,S800)
	S802= CtrlXEROV=0                                           Premise(F376)
	S803= CtrlXERCA=0                                           Premise(F377)
	S804= CtrlDR1bit=0                                          Premise(F378)
	S805= [DR1bit]=so|OverFlow((-a))                            DR1bit-Hold(S638,S804)
	S806= CtrlDR4bit=0                                          Premise(F379)
	S807= [DR4bit]={Compare0((-a)),so|OverFlow((-a))}           DR4bit-Hold(S640,S806)
	S808= CtrlCRRegs=0                                          Premise(F380)
	S809= CtrlCRRegsCR0=0                                       Premise(F381)
	S810= CtrlCRRegsW4bitRegs=0                                 Premise(F382)
	S811= CtrlCRRegsW1bitRegs=0                                 Premise(F383)

DMMU2	S812= PIDReg.Out=pid                                        PIDReg-Out(S770)
	S813= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S770)
	S814= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S770)
	S815= PC.CIA=addr                                           PC-Out(S774)
	S816= PC.CIA31_28=addr[31:28]                               PC-Out(S774)
	S817= PC.Out=addr+4                                         PC-Out(S775)
	S818= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S777)
	S819= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S777)
	S820= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S777)
	S821= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S779)
	S822= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S779)
	S823= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S779)
	S824= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S784)
	S825= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S784)
	S826= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S784)
	S827= IR.Out0_5=31                                          IR-Out(S789)
	S828= IR.Out6_10=rT                                         IR-Out(S789)
	S829= IR.Out11_15=rA                                        IR-Out(S789)
	S830= IR.Out16_20=0                                         IR-Out(S789)
	S831= IR.Out21_31=1233                                      IR-Out(S789)
	S832= A.Out=a                                               A-Out(S793)
	S833= A.Out26_31=a[26:31]                                   A-Out(S793)
	S834= A.Out30_31=a[30:31]                                   A-Out(S793)
	S835= B.Out=32'b0                                           B-Out(S795)
	S836= B.Out26_31=32'b0[26:31]                               B-Out(S795)
	S837= B.Out30_31=32'b0[30:31]                               B-Out(S795)
	S838= ALUOut.Out=(-a)                                       ALUOut-Out(S797)
	S839= ALUOut.Out26_31=(-a)[26:31]                           ALUOut-Out(S797)
	S840= ALUOut.Out30_31=(-a)[30:31]                           ALUOut-Out(S797)
	S841= OVReg.Out=OverFlow((-a))                              OVReg-Out(S799)
	S842= OVReg.Out26_31=OverFlow((-a))[26:31]                  OVReg-Out(S799)
	S843= OVReg.Out30_31=OverFlow((-a))[30:31]                  OVReg-Out(S799)
	S844= XER.SOOut=so                                          XER-SO-Out(S801)
	S845= DR1bit.Out=so|OverFlow((-a))                          DR1bit-Out(S805)
	S846= DR1bit.Out26_31=so|OverFlow((-a))[26:31]              DR1bit-Out(S805)
	S847= DR1bit.Out30_31=so|OverFlow((-a))[30:31]              DR1bit-Out(S805)
	S848= DR4bit.Out={Compare0((-a)),so|OverFlow((-a))}         DR4bit-Out(S807)
	S849= DR4bit.Out26_31={Compare0((-a)),so|OverFlow((-a))}[26:31]DR4bit-Out(S807)
	S850= DR4bit.Out30_31={Compare0((-a)),so|OverFlow((-a))}[30:31]DR4bit-Out(S807)
	S851= PIDReg.Out=>IMMU.PID                                  Premise(F384)
	S852= IMMU.PID=pid                                          Path(S812,S851)
	S853= PC.Out=>IMMU.IEA                                      Premise(F385)
	S854= IMMU.IEA=addr+4                                       Path(S817,S853)
	S855= IMMU.Addr={pid,addr+4}                                IMMU-Search(S852,S854)
	S856= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S852,S854)
	S857= IMMU.Addr=>IAddrReg.In                                Premise(F386)
	S858= IAddrReg.In={pid,addr+4}                              Path(S855,S857)
	S859= IMMU.Hit=>IMMUHitReg.In                               Premise(F387)
	S860= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S856,S859)
	S861= PC.Out=>ICache.IEA                                    Premise(F388)
	S862= ICache.IEA=addr+4                                     Path(S817,S861)
	S863= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S862)
	S864= ICache.Out=>ICacheReg.In                              Premise(F389)
	S865= ICache.Hit=>ICacheHitReg.In                           Premise(F390)
	S866= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S863,S865)
	S867= IMMUHitReg.Out=>CU.IMemHit                            Premise(F391)
	S868= CU.IMemHit=IMMUHit(pid,addr)                          Path(S821,S867)
	S869= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F392)
	S870= CU.ICacheHit=ICacheHit(addr)                          Path(S824,S869)
	S871= IAddrReg.Out=>IMem.RAddr                              Premise(F393)
	S872= IMem.RAddr={pid,addr}                                 Path(S818,S871)
	S873= IMem.Out={31,rT,rA,0,1233}                            IMem-Read(S872,S786)
	S874= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S872,S786)
	S875= IMem.Out=>IRMux.MemData                               Premise(F394)
	S876= IRMux.MemData={31,rT,rA,0,1233}                       Path(S873,S875)
	S877= IRMux.Out={31,rT,rA,0,1233}                           IRMux-Select(S876)
	S878= ICacheReg.Out=>IRMux.CacheData                        Premise(F395)
	S879= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F396)
	S880= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S821,S879)
	S881= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F397)
	S882= IRMux.CacheSel=ICacheHit(addr)                        Path(S824,S881)
	S883= IRMux.Out=>IR.In                                      Premise(F398)
	S884= IR.In={31,rT,rA,0,1233}                               Path(S877,S883)
	S885= IMem.MEM8WordOut=>ICache.WData                        Premise(F399)
	S886= ICache.WData=IMemGet8Word({pid,addr})                 Path(S874,S885)
	S887= PC.Out=>ICache.IEA                                    Premise(F400)
	S888= IR.Out0_5=>CU.Op                                      Premise(F401)
	S889= CU.Op=31                                              Path(S827,S888)
	S890= IR.Out11_15=>GPRegs.RReg1                             Premise(F402)
	S891= GPRegs.RReg1=rA                                       Path(S829,S890)
	S892= GPRegs.Rdata1=a                                       GPRegs-Read(S891,S791)
	S893= IR.Out21_31=>CU.IRFunc                                Premise(F403)
	S894= CU.IRFunc=1233                                        Path(S831,S893)
	S895= CU.Func=alu_neg                                       CU(S889,S894)
	S896= GPRegs.Rdata1=>A.In                                   Premise(F404)
	S897= A.In=a                                                Path(S892,S896)
	S898= A.Out=>ALU.A                                          Premise(F405)
	S899= ALU.A=a                                               Path(S832,S898)
	S900= B.Out=>ALU.B                                          Premise(F406)
	S901= ALU.B=32'b0                                           Path(S835,S900)
	S902= CU.Func=>ALU.Func                                     Premise(F407)
	S903= ALU.Func=alu_neg                                      Path(S895,S902)
	S904= ALU.Out=(-a)                                          ALU(S899)
	S905= ALU.CMP=Compare0((-a))                                ALU(S899)
	S906= ALU.OV=OverFlow((-a))                                 ALU(S899)
	S907= ALU.CA=Carry((-a))                                    ALU(S899)
	S908= ALU.Out=>ALUOut.In                                    Premise(F408)
	S909= ALUOut.In=(-a)                                        Path(S904,S908)
	S910= ALU.CMP=>DataCmb.A                                    Premise(F409)
	S911= DataCmb.A=Compare0((-a))                              Path(S905,S910)
	S912= ORGate.Out=>DataCmb.B                                 Premise(F410)
	S913= ALU.OV=>OVReg.In                                      Premise(F411)
	S914= OVReg.In=OverFlow((-a))                               Path(S906,S913)
	S915= XER.SOOut=>ORGate.A                                   Premise(F412)
	S916= ORGate.A=so                                           Path(S844,S915)
	S917= ALU.OV=>ORGate.B                                      Premise(F413)
	S918= ORGate.B=OverFlow((-a))                               Path(S906,S917)
	S919= ORGate.Out=so|OverFlow((-a))                          ORGate(S916,S918)
	S920= DataCmb.B=so|OverFlow((-a))                           Path(S919,S912)
	S921= DataCmb.Out={Compare0((-a)),so|OverFlow((-a))}        DataCmb(S911,S920)
	S922= ORGate.Out=>DR1bit.In                                 Premise(F414)
	S923= DR1bit.In=so|OverFlow((-a))                           Path(S919,S922)
	S924= DataCmb.Out=>DR4bit.In                                Premise(F415)
	S925= DR4bit.In={Compare0((-a)),so|OverFlow((-a))}          Path(S921,S924)
	S926= IR.Out6_10=>GPRegs.WReg                               Premise(F416)
	S927= GPRegs.WReg=rT                                        Path(S828,S926)
	S928= ALUOut.Out=>GPRegs.WData                              Premise(F417)
	S929= GPRegs.WData=(-a)                                     Path(S838,S928)
	S930= DR4bit.Out=>CRRegs.CR0In                              Premise(F418)
	S931= CRRegs.CR0In={Compare0((-a)),so|OverFlow((-a))}       Path(S848,S930)
	S932= DR1bit.Out=>XER.SOIn                                  Premise(F419)
	S933= XER.SOIn=so|OverFlow((-a))                            Path(S845,S932)
	S934= OVReg.Out=>XER.OVIn                                   Premise(F420)
	S935= XER.OVIn=OverFlow((-a))                               Path(S841,S934)
	S936= CtrlPIDReg=0                                          Premise(F421)
	S937= [PIDReg]=pid                                          PIDReg-Hold(S770,S936)
	S938= CtrlIMMU=0                                            Premise(F422)
	S939= CtrlPC=0                                              Premise(F423)
	S940= CtrlPCInc=0                                           Premise(F424)
	S941= PC[CIA]=addr                                          PC-Hold(S774,S940)
	S942= PC[Out]=addr+4                                        PC-Hold(S775,S939,S940)
	S943= CtrlIAddrReg=0                                        Premise(F425)
	S944= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S777,S943)
	S945= CtrlIMMUHitReg=0                                      Premise(F426)
	S946= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S779,S945)
	S947= CtrlICache=0                                          Premise(F427)
	S948= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S781,S947)
	S949= CtrlICacheReg=0                                       Premise(F428)
	S950= CtrlICacheHitReg=0                                    Premise(F429)
	S951= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S784,S950)
	S952= CtrlIMem=0                                            Premise(F430)
	S953= IMem[{pid,addr}]={31,rT,rA,0,1233}                    IMem-Hold(S786,S952)
	S954= CtrlIRMux=0                                           Premise(F431)
	S955= CtrlIR=0                                              Premise(F432)
	S956= [IR]={31,rT,rA,0,1233}                                IR-Hold(S789,S955)
	S957= CtrlGPRegs=0                                          Premise(F433)
	S958= GPRegs[rA]=a                                          GPRegs-Hold(S791,S957)
	S959= CtrlA=0                                               Premise(F434)
	S960= [A]=a                                                 A-Hold(S793,S959)
	S961= CtrlB=0                                               Premise(F435)
	S962= [B]=32'b0                                             B-Hold(S795,S961)
	S963= CtrlALUOut=0                                          Premise(F436)
	S964= [ALUOut]=(-a)                                         ALUOut-Hold(S797,S963)
	S965= CtrlOVReg=0                                           Premise(F437)
	S966= [OVReg]=OverFlow((-a))                                OVReg-Hold(S799,S965)
	S967= CtrlXERSO=0                                           Premise(F438)
	S968= XER[SO]=so                                            XER-SO-Hold(S801,S967)
	S969= CtrlXEROV=0                                           Premise(F439)
	S970= CtrlXERCA=0                                           Premise(F440)
	S971= CtrlDR1bit=0                                          Premise(F441)
	S972= [DR1bit]=so|OverFlow((-a))                            DR1bit-Hold(S805,S971)
	S973= CtrlDR4bit=0                                          Premise(F442)
	S974= [DR4bit]={Compare0((-a)),so|OverFlow((-a))}           DR4bit-Hold(S807,S973)
	S975= CtrlCRRegs=0                                          Premise(F443)
	S976= CtrlCRRegsCR0=0                                       Premise(F444)
	S977= CtrlCRRegsW4bitRegs=0                                 Premise(F445)
	S978= CtrlCRRegsW1bitRegs=0                                 Premise(F446)

WB	S979= PIDReg.Out=pid                                        PIDReg-Out(S937)
	S980= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S937)
	S981= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S937)
	S982= PC.CIA=addr                                           PC-Out(S941)
	S983= PC.CIA31_28=addr[31:28]                               PC-Out(S941)
	S984= PC.Out=addr+4                                         PC-Out(S942)
	S985= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S944)
	S986= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S944)
	S987= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S944)
	S988= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S946)
	S989= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S946)
	S990= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S946)
	S991= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S951)
	S992= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S951)
	S993= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S951)
	S994= IR.Out0_5=31                                          IR-Out(S956)
	S995= IR.Out6_10=rT                                         IR-Out(S956)
	S996= IR.Out11_15=rA                                        IR-Out(S956)
	S997= IR.Out16_20=0                                         IR-Out(S956)
	S998= IR.Out21_31=1233                                      IR-Out(S956)
	S999= A.Out=a                                               A-Out(S960)
	S1000= A.Out26_31=a[26:31]                                  A-Out(S960)
	S1001= A.Out30_31=a[30:31]                                  A-Out(S960)
	S1002= B.Out=32'b0                                          B-Out(S962)
	S1003= B.Out26_31=32'b0[26:31]                              B-Out(S962)
	S1004= B.Out30_31=32'b0[30:31]                              B-Out(S962)
	S1005= ALUOut.Out=(-a)                                      ALUOut-Out(S964)
	S1006= ALUOut.Out26_31=(-a)[26:31]                          ALUOut-Out(S964)
	S1007= ALUOut.Out30_31=(-a)[30:31]                          ALUOut-Out(S964)
	S1008= OVReg.Out=OverFlow((-a))                             OVReg-Out(S966)
	S1009= OVReg.Out26_31=OverFlow((-a))[26:31]                 OVReg-Out(S966)
	S1010= OVReg.Out30_31=OverFlow((-a))[30:31]                 OVReg-Out(S966)
	S1011= XER.SOOut=so                                         XER-SO-Out(S968)
	S1012= DR1bit.Out=so|OverFlow((-a))                         DR1bit-Out(S972)
	S1013= DR1bit.Out26_31=so|OverFlow((-a))[26:31]             DR1bit-Out(S972)
	S1014= DR1bit.Out30_31=so|OverFlow((-a))[30:31]             DR1bit-Out(S972)
	S1015= DR4bit.Out={Compare0((-a)),so|OverFlow((-a))}        DR4bit-Out(S974)
	S1016= DR4bit.Out26_31={Compare0((-a)),so|OverFlow((-a))}[26:31]DR4bit-Out(S974)
	S1017= DR4bit.Out30_31={Compare0((-a)),so|OverFlow((-a))}[30:31]DR4bit-Out(S974)
	S1018= PIDReg.Out=>IMMU.PID                                 Premise(F447)
	S1019= IMMU.PID=pid                                         Path(S979,S1018)
	S1020= PC.Out=>IMMU.IEA                                     Premise(F448)
	S1021= IMMU.IEA=addr+4                                      Path(S984,S1020)
	S1022= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1019,S1021)
	S1023= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1019,S1021)
	S1024= IMMU.Addr=>IAddrReg.In                               Premise(F449)
	S1025= IAddrReg.In={pid,addr+4}                             Path(S1022,S1024)
	S1026= IMMU.Hit=>IMMUHitReg.In                              Premise(F450)
	S1027= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1023,S1026)
	S1028= PC.Out=>ICache.IEA                                   Premise(F451)
	S1029= ICache.IEA=addr+4                                    Path(S984,S1028)
	S1030= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1029)
	S1031= ICache.Out=>ICacheReg.In                             Premise(F452)
	S1032= ICache.Hit=>ICacheHitReg.In                          Premise(F453)
	S1033= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1030,S1032)
	S1034= IMMUHitReg.Out=>CU.IMemHit                           Premise(F454)
	S1035= CU.IMemHit=IMMUHit(pid,addr)                         Path(S988,S1034)
	S1036= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F455)
	S1037= CU.ICacheHit=ICacheHit(addr)                         Path(S991,S1036)
	S1038= IAddrReg.Out=>IMem.RAddr                             Premise(F456)
	S1039= IMem.RAddr={pid,addr}                                Path(S985,S1038)
	S1040= IMem.Out={31,rT,rA,0,1233}                           IMem-Read(S1039,S953)
	S1041= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1039,S953)
	S1042= IMem.Out=>IRMux.MemData                              Premise(F457)
	S1043= IRMux.MemData={31,rT,rA,0,1233}                      Path(S1040,S1042)
	S1044= IRMux.Out={31,rT,rA,0,1233}                          IRMux-Select(S1043)
	S1045= ICacheReg.Out=>IRMux.CacheData                       Premise(F458)
	S1046= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F459)
	S1047= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S988,S1046)
	S1048= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F460)
	S1049= IRMux.CacheSel=ICacheHit(addr)                       Path(S991,S1048)
	S1050= IRMux.Out=>IR.In                                     Premise(F461)
	S1051= IR.In={31,rT,rA,0,1233}                              Path(S1044,S1050)
	S1052= IMem.MEM8WordOut=>ICache.WData                       Premise(F462)
	S1053= ICache.WData=IMemGet8Word({pid,addr})                Path(S1041,S1052)
	S1054= PC.Out=>ICache.IEA                                   Premise(F463)
	S1055= IR.Out0_5=>CU.Op                                     Premise(F464)
	S1056= CU.Op=31                                             Path(S994,S1055)
	S1057= IR.Out11_15=>GPRegs.RReg1                            Premise(F465)
	S1058= GPRegs.RReg1=rA                                      Path(S996,S1057)
	S1059= GPRegs.Rdata1=a                                      GPRegs-Read(S1058,S958)
	S1060= IR.Out21_31=>CU.IRFunc                               Premise(F466)
	S1061= CU.IRFunc=1233                                       Path(S998,S1060)
	S1062= CU.Func=alu_neg                                      CU(S1056,S1061)
	S1063= GPRegs.Rdata1=>A.In                                  Premise(F467)
	S1064= A.In=a                                               Path(S1059,S1063)
	S1065= A.Out=>ALU.A                                         Premise(F468)
	S1066= ALU.A=a                                              Path(S999,S1065)
	S1067= B.Out=>ALU.B                                         Premise(F469)
	S1068= ALU.B=32'b0                                          Path(S1002,S1067)
	S1069= CU.Func=>ALU.Func                                    Premise(F470)
	S1070= ALU.Func=alu_neg                                     Path(S1062,S1069)
	S1071= ALU.Out=(-a)                                         ALU(S1066)
	S1072= ALU.CMP=Compare0((-a))                               ALU(S1066)
	S1073= ALU.OV=OverFlow((-a))                                ALU(S1066)
	S1074= ALU.CA=Carry((-a))                                   ALU(S1066)
	S1075= ALU.Out=>ALUOut.In                                   Premise(F471)
	S1076= ALUOut.In=(-a)                                       Path(S1071,S1075)
	S1077= ALU.CMP=>DataCmb.A                                   Premise(F472)
	S1078= DataCmb.A=Compare0((-a))                             Path(S1072,S1077)
	S1079= ORGate.Out=>DataCmb.B                                Premise(F473)
	S1080= ALU.OV=>OVReg.In                                     Premise(F474)
	S1081= OVReg.In=OverFlow((-a))                              Path(S1073,S1080)
	S1082= XER.SOOut=>ORGate.A                                  Premise(F475)
	S1083= ORGate.A=so                                          Path(S1011,S1082)
	S1084= ALU.OV=>ORGate.B                                     Premise(F476)
	S1085= ORGate.B=OverFlow((-a))                              Path(S1073,S1084)
	S1086= ORGate.Out=so|OverFlow((-a))                         ORGate(S1083,S1085)
	S1087= DataCmb.B=so|OverFlow((-a))                          Path(S1086,S1079)
	S1088= DataCmb.Out={Compare0((-a)),so|OverFlow((-a))}       DataCmb(S1078,S1087)
	S1089= ORGate.Out=>DR1bit.In                                Premise(F477)
	S1090= DR1bit.In=so|OverFlow((-a))                          Path(S1086,S1089)
	S1091= DataCmb.Out=>DR4bit.In                               Premise(F478)
	S1092= DR4bit.In={Compare0((-a)),so|OverFlow((-a))}         Path(S1088,S1091)
	S1093= IR.Out6_10=>GPRegs.WReg                              Premise(F479)
	S1094= GPRegs.WReg=rT                                       Path(S995,S1093)
	S1095= ALUOut.Out=>GPRegs.WData                             Premise(F480)
	S1096= GPRegs.WData=(-a)                                    Path(S1005,S1095)
	S1097= DR4bit.Out=>CRRegs.CR0In                             Premise(F481)
	S1098= CRRegs.CR0In={Compare0((-a)),so|OverFlow((-a))}      Path(S1015,S1097)
	S1099= DR1bit.Out=>XER.SOIn                                 Premise(F482)
	S1100= XER.SOIn=so|OverFlow((-a))                           Path(S1012,S1099)
	S1101= OVReg.Out=>XER.OVIn                                  Premise(F483)
	S1102= XER.OVIn=OverFlow((-a))                              Path(S1008,S1101)
	S1103= CtrlPIDReg=0                                         Premise(F484)
	S1104= [PIDReg]=pid                                         PIDReg-Hold(S937,S1103)
	S1105= CtrlIMMU=0                                           Premise(F485)
	S1106= CtrlPC=0                                             Premise(F486)
	S1107= CtrlPCInc=0                                          Premise(F487)
	S1108= PC[CIA]=addr                                         PC-Hold(S941,S1107)
	S1109= PC[Out]=addr+4                                       PC-Hold(S942,S1106,S1107)
	S1110= CtrlIAddrReg=0                                       Premise(F488)
	S1111= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S944,S1110)
	S1112= CtrlIMMUHitReg=0                                     Premise(F489)
	S1113= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S946,S1112)
	S1114= CtrlICache=0                                         Premise(F490)
	S1115= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S948,S1114)
	S1116= CtrlICacheReg=0                                      Premise(F491)
	S1117= CtrlICacheHitReg=0                                   Premise(F492)
	S1118= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S951,S1117)
	S1119= CtrlIMem=0                                           Premise(F493)
	S1120= IMem[{pid,addr}]={31,rT,rA,0,1233}                   IMem-Hold(S953,S1119)
	S1121= CtrlIRMux=0                                          Premise(F494)
	S1122= CtrlIR=0                                             Premise(F495)
	S1123= [IR]={31,rT,rA,0,1233}                               IR-Hold(S956,S1122)
	S1124= CtrlGPRegs=1                                         Premise(F496)
	S1125= GPRegs[rT]=(-a)                                      GPRegs-Write(S1094,S1096,S1124)
	S1126= CtrlA=0                                              Premise(F497)
	S1127= [A]=a                                                A-Hold(S960,S1126)
	S1128= CtrlB=0                                              Premise(F498)
	S1129= [B]=32'b0                                            B-Hold(S962,S1128)
	S1130= CtrlALUOut=0                                         Premise(F499)
	S1131= [ALUOut]=(-a)                                        ALUOut-Hold(S964,S1130)
	S1132= CtrlOVReg=0                                          Premise(F500)
	S1133= [OVReg]=OverFlow((-a))                               OVReg-Hold(S966,S1132)
	S1134= CtrlXERSO=1                                          Premise(F501)
	S1135= XER[SO]=so|OverFlow((-a))                            XER-SO-Write(S1100,S1134)
	S1136= CtrlXEROV=1                                          Premise(F502)
	S1137= XER[OV]=OverFlow((-a))                               XER-OV-Write(S1102,S1136)
	S1138= CtrlXERCA=0                                          Premise(F503)
	S1139= CtrlDR1bit=0                                         Premise(F504)
	S1140= [DR1bit]=so|OverFlow((-a))                           DR1bit-Hold(S972,S1139)
	S1141= CtrlDR4bit=0                                         Premise(F505)
	S1142= [DR4bit]={Compare0((-a)),so|OverFlow((-a))}          DR4bit-Hold(S974,S1141)
	S1143= CtrlCRRegs=0                                         Premise(F506)
	S1144= CtrlCRRegsCR0=1                                      Premise(F507)
	S1145= CRRegs[CR0]={Compare0((-a)),so|OverFlow((-a))}       CRRegs-CR0-Write(S1098,S1144)
	S1146= CtrlCRRegsW4bitRegs=0                                Premise(F508)
	S1147= CtrlCRRegsW1bitRegs=0                                Premise(F509)

POST	S1104= [PIDReg]=pid                                         PIDReg-Hold(S937,S1103)
	S1108= PC[CIA]=addr                                         PC-Hold(S941,S1107)
	S1109= PC[Out]=addr+4                                       PC-Hold(S942,S1106,S1107)
	S1111= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S944,S1110)
	S1113= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S946,S1112)
	S1115= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S948,S1114)
	S1118= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S951,S1117)
	S1120= IMem[{pid,addr}]={31,rT,rA,0,1233}                   IMem-Hold(S953,S1119)
	S1123= [IR]={31,rT,rA,0,1233}                               IR-Hold(S956,S1122)
	S1125= GPRegs[rT]=(-a)                                      GPRegs-Write(S1094,S1096,S1124)
	S1127= [A]=a                                                A-Hold(S960,S1126)
	S1129= [B]=32'b0                                            B-Hold(S962,S1128)
	S1131= [ALUOut]=(-a)                                        ALUOut-Hold(S964,S1130)
	S1133= [OVReg]=OverFlow((-a))                               OVReg-Hold(S966,S1132)
	S1135= XER[SO]=so|OverFlow((-a))                            XER-SO-Write(S1100,S1134)
	S1137= XER[OV]=OverFlow((-a))                               XER-OV-Write(S1102,S1136)
	S1140= [DR1bit]=so|OverFlow((-a))                           DR1bit-Hold(S972,S1139)
	S1142= [DR4bit]={Compare0((-a)),so|OverFlow((-a))}          DR4bit-Hold(S974,S1141)
	S1145= CRRegs[CR0]={Compare0((-a)),so|OverFlow((-a))}       CRRegs-CR0-Write(S1098,S1144)

