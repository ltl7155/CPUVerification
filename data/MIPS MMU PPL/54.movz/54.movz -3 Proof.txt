
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,rT,rD,0,10}                          Premise(F3)
	S2= GPR[rT]=b                                               Premise(F5)

IF	S3= PC.Out=addr                                             PC-Out(S0)
	S4= PC.Out=>ICache.IEA                                      Premise(F10)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={0,rS,rT,rD,0,10}                            ICache-Search(S5,S1)
	S7= ICache.Out=>IR_ID.In                                    Premise(F14)
	S8= IR_ID.In={0,rS,rT,rD,0,10}                              Path(S6,S7)
	S9= CtrlPC=0                                                Premise(F27)
	S10= CtrlPCInc=1                                            Premise(F28)
	S11= PC[Out]=addr+4                                         PC-Inc(S0,S9,S10)
	S12= CtrlIR_ID=1                                            Premise(F33)
	S13= [IR_ID]={0,rS,rT,rD,0,10}                              IR_ID-Write(S8,S12)
	S14= CtrlGPR=0                                              Premise(F36)
	S15= GPR[rT]=b                                              GPR-Hold(S2,S14)

ID	S16= IR_ID.Out20_16=rT                                      IR-Out(S13)
	S17= IR_ID.Out20_16=>GPR.RReg2                              Premise(F91)
	S18= GPR.RReg2=rT                                           Path(S16,S17)
	S19= GPR.Rdata2=b                                           GPR-Read(S18,S15)
	S20= GPR.Rdata2=>FU.InID2                                   Premise(F96)
	S21= FU.InID2=b                                             Path(S19,S20)
	S22= FU.OutID2=FU(b)                                        FU-Forward(S21)
	S23= FU.OutID2=>B_EX.In                                     Premise(F98)
	S24= B_EX.In=FU(b)                                          Path(S22,S23)
	S25= CtrlPC=0                                               Premise(F107)
	S26= CtrlPCInc=0                                            Premise(F108)
	S27= PC[Out]=addr+4                                         PC-Hold(S11,S25,S26)
	S28= CtrlB_EX=1                                             Premise(F118)
	S29= [B_EX]=FU(b)                                           B_EX-Write(S24,S28)

EX	S30= B_EX.Out=FU(b)                                         B_EX-Out(S29)
	S31= CMPU.A=32'b0                                           Premise(F139)
	S32= B_EX.Out=>CMPU.B                                       Premise(F140)
	S33= CMPU.B=FU(b)                                           Path(S30,S32)
	S34= CMPU.zero=CompareS(32'b0,FU(b))                        CMPU-CMPS(S31,S33)
	S35= CMPU.zero=>ConditionReg_MEM.In                         Premise(F142)
	S36= ConditionReg_MEM.In=CompareS(32'b0,FU(b))              Path(S34,S35)
	S37= CtrlPC=0                                               Premise(F151)
	S38= CtrlPCInc=0                                            Premise(F152)
	S39= PC[Out]=addr+4                                         PC-Hold(S27,S37,S38)
	S40= CtrlConditionReg_MEM=1                                 Premise(F164)
	S41= [ConditionReg_MEM]=CompareS(32'b0,FU(b))               ConditionReg_MEM-Write(S36,S40)

MEM	S42= ConditionReg_MEM.Out=CompareS(32'b0,FU(b))             ConditionReg_MEM-Out(S41)
	S43= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In            Premise(F190)
	S44= ConditionReg_DMMU1.In=CompareS(32'b0,FU(b))            Path(S42,S43)
	S45= CtrlPC=0                                               Premise(F200)
	S46= CtrlPCInc=0                                            Premise(F201)
	S47= PC[Out]=addr+4                                         PC-Hold(S39,S45,S46)
	S48= CtrlConditionReg_DMMU1=1                               Premise(F222)
	S49= [ConditionReg_DMMU1]=CompareS(32'b0,FU(b))             ConditionReg_DMMU1-Write(S44,S48)

MEM(DMMU1)	S50= ConditionReg_DMMU1.Out=CompareS(32'b0,FU(b))           ConditionReg_DMMU1-Out(S49)
	S51= ConditionReg_DMMU1.Out=>ConditionReg_DMMU2.In          Premise(F237)
	S52= ConditionReg_DMMU2.In=CompareS(32'b0,FU(b))            Path(S50,S51)
	S53= CtrlPC=0                                               Premise(F244)
	S54= CtrlPCInc=0                                            Premise(F245)
	S55= PC[Out]=addr+4                                         PC-Hold(S47,S53,S54)
	S56= CtrlConditionReg_DMMU2=1                               Premise(F270)
	S57= [ConditionReg_DMMU2]=CompareS(32'b0,FU(b))             ConditionReg_DMMU2-Write(S52,S56)

MEM(DMMU2)	S58= ConditionReg_DMMU2.Out=CompareS(32'b0,FU(b))           ConditionReg_DMMU2-Out(S57)
	S59= ConditionReg_DMMU2.Out=>ConditionReg_WB.In             Premise(F278)
	S60= ConditionReg_WB.In=CompareS(32'b0,FU(b))               Path(S58,S59)
	S61= CtrlPC=0                                               Premise(F285)
	S62= CtrlPCInc=0                                            Premise(F286)
	S63= PC[Out]=addr+4                                         PC-Hold(S55,S61,S62)
	S64= CtrlConditionReg_WB=1                                  Premise(F308)
	S65= [ConditionReg_WB]=CompareS(32'b0,FU(b))                ConditionReg_WB-Write(S60,S64)

WB	S66= CtrlPC=0                                               Premise(F325)
	S67= CtrlPCInc=0                                            Premise(F326)
	S68= PC[Out]=addr+4                                         PC-Hold(S63,S66,S67)
	S69= CtrlConditionReg_WB=0                                  Premise(F348)
	S70= [ConditionReg_WB]=CompareS(32'b0,FU(b))                ConditionReg_WB-Hold(S65,S69)

POST	S68= PC[Out]=addr+4                                         PC-Hold(S63,S66,S67)
	S70= [ConditionReg_WB]=CompareS(32'b0,FU(b))                ConditionReg_WB-Hold(S65,S69)

