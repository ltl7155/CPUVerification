
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,rT,rD,0,43}                          Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)
	S3= GPR[rT]=b                                               Premise(F5)

IF	S4= PC.Out=addr                                             PC-Out(S0)
	S5= PC.Out=>ICache.IEA                                      Premise(F70)
	S6= ICache.IEA=addr                                         Path(S4,S5)
	S7= ICache.Out={0,rS,rT,rD,0,43}                            ICache-Search(S6,S1)
	S8= ICache.Out=>IR_ID.In                                    Premise(F77)
	S9= IR_ID.In={0,rS,rT,rD,0,43}                              Path(S7,S8)
	S10= CtrlIR_ID=1                                            Premise(F121)
	S11= [IR_ID]={0,rS,rT,rD,0,43}                              IR_ID-Write(S9,S10)
	S12= CtrlGPR=0                                              Premise(F125)
	S13= GPR[rS]=a                                              GPR-Hold(S2,S12)
	S14= GPR[rT]=b                                              GPR-Hold(S3,S12)
	S15= CtrlPC=0                                               Premise(F127)
	S16= CtrlPCInc=1                                            Premise(F128)
	S17= PC[Out]=addr+4                                         PC-Inc(S0,S15,S16)

ID	S18= IR_ID.Out={0,rS,rT,rD,0,43}                            IR-Out(S11)
	S19= IR_ID.Out25_21=rS                                      IR-Out(S11)
	S20= IR_ID.Out20_16=rT                                      IR-Out(S11)
	S21= FU.OutID1=>A_EX.In                                     Premise(F273)
	S22= FU.OutID2=>B_EX.In                                     Premise(F275)
	S23= GPR.Rdata1=>FU.InID1                                   Premise(F317)
	S24= GPR.Rdata2=>FU.InID2                                   Premise(F319)
	S25= IR_ID.Out25_21=>GPR.RReg1                              Premise(F325)
	S26= GPR.RReg1=rS                                           Path(S19,S25)
	S27= GPR.Rdata1=a                                           GPR-Read(S26,S13)
	S28= FU.InID1=a                                             Path(S27,S23)
	S29= FU.OutID1=FU(a)                                        FU-Forward(S28)
	S30= A_EX.In=FU(a)                                          Path(S29,S21)
	S31= IR_ID.Out20_16=>GPR.RReg2                              Premise(F326)
	S32= GPR.RReg2=rT                                           Path(S20,S31)
	S33= GPR.Rdata2=b                                           GPR-Read(S32,S14)
	S34= FU.InID2=b                                             Path(S33,S24)
	S35= FU.OutID2=FU(b)                                        FU-Forward(S34)
	S36= B_EX.In=FU(b)                                          Path(S35,S22)
	S37= IR_ID.Out=>IR_EX.In                                    Premise(F336)
	S38= IR_EX.In={0,rS,rT,rD,0,43}                             Path(S18,S37)
	S39= CtrlA_EX=1                                             Premise(F366)
	S40= [A_EX]=FU(a)                                           A_EX-Write(S30,S39)
	S41= CtrlB_EX=1                                             Premise(F367)
	S42= [B_EX]=FU(b)                                           B_EX-Write(S36,S41)
	S43= CtrlIR_EX=1                                            Premise(F380)
	S44= [IR_EX]={0,rS,rT,rD,0,43}                              IR_EX-Write(S38,S43)
	S45= CtrlPC=0                                               Premise(F387)
	S46= CtrlPCInc=0                                            Premise(F388)
	S47= PC[Out]=addr+4                                         PC-Hold(S17,S45,S46)

EX	S48= A_EX.Out=FU(a)                                         A_EX-Out(S40)
	S49= B_EX.Out=FU(b)                                         B_EX-Out(S42)
	S50= IR_EX.Out={0,rS,rT,rD,0,43}                            IR_EX-Out(S44)
	S51= A_EX.Out=>ALU.A                                        Premise(F396)
	S52= ALU.A=FU(a)                                            Path(S48,S51)
	S53= B_EX.Out=>ALU.B                                        Premise(F397)
	S54= ALU.B=FU(b)                                            Path(S49,S53)
	S55= ALU.Out={31{0},(FU(a)<uFU(b))}                         ALU(S52,S54)
	S56= ALU.Out=>ALUOut_MEM.In                                 Premise(F401)
	S57= ALUOut_MEM.In={31{0},(FU(a)<uFU(b))}                   Path(S55,S56)
	S58= IR_EX.Out=>IR_MEM.In                                   Premise(F470)
	S59= IR_MEM.In={0,rS,rT,rD,0,43}                            Path(S50,S58)
	S60= CtrlALUOut_MEM=1                                       Premise(F499)
	S61= [ALUOut_MEM]={31{0},(FU(a)<uFU(b))}                    ALUOut_MEM-Write(S57,S60)
	S62= CtrlIR_MEM=1                                           Premise(F514)
	S63= [IR_MEM]={0,rS,rT,rD,0,43}                             IR_MEM-Write(S59,S62)
	S64= CtrlPC=0                                               Premise(F518)
	S65= CtrlPCInc=0                                            Premise(F519)
	S66= PC[Out]=addr+4                                         PC-Hold(S47,S64,S65)

MEM	S67= ALUOut_MEM.Out={31{0},(FU(a)<uFU(b))}                  ALUOut_MEM-Out(S61)
	S68= IR_MEM.Out={0,rS,rT,rD,0,43}                           IR_MEM-Out(S63)
	S69= ALUOut_MEM.Out=>ALUOut_DMMU1.In                        Premise(F529)
	S70= ALUOut_DMMU1.In={31{0},(FU(a)<uFU(b))}                 Path(S67,S69)
	S71= IR_MEM.Out=>IR_DMMU1.In                                Premise(F595)
	S72= IR_DMMU1.In={0,rS,rT,rD,0,43}                          Path(S68,S71)
	S73= CtrlALUOut_DMMU1=1                                     Premise(F630)
	S74= [ALUOut_DMMU1]={31{0},(FU(a)<uFU(b))}                  ALUOut_DMMU1-Write(S70,S73)
	S75= CtrlIR_DMMU1=1                                         Premise(F639)
	S76= [IR_DMMU1]={0,rS,rT,rD,0,43}                           IR_DMMU1-Write(S72,S75)
	S77= CtrlPC=0                                               Premise(F648)
	S78= CtrlPCInc=0                                            Premise(F649)
	S79= PC[Out]=addr+4                                         PC-Hold(S66,S77,S78)

DMMU1	S80= ALUOut_DMMU1.Out={31{0},(FU(a)<uFU(b))}                ALUOut_DMMU1-Out(S74)
	S81= IR_DMMU1.Out={0,rS,rT,rD,0,43}                         IR_DMMU1-Out(S76)
	S82= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                      Premise(F660)
	S83= ALUOut_DMMU2.In={31{0},(FU(a)<uFU(b))}                 Path(S80,S82)
	S84= IR_DMMU1.Out=>IR_DMMU2.In                              Premise(F726)
	S85= IR_DMMU2.In={0,rS,rT,rD,0,43}                          Path(S81,S84)
	S86= CtrlALUOut_DMMU2=1                                     Premise(F761)
	S87= [ALUOut_DMMU2]={31{0},(FU(a)<uFU(b))}                  ALUOut_DMMU2-Write(S83,S86)
	S88= CtrlIR_DMMU2=1                                         Premise(F770)
	S89= [IR_DMMU2]={0,rS,rT,rD,0,43}                           IR_DMMU2-Write(S85,S88)
	S90= CtrlPC=0                                               Premise(F778)
	S91= CtrlPCInc=0                                            Premise(F779)
	S92= PC[Out]=addr+4                                         PC-Hold(S79,S90,S91)

DMMU2	S93= ALUOut_DMMU2.Out={31{0},(FU(a)<uFU(b))}                ALUOut_DMMU2-Out(S87)
	S94= IR_DMMU2.Out={0,rS,rT,rD,0,43}                         IR_DMMU2-Out(S89)
	S95= ALUOut_DMMU2.Out=>ALUOut_WB.In                         Premise(F792)
	S96= ALUOut_WB.In={31{0},(FU(a)<uFU(b))}                    Path(S93,S95)
	S97= IR_DMMU2.Out=>IR_WB.In                                 Premise(F861)
	S98= IR_WB.In={0,rS,rT,rD,0,43}                             Path(S94,S97)
	S99= CtrlALUOut_WB=1                                        Premise(F892)
	S100= [ALUOut_WB]={31{0},(FU(a)<uFU(b))}                    ALUOut_WB-Write(S96,S99)
	S101= CtrlIR_WB=1                                           Premise(F905)
	S102= [IR_WB]={0,rS,rT,rD,0,43}                             IR_WB-Write(S98,S101)
	S103= CtrlPC=0                                              Premise(F908)
	S104= CtrlPCInc=0                                           Premise(F909)
	S105= PC[Out]=addr+4                                        PC-Hold(S92,S103,S104)

WB	S106= ALUOut_WB.Out={31{0},(FU(a)<uFU(b))}                  ALUOut_WB-Out(S100)
	S107= IR_WB.Out15_11=rD                                     IR-Out(S102)
	S108= ALUOut_WB.Out=>GPR.WData                              Premise(F978)
	S109= GPR.WData={31{0},(FU(a)<uFU(b))}                      Path(S106,S108)
	S110= IR_WB.Out15_11=>GPR.WReg                              Premise(F979)
	S111= GPR.WReg=rD                                           Path(S107,S110)
	S112= CtrlGPR=1                                             Premise(F1036)
	S113= GPR[rD]={31{0},(FU(a)<uFU(b))}                        GPR-Write(S111,S109,S112)
	S114= CtrlPC=0                                              Premise(F1038)
	S115= CtrlPCInc=0                                           Premise(F1039)
	S116= PC[Out]=addr+4                                        PC-Hold(S105,S114,S115)

POST	S113= GPR[rD]={31{0},(FU(a)<uFU(b))}                        GPR-Write(S111,S109,S112)
	S116= PC[Out]=addr+4                                        PC-Hold(S105,S114,S115)

