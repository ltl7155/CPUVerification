
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={40,rS,rT,offset}                      Premise(F2)
	S3= GPR[rS]=base                                            Premise(F3)
	S4= GPR[rT]=a                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S8,S10)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S14= IAddrReg.In={pid,addr}                                 Path(S11,S13)
	S15= IMMU.Hit=>CU_IF.IMMUHit                                Premise(F8)
	S16= CU_IF.IMMUHit=IMMUHit(pid,addr)                        Path(S12,S15)
	S17= PC.Out=>ICache.IEA                                     Premise(F9)
	S18= ICache.IEA=addr                                        Path(S6,S17)
	S19= ICache.Hit=ICacheHit(addr)                             ICache-Search(S18)
	S20= ICache.Out=>IR_IMMU.In                                 Premise(F10)
	S21= ICache.Out=>ICacheReg.In                               Premise(F11)
	S22= ICache.Hit=>CU_IF.ICacheHit                            Premise(F12)
	S23= CU_IF.ICacheHit=ICacheHit(addr)                        Path(S19,S22)
	S24= ICache.Out=>IR_ID.In                                   Premise(F13)
	S25= CU_IF.IMMUHitOut=>CU_ID.IMMUHit                        Premise(F14)
	S26= CU_IF.ICacheHitOut=>CU_ID.ICacheHit                    Premise(F15)
	S27= CU_IF.IMMUHitOut=>CU_IMMU.IMMUHit                      Premise(F16)
	S28= CU_IF.ICacheHitOut=>CU_IMMU.ICacheHit                  Premise(F17)
	S29= ICache.Hit=>FU.ICacheHit                               Premise(F18)
	S30= FU.ICacheHit=ICacheHit(addr)                           Path(S19,S29)
	S31= FU.Halt_IF=>CU_IF.Halt                                 Premise(F19)
	S32= FU.Bub_IF=>CU_IF.Bub                                   Premise(F20)
	S33= CtrlASIDIn=0                                           Premise(F21)
	S34= CtrlCP0=0                                              Premise(F22)
	S35= CP0[ASID]=pid                                          CP0-Hold(S0,S34)
	S36= CtrlEPCIn=0                                            Premise(F23)
	S37= CtrlExCodeIn=0                                         Premise(F24)
	S38= CtrlIMMU=0                                             Premise(F25)
	S39= CtrlPC=0                                               Premise(F26)
	S40= CtrlPCInc=0                                            Premise(F27)
	S41= PC[Out]=addr                                           PC-Hold(S1,S39,S40)
	S42= CtrlIAddrReg=1                                         Premise(F28)
	S43= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S14,S42)
	S44= CtrlICache=0                                           Premise(F29)
	S45= CtrlIR_IMMU=1                                          Premise(F30)
	S46= CtrlICacheReg=1                                        Premise(F31)
	S47= CtrlIR_ID=0                                            Premise(F32)
	S48= CtrlIMem=0                                             Premise(F33)
	S49= IMem[{pid,addr}]={40,rS,rT,offset}                     IMem-Hold(S2,S48)
	S50= CtrlIRMux=0                                            Premise(F34)
	S51= CtrlGPR=0                                              Premise(F35)
	S52= GPR[rS]=base                                           GPR-Hold(S3,S51)
	S53= GPR[rT]=a                                              GPR-Hold(S4,S51)
	S54= CtrlA_EX=0                                             Premise(F36)
	S55= CtrlB_EX=0                                             Premise(F37)
	S56= CtrlIR_EX=0                                            Premise(F38)
	S57= CtrlALUOut_MEM=0                                       Premise(F39)
	S58= CtrlDR_MEM=0                                           Premise(F40)
	S59= CtrlIR_MEM=0                                           Premise(F41)
	S60= CtrlDMMU=0                                             Premise(F42)
	S61= CtrlDAddrReg_DMMU1=0                                   Premise(F43)
	S62= CtrlDCache=0                                           Premise(F44)
	S63= DCache.RLineEA=DCacheRLineEA()                         DCache-WriteBack()
	S64= DCache.RLineData=DCacheRLineData()                     DCache-WriteBack()
	S65= DCache.RLineDirty=DCacheRLineDirty()                   DCache-WriteBack()
	S66= CtrlIR_DMMU1=0                                         Premise(F45)
	S67= CtrlIR_WB=0                                            Premise(F46)
	S68= CtrlA_MEM=0                                            Premise(F47)
	S69= CtrlA_WB=0                                             Premise(F48)
	S70= CtrlB_MEM=0                                            Premise(F49)
	S71= CtrlB_WB=0                                             Premise(F50)
	S72= CtrlALUOut_DMMU1=0                                     Premise(F51)
	S73= CtrlALUOut_WB=0                                        Premise(F52)
	S74= CtrlDR_DMMU1=0                                         Premise(F53)
	S75= CtrlDR_WB=0                                            Premise(F54)
	S76= CtrlDAddrReg_MEM=0                                     Premise(F55)
	S77= CtrlDAddrReg_WB=0                                      Premise(F56)
	S78= CtrlIR_DMMU2=0                                         Premise(F57)
	S79= CtrlALUOut_DMMU2=0                                     Premise(F58)
	S80= CtrlDR_DMMU2=0                                         Premise(F59)
	S81= CtrlDAddrReg_DMMU2=0                                   Premise(F60)
	S82= CtrlDMem=0                                             Premise(F61)
	S83= CtrlDMem8Word=0                                        Premise(F62)

IF(IMMU)	S84= CP0.ASID=pid                                           CP0-Read-ASID(S35)
	S85= PC.Out=addr                                            PC-Out(S41)
	S86= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S43)
	S87= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S43)
	S88= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S43)
	S89= IR_IMMU.Out=>FU.IR_IMMU                                Premise(F63)
	S90= CU_ID.IMMUHitOut=>CU_ID.IMMUHit                        Premise(F64)
	S91= CU_ID.ICacheHitOut=>CU_ID.ICacheHit                    Premise(F65)
	S92= IAddrReg.Out=>IMem.RAddr                               Premise(F66)
	S93= IMem.RAddr={pid,addr}                                  Path(S86,S92)
	S94= IMem.Out={40,rS,rT,offset}                             IMem-Read(S93,S49)
	S95= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S93,S49)
	S96= IMem.Out=>IRMux.MemData                                Premise(F67)
	S97= IRMux.MemData={40,rS,rT,offset}                        Path(S94,S96)
	S98= IRMux.Out={40,rS,rT,offset}                            IRMux-Select2(S97)
	S99= ICacheReg.Out=>IRMux.CacheData                         Premise(F68)
	S100= CU_IMMU.IMMUHit=>IRMux.MemSel                         Premise(F69)
	S101= CU_IMMU.ICacheHit=>IRMux.CacheSel                     Premise(F70)
	S102= IRMux.Out=>IR_ID.In                                   Premise(F71)
	S103= IR_ID.In={40,rS,rT,offset}                            Path(S98,S102)
	S104= IMem.MEM8WordOut=>ICache.WData                        Premise(F72)
	S105= ICache.WData=IMemGet8Word({pid,addr})                 Path(S95,S104)
	S106= PC.Out=>ICache.IEA                                    Premise(F73)
	S107= ICache.IEA=addr                                       Path(S85,S106)
	S108= ICache.Hit=ICacheHit(addr)                            ICache-Search(S107)
	S109= FU.Halt_IMMU=>CU_IMMU.Halt                            Premise(F74)
	S110= FU.Bub_IMMU=>CU_IMMU.Bub                              Premise(F75)
	S111= CtrlASIDIn=0                                          Premise(F76)
	S112= CtrlCP0=0                                             Premise(F77)
	S113= CP0[ASID]=pid                                         CP0-Hold(S35,S112)
	S114= CtrlEPCIn=0                                           Premise(F78)
	S115= CtrlExCodeIn=0                                        Premise(F79)
	S116= CtrlIMMU=0                                            Premise(F80)
	S117= CtrlPC=0                                              Premise(F81)
	S118= CtrlPCInc=1                                           Premise(F82)
	S119= PC[Out]=addr+4                                        PC-Inc(S41,S117,S118)
	S120= PC[CIA]=addr                                          PC-Inc(S41,S117,S118)
	S121= CtrlIAddrReg=0                                        Premise(F83)
	S122= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S43,S121)
	S123= CtrlICache=1                                          Premise(F84)
	S124= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S107,S105,S123)
	S125= CtrlIR_IMMU=0                                         Premise(F85)
	S126= CtrlICacheReg=0                                       Premise(F86)
	S127= CtrlIR_ID=1                                           Premise(F87)
	S128= [IR_ID]={40,rS,rT,offset}                             IR_ID-Write(S103,S127)
	S129= CtrlIMem=0                                            Premise(F88)
	S130= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S49,S129)
	S131= CtrlIRMux=0                                           Premise(F89)
	S132= CtrlGPR=0                                             Premise(F90)
	S133= GPR[rS]=base                                          GPR-Hold(S52,S132)
	S134= GPR[rT]=a                                             GPR-Hold(S53,S132)
	S135= CtrlA_EX=0                                            Premise(F91)
	S136= CtrlB_EX=0                                            Premise(F92)
	S137= CtrlIR_EX=0                                           Premise(F93)
	S138= CtrlALUOut_MEM=0                                      Premise(F94)
	S139= CtrlDR_MEM=0                                          Premise(F95)
	S140= CtrlIR_MEM=0                                          Premise(F96)
	S141= CtrlDMMU=0                                            Premise(F97)
	S142= CtrlDAddrReg_DMMU1=0                                  Premise(F98)
	S143= CtrlDCache=0                                          Premise(F99)
	S144= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S145= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S146= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S147= CtrlIR_DMMU1=0                                        Premise(F100)
	S148= CtrlIR_WB=0                                           Premise(F101)
	S149= CtrlA_MEM=0                                           Premise(F102)
	S150= CtrlA_WB=0                                            Premise(F103)
	S151= CtrlB_MEM=0                                           Premise(F104)
	S152= CtrlB_WB=0                                            Premise(F105)
	S153= CtrlALUOut_DMMU1=0                                    Premise(F106)
	S154= CtrlALUOut_WB=0                                       Premise(F107)
	S155= CtrlDR_DMMU1=0                                        Premise(F108)
	S156= CtrlDR_WB=0                                           Premise(F109)
	S157= CtrlDAddrReg_MEM=0                                    Premise(F110)
	S158= CtrlDAddrReg_WB=0                                     Premise(F111)
	S159= CtrlIR_DMMU2=0                                        Premise(F112)
	S160= CtrlALUOut_DMMU2=0                                    Premise(F113)
	S161= CtrlDR_DMMU2=0                                        Premise(F114)
	S162= CtrlDAddrReg_DMMU2=0                                  Premise(F115)
	S163= CtrlDMem=0                                            Premise(F116)
	S164= CtrlDMem8Word=0                                       Premise(F117)

ID	S165= CP0.ASID=pid                                          CP0-Read-ASID(S113)
	S166= PC.Out=addr+4                                         PC-Out(S119)
	S167= PC.CIA=addr                                           PC-Out(S120)
	S168= PC.CIA31_28=addr[31:28]                               PC-Out(S120)
	S169= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S122)
	S170= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S122)
	S171= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S122)
	S172= IR_ID.Out={40,rS,rT,offset}                           IR-Out(S128)
	S173= IR_ID.Out31_26=40                                     IR-Out(S128)
	S174= IR_ID.Out25_21=rS                                     IR-Out(S128)
	S175= IR_ID.Out20_16=rT                                     IR-Out(S128)
	S176= IR_ID.Out15_0=offset                                  IR-Out(S128)
	S177= IR_ID.Out=>FU.IR_ID                                   Premise(F118)
	S178= FU.IR_ID={40,rS,rT,offset}                            Path(S172,S177)
	S179= CU_ID.IMMUHitOut=>CU_EX.IMMUHit                       Premise(F119)
	S180= CU_ID.ICacheHitOut=>CU_EX.ICacheHit                   Premise(F120)
	S181= IR_ID.Out31_26=>CU_ID.Op                              Premise(F121)
	S182= CU_ID.Op=40                                           Path(S173,S181)
	S183= CU_ID.Func=alu_add                                    CU_ID(S182)
	S184= CU_ID.MemDataSelFunc=mds_lhz                          CU_ID(S182)
	S185= IR_ID.Out25_21=>GPR.RReg1                             Premise(F122)
	S186= GPR.RReg1=rS                                          Path(S174,S185)
	S187= GPR.Rdata1=base                                       GPR-Read(S186,S133)
	S188= IR_ID.Out15_0=>IMMEXT.In                              Premise(F123)
	S189= IMMEXT.In=offset                                      Path(S176,S188)
	S190= IMMEXT.Out={16{offset[15]},offset}                    IMMEXT(S189)
	S191= GPR.Rdata1=>FU.InID1                                  Premise(F124)
	S192= FU.InID1=base                                         Path(S187,S191)
	S193= FU.OutID1=FU(base)                                    FU-Forward(S192)
	S194= IR_ID.Out25_21=>FU.InID1_RReg                         Premise(F125)
	S195= FU.InID1_RReg=rS                                      Path(S174,S194)
	S196= FU.OutID1=>A_EX.In                                    Premise(F126)
	S197= A_EX.In=FU(base)                                      Path(S193,S196)
	S198= IMMEXT.Out=>B_EX.In                                   Premise(F127)
	S199= B_EX.In={16{offset[15]},offset}                       Path(S190,S198)
	S200= IR_ID.Out=>IR_EX.In                                   Premise(F128)
	S201= IR_EX.In={40,rS,rT,offset}                            Path(S172,S200)
	S202= FU.Halt_ID=>CU_ID.Halt                                Premise(F129)
	S203= FU.Bub_ID=>CU_ID.Bub                                  Premise(F130)
	S204= FU.InID2_RReg=5'b00000                                Premise(F131)
	S205= CtrlASIDIn=0                                          Premise(F132)
	S206= CtrlCP0=0                                             Premise(F133)
	S207= CP0[ASID]=pid                                         CP0-Hold(S113,S206)
	S208= CtrlEPCIn=0                                           Premise(F134)
	S209= CtrlExCodeIn=0                                        Premise(F135)
	S210= CtrlIMMU=0                                            Premise(F136)
	S211= CtrlPC=0                                              Premise(F137)
	S212= CtrlPCInc=0                                           Premise(F138)
	S213= PC[CIA]=addr                                          PC-Hold(S120,S212)
	S214= PC[Out]=addr+4                                        PC-Hold(S119,S211,S212)
	S215= CtrlIAddrReg=0                                        Premise(F139)
	S216= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S122,S215)
	S217= CtrlICache=0                                          Premise(F140)
	S218= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S124,S217)
	S219= CtrlIR_IMMU=0                                         Premise(F141)
	S220= CtrlICacheReg=0                                       Premise(F142)
	S221= CtrlIR_ID=0                                           Premise(F143)
	S222= [IR_ID]={40,rS,rT,offset}                             IR_ID-Hold(S128,S221)
	S223= CtrlIMem=0                                            Premise(F144)
	S224= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S130,S223)
	S225= CtrlIRMux=0                                           Premise(F145)
	S226= CtrlGPR=0                                             Premise(F146)
	S227= GPR[rS]=base                                          GPR-Hold(S133,S226)
	S228= GPR[rT]=a                                             GPR-Hold(S134,S226)
	S229= CtrlA_EX=1                                            Premise(F147)
	S230= [A_EX]=FU(base)                                       A_EX-Write(S197,S229)
	S231= CtrlB_EX=1                                            Premise(F148)
	S232= [B_EX]={16{offset[15]},offset}                        B_EX-Write(S199,S231)
	S233= CtrlIR_EX=1                                           Premise(F149)
	S234= [IR_EX]={40,rS,rT,offset}                             IR_EX-Write(S201,S233)
	S235= CtrlALUOut_MEM=0                                      Premise(F150)
	S236= CtrlDR_MEM=0                                          Premise(F151)
	S237= CtrlIR_MEM=0                                          Premise(F152)
	S238= CtrlDMMU=0                                            Premise(F153)
	S239= CtrlDAddrReg_DMMU1=0                                  Premise(F154)
	S240= CtrlDCache=0                                          Premise(F155)
	S241= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S242= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S243= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S244= CtrlIR_DMMU1=0                                        Premise(F156)
	S245= CtrlIR_WB=0                                           Premise(F157)
	S246= CtrlA_MEM=0                                           Premise(F158)
	S247= CtrlA_WB=0                                            Premise(F159)
	S248= CtrlB_MEM=0                                           Premise(F160)
	S249= CtrlB_WB=0                                            Premise(F161)
	S250= CtrlALUOut_DMMU1=0                                    Premise(F162)
	S251= CtrlALUOut_WB=0                                       Premise(F163)
	S252= CtrlDR_DMMU1=0                                        Premise(F164)
	S253= CtrlDR_WB=0                                           Premise(F165)
	S254= CtrlDAddrReg_MEM=0                                    Premise(F166)
	S255= CtrlDAddrReg_WB=0                                     Premise(F167)
	S256= CtrlIR_DMMU2=0                                        Premise(F168)
	S257= CtrlALUOut_DMMU2=0                                    Premise(F169)
	S258= CtrlDR_DMMU2=0                                        Premise(F170)
	S259= CtrlDAddrReg_DMMU2=0                                  Premise(F171)
	S260= CtrlDMem=0                                            Premise(F172)
	S261= CtrlDMem8Word=0                                       Premise(F173)

EX	S262= CP0.ASID=pid                                          CP0-Read-ASID(S207)
	S263= PC.CIA=addr                                           PC-Out(S213)
	S264= PC.CIA31_28=addr[31:28]                               PC-Out(S213)
	S265= PC.Out=addr+4                                         PC-Out(S214)
	S266= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S216)
	S267= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S216)
	S268= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S216)
	S269= IR_ID.Out={40,rS,rT,offset}                           IR-Out(S222)
	S270= IR_ID.Out31_26=40                                     IR-Out(S222)
	S271= IR_ID.Out25_21=rS                                     IR-Out(S222)
	S272= IR_ID.Out20_16=rT                                     IR-Out(S222)
	S273= IR_ID.Out15_0=offset                                  IR-Out(S222)
	S274= A_EX.Out=FU(base)                                     A_EX-Out(S230)
	S275= A_EX.Out1_0={FU(base)}[1:0]                           A_EX-Out(S230)
	S276= A_EX.Out4_0={FU(base)}[4:0]                           A_EX-Out(S230)
	S277= B_EX.Out={16{offset[15]},offset}                      B_EX-Out(S232)
	S278= B_EX.Out1_0={{16{offset[15]},offset}}[1:0]            B_EX-Out(S232)
	S279= B_EX.Out4_0={{16{offset[15]},offset}}[4:0]            B_EX-Out(S232)
	S280= IR_EX.Out={40,rS,rT,offset}                           IR_EX-Out(S234)
	S281= IR_EX.Out31_26=40                                     IR_EX-Out(S234)
	S282= IR_EX.Out25_21=rS                                     IR_EX-Out(S234)
	S283= IR_EX.Out20_16=rT                                     IR_EX-Out(S234)
	S284= IR_EX.Out15_0=offset                                  IR_EX-Out(S234)
	S285= IR_EX.Out=>FU.IR_EX                                   Premise(F174)
	S286= FU.IR_EX={40,rS,rT,offset}                            Path(S280,S285)
	S287= CU_EX.IMMUHitOut=>CU_MEM.IMMUHit                      Premise(F175)
	S288= CU_EX.ICacheHitOut=>CU_MEM.ICacheHit                  Premise(F176)
	S289= IR_EX.Out31_26=>CU_EX.Op                              Premise(F177)
	S290= CU_EX.Op=40                                           Path(S281,S289)
	S291= CU_EX.Func=alu_add                                    CU_EX(S290)
	S292= CU_EX.MemDataSelFunc=mds_lhz                          CU_EX(S290)
	S293= A_EX.Out=>ALU.A                                       Premise(F178)
	S294= ALU.A=FU(base)                                        Path(S274,S293)
	S295= B_EX.Out=>ALU.B                                       Premise(F179)
	S296= ALU.B={16{offset[15]},offset}                         Path(S277,S295)
	S297= ALU.Func=6'b010010                                    Premise(F180)
	S298= ALU.Out=FU(base)+{16{offset[15]},offset}              ALU(S294,S296)
	S299= ALU.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]    ALU(S294,S296)
	S300= ALU.CMP=Compare0(FU(base)+{16{offset[15]},offset})    ALU(S294,S296)
	S301= ALU.OV=OverFlow(FU(base)+{16{offset[15]},offset})     ALU(S294,S296)
	S302= ALU.CA=Carry(FU(base)+{16{offset[15]},offset})        ALU(S294,S296)
	S303= ALU.Out=>ALUOut_MEM.In                                Premise(F181)
	S304= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}        Path(S298,S303)
	S305= IR_EX.Out20_16=>GPR.RReg2                             Premise(F182)
	S306= GPR.RReg2=rT                                          Path(S283,S305)
	S307= GPR.Rdata2=a                                          GPR-Read(S306,S228)
	S308= GPR.Rdata2=>MemDataSelS.In                            Premise(F183)
	S309= MemDataSelS.In=a                                      Path(S307,S308)
	S310= ALU.Out1_0=>MemDataSelS.Addr                          Premise(F184)
	S311= MemDataSelS.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S299,S310)
	S312= MemDataSelS.Func=6'b010000                            Premise(F185)
	S313= MemDataSelS.Out={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}MemDataSelS(S309,S311)
	S314= MemDataSelS.Out=>DR_MEM.In                            Premise(F186)
	S315= DR_MEM.In={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}Path(S313,S314)
	S316= IR_EX.Out=>IR_MEM.In                                  Premise(F187)
	S317= IR_MEM.In={40,rS,rT,offset}                           Path(S280,S316)
	S318= FU.InEX_WReg=5'b00000                                 Premise(F188)
	S319= CtrlASIDIn=0                                          Premise(F189)
	S320= CtrlCP0=0                                             Premise(F190)
	S321= CP0[ASID]=pid                                         CP0-Hold(S207,S320)
	S322= CtrlEPCIn=0                                           Premise(F191)
	S323= CtrlExCodeIn=0                                        Premise(F192)
	S324= CtrlIMMU=0                                            Premise(F193)
	S325= CtrlPC=0                                              Premise(F194)
	S326= CtrlPCInc=0                                           Premise(F195)
	S327= PC[CIA]=addr                                          PC-Hold(S213,S326)
	S328= PC[Out]=addr+4                                        PC-Hold(S214,S325,S326)
	S329= CtrlIAddrReg=0                                        Premise(F196)
	S330= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S216,S329)
	S331= CtrlICache=0                                          Premise(F197)
	S332= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S218,S331)
	S333= CtrlIR_IMMU=0                                         Premise(F198)
	S334= CtrlICacheReg=0                                       Premise(F199)
	S335= CtrlIR_ID=0                                           Premise(F200)
	S336= [IR_ID]={40,rS,rT,offset}                             IR_ID-Hold(S222,S335)
	S337= CtrlIMem=0                                            Premise(F201)
	S338= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S224,S337)
	S339= CtrlIRMux=0                                           Premise(F202)
	S340= CtrlGPR=0                                             Premise(F203)
	S341= GPR[rS]=base                                          GPR-Hold(S227,S340)
	S342= GPR[rT]=a                                             GPR-Hold(S228,S340)
	S343= CtrlA_EX=0                                            Premise(F204)
	S344= [A_EX]=FU(base)                                       A_EX-Hold(S230,S343)
	S345= CtrlB_EX=0                                            Premise(F205)
	S346= [B_EX]={16{offset[15]},offset}                        B_EX-Hold(S232,S345)
	S347= CtrlIR_EX=0                                           Premise(F206)
	S348= [IR_EX]={40,rS,rT,offset}                             IR_EX-Hold(S234,S347)
	S349= CtrlALUOut_MEM=1                                      Premise(F207)
	S350= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}         ALUOut_MEM-Write(S304,S349)
	S351= CtrlDR_MEM=1                                          Premise(F208)
	S352= [DR_MEM]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_MEM-Write(S315,S351)
	S353= CtrlIR_MEM=1                                          Premise(F209)
	S354= [IR_MEM]={40,rS,rT,offset}                            IR_MEM-Write(S317,S353)
	S355= CtrlDMMU=0                                            Premise(F210)
	S356= CtrlDAddrReg_DMMU1=0                                  Premise(F211)
	S357= CtrlDCache=0                                          Premise(F212)
	S358= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S359= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S360= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S361= CtrlIR_DMMU1=0                                        Premise(F213)
	S362= CtrlIR_WB=0                                           Premise(F214)
	S363= CtrlA_MEM=0                                           Premise(F215)
	S364= CtrlA_WB=0                                            Premise(F216)
	S365= CtrlB_MEM=0                                           Premise(F217)
	S366= CtrlB_WB=0                                            Premise(F218)
	S367= CtrlALUOut_DMMU1=0                                    Premise(F219)
	S368= CtrlALUOut_WB=0                                       Premise(F220)
	S369= CtrlDR_DMMU1=0                                        Premise(F221)
	S370= CtrlDR_WB=0                                           Premise(F222)
	S371= CtrlDAddrReg_MEM=0                                    Premise(F223)
	S372= CtrlDAddrReg_WB=0                                     Premise(F224)
	S373= CtrlIR_DMMU2=0                                        Premise(F225)
	S374= CtrlALUOut_DMMU2=0                                    Premise(F226)
	S375= CtrlDR_DMMU2=0                                        Premise(F227)
	S376= CtrlDAddrReg_DMMU2=0                                  Premise(F228)
	S377= CtrlDMem=0                                            Premise(F229)
	S378= CtrlDMem8Word=0                                       Premise(F230)

MEM	S379= CP0.ASID=pid                                          CP0-Read-ASID(S321)
	S380= PC.CIA=addr                                           PC-Out(S327)
	S381= PC.CIA31_28=addr[31:28]                               PC-Out(S327)
	S382= PC.Out=addr+4                                         PC-Out(S328)
	S383= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S330)
	S384= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S330)
	S385= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S330)
	S386= IR_ID.Out={40,rS,rT,offset}                           IR-Out(S336)
	S387= IR_ID.Out31_26=40                                     IR-Out(S336)
	S388= IR_ID.Out25_21=rS                                     IR-Out(S336)
	S389= IR_ID.Out20_16=rT                                     IR-Out(S336)
	S390= IR_ID.Out15_0=offset                                  IR-Out(S336)
	S391= A_EX.Out=FU(base)                                     A_EX-Out(S344)
	S392= A_EX.Out1_0={FU(base)}[1:0]                           A_EX-Out(S344)
	S393= A_EX.Out4_0={FU(base)}[4:0]                           A_EX-Out(S344)
	S394= B_EX.Out={16{offset[15]},offset}                      B_EX-Out(S346)
	S395= B_EX.Out1_0={{16{offset[15]},offset}}[1:0]            B_EX-Out(S346)
	S396= B_EX.Out4_0={{16{offset[15]},offset}}[4:0]            B_EX-Out(S346)
	S397= IR_EX.Out={40,rS,rT,offset}                           IR_EX-Out(S348)
	S398= IR_EX.Out31_26=40                                     IR_EX-Out(S348)
	S399= IR_EX.Out25_21=rS                                     IR_EX-Out(S348)
	S400= IR_EX.Out20_16=rT                                     IR_EX-Out(S348)
	S401= IR_EX.Out15_0=offset                                  IR_EX-Out(S348)
	S402= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}       ALUOut_MEM-Out(S350)
	S403= ALUOut_MEM.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_MEM-Out(S350)
	S404= ALUOut_MEM.Out4_0={FU(base)+{16{offset[15]},offset}}[4:0]ALUOut_MEM-Out(S350)
	S405= DR_MEM.Out={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_MEM-Out(S352)
	S406= DR_MEM.Out1_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR_MEM-Out(S352)
	S407= DR_MEM.Out4_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR_MEM-Out(S352)
	S408= IR_MEM.Out={40,rS,rT,offset}                          IR_MEM-Out(S354)
	S409= IR_MEM.Out31_26=40                                    IR_MEM-Out(S354)
	S410= IR_MEM.Out25_21=rS                                    IR_MEM-Out(S354)
	S411= IR_MEM.Out20_16=rT                                    IR_MEM-Out(S354)
	S412= IR_MEM.Out15_0=offset                                 IR_MEM-Out(S354)
	S413= IR_MEM.Out=>FU.IR_MEM                                 Premise(F231)
	S414= FU.IR_MEM={40,rS,rT,offset}                           Path(S408,S413)
	S415= CU_MEM.IMMUHitOut=>CU_DMMU1.IMMUHit                   Premise(F232)
	S416= CU_MEM.ICacheHitOut=>CU_DMMU1.ICacheHit               Premise(F233)
	S417= CU_MEM.DMMUHitOut=>CU_DMMU1.DMMUHit                   Premise(F234)
	S418= CU_MEM.DCacheHitOut=>CU_DMMU1.DCacheHit               Premise(F235)
	S419= IR_MEM.Out31_26=>CU_MEM.Op                            Premise(F236)
	S420= CU_MEM.Op=40                                          Path(S409,S419)
	S421= CU_MEM.Func=alu_add                                   CU_MEM(S420)
	S422= CU_MEM.MemDataSelFunc=mds_lhz                         CU_MEM(S420)
	S423= CP0.ASID=>DMMU.PID                                    Premise(F237)
	S424= DMMU.PID=pid                                          Path(S379,S423)
	S425= ALUOut_MEM.Out=>DMMU.IEA                              Premise(F238)
	S426= DMMU.IEA=FU(base)+{16{offset[15]},offset}             Path(S402,S425)
	S427= DMMU.Addr={pid,FU(base)+{16{offset[15]},offset}}      DMMU-Search(S424,S426)
	S428= DMMU.Hit=DMMUHit(pid,FU(base)+{16{offset[15]},offset})DMMU-Search(S424,S426)
	S429= DMMU.Addr=>DAddrReg_DMMU1.In                          Premise(F239)
	S430= DAddrReg_DMMU1.In={pid,FU(base)+{16{offset[15]},offset}}Path(S427,S429)
	S431= DMMU.Hit=>CU_MEM.DMMUHit                              Premise(F240)
	S432= CU_MEM.DMMUHit=DMMUHit(pid,FU(base)+{16{offset[15]},offset})Path(S428,S431)
	S433= ALUOut_MEM.Out=>DCache.IEA                            Premise(F241)
	S434= DCache.IEA=FU(base)+{16{offset[15]},offset}           Path(S402,S433)
	S435= DCache.Hit=DCacheHit(FU(base)+{16{offset[15]},offset})DCache-Search(S434)
	S436= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S437= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S438= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S439= DCache.Hit=>CU_MEM.DCacheHit                          Premise(F242)
	S440= CU_MEM.DCacheHit=DCacheHit(FU(base)+{16{offset[15]},offset})Path(S435,S439)
	S441= DR_MEM.Out=>DCache.In                                 Premise(F243)
	S442= DCache.In={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}Path(S405,S441)
	S443= IR_MEM.Out=>IR_DMMU1.In                               Premise(F244)
	S444= IR_DMMU1.In={40,rS,rT,offset}                         Path(S408,S443)
	S445= IR_MEM.Out=>IR_WB.In                                  Premise(F245)
	S446= IR_WB.In={40,rS,rT,offset}                            Path(S408,S445)
	S447= A_MEM.Out=>A_WB.In                                    Premise(F246)
	S448= B_MEM.Out=>B_WB.In                                    Premise(F247)
	S449= ALUOut_MEM.Out=>ALUOut_DMMU1.In                       Premise(F248)
	S450= ALUOut_DMMU1.In=FU(base)+{16{offset[15]},offset}      Path(S402,S449)
	S451= ALUOut_MEM.Out=>ALUOut_WB.In                          Premise(F249)
	S452= ALUOut_WB.In=FU(base)+{16{offset[15]},offset}         Path(S402,S451)
	S453= DR_MEM.Out=>DR_DMMU1.In                               Premise(F250)
	S454= DR_DMMU1.In={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}Path(S405,S453)
	S455= DCache.Out=>DR_WB.In                                  Premise(F251)
	S456= DAddrReg_MEM.Out=>DAddrReg_WB.In                      Premise(F252)
	S457= DCache.Out=>DR_DMMU1.In                               Premise(F253)
	S458= CU_MEM.IMMUHitOut=>CU_WB.IMMUHit                      Premise(F254)
	S459= CU_MEM.ICacheHitOut=>CU_WB.ICacheHit                  Premise(F255)
	S460= DCache.Hit=>FU.DCacheHit                              Premise(F256)
	S461= FU.DCacheHit=DCacheHit(FU(base)+{16{offset[15]},offset})Path(S435,S460)
	S462= FU.InMEM_WReg=5'b00000                                Premise(F257)
	S463= CtrlASIDIn=0                                          Premise(F258)
	S464= CtrlCP0=0                                             Premise(F259)
	S465= CP0[ASID]=pid                                         CP0-Hold(S321,S464)
	S466= CtrlEPCIn=0                                           Premise(F260)
	S467= CtrlExCodeIn=0                                        Premise(F261)
	S468= CtrlIMMU=0                                            Premise(F262)
	S469= CtrlPC=0                                              Premise(F263)
	S470= CtrlPCInc=0                                           Premise(F264)
	S471= PC[CIA]=addr                                          PC-Hold(S327,S470)
	S472= PC[Out]=addr+4                                        PC-Hold(S328,S469,S470)
	S473= CtrlIAddrReg=0                                        Premise(F265)
	S474= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S330,S473)
	S475= CtrlICache=0                                          Premise(F266)
	S476= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S332,S475)
	S477= CtrlIR_IMMU=0                                         Premise(F267)
	S478= CtrlICacheReg=0                                       Premise(F268)
	S479= CtrlIR_ID=0                                           Premise(F269)
	S480= [IR_ID]={40,rS,rT,offset}                             IR_ID-Hold(S336,S479)
	S481= CtrlIMem=0                                            Premise(F270)
	S482= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S338,S481)
	S483= CtrlIRMux=0                                           Premise(F271)
	S484= CtrlGPR=0                                             Premise(F272)
	S485= GPR[rS]=base                                          GPR-Hold(S341,S484)
	S486= GPR[rT]=a                                             GPR-Hold(S342,S484)
	S487= CtrlA_EX=0                                            Premise(F273)
	S488= [A_EX]=FU(base)                                       A_EX-Hold(S344,S487)
	S489= CtrlB_EX=0                                            Premise(F274)
	S490= [B_EX]={16{offset[15]},offset}                        B_EX-Hold(S346,S489)
	S491= CtrlIR_EX=0                                           Premise(F275)
	S492= [IR_EX]={40,rS,rT,offset}                             IR_EX-Hold(S348,S491)
	S493= CtrlALUOut_MEM=0                                      Premise(F276)
	S494= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}         ALUOut_MEM-Hold(S350,S493)
	S495= CtrlDR_MEM=0                                          Premise(F277)
	S496= [DR_MEM]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_MEM-Hold(S352,S495)
	S497= CtrlIR_MEM=0                                          Premise(F278)
	S498= [IR_MEM]={40,rS,rT,offset}                            IR_MEM-Hold(S354,S497)
	S499= CtrlDMMU=0                                            Premise(F279)
	S500= CtrlDAddrReg_DMMU1=1                                  Premise(F280)
	S501= [DAddrReg_DMMU1]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Write(S430,S500)
	S502= CtrlDCache=1                                          Premise(F281)
	S503= DCache[FU(base)+{16{offset[15]},offset}]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Write(S434,S442,S502)
	S504= CtrlIR_DMMU1=1                                        Premise(F282)
	S505= [IR_DMMU1]={40,rS,rT,offset}                          IR_DMMU1-Write(S444,S504)
	S506= CtrlIR_WB=1                                           Premise(F283)
	S507= [IR_WB]={40,rS,rT,offset}                             IR_WB-Write(S446,S506)
	S508= CtrlA_MEM=0                                           Premise(F284)
	S509= CtrlA_WB=1                                            Premise(F285)
	S510= CtrlB_MEM=0                                           Premise(F286)
	S511= CtrlB_WB=1                                            Premise(F287)
	S512= CtrlALUOut_DMMU1=1                                    Premise(F288)
	S513= [ALUOut_DMMU1]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU1-Write(S450,S512)
	S514= CtrlALUOut_WB=1                                       Premise(F289)
	S515= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}          ALUOut_WB-Write(S452,S514)
	S516= CtrlDR_DMMU1=1                                        Premise(F290)
	S517= [DR_DMMU1]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_DMMU1-Write(S454,S516)
	S518= CtrlDR_WB=1                                           Premise(F291)
	S519= CtrlDAddrReg_MEM=0                                    Premise(F292)
	S520= CtrlDAddrReg_WB=1                                     Premise(F293)
	S521= CtrlIR_DMMU2=0                                        Premise(F294)
	S522= CtrlALUOut_DMMU2=0                                    Premise(F295)
	S523= CtrlDR_DMMU2=0                                        Premise(F296)
	S524= CtrlDAddrReg_DMMU2=0                                  Premise(F297)
	S525= CtrlDMem=0                                            Premise(F298)
	S526= CtrlDMem8Word=0                                       Premise(F299)

MEM(DMMU1)	S527= CP0.ASID=pid                                          CP0-Read-ASID(S465)
	S528= PC.CIA=addr                                           PC-Out(S471)
	S529= PC.CIA31_28=addr[31:28]                               PC-Out(S471)
	S530= PC.Out=addr+4                                         PC-Out(S472)
	S531= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S474)
	S532= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S474)
	S533= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S474)
	S534= IR_ID.Out={40,rS,rT,offset}                           IR-Out(S480)
	S535= IR_ID.Out31_26=40                                     IR-Out(S480)
	S536= IR_ID.Out25_21=rS                                     IR-Out(S480)
	S537= IR_ID.Out20_16=rT                                     IR-Out(S480)
	S538= IR_ID.Out15_0=offset                                  IR-Out(S480)
	S539= A_EX.Out=FU(base)                                     A_EX-Out(S488)
	S540= A_EX.Out1_0={FU(base)}[1:0]                           A_EX-Out(S488)
	S541= A_EX.Out4_0={FU(base)}[4:0]                           A_EX-Out(S488)
	S542= B_EX.Out={16{offset[15]},offset}                      B_EX-Out(S490)
	S543= B_EX.Out1_0={{16{offset[15]},offset}}[1:0]            B_EX-Out(S490)
	S544= B_EX.Out4_0={{16{offset[15]},offset}}[4:0]            B_EX-Out(S490)
	S545= IR_EX.Out={40,rS,rT,offset}                           IR_EX-Out(S492)
	S546= IR_EX.Out31_26=40                                     IR_EX-Out(S492)
	S547= IR_EX.Out25_21=rS                                     IR_EX-Out(S492)
	S548= IR_EX.Out20_16=rT                                     IR_EX-Out(S492)
	S549= IR_EX.Out15_0=offset                                  IR_EX-Out(S492)
	S550= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}       ALUOut_MEM-Out(S494)
	S551= ALUOut_MEM.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_MEM-Out(S494)
	S552= ALUOut_MEM.Out4_0={FU(base)+{16{offset[15]},offset}}[4:0]ALUOut_MEM-Out(S494)
	S553= DR_MEM.Out={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_MEM-Out(S496)
	S554= DR_MEM.Out1_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR_MEM-Out(S496)
	S555= DR_MEM.Out4_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR_MEM-Out(S496)
	S556= IR_MEM.Out={40,rS,rT,offset}                          IR_MEM-Out(S498)
	S557= IR_MEM.Out31_26=40                                    IR_MEM-Out(S498)
	S558= IR_MEM.Out25_21=rS                                    IR_MEM-Out(S498)
	S559= IR_MEM.Out20_16=rT                                    IR_MEM-Out(S498)
	S560= IR_MEM.Out15_0=offset                                 IR_MEM-Out(S498)
	S561= DAddrReg_DMMU1.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Out(S501)
	S562= DAddrReg_DMMU1.Out1_0={{pid,FU(base)+{16{offset[15]},offset}}}[1:0]DAddrReg_DMMU1-Out(S501)
	S563= DAddrReg_DMMU1.Out4_0={{pid,FU(base)+{16{offset[15]},offset}}}[4:0]DAddrReg_DMMU1-Out(S501)
	S564= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S565= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S566= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S567= IR_DMMU1.Out={40,rS,rT,offset}                        IR_DMMU1-Out(S505)
	S568= IR_DMMU1.Out31_26=40                                  IR_DMMU1-Out(S505)
	S569= IR_DMMU1.Out25_21=rS                                  IR_DMMU1-Out(S505)
	S570= IR_DMMU1.Out20_16=rT                                  IR_DMMU1-Out(S505)
	S571= IR_DMMU1.Out15_0=offset                               IR_DMMU1-Out(S505)
	S572= IR_WB.Out={40,rS,rT,offset}                           IR-Out(S507)
	S573= IR_WB.Out31_26=40                                     IR-Out(S507)
	S574= IR_WB.Out25_21=rS                                     IR-Out(S507)
	S575= IR_WB.Out20_16=rT                                     IR-Out(S507)
	S576= IR_WB.Out15_0=offset                                  IR-Out(S507)
	S577= ALUOut_DMMU1.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU1-Out(S513)
	S578= ALUOut_DMMU1.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_DMMU1-Out(S513)
	S579= ALUOut_DMMU1.Out4_0={FU(base)+{16{offset[15]},offset}}[4:0]ALUOut_DMMU1-Out(S513)
	S580= ALUOut_WB.Out=FU(base)+{16{offset[15]},offset}        ALUOut_WB-Out(S515)
	S581= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S515)
	S582= ALUOut_WB.Out4_0={FU(base)+{16{offset[15]},offset}}[4:0]ALUOut_WB-Out(S515)
	S583= DR_DMMU1.Out={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_DMMU1-Out(S517)
	S584= DR_DMMU1.Out1_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR_DMMU1-Out(S517)
	S585= DR_DMMU1.Out4_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR_DMMU1-Out(S517)
	S586= IR_DMMU1.Out=>FU.IR_DMMU1                             Premise(F300)
	S587= FU.IR_DMMU1={40,rS,rT,offset}                         Path(S567,S586)
	S588= CU_DMMU1.IMMUHitOut=>CU_DMMU2.IMMUHit                 Premise(F301)
	S589= CU_DMMU1.ICacheHitOut=>CU_DMMU2.ICacheHit             Premise(F302)
	S590= CU_DMMU1.DMMUHitOut=>CU_DMMU2.DMMUHit                 Premise(F303)
	S591= CU_DMMU1.DCacheHitOut=>CU_DMMU2.DCacheHit             Premise(F304)
	S592= CU_DMMU1.DCacheHitOut=>FU.DCacheHit2                  Premise(F305)
	S593= IR_DMMU1.Out31_26=>CU_DMMU1.Op                        Premise(F306)
	S594= CU_DMMU1.Op=40                                        Path(S568,S593)
	S595= CU_DMMU1.Func=alu_add                                 CU_DMMU1(S594)
	S596= CU_DMMU1.MemDataSelFunc=mds_lhz                       CU_DMMU1(S594)
	S597= IR_DMMU1.Out=>IR_DMMU2.In                             Premise(F307)
	S598= IR_DMMU2.In={40,rS,rT,offset}                         Path(S567,S597)
	S599= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                     Premise(F308)
	S600= ALUOut_DMMU2.In=FU(base)+{16{offset[15]},offset}      Path(S577,S599)
	S601= DR_DMMU1.Out=>DR_DMMU2.In                             Premise(F309)
	S602= DR_DMMU2.In={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}Path(S583,S601)
	S603= DAddrReg_DMMU1.Out=>DAddrReg_DMMU2.In                 Premise(F310)
	S604= DAddrReg_DMMU2.In={pid,FU(base)+{16{offset[15]},offset}}Path(S561,S603)
	S605= FU.InDMMU1_WReg=5'b00000                              Premise(F311)
	S606= CtrlASIDIn=0                                          Premise(F312)
	S607= CtrlCP0=0                                             Premise(F313)
	S608= CP0[ASID]=pid                                         CP0-Hold(S465,S607)
	S609= CtrlEPCIn=0                                           Premise(F314)
	S610= CtrlExCodeIn=0                                        Premise(F315)
	S611= CtrlIMMU=0                                            Premise(F316)
	S612= CtrlPC=0                                              Premise(F317)
	S613= CtrlPCInc=0                                           Premise(F318)
	S614= PC[CIA]=addr                                          PC-Hold(S471,S613)
	S615= PC[Out]=addr+4                                        PC-Hold(S472,S612,S613)
	S616= CtrlIAddrReg=0                                        Premise(F319)
	S617= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S474,S616)
	S618= CtrlICache=0                                          Premise(F320)
	S619= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S476,S618)
	S620= CtrlIR_IMMU=0                                         Premise(F321)
	S621= CtrlICacheReg=0                                       Premise(F322)
	S622= CtrlIR_ID=0                                           Premise(F323)
	S623= [IR_ID]={40,rS,rT,offset}                             IR_ID-Hold(S480,S622)
	S624= CtrlIMem=0                                            Premise(F324)
	S625= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S482,S624)
	S626= CtrlIRMux=0                                           Premise(F325)
	S627= CtrlGPR=0                                             Premise(F326)
	S628= GPR[rS]=base                                          GPR-Hold(S485,S627)
	S629= GPR[rT]=a                                             GPR-Hold(S486,S627)
	S630= CtrlA_EX=0                                            Premise(F327)
	S631= [A_EX]=FU(base)                                       A_EX-Hold(S488,S630)
	S632= CtrlB_EX=0                                            Premise(F328)
	S633= [B_EX]={16{offset[15]},offset}                        B_EX-Hold(S490,S632)
	S634= CtrlIR_EX=0                                           Premise(F329)
	S635= [IR_EX]={40,rS,rT,offset}                             IR_EX-Hold(S492,S634)
	S636= CtrlALUOut_MEM=0                                      Premise(F330)
	S637= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}         ALUOut_MEM-Hold(S494,S636)
	S638= CtrlDR_MEM=0                                          Premise(F331)
	S639= [DR_MEM]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_MEM-Hold(S496,S638)
	S640= CtrlIR_MEM=0                                          Premise(F332)
	S641= [IR_MEM]={40,rS,rT,offset}                            IR_MEM-Hold(S498,S640)
	S642= CtrlDMMU=0                                            Premise(F333)
	S643= CtrlDAddrReg_DMMU1=0                                  Premise(F334)
	S644= [DAddrReg_DMMU1]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Hold(S501,S643)
	S645= CtrlDCache=0                                          Premise(F335)
	S646= DCache[FU(base)+{16{offset[15]},offset}]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Hold(S503,S645)
	S647= CtrlIR_DMMU1=0                                        Premise(F336)
	S648= [IR_DMMU1]={40,rS,rT,offset}                          IR_DMMU1-Hold(S505,S647)
	S649= CtrlIR_WB=0                                           Premise(F337)
	S650= [IR_WB]={40,rS,rT,offset}                             IR_WB-Hold(S507,S649)
	S651= CtrlA_MEM=0                                           Premise(F338)
	S652= CtrlA_WB=0                                            Premise(F339)
	S653= CtrlB_MEM=0                                           Premise(F340)
	S654= CtrlB_WB=0                                            Premise(F341)
	S655= CtrlALUOut_DMMU1=0                                    Premise(F342)
	S656= [ALUOut_DMMU1]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU1-Hold(S513,S655)
	S657= CtrlALUOut_WB=0                                       Premise(F343)
	S658= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}          ALUOut_WB-Hold(S515,S657)
	S659= CtrlDR_DMMU1=0                                        Premise(F344)
	S660= [DR_DMMU1]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_DMMU1-Hold(S517,S659)
	S661= CtrlDR_WB=0                                           Premise(F345)
	S662= CtrlDAddrReg_MEM=0                                    Premise(F346)
	S663= CtrlDAddrReg_WB=0                                     Premise(F347)
	S664= CtrlIR_DMMU2=1                                        Premise(F348)
	S665= [IR_DMMU2]={40,rS,rT,offset}                          IR_DMMU2-Write(S598,S664)
	S666= CtrlALUOut_DMMU2=1                                    Premise(F349)
	S667= [ALUOut_DMMU2]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU2-Write(S600,S666)
	S668= CtrlDR_DMMU2=1                                        Premise(F350)
	S669= [DR_DMMU2]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_DMMU2-Write(S602,S668)
	S670= CtrlDAddrReg_DMMU2=1                                  Premise(F351)
	S671= [DAddrReg_DMMU2]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Write(S604,S670)
	S672= CtrlDMem=0                                            Premise(F352)
	S673= CtrlDMem8Word=0                                       Premise(F353)

MEM(DMMU2)	S674= CP0.ASID=pid                                          CP0-Read-ASID(S608)
	S675= PC.CIA=addr                                           PC-Out(S614)
	S676= PC.CIA31_28=addr[31:28]                               PC-Out(S614)
	S677= PC.Out=addr+4                                         PC-Out(S615)
	S678= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S617)
	S679= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S617)
	S680= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S617)
	S681= IR_ID.Out={40,rS,rT,offset}                           IR-Out(S623)
	S682= IR_ID.Out31_26=40                                     IR-Out(S623)
	S683= IR_ID.Out25_21=rS                                     IR-Out(S623)
	S684= IR_ID.Out20_16=rT                                     IR-Out(S623)
	S685= IR_ID.Out15_0=offset                                  IR-Out(S623)
	S686= A_EX.Out=FU(base)                                     A_EX-Out(S631)
	S687= A_EX.Out1_0={FU(base)}[1:0]                           A_EX-Out(S631)
	S688= A_EX.Out4_0={FU(base)}[4:0]                           A_EX-Out(S631)
	S689= B_EX.Out={16{offset[15]},offset}                      B_EX-Out(S633)
	S690= B_EX.Out1_0={{16{offset[15]},offset}}[1:0]            B_EX-Out(S633)
	S691= B_EX.Out4_0={{16{offset[15]},offset}}[4:0]            B_EX-Out(S633)
	S692= IR_EX.Out={40,rS,rT,offset}                           IR_EX-Out(S635)
	S693= IR_EX.Out31_26=40                                     IR_EX-Out(S635)
	S694= IR_EX.Out25_21=rS                                     IR_EX-Out(S635)
	S695= IR_EX.Out20_16=rT                                     IR_EX-Out(S635)
	S696= IR_EX.Out15_0=offset                                  IR_EX-Out(S635)
	S697= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}       ALUOut_MEM-Out(S637)
	S698= ALUOut_MEM.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_MEM-Out(S637)
	S699= ALUOut_MEM.Out4_0={FU(base)+{16{offset[15]},offset}}[4:0]ALUOut_MEM-Out(S637)
	S700= DR_MEM.Out={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_MEM-Out(S639)
	S701= DR_MEM.Out1_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR_MEM-Out(S639)
	S702= DR_MEM.Out4_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR_MEM-Out(S639)
	S703= IR_MEM.Out={40,rS,rT,offset}                          IR_MEM-Out(S641)
	S704= IR_MEM.Out31_26=40                                    IR_MEM-Out(S641)
	S705= IR_MEM.Out25_21=rS                                    IR_MEM-Out(S641)
	S706= IR_MEM.Out20_16=rT                                    IR_MEM-Out(S641)
	S707= IR_MEM.Out15_0=offset                                 IR_MEM-Out(S641)
	S708= DAddrReg_DMMU1.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Out(S644)
	S709= DAddrReg_DMMU1.Out1_0={{pid,FU(base)+{16{offset[15]},offset}}}[1:0]DAddrReg_DMMU1-Out(S644)
	S710= DAddrReg_DMMU1.Out4_0={{pid,FU(base)+{16{offset[15]},offset}}}[4:0]DAddrReg_DMMU1-Out(S644)
	S711= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S712= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S713= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S714= IR_DMMU1.Out={40,rS,rT,offset}                        IR_DMMU1-Out(S648)
	S715= IR_DMMU1.Out31_26=40                                  IR_DMMU1-Out(S648)
	S716= IR_DMMU1.Out25_21=rS                                  IR_DMMU1-Out(S648)
	S717= IR_DMMU1.Out20_16=rT                                  IR_DMMU1-Out(S648)
	S718= IR_DMMU1.Out15_0=offset                               IR_DMMU1-Out(S648)
	S719= IR_WB.Out={40,rS,rT,offset}                           IR-Out(S650)
	S720= IR_WB.Out31_26=40                                     IR-Out(S650)
	S721= IR_WB.Out25_21=rS                                     IR-Out(S650)
	S722= IR_WB.Out20_16=rT                                     IR-Out(S650)
	S723= IR_WB.Out15_0=offset                                  IR-Out(S650)
	S724= ALUOut_DMMU1.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU1-Out(S656)
	S725= ALUOut_DMMU1.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_DMMU1-Out(S656)
	S726= ALUOut_DMMU1.Out4_0={FU(base)+{16{offset[15]},offset}}[4:0]ALUOut_DMMU1-Out(S656)
	S727= ALUOut_WB.Out=FU(base)+{16{offset[15]},offset}        ALUOut_WB-Out(S658)
	S728= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S658)
	S729= ALUOut_WB.Out4_0={FU(base)+{16{offset[15]},offset}}[4:0]ALUOut_WB-Out(S658)
	S730= DR_DMMU1.Out={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_DMMU1-Out(S660)
	S731= DR_DMMU1.Out1_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR_DMMU1-Out(S660)
	S732= DR_DMMU1.Out4_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR_DMMU1-Out(S660)
	S733= IR_DMMU2.Out={40,rS,rT,offset}                        IR_DMMU2-Out(S665)
	S734= IR_DMMU2.Out31_26=40                                  IR_DMMU2-Out(S665)
	S735= IR_DMMU2.Out25_21=rS                                  IR_DMMU2-Out(S665)
	S736= IR_DMMU2.Out20_16=rT                                  IR_DMMU2-Out(S665)
	S737= IR_DMMU2.Out15_0=offset                               IR_DMMU2-Out(S665)
	S738= ALUOut_DMMU2.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU2-Out(S667)
	S739= ALUOut_DMMU2.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_DMMU2-Out(S667)
	S740= ALUOut_DMMU2.Out4_0={FU(base)+{16{offset[15]},offset}}[4:0]ALUOut_DMMU2-Out(S667)
	S741= DR_DMMU2.Out={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_DMMU2-Out(S669)
	S742= DR_DMMU2.Out1_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR_DMMU2-Out(S669)
	S743= DR_DMMU2.Out4_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR_DMMU2-Out(S669)
	S744= DAddrReg_DMMU2.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Out(S671)
	S745= DAddrReg_DMMU2.Out1_0={{pid,FU(base)+{16{offset[15]},offset}}}[1:0]DAddrReg_DMMU2-Out(S671)
	S746= DAddrReg_DMMU2.Out4_0={{pid,FU(base)+{16{offset[15]},offset}}}[4:0]DAddrReg_DMMU2-Out(S671)
	S747= IR_DMMU2.Out=>FU.IR_DMMU2                             Premise(F354)
	S748= FU.IR_DMMU2={40,rS,rT,offset}                         Path(S733,S747)
	S749= CU_DMMU2.IMMUHitOut=>CU_WB.IMMUHit                    Premise(F355)
	S750= CU_DMMU2.ICacheHitOut=>CU_WB.ICacheHit                Premise(F356)
	S751= IR_DMMU2.Out31_26=>CU_DMMU2.Op                        Premise(F357)
	S752= CU_DMMU2.Op=40                                        Path(S734,S751)
	S753= CU_DMMU2.Func=alu_add                                 CU_DMMU2(S752)
	S754= CU_DMMU2.MemDataSelFunc=mds_lhz                       CU_DMMU2(S752)
	S755= DAddrReg_DMMU2.Out=>DMem.WAddr                        Premise(F358)
	S756= DMem.WAddr={pid,FU(base)+{16{offset[15]},offset}}     Path(S744,S755)
	S757= DR_DMMU2.Out=>DMem.WData                              Premise(F359)
	S758= DMem.WData={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}Path(S741,S757)
	S759= ALUOut_DMMU2.Out=>DCache.IEA                          Premise(F360)
	S760= DCache.IEA=FU(base)+{16{offset[15]},offset}           Path(S738,S759)
	S761= DCache.Hit=DCacheHit(FU(base)+{16{offset[15]},offset})DCache-Search(S760)
	S762= DCache.Out={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Search(S760,S646)
	S763= DR_DMMU2.Out=>DCache.In                               Premise(F361)
	S764= DCache.In={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}Path(S741,S763)
	S765= IR_DMMU2.Out=>IR_WB.In                                Premise(F362)
	S766= IR_WB.In={40,rS,rT,offset}                            Path(S733,S765)
	S767= FU.InDMMU2_WReg=5'b00000                              Premise(F363)
	S768= CtrlASIDIn=0                                          Premise(F364)
	S769= CtrlCP0=0                                             Premise(F365)
	S770= CP0[ASID]=pid                                         CP0-Hold(S608,S769)
	S771= CtrlEPCIn=0                                           Premise(F366)
	S772= CtrlExCodeIn=0                                        Premise(F367)
	S773= CtrlIMMU=0                                            Premise(F368)
	S774= CtrlPC=0                                              Premise(F369)
	S775= CtrlPCInc=0                                           Premise(F370)
	S776= PC[CIA]=addr                                          PC-Hold(S614,S775)
	S777= PC[Out]=addr+4                                        PC-Hold(S615,S774,S775)
	S778= CtrlIAddrReg=0                                        Premise(F371)
	S779= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S617,S778)
	S780= CtrlICache=0                                          Premise(F372)
	S781= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S619,S780)
	S782= CtrlIR_IMMU=0                                         Premise(F373)
	S783= CtrlICacheReg=0                                       Premise(F374)
	S784= CtrlIR_ID=0                                           Premise(F375)
	S785= [IR_ID]={40,rS,rT,offset}                             IR_ID-Hold(S623,S784)
	S786= CtrlIMem=0                                            Premise(F376)
	S787= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S625,S786)
	S788= CtrlIRMux=0                                           Premise(F377)
	S789= CtrlGPR=0                                             Premise(F378)
	S790= GPR[rS]=base                                          GPR-Hold(S628,S789)
	S791= GPR[rT]=a                                             GPR-Hold(S629,S789)
	S792= CtrlA_EX=0                                            Premise(F379)
	S793= [A_EX]=FU(base)                                       A_EX-Hold(S631,S792)
	S794= CtrlB_EX=0                                            Premise(F380)
	S795= [B_EX]={16{offset[15]},offset}                        B_EX-Hold(S633,S794)
	S796= CtrlIR_EX=0                                           Premise(F381)
	S797= [IR_EX]={40,rS,rT,offset}                             IR_EX-Hold(S635,S796)
	S798= CtrlALUOut_MEM=0                                      Premise(F382)
	S799= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}         ALUOut_MEM-Hold(S637,S798)
	S800= CtrlDR_MEM=0                                          Premise(F383)
	S801= [DR_MEM]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_MEM-Hold(S639,S800)
	S802= CtrlIR_MEM=0                                          Premise(F384)
	S803= [IR_MEM]={40,rS,rT,offset}                            IR_MEM-Hold(S641,S802)
	S804= CtrlDMMU=0                                            Premise(F385)
	S805= CtrlDAddrReg_DMMU1=0                                  Premise(F386)
	S806= [DAddrReg_DMMU1]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Hold(S644,S805)
	S807= CtrlDCache=0                                          Premise(F387)
	S808= DCache[FU(base)+{16{offset[15]},offset}]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Hold(S646,S807)
	S809= CtrlIR_DMMU1=0                                        Premise(F388)
	S810= [IR_DMMU1]={40,rS,rT,offset}                          IR_DMMU1-Hold(S648,S809)
	S811= CtrlIR_WB=0                                           Premise(F389)
	S812= [IR_WB]={40,rS,rT,offset}                             IR_WB-Hold(S650,S811)
	S813= CtrlA_MEM=0                                           Premise(F390)
	S814= CtrlA_WB=0                                            Premise(F391)
	S815= CtrlB_MEM=0                                           Premise(F392)
	S816= CtrlB_WB=0                                            Premise(F393)
	S817= CtrlALUOut_DMMU1=0                                    Premise(F394)
	S818= [ALUOut_DMMU1]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU1-Hold(S656,S817)
	S819= CtrlALUOut_WB=0                                       Premise(F395)
	S820= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}          ALUOut_WB-Hold(S658,S819)
	S821= CtrlDR_DMMU1=0                                        Premise(F396)
	S822= [DR_DMMU1]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_DMMU1-Hold(S660,S821)
	S823= CtrlDR_WB=0                                           Premise(F397)
	S824= CtrlDAddrReg_MEM=0                                    Premise(F398)
	S825= CtrlDAddrReg_WB=0                                     Premise(F399)
	S826= CtrlIR_DMMU2=0                                        Premise(F400)
	S827= [IR_DMMU2]={40,rS,rT,offset}                          IR_DMMU2-Hold(S665,S826)
	S828= CtrlALUOut_DMMU2=0                                    Premise(F401)
	S829= [ALUOut_DMMU2]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU2-Hold(S667,S828)
	S830= CtrlDR_DMMU2=0                                        Premise(F402)
	S831= [DR_DMMU2]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_DMMU2-Hold(S669,S830)
	S832= CtrlDAddrReg_DMMU2=0                                  Premise(F403)
	S833= [DAddrReg_DMMU2]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Hold(S671,S832)
	S834= CtrlDMem=0                                            Premise(F404)
	S835= CtrlDMem8Word=0                                       Premise(F405)

WB	S836= CP0.ASID=pid                                          CP0-Read-ASID(S770)
	S837= PC.CIA=addr                                           PC-Out(S776)
	S838= PC.CIA31_28=addr[31:28]                               PC-Out(S776)
	S839= PC.Out=addr+4                                         PC-Out(S777)
	S840= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S779)
	S841= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S779)
	S842= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S779)
	S843= IR_ID.Out={40,rS,rT,offset}                           IR-Out(S785)
	S844= IR_ID.Out31_26=40                                     IR-Out(S785)
	S845= IR_ID.Out25_21=rS                                     IR-Out(S785)
	S846= IR_ID.Out20_16=rT                                     IR-Out(S785)
	S847= IR_ID.Out15_0=offset                                  IR-Out(S785)
	S848= A_EX.Out=FU(base)                                     A_EX-Out(S793)
	S849= A_EX.Out1_0={FU(base)}[1:0]                           A_EX-Out(S793)
	S850= A_EX.Out4_0={FU(base)}[4:0]                           A_EX-Out(S793)
	S851= B_EX.Out={16{offset[15]},offset}                      B_EX-Out(S795)
	S852= B_EX.Out1_0={{16{offset[15]},offset}}[1:0]            B_EX-Out(S795)
	S853= B_EX.Out4_0={{16{offset[15]},offset}}[4:0]            B_EX-Out(S795)
	S854= IR_EX.Out={40,rS,rT,offset}                           IR_EX-Out(S797)
	S855= IR_EX.Out31_26=40                                     IR_EX-Out(S797)
	S856= IR_EX.Out25_21=rS                                     IR_EX-Out(S797)
	S857= IR_EX.Out20_16=rT                                     IR_EX-Out(S797)
	S858= IR_EX.Out15_0=offset                                  IR_EX-Out(S797)
	S859= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}       ALUOut_MEM-Out(S799)
	S860= ALUOut_MEM.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_MEM-Out(S799)
	S861= ALUOut_MEM.Out4_0={FU(base)+{16{offset[15]},offset}}[4:0]ALUOut_MEM-Out(S799)
	S862= DR_MEM.Out={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_MEM-Out(S801)
	S863= DR_MEM.Out1_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR_MEM-Out(S801)
	S864= DR_MEM.Out4_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR_MEM-Out(S801)
	S865= IR_MEM.Out={40,rS,rT,offset}                          IR_MEM-Out(S803)
	S866= IR_MEM.Out31_26=40                                    IR_MEM-Out(S803)
	S867= IR_MEM.Out25_21=rS                                    IR_MEM-Out(S803)
	S868= IR_MEM.Out20_16=rT                                    IR_MEM-Out(S803)
	S869= IR_MEM.Out15_0=offset                                 IR_MEM-Out(S803)
	S870= DAddrReg_DMMU1.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Out(S806)
	S871= DAddrReg_DMMU1.Out1_0={{pid,FU(base)+{16{offset[15]},offset}}}[1:0]DAddrReg_DMMU1-Out(S806)
	S872= DAddrReg_DMMU1.Out4_0={{pid,FU(base)+{16{offset[15]},offset}}}[4:0]DAddrReg_DMMU1-Out(S806)
	S873= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S874= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S875= DCache.RLineDirty=DCacheRLineDirty()                  DCache-WriteBack()
	S876= IR_DMMU1.Out={40,rS,rT,offset}                        IR_DMMU1-Out(S810)
	S877= IR_DMMU1.Out31_26=40                                  IR_DMMU1-Out(S810)
	S878= IR_DMMU1.Out25_21=rS                                  IR_DMMU1-Out(S810)
	S879= IR_DMMU1.Out20_16=rT                                  IR_DMMU1-Out(S810)
	S880= IR_DMMU1.Out15_0=offset                               IR_DMMU1-Out(S810)
	S881= IR_WB.Out={40,rS,rT,offset}                           IR-Out(S812)
	S882= IR_WB.Out31_26=40                                     IR-Out(S812)
	S883= IR_WB.Out25_21=rS                                     IR-Out(S812)
	S884= IR_WB.Out20_16=rT                                     IR-Out(S812)
	S885= IR_WB.Out15_0=offset                                  IR-Out(S812)
	S886= ALUOut_DMMU1.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU1-Out(S818)
	S887= ALUOut_DMMU1.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_DMMU1-Out(S818)
	S888= ALUOut_DMMU1.Out4_0={FU(base)+{16{offset[15]},offset}}[4:0]ALUOut_DMMU1-Out(S818)
	S889= ALUOut_WB.Out=FU(base)+{16{offset[15]},offset}        ALUOut_WB-Out(S820)
	S890= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S820)
	S891= ALUOut_WB.Out4_0={FU(base)+{16{offset[15]},offset}}[4:0]ALUOut_WB-Out(S820)
	S892= DR_DMMU1.Out={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_DMMU1-Out(S822)
	S893= DR_DMMU1.Out1_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR_DMMU1-Out(S822)
	S894= DR_DMMU1.Out4_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR_DMMU1-Out(S822)
	S895= IR_DMMU2.Out={40,rS,rT,offset}                        IR_DMMU2-Out(S827)
	S896= IR_DMMU2.Out31_26=40                                  IR_DMMU2-Out(S827)
	S897= IR_DMMU2.Out25_21=rS                                  IR_DMMU2-Out(S827)
	S898= IR_DMMU2.Out20_16=rT                                  IR_DMMU2-Out(S827)
	S899= IR_DMMU2.Out15_0=offset                               IR_DMMU2-Out(S827)
	S900= ALUOut_DMMU2.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU2-Out(S829)
	S901= ALUOut_DMMU2.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_DMMU2-Out(S829)
	S902= ALUOut_DMMU2.Out4_0={FU(base)+{16{offset[15]},offset}}[4:0]ALUOut_DMMU2-Out(S829)
	S903= DR_DMMU2.Out={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_DMMU2-Out(S831)
	S904= DR_DMMU2.Out1_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[1:0]DR_DMMU2-Out(S831)
	S905= DR_DMMU2.Out4_0={{a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}}[4:0]DR_DMMU2-Out(S831)
	S906= DAddrReg_DMMU2.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Out(S833)
	S907= DAddrReg_DMMU2.Out1_0={{pid,FU(base)+{16{offset[15]},offset}}}[1:0]DAddrReg_DMMU2-Out(S833)
	S908= DAddrReg_DMMU2.Out4_0={{pid,FU(base)+{16{offset[15]},offset}}}[4:0]DAddrReg_DMMU2-Out(S833)
	S909= IR_WB.Out=>FU.IR_WB                                   Premise(F406)
	S910= FU.IR_WB={40,rS,rT,offset}                            Path(S881,S909)
	S911= IR_WB.Out31_26=>CU_WB.Op                              Premise(F407)
	S912= CU_WB.Op=40                                           Path(S882,S911)
	S913= CU_WB.Func=alu_add                                    CU_WB(S912)
	S914= CU_WB.MemDataSelFunc=mds_lhz                          CU_WB(S912)
	S915= FU.InWB_WReg=5'b00000                                 Premise(F408)
	S916= CtrlASIDIn=0                                          Premise(F409)
	S917= CtrlCP0=0                                             Premise(F410)
	S918= CP0[ASID]=pid                                         CP0-Hold(S770,S917)
	S919= CtrlEPCIn=0                                           Premise(F411)
	S920= CtrlExCodeIn=0                                        Premise(F412)
	S921= CtrlIMMU=0                                            Premise(F413)
	S922= CtrlPC=0                                              Premise(F414)
	S923= CtrlPCInc=0                                           Premise(F415)
	S924= PC[CIA]=addr                                          PC-Hold(S776,S923)
	S925= PC[Out]=addr+4                                        PC-Hold(S777,S922,S923)
	S926= CtrlIAddrReg=0                                        Premise(F416)
	S927= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S779,S926)
	S928= CtrlICache=0                                          Premise(F417)
	S929= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S781,S928)
	S930= CtrlIR_IMMU=0                                         Premise(F418)
	S931= CtrlICacheReg=0                                       Premise(F419)
	S932= CtrlIR_ID=0                                           Premise(F420)
	S933= [IR_ID]={40,rS,rT,offset}                             IR_ID-Hold(S785,S932)
	S934= CtrlIMem=0                                            Premise(F421)
	S935= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S787,S934)
	S936= CtrlIRMux=0                                           Premise(F422)
	S937= CtrlGPR=0                                             Premise(F423)
	S938= GPR[rS]=base                                          GPR-Hold(S790,S937)
	S939= GPR[rT]=a                                             GPR-Hold(S791,S937)
	S940= CtrlA_EX=0                                            Premise(F424)
	S941= [A_EX]=FU(base)                                       A_EX-Hold(S793,S940)
	S942= CtrlB_EX=0                                            Premise(F425)
	S943= [B_EX]={16{offset[15]},offset}                        B_EX-Hold(S795,S942)
	S944= CtrlIR_EX=0                                           Premise(F426)
	S945= [IR_EX]={40,rS,rT,offset}                             IR_EX-Hold(S797,S944)
	S946= CtrlALUOut_MEM=0                                      Premise(F427)
	S947= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}         ALUOut_MEM-Hold(S799,S946)
	S948= CtrlDR_MEM=0                                          Premise(F428)
	S949= [DR_MEM]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_MEM-Hold(S801,S948)
	S950= CtrlIR_MEM=0                                          Premise(F429)
	S951= [IR_MEM]={40,rS,rT,offset}                            IR_MEM-Hold(S803,S950)
	S952= CtrlDMMU=0                                            Premise(F430)
	S953= CtrlDAddrReg_DMMU1=0                                  Premise(F431)
	S954= [DAddrReg_DMMU1]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Hold(S806,S953)
	S955= CtrlDCache=0                                          Premise(F432)
	S956= DCache[FU(base)+{16{offset[15]},offset}]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Hold(S808,S955)
	S957= CtrlIR_DMMU1=0                                        Premise(F433)
	S958= [IR_DMMU1]={40,rS,rT,offset}                          IR_DMMU1-Hold(S810,S957)
	S959= CtrlIR_WB=0                                           Premise(F434)
	S960= [IR_WB]={40,rS,rT,offset}                             IR_WB-Hold(S812,S959)
	S961= CtrlA_MEM=0                                           Premise(F435)
	S962= CtrlA_WB=0                                            Premise(F436)
	S963= CtrlB_MEM=0                                           Premise(F437)
	S964= CtrlB_WB=0                                            Premise(F438)
	S965= CtrlALUOut_DMMU1=0                                    Premise(F439)
	S966= [ALUOut_DMMU1]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU1-Hold(S818,S965)
	S967= CtrlALUOut_WB=0                                       Premise(F440)
	S968= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}          ALUOut_WB-Hold(S820,S967)
	S969= CtrlDR_DMMU1=0                                        Premise(F441)
	S970= [DR_DMMU1]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_DMMU1-Hold(S822,S969)
	S971= CtrlDR_WB=0                                           Premise(F442)
	S972= CtrlDAddrReg_MEM=0                                    Premise(F443)
	S973= CtrlDAddrReg_WB=0                                     Premise(F444)
	S974= CtrlIR_DMMU2=0                                        Premise(F445)
	S975= [IR_DMMU2]={40,rS,rT,offset}                          IR_DMMU2-Hold(S827,S974)
	S976= CtrlALUOut_DMMU2=0                                    Premise(F446)
	S977= [ALUOut_DMMU2]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU2-Hold(S829,S976)
	S978= CtrlDR_DMMU2=0                                        Premise(F447)
	S979= [DR_DMMU2]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_DMMU2-Hold(S831,S978)
	S980= CtrlDAddrReg_DMMU2=0                                  Premise(F448)
	S981= [DAddrReg_DMMU2]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Hold(S833,S980)
	S982= CtrlDMem=0                                            Premise(F449)
	S983= CtrlDMem8Word=0                                       Premise(F450)

POST	S918= CP0[ASID]=pid                                         CP0-Hold(S770,S917)
	S924= PC[CIA]=addr                                          PC-Hold(S776,S923)
	S925= PC[Out]=addr+4                                        PC-Hold(S777,S922,S923)
	S927= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S779,S926)
	S929= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S781,S928)
	S933= [IR_ID]={40,rS,rT,offset}                             IR_ID-Hold(S785,S932)
	S935= IMem[{pid,addr}]={40,rS,rT,offset}                    IMem-Hold(S787,S934)
	S938= GPR[rS]=base                                          GPR-Hold(S790,S937)
	S939= GPR[rT]=a                                             GPR-Hold(S791,S937)
	S941= [A_EX]=FU(base)                                       A_EX-Hold(S793,S940)
	S943= [B_EX]={16{offset[15]},offset}                        B_EX-Hold(S795,S942)
	S945= [IR_EX]={40,rS,rT,offset}                             IR_EX-Hold(S797,S944)
	S947= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}         ALUOut_MEM-Hold(S799,S946)
	S949= [DR_MEM]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_MEM-Hold(S801,S948)
	S951= [IR_MEM]={40,rS,rT,offset}                            IR_MEM-Hold(S803,S950)
	S954= [DAddrReg_DMMU1]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Hold(S806,S953)
	S956= DCache[FU(base)+{16{offset[15]},offset}]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DCache-Hold(S808,S955)
	S958= [IR_DMMU1]={40,rS,rT,offset}                          IR_DMMU1-Hold(S810,S957)
	S960= [IR_WB]={40,rS,rT,offset}                             IR_WB-Hold(S812,S959)
	S966= [ALUOut_DMMU1]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU1-Hold(S818,S965)
	S968= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}          ALUOut_WB-Hold(S820,S967)
	S970= [DR_DMMU1]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_DMMU1-Hold(S822,S969)
	S975= [IR_DMMU2]={40,rS,rT,offset}                          IR_DMMU2-Hold(S827,S974)
	S977= [ALUOut_DMMU2]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU2-Hold(S829,S976)
	S979= [DR_DMMU2]={a[31-{FU(base)+{16{offset[15]},offset}}[1:0]*8:0],{FU(base)+{16{offset[15]},offset}}[1:0]*8{0}}DR_DMMU2-Hold(S831,S978)
	S981= [DAddrReg_DMMU2]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Hold(S833,S980)

