
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,cc,0,1,rD,0,1}                   Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={0,rS,cc,0,1,rD,0,1}                          IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR.In                                        Premise(F6)
	S12= IR.In={0,rS,cc,0,1,rD,0,1}                             Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F7)
	S14= CtrlPCInc=1                                            Premise(F8)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= PC[CIA]=addr                                           PC-Inc(S1,S13,S14)
	S17= CtrlIMem=0                                             Premise(F9)
	S18= IMem[{pid,addr}]={0,rS,cc,0,1,rD,0,1}                  IMem-Hold(S2,S17)
	S19= CtrlASIDIn=0                                           Premise(F10)
	S20= CtrlCP0=0                                              Premise(F11)
	S21= CP0[ASID]=pid                                          CP0-Hold(S0,S20)
	S22= CtrlEPCIn=0                                            Premise(F12)
	S23= CtrlExCodeIn=0                                         Premise(F13)
	S24= CtrlIR=1                                               Premise(F14)
	S25= [IR]={0,rS,cc,0,1,rD,0,1}                              IR-Write(S12,S24)
	S26= CtrlGPR=0                                              Premise(F15)
	S27= GPR[rS]=a                                              GPR-Hold(S3,S26)
	S28= CtrlA=0                                                Premise(F16)
	S29= CtrlCP1=0                                              Premise(F17)
	S30= CtrlConditionReg=0                                     Premise(F18)

ID	S31= PC.Out=addr+4                                          PC-Out(S15)
	S32= PC.CIA=addr                                            PC-Out(S16)
	S33= PC.CIA31_28=addr[31:28]                                PC-Out(S16)
	S34= CP0.ASID=pid                                           CP0-Read-ASID(S21)
	S35= IR.Out={0,rS,cc,0,1,rD,0,1}                            IR-Out(S25)
	S36= IR.Out31_26=0                                          IR-Out(S25)
	S37= IR.Out25_21=rS                                         IR-Out(S25)
	S38= IR.Out20_18=cc                                         IR-Out(S25)
	S39= IR.Out17=0                                             IR-Out(S25)
	S40= IR.Out16=1                                             IR-Out(S25)
	S41= IR.Out15_11=rD                                         IR-Out(S25)
	S42= IR.Out10_6=0                                           IR-Out(S25)
	S43= IR.Out5_0=1                                            IR-Out(S25)
	S44= IR.Out31_26=>CU.Op                                     Premise(F19)
	S45= CU.Op=0                                                Path(S36,S44)
	S46= IR.Out25_21=>GPR.RReg1                                 Premise(F20)
	S47= GPR.RReg1=rS                                           Path(S37,S46)
	S48= GPR.Rdata1=a                                           GPR-Read(S47,S27)
	S49= IR.Out5_0=>CU.IRFunc                                   Premise(F21)
	S50= CU.IRFunc=1                                            Path(S43,S49)
	S51= GPR.Rdata1=>A.In                                       Premise(F22)
	S52= A.In=a                                                 Path(S48,S51)
	S53= CtrlPC=0                                               Premise(F23)
	S54= CtrlPCInc=0                                            Premise(F24)
	S55= PC[CIA]=addr                                           PC-Hold(S16,S54)
	S56= PC[Out]=addr+4                                         PC-Hold(S15,S53,S54)
	S57= CtrlIMem=0                                             Premise(F25)
	S58= IMem[{pid,addr}]={0,rS,cc,0,1,rD,0,1}                  IMem-Hold(S18,S57)
	S59= CtrlASIDIn=0                                           Premise(F26)
	S60= CtrlCP0=0                                              Premise(F27)
	S61= CP0[ASID]=pid                                          CP0-Hold(S21,S60)
	S62= CtrlEPCIn=0                                            Premise(F28)
	S63= CtrlExCodeIn=0                                         Premise(F29)
	S64= CtrlIR=0                                               Premise(F30)
	S65= [IR]={0,rS,cc,0,1,rD,0,1}                              IR-Hold(S25,S64)
	S66= CtrlGPR=0                                              Premise(F31)
	S67= GPR[rS]=a                                              GPR-Hold(S27,S66)
	S68= CtrlA=1                                                Premise(F32)
	S69= [A]=a                                                  A-Write(S52,S68)
	S70= CtrlCP1=0                                              Premise(F33)
	S71= CtrlConditionReg=0                                     Premise(F34)

EX	S72= PC.CIA=addr                                            PC-Out(S55)
	S73= PC.CIA31_28=addr[31:28]                                PC-Out(S55)
	S74= PC.Out=addr+4                                          PC-Out(S56)
	S75= CP0.ASID=pid                                           CP0-Read-ASID(S61)
	S76= IR.Out={0,rS,cc,0,1,rD,0,1}                            IR-Out(S65)
	S77= IR.Out31_26=0                                          IR-Out(S65)
	S78= IR.Out25_21=rS                                         IR-Out(S65)
	S79= IR.Out20_18=cc                                         IR-Out(S65)
	S80= IR.Out17=0                                             IR-Out(S65)
	S81= IR.Out16=1                                             IR-Out(S65)
	S82= IR.Out15_11=rD                                         IR-Out(S65)
	S83= IR.Out10_6=0                                           IR-Out(S65)
	S84= IR.Out5_0=1                                            IR-Out(S65)
	S85= A.Out=a                                                A-Out(S69)
	S86= A.Out1_0={a}[1:0]                                      A-Out(S69)
	S87= A.Out4_0={a}[4:0]                                      A-Out(S69)
	S88= IR.Out20_18=>CP1.cc                                    Premise(F35)
	S89= CP1.cc=cc                                              Path(S79,S88)
	S90= IR.Out16=>CP1.tf                                       Premise(F36)
	S91= CP1.tf=1                                               Path(S81,S90)
	S92= CP1.fp=FPConditionCode(cc,1)                           FP-PRODUCT(S89,S91)
	S93= CP1.fp=>ConditionReg.In                                Premise(F37)
	S94= ConditionReg.In=FPConditionCode(cc,1)                  Path(S92,S93)
	S95= CtrlPC=0                                               Premise(F38)
	S96= CtrlPCInc=0                                            Premise(F39)
	S97= PC[CIA]=addr                                           PC-Hold(S55,S96)
	S98= PC[Out]=addr+4                                         PC-Hold(S56,S95,S96)
	S99= CtrlIMem=0                                             Premise(F40)
	S100= IMem[{pid,addr}]={0,rS,cc,0,1,rD,0,1}                 IMem-Hold(S58,S99)
	S101= CtrlASIDIn=0                                          Premise(F41)
	S102= CtrlCP0=0                                             Premise(F42)
	S103= CP0[ASID]=pid                                         CP0-Hold(S61,S102)
	S104= CtrlEPCIn=0                                           Premise(F43)
	S105= CtrlExCodeIn=0                                        Premise(F44)
	S106= CtrlIR=0                                              Premise(F45)
	S107= [IR]={0,rS,cc,0,1,rD,0,1}                             IR-Hold(S65,S106)
	S108= CtrlGPR=0                                             Premise(F46)
	S109= GPR[rS]=a                                             GPR-Hold(S67,S108)
	S110= CtrlA=0                                               Premise(F47)
	S111= [A]=a                                                 A-Hold(S69,S110)
	S112= CtrlCP1=0                                             Premise(F48)
	S113= CtrlConditionReg=1                                    Premise(F49)
	S114= [ConditionReg]=FPConditionCode(cc,1)                  ConditionReg-Write(S94,S113)

MEM	S115= PC.CIA=addr                                           PC-Out(S97)
	S116= PC.CIA31_28=addr[31:28]                               PC-Out(S97)
	S117= PC.Out=addr+4                                         PC-Out(S98)
	S118= CP0.ASID=pid                                          CP0-Read-ASID(S103)
	S119= IR.Out={0,rS,cc,0,1,rD,0,1}                           IR-Out(S107)
	S120= IR.Out31_26=0                                         IR-Out(S107)
	S121= IR.Out25_21=rS                                        IR-Out(S107)
	S122= IR.Out20_18=cc                                        IR-Out(S107)
	S123= IR.Out17=0                                            IR-Out(S107)
	S124= IR.Out16=1                                            IR-Out(S107)
	S125= IR.Out15_11=rD                                        IR-Out(S107)
	S126= IR.Out10_6=0                                          IR-Out(S107)
	S127= IR.Out5_0=1                                           IR-Out(S107)
	S128= A.Out=a                                               A-Out(S111)
	S129= A.Out1_0={a}[1:0]                                     A-Out(S111)
	S130= A.Out4_0={a}[4:0]                                     A-Out(S111)
	S131= ConditionReg.Out=FPConditionCode(cc,1)                ConditionReg-Out(S114)
	S132= ConditionReg.Out1_0={FPConditionCode(cc,1)}[1:0]      ConditionReg-Out(S114)
	S133= ConditionReg.Out4_0={FPConditionCode(cc,1)}[4:0]      ConditionReg-Out(S114)
	S134= CtrlPC=0                                              Premise(F50)
	S135= CtrlPCInc=0                                           Premise(F51)
	S136= PC[CIA]=addr                                          PC-Hold(S97,S135)
	S137= PC[Out]=addr+4                                        PC-Hold(S98,S134,S135)
	S138= CtrlIMem=0                                            Premise(F52)
	S139= IMem[{pid,addr}]={0,rS,cc,0,1,rD,0,1}                 IMem-Hold(S100,S138)
	S140= CtrlASIDIn=0                                          Premise(F53)
	S141= CtrlCP0=0                                             Premise(F54)
	S142= CP0[ASID]=pid                                         CP0-Hold(S103,S141)
	S143= CtrlEPCIn=0                                           Premise(F55)
	S144= CtrlExCodeIn=0                                        Premise(F56)
	S145= CtrlIR=0                                              Premise(F57)
	S146= [IR]={0,rS,cc,0,1,rD,0,1}                             IR-Hold(S107,S145)
	S147= CtrlGPR=0                                             Premise(F58)
	S148= GPR[rS]=a                                             GPR-Hold(S109,S147)
	S149= CtrlA=0                                               Premise(F59)
	S150= [A]=a                                                 A-Hold(S111,S149)
	S151= CtrlCP1=0                                             Premise(F60)
	S152= CtrlConditionReg=0                                    Premise(F61)
	S153= [ConditionReg]=FPConditionCode(cc,1)                  ConditionReg-Hold(S114,S152)

WB	S154= PC.CIA=addr                                           PC-Out(S136)
	S155= PC.CIA31_28=addr[31:28]                               PC-Out(S136)
	S156= PC.Out=addr+4                                         PC-Out(S137)
	S157= CP0.ASID=pid                                          CP0-Read-ASID(S142)
	S158= IR.Out={0,rS,cc,0,1,rD,0,1}                           IR-Out(S146)
	S159= IR.Out31_26=0                                         IR-Out(S146)
	S160= IR.Out25_21=rS                                        IR-Out(S146)
	S161= IR.Out20_18=cc                                        IR-Out(S146)
	S162= IR.Out17=0                                            IR-Out(S146)
	S163= IR.Out16=1                                            IR-Out(S146)
	S164= IR.Out15_11=rD                                        IR-Out(S146)
	S165= IR.Out10_6=0                                          IR-Out(S146)
	S166= IR.Out5_0=1                                           IR-Out(S146)
	S167= A.Out=a                                               A-Out(S150)
	S168= A.Out1_0={a}[1:0]                                     A-Out(S150)
	S169= A.Out4_0={a}[4:0]                                     A-Out(S150)
	S170= ConditionReg.Out=FPConditionCode(cc,1)                ConditionReg-Out(S153)
	S171= ConditionReg.Out1_0={FPConditionCode(cc,1)}[1:0]      ConditionReg-Out(S153)
	S172= ConditionReg.Out4_0={FPConditionCode(cc,1)}[4:0]      ConditionReg-Out(S153)
	S173= IR.Out15_11=>GPR.WReg                                 Premise(F62)
	S174= GPR.WReg=rD                                           Path(S164,S173)
	S175= A.Out=>GPR.WData                                      Premise(F63)
	S176= GPR.WData=a                                           Path(S167,S175)
	S177= ConditionReg.Out=>CU.fp                               Premise(F64)
	S178= CU.fp=FPConditionCode(cc,1)                           Path(S170,S177)
	S179= CtrlPC=0                                              Premise(F65)
	S180= CtrlPCInc=0                                           Premise(F66)
	S181= PC[CIA]=addr                                          PC-Hold(S136,S180)
	S182= PC[Out]=addr+4                                        PC-Hold(S137,S179,S180)
	S183= CtrlIMem=0                                            Premise(F67)
	S184= IMem[{pid,addr}]={0,rS,cc,0,1,rD,0,1}                 IMem-Hold(S139,S183)
	S185= CtrlASIDIn=0                                          Premise(F68)
	S186= CtrlCP0=0                                             Premise(F69)
	S187= CP0[ASID]=pid                                         CP0-Hold(S142,S186)
	S188= CtrlEPCIn=0                                           Premise(F70)
	S189= CtrlExCodeIn=0                                        Premise(F71)
	S190= CtrlIR=0                                              Premise(F72)
	S191= [IR]={0,rS,cc,0,1,rD,0,1}                             IR-Hold(S146,S190)
	S192= CtrlGPR=0                                             Premise(F73)
	S193= GPR[rS]=a                                             GPR-Hold(S148,S192)
	S194= CtrlA=0                                               Premise(F74)
	S195= [A]=a                                                 A-Hold(S150,S194)
	S196= CtrlCP1=0                                             Premise(F75)
	S197= CtrlConditionReg=0                                    Premise(F76)
	S198= [ConditionReg]=FPConditionCode(cc,1)                  ConditionReg-Hold(S153,S197)

POST	S181= PC[CIA]=addr                                          PC-Hold(S136,S180)
	S182= PC[Out]=addr+4                                        PC-Hold(S137,S179,S180)
	S184= IMem[{pid,addr}]={0,rS,cc,0,1,rD,0,1}                 IMem-Hold(S139,S183)
	S187= CP0[ASID]=pid                                         CP0-Hold(S142,S186)
	S191= [IR]={0,rS,cc,0,1,rD,0,1}                             IR-Hold(S146,S190)
	S193= GPR[rS]=a                                             GPR-Hold(S148,S192)
	S195= [A]=a                                                 A-Hold(S150,S194)
	S198= [ConditionReg]=FPConditionCode(cc,1)                  ConditionReg-Hold(S153,S197)

