
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={16,4,rT,rD,0,sel}                         Premise(F3)
	S2= GPR[rT]=a                                               Premise(F4)

IF	S3= PC.Out=addr                                             PC-Out(S0)
	S4= PC.Out=>ICache.IEA                                      Premise(F9)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={16,4,rT,rD,0,sel}                           ICache-Search(S5,S1)
	S7= ICache.Out=>IR.In                                       Premise(F10)
	S8= IR.In={16,4,rT,rD,0,sel}                                Path(S6,S7)
	S9= CtrlPC=0                                                Premise(F18)
	S10= CtrlPCInc=1                                            Premise(F19)
	S11= PC[Out]=addr+4                                         PC-Inc(S0,S9,S10)
	S12= CtrlIR=1                                               Premise(F22)
	S13= [IR]={16,4,rT,rD,0,sel}                                IR-Write(S8,S12)
	S14= CtrlGPR=0                                              Premise(F26)
	S15= GPR[rT]=a                                              GPR-Hold(S2,S14)

ID	S16= IR.Out20_16=rT                                         IR-Out(S13)
	S17= IR.Out20_16=>GPR.RReg1                                 Premise(F45)
	S18= GPR.RReg1=rT                                           Path(S16,S17)
	S19= GPR.Rdata1=a                                           GPR-Read(S18,S15)
	S20= GPR.Rdata1=>A.In                                       Premise(F46)
	S21= A.In=a                                                 Path(S19,S20)
	S22= CtrlPC=0                                               Premise(F52)
	S23= CtrlPCInc=0                                            Premise(F53)
	S24= PC[Out]=addr+4                                         PC-Hold(S11,S22,S23)
	S25= CtrlIR=0                                               Premise(F56)
	S26= [IR]={16,4,rT,rD,0,sel}                                IR-Hold(S13,S25)
	S27= CtrlA=1                                                Premise(F61)
	S28= [A]=a                                                  A-Write(S21,S27)

EX	S29= IR.Out15_11=rD                                         IR-Out(S26)
	S30= A.Out=a                                                A-Out(S28)
	S31= IR.Out15_11=>CP0.WReg                                  Premise(F62)
	S32= CP0.WReg=rD                                            Path(S29,S31)
	S33= A.Out=>CP0.Wdata                                       Premise(F63)
	S34= CP0.Wdata=a                                            Path(S30,S33)
	S35= CtrlCP0=1                                              Premise(F65)
	S36= CP0[rD]=a                                              CP0-Write-Nomal(S32,S34,S35)
	S37= CtrlPC=0                                               Premise(F69)
	S38= CtrlPCInc=0                                            Premise(F70)
	S39= PC[Out]=addr+4                                         PC-Hold(S24,S37,S38)

MEM	S40= CtrlCP0=0                                              Premise(F80)
	S41= CP0[rD]=a                                              CP0-Hold(S36,S40)
	S42= CtrlPC=0                                               Premise(F84)
	S43= CtrlPCInc=0                                            Premise(F85)
	S44= PC[Out]=addr+4                                         PC-Hold(S39,S42,S43)

MEM(DMMU1)	S45= CtrlCP0=0                                              Premise(F95)
	S46= CP0[rD]=a                                              CP0-Hold(S41,S45)
	S47= CtrlPC=0                                               Premise(F99)
	S48= CtrlPCInc=0                                            Premise(F100)
	S49= PC[Out]=addr+4                                         PC-Hold(S44,S47,S48)

MEM(DMMU2)	S50= CtrlCP0=0                                              Premise(F110)
	S51= CP0[rD]=a                                              CP0-Hold(S46,S50)
	S52= CtrlPC=0                                               Premise(F114)
	S53= CtrlPCInc=0                                            Premise(F115)
	S54= PC[Out]=addr+4                                         PC-Hold(S49,S52,S53)

WB	S55= CtrlCP0=0                                              Premise(F125)
	S56= CP0[rD]=a                                              CP0-Hold(S51,S55)
	S57= CtrlPC=0                                               Premise(F129)
	S58= CtrlPCInc=0                                            Premise(F130)
	S59= PC[Out]=addr+4                                         PC-Hold(S54,S57,S58)

POST	S56= CP0[rD]=a                                              CP0-Hold(S51,S55)
	S59= PC[Out]=addr+4                                         PC-Hold(S54,S57,S58)

