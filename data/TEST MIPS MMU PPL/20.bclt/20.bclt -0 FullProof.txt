
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={17,8,cc,0,1,offset}                   Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= CP0.ASID=>IMMU.PID                                      Premise(F3)
	S6= IMMU.PID=pid                                            Path(S3,S5)
	S7= PC.Out=>IMMU.IEA                                        Premise(F4)
	S8= IMMU.IEA=addr                                           Path(S4,S7)
	S9= IMMU.Addr={pid,addr}                                    IMMU-Search(S6,S8)
	S10= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S6,S8)
	S11= IMMU.Addr=>IAddrReg.In                                 Premise(F5)
	S12= IAddrReg.In={pid,addr}                                 Path(S9,S11)
	S13= IMMU.Hit=>CU_IF.IMMUHit                                Premise(F6)
	S14= CU_IF.IMMUHit=IMMUHit(pid,addr)                        Path(S10,S13)
	S15= PC.Out=>ICache.IEA                                     Premise(F7)
	S16= ICache.IEA=addr                                        Path(S4,S15)
	S17= ICache.Hit=ICacheHit(addr)                             ICache-Search(S16)
	S18= ICache.Out=>IR_IMMU.In                                 Premise(F8)
	S19= ICache.Out=>ICacheReg.In                               Premise(F9)
	S20= ICache.Hit=>CU_IF.ICacheHit                            Premise(F10)
	S21= CU_IF.ICacheHit=ICacheHit(addr)                        Path(S17,S20)
	S22= ICache.Out=>IR_ID.In                                   Premise(F11)
	S23= CU_IF.IMMUHitOut=>CU_ID.IMMUHit                        Premise(F12)
	S24= CU_IF.ICacheHitOut=>CU_ID.ICacheHit                    Premise(F13)
	S25= CU_IF.IMMUHitOut=>CU_IMMU.IMMUHit                      Premise(F14)
	S26= CU_IF.ICacheHitOut=>CU_IMMU.ICacheHit                  Premise(F15)
	S27= ICache.Hit=>FU.ICacheHit                               Premise(F16)
	S28= FU.ICacheHit=ICacheHit(addr)                           Path(S17,S27)
	S29= FU.Halt_IF=>CU_IF.Halt                                 Premise(F17)
	S30= FU.Bub_IF=>CU_IF.Bub                                   Premise(F18)
	S31= CtrlASIDIn=0                                           Premise(F19)
	S32= CtrlCP0=0                                              Premise(F20)
	S33= CP0[ASID]=pid                                          CP0-Hold(S0,S32)
	S34= CtrlEPCIn=0                                            Premise(F21)
	S35= CtrlExCodeIn=0                                         Premise(F22)
	S36= CtrlIMMU=0                                             Premise(F23)
	S37= CtrlPC=0                                               Premise(F24)
	S38= CtrlPCInc=0                                            Premise(F25)
	S39= PC[Out]=addr                                           PC-Hold(S1,S37,S38)
	S40= CtrlIAddrReg=1                                         Premise(F26)
	S41= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S40)
	S42= CtrlICache=0                                           Premise(F27)
	S43= CtrlIR_IMMU=1                                          Premise(F28)
	S44= CtrlICacheReg=1                                        Premise(F29)
	S45= CtrlIR_ID=0                                            Premise(F30)
	S46= CtrlIMem=0                                             Premise(F31)
	S47= IMem[{pid,addr}]={17,8,cc,0,1,offset}                  IMem-Hold(S2,S46)
	S48= CtrlIRMux=0                                            Premise(F32)
	S49= CtrlA_EX=0                                             Premise(F33)
	S50= CtrlIR_EX=0                                            Premise(F34)
	S51= CtrlALUOut_MEM=0                                       Premise(F35)
	S52= CtrlIR_MEM=0                                           Premise(F36)
	S53= CtrlCP1=0                                              Premise(F37)
	S54= CtrlConditionReg_DMMU1=0                               Premise(F38)
	S55= CtrlIR_DMMU1=0                                         Premise(F39)
	S56= CtrlIR_WB=0                                            Premise(F40)
	S57= CtrlA_MEM=0                                            Premise(F41)
	S58= CtrlA_WB=0                                             Premise(F42)
	S59= CtrlALUOut_DMMU1=0                                     Premise(F43)
	S60= CtrlALUOut_WB=0                                        Premise(F44)
	S61= CtrlConditionReg_MEM=0                                 Premise(F45)
	S62= CtrlConditionReg_WB=0                                  Premise(F46)
	S63= CtrlIR_DMMU2=0                                         Premise(F47)
	S64= CtrlALUOut_DMMU2=0                                     Premise(F48)
	S65= CtrlConditionReg_DMMU2=0                               Premise(F49)

IF(IMMU)	S66= CP0.ASID=pid                                           CP0-Read-ASID(S33)
	S67= PC.Out=addr                                            PC-Out(S39)
	S68= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S41)
	S69= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S41)
	S70= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S41)
	S71= IR_IMMU.Out=>FU.IR_IMMU                                Premise(F50)
	S72= CU_ID.IMMUHitOut=>CU_ID.IMMUHit                        Premise(F51)
	S73= CU_ID.ICacheHitOut=>CU_ID.ICacheHit                    Premise(F52)
	S74= IAddrReg.Out=>IMem.RAddr                               Premise(F53)
	S75= IMem.RAddr={pid,addr}                                  Path(S68,S74)
	S76= IMem.Out={17,8,cc,0,1,offset}                          IMem-Read(S75,S47)
	S77= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S75,S47)
	S78= IMem.Out=>IRMux.MemData                                Premise(F54)
	S79= IRMux.MemData={17,8,cc,0,1,offset}                     Path(S76,S78)
	S80= IRMux.Out={17,8,cc,0,1,offset}                         IRMux-Select2(S79)
	S81= ICacheReg.Out=>IRMux.CacheData                         Premise(F55)
	S82= CU_IMMU.IMMUHit=>IRMux.MemSel                          Premise(F56)
	S83= CU_IMMU.ICacheHit=>IRMux.CacheSel                      Premise(F57)
	S84= IRMux.Out=>IR_ID.In                                    Premise(F58)
	S85= IR_ID.In={17,8,cc,0,1,offset}                          Path(S80,S84)
	S86= IMem.MEM8WordOut=>ICache.WData                         Premise(F59)
	S87= ICache.WData=IMemGet8Word({pid,addr})                  Path(S77,S86)
	S88= PC.Out=>ICache.IEA                                     Premise(F60)
	S89= ICache.IEA=addr                                        Path(S67,S88)
	S90= ICache.Hit=ICacheHit(addr)                             ICache-Search(S89)
	S91= FU.Halt_IMMU=>CU_IMMU.Halt                             Premise(F61)
	S92= FU.Bub_IMMU=>CU_IMMU.Bub                               Premise(F62)
	S93= CtrlASIDIn=0                                           Premise(F63)
	S94= CtrlCP0=0                                              Premise(F64)
	S95= CP0[ASID]=pid                                          CP0-Hold(S33,S94)
	S96= CtrlEPCIn=0                                            Premise(F65)
	S97= CtrlExCodeIn=0                                         Premise(F66)
	S98= CtrlIMMU=0                                             Premise(F67)
	S99= CtrlPC=0                                               Premise(F68)
	S100= CtrlPCInc=1                                           Premise(F69)
	S101= PC[Out]=addr+4                                        PC-Inc(S39,S99,S100)
	S102= PC[CIA]=addr                                          PC-Inc(S39,S99,S100)
	S103= CtrlIAddrReg=0                                        Premise(F70)
	S104= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S41,S103)
	S105= CtrlICache=1                                          Premise(F71)
	S106= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S89,S87,S105)
	S107= CtrlIR_IMMU=0                                         Premise(F72)
	S108= CtrlICacheReg=0                                       Premise(F73)
	S109= CtrlIR_ID=1                                           Premise(F74)
	S110= [IR_ID]={17,8,cc,0,1,offset}                          IR_ID-Write(S85,S109)
	S111= CtrlIMem=0                                            Premise(F75)
	S112= IMem[{pid,addr}]={17,8,cc,0,1,offset}                 IMem-Hold(S47,S111)
	S113= CtrlIRMux=0                                           Premise(F76)
	S114= CtrlA_EX=0                                            Premise(F77)
	S115= CtrlIR_EX=0                                           Premise(F78)
	S116= CtrlALUOut_MEM=0                                      Premise(F79)
	S117= CtrlIR_MEM=0                                          Premise(F80)
	S118= CtrlCP1=0                                             Premise(F81)
	S119= CtrlConditionReg_DMMU1=0                              Premise(F82)
	S120= CtrlIR_DMMU1=0                                        Premise(F83)
	S121= CtrlIR_WB=0                                           Premise(F84)
	S122= CtrlA_MEM=0                                           Premise(F85)
	S123= CtrlA_WB=0                                            Premise(F86)
	S124= CtrlALUOut_DMMU1=0                                    Premise(F87)
	S125= CtrlALUOut_WB=0                                       Premise(F88)
	S126= CtrlConditionReg_MEM=0                                Premise(F89)
	S127= CtrlConditionReg_WB=0                                 Premise(F90)
	S128= CtrlIR_DMMU2=0                                        Premise(F91)
	S129= CtrlALUOut_DMMU2=0                                    Premise(F92)
	S130= CtrlConditionReg_DMMU2=0                              Premise(F93)

ID	S131= CP0.ASID=pid                                          CP0-Read-ASID(S95)
	S132= PC.Out=addr+4                                         PC-Out(S101)
	S133= PC.CIA=addr                                           PC-Out(S102)
	S134= PC.CIA31_28=addr[31:28]                               PC-Out(S102)
	S135= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S104)
	S136= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S104)
	S137= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S104)
	S138= IR_ID.Out={17,8,cc,0,1,offset}                        IR-Out(S110)
	S139= IR_ID.Out31_26=17                                     IR-Out(S110)
	S140= IR_ID.Out25_21=8                                      IR-Out(S110)
	S141= IR_ID.Out20_18=cc                                     IR-Out(S110)
	S142= IR_ID.Out17=0                                         IR-Out(S110)
	S143= IR_ID.Out16=1                                         IR-Out(S110)
	S144= IR_ID.Out15_0=offset                                  IR-Out(S110)
	S145= IR_ID.Out=>FU.IR_ID                                   Premise(F94)
	S146= FU.IR_ID={17,8,cc,0,1,offset}                         Path(S138,S145)
	S147= CU_ID.IMMUHitOut=>CU_EX.IMMUHit                       Premise(F95)
	S148= CU_ID.ICacheHitOut=>CU_EX.ICacheHit                   Premise(F96)
	S149= IR_ID.Out31_26=>CU_ID.Op                              Premise(F97)
	S150= CU_ID.Op=17                                           Path(S139,S149)
	S151= IR_ID.Out25_21=>CU_ID.IRFunc2                         Premise(F98)
	S152= CU_ID.IRFunc2=8                                       Path(S140,S151)
	S153= CU_ID.Func=alu_add                                    CU_ID(S150,S152)
	S154= IR_ID.Out15_0=>SEXT.In                                Premise(F99)
	S155= SEXT.In=offset                                        Path(S144,S154)
	S156= SEXT.Out={14{offset[15]},offset,2{0}}                 SEXT(S155)
	S157= SEXT.Out=>A_EX.In                                     Premise(F100)
	S158= A_EX.In={14{offset[15]},offset,2{0}}                  Path(S156,S157)
	S159= IR_ID.Out=>IR_EX.In                                   Premise(F101)
	S160= IR_EX.In={17,8,cc,0,1,offset}                         Path(S138,S159)
	S161= FU.Halt_ID=>CU_ID.Halt                                Premise(F102)
	S162= FU.Bub_ID=>CU_ID.Bub                                  Premise(F103)
	S163= FU.InID1_RReg=5'b00000                                Premise(F104)
	S164= FU.InID2_RReg=5'b00000                                Premise(F105)
	S165= CtrlASIDIn=0                                          Premise(F106)
	S166= CtrlCP0=0                                             Premise(F107)
	S167= CP0[ASID]=pid                                         CP0-Hold(S95,S166)
	S168= CtrlEPCIn=0                                           Premise(F108)
	S169= CtrlExCodeIn=0                                        Premise(F109)
	S170= CtrlIMMU=0                                            Premise(F110)
	S171= CtrlPC=0                                              Premise(F111)
	S172= CtrlPCInc=0                                           Premise(F112)
	S173= PC[CIA]=addr                                          PC-Hold(S102,S172)
	S174= PC[Out]=addr+4                                        PC-Hold(S101,S171,S172)
	S175= CtrlIAddrReg=0                                        Premise(F113)
	S176= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S104,S175)
	S177= CtrlICache=0                                          Premise(F114)
	S178= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S106,S177)
	S179= CtrlIR_IMMU=0                                         Premise(F115)
	S180= CtrlICacheReg=0                                       Premise(F116)
	S181= CtrlIR_ID=0                                           Premise(F117)
	S182= [IR_ID]={17,8,cc,0,1,offset}                          IR_ID-Hold(S110,S181)
	S183= CtrlIMem=0                                            Premise(F118)
	S184= IMem[{pid,addr}]={17,8,cc,0,1,offset}                 IMem-Hold(S112,S183)
	S185= CtrlIRMux=0                                           Premise(F119)
	S186= CtrlA_EX=1                                            Premise(F120)
	S187= [A_EX]={14{offset[15]},offset,2{0}}                   A_EX-Write(S158,S186)
	S188= CtrlIR_EX=1                                           Premise(F121)
	S189= [IR_EX]={17,8,cc,0,1,offset}                          IR_EX-Write(S160,S188)
	S190= CtrlALUOut_MEM=0                                      Premise(F122)
	S191= CtrlIR_MEM=0                                          Premise(F123)
	S192= CtrlCP1=0                                             Premise(F124)
	S193= CtrlConditionReg_DMMU1=0                              Premise(F125)
	S194= CtrlIR_DMMU1=0                                        Premise(F126)
	S195= CtrlIR_WB=0                                           Premise(F127)
	S196= CtrlA_MEM=0                                           Premise(F128)
	S197= CtrlA_WB=0                                            Premise(F129)
	S198= CtrlALUOut_DMMU1=0                                    Premise(F130)
	S199= CtrlALUOut_WB=0                                       Premise(F131)
	S200= CtrlConditionReg_MEM=0                                Premise(F132)
	S201= CtrlConditionReg_WB=0                                 Premise(F133)
	S202= CtrlIR_DMMU2=0                                        Premise(F134)
	S203= CtrlALUOut_DMMU2=0                                    Premise(F135)
	S204= CtrlConditionReg_DMMU2=0                              Premise(F136)

EX	S205= CP0.ASID=pid                                          CP0-Read-ASID(S167)
	S206= PC.CIA=addr                                           PC-Out(S173)
	S207= PC.CIA31_28=addr[31:28]                               PC-Out(S173)
	S208= PC.Out=addr+4                                         PC-Out(S174)
	S209= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S176)
	S210= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S176)
	S211= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S176)
	S212= IR_ID.Out={17,8,cc,0,1,offset}                        IR-Out(S182)
	S213= IR_ID.Out31_26=17                                     IR-Out(S182)
	S214= IR_ID.Out25_21=8                                      IR-Out(S182)
	S215= IR_ID.Out20_18=cc                                     IR-Out(S182)
	S216= IR_ID.Out17=0                                         IR-Out(S182)
	S217= IR_ID.Out16=1                                         IR-Out(S182)
	S218= IR_ID.Out15_0=offset                                  IR-Out(S182)
	S219= A_EX.Out={14{offset[15]},offset,2{0}}                 A_EX-Out(S187)
	S220= A_EX.Out1_0={{14{offset[15]},offset,2{0}}}[1:0]       A_EX-Out(S187)
	S221= A_EX.Out4_0={{14{offset[15]},offset,2{0}}}[4:0]       A_EX-Out(S187)
	S222= IR_EX.Out={17,8,cc,0,1,offset}                        IR_EX-Out(S189)
	S223= IR_EX.Out31_26=17                                     IR_EX-Out(S189)
	S224= IR_EX.Out25_21=8                                      IR_EX-Out(S189)
	S225= IR_EX.Out20_18=cc                                     IR_EX-Out(S189)
	S226= IR_EX.Out17=0                                         IR_EX-Out(S189)
	S227= IR_EX.Out16=1                                         IR_EX-Out(S189)
	S228= IR_EX.Out15_0=offset                                  IR_EX-Out(S189)
	S229= IR_EX.Out=>FU.IR_EX                                   Premise(F137)
	S230= FU.IR_EX={17,8,cc,0,1,offset}                         Path(S222,S229)
	S231= CU_EX.IMMUHitOut=>CU_MEM.IMMUHit                      Premise(F138)
	S232= CU_EX.ICacheHitOut=>CU_MEM.ICacheHit                  Premise(F139)
	S233= IR_EX.Out31_26=>CU_EX.Op                              Premise(F140)
	S234= CU_EX.Op=17                                           Path(S223,S233)
	S235= IR_EX.Out25_21=>CU_EX.IRFunc2                         Premise(F141)
	S236= CU_EX.IRFunc2=8                                       Path(S224,S235)
	S237= CU_EX.Func=alu_add                                    CU_EX(S234,S236)
	S238= PC.CIA=>ALU.A                                         Premise(F142)
	S239= ALU.A=addr                                            Path(S206,S238)
	S240= A_EX.Out=>ALU.B                                       Premise(F143)
	S241= ALU.B={14{offset[15]},offset,2{0}}                    Path(S219,S240)
	S242= ALU.Func=6'b010010                                    Premise(F144)
	S243= ALU.Out=addr+{14{offset[15]},offset,2{0}}             ALU(S239,S241)
	S244= ALU.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]   ALU(S239,S241)
	S245= ALU.CMP=Compare0(addr+{14{offset[15]},offset,2{0}})   ALU(S239,S241)
	S246= ALU.OV=OverFlow(addr+{14{offset[15]},offset,2{0}})    ALU(S239,S241)
	S247= ALU.CA=Carry(addr+{14{offset[15]},offset,2{0}})       ALU(S239,S241)
	S248= ALU.Out=>ALUOut_MEM.In                                Premise(F145)
	S249= ALUOut_MEM.In=addr+{14{offset[15]},offset,2{0}}       Path(S243,S248)
	S250= IR_EX.Out=>IR_MEM.In                                  Premise(F146)
	S251= IR_MEM.In={17,8,cc,0,1,offset}                        Path(S222,S250)
	S252= FU.InEX_WReg=5'b00000                                 Premise(F147)
	S253= CtrlASIDIn=0                                          Premise(F148)
	S254= CtrlCP0=0                                             Premise(F149)
	S255= CP0[ASID]=pid                                         CP0-Hold(S167,S254)
	S256= CtrlEPCIn=0                                           Premise(F150)
	S257= CtrlExCodeIn=0                                        Premise(F151)
	S258= CtrlIMMU=0                                            Premise(F152)
	S259= CtrlPC=0                                              Premise(F153)
	S260= CtrlPCInc=0                                           Premise(F154)
	S261= PC[CIA]=addr                                          PC-Hold(S173,S260)
	S262= PC[Out]=addr+4                                        PC-Hold(S174,S259,S260)
	S263= CtrlIAddrReg=0                                        Premise(F155)
	S264= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S176,S263)
	S265= CtrlICache=0                                          Premise(F156)
	S266= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S178,S265)
	S267= CtrlIR_IMMU=0                                         Premise(F157)
	S268= CtrlICacheReg=0                                       Premise(F158)
	S269= CtrlIR_ID=0                                           Premise(F159)
	S270= [IR_ID]={17,8,cc,0,1,offset}                          IR_ID-Hold(S182,S269)
	S271= CtrlIMem=0                                            Premise(F160)
	S272= IMem[{pid,addr}]={17,8,cc,0,1,offset}                 IMem-Hold(S184,S271)
	S273= CtrlIRMux=0                                           Premise(F161)
	S274= CtrlA_EX=0                                            Premise(F162)
	S275= [A_EX]={14{offset[15]},offset,2{0}}                   A_EX-Hold(S187,S274)
	S276= CtrlIR_EX=0                                           Premise(F163)
	S277= [IR_EX]={17,8,cc,0,1,offset}                          IR_EX-Hold(S189,S276)
	S278= CtrlALUOut_MEM=1                                      Premise(F164)
	S279= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Write(S249,S278)
	S280= CtrlIR_MEM=1                                          Premise(F165)
	S281= [IR_MEM]={17,8,cc,0,1,offset}                         IR_MEM-Write(S251,S280)
	S282= CtrlCP1=0                                             Premise(F166)
	S283= CtrlConditionReg_DMMU1=0                              Premise(F167)
	S284= CtrlIR_DMMU1=0                                        Premise(F168)
	S285= CtrlIR_WB=0                                           Premise(F169)
	S286= CtrlA_MEM=0                                           Premise(F170)
	S287= CtrlA_WB=0                                            Premise(F171)
	S288= CtrlALUOut_DMMU1=0                                    Premise(F172)
	S289= CtrlALUOut_WB=0                                       Premise(F173)
	S290= CtrlConditionReg_MEM=0                                Premise(F174)
	S291= CtrlConditionReg_WB=0                                 Premise(F175)
	S292= CtrlIR_DMMU2=0                                        Premise(F176)
	S293= CtrlALUOut_DMMU2=0                                    Premise(F177)
	S294= CtrlConditionReg_DMMU2=0                              Premise(F178)

MEM	S295= CP0.ASID=pid                                          CP0-Read-ASID(S255)
	S296= PC.CIA=addr                                           PC-Out(S261)
	S297= PC.CIA31_28=addr[31:28]                               PC-Out(S261)
	S298= PC.Out=addr+4                                         PC-Out(S262)
	S299= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S264)
	S300= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S264)
	S301= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S264)
	S302= IR_ID.Out={17,8,cc,0,1,offset}                        IR-Out(S270)
	S303= IR_ID.Out31_26=17                                     IR-Out(S270)
	S304= IR_ID.Out25_21=8                                      IR-Out(S270)
	S305= IR_ID.Out20_18=cc                                     IR-Out(S270)
	S306= IR_ID.Out17=0                                         IR-Out(S270)
	S307= IR_ID.Out16=1                                         IR-Out(S270)
	S308= IR_ID.Out15_0=offset                                  IR-Out(S270)
	S309= A_EX.Out={14{offset[15]},offset,2{0}}                 A_EX-Out(S275)
	S310= A_EX.Out1_0={{14{offset[15]},offset,2{0}}}[1:0]       A_EX-Out(S275)
	S311= A_EX.Out4_0={{14{offset[15]},offset,2{0}}}[4:0]       A_EX-Out(S275)
	S312= IR_EX.Out={17,8,cc,0,1,offset}                        IR_EX-Out(S277)
	S313= IR_EX.Out31_26=17                                     IR_EX-Out(S277)
	S314= IR_EX.Out25_21=8                                      IR_EX-Out(S277)
	S315= IR_EX.Out20_18=cc                                     IR_EX-Out(S277)
	S316= IR_EX.Out17=0                                         IR_EX-Out(S277)
	S317= IR_EX.Out16=1                                         IR_EX-Out(S277)
	S318= IR_EX.Out15_0=offset                                  IR_EX-Out(S277)
	S319= ALUOut_MEM.Out=addr+{14{offset[15]},offset,2{0}}      ALUOut_MEM-Out(S279)
	S320= ALUOut_MEM.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut_MEM-Out(S279)
	S321= ALUOut_MEM.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut_MEM-Out(S279)
	S322= IR_MEM.Out={17,8,cc,0,1,offset}                       IR_MEM-Out(S281)
	S323= IR_MEM.Out31_26=17                                    IR_MEM-Out(S281)
	S324= IR_MEM.Out25_21=8                                     IR_MEM-Out(S281)
	S325= IR_MEM.Out20_18=cc                                    IR_MEM-Out(S281)
	S326= IR_MEM.Out17=0                                        IR_MEM-Out(S281)
	S327= IR_MEM.Out16=1                                        IR_MEM-Out(S281)
	S328= IR_MEM.Out15_0=offset                                 IR_MEM-Out(S281)
	S329= IR_MEM.Out=>FU.IR_MEM                                 Premise(F179)
	S330= FU.IR_MEM={17,8,cc,0,1,offset}                        Path(S322,S329)
	S331= CU_MEM.IMMUHitOut=>CU_DMMU1.IMMUHit                   Premise(F180)
	S332= CU_MEM.ICacheHitOut=>CU_DMMU1.ICacheHit               Premise(F181)
	S333= CU_MEM.DMMUHitOut=>CU_DMMU1.DMMUHit                   Premise(F182)
	S334= CU_MEM.DCacheHitOut=>CU_DMMU1.DCacheHit               Premise(F183)
	S335= IR_MEM.Out31_26=>CU_MEM.Op                            Premise(F184)
	S336= CU_MEM.Op=17                                          Path(S323,S335)
	S337= IR_MEM.Out25_21=>CU_MEM.IRFunc2                       Premise(F185)
	S338= CU_MEM.IRFunc2=8                                      Path(S324,S337)
	S339= CU_MEM.Func=alu_add                                   CU_MEM(S336,S338)
	S340= IR_MEM.Out20_18=>CP1.cc                               Premise(F186)
	S341= CP1.cc=cc                                             Path(S325,S340)
	S342= IR_MEM.Out16=>CP1.tf                                  Premise(F187)
	S343= CP1.tf=1                                              Path(S327,S342)
	S344= CP1.fp=FPConditionCode(cc,1)                          FP-PRODUCT(S341,S343)
	S345= CP1.fp=>ConditionReg_DMMU1.In                         Premise(F188)
	S346= ConditionReg_DMMU1.In=FPConditionCode(cc,1)           Path(S344,S345)
	S347= IR_MEM.Out=>IR_DMMU1.In                               Premise(F189)
	S348= IR_DMMU1.In={17,8,cc,0,1,offset}                      Path(S322,S347)
	S349= IR_MEM.Out=>IR_WB.In                                  Premise(F190)
	S350= IR_WB.In={17,8,cc,0,1,offset}                         Path(S322,S349)
	S351= A_MEM.Out=>A_WB.In                                    Premise(F191)
	S352= ALUOut_MEM.Out=>ALUOut_DMMU1.In                       Premise(F192)
	S353= ALUOut_DMMU1.In=addr+{14{offset[15]},offset,2{0}}     Path(S319,S352)
	S354= ALUOut_MEM.Out=>ALUOut_WB.In                          Premise(F193)
	S355= ALUOut_WB.In=addr+{14{offset[15]},offset,2{0}}        Path(S319,S354)
	S356= ConditionReg_MEM.Out=>ConditionReg_WB.In              Premise(F194)
	S357= CU_MEM.IMMUHitOut=>CU_WB.IMMUHit                      Premise(F195)
	S358= CU_MEM.ICacheHitOut=>CU_WB.ICacheHit                  Premise(F196)
	S359= FU.InMEM_WReg=5'b00000                                Premise(F197)
	S360= CtrlASIDIn=0                                          Premise(F198)
	S361= CtrlCP0=0                                             Premise(F199)
	S362= CP0[ASID]=pid                                         CP0-Hold(S255,S361)
	S363= CtrlEPCIn=0                                           Premise(F200)
	S364= CtrlExCodeIn=0                                        Premise(F201)
	S365= CtrlIMMU=0                                            Premise(F202)
	S366= CtrlPC=0                                              Premise(F203)
	S367= CtrlPCInc=0                                           Premise(F204)
	S368= PC[CIA]=addr                                          PC-Hold(S261,S367)
	S369= PC[Out]=addr+4                                        PC-Hold(S262,S366,S367)
	S370= CtrlIAddrReg=0                                        Premise(F205)
	S371= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S264,S370)
	S372= CtrlICache=0                                          Premise(F206)
	S373= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S266,S372)
	S374= CtrlIR_IMMU=0                                         Premise(F207)
	S375= CtrlICacheReg=0                                       Premise(F208)
	S376= CtrlIR_ID=0                                           Premise(F209)
	S377= [IR_ID]={17,8,cc,0,1,offset}                          IR_ID-Hold(S270,S376)
	S378= CtrlIMem=0                                            Premise(F210)
	S379= IMem[{pid,addr}]={17,8,cc,0,1,offset}                 IMem-Hold(S272,S378)
	S380= CtrlIRMux=0                                           Premise(F211)
	S381= CtrlA_EX=0                                            Premise(F212)
	S382= [A_EX]={14{offset[15]},offset,2{0}}                   A_EX-Hold(S275,S381)
	S383= CtrlIR_EX=0                                           Premise(F213)
	S384= [IR_EX]={17,8,cc,0,1,offset}                          IR_EX-Hold(S277,S383)
	S385= CtrlALUOut_MEM=0                                      Premise(F214)
	S386= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Hold(S279,S385)
	S387= CtrlIR_MEM=0                                          Premise(F215)
	S388= [IR_MEM]={17,8,cc,0,1,offset}                         IR_MEM-Hold(S281,S387)
	S389= CtrlCP1=0                                             Premise(F216)
	S390= CtrlConditionReg_DMMU1=1                              Premise(F217)
	S391= [ConditionReg_DMMU1]=FPConditionCode(cc,1)            ConditionReg_DMMU1-Write(S346,S390)
	S392= CtrlIR_DMMU1=1                                        Premise(F218)
	S393= [IR_DMMU1]={17,8,cc,0,1,offset}                       IR_DMMU1-Write(S348,S392)
	S394= CtrlIR_WB=1                                           Premise(F219)
	S395= [IR_WB]={17,8,cc,0,1,offset}                          IR_WB-Write(S350,S394)
	S396= CtrlA_MEM=0                                           Premise(F220)
	S397= CtrlA_WB=1                                            Premise(F221)
	S398= CtrlALUOut_DMMU1=1                                    Premise(F222)
	S399= [ALUOut_DMMU1]=addr+{14{offset[15]},offset,2{0}}      ALUOut_DMMU1-Write(S353,S398)
	S400= CtrlALUOut_WB=1                                       Premise(F223)
	S401= [ALUOut_WB]=addr+{14{offset[15]},offset,2{0}}         ALUOut_WB-Write(S355,S400)
	S402= CtrlConditionReg_MEM=0                                Premise(F224)
	S403= CtrlConditionReg_WB=1                                 Premise(F225)
	S404= CtrlIR_DMMU2=0                                        Premise(F226)
	S405= CtrlALUOut_DMMU2=0                                    Premise(F227)
	S406= CtrlConditionReg_DMMU2=0                              Premise(F228)

WB	S407= CP0.ASID=pid                                          CP0-Read-ASID(S362)
	S408= PC.CIA=addr                                           PC-Out(S368)
	S409= PC.CIA31_28=addr[31:28]                               PC-Out(S368)
	S410= PC.Out=addr+4                                         PC-Out(S369)
	S411= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S371)
	S412= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S371)
	S413= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S371)
	S414= IR_ID.Out={17,8,cc,0,1,offset}                        IR-Out(S377)
	S415= IR_ID.Out31_26=17                                     IR-Out(S377)
	S416= IR_ID.Out25_21=8                                      IR-Out(S377)
	S417= IR_ID.Out20_18=cc                                     IR-Out(S377)
	S418= IR_ID.Out17=0                                         IR-Out(S377)
	S419= IR_ID.Out16=1                                         IR-Out(S377)
	S420= IR_ID.Out15_0=offset                                  IR-Out(S377)
	S421= A_EX.Out={14{offset[15]},offset,2{0}}                 A_EX-Out(S382)
	S422= A_EX.Out1_0={{14{offset[15]},offset,2{0}}}[1:0]       A_EX-Out(S382)
	S423= A_EX.Out4_0={{14{offset[15]},offset,2{0}}}[4:0]       A_EX-Out(S382)
	S424= IR_EX.Out={17,8,cc,0,1,offset}                        IR_EX-Out(S384)
	S425= IR_EX.Out31_26=17                                     IR_EX-Out(S384)
	S426= IR_EX.Out25_21=8                                      IR_EX-Out(S384)
	S427= IR_EX.Out20_18=cc                                     IR_EX-Out(S384)
	S428= IR_EX.Out17=0                                         IR_EX-Out(S384)
	S429= IR_EX.Out16=1                                         IR_EX-Out(S384)
	S430= IR_EX.Out15_0=offset                                  IR_EX-Out(S384)
	S431= ALUOut_MEM.Out=addr+{14{offset[15]},offset,2{0}}      ALUOut_MEM-Out(S386)
	S432= ALUOut_MEM.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut_MEM-Out(S386)
	S433= ALUOut_MEM.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut_MEM-Out(S386)
	S434= IR_MEM.Out={17,8,cc,0,1,offset}                       IR_MEM-Out(S388)
	S435= IR_MEM.Out31_26=17                                    IR_MEM-Out(S388)
	S436= IR_MEM.Out25_21=8                                     IR_MEM-Out(S388)
	S437= IR_MEM.Out20_18=cc                                    IR_MEM-Out(S388)
	S438= IR_MEM.Out17=0                                        IR_MEM-Out(S388)
	S439= IR_MEM.Out16=1                                        IR_MEM-Out(S388)
	S440= IR_MEM.Out15_0=offset                                 IR_MEM-Out(S388)
	S441= ConditionReg_DMMU1.Out=FPConditionCode(cc,1)          ConditionReg_DMMU1-Out(S391)
	S442= ConditionReg_DMMU1.Out1_0={FPConditionCode(cc,1)}[1:0]ConditionReg_DMMU1-Out(S391)
	S443= ConditionReg_DMMU1.Out4_0={FPConditionCode(cc,1)}[4:0]ConditionReg_DMMU1-Out(S391)
	S444= IR_DMMU1.Out={17,8,cc,0,1,offset}                     IR_DMMU1-Out(S393)
	S445= IR_DMMU1.Out31_26=17                                  IR_DMMU1-Out(S393)
	S446= IR_DMMU1.Out25_21=8                                   IR_DMMU1-Out(S393)
	S447= IR_DMMU1.Out20_18=cc                                  IR_DMMU1-Out(S393)
	S448= IR_DMMU1.Out17=0                                      IR_DMMU1-Out(S393)
	S449= IR_DMMU1.Out16=1                                      IR_DMMU1-Out(S393)
	S450= IR_DMMU1.Out15_0=offset                               IR_DMMU1-Out(S393)
	S451= IR_WB.Out={17,8,cc,0,1,offset}                        IR-Out(S395)
	S452= IR_WB.Out31_26=17                                     IR-Out(S395)
	S453= IR_WB.Out25_21=8                                      IR-Out(S395)
	S454= IR_WB.Out20_18=cc                                     IR-Out(S395)
	S455= IR_WB.Out17=0                                         IR-Out(S395)
	S456= IR_WB.Out16=1                                         IR-Out(S395)
	S457= IR_WB.Out15_0=offset                                  IR-Out(S395)
	S458= ALUOut_DMMU1.Out=addr+{14{offset[15]},offset,2{0}}    ALUOut_DMMU1-Out(S399)
	S459= ALUOut_DMMU1.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut_DMMU1-Out(S399)
	S460= ALUOut_DMMU1.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut_DMMU1-Out(S399)
	S461= ALUOut_WB.Out=addr+{14{offset[15]},offset,2{0}}       ALUOut_WB-Out(S401)
	S462= ALUOut_WB.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut_WB-Out(S401)
	S463= ALUOut_WB.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut_WB-Out(S401)
	S464= IR_WB.Out=>FU.IR_WB                                   Premise(F312)
	S465= FU.IR_WB={17,8,cc,0,1,offset}                         Path(S451,S464)
	S466= IR_WB.Out31_26=>CU_WB.Op                              Premise(F313)
	S467= CU_WB.Op=17                                           Path(S452,S466)
	S468= IR_WB.Out25_21=>CU_WB.IRFunc2                         Premise(F314)
	S469= CU_WB.IRFunc2=8                                       Path(S453,S468)
	S470= CU_WB.Func=alu_add                                    CU_WB(S467,S469)
	S471= ALUOut_WB.Out=>PC.In                                  Premise(F315)
	S472= PC.In=addr+{14{offset[15]},offset,2{0}}               Path(S461,S471)
	S473= ConditionReg_WB.Out=>CU_WB.fp                         Premise(F316)
	S474= FU.InWB_WReg=5'b00000                                 Premise(F317)
	S475= CtrlASIDIn=0                                          Premise(F318)
	S476= CtrlCP0=0                                             Premise(F319)
	S477= CP0[ASID]=pid                                         CP0-Hold(S362,S476)
	S478= CtrlEPCIn=0                                           Premise(F320)
	S479= CtrlExCodeIn=0                                        Premise(F321)
	S480= CtrlIMMU=0                                            Premise(F322)
	S481= CtrlPC=1                                              Premise(F323)
	S482= CtrlPCInc=0                                           Premise(F324)
	S483= PC[CIA]=addr                                          PC-Hold(S368,S482)
	S484= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Write(S472,S481,S482)
	S485= CtrlIAddrReg=0                                        Premise(F325)
	S486= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S371,S485)
	S487= CtrlICache=0                                          Premise(F326)
	S488= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S373,S487)
	S489= CtrlIR_IMMU=0                                         Premise(F327)
	S490= CtrlICacheReg=0                                       Premise(F328)
	S491= CtrlIR_ID=0                                           Premise(F329)
	S492= [IR_ID]={17,8,cc,0,1,offset}                          IR_ID-Hold(S377,S491)
	S493= CtrlIMem=0                                            Premise(F330)
	S494= IMem[{pid,addr}]={17,8,cc,0,1,offset}                 IMem-Hold(S379,S493)
	S495= CtrlIRMux=0                                           Premise(F331)
	S496= CtrlA_EX=0                                            Premise(F332)
	S497= [A_EX]={14{offset[15]},offset,2{0}}                   A_EX-Hold(S382,S496)
	S498= CtrlIR_EX=0                                           Premise(F333)
	S499= [IR_EX]={17,8,cc,0,1,offset}                          IR_EX-Hold(S384,S498)
	S500= CtrlALUOut_MEM=0                                      Premise(F334)
	S501= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Hold(S386,S500)
	S502= CtrlIR_MEM=0                                          Premise(F335)
	S503= [IR_MEM]={17,8,cc,0,1,offset}                         IR_MEM-Hold(S388,S502)
	S504= CtrlCP1=0                                             Premise(F336)
	S505= CtrlConditionReg_DMMU1=0                              Premise(F337)
	S506= [ConditionReg_DMMU1]=FPConditionCode(cc,1)            ConditionReg_DMMU1-Hold(S391,S505)
	S507= CtrlIR_DMMU1=0                                        Premise(F338)
	S508= [IR_DMMU1]={17,8,cc,0,1,offset}                       IR_DMMU1-Hold(S393,S507)
	S509= CtrlIR_WB=0                                           Premise(F339)
	S510= [IR_WB]={17,8,cc,0,1,offset}                          IR_WB-Hold(S395,S509)
	S511= CtrlA_MEM=0                                           Premise(F340)
	S512= CtrlA_WB=0                                            Premise(F341)
	S513= CtrlALUOut_DMMU1=0                                    Premise(F342)
	S514= [ALUOut_DMMU1]=addr+{14{offset[15]},offset,2{0}}      ALUOut_DMMU1-Hold(S399,S513)
	S515= CtrlALUOut_WB=0                                       Premise(F343)
	S516= [ALUOut_WB]=addr+{14{offset[15]},offset,2{0}}         ALUOut_WB-Hold(S401,S515)
	S517= CtrlConditionReg_MEM=0                                Premise(F344)
	S518= CtrlConditionReg_WB=0                                 Premise(F345)
	S519= CtrlIR_DMMU2=0                                        Premise(F346)
	S520= CtrlALUOut_DMMU2=0                                    Premise(F347)
	S521= CtrlConditionReg_DMMU2=0                              Premise(F348)

POST	S477= CP0[ASID]=pid                                         CP0-Hold(S362,S476)
	S483= PC[CIA]=addr                                          PC-Hold(S368,S482)
	S484= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Write(S472,S481,S482)
	S486= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S371,S485)
	S488= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S373,S487)
	S492= [IR_ID]={17,8,cc,0,1,offset}                          IR_ID-Hold(S377,S491)
	S494= IMem[{pid,addr}]={17,8,cc,0,1,offset}                 IMem-Hold(S379,S493)
	S497= [A_EX]={14{offset[15]},offset,2{0}}                   A_EX-Hold(S382,S496)
	S499= [IR_EX]={17,8,cc,0,1,offset}                          IR_EX-Hold(S384,S498)
	S501= [ALUOut_MEM]=addr+{14{offset[15]},offset,2{0}}        ALUOut_MEM-Hold(S386,S500)
	S503= [IR_MEM]={17,8,cc,0,1,offset}                         IR_MEM-Hold(S388,S502)
	S506= [ConditionReg_DMMU1]=FPConditionCode(cc,1)            ConditionReg_DMMU1-Hold(S391,S505)
	S508= [IR_DMMU1]={17,8,cc,0,1,offset}                       IR_DMMU1-Hold(S393,S507)
	S510= [IR_WB]={17,8,cc,0,1,offset}                          IR_WB-Hold(S395,S509)
	S514= [ALUOut_DMMU1]=addr+{14{offset[15]},offset,2{0}}      ALUOut_DMMU1-Hold(S399,S513)
	S516= [ALUOut_WB]=addr+{14{offset[15]},offset,2{0}}         ALUOut_WB-Hold(S401,S515)

