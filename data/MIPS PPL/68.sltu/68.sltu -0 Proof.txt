
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,rT,rD,0,43}                      Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)
	S4= GPR[rT]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= PC.Out=>IMem.RAddr                                      Premise(F5)
	S8= IMem.RAddr=addr                                         Path(S6,S7)
	S9= CP0.ASID=>IMem.ASID                                     Premise(F6)
	S10= IMem.ASID=pid                                          Path(S5,S9)
	S11= IMem.Out={0,rS,rT,rD,0,43}                             IMem-Read(S10,S8,S2)
	S12= IMem.Out=>IR_ID.In                                     Premise(F8)
	S13= IR_ID.In={0,rS,rT,rD,0,43}                             Path(S11,S12)
	S14= CtrlPC=0                                               Premise(F48)
	S15= CtrlPCInc=1                                            Premise(F49)
	S16= PC[Out]=addr+4                                         PC-Inc(S1,S14,S15)
	S17= CtrlIR_ID=1                                            Premise(F55)
	S18= [IR_ID]={0,rS,rT,rD,0,43}                              IR_ID-Write(S13,S17)
	S19= CtrlGPR=0                                              Premise(F56)
	S20= GPR[rS]=a                                              GPR-Hold(S3,S19)
	S21= GPR[rT]=b                                              GPR-Hold(S4,S19)

ID	S22= IR_ID.Out={0,rS,rT,rD,0,43}                            IR-Out(S18)
	S23= IR_ID.Out25_21=rS                                      IR-Out(S18)
	S24= IR_ID.Out20_16=rT                                      IR-Out(S18)
	S25= IR_ID.Out25_21=>GPR.RReg1                              Premise(F72)
	S26= GPR.RReg1=rS                                           Path(S23,S25)
	S27= GPR.Rdata1=a                                           GPR-Read(S26,S20)
	S28= IR_ID.Out20_16=>GPR.RReg2                              Premise(F73)
	S29= GPR.RReg2=rT                                           Path(S24,S28)
	S30= GPR.Rdata2=b                                           GPR-Read(S29,S21)
	S31= GPR.Rdata1=>FU.InID1                                   Premise(F75)
	S32= FU.InID1=a                                             Path(S27,S31)
	S33= FU.OutID1=FU(a)                                        FU-Forward(S32)
	S34= FU.OutID1=>A_EX.In                                     Premise(F77)
	S35= A_EX.In=FU(a)                                          Path(S33,S34)
	S36= GPR.Rdata2=>FU.InID2                                   Premise(F78)
	S37= FU.InID2=b                                             Path(S30,S36)
	S38= FU.OutID2=FU(b)                                        FU-Forward(S37)
	S39= FU.OutID2=>B_EX.In                                     Premise(F80)
	S40= B_EX.In=FU(b)                                          Path(S38,S39)
	S41= IR_ID.Out=>IR_EX.In                                    Premise(F81)
	S42= IR_EX.In={0,rS,rT,rD,0,43}                             Path(S22,S41)
	S43= CtrlPC=0                                               Premise(F107)
	S44= CtrlPCInc=0                                            Premise(F108)
	S45= PC[Out]=addr+4                                         PC-Hold(S16,S43,S44)
	S46= CtrlA_EX=1                                             Premise(F116)
	S47= [A_EX]=FU(a)                                           A_EX-Write(S35,S46)
	S48= CtrlB_EX=1                                             Premise(F117)
	S49= [B_EX]=FU(b)                                           B_EX-Write(S40,S48)
	S50= CtrlIR_EX=1                                            Premise(F118)
	S51= [IR_EX]={0,rS,rT,rD,0,43}                              IR_EX-Write(S42,S50)

EX	S52= A_EX.Out=FU(a)                                         A_EX-Out(S47)
	S53= B_EX.Out=FU(b)                                         B_EX-Out(S49)
	S54= IR_EX.Out={0,rS,rT,rD,0,43}                            IR_EX-Out(S51)
	S55= A_EX.Out=>ALU.A                                        Premise(F146)
	S56= ALU.A=FU(a)                                            Path(S52,S55)
	S57= B_EX.Out=>ALU.B                                        Premise(F147)
	S58= ALU.B=FU(b)                                            Path(S53,S57)
	S59= ALU.Out={31{0},(FU(a)<uFU(b))}                         ALU(S56,S58)
	S60= ALU.Out=>ALUOut_MEM.In                                 Premise(F149)
	S61= ALUOut_MEM.In={31{0},(FU(a)<uFU(b))}                   Path(S59,S60)
	S62= IR_EX.Out=>IR_MEM.In                                   Premise(F152)
	S63= IR_MEM.In={0,rS,rT,rD,0,43}                            Path(S54,S62)
	S64= CtrlPC=0                                               Premise(F167)
	S65= CtrlPCInc=0                                            Premise(F168)
	S66= PC[Out]=addr+4                                         PC-Hold(S45,S64,S65)
	S67= CtrlALUOut_MEM=1                                       Premise(F179)
	S68= [ALUOut_MEM]={31{0},(FU(a)<uFU(b))}                    ALUOut_MEM-Write(S61,S67)
	S69= CtrlIR_MEM=1                                           Premise(F180)
	S70= [IR_MEM]={0,rS,rT,rD,0,43}                             IR_MEM-Write(S63,S69)

MEM	S71= ALUOut_MEM.Out={31{0},(FU(a)<uFU(b))}                  ALUOut_MEM-Out(S68)
	S72= IR_MEM.Out={0,rS,rT,rD,0,43}                           IR_MEM-Out(S70)
	S73= IR_MEM.Out=>IR_WB.In                                   Premise(F215)
	S74= IR_WB.In={0,rS,rT,rD,0,43}                             Path(S72,S73)
	S75= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F216)
	S76= ALUOut_WB.In={31{0},(FU(a)<uFU(b))}                    Path(S71,S75)
	S77= CtrlPC=0                                               Premise(F226)
	S78= CtrlPCInc=0                                            Premise(F227)
	S79= PC[Out]=addr+4                                         PC-Hold(S66,S77,S78)
	S80= CtrlIR_WB=1                                            Premise(F240)
	S81= [IR_WB]={0,rS,rT,rD,0,43}                              IR_WB-Write(S74,S80)
	S82= CtrlALUOut_WB=1                                        Premise(F241)
	S83= [ALUOut_WB]={31{0},(FU(a)<uFU(b))}                     ALUOut_WB-Write(S76,S82)

WB	S84= IR_WB.Out15_11=rD                                      IR-Out(S81)
	S85= ALUOut_WB.Out={31{0},(FU(a)<uFU(b))}                   ALUOut_WB-Out(S83)
	S86= IR_WB.Out15_11=>GPR.WReg                               Premise(F281)
	S87= GPR.WReg=rD                                            Path(S84,S86)
	S88= ALUOut_WB.Out=>GPR.WData                               Premise(F282)
	S89= GPR.WData={31{0},(FU(a)<uFU(b))}                       Path(S85,S88)
	S90= CtrlPC=0                                               Premise(F285)
	S91= CtrlPCInc=0                                            Premise(F286)
	S92= PC[Out]=addr+4                                         PC-Hold(S79,S90,S91)
	S93= CtrlGPR=1                                              Premise(F293)
	S94= GPR[rD]={31{0},(FU(a)<uFU(b))}                         GPR-Write(S87,S89,S93)

POST	S92= PC[Out]=addr+4                                         PC-Hold(S79,S90,S91)
	S94= GPR[rD]={31{0},(FU(a)<uFU(b))}                         GPR-Write(S87,S89,S93)

