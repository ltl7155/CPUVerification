
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={13,rT,rA,SIMM}                        Premise(F2)
	S3= ICache[addr]={13,rT,rA,SIMM}                            Premise(F3)
	S4= GPRegs[rA]=a                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S8= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S9= PC.Out=addr                                             PC-Out(S1)
	S10= XER.SOOut=so                                           XER-SO-Out(S5)
	S11= PIDReg.Out=>IMMU.PID                                   Premise(F6)
	S12= IMMU.PID=pid                                           Path(S6,S11)
	S13= PC.Out=>IMMU.IEA                                       Premise(F7)
	S14= IMMU.IEA=addr                                          Path(S9,S13)
	S15= IMMU.Addr={pid,addr}                                   IMMU-Search(S12,S14)
	S16= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S12,S14)
	S17= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S18= IAddrReg.In={pid,addr}                                 Path(S15,S17)
	S19= IMMU.Hit=>IMMUHitReg.In                                Premise(F9)
	S20= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S16,S19)
	S21= PC.Out=>ICache.IEA                                     Premise(F10)
	S22= ICache.IEA=addr                                        Path(S9,S21)
	S23= ICache.Hit=ICacheHit(addr)                             ICache-Search(S22)
	S24= ICache.Out={13,rT,rA,SIMM}                             ICache-Search(S22,S3)
	S25= ICache.Out=>ICacheReg.In                               Premise(F11)
	S26= ICacheReg.In={13,rT,rA,SIMM}                           Path(S24,S25)
	S27= ICache.Hit=>ICacheHitReg.In                            Premise(F12)
	S28= ICacheHitReg.In=ICacheHit(addr)                        Path(S23,S27)
	S29= IMMUHitReg.Out=>CU.IMemHit                             Premise(F13)
	S30= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F14)
	S31= IAddrReg.Out=>IMem.RAddr                               Premise(F15)
	S32= IMem.Out=>IRMux.MemData                                Premise(F16)
	S33= ICacheReg.Out=>IRMux.CacheData                         Premise(F17)
	S34= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F18)
	S35= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F19)
	S36= IRMux.Out=>IR.In                                       Premise(F20)
	S37= IMem.MEM8WordOut=>ICache.WData                         Premise(F21)
	S38= PC.Out=>ICache.IEA                                     Premise(F22)
	S39= IR.Out0_5=>CU.Op                                       Premise(F23)
	S40= IR.Out11_15=>GPRegs.RReg1                              Premise(F24)
	S41= IR.Out16_31=>IMMEXT.In                                 Premise(F25)
	S42= GPRegs.Rdata1=>A.In                                    Premise(F26)
	S43= IMMEXT.Out=>B.In                                       Premise(F27)
	S44= A.Out=>ALU.A                                           Premise(F28)
	S45= B.Out=>ALU.B                                           Premise(F29)
	S46= CU.Func=>ALU.Func                                      Premise(F30)
	S47= ALU.Out=>ALUOut.In                                     Premise(F31)
	S48= ALU.CMP=>DataCmb.A                                     Premise(F32)
	S49= XER.SOOut=>DataCmb.B                                   Premise(F33)
	S50= DataCmb.B=so                                           Path(S10,S49)
	S51= DataCmb.Out=>DR4bit.In                                 Premise(F34)
	S52= ALU.CA=>CAReg.In                                       Premise(F35)
	S53= IR.Out6_10=>GPRegs.WReg                                Premise(F36)
	S54= ALUOut.Out=>GPRegs.WData                               Premise(F37)
	S55= DR4bit.Out=>CRRegs.CR0In                               Premise(F38)
	S56= CAReg.Out=>XER.CAIn                                    Premise(F39)
	S57= CtrlPIDReg=0                                           Premise(F40)
	S58= [PIDReg]=pid                                           PIDReg-Hold(S0,S57)
	S59= CtrlIMMU=0                                             Premise(F41)
	S60= CtrlPC=0                                               Premise(F42)
	S61= CtrlPCInc=0                                            Premise(F43)
	S62= PC[Out]=addr                                           PC-Hold(S1,S60,S61)
	S63= CtrlIAddrReg=1                                         Premise(F44)
	S64= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S18,S63)
	S65= CtrlIMMUHitReg=1                                       Premise(F45)
	S66= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S20,S65)
	S67= CtrlICache=0                                           Premise(F46)
	S68= ICache[addr]={13,rT,rA,SIMM}                           ICache-Hold(S3,S67)
	S69= CtrlICacheReg=1                                        Premise(F47)
	S70= [ICacheReg]={13,rT,rA,SIMM}                            ICacheReg-Write(S26,S69)
	S71= CtrlICacheHitReg=1                                     Premise(F48)
	S72= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S28,S71)
	S73= CtrlIMem=0                                             Premise(F49)
	S74= IMem[{pid,addr}]={13,rT,rA,SIMM}                       IMem-Hold(S2,S73)
	S75= CtrlIRMux=0                                            Premise(F50)
	S76= CtrlIR=0                                               Premise(F51)
	S77= CtrlGPRegs=0                                           Premise(F52)
	S78= GPRegs[rA]=a                                           GPRegs-Hold(S4,S77)
	S79= CtrlA=0                                                Premise(F53)
	S80= CtrlB=0                                                Premise(F54)
	S81= CtrlALUOut=0                                           Premise(F55)
	S82= CtrlXERSO=0                                            Premise(F56)
	S83= XER[SO]=so                                             XER-SO-Hold(S5,S82)
	S84= CtrlXEROV=0                                            Premise(F57)
	S85= CtrlXERCA=0                                            Premise(F58)
	S86= CtrlDR4bit=0                                           Premise(F59)
	S87= CtrlCAReg=0                                            Premise(F60)
	S88= CtrlCRRegs=0                                           Premise(F61)
	S89= CtrlCRRegsCR0=0                                        Premise(F62)
	S90= CtrlCRRegsW4bitRegs=0                                  Premise(F63)
	S91= CtrlCRRegsW1bitRegs=0                                  Premise(F64)

IMMU	S92= PIDReg.Out=pid                                         PIDReg-Out(S58)
	S93= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S58)
	S94= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S58)
	S95= PC.Out=addr                                            PC-Out(S62)
	S96= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S64)
	S97= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S64)
	S98= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S64)
	S99= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S66)
	S100= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S66)
	S101= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S66)
	S102= ICacheReg.Out={13,rT,rA,SIMM}                         ICacheReg-Out(S70)
	S103= ICacheReg.Out26_31={13,rT,rA,SIMM}[26:31]             ICacheReg-Out(S70)
	S104= ICacheReg.Out30_31={13,rT,rA,SIMM}[30:31]             ICacheReg-Out(S70)
	S105= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S72)
	S106= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S72)
	S107= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S72)
	S108= XER.SOOut=so                                          XER-SO-Out(S83)
	S109= PIDReg.Out=>IMMU.PID                                  Premise(F65)
	S110= IMMU.PID=pid                                          Path(S92,S109)
	S111= PC.Out=>IMMU.IEA                                      Premise(F66)
	S112= IMMU.IEA=addr                                         Path(S95,S111)
	S113= IMMU.Addr={pid,addr}                                  IMMU-Search(S110,S112)
	S114= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S110,S112)
	S115= IMMU.Addr=>IAddrReg.In                                Premise(F67)
	S116= IAddrReg.In={pid,addr}                                Path(S113,S115)
	S117= IMMU.Hit=>IMMUHitReg.In                               Premise(F68)
	S118= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S114,S117)
	S119= PC.Out=>ICache.IEA                                    Premise(F69)
	S120= ICache.IEA=addr                                       Path(S95,S119)
	S121= ICache.Hit=ICacheHit(addr)                            ICache-Search(S120)
	S122= ICache.Out={13,rT,rA,SIMM}                            ICache-Search(S120,S68)
	S123= ICache.Out=>ICacheReg.In                              Premise(F70)
	S124= ICacheReg.In={13,rT,rA,SIMM}                          Path(S122,S123)
	S125= ICache.Hit=>ICacheHitReg.In                           Premise(F71)
	S126= ICacheHitReg.In=ICacheHit(addr)                       Path(S121,S125)
	S127= IMMUHitReg.Out=>CU.IMemHit                            Premise(F72)
	S128= CU.IMemHit=IMMUHit(pid,addr)                          Path(S99,S127)
	S129= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F73)
	S130= CU.ICacheHit=ICacheHit(addr)                          Path(S105,S129)
	S131= IAddrReg.Out=>IMem.RAddr                              Premise(F74)
	S132= IMem.RAddr={pid,addr}                                 Path(S96,S131)
	S133= IMem.Out={13,rT,rA,SIMM}                              IMem-Read(S132,S74)
	S134= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S132,S74)
	S135= IMem.Out=>IRMux.MemData                               Premise(F75)
	S136= IRMux.MemData={13,rT,rA,SIMM}                         Path(S133,S135)
	S137= ICacheReg.Out=>IRMux.CacheData                        Premise(F76)
	S138= IRMux.CacheData={13,rT,rA,SIMM}                       Path(S102,S137)
	S139= IRMux.Out={13,rT,rA,SIMM}                             IRMux-Select(S136,S138)
	S140= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F77)
	S141= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S99,S140)
	S142= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F78)
	S143= IRMux.CacheSel=ICacheHit(addr)                        Path(S105,S142)
	S144= IRMux.Out=>IR.In                                      Premise(F79)
	S145= IR.In={13,rT,rA,SIMM}                                 Path(S139,S144)
	S146= IMem.MEM8WordOut=>ICache.WData                        Premise(F80)
	S147= ICache.WData=IMemGet8Word({pid,addr})                 Path(S134,S146)
	S148= PC.Out=>ICache.IEA                                    Premise(F81)
	S149= IR.Out0_5=>CU.Op                                      Premise(F82)
	S150= IR.Out11_15=>GPRegs.RReg1                             Premise(F83)
	S151= IR.Out16_31=>IMMEXT.In                                Premise(F84)
	S152= GPRegs.Rdata1=>A.In                                   Premise(F85)
	S153= IMMEXT.Out=>B.In                                      Premise(F86)
	S154= A.Out=>ALU.A                                          Premise(F87)
	S155= B.Out=>ALU.B                                          Premise(F88)
	S156= CU.Func=>ALU.Func                                     Premise(F89)
	S157= ALU.Out=>ALUOut.In                                    Premise(F90)
	S158= ALU.CMP=>DataCmb.A                                    Premise(F91)
	S159= XER.SOOut=>DataCmb.B                                  Premise(F92)
	S160= DataCmb.B=so                                          Path(S108,S159)
	S161= DataCmb.Out=>DR4bit.In                                Premise(F93)
	S162= ALU.CA=>CAReg.In                                      Premise(F94)
	S163= IR.Out6_10=>GPRegs.WReg                               Premise(F95)
	S164= ALUOut.Out=>GPRegs.WData                              Premise(F96)
	S165= DR4bit.Out=>CRRegs.CR0In                              Premise(F97)
	S166= CAReg.Out=>XER.CAIn                                   Premise(F98)
	S167= CtrlPIDReg=0                                          Premise(F99)
	S168= [PIDReg]=pid                                          PIDReg-Hold(S58,S167)
	S169= CtrlIMMU=0                                            Premise(F100)
	S170= CtrlPC=0                                              Premise(F101)
	S171= CtrlPCInc=1                                           Premise(F102)
	S172= PC[Out]=addr+4                                        PC-Inc(S62,S170,S171)
	S173= PC[CIA]=addr                                          PC-Inc(S62,S170,S171)
	S174= CtrlIAddrReg=0                                        Premise(F103)
	S175= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S64,S174)
	S176= CtrlIMMUHitReg=0                                      Premise(F104)
	S177= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S66,S176)
	S178= CtrlICache=0                                          Premise(F105)
	S179= ICache[addr]={13,rT,rA,SIMM}                          ICache-Hold(S68,S178)
	S180= CtrlICacheReg=0                                       Premise(F106)
	S181= [ICacheReg]={13,rT,rA,SIMM}                           ICacheReg-Hold(S70,S180)
	S182= CtrlICacheHitReg=0                                    Premise(F107)
	S183= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S72,S182)
	S184= CtrlIMem=0                                            Premise(F108)
	S185= IMem[{pid,addr}]={13,rT,rA,SIMM}                      IMem-Hold(S74,S184)
	S186= CtrlIRMux=0                                           Premise(F109)
	S187= CtrlIR=1                                              Premise(F110)
	S188= [IR]={13,rT,rA,SIMM}                                  IR-Write(S145,S187)
	S189= CtrlGPRegs=0                                          Premise(F111)
	S190= GPRegs[rA]=a                                          GPRegs-Hold(S78,S189)
	S191= CtrlA=0                                               Premise(F112)
	S192= CtrlB=0                                               Premise(F113)
	S193= CtrlALUOut=0                                          Premise(F114)
	S194= CtrlXERSO=0                                           Premise(F115)
	S195= XER[SO]=so                                            XER-SO-Hold(S83,S194)
	S196= CtrlXEROV=0                                           Premise(F116)
	S197= CtrlXERCA=0                                           Premise(F117)
	S198= CtrlDR4bit=0                                          Premise(F118)
	S199= CtrlCAReg=0                                           Premise(F119)
	S200= CtrlCRRegs=0                                          Premise(F120)
	S201= CtrlCRRegsCR0=0                                       Premise(F121)
	S202= CtrlCRRegsW4bitRegs=0                                 Premise(F122)
	S203= CtrlCRRegsW1bitRegs=0                                 Premise(F123)

ID	S204= PIDReg.Out=pid                                        PIDReg-Out(S168)
	S205= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S168)
	S206= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S168)
	S207= PC.Out=addr+4                                         PC-Out(S172)
	S208= PC.CIA=addr                                           PC-Out(S173)
	S209= PC.CIA31_28=addr[31:28]                               PC-Out(S173)
	S210= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S175)
	S211= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S175)
	S212= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S175)
	S213= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S177)
	S214= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S177)
	S215= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S177)
	S216= ICacheReg.Out={13,rT,rA,SIMM}                         ICacheReg-Out(S181)
	S217= ICacheReg.Out26_31={13,rT,rA,SIMM}[26:31]             ICacheReg-Out(S181)
	S218= ICacheReg.Out30_31={13,rT,rA,SIMM}[30:31]             ICacheReg-Out(S181)
	S219= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S183)
	S220= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S183)
	S221= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S183)
	S222= IR.Out0_5=13                                          IR-Out(S188)
	S223= IR.Out6_10=rT                                         IR-Out(S188)
	S224= IR.Out11_15=rA                                        IR-Out(S188)
	S225= IR.Out16_31=SIMM                                      IR-Out(S188)
	S226= XER.SOOut=so                                          XER-SO-Out(S195)
	S227= PIDReg.Out=>IMMU.PID                                  Premise(F124)
	S228= IMMU.PID=pid                                          Path(S204,S227)
	S229= PC.Out=>IMMU.IEA                                      Premise(F125)
	S230= IMMU.IEA=addr+4                                       Path(S207,S229)
	S231= IMMU.Addr={pid,addr+4}                                IMMU-Search(S228,S230)
	S232= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S228,S230)
	S233= IMMU.Addr=>IAddrReg.In                                Premise(F126)
	S234= IAddrReg.In={pid,addr+4}                              Path(S231,S233)
	S235= IMMU.Hit=>IMMUHitReg.In                               Premise(F127)
	S236= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S232,S235)
	S237= PC.Out=>ICache.IEA                                    Premise(F128)
	S238= ICache.IEA=addr+4                                     Path(S207,S237)
	S239= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S238)
	S240= ICache.Out=>ICacheReg.In                              Premise(F129)
	S241= ICache.Hit=>ICacheHitReg.In                           Premise(F130)
	S242= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S239,S241)
	S243= IMMUHitReg.Out=>CU.IMemHit                            Premise(F131)
	S244= CU.IMemHit=IMMUHit(pid,addr)                          Path(S213,S243)
	S245= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F132)
	S246= CU.ICacheHit=ICacheHit(addr)                          Path(S219,S245)
	S247= IAddrReg.Out=>IMem.RAddr                              Premise(F133)
	S248= IMem.RAddr={pid,addr}                                 Path(S210,S247)
	S249= IMem.Out={13,rT,rA,SIMM}                              IMem-Read(S248,S185)
	S250= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S248,S185)
	S251= IMem.Out=>IRMux.MemData                               Premise(F134)
	S252= IRMux.MemData={13,rT,rA,SIMM}                         Path(S249,S251)
	S253= ICacheReg.Out=>IRMux.CacheData                        Premise(F135)
	S254= IRMux.CacheData={13,rT,rA,SIMM}                       Path(S216,S253)
	S255= IRMux.Out={13,rT,rA,SIMM}                             IRMux-Select(S252,S254)
	S256= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F136)
	S257= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S213,S256)
	S258= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F137)
	S259= IRMux.CacheSel=ICacheHit(addr)                        Path(S219,S258)
	S260= IRMux.Out=>IR.In                                      Premise(F138)
	S261= IR.In={13,rT,rA,SIMM}                                 Path(S255,S260)
	S262= IMem.MEM8WordOut=>ICache.WData                        Premise(F139)
	S263= ICache.WData=IMemGet8Word({pid,addr})                 Path(S250,S262)
	S264= PC.Out=>ICache.IEA                                    Premise(F140)
	S265= IR.Out0_5=>CU.Op                                      Premise(F141)
	S266= CU.Op=13                                              Path(S222,S265)
	S267= CU.Func=alu_add                                       CU(S266)
	S268= IR.Out11_15=>GPRegs.RReg1                             Premise(F142)
	S269= GPRegs.RReg1=rA                                       Path(S224,S268)
	S270= GPRegs.Rdata1=a                                       GPRegs-Read(S269,S190)
	S271= IR.Out16_31=>IMMEXT.In                                Premise(F143)
	S272= IMMEXT.In=SIMM                                        Path(S225,S271)
	S273= IMMEXT.Out={16{SIMM[0]},SIMM}                         IMMEXT(S272)
	S274= GPRegs.Rdata1=>A.In                                   Premise(F144)
	S275= A.In=a                                                Path(S270,S274)
	S276= IMMEXT.Out=>B.In                                      Premise(F145)
	S277= B.In={16{SIMM[0]},SIMM}                               Path(S273,S276)
	S278= A.Out=>ALU.A                                          Premise(F146)
	S279= B.Out=>ALU.B                                          Premise(F147)
	S280= CU.Func=>ALU.Func                                     Premise(F148)
	S281= ALU.Func=alu_add                                      Path(S267,S280)
	S282= ALU.Out=>ALUOut.In                                    Premise(F149)
	S283= ALU.CMP=>DataCmb.A                                    Premise(F150)
	S284= XER.SOOut=>DataCmb.B                                  Premise(F151)
	S285= DataCmb.B=so                                          Path(S226,S284)
	S286= DataCmb.Out=>DR4bit.In                                Premise(F152)
	S287= ALU.CA=>CAReg.In                                      Premise(F153)
	S288= IR.Out6_10=>GPRegs.WReg                               Premise(F154)
	S289= GPRegs.WReg=rT                                        Path(S223,S288)
	S290= ALUOut.Out=>GPRegs.WData                              Premise(F155)
	S291= DR4bit.Out=>CRRegs.CR0In                              Premise(F156)
	S292= CAReg.Out=>XER.CAIn                                   Premise(F157)
	S293= CtrlPIDReg=0                                          Premise(F158)
	S294= [PIDReg]=pid                                          PIDReg-Hold(S168,S293)
	S295= CtrlIMMU=0                                            Premise(F159)
	S296= CtrlPC=0                                              Premise(F160)
	S297= CtrlPCInc=0                                           Premise(F161)
	S298= PC[CIA]=addr                                          PC-Hold(S173,S297)
	S299= PC[Out]=addr+4                                        PC-Hold(S172,S296,S297)
	S300= CtrlIAddrReg=0                                        Premise(F162)
	S301= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S175,S300)
	S302= CtrlIMMUHitReg=0                                      Premise(F163)
	S303= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S177,S302)
	S304= CtrlICache=0                                          Premise(F164)
	S305= ICache[addr]={13,rT,rA,SIMM}                          ICache-Hold(S179,S304)
	S306= CtrlICacheReg=0                                       Premise(F165)
	S307= [ICacheReg]={13,rT,rA,SIMM}                           ICacheReg-Hold(S181,S306)
	S308= CtrlICacheHitReg=0                                    Premise(F166)
	S309= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S183,S308)
	S310= CtrlIMem=0                                            Premise(F167)
	S311= IMem[{pid,addr}]={13,rT,rA,SIMM}                      IMem-Hold(S185,S310)
	S312= CtrlIRMux=0                                           Premise(F168)
	S313= CtrlIR=0                                              Premise(F169)
	S314= [IR]={13,rT,rA,SIMM}                                  IR-Hold(S188,S313)
	S315= CtrlGPRegs=0                                          Premise(F170)
	S316= GPRegs[rA]=a                                          GPRegs-Hold(S190,S315)
	S317= CtrlA=1                                               Premise(F171)
	S318= [A]=a                                                 A-Write(S275,S317)
	S319= CtrlB=1                                               Premise(F172)
	S320= [B]={16{SIMM[0]},SIMM}                                B-Write(S277,S319)
	S321= CtrlALUOut=0                                          Premise(F173)
	S322= CtrlXERSO=0                                           Premise(F174)
	S323= XER[SO]=so                                            XER-SO-Hold(S195,S322)
	S324= CtrlXEROV=0                                           Premise(F175)
	S325= CtrlXERCA=0                                           Premise(F176)
	S326= CtrlDR4bit=0                                          Premise(F177)
	S327= CtrlCAReg=0                                           Premise(F178)
	S328= CtrlCRRegs=0                                          Premise(F179)
	S329= CtrlCRRegsCR0=0                                       Premise(F180)
	S330= CtrlCRRegsW4bitRegs=0                                 Premise(F181)
	S331= CtrlCRRegsW1bitRegs=0                                 Premise(F182)

EX	S332= PIDReg.Out=pid                                        PIDReg-Out(S294)
	S333= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S294)
	S334= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S294)
	S335= PC.CIA=addr                                           PC-Out(S298)
	S336= PC.CIA31_28=addr[31:28]                               PC-Out(S298)
	S337= PC.Out=addr+4                                         PC-Out(S299)
	S338= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S301)
	S339= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S301)
	S340= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S301)
	S341= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S303)
	S342= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S303)
	S343= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S303)
	S344= ICacheReg.Out={13,rT,rA,SIMM}                         ICacheReg-Out(S307)
	S345= ICacheReg.Out26_31={13,rT,rA,SIMM}[26:31]             ICacheReg-Out(S307)
	S346= ICacheReg.Out30_31={13,rT,rA,SIMM}[30:31]             ICacheReg-Out(S307)
	S347= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S309)
	S348= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S309)
	S349= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S309)
	S350= IR.Out0_5=13                                          IR-Out(S314)
	S351= IR.Out6_10=rT                                         IR-Out(S314)
	S352= IR.Out11_15=rA                                        IR-Out(S314)
	S353= IR.Out16_31=SIMM                                      IR-Out(S314)
	S354= A.Out=a                                               A-Out(S318)
	S355= A.Out26_31=a[26:31]                                   A-Out(S318)
	S356= A.Out30_31=a[30:31]                                   A-Out(S318)
	S357= B.Out={16{SIMM[0]},SIMM}                              B-Out(S320)
	S358= B.Out26_31={16{SIMM[0]},SIMM}[26:31]                  B-Out(S320)
	S359= B.Out30_31={16{SIMM[0]},SIMM}[30:31]                  B-Out(S320)
	S360= XER.SOOut=so                                          XER-SO-Out(S323)
	S361= PIDReg.Out=>IMMU.PID                                  Premise(F183)
	S362= IMMU.PID=pid                                          Path(S332,S361)
	S363= PC.Out=>IMMU.IEA                                      Premise(F184)
	S364= IMMU.IEA=addr+4                                       Path(S337,S363)
	S365= IMMU.Addr={pid,addr+4}                                IMMU-Search(S362,S364)
	S366= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S362,S364)
	S367= IMMU.Addr=>IAddrReg.In                                Premise(F185)
	S368= IAddrReg.In={pid,addr+4}                              Path(S365,S367)
	S369= IMMU.Hit=>IMMUHitReg.In                               Premise(F186)
	S370= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S366,S369)
	S371= PC.Out=>ICache.IEA                                    Premise(F187)
	S372= ICache.IEA=addr+4                                     Path(S337,S371)
	S373= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S372)
	S374= ICache.Out=>ICacheReg.In                              Premise(F188)
	S375= ICache.Hit=>ICacheHitReg.In                           Premise(F189)
	S376= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S373,S375)
	S377= IMMUHitReg.Out=>CU.IMemHit                            Premise(F190)
	S378= CU.IMemHit=IMMUHit(pid,addr)                          Path(S341,S377)
	S379= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F191)
	S380= CU.ICacheHit=ICacheHit(addr)                          Path(S347,S379)
	S381= IAddrReg.Out=>IMem.RAddr                              Premise(F192)
	S382= IMem.RAddr={pid,addr}                                 Path(S338,S381)
	S383= IMem.Out={13,rT,rA,SIMM}                              IMem-Read(S382,S311)
	S384= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S382,S311)
	S385= IMem.Out=>IRMux.MemData                               Premise(F193)
	S386= IRMux.MemData={13,rT,rA,SIMM}                         Path(S383,S385)
	S387= ICacheReg.Out=>IRMux.CacheData                        Premise(F194)
	S388= IRMux.CacheData={13,rT,rA,SIMM}                       Path(S344,S387)
	S389= IRMux.Out={13,rT,rA,SIMM}                             IRMux-Select(S386,S388)
	S390= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F195)
	S391= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S341,S390)
	S392= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F196)
	S393= IRMux.CacheSel=ICacheHit(addr)                        Path(S347,S392)
	S394= IRMux.Out=>IR.In                                      Premise(F197)
	S395= IR.In={13,rT,rA,SIMM}                                 Path(S389,S394)
	S396= IMem.MEM8WordOut=>ICache.WData                        Premise(F198)
	S397= ICache.WData=IMemGet8Word({pid,addr})                 Path(S384,S396)
	S398= PC.Out=>ICache.IEA                                    Premise(F199)
	S399= IR.Out0_5=>CU.Op                                      Premise(F200)
	S400= CU.Op=13                                              Path(S350,S399)
	S401= CU.Func=alu_add                                       CU(S400)
	S402= IR.Out11_15=>GPRegs.RReg1                             Premise(F201)
	S403= GPRegs.RReg1=rA                                       Path(S352,S402)
	S404= GPRegs.Rdata1=a                                       GPRegs-Read(S403,S316)
	S405= IR.Out16_31=>IMMEXT.In                                Premise(F202)
	S406= IMMEXT.In=SIMM                                        Path(S353,S405)
	S407= IMMEXT.Out={16{SIMM[0]},SIMM}                         IMMEXT(S406)
	S408= GPRegs.Rdata1=>A.In                                   Premise(F203)
	S409= A.In=a                                                Path(S404,S408)
	S410= IMMEXT.Out=>B.In                                      Premise(F204)
	S411= B.In={16{SIMM[0]},SIMM}                               Path(S407,S410)
	S412= A.Out=>ALU.A                                          Premise(F205)
	S413= ALU.A=a                                               Path(S354,S412)
	S414= B.Out=>ALU.B                                          Premise(F206)
	S415= ALU.B={16{SIMM[0]},SIMM}                              Path(S357,S414)
	S416= CU.Func=>ALU.Func                                     Premise(F207)
	S417= ALU.Func=alu_add                                      Path(S401,S416)
	S418= ALU.Out=a+{16{SIMM[0]},SIMM}                          ALU(S413,S415)
	S419= ALU.CMP=Compare0(a+{16{SIMM[0]},SIMM})                ALU(S413,S415)
	S420= ALU.OV=OverFlow(a+{16{SIMM[0]},SIMM})                 ALU(S413,S415)
	S421= ALU.CA=Carry(a+{16{SIMM[0]},SIMM})                    ALU(S413,S415)
	S422= ALU.Out=>ALUOut.In                                    Premise(F208)
	S423= ALUOut.In=a+{16{SIMM[0]},SIMM}                        Path(S418,S422)
	S424= ALU.CMP=>DataCmb.A                                    Premise(F209)
	S425= DataCmb.A=Compare0(a+{16{SIMM[0]},SIMM})              Path(S419,S424)
	S426= XER.SOOut=>DataCmb.B                                  Premise(F210)
	S427= DataCmb.B=so                                          Path(S360,S426)
	S428= DataCmb.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}       DataCmb(S425,S427)
	S429= DataCmb.Out=>DR4bit.In                                Premise(F211)
	S430= DR4bit.In={Compare0(a+{16{SIMM[0]},SIMM}),so}         Path(S428,S429)
	S431= ALU.CA=>CAReg.In                                      Premise(F212)
	S432= CAReg.In=Carry(a+{16{SIMM[0]},SIMM})                  Path(S421,S431)
	S433= IR.Out6_10=>GPRegs.WReg                               Premise(F213)
	S434= GPRegs.WReg=rT                                        Path(S351,S433)
	S435= ALUOut.Out=>GPRegs.WData                              Premise(F214)
	S436= DR4bit.Out=>CRRegs.CR0In                              Premise(F215)
	S437= CAReg.Out=>XER.CAIn                                   Premise(F216)
	S438= CtrlPIDReg=0                                          Premise(F217)
	S439= [PIDReg]=pid                                          PIDReg-Hold(S294,S438)
	S440= CtrlIMMU=0                                            Premise(F218)
	S441= CtrlPC=0                                              Premise(F219)
	S442= CtrlPCInc=0                                           Premise(F220)
	S443= PC[CIA]=addr                                          PC-Hold(S298,S442)
	S444= PC[Out]=addr+4                                        PC-Hold(S299,S441,S442)
	S445= CtrlIAddrReg=0                                        Premise(F221)
	S446= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S301,S445)
	S447= CtrlIMMUHitReg=0                                      Premise(F222)
	S448= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S303,S447)
	S449= CtrlICache=0                                          Premise(F223)
	S450= ICache[addr]={13,rT,rA,SIMM}                          ICache-Hold(S305,S449)
	S451= CtrlICacheReg=0                                       Premise(F224)
	S452= [ICacheReg]={13,rT,rA,SIMM}                           ICacheReg-Hold(S307,S451)
	S453= CtrlICacheHitReg=0                                    Premise(F225)
	S454= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S309,S453)
	S455= CtrlIMem=0                                            Premise(F226)
	S456= IMem[{pid,addr}]={13,rT,rA,SIMM}                      IMem-Hold(S311,S455)
	S457= CtrlIRMux=0                                           Premise(F227)
	S458= CtrlIR=0                                              Premise(F228)
	S459= [IR]={13,rT,rA,SIMM}                                  IR-Hold(S314,S458)
	S460= CtrlGPRegs=0                                          Premise(F229)
	S461= GPRegs[rA]=a                                          GPRegs-Hold(S316,S460)
	S462= CtrlA=0                                               Premise(F230)
	S463= [A]=a                                                 A-Hold(S318,S462)
	S464= CtrlB=0                                               Premise(F231)
	S465= [B]={16{SIMM[0]},SIMM}                                B-Hold(S320,S464)
	S466= CtrlALUOut=1                                          Premise(F232)
	S467= [ALUOut]=a+{16{SIMM[0]},SIMM}                         ALUOut-Write(S423,S466)
	S468= CtrlXERSO=0                                           Premise(F233)
	S469= XER[SO]=so                                            XER-SO-Hold(S323,S468)
	S470= CtrlXEROV=0                                           Premise(F234)
	S471= CtrlXERCA=0                                           Premise(F235)
	S472= CtrlDR4bit=1                                          Premise(F236)
	S473= [DR4bit]={Compare0(a+{16{SIMM[0]},SIMM}),so}          DR4bit-Write(S430,S472)
	S474= CtrlCAReg=1                                           Premise(F237)
	S475= [CAReg]=Carry(a+{16{SIMM[0]},SIMM})                   CAReg-Write(S432,S474)
	S476= CtrlCRRegs=0                                          Premise(F238)
	S477= CtrlCRRegsCR0=0                                       Premise(F239)
	S478= CtrlCRRegsW4bitRegs=0                                 Premise(F240)
	S479= CtrlCRRegsW1bitRegs=0                                 Premise(F241)

MEM	S480= PIDReg.Out=pid                                        PIDReg-Out(S439)
	S481= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S439)
	S482= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S439)
	S483= PC.CIA=addr                                           PC-Out(S443)
	S484= PC.CIA31_28=addr[31:28]                               PC-Out(S443)
	S485= PC.Out=addr+4                                         PC-Out(S444)
	S486= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S446)
	S487= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S446)
	S488= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S446)
	S489= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S448)
	S490= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S448)
	S491= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S448)
	S492= ICacheReg.Out={13,rT,rA,SIMM}                         ICacheReg-Out(S452)
	S493= ICacheReg.Out26_31={13,rT,rA,SIMM}[26:31]             ICacheReg-Out(S452)
	S494= ICacheReg.Out30_31={13,rT,rA,SIMM}[30:31]             ICacheReg-Out(S452)
	S495= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S454)
	S496= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S454)
	S497= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S454)
	S498= IR.Out0_5=13                                          IR-Out(S459)
	S499= IR.Out6_10=rT                                         IR-Out(S459)
	S500= IR.Out11_15=rA                                        IR-Out(S459)
	S501= IR.Out16_31=SIMM                                      IR-Out(S459)
	S502= A.Out=a                                               A-Out(S463)
	S503= A.Out26_31=a[26:31]                                   A-Out(S463)
	S504= A.Out30_31=a[30:31]                                   A-Out(S463)
	S505= B.Out={16{SIMM[0]},SIMM}                              B-Out(S465)
	S506= B.Out26_31={16{SIMM[0]},SIMM}[26:31]                  B-Out(S465)
	S507= B.Out30_31={16{SIMM[0]},SIMM}[30:31]                  B-Out(S465)
	S508= ALUOut.Out=a+{16{SIMM[0]},SIMM}                       ALUOut-Out(S467)
	S509= ALUOut.Out26_31=a+{16{SIMM[0]},SIMM}[26:31]           ALUOut-Out(S467)
	S510= ALUOut.Out30_31=a+{16{SIMM[0]},SIMM}[30:31]           ALUOut-Out(S467)
	S511= XER.SOOut=so                                          XER-SO-Out(S469)
	S512= DR4bit.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}        DR4bit-Out(S473)
	S513= DR4bit.Out26_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[26:31]DR4bit-Out(S473)
	S514= DR4bit.Out30_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[30:31]DR4bit-Out(S473)
	S515= CAReg.Out=Carry(a+{16{SIMM[0]},SIMM})                 CAReg-Out(S475)
	S516= CAReg.Out26_31=Carry(a+{16{SIMM[0]},SIMM})[26:31]     CAReg-Out(S475)
	S517= CAReg.Out30_31=Carry(a+{16{SIMM[0]},SIMM})[30:31]     CAReg-Out(S475)
	S518= PIDReg.Out=>IMMU.PID                                  Premise(F242)
	S519= IMMU.PID=pid                                          Path(S480,S518)
	S520= PC.Out=>IMMU.IEA                                      Premise(F243)
	S521= IMMU.IEA=addr+4                                       Path(S485,S520)
	S522= IMMU.Addr={pid,addr+4}                                IMMU-Search(S519,S521)
	S523= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S519,S521)
	S524= IMMU.Addr=>IAddrReg.In                                Premise(F244)
	S525= IAddrReg.In={pid,addr+4}                              Path(S522,S524)
	S526= IMMU.Hit=>IMMUHitReg.In                               Premise(F245)
	S527= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S523,S526)
	S528= PC.Out=>ICache.IEA                                    Premise(F246)
	S529= ICache.IEA=addr+4                                     Path(S485,S528)
	S530= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S529)
	S531= ICache.Out=>ICacheReg.In                              Premise(F247)
	S532= ICache.Hit=>ICacheHitReg.In                           Premise(F248)
	S533= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S530,S532)
	S534= IMMUHitReg.Out=>CU.IMemHit                            Premise(F249)
	S535= CU.IMemHit=IMMUHit(pid,addr)                          Path(S489,S534)
	S536= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F250)
	S537= CU.ICacheHit=ICacheHit(addr)                          Path(S495,S536)
	S538= IAddrReg.Out=>IMem.RAddr                              Premise(F251)
	S539= IMem.RAddr={pid,addr}                                 Path(S486,S538)
	S540= IMem.Out={13,rT,rA,SIMM}                              IMem-Read(S539,S456)
	S541= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S539,S456)
	S542= IMem.Out=>IRMux.MemData                               Premise(F252)
	S543= IRMux.MemData={13,rT,rA,SIMM}                         Path(S540,S542)
	S544= ICacheReg.Out=>IRMux.CacheData                        Premise(F253)
	S545= IRMux.CacheData={13,rT,rA,SIMM}                       Path(S492,S544)
	S546= IRMux.Out={13,rT,rA,SIMM}                             IRMux-Select(S543,S545)
	S547= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F254)
	S548= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S489,S547)
	S549= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F255)
	S550= IRMux.CacheSel=ICacheHit(addr)                        Path(S495,S549)
	S551= IRMux.Out=>IR.In                                      Premise(F256)
	S552= IR.In={13,rT,rA,SIMM}                                 Path(S546,S551)
	S553= IMem.MEM8WordOut=>ICache.WData                        Premise(F257)
	S554= ICache.WData=IMemGet8Word({pid,addr})                 Path(S541,S553)
	S555= PC.Out=>ICache.IEA                                    Premise(F258)
	S556= IR.Out0_5=>CU.Op                                      Premise(F259)
	S557= CU.Op=13                                              Path(S498,S556)
	S558= CU.Func=alu_add                                       CU(S557)
	S559= IR.Out11_15=>GPRegs.RReg1                             Premise(F260)
	S560= GPRegs.RReg1=rA                                       Path(S500,S559)
	S561= GPRegs.Rdata1=a                                       GPRegs-Read(S560,S461)
	S562= IR.Out16_31=>IMMEXT.In                                Premise(F261)
	S563= IMMEXT.In=SIMM                                        Path(S501,S562)
	S564= IMMEXT.Out={16{SIMM[0]},SIMM}                         IMMEXT(S563)
	S565= GPRegs.Rdata1=>A.In                                   Premise(F262)
	S566= A.In=a                                                Path(S561,S565)
	S567= IMMEXT.Out=>B.In                                      Premise(F263)
	S568= B.In={16{SIMM[0]},SIMM}                               Path(S564,S567)
	S569= A.Out=>ALU.A                                          Premise(F264)
	S570= ALU.A=a                                               Path(S502,S569)
	S571= B.Out=>ALU.B                                          Premise(F265)
	S572= ALU.B={16{SIMM[0]},SIMM}                              Path(S505,S571)
	S573= CU.Func=>ALU.Func                                     Premise(F266)
	S574= ALU.Func=alu_add                                      Path(S558,S573)
	S575= ALU.Out=a+{16{SIMM[0]},SIMM}                          ALU(S570,S572)
	S576= ALU.CMP=Compare0(a+{16{SIMM[0]},SIMM})                ALU(S570,S572)
	S577= ALU.OV=OverFlow(a+{16{SIMM[0]},SIMM})                 ALU(S570,S572)
	S578= ALU.CA=Carry(a+{16{SIMM[0]},SIMM})                    ALU(S570,S572)
	S579= ALU.Out=>ALUOut.In                                    Premise(F267)
	S580= ALUOut.In=a+{16{SIMM[0]},SIMM}                        Path(S575,S579)
	S581= ALU.CMP=>DataCmb.A                                    Premise(F268)
	S582= DataCmb.A=Compare0(a+{16{SIMM[0]},SIMM})              Path(S576,S581)
	S583= XER.SOOut=>DataCmb.B                                  Premise(F269)
	S584= DataCmb.B=so                                          Path(S511,S583)
	S585= DataCmb.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}       DataCmb(S582,S584)
	S586= DataCmb.Out=>DR4bit.In                                Premise(F270)
	S587= DR4bit.In={Compare0(a+{16{SIMM[0]},SIMM}),so}         Path(S585,S586)
	S588= ALU.CA=>CAReg.In                                      Premise(F271)
	S589= CAReg.In=Carry(a+{16{SIMM[0]},SIMM})                  Path(S578,S588)
	S590= IR.Out6_10=>GPRegs.WReg                               Premise(F272)
	S591= GPRegs.WReg=rT                                        Path(S499,S590)
	S592= ALUOut.Out=>GPRegs.WData                              Premise(F273)
	S593= GPRegs.WData=a+{16{SIMM[0]},SIMM}                     Path(S508,S592)
	S594= DR4bit.Out=>CRRegs.CR0In                              Premise(F274)
	S595= CRRegs.CR0In={Compare0(a+{16{SIMM[0]},SIMM}),so}      Path(S512,S594)
	S596= CAReg.Out=>XER.CAIn                                   Premise(F275)
	S597= XER.CAIn=Carry(a+{16{SIMM[0]},SIMM})                  Path(S515,S596)
	S598= CtrlPIDReg=0                                          Premise(F276)
	S599= [PIDReg]=pid                                          PIDReg-Hold(S439,S598)
	S600= CtrlIMMU=0                                            Premise(F277)
	S601= CtrlPC=0                                              Premise(F278)
	S602= CtrlPCInc=0                                           Premise(F279)
	S603= PC[CIA]=addr                                          PC-Hold(S443,S602)
	S604= PC[Out]=addr+4                                        PC-Hold(S444,S601,S602)
	S605= CtrlIAddrReg=0                                        Premise(F280)
	S606= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S446,S605)
	S607= CtrlIMMUHitReg=0                                      Premise(F281)
	S608= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S448,S607)
	S609= CtrlICache=0                                          Premise(F282)
	S610= ICache[addr]={13,rT,rA,SIMM}                          ICache-Hold(S450,S609)
	S611= CtrlICacheReg=0                                       Premise(F283)
	S612= [ICacheReg]={13,rT,rA,SIMM}                           ICacheReg-Hold(S452,S611)
	S613= CtrlICacheHitReg=0                                    Premise(F284)
	S614= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S454,S613)
	S615= CtrlIMem=0                                            Premise(F285)
	S616= IMem[{pid,addr}]={13,rT,rA,SIMM}                      IMem-Hold(S456,S615)
	S617= CtrlIRMux=0                                           Premise(F286)
	S618= CtrlIR=0                                              Premise(F287)
	S619= [IR]={13,rT,rA,SIMM}                                  IR-Hold(S459,S618)
	S620= CtrlGPRegs=0                                          Premise(F288)
	S621= GPRegs[rA]=a                                          GPRegs-Hold(S461,S620)
	S622= CtrlA=0                                               Premise(F289)
	S623= [A]=a                                                 A-Hold(S463,S622)
	S624= CtrlB=0                                               Premise(F290)
	S625= [B]={16{SIMM[0]},SIMM}                                B-Hold(S465,S624)
	S626= CtrlALUOut=0                                          Premise(F291)
	S627= [ALUOut]=a+{16{SIMM[0]},SIMM}                         ALUOut-Hold(S467,S626)
	S628= CtrlXERSO=0                                           Premise(F292)
	S629= XER[SO]=so                                            XER-SO-Hold(S469,S628)
	S630= CtrlXEROV=0                                           Premise(F293)
	S631= CtrlXERCA=0                                           Premise(F294)
	S632= CtrlDR4bit=0                                          Premise(F295)
	S633= [DR4bit]={Compare0(a+{16{SIMM[0]},SIMM}),so}          DR4bit-Hold(S473,S632)
	S634= CtrlCAReg=0                                           Premise(F296)
	S635= [CAReg]=Carry(a+{16{SIMM[0]},SIMM})                   CAReg-Hold(S475,S634)
	S636= CtrlCRRegs=0                                          Premise(F297)
	S637= CtrlCRRegsCR0=0                                       Premise(F298)
	S638= CtrlCRRegsW4bitRegs=0                                 Premise(F299)
	S639= CtrlCRRegsW1bitRegs=0                                 Premise(F300)

DMMU1	S640= PIDReg.Out=pid                                        PIDReg-Out(S599)
	S641= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S599)
	S642= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S599)
	S643= PC.CIA=addr                                           PC-Out(S603)
	S644= PC.CIA31_28=addr[31:28]                               PC-Out(S603)
	S645= PC.Out=addr+4                                         PC-Out(S604)
	S646= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S606)
	S647= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S606)
	S648= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S606)
	S649= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S608)
	S650= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S608)
	S651= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S608)
	S652= ICacheReg.Out={13,rT,rA,SIMM}                         ICacheReg-Out(S612)
	S653= ICacheReg.Out26_31={13,rT,rA,SIMM}[26:31]             ICacheReg-Out(S612)
	S654= ICacheReg.Out30_31={13,rT,rA,SIMM}[30:31]             ICacheReg-Out(S612)
	S655= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S614)
	S656= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S614)
	S657= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S614)
	S658= IR.Out0_5=13                                          IR-Out(S619)
	S659= IR.Out6_10=rT                                         IR-Out(S619)
	S660= IR.Out11_15=rA                                        IR-Out(S619)
	S661= IR.Out16_31=SIMM                                      IR-Out(S619)
	S662= A.Out=a                                               A-Out(S623)
	S663= A.Out26_31=a[26:31]                                   A-Out(S623)
	S664= A.Out30_31=a[30:31]                                   A-Out(S623)
	S665= B.Out={16{SIMM[0]},SIMM}                              B-Out(S625)
	S666= B.Out26_31={16{SIMM[0]},SIMM}[26:31]                  B-Out(S625)
	S667= B.Out30_31={16{SIMM[0]},SIMM}[30:31]                  B-Out(S625)
	S668= ALUOut.Out=a+{16{SIMM[0]},SIMM}                       ALUOut-Out(S627)
	S669= ALUOut.Out26_31=a+{16{SIMM[0]},SIMM}[26:31]           ALUOut-Out(S627)
	S670= ALUOut.Out30_31=a+{16{SIMM[0]},SIMM}[30:31]           ALUOut-Out(S627)
	S671= XER.SOOut=so                                          XER-SO-Out(S629)
	S672= DR4bit.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}        DR4bit-Out(S633)
	S673= DR4bit.Out26_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[26:31]DR4bit-Out(S633)
	S674= DR4bit.Out30_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[30:31]DR4bit-Out(S633)
	S675= CAReg.Out=Carry(a+{16{SIMM[0]},SIMM})                 CAReg-Out(S635)
	S676= CAReg.Out26_31=Carry(a+{16{SIMM[0]},SIMM})[26:31]     CAReg-Out(S635)
	S677= CAReg.Out30_31=Carry(a+{16{SIMM[0]},SIMM})[30:31]     CAReg-Out(S635)
	S678= PIDReg.Out=>IMMU.PID                                  Premise(F301)
	S679= IMMU.PID=pid                                          Path(S640,S678)
	S680= PC.Out=>IMMU.IEA                                      Premise(F302)
	S681= IMMU.IEA=addr+4                                       Path(S645,S680)
	S682= IMMU.Addr={pid,addr+4}                                IMMU-Search(S679,S681)
	S683= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S679,S681)
	S684= IMMU.Addr=>IAddrReg.In                                Premise(F303)
	S685= IAddrReg.In={pid,addr+4}                              Path(S682,S684)
	S686= IMMU.Hit=>IMMUHitReg.In                               Premise(F304)
	S687= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S683,S686)
	S688= PC.Out=>ICache.IEA                                    Premise(F305)
	S689= ICache.IEA=addr+4                                     Path(S645,S688)
	S690= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S689)
	S691= ICache.Out=>ICacheReg.In                              Premise(F306)
	S692= ICache.Hit=>ICacheHitReg.In                           Premise(F307)
	S693= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S690,S692)
	S694= IMMUHitReg.Out=>CU.IMemHit                            Premise(F308)
	S695= CU.IMemHit=IMMUHit(pid,addr)                          Path(S649,S694)
	S696= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F309)
	S697= CU.ICacheHit=ICacheHit(addr)                          Path(S655,S696)
	S698= IAddrReg.Out=>IMem.RAddr                              Premise(F310)
	S699= IMem.RAddr={pid,addr}                                 Path(S646,S698)
	S700= IMem.Out={13,rT,rA,SIMM}                              IMem-Read(S699,S616)
	S701= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S699,S616)
	S702= IMem.Out=>IRMux.MemData                               Premise(F311)
	S703= IRMux.MemData={13,rT,rA,SIMM}                         Path(S700,S702)
	S704= ICacheReg.Out=>IRMux.CacheData                        Premise(F312)
	S705= IRMux.CacheData={13,rT,rA,SIMM}                       Path(S652,S704)
	S706= IRMux.Out={13,rT,rA,SIMM}                             IRMux-Select(S703,S705)
	S707= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F313)
	S708= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S649,S707)
	S709= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F314)
	S710= IRMux.CacheSel=ICacheHit(addr)                        Path(S655,S709)
	S711= IRMux.Out=>IR.In                                      Premise(F315)
	S712= IR.In={13,rT,rA,SIMM}                                 Path(S706,S711)
	S713= IMem.MEM8WordOut=>ICache.WData                        Premise(F316)
	S714= ICache.WData=IMemGet8Word({pid,addr})                 Path(S701,S713)
	S715= PC.Out=>ICache.IEA                                    Premise(F317)
	S716= IR.Out0_5=>CU.Op                                      Premise(F318)
	S717= CU.Op=13                                              Path(S658,S716)
	S718= CU.Func=alu_add                                       CU(S717)
	S719= IR.Out11_15=>GPRegs.RReg1                             Premise(F319)
	S720= GPRegs.RReg1=rA                                       Path(S660,S719)
	S721= GPRegs.Rdata1=a                                       GPRegs-Read(S720,S621)
	S722= IR.Out16_31=>IMMEXT.In                                Premise(F320)
	S723= IMMEXT.In=SIMM                                        Path(S661,S722)
	S724= IMMEXT.Out={16{SIMM[0]},SIMM}                         IMMEXT(S723)
	S725= GPRegs.Rdata1=>A.In                                   Premise(F321)
	S726= A.In=a                                                Path(S721,S725)
	S727= IMMEXT.Out=>B.In                                      Premise(F322)
	S728= B.In={16{SIMM[0]},SIMM}                               Path(S724,S727)
	S729= A.Out=>ALU.A                                          Premise(F323)
	S730= ALU.A=a                                               Path(S662,S729)
	S731= B.Out=>ALU.B                                          Premise(F324)
	S732= ALU.B={16{SIMM[0]},SIMM}                              Path(S665,S731)
	S733= CU.Func=>ALU.Func                                     Premise(F325)
	S734= ALU.Func=alu_add                                      Path(S718,S733)
	S735= ALU.Out=a+{16{SIMM[0]},SIMM}                          ALU(S730,S732)
	S736= ALU.CMP=Compare0(a+{16{SIMM[0]},SIMM})                ALU(S730,S732)
	S737= ALU.OV=OverFlow(a+{16{SIMM[0]},SIMM})                 ALU(S730,S732)
	S738= ALU.CA=Carry(a+{16{SIMM[0]},SIMM})                    ALU(S730,S732)
	S739= ALU.Out=>ALUOut.In                                    Premise(F326)
	S740= ALUOut.In=a+{16{SIMM[0]},SIMM}                        Path(S735,S739)
	S741= ALU.CMP=>DataCmb.A                                    Premise(F327)
	S742= DataCmb.A=Compare0(a+{16{SIMM[0]},SIMM})              Path(S736,S741)
	S743= XER.SOOut=>DataCmb.B                                  Premise(F328)
	S744= DataCmb.B=so                                          Path(S671,S743)
	S745= DataCmb.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}       DataCmb(S742,S744)
	S746= DataCmb.Out=>DR4bit.In                                Premise(F329)
	S747= DR4bit.In={Compare0(a+{16{SIMM[0]},SIMM}),so}         Path(S745,S746)
	S748= ALU.CA=>CAReg.In                                      Premise(F330)
	S749= CAReg.In=Carry(a+{16{SIMM[0]},SIMM})                  Path(S738,S748)
	S750= IR.Out6_10=>GPRegs.WReg                               Premise(F331)
	S751= GPRegs.WReg=rT                                        Path(S659,S750)
	S752= ALUOut.Out=>GPRegs.WData                              Premise(F332)
	S753= GPRegs.WData=a+{16{SIMM[0]},SIMM}                     Path(S668,S752)
	S754= DR4bit.Out=>CRRegs.CR0In                              Premise(F333)
	S755= CRRegs.CR0In={Compare0(a+{16{SIMM[0]},SIMM}),so}      Path(S672,S754)
	S756= CAReg.Out=>XER.CAIn                                   Premise(F334)
	S757= XER.CAIn=Carry(a+{16{SIMM[0]},SIMM})                  Path(S675,S756)
	S758= CtrlPIDReg=0                                          Premise(F335)
	S759= [PIDReg]=pid                                          PIDReg-Hold(S599,S758)
	S760= CtrlIMMU=0                                            Premise(F336)
	S761= CtrlPC=0                                              Premise(F337)
	S762= CtrlPCInc=0                                           Premise(F338)
	S763= PC[CIA]=addr                                          PC-Hold(S603,S762)
	S764= PC[Out]=addr+4                                        PC-Hold(S604,S761,S762)
	S765= CtrlIAddrReg=0                                        Premise(F339)
	S766= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S606,S765)
	S767= CtrlIMMUHitReg=0                                      Premise(F340)
	S768= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S608,S767)
	S769= CtrlICache=0                                          Premise(F341)
	S770= ICache[addr]={13,rT,rA,SIMM}                          ICache-Hold(S610,S769)
	S771= CtrlICacheReg=0                                       Premise(F342)
	S772= [ICacheReg]={13,rT,rA,SIMM}                           ICacheReg-Hold(S612,S771)
	S773= CtrlICacheHitReg=0                                    Premise(F343)
	S774= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S614,S773)
	S775= CtrlIMem=0                                            Premise(F344)
	S776= IMem[{pid,addr}]={13,rT,rA,SIMM}                      IMem-Hold(S616,S775)
	S777= CtrlIRMux=0                                           Premise(F345)
	S778= CtrlIR=0                                              Premise(F346)
	S779= [IR]={13,rT,rA,SIMM}                                  IR-Hold(S619,S778)
	S780= CtrlGPRegs=0                                          Premise(F347)
	S781= GPRegs[rA]=a                                          GPRegs-Hold(S621,S780)
	S782= CtrlA=0                                               Premise(F348)
	S783= [A]=a                                                 A-Hold(S623,S782)
	S784= CtrlB=0                                               Premise(F349)
	S785= [B]={16{SIMM[0]},SIMM}                                B-Hold(S625,S784)
	S786= CtrlALUOut=0                                          Premise(F350)
	S787= [ALUOut]=a+{16{SIMM[0]},SIMM}                         ALUOut-Hold(S627,S786)
	S788= CtrlXERSO=0                                           Premise(F351)
	S789= XER[SO]=so                                            XER-SO-Hold(S629,S788)
	S790= CtrlXEROV=0                                           Premise(F352)
	S791= CtrlXERCA=0                                           Premise(F353)
	S792= CtrlDR4bit=0                                          Premise(F354)
	S793= [DR4bit]={Compare0(a+{16{SIMM[0]},SIMM}),so}          DR4bit-Hold(S633,S792)
	S794= CtrlCAReg=0                                           Premise(F355)
	S795= [CAReg]=Carry(a+{16{SIMM[0]},SIMM})                   CAReg-Hold(S635,S794)
	S796= CtrlCRRegs=0                                          Premise(F356)
	S797= CtrlCRRegsCR0=0                                       Premise(F357)
	S798= CtrlCRRegsW4bitRegs=0                                 Premise(F358)
	S799= CtrlCRRegsW1bitRegs=0                                 Premise(F359)

DMMU2	S800= PIDReg.Out=pid                                        PIDReg-Out(S759)
	S801= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S759)
	S802= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S759)
	S803= PC.CIA=addr                                           PC-Out(S763)
	S804= PC.CIA31_28=addr[31:28]                               PC-Out(S763)
	S805= PC.Out=addr+4                                         PC-Out(S764)
	S806= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S766)
	S807= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S766)
	S808= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S766)
	S809= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S768)
	S810= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S768)
	S811= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S768)
	S812= ICacheReg.Out={13,rT,rA,SIMM}                         ICacheReg-Out(S772)
	S813= ICacheReg.Out26_31={13,rT,rA,SIMM}[26:31]             ICacheReg-Out(S772)
	S814= ICacheReg.Out30_31={13,rT,rA,SIMM}[30:31]             ICacheReg-Out(S772)
	S815= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S774)
	S816= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S774)
	S817= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S774)
	S818= IR.Out0_5=13                                          IR-Out(S779)
	S819= IR.Out6_10=rT                                         IR-Out(S779)
	S820= IR.Out11_15=rA                                        IR-Out(S779)
	S821= IR.Out16_31=SIMM                                      IR-Out(S779)
	S822= A.Out=a                                               A-Out(S783)
	S823= A.Out26_31=a[26:31]                                   A-Out(S783)
	S824= A.Out30_31=a[30:31]                                   A-Out(S783)
	S825= B.Out={16{SIMM[0]},SIMM}                              B-Out(S785)
	S826= B.Out26_31={16{SIMM[0]},SIMM}[26:31]                  B-Out(S785)
	S827= B.Out30_31={16{SIMM[0]},SIMM}[30:31]                  B-Out(S785)
	S828= ALUOut.Out=a+{16{SIMM[0]},SIMM}                       ALUOut-Out(S787)
	S829= ALUOut.Out26_31=a+{16{SIMM[0]},SIMM}[26:31]           ALUOut-Out(S787)
	S830= ALUOut.Out30_31=a+{16{SIMM[0]},SIMM}[30:31]           ALUOut-Out(S787)
	S831= XER.SOOut=so                                          XER-SO-Out(S789)
	S832= DR4bit.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}        DR4bit-Out(S793)
	S833= DR4bit.Out26_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[26:31]DR4bit-Out(S793)
	S834= DR4bit.Out30_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[30:31]DR4bit-Out(S793)
	S835= CAReg.Out=Carry(a+{16{SIMM[0]},SIMM})                 CAReg-Out(S795)
	S836= CAReg.Out26_31=Carry(a+{16{SIMM[0]},SIMM})[26:31]     CAReg-Out(S795)
	S837= CAReg.Out30_31=Carry(a+{16{SIMM[0]},SIMM})[30:31]     CAReg-Out(S795)
	S838= PIDReg.Out=>IMMU.PID                                  Premise(F360)
	S839= IMMU.PID=pid                                          Path(S800,S838)
	S840= PC.Out=>IMMU.IEA                                      Premise(F361)
	S841= IMMU.IEA=addr+4                                       Path(S805,S840)
	S842= IMMU.Addr={pid,addr+4}                                IMMU-Search(S839,S841)
	S843= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S839,S841)
	S844= IMMU.Addr=>IAddrReg.In                                Premise(F362)
	S845= IAddrReg.In={pid,addr+4}                              Path(S842,S844)
	S846= IMMU.Hit=>IMMUHitReg.In                               Premise(F363)
	S847= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S843,S846)
	S848= PC.Out=>ICache.IEA                                    Premise(F364)
	S849= ICache.IEA=addr+4                                     Path(S805,S848)
	S850= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S849)
	S851= ICache.Out=>ICacheReg.In                              Premise(F365)
	S852= ICache.Hit=>ICacheHitReg.In                           Premise(F366)
	S853= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S850,S852)
	S854= IMMUHitReg.Out=>CU.IMemHit                            Premise(F367)
	S855= CU.IMemHit=IMMUHit(pid,addr)                          Path(S809,S854)
	S856= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F368)
	S857= CU.ICacheHit=ICacheHit(addr)                          Path(S815,S856)
	S858= IAddrReg.Out=>IMem.RAddr                              Premise(F369)
	S859= IMem.RAddr={pid,addr}                                 Path(S806,S858)
	S860= IMem.Out={13,rT,rA,SIMM}                              IMem-Read(S859,S776)
	S861= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S859,S776)
	S862= IMem.Out=>IRMux.MemData                               Premise(F370)
	S863= IRMux.MemData={13,rT,rA,SIMM}                         Path(S860,S862)
	S864= ICacheReg.Out=>IRMux.CacheData                        Premise(F371)
	S865= IRMux.CacheData={13,rT,rA,SIMM}                       Path(S812,S864)
	S866= IRMux.Out={13,rT,rA,SIMM}                             IRMux-Select(S863,S865)
	S867= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F372)
	S868= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S809,S867)
	S869= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F373)
	S870= IRMux.CacheSel=ICacheHit(addr)                        Path(S815,S869)
	S871= IRMux.Out=>IR.In                                      Premise(F374)
	S872= IR.In={13,rT,rA,SIMM}                                 Path(S866,S871)
	S873= IMem.MEM8WordOut=>ICache.WData                        Premise(F375)
	S874= ICache.WData=IMemGet8Word({pid,addr})                 Path(S861,S873)
	S875= PC.Out=>ICache.IEA                                    Premise(F376)
	S876= IR.Out0_5=>CU.Op                                      Premise(F377)
	S877= CU.Op=13                                              Path(S818,S876)
	S878= CU.Func=alu_add                                       CU(S877)
	S879= IR.Out11_15=>GPRegs.RReg1                             Premise(F378)
	S880= GPRegs.RReg1=rA                                       Path(S820,S879)
	S881= GPRegs.Rdata1=a                                       GPRegs-Read(S880,S781)
	S882= IR.Out16_31=>IMMEXT.In                                Premise(F379)
	S883= IMMEXT.In=SIMM                                        Path(S821,S882)
	S884= IMMEXT.Out={16{SIMM[0]},SIMM}                         IMMEXT(S883)
	S885= GPRegs.Rdata1=>A.In                                   Premise(F380)
	S886= A.In=a                                                Path(S881,S885)
	S887= IMMEXT.Out=>B.In                                      Premise(F381)
	S888= B.In={16{SIMM[0]},SIMM}                               Path(S884,S887)
	S889= A.Out=>ALU.A                                          Premise(F382)
	S890= ALU.A=a                                               Path(S822,S889)
	S891= B.Out=>ALU.B                                          Premise(F383)
	S892= ALU.B={16{SIMM[0]},SIMM}                              Path(S825,S891)
	S893= CU.Func=>ALU.Func                                     Premise(F384)
	S894= ALU.Func=alu_add                                      Path(S878,S893)
	S895= ALU.Out=a+{16{SIMM[0]},SIMM}                          ALU(S890,S892)
	S896= ALU.CMP=Compare0(a+{16{SIMM[0]},SIMM})                ALU(S890,S892)
	S897= ALU.OV=OverFlow(a+{16{SIMM[0]},SIMM})                 ALU(S890,S892)
	S898= ALU.CA=Carry(a+{16{SIMM[0]},SIMM})                    ALU(S890,S892)
	S899= ALU.Out=>ALUOut.In                                    Premise(F385)
	S900= ALUOut.In=a+{16{SIMM[0]},SIMM}                        Path(S895,S899)
	S901= ALU.CMP=>DataCmb.A                                    Premise(F386)
	S902= DataCmb.A=Compare0(a+{16{SIMM[0]},SIMM})              Path(S896,S901)
	S903= XER.SOOut=>DataCmb.B                                  Premise(F387)
	S904= DataCmb.B=so                                          Path(S831,S903)
	S905= DataCmb.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}       DataCmb(S902,S904)
	S906= DataCmb.Out=>DR4bit.In                                Premise(F388)
	S907= DR4bit.In={Compare0(a+{16{SIMM[0]},SIMM}),so}         Path(S905,S906)
	S908= ALU.CA=>CAReg.In                                      Premise(F389)
	S909= CAReg.In=Carry(a+{16{SIMM[0]},SIMM})                  Path(S898,S908)
	S910= IR.Out6_10=>GPRegs.WReg                               Premise(F390)
	S911= GPRegs.WReg=rT                                        Path(S819,S910)
	S912= ALUOut.Out=>GPRegs.WData                              Premise(F391)
	S913= GPRegs.WData=a+{16{SIMM[0]},SIMM}                     Path(S828,S912)
	S914= DR4bit.Out=>CRRegs.CR0In                              Premise(F392)
	S915= CRRegs.CR0In={Compare0(a+{16{SIMM[0]},SIMM}),so}      Path(S832,S914)
	S916= CAReg.Out=>XER.CAIn                                   Premise(F393)
	S917= XER.CAIn=Carry(a+{16{SIMM[0]},SIMM})                  Path(S835,S916)
	S918= CtrlPIDReg=0                                          Premise(F394)
	S919= [PIDReg]=pid                                          PIDReg-Hold(S759,S918)
	S920= CtrlIMMU=0                                            Premise(F395)
	S921= CtrlPC=0                                              Premise(F396)
	S922= CtrlPCInc=0                                           Premise(F397)
	S923= PC[CIA]=addr                                          PC-Hold(S763,S922)
	S924= PC[Out]=addr+4                                        PC-Hold(S764,S921,S922)
	S925= CtrlIAddrReg=0                                        Premise(F398)
	S926= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S766,S925)
	S927= CtrlIMMUHitReg=0                                      Premise(F399)
	S928= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S768,S927)
	S929= CtrlICache=0                                          Premise(F400)
	S930= ICache[addr]={13,rT,rA,SIMM}                          ICache-Hold(S770,S929)
	S931= CtrlICacheReg=0                                       Premise(F401)
	S932= [ICacheReg]={13,rT,rA,SIMM}                           ICacheReg-Hold(S772,S931)
	S933= CtrlICacheHitReg=0                                    Premise(F402)
	S934= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S774,S933)
	S935= CtrlIMem=0                                            Premise(F403)
	S936= IMem[{pid,addr}]={13,rT,rA,SIMM}                      IMem-Hold(S776,S935)
	S937= CtrlIRMux=0                                           Premise(F404)
	S938= CtrlIR=0                                              Premise(F405)
	S939= [IR]={13,rT,rA,SIMM}                                  IR-Hold(S779,S938)
	S940= CtrlGPRegs=0                                          Premise(F406)
	S941= GPRegs[rA]=a                                          GPRegs-Hold(S781,S940)
	S942= CtrlA=0                                               Premise(F407)
	S943= [A]=a                                                 A-Hold(S783,S942)
	S944= CtrlB=0                                               Premise(F408)
	S945= [B]={16{SIMM[0]},SIMM}                                B-Hold(S785,S944)
	S946= CtrlALUOut=0                                          Premise(F409)
	S947= [ALUOut]=a+{16{SIMM[0]},SIMM}                         ALUOut-Hold(S787,S946)
	S948= CtrlXERSO=0                                           Premise(F410)
	S949= XER[SO]=so                                            XER-SO-Hold(S789,S948)
	S950= CtrlXEROV=0                                           Premise(F411)
	S951= CtrlXERCA=0                                           Premise(F412)
	S952= CtrlDR4bit=0                                          Premise(F413)
	S953= [DR4bit]={Compare0(a+{16{SIMM[0]},SIMM}),so}          DR4bit-Hold(S793,S952)
	S954= CtrlCAReg=0                                           Premise(F414)
	S955= [CAReg]=Carry(a+{16{SIMM[0]},SIMM})                   CAReg-Hold(S795,S954)
	S956= CtrlCRRegs=0                                          Premise(F415)
	S957= CtrlCRRegsCR0=0                                       Premise(F416)
	S958= CtrlCRRegsW4bitRegs=0                                 Premise(F417)
	S959= CtrlCRRegsW1bitRegs=0                                 Premise(F418)

WB	S960= PIDReg.Out=pid                                        PIDReg-Out(S919)
	S961= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S919)
	S962= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S919)
	S963= PC.CIA=addr                                           PC-Out(S923)
	S964= PC.CIA31_28=addr[31:28]                               PC-Out(S923)
	S965= PC.Out=addr+4                                         PC-Out(S924)
	S966= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S926)
	S967= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S926)
	S968= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S926)
	S969= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S928)
	S970= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S928)
	S971= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S928)
	S972= ICacheReg.Out={13,rT,rA,SIMM}                         ICacheReg-Out(S932)
	S973= ICacheReg.Out26_31={13,rT,rA,SIMM}[26:31]             ICacheReg-Out(S932)
	S974= ICacheReg.Out30_31={13,rT,rA,SIMM}[30:31]             ICacheReg-Out(S932)
	S975= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S934)
	S976= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S934)
	S977= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S934)
	S978= IR.Out0_5=13                                          IR-Out(S939)
	S979= IR.Out6_10=rT                                         IR-Out(S939)
	S980= IR.Out11_15=rA                                        IR-Out(S939)
	S981= IR.Out16_31=SIMM                                      IR-Out(S939)
	S982= A.Out=a                                               A-Out(S943)
	S983= A.Out26_31=a[26:31]                                   A-Out(S943)
	S984= A.Out30_31=a[30:31]                                   A-Out(S943)
	S985= B.Out={16{SIMM[0]},SIMM}                              B-Out(S945)
	S986= B.Out26_31={16{SIMM[0]},SIMM}[26:31]                  B-Out(S945)
	S987= B.Out30_31={16{SIMM[0]},SIMM}[30:31]                  B-Out(S945)
	S988= ALUOut.Out=a+{16{SIMM[0]},SIMM}                       ALUOut-Out(S947)
	S989= ALUOut.Out26_31=a+{16{SIMM[0]},SIMM}[26:31]           ALUOut-Out(S947)
	S990= ALUOut.Out30_31=a+{16{SIMM[0]},SIMM}[30:31]           ALUOut-Out(S947)
	S991= XER.SOOut=so                                          XER-SO-Out(S949)
	S992= DR4bit.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}        DR4bit-Out(S953)
	S993= DR4bit.Out26_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[26:31]DR4bit-Out(S953)
	S994= DR4bit.Out30_31={Compare0(a+{16{SIMM[0]},SIMM}),so}[30:31]DR4bit-Out(S953)
	S995= CAReg.Out=Carry(a+{16{SIMM[0]},SIMM})                 CAReg-Out(S955)
	S996= CAReg.Out26_31=Carry(a+{16{SIMM[0]},SIMM})[26:31]     CAReg-Out(S955)
	S997= CAReg.Out30_31=Carry(a+{16{SIMM[0]},SIMM})[30:31]     CAReg-Out(S955)
	S998= PIDReg.Out=>IMMU.PID                                  Premise(F419)
	S999= IMMU.PID=pid                                          Path(S960,S998)
	S1000= PC.Out=>IMMU.IEA                                     Premise(F420)
	S1001= IMMU.IEA=addr+4                                      Path(S965,S1000)
	S1002= IMMU.Addr={pid,addr+4}                               IMMU-Search(S999,S1001)
	S1003= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S999,S1001)
	S1004= IMMU.Addr=>IAddrReg.In                               Premise(F421)
	S1005= IAddrReg.In={pid,addr+4}                             Path(S1002,S1004)
	S1006= IMMU.Hit=>IMMUHitReg.In                              Premise(F422)
	S1007= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1003,S1006)
	S1008= PC.Out=>ICache.IEA                                   Premise(F423)
	S1009= ICache.IEA=addr+4                                    Path(S965,S1008)
	S1010= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1009)
	S1011= ICache.Out=>ICacheReg.In                             Premise(F424)
	S1012= ICache.Hit=>ICacheHitReg.In                          Premise(F425)
	S1013= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1010,S1012)
	S1014= IMMUHitReg.Out=>CU.IMemHit                           Premise(F426)
	S1015= CU.IMemHit=IMMUHit(pid,addr)                         Path(S969,S1014)
	S1016= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F427)
	S1017= CU.ICacheHit=ICacheHit(addr)                         Path(S975,S1016)
	S1018= IAddrReg.Out=>IMem.RAddr                             Premise(F428)
	S1019= IMem.RAddr={pid,addr}                                Path(S966,S1018)
	S1020= IMem.Out={13,rT,rA,SIMM}                             IMem-Read(S1019,S936)
	S1021= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1019,S936)
	S1022= IMem.Out=>IRMux.MemData                              Premise(F429)
	S1023= IRMux.MemData={13,rT,rA,SIMM}                        Path(S1020,S1022)
	S1024= ICacheReg.Out=>IRMux.CacheData                       Premise(F430)
	S1025= IRMux.CacheData={13,rT,rA,SIMM}                      Path(S972,S1024)
	S1026= IRMux.Out={13,rT,rA,SIMM}                            IRMux-Select(S1023,S1025)
	S1027= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F431)
	S1028= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S969,S1027)
	S1029= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F432)
	S1030= IRMux.CacheSel=ICacheHit(addr)                       Path(S975,S1029)
	S1031= IRMux.Out=>IR.In                                     Premise(F433)
	S1032= IR.In={13,rT,rA,SIMM}                                Path(S1026,S1031)
	S1033= IMem.MEM8WordOut=>ICache.WData                       Premise(F434)
	S1034= ICache.WData=IMemGet8Word({pid,addr})                Path(S1021,S1033)
	S1035= PC.Out=>ICache.IEA                                   Premise(F435)
	S1036= IR.Out0_5=>CU.Op                                     Premise(F436)
	S1037= CU.Op=13                                             Path(S978,S1036)
	S1038= CU.Func=alu_add                                      CU(S1037)
	S1039= IR.Out11_15=>GPRegs.RReg1                            Premise(F437)
	S1040= GPRegs.RReg1=rA                                      Path(S980,S1039)
	S1041= GPRegs.Rdata1=a                                      GPRegs-Read(S1040,S941)
	S1042= IR.Out16_31=>IMMEXT.In                               Premise(F438)
	S1043= IMMEXT.In=SIMM                                       Path(S981,S1042)
	S1044= IMMEXT.Out={16{SIMM[0]},SIMM}                        IMMEXT(S1043)
	S1045= GPRegs.Rdata1=>A.In                                  Premise(F439)
	S1046= A.In=a                                               Path(S1041,S1045)
	S1047= IMMEXT.Out=>B.In                                     Premise(F440)
	S1048= B.In={16{SIMM[0]},SIMM}                              Path(S1044,S1047)
	S1049= A.Out=>ALU.A                                         Premise(F441)
	S1050= ALU.A=a                                              Path(S982,S1049)
	S1051= B.Out=>ALU.B                                         Premise(F442)
	S1052= ALU.B={16{SIMM[0]},SIMM}                             Path(S985,S1051)
	S1053= CU.Func=>ALU.Func                                    Premise(F443)
	S1054= ALU.Func=alu_add                                     Path(S1038,S1053)
	S1055= ALU.Out=a+{16{SIMM[0]},SIMM}                         ALU(S1050,S1052)
	S1056= ALU.CMP=Compare0(a+{16{SIMM[0]},SIMM})               ALU(S1050,S1052)
	S1057= ALU.OV=OverFlow(a+{16{SIMM[0]},SIMM})                ALU(S1050,S1052)
	S1058= ALU.CA=Carry(a+{16{SIMM[0]},SIMM})                   ALU(S1050,S1052)
	S1059= ALU.Out=>ALUOut.In                                   Premise(F444)
	S1060= ALUOut.In=a+{16{SIMM[0]},SIMM}                       Path(S1055,S1059)
	S1061= ALU.CMP=>DataCmb.A                                   Premise(F445)
	S1062= DataCmb.A=Compare0(a+{16{SIMM[0]},SIMM})             Path(S1056,S1061)
	S1063= XER.SOOut=>DataCmb.B                                 Premise(F446)
	S1064= DataCmb.B=so                                         Path(S991,S1063)
	S1065= DataCmb.Out={Compare0(a+{16{SIMM[0]},SIMM}),so}      DataCmb(S1062,S1064)
	S1066= DataCmb.Out=>DR4bit.In                               Premise(F447)
	S1067= DR4bit.In={Compare0(a+{16{SIMM[0]},SIMM}),so}        Path(S1065,S1066)
	S1068= ALU.CA=>CAReg.In                                     Premise(F448)
	S1069= CAReg.In=Carry(a+{16{SIMM[0]},SIMM})                 Path(S1058,S1068)
	S1070= IR.Out6_10=>GPRegs.WReg                              Premise(F449)
	S1071= GPRegs.WReg=rT                                       Path(S979,S1070)
	S1072= ALUOut.Out=>GPRegs.WData                             Premise(F450)
	S1073= GPRegs.WData=a+{16{SIMM[0]},SIMM}                    Path(S988,S1072)
	S1074= DR4bit.Out=>CRRegs.CR0In                             Premise(F451)
	S1075= CRRegs.CR0In={Compare0(a+{16{SIMM[0]},SIMM}),so}     Path(S992,S1074)
	S1076= CAReg.Out=>XER.CAIn                                  Premise(F452)
	S1077= XER.CAIn=Carry(a+{16{SIMM[0]},SIMM})                 Path(S995,S1076)
	S1078= CtrlPIDReg=0                                         Premise(F453)
	S1079= [PIDReg]=pid                                         PIDReg-Hold(S919,S1078)
	S1080= CtrlIMMU=0                                           Premise(F454)
	S1081= CtrlPC=0                                             Premise(F455)
	S1082= CtrlPCInc=0                                          Premise(F456)
	S1083= PC[CIA]=addr                                         PC-Hold(S923,S1082)
	S1084= PC[Out]=addr+4                                       PC-Hold(S924,S1081,S1082)
	S1085= CtrlIAddrReg=0                                       Premise(F457)
	S1086= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S926,S1085)
	S1087= CtrlIMMUHitReg=0                                     Premise(F458)
	S1088= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S928,S1087)
	S1089= CtrlICache=0                                         Premise(F459)
	S1090= ICache[addr]={13,rT,rA,SIMM}                         ICache-Hold(S930,S1089)
	S1091= CtrlICacheReg=0                                      Premise(F460)
	S1092= [ICacheReg]={13,rT,rA,SIMM}                          ICacheReg-Hold(S932,S1091)
	S1093= CtrlICacheHitReg=0                                   Premise(F461)
	S1094= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S934,S1093)
	S1095= CtrlIMem=0                                           Premise(F462)
	S1096= IMem[{pid,addr}]={13,rT,rA,SIMM}                     IMem-Hold(S936,S1095)
	S1097= CtrlIRMux=0                                          Premise(F463)
	S1098= CtrlIR=0                                             Premise(F464)
	S1099= [IR]={13,rT,rA,SIMM}                                 IR-Hold(S939,S1098)
	S1100= CtrlGPRegs=1                                         Premise(F465)
	S1101= GPRegs[rT]=a+{16{SIMM[0]},SIMM}                      GPRegs-Write(S1071,S1073,S1100)
	S1102= CtrlA=0                                              Premise(F466)
	S1103= [A]=a                                                A-Hold(S943,S1102)
	S1104= CtrlB=0                                              Premise(F467)
	S1105= [B]={16{SIMM[0]},SIMM}                               B-Hold(S945,S1104)
	S1106= CtrlALUOut=0                                         Premise(F468)
	S1107= [ALUOut]=a+{16{SIMM[0]},SIMM}                        ALUOut-Hold(S947,S1106)
	S1108= CtrlXERSO=0                                          Premise(F469)
	S1109= XER[SO]=so                                           XER-SO-Hold(S949,S1108)
	S1110= CtrlXEROV=0                                          Premise(F470)
	S1111= CtrlXERCA=1                                          Premise(F471)
	S1112= XER[CA]=Carry(a+{16{SIMM[0]},SIMM})                  XER-CA-Write(S1077,S1111)
	S1113= CtrlDR4bit=0                                         Premise(F472)
	S1114= [DR4bit]={Compare0(a+{16{SIMM[0]},SIMM}),so}         DR4bit-Hold(S953,S1113)
	S1115= CtrlCAReg=0                                          Premise(F473)
	S1116= [CAReg]=Carry(a+{16{SIMM[0]},SIMM})                  CAReg-Hold(S955,S1115)
	S1117= CtrlCRRegs=0                                         Premise(F474)
	S1118= CtrlCRRegsCR0=1                                      Premise(F475)
	S1119= CRRegs[CR0]={Compare0(a+{16{SIMM[0]},SIMM}),so}      CRRegs-CR0-Write(S1075,S1118)
	S1120= CtrlCRRegsW4bitRegs=0                                Premise(F476)
	S1121= CtrlCRRegsW1bitRegs=0                                Premise(F477)

POST	S1079= [PIDReg]=pid                                         PIDReg-Hold(S919,S1078)
	S1083= PC[CIA]=addr                                         PC-Hold(S923,S1082)
	S1084= PC[Out]=addr+4                                       PC-Hold(S924,S1081,S1082)
	S1086= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S926,S1085)
	S1088= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S928,S1087)
	S1090= ICache[addr]={13,rT,rA,SIMM}                         ICache-Hold(S930,S1089)
	S1092= [ICacheReg]={13,rT,rA,SIMM}                          ICacheReg-Hold(S932,S1091)
	S1094= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S934,S1093)
	S1096= IMem[{pid,addr}]={13,rT,rA,SIMM}                     IMem-Hold(S936,S1095)
	S1099= [IR]={13,rT,rA,SIMM}                                 IR-Hold(S939,S1098)
	S1101= GPRegs[rT]=a+{16{SIMM[0]},SIMM}                      GPRegs-Write(S1071,S1073,S1100)
	S1103= [A]=a                                                A-Hold(S943,S1102)
	S1105= [B]={16{SIMM[0]},SIMM}                               B-Hold(S945,S1104)
	S1107= [ALUOut]=a+{16{SIMM[0]},SIMM}                        ALUOut-Hold(S947,S1106)
	S1109= XER[SO]=so                                           XER-SO-Hold(S949,S1108)
	S1112= XER[CA]=Carry(a+{16{SIMM[0]},SIMM})                  XER-CA-Write(S1077,S1111)
	S1114= [DR4bit]={Compare0(a+{16{SIMM[0]},SIMM}),so}         DR4bit-Hold(S953,S1113)
	S1116= [CAReg]=Carry(a+{16{SIMM[0]},SIMM})                  CAReg-Hold(S955,S1115)
	S1119= CRRegs[CR0]={Compare0(a+{16{SIMM[0]},SIMM}),so}      CRRegs-CR0-Write(S1075,S1118)

