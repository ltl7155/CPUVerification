
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={16,1,0,24}                            Premise(F2)
	S3= CP0[EPC]=epc                                            Premise(F3)
	S4= [PIDReg]=a                                              Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= IMMU.Addr=>IAddrReg.In                                  Premise(F45)
	S8= PC.Out=>IMMU.IEA                                        Premise(F50)
	S9= IMMU.IEA=addr                                           Path(S6,S8)
	S10= CP0.ASID=>IMMU.PID                                     Premise(F51)
	S11= IMMU.PID=pid                                           Path(S5,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S11,S9)
	S13= IAddrReg.In={pid,addr}                                 Path(S12,S7)
	S14= CtrlPIDReg=0                                           Premise(F91)
	S15= [PIDReg]=a                                             PIDReg-Hold(S4,S14)
	S16= CtrlCP0=0                                              Premise(F93)
	S17= CP0[EPC]=epc                                           CP0-Hold(S3,S16)
	S18= CtrlIAddrReg=1                                         Premise(F105)
	S19= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S18)
	S20= CtrlPC=0                                               Premise(F106)
	S21= CtrlPCInc=0                                            Premise(F107)
	S22= PC[Out]=addr                                           PC-Hold(S1,S20,S21)
	S23= CtrlIMem=0                                             Premise(F108)
	S24= IMem[{pid,addr}]={16,1,0,24}                           IMem-Hold(S2,S23)

IMMU	S25= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S19)
	S26= PC.Out=addr                                            PC-Out(S22)
	S27= PC.Out=>ICache.IEA                                     Premise(F152)
	S28= ICache.IEA=addr                                        Path(S26,S27)
	S29= IMem.MEM8WordOut=>ICache.WData                         Premise(F154)
	S30= IAddrReg.Out=>IMem.RAddr                               Premise(F158)
	S31= IMem.RAddr={pid,addr}                                  Path(S25,S30)
	S32= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S31,S24)
	S33= ICache.WData=IMemGet8Word({pid,addr})                  Path(S32,S29)
	S34= CtrlPIDReg=0                                           Premise(F197)
	S35= [PIDReg]=a                                             PIDReg-Hold(S15,S34)
	S36= CtrlCP0=0                                              Premise(F199)
	S37= CP0[EPC]=epc                                           CP0-Hold(S17,S36)
	S38= CtrlICache=1                                           Premise(F202)
	S39= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S28,S33,S38)

ID	S40= PIDReg.Out=a                                           PIDReg-Out(S35)
	S41= CP0.EPC=epc                                            CP0-Read-EPC(S37)
	S42= PIDReg.Out=>CP0.ASIDIn                                 Premise(F217)
	S43= CP0.ASIDIn=a                                           Path(S40,S42)
	S44= CP0.EPC=>PC.In                                         Premise(F280)
	S45= PC.In=epc                                              Path(S41,S44)
	S46= CtrlASIDIn=1                                           Premise(F306)
	S47= CP0[ASID]=a                                            CP0-Write-ASID(S43,S46)
	S48= CtrlICache=0                                           Premise(F310)
	S49= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S39,S48)
	S50= CtrlPC=1                                               Premise(F320)
	S51= CtrlPCInc=0                                            Premise(F321)
	S52= PC[Out]=epc                                            PC-Write(S45,S50,S51)

EX	S53= CtrlCP0=0                                              Premise(F414)
	S54= CP0[ASID]=a                                            CP0-Hold(S47,S53)
	S55= CtrlICache=0                                           Premise(F417)
	S56= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S49,S55)
	S57= CtrlPC=0                                               Premise(F427)
	S58= CtrlPCInc=0                                            Premise(F428)
	S59= PC[Out]=epc                                            PC-Hold(S52,S57,S58)

MEM	S60= CtrlCP0=0                                              Premise(F521)
	S61= CP0[ASID]=a                                            CP0-Hold(S54,S60)
	S62= CtrlICache=0                                           Premise(F524)
	S63= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S56,S62)
	S64= CtrlPC=0                                               Premise(F534)
	S65= CtrlPCInc=0                                            Premise(F535)
	S66= PC[Out]=epc                                            PC-Hold(S59,S64,S65)

DMMU1	S67= CtrlCP0=0                                              Premise(F628)
	S68= CP0[ASID]=a                                            CP0-Hold(S61,S67)
	S69= CtrlICache=0                                           Premise(F631)
	S70= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S63,S69)
	S71= CtrlPC=0                                               Premise(F641)
	S72= CtrlPCInc=0                                            Premise(F642)
	S73= PC[Out]=epc                                            PC-Hold(S66,S71,S72)

DMMU2	S74= CtrlCP0=0                                              Premise(F735)
	S75= CP0[ASID]=a                                            CP0-Hold(S68,S74)
	S76= CtrlICache=0                                           Premise(F738)
	S77= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S70,S76)
	S78= CtrlPC=0                                               Premise(F748)
	S79= CtrlPCInc=0                                            Premise(F749)
	S80= PC[Out]=epc                                            PC-Hold(S73,S78,S79)

WB	S81= CtrlCP0=0                                              Premise(F842)
	S82= CP0[ASID]=a                                            CP0-Hold(S75,S81)
	S83= CtrlICache=0                                           Premise(F845)
	S84= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S77,S83)
	S85= CtrlPC=0                                               Premise(F855)
	S86= CtrlPCInc=0                                            Premise(F856)
	S87= PC[Out]=epc                                            PC-Hold(S80,S85,S86)

POST	S82= CP0[ASID]=a                                            CP0-Hold(S75,S81)
	S84= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S77,S83)
	S87= PC[Out]=epc                                            PC-Hold(S80,S85,S86)

