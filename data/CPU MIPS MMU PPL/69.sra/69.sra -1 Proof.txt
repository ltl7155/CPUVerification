
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,0,rT,rD,sa,3}                           Premise(F3)
	S2= GPR[rT]=a                                               Premise(F4)

IF	S3= PC.Out=addr                                             PC-Out(S0)
	S4= PC.Out=>ICache.IEA                                      Premise(F62)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={0,0,rT,rD,sa,3}                             ICache-Search(S5,S1)
	S7= ICache.Out=>IR_ID.In                                    Premise(F69)
	S8= IR_ID.In={0,0,rT,rD,sa,3}                               Path(S6,S7)
	S9= CtrlIR_ID=1                                             Premise(F112)
	S10= [IR_ID]={0,0,rT,rD,sa,3}                               IR_ID-Write(S8,S9)
	S11= CtrlGPR=0                                              Premise(F116)
	S12= GPR[rT]=a                                              GPR-Hold(S2,S11)
	S13= CtrlPC=0                                               Premise(F118)
	S14= CtrlPCInc=1                                            Premise(F119)
	S15= PC[Out]=addr+4                                         PC-Inc(S0,S13,S14)

ID	S16= IR_ID.Out={0,0,rT,rD,sa,3}                             IR-Out(S10)
	S17= IR_ID.Out20_16=rT                                      IR-Out(S10)
	S18= FU.OutID2=>B_EX.In                                     Premise(F254)
	S19= GPR.Rdata2=>FU.InID2                                   Premise(F297)
	S20= IR_ID.Out20_16=>GPR.RReg2                              Premise(F303)
	S21= GPR.RReg2=rT                                           Path(S17,S20)
	S22= GPR.Rdata2=a                                           GPR-Read(S21,S12)
	S23= FU.InID2=a                                             Path(S22,S19)
	S24= FU.OutID2=FU(a)                                        FU-Forward(S23)
	S25= B_EX.In=FU(a)                                          Path(S24,S18)
	S26= IR_ID.Out=>IR_EX.In                                    Premise(F313)
	S27= IR_EX.In={0,0,rT,rD,sa,3}                              Path(S16,S26)
	S28= CtrlB_EX=1                                             Premise(F349)
	S29= [B_EX]=FU(a)                                           B_EX-Write(S25,S28)
	S30= CtrlIR_EX=1                                            Premise(F356)
	S31= [IR_EX]={0,0,rT,rD,sa,3}                               IR_EX-Write(S27,S30)
	S32= CtrlPC=0                                               Premise(F363)
	S33= CtrlPCInc=0                                            Premise(F364)
	S34= PC[Out]=addr+4                                         PC-Hold(S15,S32,S33)

EX	S35= B_EX.Out=FU(a)                                         B_EX-Out(S29)
	S36= IR_EX.Out={0,0,rT,rD,sa,3}                             IR_EX-Out(S31)
	S37= IR_EX.Out10_6=sa                                       IR_EX-Out(S31)
	S38= SU.Out=>ALUOut_MEM.In                                  Premise(F374)
	S39= IR_EX.Out=>IR_MEM.In                                   Premise(F438)
	S40= IR_MEM.In={0,0,rT,rD,sa,3}                             Path(S36,S39)
	S41= B_EX.Out=>SU.Data                                      Premise(F441)
	S42= SU.Data=FU(a)                                          Path(S35,S41)
	S43= IR_EX.Out10_6=>SU.Shamt                                Premise(F443)
	S44= SU.Shamt=sa                                            Path(S37,S43)
	S45= SU.Out=FU(a)>>sa                                       SU(S42,S44)
	S46= ALUOut_MEM.In=FU(a)>>sa                                Path(S45,S38)
	S47= CtrlALUOut_MEM=1                                       Premise(F468)
	S48= [ALUOut_MEM]=FU(a)>>sa                                 ALUOut_MEM-Write(S46,S47)
	S49= CtrlIR_MEM=1                                           Premise(F482)
	S50= [IR_MEM]={0,0,rT,rD,sa,3}                              IR_MEM-Write(S40,S49)
	S51= CtrlPC=0                                               Premise(F486)
	S52= CtrlPCInc=0                                            Premise(F487)
	S53= PC[Out]=addr+4                                         PC-Hold(S34,S51,S52)

MEM	S54= ALUOut_MEM.Out=FU(a)>>sa                               ALUOut_MEM-Out(S48)
	S55= IR_MEM.Out={0,0,rT,rD,sa,3}                            IR_MEM-Out(S50)
	S56= ALUOut_MEM.Out=>ALUOut_DMMU1.In                        Premise(F495)
	S57= ALUOut_DMMU1.In=FU(a)>>sa                              Path(S54,S56)
	S58= IR_MEM.Out=>IR_DMMU1.In                                Premise(F556)
	S59= IR_DMMU1.In={0,0,rT,rD,sa,3}                           Path(S55,S58)
	S60= CtrlALUOut_DMMU1=1                                     Premise(F591)
	S61= [ALUOut_DMMU1]=FU(a)>>sa                               ALUOut_DMMU1-Write(S57,S60)
	S62= CtrlIR_DMMU1=1                                         Premise(F599)
	S63= [IR_DMMU1]={0,0,rT,rD,sa,3}                            IR_DMMU1-Write(S59,S62)
	S64= CtrlPC=0                                               Premise(F608)
	S65= CtrlPCInc=0                                            Premise(F609)
	S66= PC[Out]=addr+4                                         PC-Hold(S53,S64,S65)

DMMU1	S67= ALUOut_DMMU1.Out=FU(a)>>sa                             ALUOut_DMMU1-Out(S61)
	S68= IR_DMMU1.Out={0,0,rT,rD,sa,3}                          IR_DMMU1-Out(S63)
	S69= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                      Premise(F618)
	S70= ALUOut_DMMU2.In=FU(a)>>sa                              Path(S67,S69)
	S71= IR_DMMU1.Out=>IR_DMMU2.In                              Premise(F679)
	S72= IR_DMMU2.In={0,0,rT,rD,sa,3}                           Path(S68,S71)
	S73= CtrlALUOut_DMMU2=1                                     Premise(F714)
	S74= [ALUOut_DMMU2]=FU(a)>>sa                               ALUOut_DMMU2-Write(S70,S73)
	S75= CtrlIR_DMMU2=1                                         Premise(F722)
	S76= [IR_DMMU2]={0,0,rT,rD,sa,3}                            IR_DMMU2-Write(S72,S75)
	S77= CtrlPC=0                                               Premise(F730)
	S78= CtrlPCInc=0                                            Premise(F731)
	S79= PC[Out]=addr+4                                         PC-Hold(S66,S77,S78)

DMMU2	S80= ALUOut_DMMU2.Out=FU(a)>>sa                             ALUOut_DMMU2-Out(S74)
	S81= IR_DMMU2.Out={0,0,rT,rD,sa,3}                          IR_DMMU2-Out(S76)
	S82= ALUOut_DMMU2.Out=>ALUOut_WB.In                         Premise(F742)
	S83= ALUOut_WB.In=FU(a)>>sa                                 Path(S80,S82)
	S84= IR_DMMU2.Out=>IR_WB.In                                 Premise(F806)
	S85= IR_WB.In={0,0,rT,rD,sa,3}                              Path(S81,S84)
	S86= CtrlALUOut_WB=1                                        Premise(F837)
	S87= [ALUOut_WB]=FU(a)>>sa                                  ALUOut_WB-Write(S83,S86)
	S88= CtrlIR_WB=1                                            Premise(F849)
	S89= [IR_WB]={0,0,rT,rD,sa,3}                               IR_WB-Write(S85,S88)
	S90= CtrlPC=0                                               Premise(F852)
	S91= CtrlPCInc=0                                            Premise(F853)
	S92= PC[Out]=addr+4                                         PC-Hold(S79,S90,S91)

WB	S93= ALUOut_WB.Out=FU(a)>>sa                                ALUOut_WB-Out(S87)
	S94= IR_WB.Out15_11=rD                                      IR-Out(S89)
	S95= ALUOut_WB.Out=>GPR.WData                               Premise(F915)
	S96= GPR.WData=FU(a)>>sa                                    Path(S93,S95)
	S97= IR_WB.Out15_11=>GPR.WReg                               Premise(F916)
	S98= GPR.WReg=rD                                            Path(S94,S97)
	S99= CtrlGPR=1                                              Premise(F972)
	S100= GPR[rD]=FU(a)>>sa                                     GPR-Write(S98,S96,S99)
	S101= CtrlPC=0                                              Premise(F974)
	S102= CtrlPCInc=0                                           Premise(F975)
	S103= PC[Out]=addr+4                                        PC-Hold(S92,S101,S102)

POST	S100= GPR[rD]=FU(a)>>sa                                     GPR-Write(S98,S96,S99)
	S103= PC[Out]=addr+4                                        PC-Hold(S92,S101,S102)

