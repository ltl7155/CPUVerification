
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={1,rS,1,offset}                            Premise(F3)

IF	S2= PC.Out=addr                                             PC-Out(S0)
	S3= PC.Out=>ICache.IEA                                      Premise(F61)
	S4= ICache.IEA=addr                                         Path(S2,S3)
	S5= ICache.Out={1,rS,1,offset}                              ICache-Search(S4,S1)
	S6= ICache.Out=>IR_ID.In                                    Premise(F68)
	S7= IR_ID.In={1,rS,1,offset}                                Path(S5,S6)
	S8= CtrlIR_ID=1                                             Premise(F118)
	S9= [IR_ID]={1,rS,1,offset}                                 IR_ID-Write(S7,S8)
	S10= GPR[rS]=a                                              Premise(F131)

ID	S11= IR_ID.Out25_21=rS                                      IR-Out(S9)
	S12= FU.OutID1=>A_EX.In                                     Premise(F263)
	S13= FU.OutID2=>B_EX.In                                     Premise(F265)
	S14= GPR.Rdata1=>FU.InID1                                   Premise(F309)
	S15= GPR.Rdata2=>FU.InID2                                   Premise(F311)
	S16= IR_ID.Out25_21=>GPR.RReg1                              Premise(F313)
	S17= GPR.RReg1=rS                                           Path(S11,S16)
	S18= GPR.Rdata1=a                                           GPR-Read(S17,S10)
	S19= FU.InID1=a                                             Path(S18,S14)
	S20= FU.OutID1=FU(a)                                        FU-Forward(S19)
	S21= A_EX.In=FU(a)                                          Path(S20,S12)
	S22= GPR.Rdata2=32'b0                                       GPR-ReadGPR0()
	S23= FU.InID2=32'b0                                         Path(S22,S15)
	S24= FU.OutID2=FU(32'b0)                                    FU-Forward(S23)
	S25= B_EX.In=FU(32'b0)                                      Path(S24,S13)
	S26= CtrlA_EX=1                                             Premise(F358)
	S27= [A_EX]=FU(a)                                           A_EX-Write(S21,S26)
	S28= CtrlB_EX=1                                             Premise(F361)
	S29= [B_EX]=FU(32'b0)                                       B_EX-Write(S25,S28)

EX	S30= A_EX.Out=FU(a)                                         A_EX-Out(S27)
	S31= B_EX.Out=FU(32'b0)                                     B_EX-Out(S29)
	S32= A_EX.Out=>CMPU.A                                       Premise(F395)
	S33= CMPU.A=FU(a)                                           Path(S30,S32)
	S34= B_EX.Out=>CMPU.B                                       Premise(F396)
	S35= CMPU.B=FU(32'b0)                                       Path(S31,S34)
	S36= CMPU.lt=CompareS(FU(a),FU(32'b0))                      CMPU-CMPS(S33,S35)
	S37= CMPU.lt=>ConditionReg_MEM.In                           Premise(F427)
	S38= ConditionReg_MEM.In=CompareS(FU(a),FU(32'b0))          Path(S36,S37)
	S39= CtrlConditionReg_MEM=1                                 Premise(F496)
	S40= [ConditionReg_MEM]=CompareS(FU(a),FU(32'b0))           ConditionReg_MEM-Write(S38,S39)

MEM	S41= ConditionReg_MEM.Out=CompareS(FU(a),FU(32'b0))         ConditionReg_MEM-Out(S40)
	S42= ConditionReg_MEM.Out=>ConditionReg_WB.In               Premise(F557)
	S43= ConditionReg_WB.In=CompareS(FU(a),FU(32'b0))           Path(S41,S42)
	S44= CtrlConditionReg_WB=1                                  Premise(F627)
	S45= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Write(S43,S44)

WB	S46= CtrlConditionReg_WB=0                                  Premise(F1011)
	S47= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Hold(S45,S46)

POST	S47= [ConditionReg_WB]=CompareS(FU(a),FU(32'b0))            ConditionReg_WB-Hold(S45,S46)

