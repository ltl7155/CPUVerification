
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= ICache[addr]={0,rs,rt,code,51}                          Premise(F3)
	S3= GPR[rs]=a                                               Premise(F4)
	S4= GPR[rt]=b                                               Premise(F5)

IF	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>ICache.IEA                                      Premise(F10)
	S7= ICache.IEA=addr                                         Path(S5,S6)
	S8= ICache.Out={0,rs,rt,code,51}                            ICache-Search(S7,S2)
	S9= ICache.Out=>IR.In                                       Premise(F11)
	S10= IR.In={0,rs,rt,code,51}                                Path(S8,S9)
	S11= CtrlCP0=0                                              Premise(F15)
	S12= CP0[ASID]=pid                                          CP0-Hold(S0,S11)
	S13= CtrlPC=0                                               Premise(F19)
	S14= CtrlPCInc=1                                            Premise(F20)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR=1                                               Premise(F23)
	S17= [IR]={0,rs,rt,code,51}                                 IR-Write(S10,S16)
	S18= CtrlGPR=0                                              Premise(F27)
	S19= GPR[rs]=a                                              GPR-Hold(S3,S18)
	S20= GPR[rt]=b                                              GPR-Hold(S4,S18)

ID	S21= IR.Out25_21=rs                                         IR-Out(S17)
	S22= IR.Out20_16=rt                                         IR-Out(S17)
	S23= IR.Out25_21=>GPR.RReg1                                 Premise(F51)
	S24= GPR.RReg1=rs                                           Path(S21,S23)
	S25= GPR.Rdata1=a                                           GPR-Read(S24,S19)
	S26= IR.Out20_16=>GPR.RReg2                                 Premise(F52)
	S27= GPR.RReg2=rt                                           Path(S22,S26)
	S28= GPR.Rdata2=b                                           GPR-Read(S27,S20)
	S29= GPR.Rdata1=>A.In                                       Premise(F54)
	S30= A.In=a                                                 Path(S25,S29)
	S31= GPR.Rdata2=>B.In                                       Premise(F55)
	S32= B.In=b                                                 Path(S28,S31)
	S33= CtrlCP0=0                                              Premise(F57)
	S34= CP0[ASID]=pid                                          CP0-Hold(S12,S33)
	S35= CtrlPC=0                                               Premise(F61)
	S36= CtrlPCInc=0                                            Premise(F62)
	S37= PC[Out]=addr+4                                         PC-Hold(S15,S35,S36)
	S38= CtrlA=1                                                Premise(F70)
	S39= [A]=a                                                  A-Write(S30,S38)
	S40= CtrlB=1                                                Premise(F71)
	S41= [B]=b                                                  B-Write(S32,S40)

EX	S42= A.Out=a                                                A-Out(S39)
	S43= B.Out=b                                                B-Out(S41)
	S44= A.Out=>CMPU.A                                          Premise(F74)
	S45= CMPU.A=a                                               Path(S42,S44)
	S46= B.Out=>CMPU.B                                          Premise(F75)
	S47= CMPU.B=b                                               Path(S43,S46)
	S48= CMPU.lt=CompareU(a,b)                                  CMPU-CMPU(S45,S47)
	S49= CMPU.lt=>ConditionReg.In                               Premise(F77)
	S50= ConditionReg.In=CompareU(a,b)                          Path(S48,S49)
	S51= CtrlCP0=0                                              Premise(F79)
	S52= CP0[ASID]=pid                                          CP0-Hold(S34,S51)
	S53= CtrlPC=0                                               Premise(F83)
	S54= CtrlPCInc=0                                            Premise(F84)
	S55= PC[Out]=addr+4                                         PC-Hold(S37,S53,S54)
	S56= CtrlConditionReg=1                                     Premise(F94)
	S57= [ConditionReg]=CompareU(a,b)                           ConditionReg-Write(S50,S56)

MEM	S58= CP0.ASID=pid                                           CP0-Read-ASID(S52)
	S59= PC.Out=addr+4                                          PC-Out(S55)
	S60= PC.Out=>CP0.EPCIn                                      Premise(F96)
	S61= CP0.EPCIn=addr+4                                       Path(S59,S60)
	S62= CP0.ExCodeIn=5'h0d                                     Premise(F97)
	S63= CP0.ASID=>PIDReg.In                                    Premise(F99)
	S64= PIDReg.In=pid                                          Path(S58,S63)
	S65= CtrlEPCIn=1                                            Premise(F103)
	S66= CP0[EPC]=addr+4                                        CP0-Write-EPC(S61,S65)
	S67= CtrlExCodeIn=1                                         Premise(F104)
	S68= CP0[ExCode]=5'h0d                                      CP0-Write-ExCode(S62,S67)
	S69= CtrlConditionReg=0                                     Premise(F117)
	S70= [ConditionReg]=CompareU(a,b)                           ConditionReg-Hold(S57,S69)
	S71= CtrlPIDReg=1                                           Premise(F118)
	S72= [PIDReg]=pid                                           PIDReg-Write(S64,S71)

MEM(DMMU1)	S73= CtrlCP0=0                                              Premise(F120)
	S74= CP0[EPC]=addr+4                                        CP0-Hold(S66,S73)
	S75= CP0[ExCode]=5'h0d                                      CP0-Hold(S68,S73)
	S76= CtrlConditionReg=0                                     Premise(F135)
	S77= [ConditionReg]=CompareU(a,b)                           ConditionReg-Hold(S70,S76)
	S78= CtrlPIDReg=0                                           Premise(F136)
	S79= [PIDReg]=pid                                           PIDReg-Hold(S72,S78)

MEM(DMMU2)	S80= CtrlCP0=0                                              Premise(F138)
	S81= CP0[EPC]=addr+4                                        CP0-Hold(S74,S80)
	S82= CP0[ExCode]=5'h0d                                      CP0-Hold(S75,S80)
	S83= CtrlConditionReg=0                                     Premise(F153)
	S84= [ConditionReg]=CompareU(a,b)                           ConditionReg-Hold(S77,S83)
	S85= CtrlPIDReg=0                                           Premise(F154)
	S86= [PIDReg]=pid                                           PIDReg-Hold(S79,S85)

WB	S87= CtrlCP0=0                                              Premise(F156)
	S88= CP0[EPC]=addr+4                                        CP0-Hold(S81,S87)
	S89= CP0[ExCode]=5'h0d                                      CP0-Hold(S82,S87)
	S90= CtrlConditionReg=0                                     Premise(F171)
	S91= [ConditionReg]=CompareU(a,b)                           ConditionReg-Hold(S84,S90)
	S92= CtrlPIDReg=0                                           Premise(F172)
	S93= [PIDReg]=pid                                           PIDReg-Hold(S86,S92)

POST	S88= CP0[EPC]=addr+4                                        CP0-Hold(S81,S87)
	S89= CP0[ExCode]=5'h0d                                      CP0-Hold(S82,S87)
	S91= [ConditionReg]=CompareU(a,b)                           ConditionReg-Hold(S84,S90)
	S93= [PIDReg]=pid                                           PIDReg-Hold(S86,S92)

