
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={17,8,cc,0,0,offset}                   Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= PC.Out=>IMem.RAddr                                      Premise(F3)
	S6= IMem.RAddr=addr                                         Path(S4,S5)
	S7= CP0.ASID=>IMem.ASID                                     Premise(F4)
	S8= IMem.ASID=pid                                           Path(S3,S7)
	S9= IMem.Out={17,8,cc,0,0,offset}                           IMem-Read(S8,S6,S2)
	S10= IMem.Out=>IR.In                                        Premise(F5)
	S11= IR.In={17,8,cc,0,0,offset}                             Path(S9,S10)
	S12= CtrlPC=0                                               Premise(F6)
	S13= CtrlPCInc=1                                            Premise(F7)
	S14= PC[Out]=addr+4                                         PC-Inc(S1,S12,S13)
	S15= PC[CIA]=addr                                           PC-Inc(S1,S12,S13)
	S16= CtrlIMem=0                                             Premise(F8)
	S17= IMem[{pid,addr}]={17,8,cc,0,0,offset}                  IMem-Hold(S2,S16)
	S18= CtrlASIDIn=0                                           Premise(F9)
	S19= CtrlCP0=0                                              Premise(F10)
	S20= CP0[ASID]=pid                                          CP0-Hold(S0,S19)
	S21= CtrlEPCIn=0                                            Premise(F11)
	S22= CtrlExCodeIn=0                                         Premise(F12)
	S23= CtrlIR=1                                               Premise(F13)
	S24= [IR]={17,8,cc,0,0,offset}                              IR-Write(S11,S23)
	S25= CtrlB=0                                                Premise(F14)
	S26= CtrlALUOut=0                                           Premise(F15)
	S27= CtrlCP1=0                                              Premise(F16)
	S28= CtrlConditionReg=0                                     Premise(F17)

ID	S29= PC.Out=addr+4                                          PC-Out(S14)
	S30= PC.CIA=addr                                            PC-Out(S15)
	S31= PC.CIA31_28=addr[31:28]                                PC-Out(S15)
	S32= CP0.ASID=pid                                           CP0-Read-ASID(S20)
	S33= IR.Out={17,8,cc,0,0,offset}                            IR-Out(S24)
	S34= IR.Out31_26=17                                         IR-Out(S24)
	S35= IR.Out25_21=8                                          IR-Out(S24)
	S36= IR.Out20_18=cc                                         IR-Out(S24)
	S37= IR.Out17=0                                             IR-Out(S24)
	S38= IR.Out16=0                                             IR-Out(S24)
	S39= IR.Out15_0=offset                                      IR-Out(S24)
	S40= IR.Out31_26=>CU.Op                                     Premise(F18)
	S41= CU.Op=17                                               Path(S34,S40)
	S42= IR.Out25_21=>CU.IRFunc2                                Premise(F19)
	S43= CU.IRFunc2=8                                           Path(S35,S42)
	S44= CU.Func=alu_add                                        CU(S41,S43)
	S45= IR.Out15_0=>SEXT.In                                    Premise(F20)
	S46= SEXT.In=offset                                         Path(S39,S45)
	S47= SEXT.Out={14{offset[15]},offset,2{0}}                  SEXT(S46)
	S48= SEXT.Out=>B.In                                         Premise(F21)
	S49= B.In={14{offset[15]},offset,2{0}}                      Path(S47,S48)
	S50= CtrlPC=0                                               Premise(F22)
	S51= CtrlPCInc=0                                            Premise(F23)
	S52= PC[CIA]=addr                                           PC-Hold(S15,S51)
	S53= PC[Out]=addr+4                                         PC-Hold(S14,S50,S51)
	S54= CtrlIMem=0                                             Premise(F24)
	S55= IMem[{pid,addr}]={17,8,cc,0,0,offset}                  IMem-Hold(S17,S54)
	S56= CtrlASIDIn=0                                           Premise(F25)
	S57= CtrlCP0=0                                              Premise(F26)
	S58= CP0[ASID]=pid                                          CP0-Hold(S20,S57)
	S59= CtrlEPCIn=0                                            Premise(F27)
	S60= CtrlExCodeIn=0                                         Premise(F28)
	S61= CtrlIR=0                                               Premise(F29)
	S62= [IR]={17,8,cc,0,0,offset}                              IR-Hold(S24,S61)
	S63= CtrlB=1                                                Premise(F30)
	S64= [B]={14{offset[15]},offset,2{0}}                       B-Write(S49,S63)
	S65= CtrlALUOut=0                                           Premise(F31)
	S66= CtrlCP1=0                                              Premise(F32)
	S67= CtrlConditionReg=0                                     Premise(F33)

EX	S68= PC.CIA=addr                                            PC-Out(S52)
	S69= PC.CIA31_28=addr[31:28]                                PC-Out(S52)
	S70= PC.Out=addr+4                                          PC-Out(S53)
	S71= CP0.ASID=pid                                           CP0-Read-ASID(S58)
	S72= IR.Out={17,8,cc,0,0,offset}                            IR-Out(S62)
	S73= IR.Out31_26=17                                         IR-Out(S62)
	S74= IR.Out25_21=8                                          IR-Out(S62)
	S75= IR.Out20_18=cc                                         IR-Out(S62)
	S76= IR.Out17=0                                             IR-Out(S62)
	S77= IR.Out16=0                                             IR-Out(S62)
	S78= IR.Out15_0=offset                                      IR-Out(S62)
	S79= B.Out={14{offset[15]},offset,2{0}}                     B-Out(S64)
	S80= B.Out1_0={{14{offset[15]},offset,2{0}}}[1:0]           B-Out(S64)
	S81= B.Out4_0={{14{offset[15]},offset,2{0}}}[4:0]           B-Out(S64)
	S82= PC.CIA=>ALU.A                                          Premise(F34)
	S83= ALU.A=addr                                             Path(S68,S82)
	S84= B.Out=>ALU.B                                           Premise(F35)
	S85= ALU.B={14{offset[15]},offset,2{0}}                     Path(S79,S84)
	S86= ALU.Func=6'b010010                                     Premise(F36)
	S87= ALU.Out=addr+{14{offset[15]},offset,2{0}}              ALU(S83,S85)
	S88= ALU.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]    ALU(S83,S85)
	S89= ALU.CMP=Compare0(addr+{14{offset[15]},offset,2{0}})    ALU(S83,S85)
	S90= ALU.OV=OverFlow(addr+{14{offset[15]},offset,2{0}})     ALU(S83,S85)
	S91= ALU.CA=Carry(addr+{14{offset[15]},offset,2{0}})        ALU(S83,S85)
	S92= ALU.Out=>ALUOut.In                                     Premise(F37)
	S93= ALUOut.In=addr+{14{offset[15]},offset,2{0}}            Path(S87,S92)
	S94= CtrlPC=0                                               Premise(F38)
	S95= CtrlPCInc=0                                            Premise(F39)
	S96= PC[CIA]=addr                                           PC-Hold(S52,S95)
	S97= PC[Out]=addr+4                                         PC-Hold(S53,S94,S95)
	S98= CtrlIMem=0                                             Premise(F40)
	S99= IMem[{pid,addr}]={17,8,cc,0,0,offset}                  IMem-Hold(S55,S98)
	S100= CtrlASIDIn=0                                          Premise(F41)
	S101= CtrlCP0=0                                             Premise(F42)
	S102= CP0[ASID]=pid                                         CP0-Hold(S58,S101)
	S103= CtrlEPCIn=0                                           Premise(F43)
	S104= CtrlExCodeIn=0                                        Premise(F44)
	S105= CtrlIR=0                                              Premise(F45)
	S106= [IR]={17,8,cc,0,0,offset}                             IR-Hold(S62,S105)
	S107= CtrlB=0                                               Premise(F46)
	S108= [B]={14{offset[15]},offset,2{0}}                      B-Hold(S64,S107)
	S109= CtrlALUOut=1                                          Premise(F47)
	S110= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Write(S93,S109)
	S111= CtrlCP1=0                                             Premise(F48)
	S112= CtrlConditionReg=0                                    Premise(F49)

MEM	S113= PC.CIA=addr                                           PC-Out(S96)
	S114= PC.CIA31_28=addr[31:28]                               PC-Out(S96)
	S115= PC.Out=addr+4                                         PC-Out(S97)
	S116= CP0.ASID=pid                                          CP0-Read-ASID(S102)
	S117= IR.Out={17,8,cc,0,0,offset}                           IR-Out(S106)
	S118= IR.Out31_26=17                                        IR-Out(S106)
	S119= IR.Out25_21=8                                         IR-Out(S106)
	S120= IR.Out20_18=cc                                        IR-Out(S106)
	S121= IR.Out17=0                                            IR-Out(S106)
	S122= IR.Out16=0                                            IR-Out(S106)
	S123= IR.Out15_0=offset                                     IR-Out(S106)
	S124= B.Out={14{offset[15]},offset,2{0}}                    B-Out(S108)
	S125= B.Out1_0={{14{offset[15]},offset,2{0}}}[1:0]          B-Out(S108)
	S126= B.Out4_0={{14{offset[15]},offset,2{0}}}[4:0]          B-Out(S108)
	S127= ALUOut.Out=addr+{14{offset[15]},offset,2{0}}          ALUOut-Out(S110)
	S128= ALUOut.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut-Out(S110)
	S129= ALUOut.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut-Out(S110)
	S130= IR.Out20_18=>CP1.cc                                   Premise(F50)
	S131= CP1.cc=cc                                             Path(S120,S130)
	S132= IR.Out16=>CP1.tf                                      Premise(F51)
	S133= CP1.tf=0                                              Path(S122,S132)
	S134= CP1.fp=FPConditionCode(cc,0)                          FP-PRODUCT(S131,S133)
	S135= CP1.fp=>ConditionReg.In                               Premise(F52)
	S136= ConditionReg.In=FPConditionCode(cc,0)                 Path(S134,S135)
	S137= CtrlPC=0                                              Premise(F53)
	S138= CtrlPCInc=0                                           Premise(F54)
	S139= PC[CIA]=addr                                          PC-Hold(S96,S138)
	S140= PC[Out]=addr+4                                        PC-Hold(S97,S137,S138)
	S141= CtrlIMem=0                                            Premise(F55)
	S142= IMem[{pid,addr}]={17,8,cc,0,0,offset}                 IMem-Hold(S99,S141)
	S143= CtrlASIDIn=0                                          Premise(F56)
	S144= CtrlCP0=0                                             Premise(F57)
	S145= CP0[ASID]=pid                                         CP0-Hold(S102,S144)
	S146= CtrlEPCIn=0                                           Premise(F58)
	S147= CtrlExCodeIn=0                                        Premise(F59)
	S148= CtrlIR=0                                              Premise(F60)
	S149= [IR]={17,8,cc,0,0,offset}                             IR-Hold(S106,S148)
	S150= CtrlB=0                                               Premise(F61)
	S151= [B]={14{offset[15]},offset,2{0}}                      B-Hold(S108,S150)
	S152= CtrlALUOut=0                                          Premise(F62)
	S153= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Hold(S110,S152)
	S154= CtrlCP1=0                                             Premise(F63)
	S155= CtrlConditionReg=1                                    Premise(F64)
	S156= [ConditionReg]=FPConditionCode(cc,0)                  ConditionReg-Write(S136,S155)

WB	S157= PC.CIA=addr                                           PC-Out(S139)
	S158= PC.CIA31_28=addr[31:28]                               PC-Out(S139)
	S159= PC.Out=addr+4                                         PC-Out(S140)
	S160= CP0.ASID=pid                                          CP0-Read-ASID(S145)
	S161= IR.Out={17,8,cc,0,0,offset}                           IR-Out(S149)
	S162= IR.Out31_26=17                                        IR-Out(S149)
	S163= IR.Out25_21=8                                         IR-Out(S149)
	S164= IR.Out20_18=cc                                        IR-Out(S149)
	S165= IR.Out17=0                                            IR-Out(S149)
	S166= IR.Out16=0                                            IR-Out(S149)
	S167= IR.Out15_0=offset                                     IR-Out(S149)
	S168= B.Out={14{offset[15]},offset,2{0}}                    B-Out(S151)
	S169= B.Out1_0={{14{offset[15]},offset,2{0}}}[1:0]          B-Out(S151)
	S170= B.Out4_0={{14{offset[15]},offset,2{0}}}[4:0]          B-Out(S151)
	S171= ALUOut.Out=addr+{14{offset[15]},offset,2{0}}          ALUOut-Out(S153)
	S172= ALUOut.Out1_0={addr+{14{offset[15]},offset,2{0}}}[1:0]ALUOut-Out(S153)
	S173= ALUOut.Out4_0={addr+{14{offset[15]},offset,2{0}}}[4:0]ALUOut-Out(S153)
	S174= ConditionReg.Out=FPConditionCode(cc,0)                ConditionReg-Out(S156)
	S175= ConditionReg.Out1_0={FPConditionCode(cc,0)}[1:0]      ConditionReg-Out(S156)
	S176= ConditionReg.Out4_0={FPConditionCode(cc,0)}[4:0]      ConditionReg-Out(S156)
	S177= ALUOut.Out=>PC.In                                     Premise(F65)
	S178= PC.In=addr+{14{offset[15]},offset,2{0}}               Path(S171,S177)
	S179= ConditionReg.Out=>CU.fp                               Premise(F66)
	S180= CU.fp=FPConditionCode(cc,0)                           Path(S174,S179)
	S181= CtrlPC=1                                              Premise(F67)
	S182= CtrlPCInc=0                                           Premise(F68)
	S183= PC[CIA]=addr                                          PC-Hold(S139,S182)
	S184= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Write(S178,S181,S182)
	S185= CtrlIMem=0                                            Premise(F69)
	S186= IMem[{pid,addr}]={17,8,cc,0,0,offset}                 IMem-Hold(S142,S185)
	S187= CtrlASIDIn=0                                          Premise(F70)
	S188= CtrlCP0=0                                             Premise(F71)
	S189= CP0[ASID]=pid                                         CP0-Hold(S145,S188)
	S190= CtrlEPCIn=0                                           Premise(F72)
	S191= CtrlExCodeIn=0                                        Premise(F73)
	S192= CtrlIR=0                                              Premise(F74)
	S193= [IR]={17,8,cc,0,0,offset}                             IR-Hold(S149,S192)
	S194= CtrlB=0                                               Premise(F75)
	S195= [B]={14{offset[15]},offset,2{0}}                      B-Hold(S151,S194)
	S196= CtrlALUOut=0                                          Premise(F76)
	S197= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Hold(S153,S196)
	S198= CtrlCP1=0                                             Premise(F77)
	S199= CtrlConditionReg=0                                    Premise(F78)
	S200= [ConditionReg]=FPConditionCode(cc,0)                  ConditionReg-Hold(S156,S199)

POST	S183= PC[CIA]=addr                                          PC-Hold(S139,S182)
	S184= PC[Out]=addr+{14{offset[15]},offset,2{0}}             PC-Write(S178,S181,S182)
	S186= IMem[{pid,addr}]={17,8,cc,0,0,offset}                 IMem-Hold(S142,S185)
	S189= CP0[ASID]=pid                                         CP0-Hold(S145,S188)
	S193= [IR]={17,8,cc,0,0,offset}                             IR-Hold(S149,S192)
	S195= [B]={14{offset[15]},offset,2{0}}                      B-Hold(S151,S194)
	S197= [ALUOut]=addr+{14{offset[15]},offset,2{0}}            ALUOut-Hold(S153,S196)
	S200= [ConditionReg]=FPConditionCode(cc,0)                  ConditionReg-Hold(S156,S199)

