
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={33,rS,rT,offset}                      Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= CP0.ASID=>IMMU.PID                                      Premise(F3)
	S6= IMMU.PID=pid                                            Path(S3,S5)
	S7= PC.Out=>IMMU.IEA                                        Premise(F4)
	S8= IMMU.IEA=addr                                           Path(S4,S7)
	S9= IMMU.Addr={pid,addr}                                    IMMU-Search(S6,S8)
	S10= IMMU.Addr=>IAddrReg.In                                 Premise(F5)
	S11= IAddrReg.In={pid,addr}                                 Path(S9,S10)
	S12= CtrlCP0=0                                              Premise(F20)
	S13= CP0[ASID]=pid                                          CP0-Hold(S0,S12)
	S14= CtrlPC=0                                               Premise(F24)
	S15= CtrlPCInc=0                                            Premise(F25)
	S16= PC[Out]=addr                                           PC-Hold(S1,S14,S15)
	S17= CtrlIAddrReg=1                                         Premise(F26)
	S18= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S11,S17)
	S19= CtrlIMem=0                                             Premise(F31)
	S20= IMem[{pid,addr}]={33,rS,rT,offset}                     IMem-Hold(S2,S19)
	S21= GPR[rS]=base                                           Premise(F61)

IF(IMMU)	S22= PC.Out=addr                                            PC-Out(S16)
	S23= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S18)
	S24= IAddrReg.Out=>IMem.RAddr                               Premise(F65)
	S25= IMem.RAddr={pid,addr}                                  Path(S23,S24)
	S26= IMem.Out={33,rS,rT,offset}                             IMem-Read(S25,S20)
	S27= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S25,S20)
	S28= IMem.Out=>IRMux.MemData                                Premise(F66)
	S29= IRMux.MemData={33,rS,rT,offset}                        Path(S26,S28)
	S30= IRMux.Out={33,rS,rT,offset}                            IRMux-Select2(S29)
	S31= IRMux.Out=>IR_ID.In                                    Premise(F70)
	S32= IR_ID.In={33,rS,rT,offset}                             Path(S30,S31)
	S33= IMem.MEM8WordOut=>ICache.WData                         Premise(F71)
	S34= ICache.WData=IMemGet8Word({pid,addr})                  Path(S27,S33)
	S35= PC.Out=>ICache.IEA                                     Premise(F72)
	S36= ICache.IEA=addr                                        Path(S22,S35)
	S37= CtrlCP0=0                                              Premise(F76)
	S38= CP0[ASID]=pid                                          CP0-Hold(S13,S37)
	S39= CtrlPC=0                                               Premise(F80)
	S40= CtrlPCInc=1                                            Premise(F81)
	S41= PC[Out]=addr+4                                         PC-Inc(S16,S39,S40)
	S42= CtrlICache=1                                           Premise(F83)
	S43= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S36,S34,S42)
	S44= CtrlIR_ID=1                                            Premise(F86)
	S45= [IR_ID]={33,rS,rT,offset}                              IR_ID-Write(S32,S44)
	S46= CtrlGPR=0                                              Premise(F89)
	S47= GPR[rS]=base                                           GPR-Hold(S21,S46)

ID	S48= IR_ID.Out={33,rS,rT,offset}                            IR-Out(S45)
	S49= IR_ID.Out25_21=rS                                      IR-Out(S45)
	S50= IR_ID.Out15_0=offset                                   IR-Out(S45)
	S51= IR_ID.Out25_21=>GPR.RReg1                              Premise(F121)
	S52= GPR.RReg1=rS                                           Path(S49,S51)
	S53= GPR.Rdata1=base                                        GPR-Read(S52,S47)
	S54= IR_ID.Out15_0=>IMMEXT.In                               Premise(F122)
	S55= IMMEXT.In=offset                                       Path(S50,S54)
	S56= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S55)
	S57= GPR.Rdata1=>FU.InID1                                   Premise(F123)
	S58= FU.InID1=base                                          Path(S53,S57)
	S59= FU.OutID1=FU(base)                                     FU-Forward(S58)
	S60= FU.OutID1=>A_EX.In                                     Premise(F125)
	S61= A_EX.In=FU(base)                                       Path(S59,S60)
	S62= IMMEXT.Out=>B_EX.In                                    Premise(F126)
	S63= B_EX.In={16{offset[15]},offset}                        Path(S56,S62)
	S64= IR_ID.Out=>IR_EX.In                                    Premise(F127)
	S65= IR_EX.In={33,rS,rT,offset}                             Path(S48,S64)
	S66= CtrlCP0=0                                              Premise(F132)
	S67= CP0[ASID]=pid                                          CP0-Hold(S38,S66)
	S68= CtrlPC=0                                               Premise(F136)
	S69= CtrlPCInc=0                                            Premise(F137)
	S70= PC[Out]=addr+4                                         PC-Hold(S41,S68,S69)
	S71= CtrlICache=0                                           Premise(F139)
	S72= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S43,S71)
	S73= CtrlA_EX=1                                             Premise(F146)
	S74= [A_EX]=FU(base)                                        A_EX-Write(S61,S73)
	S75= CtrlB_EX=1                                             Premise(F147)
	S76= [B_EX]={16{offset[15]},offset}                         B_EX-Write(S63,S75)
	S77= CtrlIR_EX=1                                            Premise(F148)
	S78= [IR_EX]={33,rS,rT,offset}                              IR_EX-Write(S65,S77)

EX	S79= A_EX.Out=FU(base)                                      A_EX-Out(S74)
	S80= B_EX.Out={16{offset[15]},offset}                       B_EX-Out(S76)
	S81= IR_EX.Out={33,rS,rT,offset}                            IR_EX-Out(S78)
	S82= A_EX.Out=>ALU.A                                        Premise(F177)
	S83= ALU.A=FU(base)                                         Path(S79,S82)
	S84= B_EX.Out=>ALU.B                                        Premise(F178)
	S85= ALU.B={16{offset[15]},offset}                          Path(S80,S84)
	S86= ALU.Out=FU(base)+{16{offset[15]},offset}               ALU(S83,S85)
	S87= ALU.Out=>ALUOut_MEM.In                                 Premise(F180)
	S88= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}         Path(S86,S87)
	S89= IR_EX.Out=>IR_MEM.In                                   Premise(F181)
	S90= IR_MEM.In={33,rS,rT,offset}                            Path(S81,S89)
	S91= CtrlCP0=0                                              Premise(F184)
	S92= CP0[ASID]=pid                                          CP0-Hold(S67,S91)
	S93= CtrlPC=0                                               Premise(F188)
	S94= CtrlPCInc=0                                            Premise(F189)
	S95= PC[Out]=addr+4                                         PC-Hold(S70,S93,S94)
	S96= CtrlICache=0                                           Premise(F191)
	S97= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S72,S96)
	S98= CtrlALUOut_MEM=1                                       Premise(F201)
	S99= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}          ALUOut_MEM-Write(S88,S98)
	S100= CtrlIR_MEM=1                                          Premise(F202)
	S101= [IR_MEM]={33,rS,rT,offset}                            IR_MEM-Write(S90,S100)
	S102= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        Premise(F225)

MEM	S103= CP0.ASID=pid                                          CP0-Read-ASID(S92)
	S104= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}       ALUOut_MEM-Out(S99)
	S105= IR_MEM.Out={33,rS,rT,offset}                          IR_MEM-Out(S101)
	S106= CP0.ASID=>DMMU.PID                                    Premise(F233)
	S107= DMMU.PID=pid                                          Path(S103,S106)
	S108= ALUOut_MEM.Out=>DMMU.IEA                              Premise(F234)
	S109= DMMU.IEA=FU(base)+{16{offset[15]},offset}             Path(S104,S108)
	S110= DMMU.Addr={pid,FU(base)+{16{offset[15]},offset}}      DMMU-Search(S107,S109)
	S111= DMMU.Addr=>DAddrReg_DMMU1.In                          Premise(F235)
	S112= DAddrReg_DMMU1.In={pid,FU(base)+{16{offset[15]},offset}}Path(S110,S111)
	S113= IR_MEM.Out=>IR_DMMU1.In                               Premise(F241)
	S114= IR_DMMU1.In={33,rS,rT,offset}                         Path(S105,S113)
	S115= ALUOut_MEM.Out=>ALUOut_DMMU1.In                       Premise(F242)
	S116= ALUOut_DMMU1.In=FU(base)+{16{offset[15]},offset}      Path(S104,S115)
	S117= CtrlPC=0                                              Premise(F253)
	S118= CtrlPCInc=0                                           Premise(F254)
	S119= PC[Out]=addr+4                                        PC-Hold(S95,S117,S118)
	S120= CtrlICache=0                                          Premise(F256)
	S121= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S97,S120)
	S122= CtrlDAddrReg_DMMU1=1                                  Premise(F269)
	S123= [DAddrReg_DMMU1]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Write(S112,S122)
	S124= CtrlIR_DMMU1=1                                        Premise(F273)
	S125= [IR_DMMU1]={33,rS,rT,offset}                          IR_DMMU1-Write(S114,S124)
	S126= CtrlALUOut_DMMU1=1                                    Premise(F279)
	S127= [ALUOut_DMMU1]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU1-Write(S116,S126)
	S128= CtrlDMem=0                                            Premise(F285)
	S129= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S102,S128)

MEM(DMMU1)	S130= DAddrReg_DMMU1.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Out(S123)
	S131= IR_DMMU1.Out={33,rS,rT,offset}                        IR_DMMU1-Out(S125)
	S132= ALUOut_DMMU1.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU1-Out(S127)
	S133= IR_DMMU1.Out=>IR_DMMU2.In                             Premise(F303)
	S134= IR_DMMU2.In={33,rS,rT,offset}                         Path(S131,S133)
	S135= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                     Premise(F304)
	S136= ALUOut_DMMU2.In=FU(base)+{16{offset[15]},offset}      Path(S132,S135)
	S137= DAddrReg_DMMU1.Out=>DAddrReg_DMMU2.In                 Premise(F305)
	S138= DAddrReg_DMMU2.In={pid,FU(base)+{16{offset[15]},offset}}Path(S130,S137)
	S139= CtrlPC=0                                              Premise(F312)
	S140= CtrlPCInc=0                                           Premise(F313)
	S141= PC[Out]=addr+4                                        PC-Hold(S119,S139,S140)
	S142= CtrlICache=0                                          Premise(F315)
	S143= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S121,S142)
	S144= CtrlDMem=0                                            Premise(F344)
	S145= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S129,S144)
	S146= CtrlIR_DMMU2=1                                        Premise(F346)
	S147= [IR_DMMU2]={33,rS,rT,offset}                          IR_DMMU2-Write(S134,S146)
	S148= CtrlALUOut_DMMU2=1                                    Premise(F347)
	S149= [ALUOut_DMMU2]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU2-Write(S136,S148)
	S150= CtrlDAddrReg_DMMU2=1                                  Premise(F348)
	S151= [DAddrReg_DMMU2]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Write(S138,S150)

MEM(DMMU2)	S152= IR_DMMU2.Out={33,rS,rT,offset}                        IR_DMMU2-Out(S147)
	S153= ALUOut_DMMU2.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU2-Out(S149)
	S154= DAddrReg_DMMU2.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Out(S151)
	S155= ALUOut_DMMU2.Out=>DCache.IEA                          Premise(F353)
	S156= DCache.IEA=FU(base)+{16{offset[15]},offset}           Path(S153,S155)
	S157= DAddrReg_DMMU2.Out=>DMem.RAddr                        Premise(F354)
	S158= DMem.RAddr={pid,FU(base)+{16{offset[15]},offset}}     Path(S154,S157)
	S159= DMem.MEM8WordOut=>DCache.WData                        Premise(F355)
	S160= DMem.Out=>DR_WB.In                                    Premise(F356)
	S161= IR_DMMU2.Out=>IR_WB.In                                Premise(F357)
	S162= IR_WB.In={33,rS,rT,offset}                            Path(S152,S161)
	S163= ALUOut_DMMU2.Out=>ALUOut_WB.In                        Premise(F358)
	S164= ALUOut_WB.In=FU(base)+{16{offset[15]},offset}         Path(S153,S163)
	S165= CtrlPC=0                                              Premise(F365)
	S166= CtrlPCInc=0                                           Premise(F366)
	S167= PC[Out]=addr+4                                        PC-Hold(S141,S165,S166)
	S168= CtrlICache=0                                          Premise(F368)
	S169= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S143,S168)
	S170= CtrlDCache=1                                          Premise(F382)
	S171= CtrlIR_WB=1                                           Premise(F386)
	S172= [IR_WB]={33,rS,rT,offset}                             IR_WB-Write(S162,S171)
	S173= CtrlALUOut_WB=1                                       Premise(F392)
	S174= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}          ALUOut_WB-Write(S164,S173)
	S175= CtrlDR_WB=1                                           Premise(F393)
	S176= CtrlDMem=0                                            Premise(F397)
	S177= CtrlDMem8Word=0                                       Premise(F398)
	S178= DMem.Out=a                                            DMem-Read(S158,S145,S176,S177)
	S179= DR_WB.In=a                                            Path(S178,S160)
	S180= [DR_WB]=a                                             DR_WB-Write(S179,S175)
	S181= DMem.MEM8WordOut=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DMem-Read(S158,S145,S176,S177)
	S182= DCache.WData=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})Path(S181,S159)
	S183= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Write8Word(S156,S182,S170)

WB	S184= IR_WB.Out20_16=rT                                     IR-Out(S172)
	S185= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S174)
	S186= DR_WB.Out=a                                           DR_WB-Out(S180)
	S187= IR_WB.Out20_16=>GPR.WReg                              Premise(F404)
	S188= GPR.WReg=rT                                           Path(S184,S187)
	S189= DR_WB.Out=>MemDataSelL.In                             Premise(F405)
	S190= MemDataSelL.In=a                                      Path(S186,S189)
	S191= ALUOut_WB.Out1_0=>MemDataSelL.Addr                    Premise(F406)
	S192= MemDataSelL.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S185,S191)
	S193= MemDataSelL.Out={16{a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8][15]},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}MemDataSelL(S190,S192)
	S194= MemDataSelL.Out=>GPR.WData                            Premise(F408)
	S195= GPR.WData={16{a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8][15]},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}Path(S193,S194)
	S196= CtrlPC=0                                              Premise(F416)
	S197= CtrlPCInc=0                                           Premise(F417)
	S198= PC[Out]=addr+4                                        PC-Hold(S167,S196,S197)
	S199= CtrlICache=0                                          Premise(F419)
	S200= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S169,S199)
	S201= CtrlGPR=1                                             Premise(F425)
	S202= GPR[rT]={16{a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8][15]},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S188,S195,S201)
	S203= CtrlDCache=0                                          Premise(F433)
	S204= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S183,S203)

POST	S198= PC[Out]=addr+4                                        PC-Hold(S167,S196,S197)
	S200= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S169,S199)
	S202= GPR[rT]={16{a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8][15]},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+15,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S188,S195,S201)
	S204= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S183,S203)

