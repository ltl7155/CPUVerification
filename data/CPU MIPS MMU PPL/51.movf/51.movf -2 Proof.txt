
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,cc,0,0,rD,0,1}                       Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)

IF	S3= PC.Out=addr                                             PC-Out(S0)
	S4= PC.Out=>ICache.IEA                                      Premise(F65)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={0,rS,cc,0,0,rD,0,1}                         ICache-Search(S5,S1)
	S7= ICache.Out=>IR_ID.In                                    Premise(F72)
	S8= IR_ID.In={0,rS,cc,0,0,rD,0,1}                           Path(S6,S7)
	S9= CtrlIR_ID=1                                             Premise(F116)
	S10= [IR_ID]={0,rS,cc,0,0,rD,0,1}                           IR_ID-Write(S8,S9)
	S11= CtrlGPR=0                                              Premise(F120)
	S12= GPR[rS]=a                                              GPR-Hold(S2,S11)
	S13= CtrlPC=0                                               Premise(F122)
	S14= CtrlPCInc=1                                            Premise(F123)
	S15= PC[Out]=addr+4                                         PC-Inc(S0,S13,S14)

ID	S16= IR_ID.Out={0,rS,cc,0,0,rD,0,1}                         IR-Out(S10)
	S17= IR_ID.Out25_21=rS                                      IR-Out(S10)
	S18= FU.OutID1=>A_EX.In                                     Premise(F259)
	S19= GPR.Rdata1=>FU.InID1                                   Premise(F308)
	S20= IR_ID.Out25_21=>GPR.RReg1                              Premise(F314)
	S21= GPR.RReg1=rS                                           Path(S17,S20)
	S22= GPR.Rdata1=a                                           GPR-Read(S21,S12)
	S23= FU.InID1=a                                             Path(S22,S19)
	S24= FU.OutID1=FU(a)                                        FU-Forward(S23)
	S25= A_EX.In=FU(a)                                          Path(S24,S18)
	S26= IR_ID.Out=>IR_EX.In                                    Premise(F324)
	S27= IR_EX.In={0,rS,cc,0,0,rD,0,1}                          Path(S16,S26)
	S28= CtrlA_EX=1                                             Premise(F357)
	S29= [A_EX]=FU(a)                                           A_EX-Write(S25,S28)
	S30= CtrlIR_EX=1                                            Premise(F359)
	S31= [IR_EX]={0,rS,cc,0,0,rD,0,1}                           IR_EX-Write(S27,S30)
	S32= CtrlPC=0                                               Premise(F375)
	S33= CtrlPCInc=0                                            Premise(F376)
	S34= PC[Out]=addr+4                                         PC-Hold(S15,S32,S33)

EX	S35= A_EX.Out=FU(a)                                         A_EX-Out(S29)
	S36= IR_EX.Out={0,rS,cc,0,0,rD,0,1}                         IR_EX-Out(S31)
	S37= IR_EX.Out20_18=cc                                      IR_EX-Out(S31)
	S38= IR_EX.Out16=0                                          IR_EX-Out(S31)
	S39= A_EX.Out=>A_MEM.In                                     Premise(F387)
	S40= A_MEM.In=FU(a)                                         Path(S35,S39)
	S41= IR_EX.Out20_18=>CP1.cc                                 Premise(F390)
	S42= CP1.cc=cc                                              Path(S37,S41)
	S43= IR_EX.Out16=>CP1.tf                                    Premise(F391)
	S44= CP1.tf=0                                               Path(S38,S43)
	S45= CP1.fp=FPConditionCode(cc,0)                           FP-PRODUCT(S42,S44)
	S46= CP1.fp=>ConditionReg_MEM.In                            Premise(F421)
	S47= ConditionReg_MEM.In=FPConditionCode(cc,0)              Path(S45,S46)
	S48= IR_EX.Out=>IR_MEM.In                                   Premise(F453)
	S49= IR_MEM.In={0,rS,cc,0,0,rD,0,1}                         Path(S36,S48)
	S50= CtrlA_MEM=1                                            Premise(F480)
	S51= [A_MEM]=FU(a)                                          A_MEM-Write(S40,S50)
	S52= CtrlConditionReg_MEM=1                                 Premise(F490)
	S53= [ConditionReg_MEM]=FPConditionCode(cc,0)               ConditionReg_MEM-Write(S47,S52)
	S54= CtrlIR_MEM=1                                           Premise(F497)
	S55= [IR_MEM]={0,rS,cc,0,0,rD,0,1}                          IR_MEM-Write(S49,S54)
	S56= CtrlPC=0                                               Premise(F501)
	S57= CtrlPCInc=0                                            Premise(F502)
	S58= PC[Out]=addr+4                                         PC-Hold(S34,S56,S57)

MEM	S59= A_MEM.Out=FU(a)                                        A_MEM-Out(S51)
	S60= ConditionReg_MEM.Out=FPConditionCode(cc,0)             ConditionReg_MEM-Out(S53)
	S61= IR_MEM.Out={0,rS,cc,0,0,rD,0,1}                        IR_MEM-Out(S55)
	S62= A_MEM.Out=>A_DMMU1.In                                  Premise(F510)
	S63= A_DMMU1.In=FU(a)                                       Path(S59,S62)
	S64= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In            Premise(F545)
	S65= ConditionReg_DMMU1.In=FPConditionCode(cc,0)            Path(S60,S64)
	S66= IR_MEM.Out=>IR_DMMU1.In                                Premise(F574)
	S67= IR_DMMU1.In={0,rS,cc,0,0,rD,0,1}                       Path(S61,S66)
	S68= CtrlA_DMMU1=1                                          Premise(F607)
	S69= [A_DMMU1]=FU(a)                                        A_DMMU1-Write(S63,S68)
	S70= CtrlConditionReg_DMMU1=1                               Premise(F617)
	S71= [ConditionReg_DMMU1]=FPConditionCode(cc,0)             ConditionReg_DMMU1-Write(S65,S70)
	S72= CtrlIR_DMMU1=1                                         Premise(F619)
	S73= [IR_DMMU1]={0,rS,cc,0,0,rD,0,1}                        IR_DMMU1-Write(S67,S72)
	S74= CtrlPC=0                                               Premise(F627)
	S75= CtrlPCInc=0                                            Premise(F628)
	S76= PC[Out]=addr+4                                         PC-Hold(S58,S74,S75)

DMMU1	S77= A_DMMU1.Out=FU(a)                                      A_DMMU1-Out(S69)
	S78= ConditionReg_DMMU1.Out=FPConditionCode(cc,0)           ConditionReg_DMMU1-Out(S71)
	S79= IR_DMMU1.Out={0,rS,cc,0,0,rD,0,1}                      IR_DMMU1-Out(S73)
	S80= A_DMMU1.Out=>A_DMMU2.In                                Premise(F637)
	S81= A_DMMU2.In=FU(a)                                       Path(S77,S80)
	S82= ConditionReg_DMMU1.Out=>ConditionReg_DMMU2.In          Premise(F672)
	S83= ConditionReg_DMMU2.In=FPConditionCode(cc,0)            Path(S78,S82)
	S84= IR_DMMU1.Out=>IR_DMMU2.In                              Premise(F701)
	S85= IR_DMMU2.In={0,rS,cc,0,0,rD,0,1}                       Path(S79,S84)
	S86= CtrlA_DMMU2=1                                          Premise(F734)
	S87= [A_DMMU2]=FU(a)                                        A_DMMU2-Write(S81,S86)
	S88= CtrlConditionReg_DMMU2=1                               Premise(F744)
	S89= [ConditionReg_DMMU2]=FPConditionCode(cc,0)             ConditionReg_DMMU2-Write(S83,S88)
	S90= CtrlIR_DMMU2=1                                         Premise(F746)
	S91= [IR_DMMU2]={0,rS,cc,0,0,rD,0,1}                        IR_DMMU2-Write(S85,S90)
	S92= CtrlPC=0                                               Premise(F753)
	S93= CtrlPCInc=0                                            Premise(F754)
	S94= PC[Out]=addr+4                                         PC-Hold(S76,S92,S93)

DMMU2	S95= A_DMMU2.Out=FU(a)                                      A_DMMU2-Out(S87)
	S96= ConditionReg_DMMU2.Out=FPConditionCode(cc,0)           ConditionReg_DMMU2-Out(S89)
	S97= IR_DMMU2.Out={0,rS,cc,0,0,rD,0,1}                      IR_DMMU2-Out(S91)
	S98= A_DMMU2.Out=>A_WB.In                                   Premise(F766)
	S99= A_WB.In=FU(a)                                          Path(S95,S98)
	S100= ConditionReg_DMMU2.Out=>ConditionReg_WB.In            Premise(F800)
	S101= ConditionReg_WB.In=FPConditionCode(cc,0)              Path(S96,S100)
	S102= IR_DMMU2.Out=>IR_WB.In                                Premise(F832)
	S103= IR_WB.In={0,rS,cc,0,0,rD,0,1}                         Path(S97,S102)
	S104= CtrlA_WB=1                                            Premise(F862)
	S105= [A_WB]=FU(a)                                          A_WB-Write(S99,S104)
	S106= CtrlConditionReg_WB=1                                 Premise(F867)
	S107= [ConditionReg_WB]=FPConditionCode(cc,0)               ConditionReg_WB-Write(S101,S106)
	S108= CtrlIR_WB=1                                           Premise(F876)
	S109= [IR_WB]={0,rS,cc,0,0,rD,0,1}                          IR_WB-Write(S103,S108)
	S110= CtrlPC=0                                              Premise(F879)
	S111= CtrlPCInc=0                                           Premise(F880)
	S112= PC[Out]=addr+4                                        PC-Hold(S94,S110,S111)

WB	S113= A_WB.Out=FU(a)                                        A_WB-Out(S105)
	S114= IR_WB.Out15_11=rD                                     IR-Out(S109)
	S115= A_WB.Out=>GPR.WData                                   Premise(F945)
	S116= GPR.WData=FU(a)                                       Path(S113,S115)
	S117= IR_WB.Out15_11=>GPR.WReg                              Premise(F946)
	S118= GPR.WReg=rD                                           Path(S114,S117)
	S119= CtrlConditionReg_WB=0                                 Premise(F993)
	S120= [ConditionReg_WB]=FPConditionCode(cc,0)               ConditionReg_WB-Hold(S107,S119)
	S121= CtrlGPR=1                                             Premise(F1003)
	S122= GPR[rD]=FU(a)                                         GPR-Write(S118,S116,S121)
	S123= CtrlPC=0                                              Premise(F1005)
	S124= CtrlPCInc=0                                           Premise(F1006)
	S125= PC[Out]=addr+4                                        PC-Hold(S112,S123,S124)

POST	S120= [ConditionReg_WB]=FPConditionCode(cc,0)               ConditionReg_WB-Hold(S107,S119)
	S122= GPR[rD]=FU(a)                                         GPR-Write(S118,S116,S121)
	S125= PC[Out]=addr+4                                        PC-Hold(S112,S123,S124)

