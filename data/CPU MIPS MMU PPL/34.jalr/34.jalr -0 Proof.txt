
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                     Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= IMMU.Addr=>IAddrReg.In                                  Premise(F47)
	S6= PC.Out=>IMMU.IEA                                        Premise(F52)
	S7= IMMU.IEA=addr                                           Path(S4,S6)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F53)
	S9= IMMU.PID=pid                                            Path(S3,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S7)
	S11= IAddrReg.In={pid,addr}                                 Path(S10,S5)
	S12= CtrlPC=0                                               Premise(F103)
	S13= CtrlPCInc=0                                            Premise(F104)
	S14= PC[Out]=addr                                           PC-Hold(S1,S12,S13)
	S15= CtrlIAddrReg=1                                         Premise(F105)
	S16= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S11,S15)
	S17= CtrlIMem=0                                             Premise(F106)
	S18= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                    IMem-Hold(S2,S17)
	S19= GPR[rS]=a                                              Premise(F113)

IMMU	S20= PC.Out=addr                                            PC-Out(S14)
	S21= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S16)
	S22= PC.Out=>ICache.IEA                                     Premise(F159)
	S23= ICache.IEA=addr                                        Path(S20,S22)
	S24= IMem.MEM8WordOut=>ICache.WData                         Premise(F161)
	S25= IAddrReg.Out=>IMem.RAddr                               Premise(F165)
	S26= IMem.RAddr={pid,addr}                                  Path(S21,S25)
	S27= IMem.Out={0,rS,0,rD,hint,9}                            IMem-Read(S26,S18)
	S28= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S26,S18)
	S29= ICache.WData=IMemGet8Word({pid,addr})                  Path(S28,S24)
	S30= IMem.Out=>IRMux.MemData                                Premise(F168)
	S31= IRMux.MemData={0,rS,0,rD,hint,9}                       Path(S27,S30)
	S32= IRMux.Out={0,rS,0,rD,hint,9}                           IRMux-Select2(S31)
	S33= IRMux.Out=>IR_ID.In                                    Premise(F174)
	S34= IR_ID.In={0,rS,0,rD,hint,9}                            Path(S32,S33)
	S35= CtrlICache=1                                           Premise(F204)
	S36= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S23,S29,S35)
	S37= CtrlIR_ID=1                                            Premise(F209)
	S38= [IR_ID]={0,rS,0,rD,hint,9}                             IR_ID-Write(S34,S37)
	S39= CtrlGPR=0                                              Premise(F213)
	S40= GPR[rS]=a                                              GPR-Hold(S19,S39)
	S41= CtrlPC=0                                               Premise(F214)
	S42= CtrlPCInc=1                                            Premise(F215)
	S43= PC[Out]=addr+4                                         PC-Inc(S14,S41,S42)

ID	S44= IR_ID.Out25_21=rS                                      IR-Out(S38)
	S45= IR_ID.Out15_11=rD                                      IR-Out(S38)
	S46= PC.Out=addr+4                                          PC-Out(S43)
	S47= GPR.Rdata1=>FU.InID1                                   Premise(F263)
	S48= IR_ID.Out25_21=>GPR.RReg1                              Premise(F266)
	S49= GPR.RReg1=rS                                           Path(S44,S48)
	S50= GPR.Rdata1=a                                           GPR-Read(S49,S40)
	S51= FU.InID1=a                                             Path(S50,S47)
	S52= FU.OutID1=FU(a)                                        FU-Forward(S51)
	S53= PC.Out=>GPR.WData                                      Premise(F267)
	S54= GPR.WData=addr+4                                       Path(S46,S53)
	S55= IR_ID.Out15_11=>GPR.WReg                               Premise(F268)
	S56= GPR.WReg=rD                                            Path(S45,S55)
	S57= FU.OutID1=>PC.In                                       Premise(F290)
	S58= PC.In=FU(a)                                            Path(S52,S57)
	S59= CtrlICache=0                                           Premise(F315)
	S60= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S36,S59)
	S61= CtrlGPR=1                                              Premise(F324)
	S62= GPR[rD]=addr+4                                         GPR-Write(S56,S54,S61)
	S63= CtrlPC=1                                               Premise(F325)
	S64= CtrlPCInc=0                                            Premise(F326)
	S65= PC[Out]=FU(a)                                          PC-Write(S58,S63,S64)

EX	S66= CtrlICache=0                                           Premise(F426)
	S67= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S60,S66)
	S68= CtrlGPR=0                                              Premise(F435)
	S69= GPR[rD]=addr+4                                         GPR-Hold(S62,S68)
	S70= CtrlPC=0                                               Premise(F436)
	S71= CtrlPCInc=0                                            Premise(F437)
	S72= PC[Out]=FU(a)                                          PC-Hold(S65,S70,S71)

MEM	S73= CtrlICache=0                                           Premise(F537)
	S74= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S67,S73)
	S75= CtrlGPR=0                                              Premise(F546)
	S76= GPR[rD]=addr+4                                         GPR-Hold(S69,S75)
	S77= CtrlPC=0                                               Premise(F547)
	S78= CtrlPCInc=0                                            Premise(F548)
	S79= PC[Out]=FU(a)                                          PC-Hold(S72,S77,S78)

WB	S80= CtrlICache=0                                           Premise(F870)
	S81= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S74,S80)
	S82= CtrlGPR=0                                              Premise(F879)
	S83= GPR[rD]=addr+4                                         GPR-Hold(S76,S82)
	S84= CtrlPC=0                                               Premise(F880)
	S85= CtrlPCInc=0                                            Premise(F881)
	S86= PC[Out]=FU(a)                                          PC-Hold(S79,S84,S85)

POST	S81= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S74,S80)
	S83= GPR[rD]=addr+4                                         GPR-Hold(S76,S82)
	S86= PC[Out]=FU(a)                                          PC-Hold(S79,S84,S85)

