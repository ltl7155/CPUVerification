
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={28,rS,rT,rD,0,33}                     Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= IMMU.Addr=>IAddrReg.In                                  Premise(F57)
	S6= PC.Out=>IMMU.IEA                                        Premise(F62)
	S7= IMMU.IEA=addr                                           Path(S4,S6)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F63)
	S9= IMMU.PID=pid                                            Path(S3,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S7)
	S11= IAddrReg.In={pid,addr}                                 Path(S10,S5)
	S12= CtrlIAddrReg=1                                         Premise(F115)
	S13= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S11,S12)
	S14= CtrlPC=0                                               Premise(F116)
	S15= CtrlPCInc=0                                            Premise(F117)
	S16= PC[Out]=addr                                           PC-Hold(S1,S14,S15)
	S17= CtrlIMem=0                                             Premise(F118)
	S18= IMem[{pid,addr}]={28,rS,rT,rD,0,33}                    IMem-Hold(S2,S17)
	S19= GPR[rS]=a                                              Premise(F125)

IMMU	S20= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S13)
	S21= PC.Out=addr                                            PC-Out(S16)
	S22= PC.Out=>ICache.IEA                                     Premise(F181)
	S23= ICache.IEA=addr                                        Path(S21,S22)
	S24= IMem.MEM8WordOut=>ICache.WData                         Premise(F183)
	S25= IAddrReg.Out=>IMem.RAddr                               Premise(F187)
	S26= IMem.RAddr={pid,addr}                                  Path(S20,S25)
	S27= IMem.Out={28,rS,rT,rD,0,33}                            IMem-Read(S26,S18)
	S28= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S26,S18)
	S29= ICache.WData=IMemGet8Word({pid,addr})                  Path(S28,S24)
	S30= IMem.Out=>IRMux.MemData                                Premise(F190)
	S31= IRMux.MemData={28,rS,rT,rD,0,33}                       Path(S27,S30)
	S32= IRMux.Out={28,rS,rT,rD,0,33}                           IRMux-Select2(S31)
	S33= IRMux.Out=>IR_ID.In                                    Premise(F196)
	S34= IR_ID.In={28,rS,rT,rD,0,33}                            Path(S32,S33)
	S35= CtrlICache=1                                           Premise(F228)
	S36= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S23,S29,S35)
	S37= CtrlIR_ID=1                                            Premise(F233)
	S38= [IR_ID]={28,rS,rT,rD,0,33}                             IR_ID-Write(S34,S37)
	S39= CtrlGPR=0                                              Premise(F237)
	S40= GPR[rS]=a                                              GPR-Hold(S19,S39)
	S41= CtrlPC=0                                               Premise(F239)
	S42= CtrlPCInc=1                                            Premise(F240)
	S43= PC[Out]=addr+4                                         PC-Inc(S16,S41,S42)

ID	S44= IR_ID.Out={28,rS,rT,rD,0,33}                           IR-Out(S38)
	S45= IR_ID.Out25_21=rS                                      IR-Out(S38)
	S46= FU.OutID1=>A_EX.In                                     Premise(F248)
	S47= GPR.Rdata1=>FU.InID1                                   Premise(F295)
	S48= IR_ID.Out25_21=>GPR.RReg1                              Premise(F300)
	S49= GPR.RReg1=rS                                           Path(S45,S48)
	S50= GPR.Rdata1=a                                           GPR-Read(S49,S40)
	S51= FU.InID1=a                                             Path(S50,S47)
	S52= FU.OutID1=FU(a)                                        FU-Forward(S51)
	S53= A_EX.In=FU(a)                                          Path(S52,S46)
	S54= IR_ID.Out=>IR_EX.In                                    Premise(F317)
	S55= IR_EX.In={28,rS,rT,rD,0,33}                            Path(S44,S54)
	S56= CtrlA_EX=1                                             Premise(F348)
	S57= [A_EX]=FU(a)                                           A_EX-Write(S53,S56)
	S58= CtrlICache=0                                           Premise(F351)
	S59= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S36,S58)
	S60= CtrlIR_EX=1                                            Premise(F355)
	S61= [IR_EX]={28,rS,rT,rD,0,33}                             IR_EX-Write(S55,S60)
	S62= CtrlPC=0                                               Premise(F362)
	S63= CtrlPCInc=0                                            Premise(F363)
	S64= PC[Out]=addr+4                                         PC-Hold(S43,S62,S63)

EX	S65= A_EX.Out=FU(a)                                         A_EX-Out(S57)
	S66= IR_EX.Out15_11=rD                                      IR_EX-Out(S61)
	S67= A_EX.Out=>CountUnit.In                                 Premise(F404)
	S68= CountUnit.In=FU(a)                                     Path(S65,S67)
	S69= CountUnit.Out=Count1(FU(a))                            CountUnit_Count1(S68)
	S70= CountUnit.Out=>GPR.WData                               Premise(F424)
	S71= GPR.WData=Count1(FU(a))                                Path(S69,S70)
	S72= IR_EX.Out15_11=>GPR.WReg                               Premise(F425)
	S73= GPR.WReg=rD                                            Path(S66,S72)
	S74= CtrlICache=0                                           Premise(F474)
	S75= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S59,S74)
	S76= CtrlGPR=1                                              Premise(F483)
	S77= GPR[rD]=Count1(FU(a))                                  GPR-Write(S73,S71,S76)
	S78= CtrlPC=0                                               Premise(F485)
	S79= CtrlPCInc=0                                            Premise(F486)
	S80= PC[Out]=addr+4                                         PC-Hold(S64,S78,S79)

MEM	S81= CtrlICache=0                                           Premise(F596)
	S82= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S75,S81)
	S83= CtrlGPR=0                                              Premise(F605)
	S84= GPR[rD]=Count1(FU(a))                                  GPR-Hold(S77,S83)
	S85= CtrlPC=0                                               Premise(F607)
	S86= CtrlPCInc=0                                            Premise(F608)
	S87= PC[Out]=addr+4                                         PC-Hold(S80,S85,S86)

WB	S88= CtrlICache=0                                           Premise(F962)
	S89= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S82,S88)
	S90= CtrlGPR=0                                              Premise(F971)
	S91= GPR[rD]=Count1(FU(a))                                  GPR-Hold(S84,S90)
	S92= CtrlPC=0                                               Premise(F973)
	S93= CtrlPCInc=0                                            Premise(F974)
	S94= PC[Out]=addr+4                                         PC-Hold(S87,S92,S93)

POST	S89= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S82,S88)
	S91= GPR[rD]=Count1(FU(a))                                  GPR-Hold(S84,S90)
	S94= PC[Out]=addr+4                                         PC-Hold(S87,S92,S93)

