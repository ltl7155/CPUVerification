
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rs,rt,code,52}                      Premise(F2)
	S3= GPR[rs]=a                                               Premise(F3)
	S4= GPR[rt]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F5)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F6)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S8,S10)
	S13= IMMU.Addr=>IAddrReg.In                                 Premise(F7)
	S14= IAddrReg.In={pid,addr}                                 Path(S11,S13)
	S15= IMMU.Hit=>CU.IMMUHit                                   Premise(F8)
	S16= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S12,S15)
	S17= PC.Out=>ICache.IEA                                     Premise(F9)
	S18= ICache.IEA=addr                                        Path(S6,S17)
	S19= ICache.Hit=ICacheHit(addr)                             ICache-Search(S18)
	S20= ICache.Out=>IR.In                                      Premise(F10)
	S21= ICache.Out=>ICacheReg.In                               Premise(F11)
	S22= ICache.Hit=>CU.ICacheHit                               Premise(F12)
	S23= CU.ICacheHit=ICacheHit(addr)                           Path(S19,S22)
	S24= CtrlASIDIn=0                                           Premise(F13)
	S25= CtrlCP0=0                                              Premise(F14)
	S26= CP0[ASID]=pid                                          CP0-Hold(S0,S25)
	S27= CtrlEPCIn=0                                            Premise(F15)
	S28= CtrlExCodeIn=0                                         Premise(F16)
	S29= CtrlIMMU=0                                             Premise(F17)
	S30= CtrlPC=0                                               Premise(F18)
	S31= CtrlPCInc=0                                            Premise(F19)
	S32= PC[Out]=addr                                           PC-Hold(S1,S30,S31)
	S33= CtrlIAddrReg=1                                         Premise(F20)
	S34= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S14,S33)
	S35= CtrlICache=0                                           Premise(F21)
	S36= CtrlIR=0                                               Premise(F22)
	S37= CtrlICacheReg=1                                        Premise(F23)
	S38= CtrlIMem=0                                             Premise(F24)
	S39= IMem[{pid,addr}]={0,rs,rt,code,52}                     IMem-Hold(S2,S38)
	S40= CtrlIRMux=0                                            Premise(F25)
	S41= CtrlGPR=0                                              Premise(F26)
	S42= GPR[rs]=a                                              GPR-Hold(S3,S41)
	S43= GPR[rt]=b                                              GPR-Hold(S4,S41)
	S44= CtrlA=0                                                Premise(F27)
	S45= CtrlB=0                                                Premise(F28)
	S46= CtrlConditionReg=0                                     Premise(F29)
	S47= CtrlPIDReg=0                                           Premise(F30)

IF(IMMU)	S48= CP0.ASID=pid                                           CP0-Read-ASID(S26)
	S49= PC.Out=addr                                            PC-Out(S32)
	S50= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S34)
	S51= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S34)
	S52= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S34)
	S53= CU.IMMUHit=>CU.IMMUHit                                 Premise(F31)
	S54= CU.ICacheHit=>CU.ICacheHit                             Premise(F32)
	S55= IAddrReg.Out=>IMem.RAddr                               Premise(F33)
	S56= IMem.RAddr={pid,addr}                                  Path(S50,S55)
	S57= IMem.Out={0,rs,rt,code,52}                             IMem-Read(S56,S39)
	S58= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S56,S39)
	S59= IMem.Out=>IRMux.MemData                                Premise(F34)
	S60= IRMux.MemData={0,rs,rt,code,52}                        Path(S57,S59)
	S61= IRMux.Out={0,rs,rt,code,52}                            IRMux-Select2(S60)
	S62= ICacheReg.Out=>IRMux.CacheData                         Premise(F35)
	S63= CU.IMMUHit=>IRMux.MemSel                               Premise(F36)
	S64= CU.ICacheHit=>IRMux.CacheSel                           Premise(F37)
	S65= IRMux.Out=>IR.In                                       Premise(F38)
	S66= IR.In={0,rs,rt,code,52}                                Path(S61,S65)
	S67= IMem.MEM8WordOut=>ICache.WData                         Premise(F39)
	S68= ICache.WData=IMemGet8Word({pid,addr})                  Path(S58,S67)
	S69= PC.Out=>ICache.IEA                                     Premise(F40)
	S70= ICache.IEA=addr                                        Path(S49,S69)
	S71= ICache.Hit=ICacheHit(addr)                             ICache-Search(S70)
	S72= CtrlASIDIn=0                                           Premise(F41)
	S73= CtrlCP0=0                                              Premise(F42)
	S74= CP0[ASID]=pid                                          CP0-Hold(S26,S73)
	S75= CtrlEPCIn=0                                            Premise(F43)
	S76= CtrlExCodeIn=0                                         Premise(F44)
	S77= CtrlIMMU=0                                             Premise(F45)
	S78= CtrlPC=0                                               Premise(F46)
	S79= CtrlPCInc=1                                            Premise(F47)
	S80= PC[Out]=addr+4                                         PC-Inc(S32,S78,S79)
	S81= PC[CIA]=addr                                           PC-Inc(S32,S78,S79)
	S82= CtrlIAddrReg=0                                         Premise(F48)
	S83= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S34,S82)
	S84= CtrlICache=1                                           Premise(F49)
	S85= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S70,S68,S84)
	S86= CtrlIR=1                                               Premise(F50)
	S87= [IR]={0,rs,rt,code,52}                                 IR-Write(S66,S86)
	S88= CtrlICacheReg=0                                        Premise(F51)
	S89= CtrlIMem=0                                             Premise(F52)
	S90= IMem[{pid,addr}]={0,rs,rt,code,52}                     IMem-Hold(S39,S89)
	S91= CtrlIRMux=0                                            Premise(F53)
	S92= CtrlGPR=0                                              Premise(F54)
	S93= GPR[rs]=a                                              GPR-Hold(S42,S92)
	S94= GPR[rt]=b                                              GPR-Hold(S43,S92)
	S95= CtrlA=0                                                Premise(F55)
	S96= CtrlB=0                                                Premise(F56)
	S97= CtrlConditionReg=0                                     Premise(F57)
	S98= CtrlPIDReg=0                                           Premise(F58)

ID	S99= CP0.ASID=pid                                           CP0-Read-ASID(S74)
	S100= PC.Out=addr+4                                         PC-Out(S80)
	S101= PC.CIA=addr                                           PC-Out(S81)
	S102= PC.CIA31_28=addr[31:28]                               PC-Out(S81)
	S103= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S83)
	S104= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S83)
	S105= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S83)
	S106= IR.Out={0,rs,rt,code,52}                              IR-Out(S87)
	S107= IR.Out31_26=0                                         IR-Out(S87)
	S108= IR.Out25_21=rs                                        IR-Out(S87)
	S109= IR.Out20_16=rt                                        IR-Out(S87)
	S110= IR.Out15_6=code                                       IR-Out(S87)
	S111= IR.Out5_0=52                                          IR-Out(S87)
	S112= IR.Out31_26=>CU.Op                                    Premise(F59)
	S113= CU.Op=0                                               Path(S107,S112)
	S114= IR.Out25_21=>GPR.RReg1                                Premise(F60)
	S115= GPR.RReg1=rs                                          Path(S108,S114)
	S116= GPR.Rdata1=a                                          GPR-Read(S115,S93)
	S117= IR.Out20_16=>GPR.RReg2                                Premise(F61)
	S118= GPR.RReg2=rt                                          Path(S109,S117)
	S119= GPR.Rdata2=b                                          GPR-Read(S118,S94)
	S120= IR.Out5_0=>CU.IRFunc                                  Premise(F62)
	S121= CU.IRFunc=52                                          Path(S111,S120)
	S122= GPR.Rdata1=>A.In                                      Premise(F63)
	S123= A.In=a                                                Path(S116,S122)
	S124= GPR.Rdata2=>B.In                                      Premise(F64)
	S125= B.In=b                                                Path(S119,S124)
	S126= CtrlASIDIn=0                                          Premise(F65)
	S127= CtrlCP0=0                                             Premise(F66)
	S128= CP0[ASID]=pid                                         CP0-Hold(S74,S127)
	S129= CtrlEPCIn=0                                           Premise(F67)
	S130= CtrlExCodeIn=0                                        Premise(F68)
	S131= CtrlIMMU=0                                            Premise(F69)
	S132= CtrlPC=0                                              Premise(F70)
	S133= CtrlPCInc=0                                           Premise(F71)
	S134= PC[CIA]=addr                                          PC-Hold(S81,S133)
	S135= PC[Out]=addr+4                                        PC-Hold(S80,S132,S133)
	S136= CtrlIAddrReg=0                                        Premise(F72)
	S137= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S83,S136)
	S138= CtrlICache=0                                          Premise(F73)
	S139= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S85,S138)
	S140= CtrlIR=0                                              Premise(F74)
	S141= [IR]={0,rs,rt,code,52}                                IR-Hold(S87,S140)
	S142= CtrlICacheReg=0                                       Premise(F75)
	S143= CtrlIMem=0                                            Premise(F76)
	S144= IMem[{pid,addr}]={0,rs,rt,code,52}                    IMem-Hold(S90,S143)
	S145= CtrlIRMux=0                                           Premise(F77)
	S146= CtrlGPR=0                                             Premise(F78)
	S147= GPR[rs]=a                                             GPR-Hold(S93,S146)
	S148= GPR[rt]=b                                             GPR-Hold(S94,S146)
	S149= CtrlA=1                                               Premise(F79)
	S150= [A]=a                                                 A-Write(S123,S149)
	S151= CtrlB=1                                               Premise(F80)
	S152= [B]=b                                                 B-Write(S125,S151)
	S153= CtrlConditionReg=0                                    Premise(F81)
	S154= CtrlPIDReg=0                                          Premise(F82)

EX	S155= CP0.ASID=pid                                          CP0-Read-ASID(S128)
	S156= PC.CIA=addr                                           PC-Out(S134)
	S157= PC.CIA31_28=addr[31:28]                               PC-Out(S134)
	S158= PC.Out=addr+4                                         PC-Out(S135)
	S159= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S137)
	S160= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S137)
	S161= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S137)
	S162= IR.Out={0,rs,rt,code,52}                              IR-Out(S141)
	S163= IR.Out31_26=0                                         IR-Out(S141)
	S164= IR.Out25_21=rs                                        IR-Out(S141)
	S165= IR.Out20_16=rt                                        IR-Out(S141)
	S166= IR.Out15_6=code                                       IR-Out(S141)
	S167= IR.Out5_0=52                                          IR-Out(S141)
	S168= A.Out=a                                               A-Out(S150)
	S169= A.Out1_0={a}[1:0]                                     A-Out(S150)
	S170= A.Out4_0={a}[4:0]                                     A-Out(S150)
	S171= B.Out=b                                               B-Out(S152)
	S172= B.Out1_0={b}[1:0]                                     B-Out(S152)
	S173= B.Out4_0={b}[4:0]                                     B-Out(S152)
	S174= A.Out=>CMPU.A                                         Premise(F83)
	S175= CMPU.A=a                                              Path(S168,S174)
	S176= B.Out=>CMPU.B                                         Premise(F84)
	S177= CMPU.B=b                                              Path(S171,S176)
	S178= CMPU.Func=6'b000011                                   Premise(F85)
	S179= CMPU.Out=CompareS(a,b)                                CMPU-CMPS(S175,S177)
	S180= CMPU.zero=CompareS(a,b)                               CMPU-CMPS(S175,S177)
	S181= CMPU.gt=CompareS(a,b)                                 CMPU-CMPS(S175,S177)
	S182= CMPU.lt=CompareS(a,b)                                 CMPU-CMPS(S175,S177)
	S183= CMPU.zero=>ConditionReg.In                            Premise(F86)
	S184= ConditionReg.In=CompareS(a,b)                         Path(S180,S183)
	S185= CtrlASIDIn=0                                          Premise(F87)
	S186= CtrlCP0=0                                             Premise(F88)
	S187= CP0[ASID]=pid                                         CP0-Hold(S128,S186)
	S188= CtrlEPCIn=0                                           Premise(F89)
	S189= CtrlExCodeIn=0                                        Premise(F90)
	S190= CtrlIMMU=0                                            Premise(F91)
	S191= CtrlPC=0                                              Premise(F92)
	S192= CtrlPCInc=0                                           Premise(F93)
	S193= PC[CIA]=addr                                          PC-Hold(S134,S192)
	S194= PC[Out]=addr+4                                        PC-Hold(S135,S191,S192)
	S195= CtrlIAddrReg=0                                        Premise(F94)
	S196= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S137,S195)
	S197= CtrlICache=0                                          Premise(F95)
	S198= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S139,S197)
	S199= CtrlIR=0                                              Premise(F96)
	S200= [IR]={0,rs,rt,code,52}                                IR-Hold(S141,S199)
	S201= CtrlICacheReg=0                                       Premise(F97)
	S202= CtrlIMem=0                                            Premise(F98)
	S203= IMem[{pid,addr}]={0,rs,rt,code,52}                    IMem-Hold(S144,S202)
	S204= CtrlIRMux=0                                           Premise(F99)
	S205= CtrlGPR=0                                             Premise(F100)
	S206= GPR[rs]=a                                             GPR-Hold(S147,S205)
	S207= GPR[rt]=b                                             GPR-Hold(S148,S205)
	S208= CtrlA=0                                               Premise(F101)
	S209= [A]=a                                                 A-Hold(S150,S208)
	S210= CtrlB=0                                               Premise(F102)
	S211= [B]=b                                                 B-Hold(S152,S210)
	S212= CtrlConditionReg=1                                    Premise(F103)
	S213= [ConditionReg]=CompareS(a,b)                          ConditionReg-Write(S184,S212)
	S214= CtrlPIDReg=0                                          Premise(F104)

MEM	S215= CP0.ASID=pid                                          CP0-Read-ASID(S187)
	S216= PC.CIA=addr                                           PC-Out(S193)
	S217= PC.CIA31_28=addr[31:28]                               PC-Out(S193)
	S218= PC.Out=addr+4                                         PC-Out(S194)
	S219= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S196)
	S220= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S196)
	S221= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S196)
	S222= IR.Out={0,rs,rt,code,52}                              IR-Out(S200)
	S223= IR.Out31_26=0                                         IR-Out(S200)
	S224= IR.Out25_21=rs                                        IR-Out(S200)
	S225= IR.Out20_16=rt                                        IR-Out(S200)
	S226= IR.Out15_6=code                                       IR-Out(S200)
	S227= IR.Out5_0=52                                          IR-Out(S200)
	S228= A.Out=a                                               A-Out(S209)
	S229= A.Out1_0={a}[1:0]                                     A-Out(S209)
	S230= A.Out4_0={a}[4:0]                                     A-Out(S209)
	S231= B.Out=b                                               B-Out(S211)
	S232= B.Out1_0={b}[1:0]                                     B-Out(S211)
	S233= B.Out4_0={b}[4:0]                                     B-Out(S211)
	S234= ConditionReg.Out=CompareS(a,b)                        ConditionReg-Out(S213)
	S235= ConditionReg.Out1_0={CompareS(a,b)}[1:0]              ConditionReg-Out(S213)
	S236= ConditionReg.Out4_0={CompareS(a,b)}[4:0]              ConditionReg-Out(S213)
	S237= PC.Out=>CP0.EPCIn                                     Premise(F105)
	S238= CP0.EPCIn=addr+4                                      Path(S218,S237)
	S239= CP0.ExCodeIn=5'h0d                                    Premise(F106)
	S240= CU.TrapAddr=>PC.In                                    Premise(F107)
	S241= CP0.ASID=>PIDReg.In                                   Premise(F108)
	S242= PIDReg.In=pid                                         Path(S215,S241)
	S243= ConditionReg.Out=>CU.zero                             Premise(F109)
	S244= CU.zero=CompareS(a,b)                                 Path(S234,S243)
	S245= CtrlASIDIn=0                                          Premise(F110)
	S246= CtrlCP0=0                                             Premise(F111)
	S247= CP0[ASID]=pid                                         CP0-Hold(S187,S246)
	S248= CtrlEPCIn=1                                           Premise(F112)
	S249= CP0[EPC]=addr+4                                       CP0-Write-EPC(S238,S248)
	S250= CtrlExCodeIn=1                                        Premise(F113)
	S251= CP0[ExCode]=5'h0d                                     CP0-Write-ExCode(S239,S250)
	S252= CtrlIMMU=0                                            Premise(F114)
	S253= CtrlPC=1                                              Premise(F115)
	S254= CtrlPCInc=0                                           Premise(F116)
	S255= PC[CIA]=addr                                          PC-Hold(S193,S254)
	S256= CtrlIAddrReg=0                                        Premise(F117)
	S257= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S196,S256)
	S258= CtrlICache=0                                          Premise(F118)
	S259= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S198,S258)
	S260= CtrlIR=0                                              Premise(F119)
	S261= [IR]={0,rs,rt,code,52}                                IR-Hold(S200,S260)
	S262= CtrlICacheReg=0                                       Premise(F120)
	S263= CtrlIMem=0                                            Premise(F121)
	S264= IMem[{pid,addr}]={0,rs,rt,code,52}                    IMem-Hold(S203,S263)
	S265= CtrlIRMux=0                                           Premise(F122)
	S266= CtrlGPR=0                                             Premise(F123)
	S267= GPR[rs]=a                                             GPR-Hold(S206,S266)
	S268= GPR[rt]=b                                             GPR-Hold(S207,S266)
	S269= CtrlA=0                                               Premise(F124)
	S270= [A]=a                                                 A-Hold(S209,S269)
	S271= CtrlB=0                                               Premise(F125)
	S272= [B]=b                                                 B-Hold(S211,S271)
	S273= CtrlConditionReg=0                                    Premise(F126)
	S274= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S213,S273)
	S275= CtrlPIDReg=1                                          Premise(F127)
	S276= [PIDReg]=pid                                          PIDReg-Write(S242,S275)

MEM(DMMU1)	S277= CP0.ASID=pid                                          CP0-Read-ASID(S247)
	S278= CP0.EPC=addr+4                                        CP0-Read-EPC(S249)
	S279= PC.CIA=addr                                           PC-Out(S255)
	S280= PC.CIA31_28=addr[31:28]                               PC-Out(S255)
	S281= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S257)
	S282= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S257)
	S283= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S257)
	S284= IR.Out={0,rs,rt,code,52}                              IR-Out(S261)
	S285= IR.Out31_26=0                                         IR-Out(S261)
	S286= IR.Out25_21=rs                                        IR-Out(S261)
	S287= IR.Out20_16=rt                                        IR-Out(S261)
	S288= IR.Out15_6=code                                       IR-Out(S261)
	S289= IR.Out5_0=52                                          IR-Out(S261)
	S290= A.Out=a                                               A-Out(S270)
	S291= A.Out1_0={a}[1:0]                                     A-Out(S270)
	S292= A.Out4_0={a}[4:0]                                     A-Out(S270)
	S293= B.Out=b                                               B-Out(S272)
	S294= B.Out1_0={b}[1:0]                                     B-Out(S272)
	S295= B.Out4_0={b}[4:0]                                     B-Out(S272)
	S296= ConditionReg.Out=CompareS(a,b)                        ConditionReg-Out(S274)
	S297= ConditionReg.Out1_0={CompareS(a,b)}[1:0]              ConditionReg-Out(S274)
	S298= ConditionReg.Out4_0={CompareS(a,b)}[4:0]              ConditionReg-Out(S274)
	S299= PIDReg.Out=pid                                        PIDReg-Out(S276)
	S300= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S276)
	S301= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S276)
	S302= CtrlASIDIn=0                                          Premise(F128)
	S303= CtrlCP0=0                                             Premise(F129)
	S304= CP0[ASID]=pid                                         CP0-Hold(S247,S303)
	S305= CP0[EPC]=addr+4                                       CP0-Hold(S249,S303)
	S306= CP0[ExCode]=5'h0d                                     CP0-Hold(S251,S303)
	S307= CtrlEPCIn=0                                           Premise(F130)
	S308= CtrlExCodeIn=0                                        Premise(F131)
	S309= CtrlIMMU=0                                            Premise(F132)
	S310= CtrlPC=0                                              Premise(F133)
	S311= CtrlPCInc=0                                           Premise(F134)
	S312= PC[CIA]=addr                                          PC-Hold(S255,S311)
	S313= CtrlIAddrReg=0                                        Premise(F135)
	S314= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S257,S313)
	S315= CtrlICache=0                                          Premise(F136)
	S316= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S259,S315)
	S317= CtrlIR=0                                              Premise(F137)
	S318= [IR]={0,rs,rt,code,52}                                IR-Hold(S261,S317)
	S319= CtrlICacheReg=0                                       Premise(F138)
	S320= CtrlIMem=0                                            Premise(F139)
	S321= IMem[{pid,addr}]={0,rs,rt,code,52}                    IMem-Hold(S264,S320)
	S322= CtrlIRMux=0                                           Premise(F140)
	S323= CtrlGPR=0                                             Premise(F141)
	S324= GPR[rs]=a                                             GPR-Hold(S267,S323)
	S325= GPR[rt]=b                                             GPR-Hold(S268,S323)
	S326= CtrlA=0                                               Premise(F142)
	S327= [A]=a                                                 A-Hold(S270,S326)
	S328= CtrlB=0                                               Premise(F143)
	S329= [B]=b                                                 B-Hold(S272,S328)
	S330= CtrlConditionReg=0                                    Premise(F144)
	S331= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S274,S330)
	S332= CtrlPIDReg=0                                          Premise(F145)
	S333= [PIDReg]=pid                                          PIDReg-Hold(S276,S332)

MEM(DMMU2)	S334= CP0.ASID=pid                                          CP0-Read-ASID(S304)
	S335= CP0.EPC=addr+4                                        CP0-Read-EPC(S305)
	S336= PC.CIA=addr                                           PC-Out(S312)
	S337= PC.CIA31_28=addr[31:28]                               PC-Out(S312)
	S338= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S314)
	S339= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S314)
	S340= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S314)
	S341= IR.Out={0,rs,rt,code,52}                              IR-Out(S318)
	S342= IR.Out31_26=0                                         IR-Out(S318)
	S343= IR.Out25_21=rs                                        IR-Out(S318)
	S344= IR.Out20_16=rt                                        IR-Out(S318)
	S345= IR.Out15_6=code                                       IR-Out(S318)
	S346= IR.Out5_0=52                                          IR-Out(S318)
	S347= A.Out=a                                               A-Out(S327)
	S348= A.Out1_0={a}[1:0]                                     A-Out(S327)
	S349= A.Out4_0={a}[4:0]                                     A-Out(S327)
	S350= B.Out=b                                               B-Out(S329)
	S351= B.Out1_0={b}[1:0]                                     B-Out(S329)
	S352= B.Out4_0={b}[4:0]                                     B-Out(S329)
	S353= ConditionReg.Out=CompareS(a,b)                        ConditionReg-Out(S331)
	S354= ConditionReg.Out1_0={CompareS(a,b)}[1:0]              ConditionReg-Out(S331)
	S355= ConditionReg.Out4_0={CompareS(a,b)}[4:0]              ConditionReg-Out(S331)
	S356= PIDReg.Out=pid                                        PIDReg-Out(S333)
	S357= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S333)
	S358= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S333)
	S359= CtrlASIDIn=0                                          Premise(F146)
	S360= CtrlCP0=0                                             Premise(F147)
	S361= CP0[ASID]=pid                                         CP0-Hold(S304,S360)
	S362= CP0[EPC]=addr+4                                       CP0-Hold(S305,S360)
	S363= CP0[ExCode]=5'h0d                                     CP0-Hold(S306,S360)
	S364= CtrlEPCIn=0                                           Premise(F148)
	S365= CtrlExCodeIn=0                                        Premise(F149)
	S366= CtrlIMMU=0                                            Premise(F150)
	S367= CtrlPC=0                                              Premise(F151)
	S368= CtrlPCInc=0                                           Premise(F152)
	S369= PC[CIA]=addr                                          PC-Hold(S312,S368)
	S370= CtrlIAddrReg=0                                        Premise(F153)
	S371= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S314,S370)
	S372= CtrlICache=0                                          Premise(F154)
	S373= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S316,S372)
	S374= CtrlIR=0                                              Premise(F155)
	S375= [IR]={0,rs,rt,code,52}                                IR-Hold(S318,S374)
	S376= CtrlICacheReg=0                                       Premise(F156)
	S377= CtrlIMem=0                                            Premise(F157)
	S378= IMem[{pid,addr}]={0,rs,rt,code,52}                    IMem-Hold(S321,S377)
	S379= CtrlIRMux=0                                           Premise(F158)
	S380= CtrlGPR=0                                             Premise(F159)
	S381= GPR[rs]=a                                             GPR-Hold(S324,S380)
	S382= GPR[rt]=b                                             GPR-Hold(S325,S380)
	S383= CtrlA=0                                               Premise(F160)
	S384= [A]=a                                                 A-Hold(S327,S383)
	S385= CtrlB=0                                               Premise(F161)
	S386= [B]=b                                                 B-Hold(S329,S385)
	S387= CtrlConditionReg=0                                    Premise(F162)
	S388= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S331,S387)
	S389= CtrlPIDReg=0                                          Premise(F163)
	S390= [PIDReg]=pid                                          PIDReg-Hold(S333,S389)

WB	S391= CP0.ASID=pid                                          CP0-Read-ASID(S361)
	S392= CP0.EPC=addr+4                                        CP0-Read-EPC(S362)
	S393= PC.CIA=addr                                           PC-Out(S369)
	S394= PC.CIA31_28=addr[31:28]                               PC-Out(S369)
	S395= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S371)
	S396= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S371)
	S397= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S371)
	S398= IR.Out={0,rs,rt,code,52}                              IR-Out(S375)
	S399= IR.Out31_26=0                                         IR-Out(S375)
	S400= IR.Out25_21=rs                                        IR-Out(S375)
	S401= IR.Out20_16=rt                                        IR-Out(S375)
	S402= IR.Out15_6=code                                       IR-Out(S375)
	S403= IR.Out5_0=52                                          IR-Out(S375)
	S404= A.Out=a                                               A-Out(S384)
	S405= A.Out1_0={a}[1:0]                                     A-Out(S384)
	S406= A.Out4_0={a}[4:0]                                     A-Out(S384)
	S407= B.Out=b                                               B-Out(S386)
	S408= B.Out1_0={b}[1:0]                                     B-Out(S386)
	S409= B.Out4_0={b}[4:0]                                     B-Out(S386)
	S410= ConditionReg.Out=CompareS(a,b)                        ConditionReg-Out(S388)
	S411= ConditionReg.Out1_0={CompareS(a,b)}[1:0]              ConditionReg-Out(S388)
	S412= ConditionReg.Out4_0={CompareS(a,b)}[4:0]              ConditionReg-Out(S388)
	S413= PIDReg.Out=pid                                        PIDReg-Out(S390)
	S414= PIDReg.Out1_0={pid}[1:0]                              PIDReg-Out(S390)
	S415= PIDReg.Out4_0={pid}[4:0]                              PIDReg-Out(S390)
	S416= CtrlASIDIn=0                                          Premise(F164)
	S417= CtrlCP0=0                                             Premise(F165)
	S418= CP0[ASID]=pid                                         CP0-Hold(S361,S417)
	S419= CP0[EPC]=addr+4                                       CP0-Hold(S362,S417)
	S420= CP0[ExCode]=5'h0d                                     CP0-Hold(S363,S417)
	S421= CtrlEPCIn=0                                           Premise(F166)
	S422= CtrlExCodeIn=0                                        Premise(F167)
	S423= CtrlIMMU=0                                            Premise(F168)
	S424= CtrlPC=0                                              Premise(F169)
	S425= CtrlPCInc=0                                           Premise(F170)
	S426= PC[CIA]=addr                                          PC-Hold(S369,S425)
	S427= CtrlIAddrReg=0                                        Premise(F171)
	S428= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S371,S427)
	S429= CtrlICache=0                                          Premise(F172)
	S430= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S373,S429)
	S431= CtrlIR=0                                              Premise(F173)
	S432= [IR]={0,rs,rt,code,52}                                IR-Hold(S375,S431)
	S433= CtrlICacheReg=0                                       Premise(F174)
	S434= CtrlIMem=0                                            Premise(F175)
	S435= IMem[{pid,addr}]={0,rs,rt,code,52}                    IMem-Hold(S378,S434)
	S436= CtrlIRMux=0                                           Premise(F176)
	S437= CtrlGPR=0                                             Premise(F177)
	S438= GPR[rs]=a                                             GPR-Hold(S381,S437)
	S439= GPR[rt]=b                                             GPR-Hold(S382,S437)
	S440= CtrlA=0                                               Premise(F178)
	S441= [A]=a                                                 A-Hold(S384,S440)
	S442= CtrlB=0                                               Premise(F179)
	S443= [B]=b                                                 B-Hold(S386,S442)
	S444= CtrlConditionReg=0                                    Premise(F180)
	S445= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S388,S444)
	S446= CtrlPIDReg=0                                          Premise(F181)
	S447= [PIDReg]=pid                                          PIDReg-Hold(S390,S446)

POST	S418= CP0[ASID]=pid                                         CP0-Hold(S361,S417)
	S419= CP0[EPC]=addr+4                                       CP0-Hold(S362,S417)
	S420= CP0[ExCode]=5'h0d                                     CP0-Hold(S363,S417)
	S426= PC[CIA]=addr                                          PC-Hold(S369,S425)
	S428= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S371,S427)
	S430= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S373,S429)
	S432= [IR]={0,rs,rt,code,52}                                IR-Hold(S375,S431)
	S435= IMem[{pid,addr}]={0,rs,rt,code,52}                    IMem-Hold(S378,S434)
	S438= GPR[rs]=a                                             GPR-Hold(S381,S437)
	S439= GPR[rt]=b                                             GPR-Hold(S382,S437)
	S441= [A]=a                                                 A-Hold(S384,S440)
	S443= [B]=b                                                 B-Hold(S386,S442)
	S445= [ConditionReg]=CompareS(a,b)                          ConditionReg-Hold(S388,S444)
	S447= [PIDReg]=pid                                          PIDReg-Hold(S390,S446)

