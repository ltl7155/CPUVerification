
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= ICache[addr]={35,rS,rT,offset}                          Premise(F3)
	S3= GPR[rS]=base                                            Premise(F4)
	S4= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a          Premise(F5)

IF	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>ICache.IEA                                      Premise(F81)
	S7= ICache.IEA=addr                                         Path(S5,S6)
	S8= ICache.Out={35,rS,rT,offset}                            ICache-Search(S7,S2)
	S9= ICache.Out=>IR_ID.In                                    Premise(F89)
	S10= IR_ID.In={35,rS,rT,offset}                             Path(S8,S9)
	S11= CtrlDMem=0                                             Premise(F137)
	S12= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S4,S11)
	S13= CtrlCP0=0                                              Premise(F141)
	S14= CP0[ASID]=pid                                          CP0-Hold(S0,S13)
	S15= CtrlIR_ID=1                                            Premise(F150)
	S16= [IR_ID]={35,rS,rT,offset}                              IR_ID-Write(S10,S15)
	S17= CtrlGPR=0                                              Premise(F154)
	S18= GPR[rS]=base                                           GPR-Hold(S3,S17)
	S19= CtrlPC=0                                               Premise(F156)
	S20= CtrlPCInc=1                                            Premise(F157)
	S21= PC[Out]=addr+4                                         PC-Inc(S1,S19,S20)

ID	S22= IR_ID.Out={35,rS,rT,offset}                            IR-Out(S16)
	S23= IR_ID.Out25_21=rS                                      IR-Out(S16)
	S24= IR_ID.Out15_0=offset                                   IR-Out(S16)
	S25= FU.OutID1=>A_EX.In                                     Premise(F321)
	S26= IMMEXT.Out=>B_EX.In                                    Premise(F322)
	S27= GPR.Rdata1=>FU.InID1                                   Premise(F380)
	S28= IR_ID.Out25_21=>GPR.RReg1                              Premise(F386)
	S29= GPR.RReg1=rS                                           Path(S23,S28)
	S30= GPR.Rdata1=base                                        GPR-Read(S29,S18)
	S31= FU.InID1=base                                          Path(S30,S27)
	S32= FU.OutID1=FU(base)                                     FU-Forward(S31)
	S33= A_EX.In=FU(base)                                       Path(S32,S25)
	S34= IR_ID.Out15_0=>IMMEXT.In                               Premise(F392)
	S35= IMMEXT.In=offset                                       Path(S24,S34)
	S36= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S35)
	S37= B_EX.In={16{offset[15]},offset}                        Path(S36,S26)
	S38= IR_ID.Out=>IR_EX.In                                    Premise(F397)
	S39= IR_EX.In={35,rS,rT,offset}                             Path(S22,S38)
	S40= CtrlA_EX=1                                             Premise(F428)
	S41= [A_EX]=FU(base)                                        A_EX-Write(S33,S40)
	S42= CtrlB_EX=1                                             Premise(F429)
	S43= [B_EX]={16{offset[15]},offset}                         B_EX-Write(S37,S42)
	S44= CtrlDMem=0                                             Premise(F446)
	S45= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S12,S44)
	S46= CtrlCP0=0                                              Premise(F450)
	S47= CP0[ASID]=pid                                          CP0-Hold(S14,S46)
	S48= CtrlIR_EX=1                                            Premise(F458)
	S49= [IR_EX]={35,rS,rT,offset}                              IR_EX-Write(S39,S48)
	S50= CtrlPC=0                                               Premise(F465)
	S51= CtrlPCInc=0                                            Premise(F466)
	S52= PC[Out]=addr+4                                         PC-Hold(S21,S50,S51)

EX	S53= A_EX.Out=FU(base)                                      A_EX-Out(S41)
	S54= B_EX.Out={16{offset[15]},offset}                       B_EX-Out(S43)
	S55= IR_EX.Out={35,rS,rT,offset}                            IR_EX-Out(S49)
	S56= A_EX.Out=>ALU.A                                        Premise(F470)
	S57= ALU.A=FU(base)                                         Path(S53,S56)
	S58= B_EX.Out=>ALU.B                                        Premise(F471)
	S59= ALU.B={16{offset[15]},offset}                          Path(S54,S58)
	S60= ALU.Out=FU(base)+{16{offset[15]},offset}               ALU(S57,S59)
	S61= ALU.Out=>ALUOut_MEM.In                                 Premise(F475)
	S62= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}         Path(S60,S61)
	S63= IR_EX.Out=>IR_MEM.In                                   Premise(F555)
	S64= IR_MEM.In={35,rS,rT,offset}                            Path(S55,S63)
	S65= CtrlALUOut_MEM=1                                       Premise(F585)
	S66= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}          ALUOut_MEM-Write(S62,S65)
	S67= CtrlDMem=0                                             Premise(F601)
	S68= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S45,S67)
	S69= CtrlCP0=0                                              Premise(F605)
	S70= CP0[ASID]=pid                                          CP0-Hold(S47,S69)
	S71= CtrlIR_MEM=1                                           Premise(F616)
	S72= [IR_MEM]={35,rS,rT,offset}                             IR_MEM-Write(S64,S71)
	S73= CtrlPC=0                                               Premise(F620)
	S74= CtrlPCInc=0                                            Premise(F621)
	S75= PC[Out]=addr+4                                         PC-Hold(S52,S73,S74)

MEM	S76= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}        ALUOut_MEM-Out(S66)
	S77= CP0.ASID=pid                                           CP0-Read-ASID(S70)
	S78= IR_MEM.Out={35,rS,rT,offset}                           IR_MEM-Out(S72)
	S79= ALUOut_MEM.Out=>ALUOut_DMMU1.In                        Premise(F627)
	S80= ALUOut_DMMU1.In=FU(base)+{16{offset[15]},offset}       Path(S76,S79)
	S81= DMMU.Addr=>DAddrReg_DMMU1.In                           Premise(F662)
	S82= ALUOut_MEM.Out=>DMMU.IEA                               Premise(F668)
	S83= DMMU.IEA=FU(base)+{16{offset[15]},offset}              Path(S76,S82)
	S84= CP0.ASID=>DMMU.PID                                     Premise(F670)
	S85= DMMU.PID=pid                                           Path(S77,S84)
	S86= DMMU.Addr={pid,FU(base)+{16{offset[15]},offset}}       DMMU-Search(S85,S83)
	S87= DAddrReg_DMMU1.In={pid,FU(base)+{16{offset[15]},offset}}Path(S86,S81)
	S88= IR_MEM.Out=>IR_DMMU1.In                                Premise(F704)
	S89= IR_DMMU1.In={35,rS,rT,offset}                          Path(S78,S88)
	S90= CtrlALUOut_DMMU1=1                                     Premise(F740)
	S91= [ALUOut_DMMU1]=FU(base)+{16{offset[15]},offset}        ALUOut_DMMU1-Write(S80,S90)
	S92= CtrlDAddrReg_DMMU1=1                                   Premise(F751)
	S93= [DAddrReg_DMMU1]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Write(S87,S92)
	S94= CtrlDMem=0                                             Premise(F755)
	S95= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S68,S94)
	S96= CtrlCP0=0                                              Premise(F759)
	S97= CP0[ASID]=pid                                          CP0-Hold(S70,S96)
	S98= CtrlIR_DMMU1=1                                         Premise(F765)
	S99= [IR_DMMU1]={35,rS,rT,offset}                           IR_DMMU1-Write(S89,S98)
	S100= CtrlPC=0                                              Premise(F774)
	S101= CtrlPCInc=0                                           Premise(F775)
	S102= PC[Out]=addr+4                                        PC-Hold(S75,S100,S101)

DMMU1	S103= ALUOut_DMMU1.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU1-Out(S91)
	S104= DCache.RLineEA=DCacheRLineEA()                        DCache-WriteBack()
	S105= DCache.RLineData=DCacheRLineData()                    DCache-WriteBack()
	S106= DAddrReg_DMMU1.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Out(S93)
	S107= CP0.ASID=pid                                          CP0-Read-ASID(S97)
	S108= IR_DMMU1.Out={35,rS,rT,offset}                        IR_DMMU1-Out(S99)
	S109= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                     Premise(F782)
	S110= ALUOut_DMMU2.In=FU(base)+{16{offset[15]},offset}      Path(S103,S109)
	S111= DAddrReg_DMMU1.Out=>DAddrReg_DMMU2.In                 Premise(F817)
	S112= DAddrReg_DMMU2.In={pid,FU(base)+{16{offset[15]},offset}}Path(S106,S111)
	S113= DCache.RLineEA=>DMMU.IEAR                             Premise(F823)
	S114= DMMU.IEAR=DCacheRLineEA()                             Path(S104,S113)
	S115= CP0.ASID=>DMMU.PID                                    Premise(F824)
	S116= DMMU.PID=pid                                          Path(S107,S115)
	S117= DMMU.AddrR={pid,DCacheRLineEA()}                      DMMU-RSearch(S116,S114)
	S118= DMMU.AddrR=>DMem.MEM8WordWAddr                        Premise(F826)
	S119= DMem.MEM8WordWAddr={pid,DCacheRLineEA()}              Path(S117,S118)
	S120= DCache.RLineData=>DMem.MEM8WordWData                  Premise(F827)
	S121= DMem.MEM8WordWData=DCacheRLineData()                  Path(S105,S120)
	S122= IR_DMMU1.Out=>IR_DMMU2.In                             Premise(F859)
	S123= IR_DMMU2.In={35,rS,rT,offset}                         Path(S108,S122)
	S124= CtrlALUOut_DMMU2=1                                    Premise(F895)
	S125= [ALUOut_DMMU2]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU2-Write(S110,S124)
	S126= CtrlDAddrReg_DMMU2=1                                  Premise(F906)
	S127= [DAddrReg_DMMU2]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Write(S112,S126)
	S128= CtrlDMem=0                                            Premise(F909)
	S129= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S95,S128)
	S130= CtrlDMem8Word=1                                       Premise(F910)
	S131= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Write8Word(S119,S121,S130)
	S132= CtrlIR_DMMU2=1                                        Premise(F920)
	S133= [IR_DMMU2]={35,rS,rT,offset}                          IR_DMMU2-Write(S123,S132)
	S134= CtrlPC=0                                              Premise(F928)
	S135= CtrlPCInc=0                                           Premise(F929)
	S136= PC[Out]=addr+4                                        PC-Hold(S102,S134,S135)

DMMU2	S137= ALUOut_DMMU2.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU2-Out(S125)
	S138= DAddrReg_DMMU2.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Out(S127)
	S139= IR_DMMU2.Out={35,rS,rT,offset}                        IR_DMMU2-Out(S133)
	S140= ALUOut_DMMU2.Out=>ALUOut_WB.In                        Premise(F938)
	S141= ALUOut_WB.In=FU(base)+{16{offset[15]},offset}         Path(S137,S140)
	S142= ALUOut_DMMU2.Out=>DCache.IEA                          Premise(F972)
	S143= DCache.IEA=FU(base)+{16{offset[15]},offset}           Path(S137,S142)
	S144= DMem.MEM8WordOut=>DCache.WData                        Premise(F974)
	S145= DAddrReg_DMMU2.Out=>DMem.RAddr                        Premise(F982)
	S146= DMem.RAddr={pid,FU(base)+{16{offset[15]},offset}}     Path(S138,S145)
	S147= DMem.Out=>DR_WB.In                                    Premise(F985)
	S148= IR_DMMU2.Out=>IR_WB.In                                Premise(F1018)
	S149= IR_WB.In={35,rS,rT,offset}                            Path(S139,S148)
	S150= CtrlALUOut_WB=1                                       Premise(F1050)
	S151= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}          ALUOut_WB-Write(S141,S150)
	S152= CtrlDCache=1                                          Premise(F1055)
	S153= CtrlDMem=0                                            Premise(F1063)
	S154= CtrlDMem8Word=0                                       Premise(F1064)
	S155= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S131,S154)
	S156= DMem.Out=a                                            DMem-Read(S146,S129,S153,S154)
	S157= DR_WB.In=a                                            Path(S156,S147)
	S158= DMem.MEM8WordOut=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DMem-Read(S146,S129,S153,S154)
	S159= DCache.WData=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})Path(S158,S144)
	S160= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Write8Word(S143,S159,S152)
	S161= CtrlDR_WB=1                                           Premise(F1072)
	S162= [DR_WB]=a                                             DR_WB-Write(S157,S161)
	S163= CtrlIR_WB=1                                           Premise(F1079)
	S164= [IR_WB]={35,rS,rT,offset}                             IR_WB-Write(S149,S163)
	S165= CtrlPC=0                                              Premise(F1082)
	S166= CtrlPCInc=0                                           Premise(F1083)
	S167= PC[Out]=addr+4                                        PC-Hold(S136,S165,S166)

WB	S168= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S151)
	S169= DR_WB.Out=a                                           DR_WB-Out(S162)
	S170= IR_WB.Out20_16=rT                                     IR-Out(S164)
	S171= MemDataSelL.Out=>GPR.WData                            Premise(F1158)
	S172= IR_WB.Out20_16=>GPR.WReg                              Premise(F1159)
	S173= GPR.WReg=rT                                           Path(S170,S172)
	S174= ALUOut_WB.Out1_0=>MemDataSelL.Addr                    Premise(F1173)
	S175= MemDataSelL.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S168,S174)
	S176= DR_WB.Out=>MemDataSelL.In                             Premise(F1175)
	S177= MemDataSelL.In=a                                      Path(S169,S176)
	S178= MemDataSelL.Out=a                                     MemDataSelL(S177,S175)
	S179= GPR.WData=a                                           Path(S178,S171)
	S180= CtrlDCache=0                                          Premise(F1210)
	S181= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S160,S180)
	S182= CtrlDMem8Word=0                                       Premise(F1219)
	S183= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S155,S182)
	S184= CtrlGPR=1                                             Premise(F1235)
	S185= GPR[rT]=a                                             GPR-Write(S173,S179,S184)
	S186= CtrlPC=0                                              Premise(F1237)
	S187= CtrlPCInc=0                                           Premise(F1238)
	S188= PC[Out]=addr+4                                        PC-Hold(S167,S186,S187)

POST	S181= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S160,S180)
	S183= DMem[line_{pid,DCacheRLineEA()}]=DCacheRLineData()    DMem-Hold8Word(S155,S182)
	S185= GPR[rT]=a                                             GPR-Write(S173,S179,S184)
	S188= PC[Out]=addr+4                                        PC-Hold(S167,S186,S187)

