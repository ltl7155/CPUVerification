
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                       Premise(F2)
	S3= GPR[rT]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>IMem.RAddr                                      Premise(F4)
	S7= IMem.RAddr=addr                                         Path(S5,S6)
	S8= CP0.ASID=>IMem.ASID                                     Premise(F5)
	S9= IMem.ASID=pid                                           Path(S4,S8)
	S10= IMem.Out={0,0,rT,rD,sa,3}                              IMem-Read(S9,S7,S2)
	S11= IMem.Out=>IR.In                                        Premise(F6)
	S12= IR.In={0,0,rT,rD,sa,3}                                 Path(S10,S11)
	S13= CtrlPC=0                                               Premise(F7)
	S14= CtrlPCInc=1                                            Premise(F8)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= PC[CIA]=addr                                           PC-Inc(S1,S13,S14)
	S17= CtrlIMem=0                                             Premise(F9)
	S18= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                      IMem-Hold(S2,S17)
	S19= CtrlASIDIn=0                                           Premise(F10)
	S20= CtrlCP0=0                                              Premise(F11)
	S21= CP0[ASID]=pid                                          CP0-Hold(S0,S20)
	S22= CtrlEPCIn=0                                            Premise(F12)
	S23= CtrlExCodeIn=0                                         Premise(F13)
	S24= CtrlIR=1                                               Premise(F14)
	S25= [IR]={0,0,rT,rD,sa,3}                                  IR-Write(S12,S24)
	S26= CtrlGPR=0                                              Premise(F15)
	S27= GPR[rT]=a                                              GPR-Hold(S3,S26)
	S28= CtrlB=0                                                Premise(F16)
	S29= CtrlALUOut=0                                           Premise(F17)

ID	S30= PC.Out=addr+4                                          PC-Out(S15)
	S31= PC.CIA=addr                                            PC-Out(S16)
	S32= PC.CIA31_28=addr[31:28]                                PC-Out(S16)
	S33= CP0.ASID=pid                                           CP0-Read-ASID(S21)
	S34= IR.Out={0,0,rT,rD,sa,3}                                IR-Out(S25)
	S35= IR.Out31_26=0                                          IR-Out(S25)
	S36= IR.Out25_21=0                                          IR-Out(S25)
	S37= IR.Out20_16=rT                                         IR-Out(S25)
	S38= IR.Out15_11=rD                                         IR-Out(S25)
	S39= IR.Out10_6=sa                                          IR-Out(S25)
	S40= IR.Out5_0=3                                            IR-Out(S25)
	S41= IR.Out31_26=>CU.Op                                     Premise(F18)
	S42= CU.Op=0                                                Path(S35,S41)
	S43= IR.Out20_16=>GPR.RReg2                                 Premise(F19)
	S44= GPR.RReg2=rT                                           Path(S37,S43)
	S45= GPR.Rdata2=a                                           GPR-Read(S44,S27)
	S46= IR.Out5_0=>CU.IRFunc                                   Premise(F20)
	S47= CU.IRFunc=3                                            Path(S40,S46)
	S48= GPR.Rdata2=>B.In                                       Premise(F21)
	S49= B.In=a                                                 Path(S45,S48)
	S50= CtrlPC=0                                               Premise(F22)
	S51= CtrlPCInc=0                                            Premise(F23)
	S52= PC[CIA]=addr                                           PC-Hold(S16,S51)
	S53= PC[Out]=addr+4                                         PC-Hold(S15,S50,S51)
	S54= CtrlIMem=0                                             Premise(F24)
	S55= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                      IMem-Hold(S18,S54)
	S56= CtrlASIDIn=0                                           Premise(F25)
	S57= CtrlCP0=0                                              Premise(F26)
	S58= CP0[ASID]=pid                                          CP0-Hold(S21,S57)
	S59= CtrlEPCIn=0                                            Premise(F27)
	S60= CtrlExCodeIn=0                                         Premise(F28)
	S61= CtrlIR=0                                               Premise(F29)
	S62= [IR]={0,0,rT,rD,sa,3}                                  IR-Hold(S25,S61)
	S63= CtrlGPR=0                                              Premise(F30)
	S64= GPR[rT]=a                                              GPR-Hold(S27,S63)
	S65= CtrlB=1                                                Premise(F31)
	S66= [B]=a                                                  B-Write(S49,S65)
	S67= CtrlALUOut=0                                           Premise(F32)

EX	S68= PC.CIA=addr                                            PC-Out(S52)
	S69= PC.CIA31_28=addr[31:28]                                PC-Out(S52)
	S70= PC.Out=addr+4                                          PC-Out(S53)
	S71= CP0.ASID=pid                                           CP0-Read-ASID(S58)
	S72= IR.Out={0,0,rT,rD,sa,3}                                IR-Out(S62)
	S73= IR.Out31_26=0                                          IR-Out(S62)
	S74= IR.Out25_21=0                                          IR-Out(S62)
	S75= IR.Out20_16=rT                                         IR-Out(S62)
	S76= IR.Out15_11=rD                                         IR-Out(S62)
	S77= IR.Out10_6=sa                                          IR-Out(S62)
	S78= IR.Out5_0=3                                            IR-Out(S62)
	S79= B.Out=a                                                B-Out(S66)
	S80= B.Out1_0={a}[1:0]                                      B-Out(S66)
	S81= B.Out4_0={a}[4:0]                                      B-Out(S66)
	S82= IR.Out10_6=>SU.Shamt                                   Premise(F33)
	S83= SU.Shamt=sa                                            Path(S77,S82)
	S84= B.Out=>SU.Data                                         Premise(F34)
	S85= SU.Data=a                                              Path(S79,S84)
	S86= SU.Func=6'b000110                                      Premise(F35)
	S87= SU.Out=a>>sa                                           SU(S85,S83)
	S88= SU.CMP=Compare0(a>>sa)                                 SU(S85,S83)
	S89= SU.CA=Carry(a>>sa)                                     SU(S85,S83)
	S90= SU.Out=>ALUOut.In                                      Premise(F36)
	S91= ALUOut.In=a>>sa                                        Path(S87,S90)
	S92= CtrlPC=0                                               Premise(F37)
	S93= CtrlPCInc=0                                            Premise(F38)
	S94= PC[CIA]=addr                                           PC-Hold(S52,S93)
	S95= PC[Out]=addr+4                                         PC-Hold(S53,S92,S93)
	S96= CtrlIMem=0                                             Premise(F39)
	S97= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                      IMem-Hold(S55,S96)
	S98= CtrlASIDIn=0                                           Premise(F40)
	S99= CtrlCP0=0                                              Premise(F41)
	S100= CP0[ASID]=pid                                         CP0-Hold(S58,S99)
	S101= CtrlEPCIn=0                                           Premise(F42)
	S102= CtrlExCodeIn=0                                        Premise(F43)
	S103= CtrlIR=0                                              Premise(F44)
	S104= [IR]={0,0,rT,rD,sa,3}                                 IR-Hold(S62,S103)
	S105= CtrlGPR=0                                             Premise(F45)
	S106= GPR[rT]=a                                             GPR-Hold(S64,S105)
	S107= CtrlB=0                                               Premise(F46)
	S108= [B]=a                                                 B-Hold(S66,S107)
	S109= CtrlALUOut=1                                          Premise(F47)
	S110= [ALUOut]=a>>sa                                        ALUOut-Write(S91,S109)

MEM	S111= PC.CIA=addr                                           PC-Out(S94)
	S112= PC.CIA31_28=addr[31:28]                               PC-Out(S94)
	S113= PC.Out=addr+4                                         PC-Out(S95)
	S114= CP0.ASID=pid                                          CP0-Read-ASID(S100)
	S115= IR.Out={0,0,rT,rD,sa,3}                               IR-Out(S104)
	S116= IR.Out31_26=0                                         IR-Out(S104)
	S117= IR.Out25_21=0                                         IR-Out(S104)
	S118= IR.Out20_16=rT                                        IR-Out(S104)
	S119= IR.Out15_11=rD                                        IR-Out(S104)
	S120= IR.Out10_6=sa                                         IR-Out(S104)
	S121= IR.Out5_0=3                                           IR-Out(S104)
	S122= B.Out=a                                               B-Out(S108)
	S123= B.Out1_0={a}[1:0]                                     B-Out(S108)
	S124= B.Out4_0={a}[4:0]                                     B-Out(S108)
	S125= ALUOut.Out=a>>sa                                      ALUOut-Out(S110)
	S126= ALUOut.Out1_0={a>>sa}[1:0]                            ALUOut-Out(S110)
	S127= ALUOut.Out4_0={a>>sa}[4:0]                            ALUOut-Out(S110)
	S128= CtrlPC=0                                              Premise(F48)
	S129= CtrlPCInc=0                                           Premise(F49)
	S130= PC[CIA]=addr                                          PC-Hold(S94,S129)
	S131= PC[Out]=addr+4                                        PC-Hold(S95,S128,S129)
	S132= CtrlIMem=0                                            Premise(F50)
	S133= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                     IMem-Hold(S97,S132)
	S134= CtrlASIDIn=0                                          Premise(F51)
	S135= CtrlCP0=0                                             Premise(F52)
	S136= CP0[ASID]=pid                                         CP0-Hold(S100,S135)
	S137= CtrlEPCIn=0                                           Premise(F53)
	S138= CtrlExCodeIn=0                                        Premise(F54)
	S139= CtrlIR=0                                              Premise(F55)
	S140= [IR]={0,0,rT,rD,sa,3}                                 IR-Hold(S104,S139)
	S141= CtrlGPR=0                                             Premise(F56)
	S142= GPR[rT]=a                                             GPR-Hold(S106,S141)
	S143= CtrlB=0                                               Premise(F57)
	S144= [B]=a                                                 B-Hold(S108,S143)
	S145= CtrlALUOut=0                                          Premise(F58)
	S146= [ALUOut]=a>>sa                                        ALUOut-Hold(S110,S145)

WB	S147= PC.CIA=addr                                           PC-Out(S130)
	S148= PC.CIA31_28=addr[31:28]                               PC-Out(S130)
	S149= PC.Out=addr+4                                         PC-Out(S131)
	S150= CP0.ASID=pid                                          CP0-Read-ASID(S136)
	S151= IR.Out={0,0,rT,rD,sa,3}                               IR-Out(S140)
	S152= IR.Out31_26=0                                         IR-Out(S140)
	S153= IR.Out25_21=0                                         IR-Out(S140)
	S154= IR.Out20_16=rT                                        IR-Out(S140)
	S155= IR.Out15_11=rD                                        IR-Out(S140)
	S156= IR.Out10_6=sa                                         IR-Out(S140)
	S157= IR.Out5_0=3                                           IR-Out(S140)
	S158= B.Out=a                                               B-Out(S144)
	S159= B.Out1_0={a}[1:0]                                     B-Out(S144)
	S160= B.Out4_0={a}[4:0]                                     B-Out(S144)
	S161= ALUOut.Out=a>>sa                                      ALUOut-Out(S146)
	S162= ALUOut.Out1_0={a>>sa}[1:0]                            ALUOut-Out(S146)
	S163= ALUOut.Out4_0={a>>sa}[4:0]                            ALUOut-Out(S146)
	S164= IR.Out15_11=>GPR.WReg                                 Premise(F59)
	S165= GPR.WReg=rD                                           Path(S155,S164)
	S166= ALUOut.Out=>GPR.WData                                 Premise(F60)
	S167= GPR.WData=a>>sa                                       Path(S161,S166)
	S168= CtrlPC=0                                              Premise(F61)
	S169= CtrlPCInc=0                                           Premise(F62)
	S170= PC[CIA]=addr                                          PC-Hold(S130,S169)
	S171= PC[Out]=addr+4                                        PC-Hold(S131,S168,S169)
	S172= CtrlIMem=0                                            Premise(F63)
	S173= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                     IMem-Hold(S133,S172)
	S174= CtrlASIDIn=0                                          Premise(F64)
	S175= CtrlCP0=0                                             Premise(F65)
	S176= CP0[ASID]=pid                                         CP0-Hold(S136,S175)
	S177= CtrlEPCIn=0                                           Premise(F66)
	S178= CtrlExCodeIn=0                                        Premise(F67)
	S179= CtrlIR=0                                              Premise(F68)
	S180= [IR]={0,0,rT,rD,sa,3}                                 IR-Hold(S140,S179)
	S181= CtrlGPR=1                                             Premise(F69)
	S182= GPR[rD]=a>>sa                                         GPR-Write(S165,S167,S181)
	S183= CtrlB=0                                               Premise(F70)
	S184= [B]=a                                                 B-Hold(S144,S183)
	S185= CtrlALUOut=0                                          Premise(F71)
	S186= [ALUOut]=a>>sa                                        ALUOut-Hold(S146,S185)

POST	S170= PC[CIA]=addr                                          PC-Hold(S130,S169)
	S171= PC[Out]=addr+4                                        PC-Hold(S131,S168,S169)
	S173= IMem[{pid,addr}]={0,0,rT,rD,sa,3}                     IMem-Hold(S133,S172)
	S176= CP0[ASID]=pid                                         CP0-Hold(S136,S175)
	S180= [IR]={0,0,rT,rD,sa,3}                                 IR-Hold(S140,S179)
	S182= GPR[rD]=a>>sa                                         GPR-Write(S165,S167,S181)
	S184= [B]=a                                                 B-Hold(S144,S183)
	S186= [ALUOut]=a>>sa                                        ALUOut-Hold(S146,S185)

