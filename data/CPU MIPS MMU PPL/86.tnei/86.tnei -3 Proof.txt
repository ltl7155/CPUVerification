
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={1,rs,14,imm}                              Premise(F3)
	S2= GPR[rs]=a                                               Premise(F4)

IF	S3= PC.Out=addr                                             PC-Out(S0)
	S4= PC.Out=>ICache.IEA                                      Premise(F56)
	S5= ICache.IEA=addr                                         Path(S3,S4)
	S6= ICache.Out={1,rs,14,imm}                                ICache-Search(S5,S1)
	S7= ICache.Out=>IR_ID.In                                    Premise(F64)
	S8= IR_ID.In={1,rs,14,imm}                                  Path(S6,S7)
	S9= CtrlPC=0                                                Premise(F101)
	S10= CtrlPCInc=1                                            Premise(F102)
	S11= PC[Out]=addr+4                                         PC-Inc(S0,S9,S10)
	S12= CtrlIR_ID=1                                            Premise(F116)
	S13= [IR_ID]={1,rs,14,imm}                                  IR_ID-Write(S8,S12)
	S14= CtrlGPR=0                                              Premise(F120)
	S15= GPR[rs]=a                                              GPR-Hold(S2,S14)

ID	S16= IR_ID.Out25_21=rs                                      IR-Out(S13)
	S17= IR_ID.Out15_0=imm                                      IR-Out(S13)
	S18= FU.OutID1=>A_EX.In                                     Premise(F247)
	S19= IMMEXT.Out=>B_EX.In                                    Premise(F249)
	S20= GPR.Rdata1=>FU.InID1                                   Premise(F294)
	S21= IR_ID.Out25_21=>GPR.RReg1                              Premise(F297)
	S22= GPR.RReg1=rs                                           Path(S16,S21)
	S23= GPR.Rdata1=a                                           GPR-Read(S22,S15)
	S24= FU.InID1=a                                             Path(S23,S20)
	S25= FU.OutID1=FU(a)                                        FU-Forward(S24)
	S26= A_EX.In=FU(a)                                          Path(S25,S18)
	S27= IR_ID.Out15_0=>IMMEXT.In                               Premise(F301)
	S28= IMMEXT.In=imm                                          Path(S17,S27)
	S29= IMMEXT.Out={16{imm[15]},imm}                           IMMEXT(S28)
	S30= B_EX.In={16{imm[15]},imm}                              Path(S29,S19)
	S31= CtrlA_EX=1                                             Premise(F338)
	S32= [A_EX]=FU(a)                                           A_EX-Write(S26,S31)
	S33= CtrlB_EX=1                                             Premise(F341)
	S34= [B_EX]={16{imm[15]},imm}                               B_EX-Write(S30,S33)
	S35= CtrlPC=0                                               Premise(F344)
	S36= CtrlPCInc=0                                            Premise(F345)
	S37= PC[Out]=addr+4                                         PC-Hold(S11,S35,S36)

EX	S38= A_EX.Out=FU(a)                                         A_EX-Out(S32)
	S39= B_EX.Out={16{imm[15]},imm}                             B_EX-Out(S34)
	S40= A_EX.Out=>CMPU.A                                       Premise(F373)
	S41= CMPU.A=FU(a)                                           Path(S38,S40)
	S42= B_EX.Out=>CMPU.B                                       Premise(F374)
	S43= CMPU.B={16{imm[15]},imm}                               Path(S39,S42)
	S44= CMPU.zero=CompareS(FU(a),{16{imm[15]},imm})            CMPU-CMPS(S41,S43)
	S45= CMPU.zero=>ConditionReg_MEM.In                         Premise(F406)
	S46= ConditionReg_MEM.In=CompareS(FU(a),{16{imm[15]},imm})  Path(S44,S45)
	S47= CtrlPC=0                                               Premise(F467)
	S48= CtrlPCInc=0                                            Premise(F468)
	S49= PC[Out]=addr+4                                         PC-Hold(S37,S47,S48)
	S50= CtrlConditionReg_MEM=1                                 Premise(F475)
	S51= [ConditionReg_MEM]=CompareS(FU(a),{16{imm[15]},imm})   ConditionReg_MEM-Write(S46,S50)

MEM	S52= PC.Out=addr+4                                          PC-Out(S49)
	S53= ConditionReg_MEM.Out=CompareS(FU(a),{16{imm[15]},imm}) ConditionReg_MEM-Out(S51)
	S54= PC.Out=>CP0.EPCIn                                      Premise(F498)
	S55= CP0.EPCIn=addr+4                                       Path(S52,S54)
	S56= CP0.ExCodeIn=5'h0d                                     Premise(F499)
	S57= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In            Premise(F527)
	S58= ConditionReg_DMMU1.In=CompareS(FU(a),{16{imm[15]},imm})Path(S53,S57)
	S59= CtrlEPCIn=1                                            Premise(F594)
	S60= CP0[EPC]=addr+4                                        CP0-Write-EPC(S55,S59)
	S61= CtrlExCodeIn=1                                         Premise(F595)
	S62= CP0[ExCode]=5'h0d                                      CP0-Write-ExCode(S56,S61)
	S63= CtrlConditionReg_DMMU1=1                               Premise(F599)
	S64= [ConditionReg_DMMU1]=CompareS(FU(a),{16{imm[15]},imm}) ConditionReg_DMMU1-Write(S58,S63)

DMMU1	S65= ConditionReg_DMMU1.Out=CompareS(FU(a),{16{imm[15]},imm})ConditionReg_DMMU1-Out(S64)
	S66= ConditionReg_DMMU1.Out=>ConditionReg_DMMU2.In          Premise(F650)
	S67= ConditionReg_DMMU2.In=CompareS(FU(a),{16{imm[15]},imm})Path(S65,S66)
	S68= CtrlCP0=0                                              Premise(F715)
	S69= CP0[EPC]=addr+4                                        CP0-Hold(S60,S68)
	S70= CP0[ExCode]=5'h0d                                      CP0-Hold(S62,S68)
	S71= CtrlConditionReg_DMMU2=1                               Premise(F722)
	S72= [ConditionReg_DMMU2]=CompareS(FU(a),{16{imm[15]},imm}) ConditionReg_DMMU2-Write(S67,S71)

DMMU2	S73= ConditionReg_DMMU2.Out=CompareS(FU(a),{16{imm[15]},imm})ConditionReg_DMMU2-Out(S72)
	S74= ConditionReg_DMMU2.Out=>ConditionReg_WB.In             Premise(F774)
	S75= ConditionReg_WB.In=CompareS(FU(a),{16{imm[15]},imm})   Path(S73,S74)
	S76= CtrlCP0=0                                              Premise(F837)
	S77= CP0[EPC]=addr+4                                        CP0-Hold(S69,S76)
	S78= CP0[ExCode]=5'h0d                                      CP0-Hold(S70,S76)
	S79= CtrlConditionReg_WB=1                                  Premise(F845)
	S80= [ConditionReg_WB]=CompareS(FU(a),{16{imm[15]},imm})    ConditionReg_WB-Write(S75,S79)

WB	S81= CtrlCP0=0                                              Premise(F959)
	S82= CP0[EPC]=addr+4                                        CP0-Hold(S77,S81)
	S83= CP0[ExCode]=5'h0d                                      CP0-Hold(S78,S81)
	S84= CtrlConditionReg_WB=0                                  Premise(F967)
	S85= [ConditionReg_WB]=CompareS(FU(a),{16{imm[15]},imm})    ConditionReg_WB-Hold(S80,S84)

POST	S82= CP0[EPC]=addr+4                                        CP0-Hold(S77,S81)
	S83= CP0[ExCode]=5'h0d                                      CP0-Hold(S78,S81)
	S85= [ConditionReg_WB]=CompareS(FU(a),{16{imm[15]},imm})    ConditionReg_WB-Hold(S80,S84)

