
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,cc,0,1,rD,0,1}                   Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= IMMU.Addr=>IAddrReg.In                                  Premise(F68)
	S7= PC.Out=>IMMU.IEA                                        Premise(F73)
	S8= IMMU.IEA=addr                                           Path(S5,S7)
	S9= CP0.ASID=>IMMU.PID                                      Premise(F74)
	S10= IMMU.PID=pid                                           Path(S4,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S10,S8)
	S12= IAddrReg.In={pid,addr}                                 Path(S11,S6)
	S13= CtrlGPR=0                                              Premise(F132)
	S14= GPR[rS]=a                                              GPR-Hold(S3,S13)
	S15= CtrlIAddrReg=1                                         Premise(F133)
	S16= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S12,S15)
	S17= CtrlPC=0                                               Premise(F134)
	S18= CtrlPCInc=0                                            Premise(F135)
	S19= PC[Out]=addr                                           PC-Hold(S1,S17,S18)
	S20= CtrlIMem=0                                             Premise(F136)
	S21= IMem[{pid,addr}]={0,rS,cc,0,1,rD,0,1}                  IMem-Hold(S2,S20)

IMMU	S22= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S16)
	S23= PC.Out=addr                                            PC-Out(S19)
	S24= PC.Out=>ICache.IEA                                     Premise(F208)
	S25= ICache.IEA=addr                                        Path(S23,S24)
	S26= IMem.MEM8WordOut=>ICache.WData                         Premise(F210)
	S27= IAddrReg.Out=>IMem.RAddr                               Premise(F214)
	S28= IMem.RAddr={pid,addr}                                  Path(S22,S27)
	S29= IMem.Out={0,rS,cc,0,1,rD,0,1}                          IMem-Read(S28,S21)
	S30= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S28,S21)
	S31= ICache.WData=IMemGet8Word({pid,addr})                  Path(S30,S26)
	S32= IMem.Out=>IRMux.MemData                                Premise(F217)
	S33= IRMux.MemData={0,rS,cc,0,1,rD,0,1}                     Path(S29,S32)
	S34= IRMux.Out={0,rS,cc,0,1,rD,0,1}                         IRMux-Select2(S33)
	S35= IRMux.Out=>IR_ID.In                                    Premise(F223)
	S36= IR_ID.In={0,rS,cc,0,1,rD,0,1}                          Path(S34,S35)
	S37= CtrlICache=1                                           Premise(F259)
	S38= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S25,S31,S37)
	S39= CtrlIR_ID=1                                            Premise(F267)
	S40= [IR_ID]={0,rS,cc,0,1,rD,0,1}                           IR_ID-Write(S36,S39)
	S41= CtrlGPR=0                                              Premise(F271)
	S42= GPR[rS]=a                                              GPR-Hold(S14,S41)
	S43= CtrlPC=0                                               Premise(F273)
	S44= CtrlPCInc=1                                            Premise(F274)
	S45= PC[Out]=addr+4                                         PC-Inc(S19,S43,S44)

ID	S46= IR_ID.Out={0,rS,cc,0,1,rD,0,1}                         IR-Out(S40)
	S47= IR_ID.Out25_21=rS                                      IR-Out(S40)
	S48= FU.OutID1=>A_EX.In                                     Premise(F284)
	S49= GPR.Rdata1=>FU.InID1                                   Premise(F338)
	S50= IR_ID.Out25_21=>GPR.RReg1                              Premise(F344)
	S51= GPR.RReg1=rS                                           Path(S47,S50)
	S52= GPR.Rdata1=a                                           GPR-Read(S51,S42)
	S53= FU.InID1=a                                             Path(S52,S49)
	S54= FU.OutID1=FU(a)                                        FU-Forward(S53)
	S55= A_EX.In=FU(a)                                          Path(S54,S48)
	S56= IR_ID.Out=>IR_EX.In                                    Premise(F361)
	S57= IR_EX.In={0,rS,cc,0,1,rD,0,1}                          Path(S46,S56)
	S58= CtrlA_EX=1                                             Premise(F395)
	S59= [A_EX]=FU(a)                                           A_EX-Write(S55,S58)
	S60= CtrlIR_EX=1                                            Premise(F397)
	S61= [IR_EX]={0,rS,cc,0,1,rD,0,1}                           IR_EX-Write(S57,S60)
	S62= CtrlICache=0                                           Premise(F399)
	S63= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S38,S62)
	S64= CtrlPC=0                                               Premise(F413)
	S65= CtrlPCInc=0                                            Premise(F414)
	S66= PC[Out]=addr+4                                         PC-Hold(S45,S64,S65)

EX	S67= A_EX.Out=FU(a)                                         A_EX-Out(S59)
	S68= IR_EX.Out={0,rS,cc,0,1,rD,0,1}                         IR_EX-Out(S61)
	S69= IR_EX.Out20_18=cc                                      IR_EX-Out(S61)
	S70= IR_EX.Out16=1                                          IR_EX-Out(S61)
	S71= A_EX.Out=>A_MEM.In                                     Premise(F425)
	S72= A_MEM.In=FU(a)                                         Path(S67,S71)
	S73= IR_EX.Out20_18=>CP1.cc                                 Premise(F428)
	S74= CP1.cc=cc                                              Path(S69,S73)
	S75= IR_EX.Out16=>CP1.tf                                    Premise(F429)
	S76= CP1.tf=1                                               Path(S70,S75)
	S77= CP1.fp=FPConditionCode(cc,1)                           FP-PRODUCT(S74,S76)
	S78= CP1.fp=>ConditionReg_MEM.In                            Premise(F463)
	S79= ConditionReg_MEM.In=FPConditionCode(cc,1)              Path(S77,S78)
	S80= IR_EX.Out=>IR_MEM.In                                   Premise(F504)
	S81= IR_MEM.In={0,rS,cc,0,1,rD,0,1}                         Path(S68,S80)
	S82= CtrlA_MEM=1                                            Premise(F531)
	S83= [A_MEM]=FU(a)                                          A_MEM-Write(S72,S82)
	S84= CtrlICache=0                                           Premise(F538)
	S85= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S63,S84)
	S86= CtrlConditionReg_MEM=1                                 Premise(F541)
	S87= [ConditionReg_MEM]=FPConditionCode(cc,1)               ConditionReg_MEM-Write(S79,S86)
	S88= CtrlIR_MEM=1                                           Premise(F548)
	S89= [IR_MEM]={0,rS,cc,0,1,rD,0,1}                          IR_MEM-Write(S81,S88)
	S90= CtrlPC=0                                               Premise(F552)
	S91= CtrlPCInc=0                                            Premise(F553)
	S92= PC[Out]=addr+4                                         PC-Hold(S66,S90,S91)

MEM	S93= A_MEM.Out=FU(a)                                        A_MEM-Out(S83)
	S94= ConditionReg_MEM.Out=FPConditionCode(cc,1)             ConditionReg_MEM-Out(S87)
	S95= IR_MEM.Out={0,rS,cc,0,1,rD,0,1}                        IR_MEM-Out(S89)
	S96= A_MEM.Out=>A_DMMU1.In                                  Premise(F561)
	S97= A_DMMU1.In=FU(a)                                       Path(S93,S96)
	S98= ConditionReg_MEM.Out=>ConditionReg_DMMU1.In            Premise(F600)
	S99= ConditionReg_DMMU1.In=FPConditionCode(cc,1)            Path(S94,S98)
	S100= IR_MEM.Out=>IR_DMMU1.In                               Premise(F637)
	S101= IR_DMMU1.In={0,rS,cc,0,1,rD,0,1}                      Path(S95,S100)
	S102= CtrlA_DMMU1=1                                         Premise(F671)
	S103= [A_DMMU1]=FU(a)                                       A_DMMU1-Write(S97,S102)
	S104= CtrlICache=0                                          Premise(F677)
	S105= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S85,S104)
	S106= CtrlConditionReg_DMMU1=1                              Premise(F681)
	S107= [ConditionReg_DMMU1]=FPConditionCode(cc,1)            ConditionReg_DMMU1-Write(S99,S106)
	S108= CtrlIR_DMMU1=1                                        Premise(F683)
	S109= [IR_DMMU1]={0,rS,cc,0,1,rD,0,1}                       IR_DMMU1-Write(S101,S108)
	S110= CtrlPC=0                                              Premise(F691)
	S111= CtrlPCInc=0                                           Premise(F692)
	S112= PC[Out]=addr+4                                        PC-Hold(S92,S110,S111)

DMMU1	S113= A_DMMU1.Out=FU(a)                                     A_DMMU1-Out(S103)
	S114= ConditionReg_DMMU1.Out=FPConditionCode(cc,1)          ConditionReg_DMMU1-Out(S107)
	S115= IR_DMMU1.Out={0,rS,cc,0,1,rD,0,1}                     IR_DMMU1-Out(S109)
	S116= A_DMMU1.Out=>A_DMMU2.In                               Premise(F701)
	S117= A_DMMU2.In=FU(a)                                      Path(S113,S116)
	S118= ConditionReg_DMMU1.Out=>ConditionReg_DMMU2.In         Premise(F740)
	S119= ConditionReg_DMMU2.In=FPConditionCode(cc,1)           Path(S114,S118)
	S120= IR_DMMU1.Out=>IR_DMMU2.In                             Premise(F777)
	S121= IR_DMMU2.In={0,rS,cc,0,1,rD,0,1}                      Path(S115,S120)
	S122= CtrlA_DMMU2=1                                         Premise(F811)
	S123= [A_DMMU2]=FU(a)                                       A_DMMU2-Write(S117,S122)
	S124= CtrlICache=0                                          Premise(F816)
	S125= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S105,S124)
	S126= CtrlConditionReg_DMMU2=1                              Premise(F821)
	S127= [ConditionReg_DMMU2]=FPConditionCode(cc,1)            ConditionReg_DMMU2-Write(S119,S126)
	S128= CtrlIR_DMMU2=1                                        Premise(F823)
	S129= [IR_DMMU2]={0,rS,cc,0,1,rD,0,1}                       IR_DMMU2-Write(S121,S128)
	S130= CtrlPC=0                                              Premise(F830)
	S131= CtrlPCInc=0                                           Premise(F831)
	S132= PC[Out]=addr+4                                        PC-Hold(S112,S130,S131)

DMMU2	S133= A_DMMU2.Out=FU(a)                                     A_DMMU2-Out(S123)
	S134= ConditionReg_DMMU2.Out=FPConditionCode(cc,1)          ConditionReg_DMMU2-Out(S127)
	S135= IR_DMMU2.Out={0,rS,cc,0,1,rD,0,1}                     IR_DMMU2-Out(S129)
	S136= A_DMMU2.Out=>A_WB.In                                  Premise(F843)
	S137= A_WB.In=FU(a)                                         Path(S133,S136)
	S138= ConditionReg_DMMU2.Out=>ConditionReg_WB.In            Premise(F881)
	S139= ConditionReg_WB.In=FPConditionCode(cc,1)              Path(S134,S138)
	S140= IR_DMMU2.Out=>IR_WB.In                                Premise(F922)
	S141= IR_WB.In={0,rS,cc,0,1,rD,0,1}                         Path(S135,S140)
	S142= CtrlA_WB=1                                            Premise(F952)
	S143= [A_WB]=FU(a)                                          A_WB-Write(S137,S142)
	S144= CtrlICache=0                                          Premise(F955)
	S145= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S125,S144)
	S146= CtrlConditionReg_WB=1                                 Premise(F957)
	S147= [ConditionReg_WB]=FPConditionCode(cc,1)               ConditionReg_WB-Write(S139,S146)
	S148= CtrlIR_WB=1                                           Premise(F966)
	S149= [IR_WB]={0,rS,cc,0,1,rD,0,1}                          IR_WB-Write(S141,S148)
	S150= CtrlPC=0                                              Premise(F969)
	S151= CtrlPCInc=0                                           Premise(F970)
	S152= PC[Out]=addr+4                                        PC-Hold(S132,S150,S151)

WB	S153= A_WB.Out=FU(a)                                        A_WB-Out(S143)
	S154= IR_WB.Out15_11=rD                                     IR-Out(S149)
	S155= A_WB.Out=>GPR.WData                                   Premise(F1040)
	S156= GPR.WData=FU(a)                                       Path(S153,S155)
	S157= IR_WB.Out15_11=>GPR.WReg                              Premise(F1041)
	S158= GPR.WReg=rD                                           Path(S154,S157)
	S159= CtrlICache=0                                          Premise(F1094)
	S160= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S145,S159)
	S161= CtrlConditionReg_WB=0                                 Premise(F1096)
	S162= [ConditionReg_WB]=FPConditionCode(cc,1)               ConditionReg_WB-Hold(S147,S161)
	S163= CtrlGPR=1                                             Premise(F1106)
	S164= GPR[rD]=FU(a)                                         GPR-Write(S158,S156,S163)
	S165= CtrlPC=0                                              Premise(F1108)
	S166= CtrlPCInc=0                                           Premise(F1109)
	S167= PC[Out]=addr+4                                        PC-Hold(S152,S165,S166)

POST	S160= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S145,S159)
	S162= [ConditionReg_WB]=FPConditionCode(cc,1)               ConditionReg_WB-Hold(S147,S161)
	S164= GPR[rD]=FU(a)                                         GPR-Write(S158,S156,S163)
	S167= PC[Out]=addr+4                                        PC-Hold(S152,S165,S166)

