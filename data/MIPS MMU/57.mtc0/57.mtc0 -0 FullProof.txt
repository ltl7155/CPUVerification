
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={16,4,rT,rD,0,sel}                     Premise(F2)
	S3= GPR[rT]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= CP0.ASID=>IMMU.PID                                      Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S7,S9)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S13= IAddrReg.In={pid,addr}                                 Path(S10,S12)
	S14= IMMU.Hit=>CU.IMMUHit                                   Premise(F7)
	S15= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S11,S14)
	S16= PC.Out=>ICache.IEA                                     Premise(F8)
	S17= ICache.IEA=addr                                        Path(S5,S16)
	S18= ICache.Hit=ICacheHit(addr)                             ICache-Search(S17)
	S19= ICache.Out=>IR.In                                      Premise(F9)
	S20= ICache.Out=>ICacheReg.In                               Premise(F10)
	S21= ICache.Hit=>CU.ICacheHit                               Premise(F11)
	S22= CU.ICacheHit=ICacheHit(addr)                           Path(S18,S21)
	S23= CtrlASIDIn=0                                           Premise(F12)
	S24= CtrlCP0=0                                              Premise(F13)
	S25= CP0[ASID]=pid                                          CP0-Hold(S0,S24)
	S26= CtrlEPCIn=0                                            Premise(F14)
	S27= CtrlExCodeIn=0                                         Premise(F15)
	S28= CtrlIMMU=0                                             Premise(F16)
	S29= CtrlPC=0                                               Premise(F17)
	S30= CtrlPCInc=0                                            Premise(F18)
	S31= PC[Out]=addr                                           PC-Hold(S1,S29,S30)
	S32= CtrlIAddrReg=1                                         Premise(F19)
	S33= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S32)
	S34= CtrlICache=0                                           Premise(F20)
	S35= CtrlIR=0                                               Premise(F21)
	S36= CtrlICacheReg=1                                        Premise(F22)
	S37= CtrlIMem=0                                             Premise(F23)
	S38= IMem[{pid,addr}]={16,4,rT,rD,0,sel}                    IMem-Hold(S2,S37)
	S39= CtrlIRMux=0                                            Premise(F24)
	S40= CtrlGPR=0                                              Premise(F25)
	S41= GPR[rT]=a                                              GPR-Hold(S3,S40)
	S42= CtrlA=0                                                Premise(F26)

IF(IMMU)	S43= CP0.ASID=pid                                           CP0-Read-ASID(S25)
	S44= PC.Out=addr                                            PC-Out(S31)
	S45= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S33)
	S46= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S33)
	S47= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S33)
	S48= CU.IMMUHit=>CU.IMMUHit                                 Premise(F27)
	S49= CU.ICacheHit=>CU.ICacheHit                             Premise(F28)
	S50= IAddrReg.Out=>IMem.RAddr                               Premise(F29)
	S51= IMem.RAddr={pid,addr}                                  Path(S45,S50)
	S52= IMem.Out={16,4,rT,rD,0,sel}                            IMem-Read(S51,S38)
	S53= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S51,S38)
	S54= IMem.Out=>IRMux.MemData                                Premise(F30)
	S55= IRMux.MemData={16,4,rT,rD,0,sel}                       Path(S52,S54)
	S56= IRMux.Out={16,4,rT,rD,0,sel}                           IRMux-Select2(S55)
	S57= ICacheReg.Out=>IRMux.CacheData                         Premise(F31)
	S58= CU.IMMUHit=>IRMux.MemSel                               Premise(F32)
	S59= CU.ICacheHit=>IRMux.CacheSel                           Premise(F33)
	S60= IRMux.Out=>IR.In                                       Premise(F34)
	S61= IR.In={16,4,rT,rD,0,sel}                               Path(S56,S60)
	S62= IMem.MEM8WordOut=>ICache.WData                         Premise(F35)
	S63= ICache.WData=IMemGet8Word({pid,addr})                  Path(S53,S62)
	S64= PC.Out=>ICache.IEA                                     Premise(F36)
	S65= ICache.IEA=addr                                        Path(S44,S64)
	S66= ICache.Hit=ICacheHit(addr)                             ICache-Search(S65)
	S67= CtrlASIDIn=0                                           Premise(F37)
	S68= CtrlCP0=0                                              Premise(F38)
	S69= CP0[ASID]=pid                                          CP0-Hold(S25,S68)
	S70= CtrlEPCIn=0                                            Premise(F39)
	S71= CtrlExCodeIn=0                                         Premise(F40)
	S72= CtrlIMMU=0                                             Premise(F41)
	S73= CtrlPC=0                                               Premise(F42)
	S74= CtrlPCInc=1                                            Premise(F43)
	S75= PC[Out]=addr+4                                         PC-Inc(S31,S73,S74)
	S76= PC[CIA]=addr                                           PC-Inc(S31,S73,S74)
	S77= CtrlIAddrReg=0                                         Premise(F44)
	S78= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S33,S77)
	S79= CtrlICache=1                                           Premise(F45)
	S80= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S65,S63,S79)
	S81= CtrlIR=1                                               Premise(F46)
	S82= [IR]={16,4,rT,rD,0,sel}                                IR-Write(S61,S81)
	S83= CtrlICacheReg=0                                        Premise(F47)
	S84= CtrlIMem=0                                             Premise(F48)
	S85= IMem[{pid,addr}]={16,4,rT,rD,0,sel}                    IMem-Hold(S38,S84)
	S86= CtrlIRMux=0                                            Premise(F49)
	S87= CtrlGPR=0                                              Premise(F50)
	S88= GPR[rT]=a                                              GPR-Hold(S41,S87)
	S89= CtrlA=0                                                Premise(F51)

ID	S90= CP0.ASID=pid                                           CP0-Read-ASID(S69)
	S91= PC.Out=addr+4                                          PC-Out(S75)
	S92= PC.CIA=addr                                            PC-Out(S76)
	S93= PC.CIA31_28=addr[31:28]                                PC-Out(S76)
	S94= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S78)
	S95= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S78)
	S96= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S78)
	S97= IR.Out={16,4,rT,rD,0,sel}                              IR-Out(S82)
	S98= IR.Out31_26=16                                         IR-Out(S82)
	S99= IR.Out25_21=4                                          IR-Out(S82)
	S100= IR.Out20_16=rT                                        IR-Out(S82)
	S101= IR.Out15_11=rD                                        IR-Out(S82)
	S102= IR.Out10_3=0                                          IR-Out(S82)
	S103= IR.Out2_0=sel                                         IR-Out(S82)
	S104= IR.Out31_26=>CU.Op                                    Premise(F52)
	S105= CU.Op=16                                              Path(S98,S104)
	S106= IR.Out25_21=>CU.IRFunc2                               Premise(F53)
	S107= CU.IRFunc2=4                                          Path(S99,S106)
	S108= IR.Out20_16=>GPR.RReg1                                Premise(F54)
	S109= GPR.RReg1=rT                                          Path(S100,S108)
	S110= GPR.Rdata1=a                                          GPR-Read(S109,S88)
	S111= GPR.Rdata1=>A.In                                      Premise(F55)
	S112= A.In=a                                                Path(S110,S111)
	S113= CtrlASIDIn=0                                          Premise(F56)
	S114= CtrlCP0=0                                             Premise(F57)
	S115= CP0[ASID]=pid                                         CP0-Hold(S69,S114)
	S116= CtrlEPCIn=0                                           Premise(F58)
	S117= CtrlExCodeIn=0                                        Premise(F59)
	S118= CtrlIMMU=0                                            Premise(F60)
	S119= CtrlPC=0                                              Premise(F61)
	S120= CtrlPCInc=0                                           Premise(F62)
	S121= PC[CIA]=addr                                          PC-Hold(S76,S120)
	S122= PC[Out]=addr+4                                        PC-Hold(S75,S119,S120)
	S123= CtrlIAddrReg=0                                        Premise(F63)
	S124= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S78,S123)
	S125= CtrlICache=0                                          Premise(F64)
	S126= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S80,S125)
	S127= CtrlIR=0                                              Premise(F65)
	S128= [IR]={16,4,rT,rD,0,sel}                               IR-Hold(S82,S127)
	S129= CtrlICacheReg=0                                       Premise(F66)
	S130= CtrlIMem=0                                            Premise(F67)
	S131= IMem[{pid,addr}]={16,4,rT,rD,0,sel}                   IMem-Hold(S85,S130)
	S132= CtrlIRMux=0                                           Premise(F68)
	S133= CtrlGPR=0                                             Premise(F69)
	S134= GPR[rT]=a                                             GPR-Hold(S88,S133)
	S135= CtrlA=1                                               Premise(F70)
	S136= [A]=a                                                 A-Write(S112,S135)

EX	S137= CP0.ASID=pid                                          CP0-Read-ASID(S115)
	S138= PC.CIA=addr                                           PC-Out(S121)
	S139= PC.CIA31_28=addr[31:28]                               PC-Out(S121)
	S140= PC.Out=addr+4                                         PC-Out(S122)
	S141= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S124)
	S142= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S124)
	S143= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S124)
	S144= IR.Out={16,4,rT,rD,0,sel}                             IR-Out(S128)
	S145= IR.Out31_26=16                                        IR-Out(S128)
	S146= IR.Out25_21=4                                         IR-Out(S128)
	S147= IR.Out20_16=rT                                        IR-Out(S128)
	S148= IR.Out15_11=rD                                        IR-Out(S128)
	S149= IR.Out10_3=0                                          IR-Out(S128)
	S150= IR.Out2_0=sel                                         IR-Out(S128)
	S151= A.Out=a                                               A-Out(S136)
	S152= A.Out1_0={a}[1:0]                                     A-Out(S136)
	S153= A.Out4_0={a}[4:0]                                     A-Out(S136)
	S154= IR.Out15_11=>CP0.WReg                                 Premise(F71)
	S155= CP0.WReg=rD                                           Path(S148,S154)
	S156= A.Out=>CP0.Wdata                                      Premise(F72)
	S157= CP0.Wdata=a                                           Path(S151,S156)
	S158= CtrlASIDIn=0                                          Premise(F73)
	S159= CtrlCP0=1                                             Premise(F74)
	S160= CP0[rD]=a                                             CP0-Write-Nomal(S155,S157,S159)
	S161= CtrlEPCIn=0                                           Premise(F75)
	S162= CtrlExCodeIn=0                                        Premise(F76)
	S163= CtrlIMMU=0                                            Premise(F77)
	S164= CtrlPC=0                                              Premise(F78)
	S165= CtrlPCInc=0                                           Premise(F79)
	S166= PC[CIA]=addr                                          PC-Hold(S121,S165)
	S167= PC[Out]=addr+4                                        PC-Hold(S122,S164,S165)
	S168= CtrlIAddrReg=0                                        Premise(F80)
	S169= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S124,S168)
	S170= CtrlICache=0                                          Premise(F81)
	S171= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S126,S170)
	S172= CtrlIR=0                                              Premise(F82)
	S173= [IR]={16,4,rT,rD,0,sel}                               IR-Hold(S128,S172)
	S174= CtrlICacheReg=0                                       Premise(F83)
	S175= CtrlIMem=0                                            Premise(F84)
	S176= IMem[{pid,addr}]={16,4,rT,rD,0,sel}                   IMem-Hold(S131,S175)
	S177= CtrlIRMux=0                                           Premise(F85)
	S178= CtrlGPR=0                                             Premise(F86)
	S179= GPR[rT]=a                                             GPR-Hold(S134,S178)
	S180= CtrlA=0                                               Premise(F87)
	S181= [A]=a                                                 A-Hold(S136,S180)

MEM	S182= PC.CIA=addr                                           PC-Out(S166)
	S183= PC.CIA31_28=addr[31:28]                               PC-Out(S166)
	S184= PC.Out=addr+4                                         PC-Out(S167)
	S185= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S169)
	S186= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S169)
	S187= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S169)
	S188= IR.Out={16,4,rT,rD,0,sel}                             IR-Out(S173)
	S189= IR.Out31_26=16                                        IR-Out(S173)
	S190= IR.Out25_21=4                                         IR-Out(S173)
	S191= IR.Out20_16=rT                                        IR-Out(S173)
	S192= IR.Out15_11=rD                                        IR-Out(S173)
	S193= IR.Out10_3=0                                          IR-Out(S173)
	S194= IR.Out2_0=sel                                         IR-Out(S173)
	S195= A.Out=a                                               A-Out(S181)
	S196= A.Out1_0={a}[1:0]                                     A-Out(S181)
	S197= A.Out4_0={a}[4:0]                                     A-Out(S181)
	S198= CtrlASIDIn=0                                          Premise(F88)
	S199= CtrlCP0=0                                             Premise(F89)
	S200= CP0[rD]=a                                             CP0-Hold(S160,S199)
	S201= CtrlEPCIn=0                                           Premise(F90)
	S202= CtrlExCodeIn=0                                        Premise(F91)
	S203= CtrlIMMU=0                                            Premise(F92)
	S204= CtrlPC=0                                              Premise(F93)
	S205= CtrlPCInc=0                                           Premise(F94)
	S206= PC[CIA]=addr                                          PC-Hold(S166,S205)
	S207= PC[Out]=addr+4                                        PC-Hold(S167,S204,S205)
	S208= CtrlIAddrReg=0                                        Premise(F95)
	S209= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S169,S208)
	S210= CtrlICache=0                                          Premise(F96)
	S211= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S171,S210)
	S212= CtrlIR=0                                              Premise(F97)
	S213= [IR]={16,4,rT,rD,0,sel}                               IR-Hold(S173,S212)
	S214= CtrlICacheReg=0                                       Premise(F98)
	S215= CtrlIMem=0                                            Premise(F99)
	S216= IMem[{pid,addr}]={16,4,rT,rD,0,sel}                   IMem-Hold(S176,S215)
	S217= CtrlIRMux=0                                           Premise(F100)
	S218= CtrlGPR=0                                             Premise(F101)
	S219= GPR[rT]=a                                             GPR-Hold(S179,S218)
	S220= CtrlA=0                                               Premise(F102)
	S221= [A]=a                                                 A-Hold(S181,S220)

MEM(DMMU1)	S222= PC.CIA=addr                                           PC-Out(S206)
	S223= PC.CIA31_28=addr[31:28]                               PC-Out(S206)
	S224= PC.Out=addr+4                                         PC-Out(S207)
	S225= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S209)
	S226= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S209)
	S227= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S209)
	S228= IR.Out={16,4,rT,rD,0,sel}                             IR-Out(S213)
	S229= IR.Out31_26=16                                        IR-Out(S213)
	S230= IR.Out25_21=4                                         IR-Out(S213)
	S231= IR.Out20_16=rT                                        IR-Out(S213)
	S232= IR.Out15_11=rD                                        IR-Out(S213)
	S233= IR.Out10_3=0                                          IR-Out(S213)
	S234= IR.Out2_0=sel                                         IR-Out(S213)
	S235= A.Out=a                                               A-Out(S221)
	S236= A.Out1_0={a}[1:0]                                     A-Out(S221)
	S237= A.Out4_0={a}[4:0]                                     A-Out(S221)
	S238= CtrlASIDIn=0                                          Premise(F103)
	S239= CtrlCP0=0                                             Premise(F104)
	S240= CP0[rD]=a                                             CP0-Hold(S200,S239)
	S241= CtrlEPCIn=0                                           Premise(F105)
	S242= CtrlExCodeIn=0                                        Premise(F106)
	S243= CtrlIMMU=0                                            Premise(F107)
	S244= CtrlPC=0                                              Premise(F108)
	S245= CtrlPCInc=0                                           Premise(F109)
	S246= PC[CIA]=addr                                          PC-Hold(S206,S245)
	S247= PC[Out]=addr+4                                        PC-Hold(S207,S244,S245)
	S248= CtrlIAddrReg=0                                        Premise(F110)
	S249= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S209,S248)
	S250= CtrlICache=0                                          Premise(F111)
	S251= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S211,S250)
	S252= CtrlIR=0                                              Premise(F112)
	S253= [IR]={16,4,rT,rD,0,sel}                               IR-Hold(S213,S252)
	S254= CtrlICacheReg=0                                       Premise(F113)
	S255= CtrlIMem=0                                            Premise(F114)
	S256= IMem[{pid,addr}]={16,4,rT,rD,0,sel}                   IMem-Hold(S216,S255)
	S257= CtrlIRMux=0                                           Premise(F115)
	S258= CtrlGPR=0                                             Premise(F116)
	S259= GPR[rT]=a                                             GPR-Hold(S219,S258)
	S260= CtrlA=0                                               Premise(F117)
	S261= [A]=a                                                 A-Hold(S221,S260)

MEM(DMMU2)	S262= PC.CIA=addr                                           PC-Out(S246)
	S263= PC.CIA31_28=addr[31:28]                               PC-Out(S246)
	S264= PC.Out=addr+4                                         PC-Out(S247)
	S265= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S249)
	S266= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S249)
	S267= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S249)
	S268= IR.Out={16,4,rT,rD,0,sel}                             IR-Out(S253)
	S269= IR.Out31_26=16                                        IR-Out(S253)
	S270= IR.Out25_21=4                                         IR-Out(S253)
	S271= IR.Out20_16=rT                                        IR-Out(S253)
	S272= IR.Out15_11=rD                                        IR-Out(S253)
	S273= IR.Out10_3=0                                          IR-Out(S253)
	S274= IR.Out2_0=sel                                         IR-Out(S253)
	S275= A.Out=a                                               A-Out(S261)
	S276= A.Out1_0={a}[1:0]                                     A-Out(S261)
	S277= A.Out4_0={a}[4:0]                                     A-Out(S261)
	S278= CtrlASIDIn=0                                          Premise(F118)
	S279= CtrlCP0=0                                             Premise(F119)
	S280= CP0[rD]=a                                             CP0-Hold(S240,S279)
	S281= CtrlEPCIn=0                                           Premise(F120)
	S282= CtrlExCodeIn=0                                        Premise(F121)
	S283= CtrlIMMU=0                                            Premise(F122)
	S284= CtrlPC=0                                              Premise(F123)
	S285= CtrlPCInc=0                                           Premise(F124)
	S286= PC[CIA]=addr                                          PC-Hold(S246,S285)
	S287= PC[Out]=addr+4                                        PC-Hold(S247,S284,S285)
	S288= CtrlIAddrReg=0                                        Premise(F125)
	S289= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S249,S288)
	S290= CtrlICache=0                                          Premise(F126)
	S291= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S251,S290)
	S292= CtrlIR=0                                              Premise(F127)
	S293= [IR]={16,4,rT,rD,0,sel}                               IR-Hold(S253,S292)
	S294= CtrlICacheReg=0                                       Premise(F128)
	S295= CtrlIMem=0                                            Premise(F129)
	S296= IMem[{pid,addr}]={16,4,rT,rD,0,sel}                   IMem-Hold(S256,S295)
	S297= CtrlIRMux=0                                           Premise(F130)
	S298= CtrlGPR=0                                             Premise(F131)
	S299= GPR[rT]=a                                             GPR-Hold(S259,S298)
	S300= CtrlA=0                                               Premise(F132)
	S301= [A]=a                                                 A-Hold(S261,S300)

WB	S302= PC.CIA=addr                                           PC-Out(S286)
	S303= PC.CIA31_28=addr[31:28]                               PC-Out(S286)
	S304= PC.Out=addr+4                                         PC-Out(S287)
	S305= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S289)
	S306= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S289)
	S307= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S289)
	S308= IR.Out={16,4,rT,rD,0,sel}                             IR-Out(S293)
	S309= IR.Out31_26=16                                        IR-Out(S293)
	S310= IR.Out25_21=4                                         IR-Out(S293)
	S311= IR.Out20_16=rT                                        IR-Out(S293)
	S312= IR.Out15_11=rD                                        IR-Out(S293)
	S313= IR.Out10_3=0                                          IR-Out(S293)
	S314= IR.Out2_0=sel                                         IR-Out(S293)
	S315= A.Out=a                                               A-Out(S301)
	S316= A.Out1_0={a}[1:0]                                     A-Out(S301)
	S317= A.Out4_0={a}[4:0]                                     A-Out(S301)
	S318= CtrlASIDIn=0                                          Premise(F133)
	S319= CtrlCP0=0                                             Premise(F134)
	S320= CP0[rD]=a                                             CP0-Hold(S280,S319)
	S321= CtrlEPCIn=0                                           Premise(F135)
	S322= CtrlExCodeIn=0                                        Premise(F136)
	S323= CtrlIMMU=0                                            Premise(F137)
	S324= CtrlPC=0                                              Premise(F138)
	S325= CtrlPCInc=0                                           Premise(F139)
	S326= PC[CIA]=addr                                          PC-Hold(S286,S325)
	S327= PC[Out]=addr+4                                        PC-Hold(S287,S324,S325)
	S328= CtrlIAddrReg=0                                        Premise(F140)
	S329= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S289,S328)
	S330= CtrlICache=0                                          Premise(F141)
	S331= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S291,S330)
	S332= CtrlIR=0                                              Premise(F142)
	S333= [IR]={16,4,rT,rD,0,sel}                               IR-Hold(S293,S332)
	S334= CtrlICacheReg=0                                       Premise(F143)
	S335= CtrlIMem=0                                            Premise(F144)
	S336= IMem[{pid,addr}]={16,4,rT,rD,0,sel}                   IMem-Hold(S296,S335)
	S337= CtrlIRMux=0                                           Premise(F145)
	S338= CtrlGPR=0                                             Premise(F146)
	S339= GPR[rT]=a                                             GPR-Hold(S299,S338)
	S340= CtrlA=0                                               Premise(F147)
	S341= [A]=a                                                 A-Hold(S301,S340)

POST	S320= CP0[rD]=a                                             CP0-Hold(S280,S319)
	S326= PC[CIA]=addr                                          PC-Hold(S286,S325)
	S327= PC[Out]=addr+4                                        PC-Hold(S287,S324,S325)
	S329= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S289,S328)
	S331= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S291,S330)
	S333= [IR]={16,4,rT,rD,0,sel}                               IR-Hold(S293,S332)
	S336= IMem[{pid,addr}]={16,4,rT,rD,0,sel}                   IMem-Hold(S296,S335)
	S339= GPR[rT]=a                                             GPR-Hold(S299,S338)
	S341= [A]=a                                                 A-Hold(S301,S340)

