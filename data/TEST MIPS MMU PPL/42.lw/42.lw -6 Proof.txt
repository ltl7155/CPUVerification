
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={35,rS,rT,offset}                          Premise(F3)
	S2= GPR[rS]=base                                            Premise(F4)
	S3= DCache[FU(base)+{16{offset[15]},offset}]=a              Premise(F6)

IF	S4= PC.Out=addr                                             PC-Out(S0)
	S5= PC.Out=>ICache.IEA                                      Premise(F12)
	S6= ICache.IEA=addr                                         Path(S4,S5)
	S7= ICache.Out={35,rS,rT,offset}                            ICache-Search(S6,S1)
	S8= ICache.Out=>IR_ID.In                                    Premise(F16)
	S9= IR_ID.In={35,rS,rT,offset}                              Path(S7,S8)
	S10= CtrlPC=0                                               Premise(F29)
	S11= CtrlPCInc=1                                            Premise(F30)
	S12= PC[Out]=addr+4                                         PC-Inc(S0,S10,S11)
	S13= CtrlIR_ID=1                                            Premise(F35)
	S14= [IR_ID]={35,rS,rT,offset}                              IR_ID-Write(S9,S13)
	S15= CtrlGPR=0                                              Premise(F38)
	S16= GPR[rS]=base                                           GPR-Hold(S2,S15)
	S17= CtrlDCache=0                                           Premise(F46)
	S18= DCache[FU(base)+{16{offset[15]},offset}]=a             DCache-Hold(S3,S17)

ID	S19= IR_ID.Out={35,rS,rT,offset}                            IR-Out(S14)
	S20= IR_ID.Out25_21=rS                                      IR-Out(S14)
	S21= IR_ID.Out15_0=offset                                   IR-Out(S14)
	S22= IR_ID.Out25_21=>GPR.RReg1                              Premise(F112)
	S23= GPR.RReg1=rS                                           Path(S20,S22)
	S24= GPR.Rdata1=base                                        GPR-Read(S23,S16)
	S25= IR_ID.Out15_0=>IMMEXT.In                               Premise(F113)
	S26= IMMEXT.In=offset                                       Path(S21,S25)
	S27= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S26)
	S28= GPR.Rdata1=>FU.InID1                                   Premise(F114)
	S29= FU.InID1=base                                          Path(S24,S28)
	S30= FU.OutID1=FU(base)                                     FU-Forward(S29)
	S31= FU.OutID1=>A_EX.In                                     Premise(F116)
	S32= A_EX.In=FU(base)                                       Path(S30,S31)
	S33= IMMEXT.Out=>B_EX.In                                    Premise(F117)
	S34= B_EX.In={16{offset[15]},offset}                        Path(S27,S33)
	S35= IR_ID.Out=>IR_EX.In                                    Premise(F118)
	S36= IR_EX.In={35,rS,rT,offset}                             Path(S19,S35)
	S37= CtrlPC=0                                               Premise(F127)
	S38= CtrlPCInc=0                                            Premise(F128)
	S39= PC[Out]=addr+4                                         PC-Hold(S12,S37,S38)
	S40= CtrlA_EX=1                                             Premise(F137)
	S41= [A_EX]=FU(base)                                        A_EX-Write(S32,S40)
	S42= CtrlB_EX=1                                             Premise(F138)
	S43= [B_EX]={16{offset[15]},offset}                         B_EX-Write(S34,S42)
	S44= CtrlIR_EX=1                                            Premise(F139)
	S45= [IR_EX]={35,rS,rT,offset}                              IR_EX-Write(S36,S44)
	S46= CtrlDCache=0                                           Premise(F144)
	S47= DCache[FU(base)+{16{offset[15]},offset}]=a             DCache-Hold(S18,S46)

EX	S48= A_EX.Out=FU(base)                                      A_EX-Out(S41)
	S49= B_EX.Out={16{offset[15]},offset}                       B_EX-Out(S43)
	S50= IR_EX.Out={35,rS,rT,offset}                            IR_EX-Out(S45)
	S51= A_EX.Out=>ALU.A                                        Premise(F168)
	S52= ALU.A=FU(base)                                         Path(S48,S51)
	S53= B_EX.Out=>ALU.B                                        Premise(F169)
	S54= ALU.B={16{offset[15]},offset}                          Path(S49,S53)
	S55= ALU.Out=FU(base)+{16{offset[15]},offset}               ALU(S52,S54)
	S56= ALU.Out=>ALUOut_MEM.In                                 Premise(F171)
	S57= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}         Path(S55,S56)
	S58= IR_EX.Out=>IR_MEM.In                                   Premise(F172)
	S59= IR_MEM.In={35,rS,rT,offset}                            Path(S50,S58)
	S60= CtrlPC=0                                               Premise(F179)
	S61= CtrlPCInc=0                                            Premise(F180)
	S62= PC[Out]=addr+4                                         PC-Hold(S39,S60,S61)
	S63= CtrlALUOut_MEM=1                                       Premise(F192)
	S64= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}          ALUOut_MEM-Write(S57,S63)
	S65= CtrlIR_MEM=1                                           Premise(F193)
	S66= [IR_MEM]={35,rS,rT,offset}                             IR_MEM-Write(S59,S65)
	S67= CtrlDCache=0                                           Premise(F196)
	S68= DCache[FU(base)+{16{offset[15]},offset}]=a             DCache-Hold(S47,S67)

MEM	S69= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}        ALUOut_MEM-Out(S64)
	S70= IR_MEM.Out={35,rS,rT,offset}                           IR_MEM-Out(S66)
	S71= ALUOut_MEM.Out=>DCache.IEA                             Premise(F226)
	S72= DCache.IEA=FU(base)+{16{offset[15]},offset}            Path(S69,S71)
	S73= DCache.Out=a                                           DCache-Search(S72,S68)
	S74= IR_MEM.Out=>IR_WB.In                                   Premise(F231)
	S75= IR_WB.In={35,rS,rT,offset}                             Path(S70,S74)
	S76= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F235)
	S77= ALUOut_WB.In=FU(base)+{16{offset[15]},offset}          Path(S69,S76)
	S78= DCache.Out=>DR_WB.In                                   Premise(F236)
	S79= DR_WB.In=a                                             Path(S73,S78)
	S80= CtrlPC=0                                               Premise(F248)
	S81= CtrlPCInc=0                                            Premise(F249)
	S82= PC[Out]=addr+4                                         PC-Hold(S62,S80,S81)
	S83= CtrlIR_WB=1                                            Premise(F269)
	S84= [IR_WB]={35,rS,rT,offset}                              IR_WB-Write(S75,S83)
	S85= CtrlALUOut_WB=1                                        Premise(F275)
	S86= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}           ALUOut_WB-Write(S77,S85)
	S87= CtrlDR_WB=1                                            Premise(F276)
	S88= [DR_WB]=a                                              DR_WB-Write(S79,S87)

WB	S89= IR_WB.Out20_16=rT                                      IR-Out(S84)
	S90= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S86)
	S91= DR_WB.Out=a                                            DR_WB-Out(S88)
	S92= IR_WB.Out20_16=>GPR.WReg                               Premise(F371)
	S93= GPR.WReg=rT                                            Path(S89,S92)
	S94= DR_WB.Out=>MemDataSelL.In                              Premise(F372)
	S95= MemDataSelL.In=a                                       Path(S91,S94)
	S96= ALUOut_WB.Out1_0=>MemDataSelL.Addr                     Premise(F373)
	S97= MemDataSelL.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S90,S96)
	S98= MemDataSelL.Out=a                                      MemDataSelL(S95,S97)
	S99= MemDataSelL.Out=>GPR.WData                             Premise(F375)
	S100= GPR.WData=a                                           Path(S98,S99)
	S101= CtrlPC=0                                              Premise(F383)
	S102= CtrlPCInc=0                                           Premise(F384)
	S103= PC[Out]=addr+4                                        PC-Hold(S82,S101,S102)
	S104= CtrlGPR=1                                             Premise(F392)
	S105= GPR[rT]=a                                             GPR-Write(S93,S100,S104)

POST	S103= PC[Out]=addr+4                                        PC-Hold(S82,S101,S102)
	S105= GPR[rT]=a                                             GPR-Write(S93,S100,S104)

