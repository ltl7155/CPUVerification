
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={28,rS,rT,0,0,5}                           Premise(F3)
	S2= GPR[rS]=a                                               Premise(F4)
	S3= GPR[rT]=b                                               Premise(F5)
	S4= [Lo]=lo                                                 Premise(F6)
	S5= [Hi]=hi                                                 Premise(F7)

IF	S6= PC.Out=addr                                             PC-Out(S0)
	S7= PC.Out=>ICache.IEA                                      Premise(F54)
	S8= ICache.IEA=addr                                         Path(S6,S7)
	S9= ICache.Out={28,rS,rT,0,0,5}                             ICache-Search(S8,S1)
	S10= ICache.Out=>IR_ID.In                                   Premise(F61)
	S11= IR_ID.In={28,rS,rT,0,0,5}                              Path(S9,S10)
	S12= CtrlIR_ID=1                                            Premise(F106)
	S13= [IR_ID]={28,rS,rT,0,0,5}                               IR_ID-Write(S11,S12)
	S14= CtrlGPR=0                                              Premise(F110)
	S15= GPR[rS]=a                                              GPR-Hold(S2,S14)
	S16= GPR[rT]=b                                              GPR-Hold(S3,S14)
	S17= CtrlHi=0                                               Premise(F111)
	S18= [Hi]=hi                                                Hi-Hold(S5,S17)
	S19= CtrlPC=0                                               Premise(F113)
	S20= CtrlPCInc=1                                            Premise(F114)
	S21= PC[Out]=addr+4                                         PC-Inc(S0,S19,S20)
	S22= CtrlLo=0                                               Premise(F122)
	S23= [Lo]=lo                                                Lo-Hold(S4,S22)

ID	S24= IR_ID.Out25_21=rS                                      IR-Out(S13)
	S25= IR_ID.Out20_16=rT                                      IR-Out(S13)
	S26= FU.OutID1=>A_EX.In                                     Premise(F238)
	S27= FU.OutID2=>B_EX.In                                     Premise(F240)
	S28= GPR.Rdata1=>FU.InID1                                   Premise(F276)
	S29= GPR.Rdata2=>FU.InID2                                   Premise(F278)
	S30= IR_ID.Out25_21=>GPR.RReg1                              Premise(F280)
	S31= GPR.RReg1=rS                                           Path(S24,S30)
	S32= GPR.Rdata1=a                                           GPR-Read(S31,S15)
	S33= FU.InID1=a                                             Path(S32,S28)
	S34= FU.OutID1=FU(a)                                        FU-Forward(S33)
	S35= A_EX.In=FU(a)                                          Path(S34,S26)
	S36= IR_ID.Out20_16=>GPR.RReg2                              Premise(F281)
	S37= GPR.RReg2=rT                                           Path(S25,S36)
	S38= GPR.Rdata2=b                                           GPR-Read(S37,S16)
	S39= FU.InID2=b                                             Path(S38,S29)
	S40= FU.OutID2=FU(b)                                        FU-Forward(S39)
	S41= B_EX.In=FU(b)                                          Path(S40,S27)
	S42= CtrlA_EX=1                                             Premise(F325)
	S43= [A_EX]=FU(a)                                           A_EX-Write(S35,S42)
	S44= CtrlB_EX=1                                             Premise(F328)
	S45= [B_EX]=FU(b)                                           B_EX-Write(S41,S44)
	S46= CtrlHi=0                                               Premise(F341)
	S47= [Hi]=hi                                                Hi-Hold(S18,S46)
	S48= CtrlPC=0                                               Premise(F343)
	S49= CtrlPCInc=0                                            Premise(F344)
	S50= PC[Out]=addr+4                                         PC-Hold(S21,S48,S49)
	S51= CtrlLo=0                                               Premise(F352)
	S52= [Lo]=lo                                                Lo-Hold(S23,S51)

EX	S53= A_EX.Out=FU(a)                                         A_EX-Out(S43)
	S54= B_EX.Out=FU(b)                                         B_EX-Out(S45)
	S55= Hi.Out=hi                                              Hi-Out(S47)
	S56= Lo.Out=lo                                              Lo-Out(S52)
	S57= MDU.hi=>Hi.In                                          Premise(F398)
	S58= MDU.lo=>Lo.In                                          Premise(F412)
	S59= A_EX.Out=>MDU.A                                        Premise(F413)
	S60= MDU.A=FU(a)                                            Path(S53,S59)
	S61= B_EX.Out=>MDU.B                                        Premise(F414)
	S62= MDU.B=FU(b)                                            Path(S54,S61)
	S63= Hi.Out=>MDU.Hi                                         Premise(F416)
	S64= MDU.Hi=hi                                              Path(S55,S63)
	S65= Lo.Out=>MDU.Lo                                         Premise(F417)
	S66= MDU.Lo=lo                                              Path(S56,S65)
	S67= MDU.lo=({hi,lo}-FU(a)*FU(b))[31:0]                     MDU(S60,S62,S64,S66)
	S68= Lo.In=({hi,lo}-FU(a)*FU(b))[31:0]                      Path(S67,S58)
	S69= MDU.hi=({hi,lo}-FU(a)*FU(b))[63:32]                    MDU(S60,S62,S64,S66)
	S70= Hi.In=({hi,lo}-FU(a)*FU(b))[63:32]                     Path(S69,S57)
	S71= CtrlHi=1                                               Premise(F458)
	S72= [Hi]=({hi,lo}-FU(a)*FU(b))[63:32]                      Hi-Write(S70,S71)
	S73= CtrlPC=0                                               Premise(F460)
	S74= CtrlPCInc=0                                            Premise(F461)
	S75= PC[Out]=addr+4                                         PC-Hold(S50,S73,S74)
	S76= CtrlLo=1                                               Premise(F469)
	S77= [Lo]=({hi,lo}-FU(a)*FU(b))[31:0]                       Lo-Write(S68,S76)

MEM	S78= CtrlHi=0                                               Premise(F574)
	S79= [Hi]=({hi,lo}-FU(a)*FU(b))[63:32]                      Hi-Hold(S72,S78)
	S80= CtrlPC=0                                               Premise(F576)
	S81= CtrlPCInc=0                                            Premise(F577)
	S82= PC[Out]=addr+4                                         PC-Hold(S75,S80,S81)
	S83= CtrlLo=0                                               Premise(F585)
	S84= [Lo]=({hi,lo}-FU(a)*FU(b))[31:0]                       Lo-Hold(S77,S83)

DMMU1	S85= CtrlHi=0                                               Premise(F690)
	S86= [Hi]=({hi,lo}-FU(a)*FU(b))[63:32]                      Hi-Hold(S79,S85)
	S87= CtrlPC=0                                               Premise(F692)
	S88= CtrlPCInc=0                                            Premise(F693)
	S89= PC[Out]=addr+4                                         PC-Hold(S82,S87,S88)
	S90= CtrlLo=0                                               Premise(F701)
	S91= [Lo]=({hi,lo}-FU(a)*FU(b))[31:0]                       Lo-Hold(S84,S90)

DMMU2	S92= CtrlHi=0                                               Premise(F806)
	S93= [Hi]=({hi,lo}-FU(a)*FU(b))[63:32]                      Hi-Hold(S86,S92)
	S94= CtrlPC=0                                               Premise(F808)
	S95= CtrlPCInc=0                                            Premise(F809)
	S96= PC[Out]=addr+4                                         PC-Hold(S89,S94,S95)
	S97= CtrlLo=0                                               Premise(F817)
	S98= [Lo]=({hi,lo}-FU(a)*FU(b))[31:0]                       Lo-Hold(S91,S97)

WB	S99= CtrlHi=0                                               Premise(F922)
	S100= [Hi]=({hi,lo}-FU(a)*FU(b))[63:32]                     Hi-Hold(S93,S99)
	S101= CtrlPC=0                                              Premise(F924)
	S102= CtrlPCInc=0                                           Premise(F925)
	S103= PC[Out]=addr+4                                        PC-Hold(S96,S101,S102)
	S104= CtrlLo=0                                              Premise(F933)
	S105= [Lo]=({hi,lo}-FU(a)*FU(b))[31:0]                      Lo-Hold(S98,S104)

POST	S100= [Hi]=({hi,lo}-FU(a)*FU(b))[63:32]                     Hi-Hold(S93,S99)
	S103= PC[Out]=addr+4                                        PC-Hold(S96,S101,S102)
	S105= [Lo]=({hi,lo}-FU(a)*FU(b))[31:0]                      Lo-Hold(S98,S104)

