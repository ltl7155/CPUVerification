
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,1041}                     Premise(F2)
	S3= ICache[addr]={31,rT,rA,rB,1041}                         Premise(F3)
	S4= GPRegs[rA]=a                                            Premise(F4)
	S5= GPRegs[rB]=b                                            Premise(F5)
	S6= XER[SO]=so                                              Premise(F6)

IF	S7= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S8= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S9= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S10= PC.Out=addr                                            PC-Out(S1)
	S11= XER.SOOut=so                                           XER-SO-Out(S6)
	S12= PIDReg.Out=>IMMU.PID                                   Premise(F7)
	S13= IMMU.PID=pid                                           Path(S7,S12)
	S14= PC.Out=>IMMU.IEA                                       Premise(F8)
	S15= IMMU.IEA=addr                                          Path(S10,S14)
	S16= IMMU.Addr={pid,addr}                                   IMMU-Search(S13,S15)
	S17= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S13,S15)
	S18= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S19= IAddrReg.In={pid,addr}                                 Path(S16,S18)
	S20= IMMU.Hit=>IMMUHitReg.In                                Premise(F10)
	S21= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S17,S20)
	S22= PC.Out=>ICache.IEA                                     Premise(F11)
	S23= ICache.IEA=addr                                        Path(S10,S22)
	S24= ICache.Hit=ICacheHit(addr)                             ICache-Search(S23)
	S25= ICache.Out={31,rT,rA,rB,1041}                          ICache-Search(S23,S3)
	S26= ICache.Out=>ICacheReg.In                               Premise(F12)
	S27= ICacheReg.In={31,rT,rA,rB,1041}                        Path(S25,S26)
	S28= ICache.Hit=>ICacheHitReg.In                            Premise(F13)
	S29= ICacheHitReg.In=ICacheHit(addr)                        Path(S24,S28)
	S30= IMMUHitReg.Out=>CU.IMemHit                             Premise(F14)
	S31= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F15)
	S32= IAddrReg.Out=>IMem.RAddr                               Premise(F16)
	S33= IMem.Out=>IRMux.MemData                                Premise(F17)
	S34= ICacheReg.Out=>IRMux.CacheData                         Premise(F18)
	S35= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F19)
	S36= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F20)
	S37= IRMux.Out=>IR.In                                       Premise(F21)
	S38= IMem.MEM8WordOut=>ICache.WData                         Premise(F22)
	S39= PC.Out=>ICache.IEA                                     Premise(F23)
	S40= IR.Out0_5=>CU.Op                                       Premise(F24)
	S41= IR.Out11_15=>GPRegs.RReg1                              Premise(F25)
	S42= IR.Out16_20=>GPRegs.RReg2                              Premise(F26)
	S43= IR.Out21_31=>CU.IRFunc                                 Premise(F27)
	S44= GPRegs.Rdata1=>A.In                                    Premise(F28)
	S45= GPRegs.Rdata2=>B.In                                    Premise(F29)
	S46= A.Out=>ALU.A                                           Premise(F30)
	S47= B.Out=>ALU.B                                           Premise(F31)
	S48= CU.Func=>ALU.Func                                      Premise(F32)
	S49= ALU.Out=>ALUOut.In                                     Premise(F33)
	S50= ALU.CA=>CAReg.In                                       Premise(F34)
	S51= ALU.CMP=>DataCmb.A                                     Premise(F35)
	S52= ORGate.Out=>DataCmb.B                                  Premise(F36)
	S53= ALU.OV=>OVReg.In                                       Premise(F37)
	S54= XER.SOOut=>ORGate.A                                    Premise(F38)
	S55= ORGate.A=so                                            Path(S11,S54)
	S56= ALU.OV=>ORGate.B                                       Premise(F39)
	S57= ORGate.Out=>DR1bit.In                                  Premise(F40)
	S58= DataCmb.Out=>DR4bit.In                                 Premise(F41)
	S59= IR.Out6_10=>GPRegs.WReg                                Premise(F42)
	S60= ALUOut.Out=>GPRegs.WData                               Premise(F43)
	S61= DR4bit.Out=>CRRegs.CR0In                               Premise(F44)
	S62= DR1bit.Out=>XER.SOIn                                   Premise(F45)
	S63= CAReg.Out=>XER.CAIn                                    Premise(F46)
	S64= OVReg.Out=>XER.OVIn                                    Premise(F47)
	S65= CtrlPIDReg=0                                           Premise(F48)
	S66= [PIDReg]=pid                                           PIDReg-Hold(S0,S65)
	S67= CtrlIMMU=0                                             Premise(F49)
	S68= CtrlPC=0                                               Premise(F50)
	S69= CtrlPCInc=0                                            Premise(F51)
	S70= PC[Out]=addr                                           PC-Hold(S1,S68,S69)
	S71= CtrlIAddrReg=1                                         Premise(F52)
	S72= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S19,S71)
	S73= CtrlIMMUHitReg=1                                       Premise(F53)
	S74= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S21,S73)
	S75= CtrlICache=0                                           Premise(F54)
	S76= ICache[addr]={31,rT,rA,rB,1041}                        ICache-Hold(S3,S75)
	S77= CtrlICacheReg=1                                        Premise(F55)
	S78= [ICacheReg]={31,rT,rA,rB,1041}                         ICacheReg-Write(S27,S77)
	S79= CtrlICacheHitReg=1                                     Premise(F56)
	S80= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S29,S79)
	S81= CtrlIMem=0                                             Premise(F57)
	S82= IMem[{pid,addr}]={31,rT,rA,rB,1041}                    IMem-Hold(S2,S81)
	S83= CtrlIRMux=0                                            Premise(F58)
	S84= CtrlIR=0                                               Premise(F59)
	S85= CtrlGPRegs=0                                           Premise(F60)
	S86= GPRegs[rA]=a                                           GPRegs-Hold(S4,S85)
	S87= GPRegs[rB]=b                                           GPRegs-Hold(S5,S85)
	S88= CtrlA=0                                                Premise(F61)
	S89= CtrlB=0                                                Premise(F62)
	S90= CtrlALUOut=0                                           Premise(F63)
	S91= CtrlCAReg=0                                            Premise(F64)
	S92= CtrlOVReg=0                                            Premise(F65)
	S93= CtrlXERSO=0                                            Premise(F66)
	S94= XER[SO]=so                                             XER-SO-Hold(S6,S93)
	S95= CtrlXEROV=0                                            Premise(F67)
	S96= CtrlXERCA=0                                            Premise(F68)
	S97= CtrlDR1bit=0                                           Premise(F69)
	S98= CtrlDR4bit=0                                           Premise(F70)
	S99= CtrlCRRegs=0                                           Premise(F71)
	S100= CtrlCRRegsCR0=0                                       Premise(F72)
	S101= CtrlCRRegsW4bitRegs=0                                 Premise(F73)
	S102= CtrlCRRegsW1bitRegs=0                                 Premise(F74)

IMMU	S103= PIDReg.Out=pid                                        PIDReg-Out(S66)
	S104= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S66)
	S105= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S66)
	S106= PC.Out=addr                                           PC-Out(S70)
	S107= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S72)
	S108= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S72)
	S109= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S72)
	S110= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S74)
	S111= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S74)
	S112= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S74)
	S113= ICacheReg.Out={31,rT,rA,rB,1041}                      ICacheReg-Out(S78)
	S114= ICacheReg.Out26_31={31,rT,rA,rB,1041}[26:31]          ICacheReg-Out(S78)
	S115= ICacheReg.Out30_31={31,rT,rA,rB,1041}[30:31]          ICacheReg-Out(S78)
	S116= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S80)
	S117= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S80)
	S118= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S80)
	S119= XER.SOOut=so                                          XER-SO-Out(S94)
	S120= PIDReg.Out=>IMMU.PID                                  Premise(F75)
	S121= IMMU.PID=pid                                          Path(S103,S120)
	S122= PC.Out=>IMMU.IEA                                      Premise(F76)
	S123= IMMU.IEA=addr                                         Path(S106,S122)
	S124= IMMU.Addr={pid,addr}                                  IMMU-Search(S121,S123)
	S125= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S121,S123)
	S126= IMMU.Addr=>IAddrReg.In                                Premise(F77)
	S127= IAddrReg.In={pid,addr}                                Path(S124,S126)
	S128= IMMU.Hit=>IMMUHitReg.In                               Premise(F78)
	S129= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S125,S128)
	S130= PC.Out=>ICache.IEA                                    Premise(F79)
	S131= ICache.IEA=addr                                       Path(S106,S130)
	S132= ICache.Hit=ICacheHit(addr)                            ICache-Search(S131)
	S133= ICache.Out={31,rT,rA,rB,1041}                         ICache-Search(S131,S76)
	S134= ICache.Out=>ICacheReg.In                              Premise(F80)
	S135= ICacheReg.In={31,rT,rA,rB,1041}                       Path(S133,S134)
	S136= ICache.Hit=>ICacheHitReg.In                           Premise(F81)
	S137= ICacheHitReg.In=ICacheHit(addr)                       Path(S132,S136)
	S138= IMMUHitReg.Out=>CU.IMemHit                            Premise(F82)
	S139= CU.IMemHit=IMMUHit(pid,addr)                          Path(S110,S138)
	S140= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F83)
	S141= CU.ICacheHit=ICacheHit(addr)                          Path(S116,S140)
	S142= IAddrReg.Out=>IMem.RAddr                              Premise(F84)
	S143= IMem.RAddr={pid,addr}                                 Path(S107,S142)
	S144= IMem.Out={31,rT,rA,rB,1041}                           IMem-Read(S143,S82)
	S145= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S143,S82)
	S146= IMem.Out=>IRMux.MemData                               Premise(F85)
	S147= IRMux.MemData={31,rT,rA,rB,1041}                      Path(S144,S146)
	S148= ICacheReg.Out=>IRMux.CacheData                        Premise(F86)
	S149= IRMux.CacheData={31,rT,rA,rB,1041}                    Path(S113,S148)
	S150= IRMux.Out={31,rT,rA,rB,1041}                          IRMux-Select(S147,S149)
	S151= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F87)
	S152= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S110,S151)
	S153= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F88)
	S154= IRMux.CacheSel=ICacheHit(addr)                        Path(S116,S153)
	S155= IRMux.Out=>IR.In                                      Premise(F89)
	S156= IR.In={31,rT,rA,rB,1041}                              Path(S150,S155)
	S157= IMem.MEM8WordOut=>ICache.WData                        Premise(F90)
	S158= ICache.WData=IMemGet8Word({pid,addr})                 Path(S145,S157)
	S159= PC.Out=>ICache.IEA                                    Premise(F91)
	S160= IR.Out0_5=>CU.Op                                      Premise(F92)
	S161= IR.Out11_15=>GPRegs.RReg1                             Premise(F93)
	S162= IR.Out16_20=>GPRegs.RReg2                             Premise(F94)
	S163= IR.Out21_31=>CU.IRFunc                                Premise(F95)
	S164= GPRegs.Rdata1=>A.In                                   Premise(F96)
	S165= GPRegs.Rdata2=>B.In                                   Premise(F97)
	S166= A.Out=>ALU.A                                          Premise(F98)
	S167= B.Out=>ALU.B                                          Premise(F99)
	S168= CU.Func=>ALU.Func                                     Premise(F100)
	S169= ALU.Out=>ALUOut.In                                    Premise(F101)
	S170= ALU.CA=>CAReg.In                                      Premise(F102)
	S171= ALU.CMP=>DataCmb.A                                    Premise(F103)
	S172= ORGate.Out=>DataCmb.B                                 Premise(F104)
	S173= ALU.OV=>OVReg.In                                      Premise(F105)
	S174= XER.SOOut=>ORGate.A                                   Premise(F106)
	S175= ORGate.A=so                                           Path(S119,S174)
	S176= ALU.OV=>ORGate.B                                      Premise(F107)
	S177= ORGate.Out=>DR1bit.In                                 Premise(F108)
	S178= DataCmb.Out=>DR4bit.In                                Premise(F109)
	S179= IR.Out6_10=>GPRegs.WReg                               Premise(F110)
	S180= ALUOut.Out=>GPRegs.WData                              Premise(F111)
	S181= DR4bit.Out=>CRRegs.CR0In                              Premise(F112)
	S182= DR1bit.Out=>XER.SOIn                                  Premise(F113)
	S183= CAReg.Out=>XER.CAIn                                   Premise(F114)
	S184= OVReg.Out=>XER.OVIn                                   Premise(F115)
	S185= CtrlPIDReg=0                                          Premise(F116)
	S186= [PIDReg]=pid                                          PIDReg-Hold(S66,S185)
	S187= CtrlIMMU=0                                            Premise(F117)
	S188= CtrlPC=0                                              Premise(F118)
	S189= CtrlPCInc=1                                           Premise(F119)
	S190= PC[Out]=addr+4                                        PC-Inc(S70,S188,S189)
	S191= PC[CIA]=addr                                          PC-Inc(S70,S188,S189)
	S192= CtrlIAddrReg=0                                        Premise(F120)
	S193= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S72,S192)
	S194= CtrlIMMUHitReg=0                                      Premise(F121)
	S195= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S74,S194)
	S196= CtrlICache=0                                          Premise(F122)
	S197= ICache[addr]={31,rT,rA,rB,1041}                       ICache-Hold(S76,S196)
	S198= CtrlICacheReg=0                                       Premise(F123)
	S199= [ICacheReg]={31,rT,rA,rB,1041}                        ICacheReg-Hold(S78,S198)
	S200= CtrlICacheHitReg=0                                    Premise(F124)
	S201= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S80,S200)
	S202= CtrlIMem=0                                            Premise(F125)
	S203= IMem[{pid,addr}]={31,rT,rA,rB,1041}                   IMem-Hold(S82,S202)
	S204= CtrlIRMux=0                                           Premise(F126)
	S205= CtrlIR=1                                              Premise(F127)
	S206= [IR]={31,rT,rA,rB,1041}                               IR-Write(S156,S205)
	S207= CtrlGPRegs=0                                          Premise(F128)
	S208= GPRegs[rA]=a                                          GPRegs-Hold(S86,S207)
	S209= GPRegs[rB]=b                                          GPRegs-Hold(S87,S207)
	S210= CtrlA=0                                               Premise(F129)
	S211= CtrlB=0                                               Premise(F130)
	S212= CtrlALUOut=0                                          Premise(F131)
	S213= CtrlCAReg=0                                           Premise(F132)
	S214= CtrlOVReg=0                                           Premise(F133)
	S215= CtrlXERSO=0                                           Premise(F134)
	S216= XER[SO]=so                                            XER-SO-Hold(S94,S215)
	S217= CtrlXEROV=0                                           Premise(F135)
	S218= CtrlXERCA=0                                           Premise(F136)
	S219= CtrlDR1bit=0                                          Premise(F137)
	S220= CtrlDR4bit=0                                          Premise(F138)
	S221= CtrlCRRegs=0                                          Premise(F139)
	S222= CtrlCRRegsCR0=0                                       Premise(F140)
	S223= CtrlCRRegsW4bitRegs=0                                 Premise(F141)
	S224= CtrlCRRegsW1bitRegs=0                                 Premise(F142)

ID	S225= PIDReg.Out=pid                                        PIDReg-Out(S186)
	S226= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S186)
	S227= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S186)
	S228= PC.Out=addr+4                                         PC-Out(S190)
	S229= PC.CIA=addr                                           PC-Out(S191)
	S230= PC.CIA31_28=addr[31:28]                               PC-Out(S191)
	S231= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S193)
	S232= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S193)
	S233= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S193)
	S234= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S195)
	S235= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S195)
	S236= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S195)
	S237= ICacheReg.Out={31,rT,rA,rB,1041}                      ICacheReg-Out(S199)
	S238= ICacheReg.Out26_31={31,rT,rA,rB,1041}[26:31]          ICacheReg-Out(S199)
	S239= ICacheReg.Out30_31={31,rT,rA,rB,1041}[30:31]          ICacheReg-Out(S199)
	S240= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S201)
	S241= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S201)
	S242= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S201)
	S243= IR.Out0_5=31                                          IR-Out(S206)
	S244= IR.Out6_10=rT                                         IR-Out(S206)
	S245= IR.Out11_15=rA                                        IR-Out(S206)
	S246= IR.Out16_20=rB                                        IR-Out(S206)
	S247= IR.Out21_31=1041                                      IR-Out(S206)
	S248= XER.SOOut=so                                          XER-SO-Out(S216)
	S249= PIDReg.Out=>IMMU.PID                                  Premise(F143)
	S250= IMMU.PID=pid                                          Path(S225,S249)
	S251= PC.Out=>IMMU.IEA                                      Premise(F144)
	S252= IMMU.IEA=addr+4                                       Path(S228,S251)
	S253= IMMU.Addr={pid,addr+4}                                IMMU-Search(S250,S252)
	S254= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S250,S252)
	S255= IMMU.Addr=>IAddrReg.In                                Premise(F145)
	S256= IAddrReg.In={pid,addr+4}                              Path(S253,S255)
	S257= IMMU.Hit=>IMMUHitReg.In                               Premise(F146)
	S258= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S254,S257)
	S259= PC.Out=>ICache.IEA                                    Premise(F147)
	S260= ICache.IEA=addr+4                                     Path(S228,S259)
	S261= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S260)
	S262= ICache.Out=>ICacheReg.In                              Premise(F148)
	S263= ICache.Hit=>ICacheHitReg.In                           Premise(F149)
	S264= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S261,S263)
	S265= IMMUHitReg.Out=>CU.IMemHit                            Premise(F150)
	S266= CU.IMemHit=IMMUHit(pid,addr)                          Path(S234,S265)
	S267= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F151)
	S268= CU.ICacheHit=ICacheHit(addr)                          Path(S240,S267)
	S269= IAddrReg.Out=>IMem.RAddr                              Premise(F152)
	S270= IMem.RAddr={pid,addr}                                 Path(S231,S269)
	S271= IMem.Out={31,rT,rA,rB,1041}                           IMem-Read(S270,S203)
	S272= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S270,S203)
	S273= IMem.Out=>IRMux.MemData                               Premise(F153)
	S274= IRMux.MemData={31,rT,rA,rB,1041}                      Path(S271,S273)
	S275= ICacheReg.Out=>IRMux.CacheData                        Premise(F154)
	S276= IRMux.CacheData={31,rT,rA,rB,1041}                    Path(S237,S275)
	S277= IRMux.Out={31,rT,rA,rB,1041}                          IRMux-Select(S274,S276)
	S278= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F155)
	S279= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S234,S278)
	S280= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F156)
	S281= IRMux.CacheSel=ICacheHit(addr)                        Path(S240,S280)
	S282= IRMux.Out=>IR.In                                      Premise(F157)
	S283= IR.In={31,rT,rA,rB,1041}                              Path(S277,S282)
	S284= IMem.MEM8WordOut=>ICache.WData                        Premise(F158)
	S285= ICache.WData=IMemGet8Word({pid,addr})                 Path(S272,S284)
	S286= PC.Out=>ICache.IEA                                    Premise(F159)
	S287= IR.Out0_5=>CU.Op                                      Premise(F160)
	S288= CU.Op=31                                              Path(S243,S287)
	S289= IR.Out11_15=>GPRegs.RReg1                             Premise(F161)
	S290= GPRegs.RReg1=rA                                       Path(S245,S289)
	S291= GPRegs.Rdata1=a                                       GPRegs-Read(S290,S208)
	S292= IR.Out16_20=>GPRegs.RReg2                             Premise(F162)
	S293= GPRegs.RReg2=rB                                       Path(S246,S292)
	S294= GPRegs.Rdata2=b                                       GPRegs-Read(S293,S209)
	S295= IR.Out21_31=>CU.IRFunc                                Premise(F163)
	S296= CU.IRFunc=1041                                        Path(S247,S295)
	S297= CU.Func=alu_subf                                      CU(S288,S296)
	S298= GPRegs.Rdata1=>A.In                                   Premise(F164)
	S299= A.In=a                                                Path(S291,S298)
	S300= GPRegs.Rdata2=>B.In                                   Premise(F165)
	S301= B.In=b                                                Path(S294,S300)
	S302= A.Out=>ALU.A                                          Premise(F166)
	S303= B.Out=>ALU.B                                          Premise(F167)
	S304= CU.Func=>ALU.Func                                     Premise(F168)
	S305= ALU.Func=alu_subf                                     Path(S297,S304)
	S306= ALU.Out=>ALUOut.In                                    Premise(F169)
	S307= ALU.CA=>CAReg.In                                      Premise(F170)
	S308= ALU.CMP=>DataCmb.A                                    Premise(F171)
	S309= ORGate.Out=>DataCmb.B                                 Premise(F172)
	S310= ALU.OV=>OVReg.In                                      Premise(F173)
	S311= XER.SOOut=>ORGate.A                                   Premise(F174)
	S312= ORGate.A=so                                           Path(S248,S311)
	S313= ALU.OV=>ORGate.B                                      Premise(F175)
	S314= ORGate.Out=>DR1bit.In                                 Premise(F176)
	S315= DataCmb.Out=>DR4bit.In                                Premise(F177)
	S316= IR.Out6_10=>GPRegs.WReg                               Premise(F178)
	S317= GPRegs.WReg=rT                                        Path(S244,S316)
	S318= ALUOut.Out=>GPRegs.WData                              Premise(F179)
	S319= DR4bit.Out=>CRRegs.CR0In                              Premise(F180)
	S320= DR1bit.Out=>XER.SOIn                                  Premise(F181)
	S321= CAReg.Out=>XER.CAIn                                   Premise(F182)
	S322= OVReg.Out=>XER.OVIn                                   Premise(F183)
	S323= CtrlPIDReg=0                                          Premise(F184)
	S324= [PIDReg]=pid                                          PIDReg-Hold(S186,S323)
	S325= CtrlIMMU=0                                            Premise(F185)
	S326= CtrlPC=0                                              Premise(F186)
	S327= CtrlPCInc=0                                           Premise(F187)
	S328= PC[CIA]=addr                                          PC-Hold(S191,S327)
	S329= PC[Out]=addr+4                                        PC-Hold(S190,S326,S327)
	S330= CtrlIAddrReg=0                                        Premise(F188)
	S331= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S193,S330)
	S332= CtrlIMMUHitReg=0                                      Premise(F189)
	S333= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S195,S332)
	S334= CtrlICache=0                                          Premise(F190)
	S335= ICache[addr]={31,rT,rA,rB,1041}                       ICache-Hold(S197,S334)
	S336= CtrlICacheReg=0                                       Premise(F191)
	S337= [ICacheReg]={31,rT,rA,rB,1041}                        ICacheReg-Hold(S199,S336)
	S338= CtrlICacheHitReg=0                                    Premise(F192)
	S339= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S201,S338)
	S340= CtrlIMem=0                                            Premise(F193)
	S341= IMem[{pid,addr}]={31,rT,rA,rB,1041}                   IMem-Hold(S203,S340)
	S342= CtrlIRMux=0                                           Premise(F194)
	S343= CtrlIR=0                                              Premise(F195)
	S344= [IR]={31,rT,rA,rB,1041}                               IR-Hold(S206,S343)
	S345= CtrlGPRegs=0                                          Premise(F196)
	S346= GPRegs[rA]=a                                          GPRegs-Hold(S208,S345)
	S347= GPRegs[rB]=b                                          GPRegs-Hold(S209,S345)
	S348= CtrlA=1                                               Premise(F197)
	S349= [A]=a                                                 A-Write(S299,S348)
	S350= CtrlB=1                                               Premise(F198)
	S351= [B]=b                                                 B-Write(S301,S350)
	S352= CtrlALUOut=0                                          Premise(F199)
	S353= CtrlCAReg=0                                           Premise(F200)
	S354= CtrlOVReg=0                                           Premise(F201)
	S355= CtrlXERSO=0                                           Premise(F202)
	S356= XER[SO]=so                                            XER-SO-Hold(S216,S355)
	S357= CtrlXEROV=0                                           Premise(F203)
	S358= CtrlXERCA=0                                           Premise(F204)
	S359= CtrlDR1bit=0                                          Premise(F205)
	S360= CtrlDR4bit=0                                          Premise(F206)
	S361= CtrlCRRegs=0                                          Premise(F207)
	S362= CtrlCRRegsCR0=0                                       Premise(F208)
	S363= CtrlCRRegsW4bitRegs=0                                 Premise(F209)
	S364= CtrlCRRegsW1bitRegs=0                                 Premise(F210)

EX	S365= PIDReg.Out=pid                                        PIDReg-Out(S324)
	S366= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S324)
	S367= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S324)
	S368= PC.CIA=addr                                           PC-Out(S328)
	S369= PC.CIA31_28=addr[31:28]                               PC-Out(S328)
	S370= PC.Out=addr+4                                         PC-Out(S329)
	S371= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S331)
	S372= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S331)
	S373= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S331)
	S374= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S333)
	S375= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S333)
	S376= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S333)
	S377= ICacheReg.Out={31,rT,rA,rB,1041}                      ICacheReg-Out(S337)
	S378= ICacheReg.Out26_31={31,rT,rA,rB,1041}[26:31]          ICacheReg-Out(S337)
	S379= ICacheReg.Out30_31={31,rT,rA,rB,1041}[30:31]          ICacheReg-Out(S337)
	S380= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S339)
	S381= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S339)
	S382= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S339)
	S383= IR.Out0_5=31                                          IR-Out(S344)
	S384= IR.Out6_10=rT                                         IR-Out(S344)
	S385= IR.Out11_15=rA                                        IR-Out(S344)
	S386= IR.Out16_20=rB                                        IR-Out(S344)
	S387= IR.Out21_31=1041                                      IR-Out(S344)
	S388= A.Out=a                                               A-Out(S349)
	S389= A.Out26_31=a[26:31]                                   A-Out(S349)
	S390= A.Out30_31=a[30:31]                                   A-Out(S349)
	S391= B.Out=b                                               B-Out(S351)
	S392= B.Out26_31=b[26:31]                                   B-Out(S351)
	S393= B.Out30_31=b[30:31]                                   B-Out(S351)
	S394= XER.SOOut=so                                          XER-SO-Out(S356)
	S395= PIDReg.Out=>IMMU.PID                                  Premise(F211)
	S396= IMMU.PID=pid                                          Path(S365,S395)
	S397= PC.Out=>IMMU.IEA                                      Premise(F212)
	S398= IMMU.IEA=addr+4                                       Path(S370,S397)
	S399= IMMU.Addr={pid,addr+4}                                IMMU-Search(S396,S398)
	S400= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S396,S398)
	S401= IMMU.Addr=>IAddrReg.In                                Premise(F213)
	S402= IAddrReg.In={pid,addr+4}                              Path(S399,S401)
	S403= IMMU.Hit=>IMMUHitReg.In                               Premise(F214)
	S404= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S400,S403)
	S405= PC.Out=>ICache.IEA                                    Premise(F215)
	S406= ICache.IEA=addr+4                                     Path(S370,S405)
	S407= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S406)
	S408= ICache.Out=>ICacheReg.In                              Premise(F216)
	S409= ICache.Hit=>ICacheHitReg.In                           Premise(F217)
	S410= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S407,S409)
	S411= IMMUHitReg.Out=>CU.IMemHit                            Premise(F218)
	S412= CU.IMemHit=IMMUHit(pid,addr)                          Path(S374,S411)
	S413= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F219)
	S414= CU.ICacheHit=ICacheHit(addr)                          Path(S380,S413)
	S415= IAddrReg.Out=>IMem.RAddr                              Premise(F220)
	S416= IMem.RAddr={pid,addr}                                 Path(S371,S415)
	S417= IMem.Out={31,rT,rA,rB,1041}                           IMem-Read(S416,S341)
	S418= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S416,S341)
	S419= IMem.Out=>IRMux.MemData                               Premise(F221)
	S420= IRMux.MemData={31,rT,rA,rB,1041}                      Path(S417,S419)
	S421= ICacheReg.Out=>IRMux.CacheData                        Premise(F222)
	S422= IRMux.CacheData={31,rT,rA,rB,1041}                    Path(S377,S421)
	S423= IRMux.Out={31,rT,rA,rB,1041}                          IRMux-Select(S420,S422)
	S424= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F223)
	S425= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S374,S424)
	S426= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F224)
	S427= IRMux.CacheSel=ICacheHit(addr)                        Path(S380,S426)
	S428= IRMux.Out=>IR.In                                      Premise(F225)
	S429= IR.In={31,rT,rA,rB,1041}                              Path(S423,S428)
	S430= IMem.MEM8WordOut=>ICache.WData                        Premise(F226)
	S431= ICache.WData=IMemGet8Word({pid,addr})                 Path(S418,S430)
	S432= PC.Out=>ICache.IEA                                    Premise(F227)
	S433= IR.Out0_5=>CU.Op                                      Premise(F228)
	S434= CU.Op=31                                              Path(S383,S433)
	S435= IR.Out11_15=>GPRegs.RReg1                             Premise(F229)
	S436= GPRegs.RReg1=rA                                       Path(S385,S435)
	S437= GPRegs.Rdata1=a                                       GPRegs-Read(S436,S346)
	S438= IR.Out16_20=>GPRegs.RReg2                             Premise(F230)
	S439= GPRegs.RReg2=rB                                       Path(S386,S438)
	S440= GPRegs.Rdata2=b                                       GPRegs-Read(S439,S347)
	S441= IR.Out21_31=>CU.IRFunc                                Premise(F231)
	S442= CU.IRFunc=1041                                        Path(S387,S441)
	S443= CU.Func=alu_subf                                      CU(S434,S442)
	S444= GPRegs.Rdata1=>A.In                                   Premise(F232)
	S445= A.In=a                                                Path(S437,S444)
	S446= GPRegs.Rdata2=>B.In                                   Premise(F233)
	S447= B.In=b                                                Path(S440,S446)
	S448= A.Out=>ALU.A                                          Premise(F234)
	S449= ALU.A=a                                               Path(S388,S448)
	S450= B.Out=>ALU.B                                          Premise(F235)
	S451= ALU.B=b                                               Path(S391,S450)
	S452= CU.Func=>ALU.Func                                     Premise(F236)
	S453= ALU.Func=alu_subf                                     Path(S443,S452)
	S454= ALU.Out=b-a                                           ALU(S449,S451)
	S455= ALU.CMP=Compare0(b-a)                                 ALU(S449,S451)
	S456= ALU.OV=OverFlow(b-a)                                  ALU(S449,S451)
	S457= ALU.CA=Carry(b-a)                                     ALU(S449,S451)
	S458= ALU.Out=>ALUOut.In                                    Premise(F237)
	S459= ALUOut.In=b-a                                         Path(S454,S458)
	S460= ALU.CA=>CAReg.In                                      Premise(F238)
	S461= CAReg.In=Carry(b-a)                                   Path(S457,S460)
	S462= ALU.CMP=>DataCmb.A                                    Premise(F239)
	S463= DataCmb.A=Compare0(b-a)                               Path(S455,S462)
	S464= ORGate.Out=>DataCmb.B                                 Premise(F240)
	S465= ALU.OV=>OVReg.In                                      Premise(F241)
	S466= OVReg.In=OverFlow(b-a)                                Path(S456,S465)
	S467= XER.SOOut=>ORGate.A                                   Premise(F242)
	S468= ORGate.A=so                                           Path(S394,S467)
	S469= ALU.OV=>ORGate.B                                      Premise(F243)
	S470= ORGate.B=OverFlow(b-a)                                Path(S456,S469)
	S471= ORGate.Out=so|OverFlow(b-a)                           ORGate(S468,S470)
	S472= DataCmb.B=so|OverFlow(b-a)                            Path(S471,S464)
	S473= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}          DataCmb(S463,S472)
	S474= ORGate.Out=>DR1bit.In                                 Premise(F244)
	S475= DR1bit.In=so|OverFlow(b-a)                            Path(S471,S474)
	S476= DataCmb.Out=>DR4bit.In                                Premise(F245)
	S477= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}            Path(S473,S476)
	S478= IR.Out6_10=>GPRegs.WReg                               Premise(F246)
	S479= GPRegs.WReg=rT                                        Path(S384,S478)
	S480= ALUOut.Out=>GPRegs.WData                              Premise(F247)
	S481= DR4bit.Out=>CRRegs.CR0In                              Premise(F248)
	S482= DR1bit.Out=>XER.SOIn                                  Premise(F249)
	S483= CAReg.Out=>XER.CAIn                                   Premise(F250)
	S484= OVReg.Out=>XER.OVIn                                   Premise(F251)
	S485= CtrlPIDReg=0                                          Premise(F252)
	S486= [PIDReg]=pid                                          PIDReg-Hold(S324,S485)
	S487= CtrlIMMU=0                                            Premise(F253)
	S488= CtrlPC=0                                              Premise(F254)
	S489= CtrlPCInc=0                                           Premise(F255)
	S490= PC[CIA]=addr                                          PC-Hold(S328,S489)
	S491= PC[Out]=addr+4                                        PC-Hold(S329,S488,S489)
	S492= CtrlIAddrReg=0                                        Premise(F256)
	S493= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S331,S492)
	S494= CtrlIMMUHitReg=0                                      Premise(F257)
	S495= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S333,S494)
	S496= CtrlICache=0                                          Premise(F258)
	S497= ICache[addr]={31,rT,rA,rB,1041}                       ICache-Hold(S335,S496)
	S498= CtrlICacheReg=0                                       Premise(F259)
	S499= [ICacheReg]={31,rT,rA,rB,1041}                        ICacheReg-Hold(S337,S498)
	S500= CtrlICacheHitReg=0                                    Premise(F260)
	S501= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S339,S500)
	S502= CtrlIMem=0                                            Premise(F261)
	S503= IMem[{pid,addr}]={31,rT,rA,rB,1041}                   IMem-Hold(S341,S502)
	S504= CtrlIRMux=0                                           Premise(F262)
	S505= CtrlIR=0                                              Premise(F263)
	S506= [IR]={31,rT,rA,rB,1041}                               IR-Hold(S344,S505)
	S507= CtrlGPRegs=0                                          Premise(F264)
	S508= GPRegs[rA]=a                                          GPRegs-Hold(S346,S507)
	S509= GPRegs[rB]=b                                          GPRegs-Hold(S347,S507)
	S510= CtrlA=0                                               Premise(F265)
	S511= [A]=a                                                 A-Hold(S349,S510)
	S512= CtrlB=0                                               Premise(F266)
	S513= [B]=b                                                 B-Hold(S351,S512)
	S514= CtrlALUOut=1                                          Premise(F267)
	S515= [ALUOut]=b-a                                          ALUOut-Write(S459,S514)
	S516= CtrlCAReg=1                                           Premise(F268)
	S517= [CAReg]=Carry(b-a)                                    CAReg-Write(S461,S516)
	S518= CtrlOVReg=1                                           Premise(F269)
	S519= [OVReg]=OverFlow(b-a)                                 OVReg-Write(S466,S518)
	S520= CtrlXERSO=0                                           Premise(F270)
	S521= XER[SO]=so                                            XER-SO-Hold(S356,S520)
	S522= CtrlXEROV=0                                           Premise(F271)
	S523= CtrlXERCA=0                                           Premise(F272)
	S524= CtrlDR1bit=1                                          Premise(F273)
	S525= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Write(S475,S524)
	S526= CtrlDR4bit=1                                          Premise(F274)
	S527= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}             DR4bit-Write(S477,S526)
	S528= CtrlCRRegs=0                                          Premise(F275)
	S529= CtrlCRRegsCR0=0                                       Premise(F276)
	S530= CtrlCRRegsW4bitRegs=0                                 Premise(F277)
	S531= CtrlCRRegsW1bitRegs=0                                 Premise(F278)

MEM	S532= PIDReg.Out=pid                                        PIDReg-Out(S486)
	S533= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S486)
	S534= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S486)
	S535= PC.CIA=addr                                           PC-Out(S490)
	S536= PC.CIA31_28=addr[31:28]                               PC-Out(S490)
	S537= PC.Out=addr+4                                         PC-Out(S491)
	S538= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S493)
	S539= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S493)
	S540= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S493)
	S541= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S495)
	S542= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S495)
	S543= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S495)
	S544= ICacheReg.Out={31,rT,rA,rB,1041}                      ICacheReg-Out(S499)
	S545= ICacheReg.Out26_31={31,rT,rA,rB,1041}[26:31]          ICacheReg-Out(S499)
	S546= ICacheReg.Out30_31={31,rT,rA,rB,1041}[30:31]          ICacheReg-Out(S499)
	S547= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S501)
	S548= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S501)
	S549= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S501)
	S550= IR.Out0_5=31                                          IR-Out(S506)
	S551= IR.Out6_10=rT                                         IR-Out(S506)
	S552= IR.Out11_15=rA                                        IR-Out(S506)
	S553= IR.Out16_20=rB                                        IR-Out(S506)
	S554= IR.Out21_31=1041                                      IR-Out(S506)
	S555= A.Out=a                                               A-Out(S511)
	S556= A.Out26_31=a[26:31]                                   A-Out(S511)
	S557= A.Out30_31=a[30:31]                                   A-Out(S511)
	S558= B.Out=b                                               B-Out(S513)
	S559= B.Out26_31=b[26:31]                                   B-Out(S513)
	S560= B.Out30_31=b[30:31]                                   B-Out(S513)
	S561= ALUOut.Out=b-a                                        ALUOut-Out(S515)
	S562= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S515)
	S563= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S515)
	S564= CAReg.Out=Carry(b-a)                                  CAReg-Out(S517)
	S565= CAReg.Out26_31=Carry(b-a)[26:31]                      CAReg-Out(S517)
	S566= CAReg.Out30_31=Carry(b-a)[30:31]                      CAReg-Out(S517)
	S567= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S519)
	S568= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S519)
	S569= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S519)
	S570= XER.SOOut=so                                          XER-SO-Out(S521)
	S571= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S525)
	S572= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S525)
	S573= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S525)
	S574= DR4bit.Out={Compare0(b-a),so|OverFlow(b-a)}           DR4bit-Out(S527)
	S575= DR4bit.Out26_31={Compare0(b-a),so|OverFlow(b-a)}[26:31]DR4bit-Out(S527)
	S576= DR4bit.Out30_31={Compare0(b-a),so|OverFlow(b-a)}[30:31]DR4bit-Out(S527)
	S577= PIDReg.Out=>IMMU.PID                                  Premise(F279)
	S578= IMMU.PID=pid                                          Path(S532,S577)
	S579= PC.Out=>IMMU.IEA                                      Premise(F280)
	S580= IMMU.IEA=addr+4                                       Path(S537,S579)
	S581= IMMU.Addr={pid,addr+4}                                IMMU-Search(S578,S580)
	S582= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S578,S580)
	S583= IMMU.Addr=>IAddrReg.In                                Premise(F281)
	S584= IAddrReg.In={pid,addr+4}                              Path(S581,S583)
	S585= IMMU.Hit=>IMMUHitReg.In                               Premise(F282)
	S586= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S582,S585)
	S587= PC.Out=>ICache.IEA                                    Premise(F283)
	S588= ICache.IEA=addr+4                                     Path(S537,S587)
	S589= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S588)
	S590= ICache.Out=>ICacheReg.In                              Premise(F284)
	S591= ICache.Hit=>ICacheHitReg.In                           Premise(F285)
	S592= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S589,S591)
	S593= IMMUHitReg.Out=>CU.IMemHit                            Premise(F286)
	S594= CU.IMemHit=IMMUHit(pid,addr)                          Path(S541,S593)
	S595= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F287)
	S596= CU.ICacheHit=ICacheHit(addr)                          Path(S547,S595)
	S597= IAddrReg.Out=>IMem.RAddr                              Premise(F288)
	S598= IMem.RAddr={pid,addr}                                 Path(S538,S597)
	S599= IMem.Out={31,rT,rA,rB,1041}                           IMem-Read(S598,S503)
	S600= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S598,S503)
	S601= IMem.Out=>IRMux.MemData                               Premise(F289)
	S602= IRMux.MemData={31,rT,rA,rB,1041}                      Path(S599,S601)
	S603= ICacheReg.Out=>IRMux.CacheData                        Premise(F290)
	S604= IRMux.CacheData={31,rT,rA,rB,1041}                    Path(S544,S603)
	S605= IRMux.Out={31,rT,rA,rB,1041}                          IRMux-Select(S602,S604)
	S606= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F291)
	S607= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S541,S606)
	S608= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F292)
	S609= IRMux.CacheSel=ICacheHit(addr)                        Path(S547,S608)
	S610= IRMux.Out=>IR.In                                      Premise(F293)
	S611= IR.In={31,rT,rA,rB,1041}                              Path(S605,S610)
	S612= IMem.MEM8WordOut=>ICache.WData                        Premise(F294)
	S613= ICache.WData=IMemGet8Word({pid,addr})                 Path(S600,S612)
	S614= PC.Out=>ICache.IEA                                    Premise(F295)
	S615= IR.Out0_5=>CU.Op                                      Premise(F296)
	S616= CU.Op=31                                              Path(S550,S615)
	S617= IR.Out11_15=>GPRegs.RReg1                             Premise(F297)
	S618= GPRegs.RReg1=rA                                       Path(S552,S617)
	S619= GPRegs.Rdata1=a                                       GPRegs-Read(S618,S508)
	S620= IR.Out16_20=>GPRegs.RReg2                             Premise(F298)
	S621= GPRegs.RReg2=rB                                       Path(S553,S620)
	S622= GPRegs.Rdata2=b                                       GPRegs-Read(S621,S509)
	S623= IR.Out21_31=>CU.IRFunc                                Premise(F299)
	S624= CU.IRFunc=1041                                        Path(S554,S623)
	S625= CU.Func=alu_subf                                      CU(S616,S624)
	S626= GPRegs.Rdata1=>A.In                                   Premise(F300)
	S627= A.In=a                                                Path(S619,S626)
	S628= GPRegs.Rdata2=>B.In                                   Premise(F301)
	S629= B.In=b                                                Path(S622,S628)
	S630= A.Out=>ALU.A                                          Premise(F302)
	S631= ALU.A=a                                               Path(S555,S630)
	S632= B.Out=>ALU.B                                          Premise(F303)
	S633= ALU.B=b                                               Path(S558,S632)
	S634= CU.Func=>ALU.Func                                     Premise(F304)
	S635= ALU.Func=alu_subf                                     Path(S625,S634)
	S636= ALU.Out=b-a                                           ALU(S631,S633)
	S637= ALU.CMP=Compare0(b-a)                                 ALU(S631,S633)
	S638= ALU.OV=OverFlow(b-a)                                  ALU(S631,S633)
	S639= ALU.CA=Carry(b-a)                                     ALU(S631,S633)
	S640= ALU.Out=>ALUOut.In                                    Premise(F305)
	S641= ALUOut.In=b-a                                         Path(S636,S640)
	S642= ALU.CA=>CAReg.In                                      Premise(F306)
	S643= CAReg.In=Carry(b-a)                                   Path(S639,S642)
	S644= ALU.CMP=>DataCmb.A                                    Premise(F307)
	S645= DataCmb.A=Compare0(b-a)                               Path(S637,S644)
	S646= ORGate.Out=>DataCmb.B                                 Premise(F308)
	S647= ALU.OV=>OVReg.In                                      Premise(F309)
	S648= OVReg.In=OverFlow(b-a)                                Path(S638,S647)
	S649= XER.SOOut=>ORGate.A                                   Premise(F310)
	S650= ORGate.A=so                                           Path(S570,S649)
	S651= ALU.OV=>ORGate.B                                      Premise(F311)
	S652= ORGate.B=OverFlow(b-a)                                Path(S638,S651)
	S653= ORGate.Out=so|OverFlow(b-a)                           ORGate(S650,S652)
	S654= DataCmb.B=so|OverFlow(b-a)                            Path(S653,S646)
	S655= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}          DataCmb(S645,S654)
	S656= ORGate.Out=>DR1bit.In                                 Premise(F312)
	S657= DR1bit.In=so|OverFlow(b-a)                            Path(S653,S656)
	S658= DataCmb.Out=>DR4bit.In                                Premise(F313)
	S659= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}            Path(S655,S658)
	S660= IR.Out6_10=>GPRegs.WReg                               Premise(F314)
	S661= GPRegs.WReg=rT                                        Path(S551,S660)
	S662= ALUOut.Out=>GPRegs.WData                              Premise(F315)
	S663= GPRegs.WData=b-a                                      Path(S561,S662)
	S664= DR4bit.Out=>CRRegs.CR0In                              Premise(F316)
	S665= CRRegs.CR0In={Compare0(b-a),so|OverFlow(b-a)}         Path(S574,S664)
	S666= DR1bit.Out=>XER.SOIn                                  Premise(F317)
	S667= XER.SOIn=so|OverFlow(b-a)                             Path(S571,S666)
	S668= CAReg.Out=>XER.CAIn                                   Premise(F318)
	S669= XER.CAIn=Carry(b-a)                                   Path(S564,S668)
	S670= OVReg.Out=>XER.OVIn                                   Premise(F319)
	S671= XER.OVIn=OverFlow(b-a)                                Path(S567,S670)
	S672= CtrlPIDReg=0                                          Premise(F320)
	S673= [PIDReg]=pid                                          PIDReg-Hold(S486,S672)
	S674= CtrlIMMU=0                                            Premise(F321)
	S675= CtrlPC=0                                              Premise(F322)
	S676= CtrlPCInc=0                                           Premise(F323)
	S677= PC[CIA]=addr                                          PC-Hold(S490,S676)
	S678= PC[Out]=addr+4                                        PC-Hold(S491,S675,S676)
	S679= CtrlIAddrReg=0                                        Premise(F324)
	S680= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S493,S679)
	S681= CtrlIMMUHitReg=0                                      Premise(F325)
	S682= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S495,S681)
	S683= CtrlICache=0                                          Premise(F326)
	S684= ICache[addr]={31,rT,rA,rB,1041}                       ICache-Hold(S497,S683)
	S685= CtrlICacheReg=0                                       Premise(F327)
	S686= [ICacheReg]={31,rT,rA,rB,1041}                        ICacheReg-Hold(S499,S685)
	S687= CtrlICacheHitReg=0                                    Premise(F328)
	S688= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S501,S687)
	S689= CtrlIMem=0                                            Premise(F329)
	S690= IMem[{pid,addr}]={31,rT,rA,rB,1041}                   IMem-Hold(S503,S689)
	S691= CtrlIRMux=0                                           Premise(F330)
	S692= CtrlIR=0                                              Premise(F331)
	S693= [IR]={31,rT,rA,rB,1041}                               IR-Hold(S506,S692)
	S694= CtrlGPRegs=0                                          Premise(F332)
	S695= GPRegs[rA]=a                                          GPRegs-Hold(S508,S694)
	S696= GPRegs[rB]=b                                          GPRegs-Hold(S509,S694)
	S697= CtrlA=0                                               Premise(F333)
	S698= [A]=a                                                 A-Hold(S511,S697)
	S699= CtrlB=0                                               Premise(F334)
	S700= [B]=b                                                 B-Hold(S513,S699)
	S701= CtrlALUOut=0                                          Premise(F335)
	S702= [ALUOut]=b-a                                          ALUOut-Hold(S515,S701)
	S703= CtrlCAReg=0                                           Premise(F336)
	S704= [CAReg]=Carry(b-a)                                    CAReg-Hold(S517,S703)
	S705= CtrlOVReg=0                                           Premise(F337)
	S706= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S519,S705)
	S707= CtrlXERSO=0                                           Premise(F338)
	S708= XER[SO]=so                                            XER-SO-Hold(S521,S707)
	S709= CtrlXEROV=0                                           Premise(F339)
	S710= CtrlXERCA=0                                           Premise(F340)
	S711= CtrlDR1bit=0                                          Premise(F341)
	S712= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S525,S711)
	S713= CtrlDR4bit=0                                          Premise(F342)
	S714= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}             DR4bit-Hold(S527,S713)
	S715= CtrlCRRegs=0                                          Premise(F343)
	S716= CtrlCRRegsCR0=0                                       Premise(F344)
	S717= CtrlCRRegsW4bitRegs=0                                 Premise(F345)
	S718= CtrlCRRegsW1bitRegs=0                                 Premise(F346)

DMMU1	S719= PIDReg.Out=pid                                        PIDReg-Out(S673)
	S720= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S673)
	S721= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S673)
	S722= PC.CIA=addr                                           PC-Out(S677)
	S723= PC.CIA31_28=addr[31:28]                               PC-Out(S677)
	S724= PC.Out=addr+4                                         PC-Out(S678)
	S725= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S680)
	S726= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S680)
	S727= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S680)
	S728= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S682)
	S729= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S682)
	S730= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S682)
	S731= ICacheReg.Out={31,rT,rA,rB,1041}                      ICacheReg-Out(S686)
	S732= ICacheReg.Out26_31={31,rT,rA,rB,1041}[26:31]          ICacheReg-Out(S686)
	S733= ICacheReg.Out30_31={31,rT,rA,rB,1041}[30:31]          ICacheReg-Out(S686)
	S734= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S688)
	S735= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S688)
	S736= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S688)
	S737= IR.Out0_5=31                                          IR-Out(S693)
	S738= IR.Out6_10=rT                                         IR-Out(S693)
	S739= IR.Out11_15=rA                                        IR-Out(S693)
	S740= IR.Out16_20=rB                                        IR-Out(S693)
	S741= IR.Out21_31=1041                                      IR-Out(S693)
	S742= A.Out=a                                               A-Out(S698)
	S743= A.Out26_31=a[26:31]                                   A-Out(S698)
	S744= A.Out30_31=a[30:31]                                   A-Out(S698)
	S745= B.Out=b                                               B-Out(S700)
	S746= B.Out26_31=b[26:31]                                   B-Out(S700)
	S747= B.Out30_31=b[30:31]                                   B-Out(S700)
	S748= ALUOut.Out=b-a                                        ALUOut-Out(S702)
	S749= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S702)
	S750= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S702)
	S751= CAReg.Out=Carry(b-a)                                  CAReg-Out(S704)
	S752= CAReg.Out26_31=Carry(b-a)[26:31]                      CAReg-Out(S704)
	S753= CAReg.Out30_31=Carry(b-a)[30:31]                      CAReg-Out(S704)
	S754= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S706)
	S755= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S706)
	S756= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S706)
	S757= XER.SOOut=so                                          XER-SO-Out(S708)
	S758= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S712)
	S759= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S712)
	S760= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S712)
	S761= DR4bit.Out={Compare0(b-a),so|OverFlow(b-a)}           DR4bit-Out(S714)
	S762= DR4bit.Out26_31={Compare0(b-a),so|OverFlow(b-a)}[26:31]DR4bit-Out(S714)
	S763= DR4bit.Out30_31={Compare0(b-a),so|OverFlow(b-a)}[30:31]DR4bit-Out(S714)
	S764= PIDReg.Out=>IMMU.PID                                  Premise(F347)
	S765= IMMU.PID=pid                                          Path(S719,S764)
	S766= PC.Out=>IMMU.IEA                                      Premise(F348)
	S767= IMMU.IEA=addr+4                                       Path(S724,S766)
	S768= IMMU.Addr={pid,addr+4}                                IMMU-Search(S765,S767)
	S769= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S765,S767)
	S770= IMMU.Addr=>IAddrReg.In                                Premise(F349)
	S771= IAddrReg.In={pid,addr+4}                              Path(S768,S770)
	S772= IMMU.Hit=>IMMUHitReg.In                               Premise(F350)
	S773= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S769,S772)
	S774= PC.Out=>ICache.IEA                                    Premise(F351)
	S775= ICache.IEA=addr+4                                     Path(S724,S774)
	S776= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S775)
	S777= ICache.Out=>ICacheReg.In                              Premise(F352)
	S778= ICache.Hit=>ICacheHitReg.In                           Premise(F353)
	S779= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S776,S778)
	S780= IMMUHitReg.Out=>CU.IMemHit                            Premise(F354)
	S781= CU.IMemHit=IMMUHit(pid,addr)                          Path(S728,S780)
	S782= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F355)
	S783= CU.ICacheHit=ICacheHit(addr)                          Path(S734,S782)
	S784= IAddrReg.Out=>IMem.RAddr                              Premise(F356)
	S785= IMem.RAddr={pid,addr}                                 Path(S725,S784)
	S786= IMem.Out={31,rT,rA,rB,1041}                           IMem-Read(S785,S690)
	S787= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S785,S690)
	S788= IMem.Out=>IRMux.MemData                               Premise(F357)
	S789= IRMux.MemData={31,rT,rA,rB,1041}                      Path(S786,S788)
	S790= ICacheReg.Out=>IRMux.CacheData                        Premise(F358)
	S791= IRMux.CacheData={31,rT,rA,rB,1041}                    Path(S731,S790)
	S792= IRMux.Out={31,rT,rA,rB,1041}                          IRMux-Select(S789,S791)
	S793= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F359)
	S794= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S728,S793)
	S795= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F360)
	S796= IRMux.CacheSel=ICacheHit(addr)                        Path(S734,S795)
	S797= IRMux.Out=>IR.In                                      Premise(F361)
	S798= IR.In={31,rT,rA,rB,1041}                              Path(S792,S797)
	S799= IMem.MEM8WordOut=>ICache.WData                        Premise(F362)
	S800= ICache.WData=IMemGet8Word({pid,addr})                 Path(S787,S799)
	S801= PC.Out=>ICache.IEA                                    Premise(F363)
	S802= IR.Out0_5=>CU.Op                                      Premise(F364)
	S803= CU.Op=31                                              Path(S737,S802)
	S804= IR.Out11_15=>GPRegs.RReg1                             Premise(F365)
	S805= GPRegs.RReg1=rA                                       Path(S739,S804)
	S806= GPRegs.Rdata1=a                                       GPRegs-Read(S805,S695)
	S807= IR.Out16_20=>GPRegs.RReg2                             Premise(F366)
	S808= GPRegs.RReg2=rB                                       Path(S740,S807)
	S809= GPRegs.Rdata2=b                                       GPRegs-Read(S808,S696)
	S810= IR.Out21_31=>CU.IRFunc                                Premise(F367)
	S811= CU.IRFunc=1041                                        Path(S741,S810)
	S812= CU.Func=alu_subf                                      CU(S803,S811)
	S813= GPRegs.Rdata1=>A.In                                   Premise(F368)
	S814= A.In=a                                                Path(S806,S813)
	S815= GPRegs.Rdata2=>B.In                                   Premise(F369)
	S816= B.In=b                                                Path(S809,S815)
	S817= A.Out=>ALU.A                                          Premise(F370)
	S818= ALU.A=a                                               Path(S742,S817)
	S819= B.Out=>ALU.B                                          Premise(F371)
	S820= ALU.B=b                                               Path(S745,S819)
	S821= CU.Func=>ALU.Func                                     Premise(F372)
	S822= ALU.Func=alu_subf                                     Path(S812,S821)
	S823= ALU.Out=b-a                                           ALU(S818,S820)
	S824= ALU.CMP=Compare0(b-a)                                 ALU(S818,S820)
	S825= ALU.OV=OverFlow(b-a)                                  ALU(S818,S820)
	S826= ALU.CA=Carry(b-a)                                     ALU(S818,S820)
	S827= ALU.Out=>ALUOut.In                                    Premise(F373)
	S828= ALUOut.In=b-a                                         Path(S823,S827)
	S829= ALU.CA=>CAReg.In                                      Premise(F374)
	S830= CAReg.In=Carry(b-a)                                   Path(S826,S829)
	S831= ALU.CMP=>DataCmb.A                                    Premise(F375)
	S832= DataCmb.A=Compare0(b-a)                               Path(S824,S831)
	S833= ORGate.Out=>DataCmb.B                                 Premise(F376)
	S834= ALU.OV=>OVReg.In                                      Premise(F377)
	S835= OVReg.In=OverFlow(b-a)                                Path(S825,S834)
	S836= XER.SOOut=>ORGate.A                                   Premise(F378)
	S837= ORGate.A=so                                           Path(S757,S836)
	S838= ALU.OV=>ORGate.B                                      Premise(F379)
	S839= ORGate.B=OverFlow(b-a)                                Path(S825,S838)
	S840= ORGate.Out=so|OverFlow(b-a)                           ORGate(S837,S839)
	S841= DataCmb.B=so|OverFlow(b-a)                            Path(S840,S833)
	S842= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}          DataCmb(S832,S841)
	S843= ORGate.Out=>DR1bit.In                                 Premise(F380)
	S844= DR1bit.In=so|OverFlow(b-a)                            Path(S840,S843)
	S845= DataCmb.Out=>DR4bit.In                                Premise(F381)
	S846= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}            Path(S842,S845)
	S847= IR.Out6_10=>GPRegs.WReg                               Premise(F382)
	S848= GPRegs.WReg=rT                                        Path(S738,S847)
	S849= ALUOut.Out=>GPRegs.WData                              Premise(F383)
	S850= GPRegs.WData=b-a                                      Path(S748,S849)
	S851= DR4bit.Out=>CRRegs.CR0In                              Premise(F384)
	S852= CRRegs.CR0In={Compare0(b-a),so|OverFlow(b-a)}         Path(S761,S851)
	S853= DR1bit.Out=>XER.SOIn                                  Premise(F385)
	S854= XER.SOIn=so|OverFlow(b-a)                             Path(S758,S853)
	S855= CAReg.Out=>XER.CAIn                                   Premise(F386)
	S856= XER.CAIn=Carry(b-a)                                   Path(S751,S855)
	S857= OVReg.Out=>XER.OVIn                                   Premise(F387)
	S858= XER.OVIn=OverFlow(b-a)                                Path(S754,S857)
	S859= CtrlPIDReg=0                                          Premise(F388)
	S860= [PIDReg]=pid                                          PIDReg-Hold(S673,S859)
	S861= CtrlIMMU=0                                            Premise(F389)
	S862= CtrlPC=0                                              Premise(F390)
	S863= CtrlPCInc=0                                           Premise(F391)
	S864= PC[CIA]=addr                                          PC-Hold(S677,S863)
	S865= PC[Out]=addr+4                                        PC-Hold(S678,S862,S863)
	S866= CtrlIAddrReg=0                                        Premise(F392)
	S867= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S680,S866)
	S868= CtrlIMMUHitReg=0                                      Premise(F393)
	S869= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S682,S868)
	S870= CtrlICache=0                                          Premise(F394)
	S871= ICache[addr]={31,rT,rA,rB,1041}                       ICache-Hold(S684,S870)
	S872= CtrlICacheReg=0                                       Premise(F395)
	S873= [ICacheReg]={31,rT,rA,rB,1041}                        ICacheReg-Hold(S686,S872)
	S874= CtrlICacheHitReg=0                                    Premise(F396)
	S875= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S688,S874)
	S876= CtrlIMem=0                                            Premise(F397)
	S877= IMem[{pid,addr}]={31,rT,rA,rB,1041}                   IMem-Hold(S690,S876)
	S878= CtrlIRMux=0                                           Premise(F398)
	S879= CtrlIR=0                                              Premise(F399)
	S880= [IR]={31,rT,rA,rB,1041}                               IR-Hold(S693,S879)
	S881= CtrlGPRegs=0                                          Premise(F400)
	S882= GPRegs[rA]=a                                          GPRegs-Hold(S695,S881)
	S883= GPRegs[rB]=b                                          GPRegs-Hold(S696,S881)
	S884= CtrlA=0                                               Premise(F401)
	S885= [A]=a                                                 A-Hold(S698,S884)
	S886= CtrlB=0                                               Premise(F402)
	S887= [B]=b                                                 B-Hold(S700,S886)
	S888= CtrlALUOut=0                                          Premise(F403)
	S889= [ALUOut]=b-a                                          ALUOut-Hold(S702,S888)
	S890= CtrlCAReg=0                                           Premise(F404)
	S891= [CAReg]=Carry(b-a)                                    CAReg-Hold(S704,S890)
	S892= CtrlOVReg=0                                           Premise(F405)
	S893= [OVReg]=OverFlow(b-a)                                 OVReg-Hold(S706,S892)
	S894= CtrlXERSO=0                                           Premise(F406)
	S895= XER[SO]=so                                            XER-SO-Hold(S708,S894)
	S896= CtrlXEROV=0                                           Premise(F407)
	S897= CtrlXERCA=0                                           Premise(F408)
	S898= CtrlDR1bit=0                                          Premise(F409)
	S899= [DR1bit]=so|OverFlow(b-a)                             DR1bit-Hold(S712,S898)
	S900= CtrlDR4bit=0                                          Premise(F410)
	S901= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}             DR4bit-Hold(S714,S900)
	S902= CtrlCRRegs=0                                          Premise(F411)
	S903= CtrlCRRegsCR0=0                                       Premise(F412)
	S904= CtrlCRRegsW4bitRegs=0                                 Premise(F413)
	S905= CtrlCRRegsW1bitRegs=0                                 Premise(F414)

DMMU2	S906= PIDReg.Out=pid                                        PIDReg-Out(S860)
	S907= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S860)
	S908= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S860)
	S909= PC.CIA=addr                                           PC-Out(S864)
	S910= PC.CIA31_28=addr[31:28]                               PC-Out(S864)
	S911= PC.Out=addr+4                                         PC-Out(S865)
	S912= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S867)
	S913= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S867)
	S914= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S867)
	S915= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S869)
	S916= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S869)
	S917= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S869)
	S918= ICacheReg.Out={31,rT,rA,rB,1041}                      ICacheReg-Out(S873)
	S919= ICacheReg.Out26_31={31,rT,rA,rB,1041}[26:31]          ICacheReg-Out(S873)
	S920= ICacheReg.Out30_31={31,rT,rA,rB,1041}[30:31]          ICacheReg-Out(S873)
	S921= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S875)
	S922= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S875)
	S923= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S875)
	S924= IR.Out0_5=31                                          IR-Out(S880)
	S925= IR.Out6_10=rT                                         IR-Out(S880)
	S926= IR.Out11_15=rA                                        IR-Out(S880)
	S927= IR.Out16_20=rB                                        IR-Out(S880)
	S928= IR.Out21_31=1041                                      IR-Out(S880)
	S929= A.Out=a                                               A-Out(S885)
	S930= A.Out26_31=a[26:31]                                   A-Out(S885)
	S931= A.Out30_31=a[30:31]                                   A-Out(S885)
	S932= B.Out=b                                               B-Out(S887)
	S933= B.Out26_31=b[26:31]                                   B-Out(S887)
	S934= B.Out30_31=b[30:31]                                   B-Out(S887)
	S935= ALUOut.Out=b-a                                        ALUOut-Out(S889)
	S936= ALUOut.Out26_31=b-a[26:31]                            ALUOut-Out(S889)
	S937= ALUOut.Out30_31=b-a[30:31]                            ALUOut-Out(S889)
	S938= CAReg.Out=Carry(b-a)                                  CAReg-Out(S891)
	S939= CAReg.Out26_31=Carry(b-a)[26:31]                      CAReg-Out(S891)
	S940= CAReg.Out30_31=Carry(b-a)[30:31]                      CAReg-Out(S891)
	S941= OVReg.Out=OverFlow(b-a)                               OVReg-Out(S893)
	S942= OVReg.Out26_31=OverFlow(b-a)[26:31]                   OVReg-Out(S893)
	S943= OVReg.Out30_31=OverFlow(b-a)[30:31]                   OVReg-Out(S893)
	S944= XER.SOOut=so                                          XER-SO-Out(S895)
	S945= DR1bit.Out=so|OverFlow(b-a)                           DR1bit-Out(S899)
	S946= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]               DR1bit-Out(S899)
	S947= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]               DR1bit-Out(S899)
	S948= DR4bit.Out={Compare0(b-a),so|OverFlow(b-a)}           DR4bit-Out(S901)
	S949= DR4bit.Out26_31={Compare0(b-a),so|OverFlow(b-a)}[26:31]DR4bit-Out(S901)
	S950= DR4bit.Out30_31={Compare0(b-a),so|OverFlow(b-a)}[30:31]DR4bit-Out(S901)
	S951= PIDReg.Out=>IMMU.PID                                  Premise(F415)
	S952= IMMU.PID=pid                                          Path(S906,S951)
	S953= PC.Out=>IMMU.IEA                                      Premise(F416)
	S954= IMMU.IEA=addr+4                                       Path(S911,S953)
	S955= IMMU.Addr={pid,addr+4}                                IMMU-Search(S952,S954)
	S956= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S952,S954)
	S957= IMMU.Addr=>IAddrReg.In                                Premise(F417)
	S958= IAddrReg.In={pid,addr+4}                              Path(S955,S957)
	S959= IMMU.Hit=>IMMUHitReg.In                               Premise(F418)
	S960= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S956,S959)
	S961= PC.Out=>ICache.IEA                                    Premise(F419)
	S962= ICache.IEA=addr+4                                     Path(S911,S961)
	S963= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S962)
	S964= ICache.Out=>ICacheReg.In                              Premise(F420)
	S965= ICache.Hit=>ICacheHitReg.In                           Premise(F421)
	S966= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S963,S965)
	S967= IMMUHitReg.Out=>CU.IMemHit                            Premise(F422)
	S968= CU.IMemHit=IMMUHit(pid,addr)                          Path(S915,S967)
	S969= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F423)
	S970= CU.ICacheHit=ICacheHit(addr)                          Path(S921,S969)
	S971= IAddrReg.Out=>IMem.RAddr                              Premise(F424)
	S972= IMem.RAddr={pid,addr}                                 Path(S912,S971)
	S973= IMem.Out={31,rT,rA,rB,1041}                           IMem-Read(S972,S877)
	S974= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S972,S877)
	S975= IMem.Out=>IRMux.MemData                               Premise(F425)
	S976= IRMux.MemData={31,rT,rA,rB,1041}                      Path(S973,S975)
	S977= ICacheReg.Out=>IRMux.CacheData                        Premise(F426)
	S978= IRMux.CacheData={31,rT,rA,rB,1041}                    Path(S918,S977)
	S979= IRMux.Out={31,rT,rA,rB,1041}                          IRMux-Select(S976,S978)
	S980= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F427)
	S981= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S915,S980)
	S982= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F428)
	S983= IRMux.CacheSel=ICacheHit(addr)                        Path(S921,S982)
	S984= IRMux.Out=>IR.In                                      Premise(F429)
	S985= IR.In={31,rT,rA,rB,1041}                              Path(S979,S984)
	S986= IMem.MEM8WordOut=>ICache.WData                        Premise(F430)
	S987= ICache.WData=IMemGet8Word({pid,addr})                 Path(S974,S986)
	S988= PC.Out=>ICache.IEA                                    Premise(F431)
	S989= IR.Out0_5=>CU.Op                                      Premise(F432)
	S990= CU.Op=31                                              Path(S924,S989)
	S991= IR.Out11_15=>GPRegs.RReg1                             Premise(F433)
	S992= GPRegs.RReg1=rA                                       Path(S926,S991)
	S993= GPRegs.Rdata1=a                                       GPRegs-Read(S992,S882)
	S994= IR.Out16_20=>GPRegs.RReg2                             Premise(F434)
	S995= GPRegs.RReg2=rB                                       Path(S927,S994)
	S996= GPRegs.Rdata2=b                                       GPRegs-Read(S995,S883)
	S997= IR.Out21_31=>CU.IRFunc                                Premise(F435)
	S998= CU.IRFunc=1041                                        Path(S928,S997)
	S999= CU.Func=alu_subf                                      CU(S990,S998)
	S1000= GPRegs.Rdata1=>A.In                                  Premise(F436)
	S1001= A.In=a                                               Path(S993,S1000)
	S1002= GPRegs.Rdata2=>B.In                                  Premise(F437)
	S1003= B.In=b                                               Path(S996,S1002)
	S1004= A.Out=>ALU.A                                         Premise(F438)
	S1005= ALU.A=a                                              Path(S929,S1004)
	S1006= B.Out=>ALU.B                                         Premise(F439)
	S1007= ALU.B=b                                              Path(S932,S1006)
	S1008= CU.Func=>ALU.Func                                    Premise(F440)
	S1009= ALU.Func=alu_subf                                    Path(S999,S1008)
	S1010= ALU.Out=b-a                                          ALU(S1005,S1007)
	S1011= ALU.CMP=Compare0(b-a)                                ALU(S1005,S1007)
	S1012= ALU.OV=OverFlow(b-a)                                 ALU(S1005,S1007)
	S1013= ALU.CA=Carry(b-a)                                    ALU(S1005,S1007)
	S1014= ALU.Out=>ALUOut.In                                   Premise(F441)
	S1015= ALUOut.In=b-a                                        Path(S1010,S1014)
	S1016= ALU.CA=>CAReg.In                                     Premise(F442)
	S1017= CAReg.In=Carry(b-a)                                  Path(S1013,S1016)
	S1018= ALU.CMP=>DataCmb.A                                   Premise(F443)
	S1019= DataCmb.A=Compare0(b-a)                              Path(S1011,S1018)
	S1020= ORGate.Out=>DataCmb.B                                Premise(F444)
	S1021= ALU.OV=>OVReg.In                                     Premise(F445)
	S1022= OVReg.In=OverFlow(b-a)                               Path(S1012,S1021)
	S1023= XER.SOOut=>ORGate.A                                  Premise(F446)
	S1024= ORGate.A=so                                          Path(S944,S1023)
	S1025= ALU.OV=>ORGate.B                                     Premise(F447)
	S1026= ORGate.B=OverFlow(b-a)                               Path(S1012,S1025)
	S1027= ORGate.Out=so|OverFlow(b-a)                          ORGate(S1024,S1026)
	S1028= DataCmb.B=so|OverFlow(b-a)                           Path(S1027,S1020)
	S1029= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}         DataCmb(S1019,S1028)
	S1030= ORGate.Out=>DR1bit.In                                Premise(F448)
	S1031= DR1bit.In=so|OverFlow(b-a)                           Path(S1027,S1030)
	S1032= DataCmb.Out=>DR4bit.In                               Premise(F449)
	S1033= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}           Path(S1029,S1032)
	S1034= IR.Out6_10=>GPRegs.WReg                              Premise(F450)
	S1035= GPRegs.WReg=rT                                       Path(S925,S1034)
	S1036= ALUOut.Out=>GPRegs.WData                             Premise(F451)
	S1037= GPRegs.WData=b-a                                     Path(S935,S1036)
	S1038= DR4bit.Out=>CRRegs.CR0In                             Premise(F452)
	S1039= CRRegs.CR0In={Compare0(b-a),so|OverFlow(b-a)}        Path(S948,S1038)
	S1040= DR1bit.Out=>XER.SOIn                                 Premise(F453)
	S1041= XER.SOIn=so|OverFlow(b-a)                            Path(S945,S1040)
	S1042= CAReg.Out=>XER.CAIn                                  Premise(F454)
	S1043= XER.CAIn=Carry(b-a)                                  Path(S938,S1042)
	S1044= OVReg.Out=>XER.OVIn                                  Premise(F455)
	S1045= XER.OVIn=OverFlow(b-a)                               Path(S941,S1044)
	S1046= CtrlPIDReg=0                                         Premise(F456)
	S1047= [PIDReg]=pid                                         PIDReg-Hold(S860,S1046)
	S1048= CtrlIMMU=0                                           Premise(F457)
	S1049= CtrlPC=0                                             Premise(F458)
	S1050= CtrlPCInc=0                                          Premise(F459)
	S1051= PC[CIA]=addr                                         PC-Hold(S864,S1050)
	S1052= PC[Out]=addr+4                                       PC-Hold(S865,S1049,S1050)
	S1053= CtrlIAddrReg=0                                       Premise(F460)
	S1054= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S867,S1053)
	S1055= CtrlIMMUHitReg=0                                     Premise(F461)
	S1056= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S869,S1055)
	S1057= CtrlICache=0                                         Premise(F462)
	S1058= ICache[addr]={31,rT,rA,rB,1041}                      ICache-Hold(S871,S1057)
	S1059= CtrlICacheReg=0                                      Premise(F463)
	S1060= [ICacheReg]={31,rT,rA,rB,1041}                       ICacheReg-Hold(S873,S1059)
	S1061= CtrlICacheHitReg=0                                   Premise(F464)
	S1062= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S875,S1061)
	S1063= CtrlIMem=0                                           Premise(F465)
	S1064= IMem[{pid,addr}]={31,rT,rA,rB,1041}                  IMem-Hold(S877,S1063)
	S1065= CtrlIRMux=0                                          Premise(F466)
	S1066= CtrlIR=0                                             Premise(F467)
	S1067= [IR]={31,rT,rA,rB,1041}                              IR-Hold(S880,S1066)
	S1068= CtrlGPRegs=0                                         Premise(F468)
	S1069= GPRegs[rA]=a                                         GPRegs-Hold(S882,S1068)
	S1070= GPRegs[rB]=b                                         GPRegs-Hold(S883,S1068)
	S1071= CtrlA=0                                              Premise(F469)
	S1072= [A]=a                                                A-Hold(S885,S1071)
	S1073= CtrlB=0                                              Premise(F470)
	S1074= [B]=b                                                B-Hold(S887,S1073)
	S1075= CtrlALUOut=0                                         Premise(F471)
	S1076= [ALUOut]=b-a                                         ALUOut-Hold(S889,S1075)
	S1077= CtrlCAReg=0                                          Premise(F472)
	S1078= [CAReg]=Carry(b-a)                                   CAReg-Hold(S891,S1077)
	S1079= CtrlOVReg=0                                          Premise(F473)
	S1080= [OVReg]=OverFlow(b-a)                                OVReg-Hold(S893,S1079)
	S1081= CtrlXERSO=0                                          Premise(F474)
	S1082= XER[SO]=so                                           XER-SO-Hold(S895,S1081)
	S1083= CtrlXEROV=0                                          Premise(F475)
	S1084= CtrlXERCA=0                                          Premise(F476)
	S1085= CtrlDR1bit=0                                         Premise(F477)
	S1086= [DR1bit]=so|OverFlow(b-a)                            DR1bit-Hold(S899,S1085)
	S1087= CtrlDR4bit=0                                         Premise(F478)
	S1088= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}            DR4bit-Hold(S901,S1087)
	S1089= CtrlCRRegs=0                                         Premise(F479)
	S1090= CtrlCRRegsCR0=0                                      Premise(F480)
	S1091= CtrlCRRegsW4bitRegs=0                                Premise(F481)
	S1092= CtrlCRRegsW1bitRegs=0                                Premise(F482)

WB	S1093= PIDReg.Out=pid                                       PIDReg-Out(S1047)
	S1094= PIDReg.Out26_31=pid[26:31]                           PIDReg-Out(S1047)
	S1095= PIDReg.Out30_31=pid[30:31]                           PIDReg-Out(S1047)
	S1096= PC.CIA=addr                                          PC-Out(S1051)
	S1097= PC.CIA31_28=addr[31:28]                              PC-Out(S1051)
	S1098= PC.Out=addr+4                                        PC-Out(S1052)
	S1099= IAddrReg.Out={pid,addr}                              IAddrReg-Out(S1054)
	S1100= IAddrReg.Out26_31={pid,addr}[26:31]                  IAddrReg-Out(S1054)
	S1101= IAddrReg.Out30_31={pid,addr}[30:31]                  IAddrReg-Out(S1054)
	S1102= IMMUHitReg.Out=IMMUHit(pid,addr)                     IMMUHitReg-Out(S1056)
	S1103= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S1056)
	S1104= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S1056)
	S1105= ICacheReg.Out={31,rT,rA,rB,1041}                     ICacheReg-Out(S1060)
	S1106= ICacheReg.Out26_31={31,rT,rA,rB,1041}[26:31]         ICacheReg-Out(S1060)
	S1107= ICacheReg.Out30_31={31,rT,rA,rB,1041}[30:31]         ICacheReg-Out(S1060)
	S1108= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S1062)
	S1109= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S1062)
	S1110= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S1062)
	S1111= IR.Out0_5=31                                         IR-Out(S1067)
	S1112= IR.Out6_10=rT                                        IR-Out(S1067)
	S1113= IR.Out11_15=rA                                       IR-Out(S1067)
	S1114= IR.Out16_20=rB                                       IR-Out(S1067)
	S1115= IR.Out21_31=1041                                     IR-Out(S1067)
	S1116= A.Out=a                                              A-Out(S1072)
	S1117= A.Out26_31=a[26:31]                                  A-Out(S1072)
	S1118= A.Out30_31=a[30:31]                                  A-Out(S1072)
	S1119= B.Out=b                                              B-Out(S1074)
	S1120= B.Out26_31=b[26:31]                                  B-Out(S1074)
	S1121= B.Out30_31=b[30:31]                                  B-Out(S1074)
	S1122= ALUOut.Out=b-a                                       ALUOut-Out(S1076)
	S1123= ALUOut.Out26_31=b-a[26:31]                           ALUOut-Out(S1076)
	S1124= ALUOut.Out30_31=b-a[30:31]                           ALUOut-Out(S1076)
	S1125= CAReg.Out=Carry(b-a)                                 CAReg-Out(S1078)
	S1126= CAReg.Out26_31=Carry(b-a)[26:31]                     CAReg-Out(S1078)
	S1127= CAReg.Out30_31=Carry(b-a)[30:31]                     CAReg-Out(S1078)
	S1128= OVReg.Out=OverFlow(b-a)                              OVReg-Out(S1080)
	S1129= OVReg.Out26_31=OverFlow(b-a)[26:31]                  OVReg-Out(S1080)
	S1130= OVReg.Out30_31=OverFlow(b-a)[30:31]                  OVReg-Out(S1080)
	S1131= XER.SOOut=so                                         XER-SO-Out(S1082)
	S1132= DR1bit.Out=so|OverFlow(b-a)                          DR1bit-Out(S1086)
	S1133= DR1bit.Out26_31=so|OverFlow(b-a)[26:31]              DR1bit-Out(S1086)
	S1134= DR1bit.Out30_31=so|OverFlow(b-a)[30:31]              DR1bit-Out(S1086)
	S1135= DR4bit.Out={Compare0(b-a),so|OverFlow(b-a)}          DR4bit-Out(S1088)
	S1136= DR4bit.Out26_31={Compare0(b-a),so|OverFlow(b-a)}[26:31]DR4bit-Out(S1088)
	S1137= DR4bit.Out30_31={Compare0(b-a),so|OverFlow(b-a)}[30:31]DR4bit-Out(S1088)
	S1138= PIDReg.Out=>IMMU.PID                                 Premise(F483)
	S1139= IMMU.PID=pid                                         Path(S1093,S1138)
	S1140= PC.Out=>IMMU.IEA                                     Premise(F484)
	S1141= IMMU.IEA=addr+4                                      Path(S1098,S1140)
	S1142= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1139,S1141)
	S1143= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1139,S1141)
	S1144= IMMU.Addr=>IAddrReg.In                               Premise(F485)
	S1145= IAddrReg.In={pid,addr+4}                             Path(S1142,S1144)
	S1146= IMMU.Hit=>IMMUHitReg.In                              Premise(F486)
	S1147= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1143,S1146)
	S1148= PC.Out=>ICache.IEA                                   Premise(F487)
	S1149= ICache.IEA=addr+4                                    Path(S1098,S1148)
	S1150= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1149)
	S1151= ICache.Out=>ICacheReg.In                             Premise(F488)
	S1152= ICache.Hit=>ICacheHitReg.In                          Premise(F489)
	S1153= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1150,S1152)
	S1154= IMMUHitReg.Out=>CU.IMemHit                           Premise(F490)
	S1155= CU.IMemHit=IMMUHit(pid,addr)                         Path(S1102,S1154)
	S1156= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F491)
	S1157= CU.ICacheHit=ICacheHit(addr)                         Path(S1108,S1156)
	S1158= IAddrReg.Out=>IMem.RAddr                             Premise(F492)
	S1159= IMem.RAddr={pid,addr}                                Path(S1099,S1158)
	S1160= IMem.Out={31,rT,rA,rB,1041}                          IMem-Read(S1159,S1064)
	S1161= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1159,S1064)
	S1162= IMem.Out=>IRMux.MemData                              Premise(F493)
	S1163= IRMux.MemData={31,rT,rA,rB,1041}                     Path(S1160,S1162)
	S1164= ICacheReg.Out=>IRMux.CacheData                       Premise(F494)
	S1165= IRMux.CacheData={31,rT,rA,rB,1041}                   Path(S1105,S1164)
	S1166= IRMux.Out={31,rT,rA,rB,1041}                         IRMux-Select(S1163,S1165)
	S1167= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F495)
	S1168= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S1102,S1167)
	S1169= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F496)
	S1170= IRMux.CacheSel=ICacheHit(addr)                       Path(S1108,S1169)
	S1171= IRMux.Out=>IR.In                                     Premise(F497)
	S1172= IR.In={31,rT,rA,rB,1041}                             Path(S1166,S1171)
	S1173= IMem.MEM8WordOut=>ICache.WData                       Premise(F498)
	S1174= ICache.WData=IMemGet8Word({pid,addr})                Path(S1161,S1173)
	S1175= PC.Out=>ICache.IEA                                   Premise(F499)
	S1176= IR.Out0_5=>CU.Op                                     Premise(F500)
	S1177= CU.Op=31                                             Path(S1111,S1176)
	S1178= IR.Out11_15=>GPRegs.RReg1                            Premise(F501)
	S1179= GPRegs.RReg1=rA                                      Path(S1113,S1178)
	S1180= GPRegs.Rdata1=a                                      GPRegs-Read(S1179,S1069)
	S1181= IR.Out16_20=>GPRegs.RReg2                            Premise(F502)
	S1182= GPRegs.RReg2=rB                                      Path(S1114,S1181)
	S1183= GPRegs.Rdata2=b                                      GPRegs-Read(S1182,S1070)
	S1184= IR.Out21_31=>CU.IRFunc                               Premise(F503)
	S1185= CU.IRFunc=1041                                       Path(S1115,S1184)
	S1186= CU.Func=alu_subf                                     CU(S1177,S1185)
	S1187= GPRegs.Rdata1=>A.In                                  Premise(F504)
	S1188= A.In=a                                               Path(S1180,S1187)
	S1189= GPRegs.Rdata2=>B.In                                  Premise(F505)
	S1190= B.In=b                                               Path(S1183,S1189)
	S1191= A.Out=>ALU.A                                         Premise(F506)
	S1192= ALU.A=a                                              Path(S1116,S1191)
	S1193= B.Out=>ALU.B                                         Premise(F507)
	S1194= ALU.B=b                                              Path(S1119,S1193)
	S1195= CU.Func=>ALU.Func                                    Premise(F508)
	S1196= ALU.Func=alu_subf                                    Path(S1186,S1195)
	S1197= ALU.Out=b-a                                          ALU(S1192,S1194)
	S1198= ALU.CMP=Compare0(b-a)                                ALU(S1192,S1194)
	S1199= ALU.OV=OverFlow(b-a)                                 ALU(S1192,S1194)
	S1200= ALU.CA=Carry(b-a)                                    ALU(S1192,S1194)
	S1201= ALU.Out=>ALUOut.In                                   Premise(F509)
	S1202= ALUOut.In=b-a                                        Path(S1197,S1201)
	S1203= ALU.CA=>CAReg.In                                     Premise(F510)
	S1204= CAReg.In=Carry(b-a)                                  Path(S1200,S1203)
	S1205= ALU.CMP=>DataCmb.A                                   Premise(F511)
	S1206= DataCmb.A=Compare0(b-a)                              Path(S1198,S1205)
	S1207= ORGate.Out=>DataCmb.B                                Premise(F512)
	S1208= ALU.OV=>OVReg.In                                     Premise(F513)
	S1209= OVReg.In=OverFlow(b-a)                               Path(S1199,S1208)
	S1210= XER.SOOut=>ORGate.A                                  Premise(F514)
	S1211= ORGate.A=so                                          Path(S1131,S1210)
	S1212= ALU.OV=>ORGate.B                                     Premise(F515)
	S1213= ORGate.B=OverFlow(b-a)                               Path(S1199,S1212)
	S1214= ORGate.Out=so|OverFlow(b-a)                          ORGate(S1211,S1213)
	S1215= DataCmb.B=so|OverFlow(b-a)                           Path(S1214,S1207)
	S1216= DataCmb.Out={Compare0(b-a),so|OverFlow(b-a)}         DataCmb(S1206,S1215)
	S1217= ORGate.Out=>DR1bit.In                                Premise(F516)
	S1218= DR1bit.In=so|OverFlow(b-a)                           Path(S1214,S1217)
	S1219= DataCmb.Out=>DR4bit.In                               Premise(F517)
	S1220= DR4bit.In={Compare0(b-a),so|OverFlow(b-a)}           Path(S1216,S1219)
	S1221= IR.Out6_10=>GPRegs.WReg                              Premise(F518)
	S1222= GPRegs.WReg=rT                                       Path(S1112,S1221)
	S1223= ALUOut.Out=>GPRegs.WData                             Premise(F519)
	S1224= GPRegs.WData=b-a                                     Path(S1122,S1223)
	S1225= DR4bit.Out=>CRRegs.CR0In                             Premise(F520)
	S1226= CRRegs.CR0In={Compare0(b-a),so|OverFlow(b-a)}        Path(S1135,S1225)
	S1227= DR1bit.Out=>XER.SOIn                                 Premise(F521)
	S1228= XER.SOIn=so|OverFlow(b-a)                            Path(S1132,S1227)
	S1229= CAReg.Out=>XER.CAIn                                  Premise(F522)
	S1230= XER.CAIn=Carry(b-a)                                  Path(S1125,S1229)
	S1231= OVReg.Out=>XER.OVIn                                  Premise(F523)
	S1232= XER.OVIn=OverFlow(b-a)                               Path(S1128,S1231)
	S1233= CtrlPIDReg=0                                         Premise(F524)
	S1234= [PIDReg]=pid                                         PIDReg-Hold(S1047,S1233)
	S1235= CtrlIMMU=0                                           Premise(F525)
	S1236= CtrlPC=0                                             Premise(F526)
	S1237= CtrlPCInc=0                                          Premise(F527)
	S1238= PC[CIA]=addr                                         PC-Hold(S1051,S1237)
	S1239= PC[Out]=addr+4                                       PC-Hold(S1052,S1236,S1237)
	S1240= CtrlIAddrReg=0                                       Premise(F528)
	S1241= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1054,S1240)
	S1242= CtrlIMMUHitReg=0                                     Premise(F529)
	S1243= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1056,S1242)
	S1244= CtrlICache=0                                         Premise(F530)
	S1245= ICache[addr]={31,rT,rA,rB,1041}                      ICache-Hold(S1058,S1244)
	S1246= CtrlICacheReg=0                                      Premise(F531)
	S1247= [ICacheReg]={31,rT,rA,rB,1041}                       ICacheReg-Hold(S1060,S1246)
	S1248= CtrlICacheHitReg=0                                   Premise(F532)
	S1249= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1062,S1248)
	S1250= CtrlIMem=0                                           Premise(F533)
	S1251= IMem[{pid,addr}]={31,rT,rA,rB,1041}                  IMem-Hold(S1064,S1250)
	S1252= CtrlIRMux=0                                          Premise(F534)
	S1253= CtrlIR=0                                             Premise(F535)
	S1254= [IR]={31,rT,rA,rB,1041}                              IR-Hold(S1067,S1253)
	S1255= CtrlGPRegs=1                                         Premise(F536)
	S1256= GPRegs[rT]=b-a                                       GPRegs-Write(S1222,S1224,S1255)
	S1257= CtrlA=0                                              Premise(F537)
	S1258= [A]=a                                                A-Hold(S1072,S1257)
	S1259= CtrlB=0                                              Premise(F538)
	S1260= [B]=b                                                B-Hold(S1074,S1259)
	S1261= CtrlALUOut=0                                         Premise(F539)
	S1262= [ALUOut]=b-a                                         ALUOut-Hold(S1076,S1261)
	S1263= CtrlCAReg=0                                          Premise(F540)
	S1264= [CAReg]=Carry(b-a)                                   CAReg-Hold(S1078,S1263)
	S1265= CtrlOVReg=0                                          Premise(F541)
	S1266= [OVReg]=OverFlow(b-a)                                OVReg-Hold(S1080,S1265)
	S1267= CtrlXERSO=1                                          Premise(F542)
	S1268= XER[SO]=so|OverFlow(b-a)                             XER-SO-Write(S1228,S1267)
	S1269= CtrlXEROV=1                                          Premise(F543)
	S1270= XER[OV]=OverFlow(b-a)                                XER-OV-Write(S1232,S1269)
	S1271= CtrlXERCA=1                                          Premise(F544)
	S1272= XER[CA]=Carry(b-a)                                   XER-CA-Write(S1230,S1271)
	S1273= CtrlDR1bit=0                                         Premise(F545)
	S1274= [DR1bit]=so|OverFlow(b-a)                            DR1bit-Hold(S1086,S1273)
	S1275= CtrlDR4bit=0                                         Premise(F546)
	S1276= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}            DR4bit-Hold(S1088,S1275)
	S1277= CtrlCRRegs=0                                         Premise(F547)
	S1278= CtrlCRRegsCR0=1                                      Premise(F548)
	S1279= CRRegs[CR0]={Compare0(b-a),so|OverFlow(b-a)}         CRRegs-CR0-Write(S1226,S1278)
	S1280= CtrlCRRegsW4bitRegs=0                                Premise(F549)
	S1281= CtrlCRRegsW1bitRegs=0                                Premise(F550)

POST	S1234= [PIDReg]=pid                                         PIDReg-Hold(S1047,S1233)
	S1238= PC[CIA]=addr                                         PC-Hold(S1051,S1237)
	S1239= PC[Out]=addr+4                                       PC-Hold(S1052,S1236,S1237)
	S1241= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1054,S1240)
	S1243= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1056,S1242)
	S1245= ICache[addr]={31,rT,rA,rB,1041}                      ICache-Hold(S1058,S1244)
	S1247= [ICacheReg]={31,rT,rA,rB,1041}                       ICacheReg-Hold(S1060,S1246)
	S1249= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1062,S1248)
	S1251= IMem[{pid,addr}]={31,rT,rA,rB,1041}                  IMem-Hold(S1064,S1250)
	S1254= [IR]={31,rT,rA,rB,1041}                              IR-Hold(S1067,S1253)
	S1256= GPRegs[rT]=b-a                                       GPRegs-Write(S1222,S1224,S1255)
	S1258= [A]=a                                                A-Hold(S1072,S1257)
	S1260= [B]=b                                                B-Hold(S1074,S1259)
	S1262= [ALUOut]=b-a                                         ALUOut-Hold(S1076,S1261)
	S1264= [CAReg]=Carry(b-a)                                   CAReg-Hold(S1078,S1263)
	S1266= [OVReg]=OverFlow(b-a)                                OVReg-Hold(S1080,S1265)
	S1268= XER[SO]=so|OverFlow(b-a)                             XER-SO-Write(S1228,S1267)
	S1270= XER[OV]=OverFlow(b-a)                                XER-OV-Write(S1232,S1269)
	S1272= XER[CA]=Carry(b-a)                                   XER-CA-Write(S1230,S1271)
	S1274= [DR1bit]=so|OverFlow(b-a)                            DR1bit-Hold(S1086,S1273)
	S1276= [DR4bit]={Compare0(b-a),so|OverFlow(b-a)}            DR4bit-Hold(S1088,S1275)
	S1279= CRRegs[CR0]={Compare0(b-a),so|OverFlow(b-a)}         CRRegs-CR0-Write(S1226,S1278)

