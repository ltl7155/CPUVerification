
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,1301}                     Premise(F2)
	S3= ICache[addr]={31,rT,rA,rB,1301}                         Premise(F3)
	S4= GPRegs[rA]=a                                            Premise(F4)
	S5= GPRegs[rB]=b                                            Premise(F5)
	S6= XER[CA]=ca                                              Premise(F6)
	S7= XER[SO]=so                                              Premise(F7)

IF	S8= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S9= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S10= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S0)
	S11= PC.Out=addr                                            PC-Out(S1)
	S12= XER.CAOut=ca                                           XER-CA-Out(S6)
	S13= XER.SOOut=so                                           XER-SO-Out(S7)
	S14= PIDReg.Out=>IMMU.PID                                   Premise(F8)
	S15= IMMU.PID=pid                                           Path(S8,S14)
	S16= PC.Out=>IMMU.IEA                                       Premise(F9)
	S17= IMMU.IEA=addr                                          Path(S11,S16)
	S18= IMMU.Addr={pid,addr}                                   IMMU-Search(S15,S17)
	S19= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S15,S17)
	S20= IMMU.Addr=>IAddrReg.In                                 Premise(F10)
	S21= IAddrReg.In={pid,addr}                                 Path(S18,S20)
	S22= IMMU.Hit=>IMMUHitReg.In                                Premise(F11)
	S23= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S19,S22)
	S24= PC.Out=>ICache.IEA                                     Premise(F12)
	S25= ICache.IEA=addr                                        Path(S11,S24)
	S26= ICache.Hit=ICacheHit(addr)                             ICache-Search(S25)
	S27= ICache.Out={31,rT,rA,rB,1301}                          ICache-Search(S25,S3)
	S28= ICache.Out=>ICacheReg.In                               Premise(F13)
	S29= ICacheReg.In={31,rT,rA,rB,1301}                        Path(S27,S28)
	S30= ICache.Hit=>ICacheHitReg.In                            Premise(F14)
	S31= ICacheHitReg.In=ICacheHit(addr)                        Path(S26,S30)
	S32= IMMUHitReg.Out=>CU.IMemHit                             Premise(F15)
	S33= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F16)
	S34= IAddrReg.Out=>IMem.RAddr                               Premise(F17)
	S35= IMem.Out=>IRMux.MemData                                Premise(F18)
	S36= ICacheReg.Out=>IRMux.CacheData                         Premise(F19)
	S37= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F20)
	S38= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F21)
	S39= IRMux.Out=>IR.In                                       Premise(F22)
	S40= IMem.MEM8WordOut=>ICache.WData                         Premise(F23)
	S41= PC.Out=>ICache.IEA                                     Premise(F24)
	S42= IR.Out0_5=>CU.Op                                       Premise(F25)
	S43= IR.Out11_15=>GPRegs.RReg1                              Premise(F26)
	S44= IR.Out16_20=>GPRegs.RReg2                              Premise(F27)
	S45= IR.Out21_31=>CU.IRFunc                                 Premise(F28)
	S46= GPRegs.Rdata1=>A.In                                    Premise(F29)
	S47= GPRegs.Rdata2=>B.In                                    Premise(F30)
	S48= A.Out=>ALU.A                                           Premise(F31)
	S49= B.Out=>ALU.B                                           Premise(F32)
	S50= XER.CAOut=>ALU.CAIn                                    Premise(F33)
	S51= ALU.CAIn=ca                                            Path(S12,S50)
	S52= CU.Func=>ALU.Func                                      Premise(F34)
	S53= ALU.Out=>ALUOut.In                                     Premise(F35)
	S54= ALU.CA=>CAReg.In                                       Premise(F36)
	S55= ALU.CMP=>DataCmb.A                                     Premise(F37)
	S56= ORGate.Out=>DataCmb.B                                  Premise(F38)
	S57= ALU.OV=>OVReg.In                                       Premise(F39)
	S58= XER.SOOut=>ORGate.A                                    Premise(F40)
	S59= ORGate.A=so                                            Path(S13,S58)
	S60= ALU.OV=>ORGate.B                                       Premise(F41)
	S61= ORGate.Out=>DR1bit.In                                  Premise(F42)
	S62= DataCmb.Out=>DR4bit.In                                 Premise(F43)
	S63= IR.Out6_10=>GPRegs.WReg                                Premise(F44)
	S64= ALUOut.Out=>GPRegs.WData                               Premise(F45)
	S65= DR4bit.Out=>CRRegs.CR0In                               Premise(F46)
	S66= DR1bit.Out=>XER.SOIn                                   Premise(F47)
	S67= CAReg.Out=>XER.CAIn                                    Premise(F48)
	S68= OVReg.Out=>XER.OVIn                                    Premise(F49)
	S69= CtrlPIDReg=0                                           Premise(F50)
	S70= [PIDReg]=pid                                           PIDReg-Hold(S0,S69)
	S71= CtrlIMMU=0                                             Premise(F51)
	S72= CtrlPC=0                                               Premise(F52)
	S73= CtrlPCInc=0                                            Premise(F53)
	S74= PC[Out]=addr                                           PC-Hold(S1,S72,S73)
	S75= CtrlIAddrReg=1                                         Premise(F54)
	S76= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S21,S75)
	S77= CtrlIMMUHitReg=1                                       Premise(F55)
	S78= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S23,S77)
	S79= CtrlICache=0                                           Premise(F56)
	S80= ICache[addr]={31,rT,rA,rB,1301}                        ICache-Hold(S3,S79)
	S81= CtrlICacheReg=1                                        Premise(F57)
	S82= [ICacheReg]={31,rT,rA,rB,1301}                         ICacheReg-Write(S29,S81)
	S83= CtrlICacheHitReg=1                                     Premise(F58)
	S84= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S31,S83)
	S85= CtrlIMem=0                                             Premise(F59)
	S86= IMem[{pid,addr}]={31,rT,rA,rB,1301}                    IMem-Hold(S2,S85)
	S87= CtrlIRMux=0                                            Premise(F60)
	S88= CtrlIR=0                                               Premise(F61)
	S89= CtrlGPRegs=0                                           Premise(F62)
	S90= GPRegs[rA]=a                                           GPRegs-Hold(S4,S89)
	S91= GPRegs[rB]=b                                           GPRegs-Hold(S5,S89)
	S92= CtrlA=0                                                Premise(F63)
	S93= CtrlB=0                                                Premise(F64)
	S94= CtrlXERSO=0                                            Premise(F65)
	S95= XER[SO]=so                                             XER-SO-Hold(S7,S94)
	S96= CtrlXEROV=0                                            Premise(F66)
	S97= CtrlXERCA=0                                            Premise(F67)
	S98= XER[CA]=ca                                             XER-CA-Hold(S6,S97)
	S99= CtrlALUOut=0                                           Premise(F68)
	S100= CtrlCAReg=0                                           Premise(F69)
	S101= CtrlOVReg=0                                           Premise(F70)
	S102= CtrlDR1bit=0                                          Premise(F71)
	S103= CtrlDR4bit=0                                          Premise(F72)
	S104= CtrlCRRegs=0                                          Premise(F73)
	S105= CtrlCRRegsCR0=0                                       Premise(F74)
	S106= CtrlCRRegsW4bitRegs=0                                 Premise(F75)
	S107= CtrlCRRegsW1bitRegs=0                                 Premise(F76)

IMMU	S108= PIDReg.Out=pid                                        PIDReg-Out(S70)
	S109= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S70)
	S110= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S70)
	S111= PC.Out=addr                                           PC-Out(S74)
	S112= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S76)
	S113= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S76)
	S114= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S76)
	S115= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S78)
	S116= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S78)
	S117= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S78)
	S118= ICacheReg.Out={31,rT,rA,rB,1301}                      ICacheReg-Out(S82)
	S119= ICacheReg.Out26_31={31,rT,rA,rB,1301}[26:31]          ICacheReg-Out(S82)
	S120= ICacheReg.Out30_31={31,rT,rA,rB,1301}[30:31]          ICacheReg-Out(S82)
	S121= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S84)
	S122= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S84)
	S123= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S84)
	S124= XER.SOOut=so                                          XER-SO-Out(S95)
	S125= XER.CAOut=ca                                          XER-CA-Out(S98)
	S126= PIDReg.Out=>IMMU.PID                                  Premise(F77)
	S127= IMMU.PID=pid                                          Path(S108,S126)
	S128= PC.Out=>IMMU.IEA                                      Premise(F78)
	S129= IMMU.IEA=addr                                         Path(S111,S128)
	S130= IMMU.Addr={pid,addr}                                  IMMU-Search(S127,S129)
	S131= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S127,S129)
	S132= IMMU.Addr=>IAddrReg.In                                Premise(F79)
	S133= IAddrReg.In={pid,addr}                                Path(S130,S132)
	S134= IMMU.Hit=>IMMUHitReg.In                               Premise(F80)
	S135= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S131,S134)
	S136= PC.Out=>ICache.IEA                                    Premise(F81)
	S137= ICache.IEA=addr                                       Path(S111,S136)
	S138= ICache.Hit=ICacheHit(addr)                            ICache-Search(S137)
	S139= ICache.Out={31,rT,rA,rB,1301}                         ICache-Search(S137,S80)
	S140= ICache.Out=>ICacheReg.In                              Premise(F82)
	S141= ICacheReg.In={31,rT,rA,rB,1301}                       Path(S139,S140)
	S142= ICache.Hit=>ICacheHitReg.In                           Premise(F83)
	S143= ICacheHitReg.In=ICacheHit(addr)                       Path(S138,S142)
	S144= IMMUHitReg.Out=>CU.IMemHit                            Premise(F84)
	S145= CU.IMemHit=IMMUHit(pid,addr)                          Path(S115,S144)
	S146= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F85)
	S147= CU.ICacheHit=ICacheHit(addr)                          Path(S121,S146)
	S148= IAddrReg.Out=>IMem.RAddr                              Premise(F86)
	S149= IMem.RAddr={pid,addr}                                 Path(S112,S148)
	S150= IMem.Out={31,rT,rA,rB,1301}                           IMem-Read(S149,S86)
	S151= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S149,S86)
	S152= IMem.Out=>IRMux.MemData                               Premise(F87)
	S153= IRMux.MemData={31,rT,rA,rB,1301}                      Path(S150,S152)
	S154= ICacheReg.Out=>IRMux.CacheData                        Premise(F88)
	S155= IRMux.CacheData={31,rT,rA,rB,1301}                    Path(S118,S154)
	S156= IRMux.Out={31,rT,rA,rB,1301}                          IRMux-Select(S153,S155)
	S157= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F89)
	S158= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S115,S157)
	S159= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F90)
	S160= IRMux.CacheSel=ICacheHit(addr)                        Path(S121,S159)
	S161= IRMux.Out=>IR.In                                      Premise(F91)
	S162= IR.In={31,rT,rA,rB,1301}                              Path(S156,S161)
	S163= IMem.MEM8WordOut=>ICache.WData                        Premise(F92)
	S164= ICache.WData=IMemGet8Word({pid,addr})                 Path(S151,S163)
	S165= PC.Out=>ICache.IEA                                    Premise(F93)
	S166= IR.Out0_5=>CU.Op                                      Premise(F94)
	S167= IR.Out11_15=>GPRegs.RReg1                             Premise(F95)
	S168= IR.Out16_20=>GPRegs.RReg2                             Premise(F96)
	S169= IR.Out21_31=>CU.IRFunc                                Premise(F97)
	S170= GPRegs.Rdata1=>A.In                                   Premise(F98)
	S171= GPRegs.Rdata2=>B.In                                   Premise(F99)
	S172= A.Out=>ALU.A                                          Premise(F100)
	S173= B.Out=>ALU.B                                          Premise(F101)
	S174= XER.CAOut=>ALU.CAIn                                   Premise(F102)
	S175= ALU.CAIn=ca                                           Path(S125,S174)
	S176= CU.Func=>ALU.Func                                     Premise(F103)
	S177= ALU.Out=>ALUOut.In                                    Premise(F104)
	S178= ALU.CA=>CAReg.In                                      Premise(F105)
	S179= ALU.CMP=>DataCmb.A                                    Premise(F106)
	S180= ORGate.Out=>DataCmb.B                                 Premise(F107)
	S181= ALU.OV=>OVReg.In                                      Premise(F108)
	S182= XER.SOOut=>ORGate.A                                   Premise(F109)
	S183= ORGate.A=so                                           Path(S124,S182)
	S184= ALU.OV=>ORGate.B                                      Premise(F110)
	S185= ORGate.Out=>DR1bit.In                                 Premise(F111)
	S186= DataCmb.Out=>DR4bit.In                                Premise(F112)
	S187= IR.Out6_10=>GPRegs.WReg                               Premise(F113)
	S188= ALUOut.Out=>GPRegs.WData                              Premise(F114)
	S189= DR4bit.Out=>CRRegs.CR0In                              Premise(F115)
	S190= DR1bit.Out=>XER.SOIn                                  Premise(F116)
	S191= CAReg.Out=>XER.CAIn                                   Premise(F117)
	S192= OVReg.Out=>XER.OVIn                                   Premise(F118)
	S193= CtrlPIDReg=0                                          Premise(F119)
	S194= [PIDReg]=pid                                          PIDReg-Hold(S70,S193)
	S195= CtrlIMMU=0                                            Premise(F120)
	S196= CtrlPC=0                                              Premise(F121)
	S197= CtrlPCInc=1                                           Premise(F122)
	S198= PC[Out]=addr+4                                        PC-Inc(S74,S196,S197)
	S199= PC[CIA]=addr                                          PC-Inc(S74,S196,S197)
	S200= CtrlIAddrReg=0                                        Premise(F123)
	S201= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S76,S200)
	S202= CtrlIMMUHitReg=0                                      Premise(F124)
	S203= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S78,S202)
	S204= CtrlICache=0                                          Premise(F125)
	S205= ICache[addr]={31,rT,rA,rB,1301}                       ICache-Hold(S80,S204)
	S206= CtrlICacheReg=0                                       Premise(F126)
	S207= [ICacheReg]={31,rT,rA,rB,1301}                        ICacheReg-Hold(S82,S206)
	S208= CtrlICacheHitReg=0                                    Premise(F127)
	S209= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S84,S208)
	S210= CtrlIMem=0                                            Premise(F128)
	S211= IMem[{pid,addr}]={31,rT,rA,rB,1301}                   IMem-Hold(S86,S210)
	S212= CtrlIRMux=0                                           Premise(F129)
	S213= CtrlIR=1                                              Premise(F130)
	S214= [IR]={31,rT,rA,rB,1301}                               IR-Write(S162,S213)
	S215= CtrlGPRegs=0                                          Premise(F131)
	S216= GPRegs[rA]=a                                          GPRegs-Hold(S90,S215)
	S217= GPRegs[rB]=b                                          GPRegs-Hold(S91,S215)
	S218= CtrlA=0                                               Premise(F132)
	S219= CtrlB=0                                               Premise(F133)
	S220= CtrlXERSO=0                                           Premise(F134)
	S221= XER[SO]=so                                            XER-SO-Hold(S95,S220)
	S222= CtrlXEROV=0                                           Premise(F135)
	S223= CtrlXERCA=0                                           Premise(F136)
	S224= XER[CA]=ca                                            XER-CA-Hold(S98,S223)
	S225= CtrlALUOut=0                                          Premise(F137)
	S226= CtrlCAReg=0                                           Premise(F138)
	S227= CtrlOVReg=0                                           Premise(F139)
	S228= CtrlDR1bit=0                                          Premise(F140)
	S229= CtrlDR4bit=0                                          Premise(F141)
	S230= CtrlCRRegs=0                                          Premise(F142)
	S231= CtrlCRRegsCR0=0                                       Premise(F143)
	S232= CtrlCRRegsW4bitRegs=0                                 Premise(F144)
	S233= CtrlCRRegsW1bitRegs=0                                 Premise(F145)

ID	S234= PIDReg.Out=pid                                        PIDReg-Out(S194)
	S235= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S194)
	S236= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S194)
	S237= PC.Out=addr+4                                         PC-Out(S198)
	S238= PC.CIA=addr                                           PC-Out(S199)
	S239= PC.CIA31_28=addr[31:28]                               PC-Out(S199)
	S240= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S201)
	S241= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S201)
	S242= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S201)
	S243= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S203)
	S244= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S203)
	S245= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S203)
	S246= ICacheReg.Out={31,rT,rA,rB,1301}                      ICacheReg-Out(S207)
	S247= ICacheReg.Out26_31={31,rT,rA,rB,1301}[26:31]          ICacheReg-Out(S207)
	S248= ICacheReg.Out30_31={31,rT,rA,rB,1301}[30:31]          ICacheReg-Out(S207)
	S249= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S209)
	S250= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S209)
	S251= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S209)
	S252= IR.Out0_5=31                                          IR-Out(S214)
	S253= IR.Out6_10=rT                                         IR-Out(S214)
	S254= IR.Out11_15=rA                                        IR-Out(S214)
	S255= IR.Out16_20=rB                                        IR-Out(S214)
	S256= IR.Out21_31=1301                                      IR-Out(S214)
	S257= XER.SOOut=so                                          XER-SO-Out(S221)
	S258= XER.CAOut=ca                                          XER-CA-Out(S224)
	S259= PIDReg.Out=>IMMU.PID                                  Premise(F146)
	S260= IMMU.PID=pid                                          Path(S234,S259)
	S261= PC.Out=>IMMU.IEA                                      Premise(F147)
	S262= IMMU.IEA=addr+4                                       Path(S237,S261)
	S263= IMMU.Addr={pid,addr+4}                                IMMU-Search(S260,S262)
	S264= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S260,S262)
	S265= IMMU.Addr=>IAddrReg.In                                Premise(F148)
	S266= IAddrReg.In={pid,addr+4}                              Path(S263,S265)
	S267= IMMU.Hit=>IMMUHitReg.In                               Premise(F149)
	S268= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S264,S267)
	S269= PC.Out=>ICache.IEA                                    Premise(F150)
	S270= ICache.IEA=addr+4                                     Path(S237,S269)
	S271= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S270)
	S272= ICache.Out=>ICacheReg.In                              Premise(F151)
	S273= ICache.Hit=>ICacheHitReg.In                           Premise(F152)
	S274= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S271,S273)
	S275= IMMUHitReg.Out=>CU.IMemHit                            Premise(F153)
	S276= CU.IMemHit=IMMUHit(pid,addr)                          Path(S243,S275)
	S277= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F154)
	S278= CU.ICacheHit=ICacheHit(addr)                          Path(S249,S277)
	S279= IAddrReg.Out=>IMem.RAddr                              Premise(F155)
	S280= IMem.RAddr={pid,addr}                                 Path(S240,S279)
	S281= IMem.Out={31,rT,rA,rB,1301}                           IMem-Read(S280,S211)
	S282= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S280,S211)
	S283= IMem.Out=>IRMux.MemData                               Premise(F156)
	S284= IRMux.MemData={31,rT,rA,rB,1301}                      Path(S281,S283)
	S285= ICacheReg.Out=>IRMux.CacheData                        Premise(F157)
	S286= IRMux.CacheData={31,rT,rA,rB,1301}                    Path(S246,S285)
	S287= IRMux.Out={31,rT,rA,rB,1301}                          IRMux-Select(S284,S286)
	S288= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F158)
	S289= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S243,S288)
	S290= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F159)
	S291= IRMux.CacheSel=ICacheHit(addr)                        Path(S249,S290)
	S292= IRMux.Out=>IR.In                                      Premise(F160)
	S293= IR.In={31,rT,rA,rB,1301}                              Path(S287,S292)
	S294= IMem.MEM8WordOut=>ICache.WData                        Premise(F161)
	S295= ICache.WData=IMemGet8Word({pid,addr})                 Path(S282,S294)
	S296= PC.Out=>ICache.IEA                                    Premise(F162)
	S297= IR.Out0_5=>CU.Op                                      Premise(F163)
	S298= CU.Op=31                                              Path(S252,S297)
	S299= IR.Out11_15=>GPRegs.RReg1                             Premise(F164)
	S300= GPRegs.RReg1=rA                                       Path(S254,S299)
	S301= GPRegs.Rdata1=a                                       GPRegs-Read(S300,S216)
	S302= IR.Out16_20=>GPRegs.RReg2                             Premise(F165)
	S303= GPRegs.RReg2=rB                                       Path(S255,S302)
	S304= GPRegs.Rdata2=b                                       GPRegs-Read(S303,S217)
	S305= IR.Out21_31=>CU.IRFunc                                Premise(F166)
	S306= CU.IRFunc=1301                                        Path(S256,S305)
	S307= CU.Func=alu_adde                                      CU(S298,S306)
	S308= GPRegs.Rdata1=>A.In                                   Premise(F167)
	S309= A.In=a                                                Path(S301,S308)
	S310= GPRegs.Rdata2=>B.In                                   Premise(F168)
	S311= B.In=b                                                Path(S304,S310)
	S312= A.Out=>ALU.A                                          Premise(F169)
	S313= B.Out=>ALU.B                                          Premise(F170)
	S314= XER.CAOut=>ALU.CAIn                                   Premise(F171)
	S315= ALU.CAIn=ca                                           Path(S258,S314)
	S316= CU.Func=>ALU.Func                                     Premise(F172)
	S317= ALU.Func=alu_adde                                     Path(S307,S316)
	S318= ALU.Out=>ALUOut.In                                    Premise(F173)
	S319= ALU.CA=>CAReg.In                                      Premise(F174)
	S320= ALU.CMP=>DataCmb.A                                    Premise(F175)
	S321= ORGate.Out=>DataCmb.B                                 Premise(F176)
	S322= ALU.OV=>OVReg.In                                      Premise(F177)
	S323= XER.SOOut=>ORGate.A                                   Premise(F178)
	S324= ORGate.A=so                                           Path(S257,S323)
	S325= ALU.OV=>ORGate.B                                      Premise(F179)
	S326= ORGate.Out=>DR1bit.In                                 Premise(F180)
	S327= DataCmb.Out=>DR4bit.In                                Premise(F181)
	S328= IR.Out6_10=>GPRegs.WReg                               Premise(F182)
	S329= GPRegs.WReg=rT                                        Path(S253,S328)
	S330= ALUOut.Out=>GPRegs.WData                              Premise(F183)
	S331= DR4bit.Out=>CRRegs.CR0In                              Premise(F184)
	S332= DR1bit.Out=>XER.SOIn                                  Premise(F185)
	S333= CAReg.Out=>XER.CAIn                                   Premise(F186)
	S334= OVReg.Out=>XER.OVIn                                   Premise(F187)
	S335= CtrlPIDReg=0                                          Premise(F188)
	S336= [PIDReg]=pid                                          PIDReg-Hold(S194,S335)
	S337= CtrlIMMU=0                                            Premise(F189)
	S338= CtrlPC=0                                              Premise(F190)
	S339= CtrlPCInc=0                                           Premise(F191)
	S340= PC[CIA]=addr                                          PC-Hold(S199,S339)
	S341= PC[Out]=addr+4                                        PC-Hold(S198,S338,S339)
	S342= CtrlIAddrReg=0                                        Premise(F192)
	S343= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S201,S342)
	S344= CtrlIMMUHitReg=0                                      Premise(F193)
	S345= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S203,S344)
	S346= CtrlICache=0                                          Premise(F194)
	S347= ICache[addr]={31,rT,rA,rB,1301}                       ICache-Hold(S205,S346)
	S348= CtrlICacheReg=0                                       Premise(F195)
	S349= [ICacheReg]={31,rT,rA,rB,1301}                        ICacheReg-Hold(S207,S348)
	S350= CtrlICacheHitReg=0                                    Premise(F196)
	S351= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S209,S350)
	S352= CtrlIMem=0                                            Premise(F197)
	S353= IMem[{pid,addr}]={31,rT,rA,rB,1301}                   IMem-Hold(S211,S352)
	S354= CtrlIRMux=0                                           Premise(F198)
	S355= CtrlIR=0                                              Premise(F199)
	S356= [IR]={31,rT,rA,rB,1301}                               IR-Hold(S214,S355)
	S357= CtrlGPRegs=0                                          Premise(F200)
	S358= GPRegs[rA]=a                                          GPRegs-Hold(S216,S357)
	S359= GPRegs[rB]=b                                          GPRegs-Hold(S217,S357)
	S360= CtrlA=1                                               Premise(F201)
	S361= [A]=a                                                 A-Write(S309,S360)
	S362= CtrlB=1                                               Premise(F202)
	S363= [B]=b                                                 B-Write(S311,S362)
	S364= CtrlXERSO=0                                           Premise(F203)
	S365= XER[SO]=so                                            XER-SO-Hold(S221,S364)
	S366= CtrlXEROV=0                                           Premise(F204)
	S367= CtrlXERCA=0                                           Premise(F205)
	S368= XER[CA]=ca                                            XER-CA-Hold(S224,S367)
	S369= CtrlALUOut=0                                          Premise(F206)
	S370= CtrlCAReg=0                                           Premise(F207)
	S371= CtrlOVReg=0                                           Premise(F208)
	S372= CtrlDR1bit=0                                          Premise(F209)
	S373= CtrlDR4bit=0                                          Premise(F210)
	S374= CtrlCRRegs=0                                          Premise(F211)
	S375= CtrlCRRegsCR0=0                                       Premise(F212)
	S376= CtrlCRRegsW4bitRegs=0                                 Premise(F213)
	S377= CtrlCRRegsW1bitRegs=0                                 Premise(F214)

EX	S378= PIDReg.Out=pid                                        PIDReg-Out(S336)
	S379= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S336)
	S380= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S336)
	S381= PC.CIA=addr                                           PC-Out(S340)
	S382= PC.CIA31_28=addr[31:28]                               PC-Out(S340)
	S383= PC.Out=addr+4                                         PC-Out(S341)
	S384= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S343)
	S385= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S343)
	S386= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S343)
	S387= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S345)
	S388= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S345)
	S389= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S345)
	S390= ICacheReg.Out={31,rT,rA,rB,1301}                      ICacheReg-Out(S349)
	S391= ICacheReg.Out26_31={31,rT,rA,rB,1301}[26:31]          ICacheReg-Out(S349)
	S392= ICacheReg.Out30_31={31,rT,rA,rB,1301}[30:31]          ICacheReg-Out(S349)
	S393= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S351)
	S394= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S351)
	S395= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S351)
	S396= IR.Out0_5=31                                          IR-Out(S356)
	S397= IR.Out6_10=rT                                         IR-Out(S356)
	S398= IR.Out11_15=rA                                        IR-Out(S356)
	S399= IR.Out16_20=rB                                        IR-Out(S356)
	S400= IR.Out21_31=1301                                      IR-Out(S356)
	S401= A.Out=a                                               A-Out(S361)
	S402= A.Out26_31=a[26:31]                                   A-Out(S361)
	S403= A.Out30_31=a[30:31]                                   A-Out(S361)
	S404= B.Out=b                                               B-Out(S363)
	S405= B.Out26_31=b[26:31]                                   B-Out(S363)
	S406= B.Out30_31=b[30:31]                                   B-Out(S363)
	S407= XER.SOOut=so                                          XER-SO-Out(S365)
	S408= XER.CAOut=ca                                          XER-CA-Out(S368)
	S409= PIDReg.Out=>IMMU.PID                                  Premise(F215)
	S410= IMMU.PID=pid                                          Path(S378,S409)
	S411= PC.Out=>IMMU.IEA                                      Premise(F216)
	S412= IMMU.IEA=addr+4                                       Path(S383,S411)
	S413= IMMU.Addr={pid,addr+4}                                IMMU-Search(S410,S412)
	S414= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S410,S412)
	S415= IMMU.Addr=>IAddrReg.In                                Premise(F217)
	S416= IAddrReg.In={pid,addr+4}                              Path(S413,S415)
	S417= IMMU.Hit=>IMMUHitReg.In                               Premise(F218)
	S418= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S414,S417)
	S419= PC.Out=>ICache.IEA                                    Premise(F219)
	S420= ICache.IEA=addr+4                                     Path(S383,S419)
	S421= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S420)
	S422= ICache.Out=>ICacheReg.In                              Premise(F220)
	S423= ICache.Hit=>ICacheHitReg.In                           Premise(F221)
	S424= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S421,S423)
	S425= IMMUHitReg.Out=>CU.IMemHit                            Premise(F222)
	S426= CU.IMemHit=IMMUHit(pid,addr)                          Path(S387,S425)
	S427= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F223)
	S428= CU.ICacheHit=ICacheHit(addr)                          Path(S393,S427)
	S429= IAddrReg.Out=>IMem.RAddr                              Premise(F224)
	S430= IMem.RAddr={pid,addr}                                 Path(S384,S429)
	S431= IMem.Out={31,rT,rA,rB,1301}                           IMem-Read(S430,S353)
	S432= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S430,S353)
	S433= IMem.Out=>IRMux.MemData                               Premise(F225)
	S434= IRMux.MemData={31,rT,rA,rB,1301}                      Path(S431,S433)
	S435= ICacheReg.Out=>IRMux.CacheData                        Premise(F226)
	S436= IRMux.CacheData={31,rT,rA,rB,1301}                    Path(S390,S435)
	S437= IRMux.Out={31,rT,rA,rB,1301}                          IRMux-Select(S434,S436)
	S438= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F227)
	S439= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S387,S438)
	S440= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F228)
	S441= IRMux.CacheSel=ICacheHit(addr)                        Path(S393,S440)
	S442= IRMux.Out=>IR.In                                      Premise(F229)
	S443= IR.In={31,rT,rA,rB,1301}                              Path(S437,S442)
	S444= IMem.MEM8WordOut=>ICache.WData                        Premise(F230)
	S445= ICache.WData=IMemGet8Word({pid,addr})                 Path(S432,S444)
	S446= PC.Out=>ICache.IEA                                    Premise(F231)
	S447= IR.Out0_5=>CU.Op                                      Premise(F232)
	S448= CU.Op=31                                              Path(S396,S447)
	S449= IR.Out11_15=>GPRegs.RReg1                             Premise(F233)
	S450= GPRegs.RReg1=rA                                       Path(S398,S449)
	S451= GPRegs.Rdata1=a                                       GPRegs-Read(S450,S358)
	S452= IR.Out16_20=>GPRegs.RReg2                             Premise(F234)
	S453= GPRegs.RReg2=rB                                       Path(S399,S452)
	S454= GPRegs.Rdata2=b                                       GPRegs-Read(S453,S359)
	S455= IR.Out21_31=>CU.IRFunc                                Premise(F235)
	S456= CU.IRFunc=1301                                        Path(S400,S455)
	S457= CU.Func=alu_adde                                      CU(S448,S456)
	S458= GPRegs.Rdata1=>A.In                                   Premise(F236)
	S459= A.In=a                                                Path(S451,S458)
	S460= GPRegs.Rdata2=>B.In                                   Premise(F237)
	S461= B.In=b                                                Path(S454,S460)
	S462= A.Out=>ALU.A                                          Premise(F238)
	S463= ALU.A=a                                               Path(S401,S462)
	S464= B.Out=>ALU.B                                          Premise(F239)
	S465= ALU.B=b                                               Path(S404,S464)
	S466= XER.CAOut=>ALU.CAIn                                   Premise(F240)
	S467= ALU.CAIn=ca                                           Path(S408,S466)
	S468= CU.Func=>ALU.Func                                     Premise(F241)
	S469= ALU.Func=alu_adde                                     Path(S457,S468)
	S470= ALU.Out=a+b+ca                                        ALU(S463,S465,S467)
	S471= ALU.CMP=Compare0(a+b+ca)                              ALU(S463,S465,S467)
	S472= ALU.OV=OverFlow(a+b+ca)                               ALU(S463,S465,S467)
	S473= ALU.CA=Carry(a+b+ca)                                  ALU(S463,S465,S467)
	S474= ALU.Out=>ALUOut.In                                    Premise(F242)
	S475= ALUOut.In=a+b+ca                                      Path(S470,S474)
	S476= ALU.CA=>CAReg.In                                      Premise(F243)
	S477= CAReg.In=Carry(a+b+ca)                                Path(S473,S476)
	S478= ALU.CMP=>DataCmb.A                                    Premise(F244)
	S479= DataCmb.A=Compare0(a+b+ca)                            Path(S471,S478)
	S480= ORGate.Out=>DataCmb.B                                 Premise(F245)
	S481= ALU.OV=>OVReg.In                                      Premise(F246)
	S482= OVReg.In=OverFlow(a+b+ca)                             Path(S472,S481)
	S483= XER.SOOut=>ORGate.A                                   Premise(F247)
	S484= ORGate.A=so                                           Path(S407,S483)
	S485= ALU.OV=>ORGate.B                                      Premise(F248)
	S486= ORGate.B=OverFlow(a+b+ca)                             Path(S472,S485)
	S487= ORGate.Out=so|OverFlow(a+b+ca)                        ORGate(S484,S486)
	S488= DataCmb.B=so|OverFlow(a+b+ca)                         Path(S487,S480)
	S489= DataCmb.Out={Compare0(a+b+ca),so|OverFlow(a+b+ca)}    DataCmb(S479,S488)
	S490= ORGate.Out=>DR1bit.In                                 Premise(F249)
	S491= DR1bit.In=so|OverFlow(a+b+ca)                         Path(S487,S490)
	S492= DataCmb.Out=>DR4bit.In                                Premise(F250)
	S493= DR4bit.In={Compare0(a+b+ca),so|OverFlow(a+b+ca)}      Path(S489,S492)
	S494= IR.Out6_10=>GPRegs.WReg                               Premise(F251)
	S495= GPRegs.WReg=rT                                        Path(S397,S494)
	S496= ALUOut.Out=>GPRegs.WData                              Premise(F252)
	S497= DR4bit.Out=>CRRegs.CR0In                              Premise(F253)
	S498= DR1bit.Out=>XER.SOIn                                  Premise(F254)
	S499= CAReg.Out=>XER.CAIn                                   Premise(F255)
	S500= OVReg.Out=>XER.OVIn                                   Premise(F256)
	S501= CtrlPIDReg=0                                          Premise(F257)
	S502= [PIDReg]=pid                                          PIDReg-Hold(S336,S501)
	S503= CtrlIMMU=0                                            Premise(F258)
	S504= CtrlPC=0                                              Premise(F259)
	S505= CtrlPCInc=0                                           Premise(F260)
	S506= PC[CIA]=addr                                          PC-Hold(S340,S505)
	S507= PC[Out]=addr+4                                        PC-Hold(S341,S504,S505)
	S508= CtrlIAddrReg=0                                        Premise(F261)
	S509= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S343,S508)
	S510= CtrlIMMUHitReg=0                                      Premise(F262)
	S511= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S345,S510)
	S512= CtrlICache=0                                          Premise(F263)
	S513= ICache[addr]={31,rT,rA,rB,1301}                       ICache-Hold(S347,S512)
	S514= CtrlICacheReg=0                                       Premise(F264)
	S515= [ICacheReg]={31,rT,rA,rB,1301}                        ICacheReg-Hold(S349,S514)
	S516= CtrlICacheHitReg=0                                    Premise(F265)
	S517= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S351,S516)
	S518= CtrlIMem=0                                            Premise(F266)
	S519= IMem[{pid,addr}]={31,rT,rA,rB,1301}                   IMem-Hold(S353,S518)
	S520= CtrlIRMux=0                                           Premise(F267)
	S521= CtrlIR=0                                              Premise(F268)
	S522= [IR]={31,rT,rA,rB,1301}                               IR-Hold(S356,S521)
	S523= CtrlGPRegs=0                                          Premise(F269)
	S524= GPRegs[rA]=a                                          GPRegs-Hold(S358,S523)
	S525= GPRegs[rB]=b                                          GPRegs-Hold(S359,S523)
	S526= CtrlA=0                                               Premise(F270)
	S527= [A]=a                                                 A-Hold(S361,S526)
	S528= CtrlB=0                                               Premise(F271)
	S529= [B]=b                                                 B-Hold(S363,S528)
	S530= CtrlXERSO=0                                           Premise(F272)
	S531= XER[SO]=so                                            XER-SO-Hold(S365,S530)
	S532= CtrlXEROV=0                                           Premise(F273)
	S533= CtrlXERCA=0                                           Premise(F274)
	S534= XER[CA]=ca                                            XER-CA-Hold(S368,S533)
	S535= CtrlALUOut=1                                          Premise(F275)
	S536= [ALUOut]=a+b+ca                                       ALUOut-Write(S475,S535)
	S537= CtrlCAReg=1                                           Premise(F276)
	S538= [CAReg]=Carry(a+b+ca)                                 CAReg-Write(S477,S537)
	S539= CtrlOVReg=1                                           Premise(F277)
	S540= [OVReg]=OverFlow(a+b+ca)                              OVReg-Write(S482,S539)
	S541= CtrlDR1bit=1                                          Premise(F278)
	S542= [DR1bit]=so|OverFlow(a+b+ca)                          DR1bit-Write(S491,S541)
	S543= CtrlDR4bit=1                                          Premise(F279)
	S544= [DR4bit]={Compare0(a+b+ca),so|OverFlow(a+b+ca)}       DR4bit-Write(S493,S543)
	S545= CtrlCRRegs=0                                          Premise(F280)
	S546= CtrlCRRegsCR0=0                                       Premise(F281)
	S547= CtrlCRRegsW4bitRegs=0                                 Premise(F282)
	S548= CtrlCRRegsW1bitRegs=0                                 Premise(F283)

MEM	S549= PIDReg.Out=pid                                        PIDReg-Out(S502)
	S550= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S502)
	S551= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S502)
	S552= PC.CIA=addr                                           PC-Out(S506)
	S553= PC.CIA31_28=addr[31:28]                               PC-Out(S506)
	S554= PC.Out=addr+4                                         PC-Out(S507)
	S555= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S509)
	S556= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S509)
	S557= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S509)
	S558= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S511)
	S559= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S511)
	S560= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S511)
	S561= ICacheReg.Out={31,rT,rA,rB,1301}                      ICacheReg-Out(S515)
	S562= ICacheReg.Out26_31={31,rT,rA,rB,1301}[26:31]          ICacheReg-Out(S515)
	S563= ICacheReg.Out30_31={31,rT,rA,rB,1301}[30:31]          ICacheReg-Out(S515)
	S564= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S517)
	S565= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S517)
	S566= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S517)
	S567= IR.Out0_5=31                                          IR-Out(S522)
	S568= IR.Out6_10=rT                                         IR-Out(S522)
	S569= IR.Out11_15=rA                                        IR-Out(S522)
	S570= IR.Out16_20=rB                                        IR-Out(S522)
	S571= IR.Out21_31=1301                                      IR-Out(S522)
	S572= A.Out=a                                               A-Out(S527)
	S573= A.Out26_31=a[26:31]                                   A-Out(S527)
	S574= A.Out30_31=a[30:31]                                   A-Out(S527)
	S575= B.Out=b                                               B-Out(S529)
	S576= B.Out26_31=b[26:31]                                   B-Out(S529)
	S577= B.Out30_31=b[30:31]                                   B-Out(S529)
	S578= XER.SOOut=so                                          XER-SO-Out(S531)
	S579= XER.CAOut=ca                                          XER-CA-Out(S534)
	S580= ALUOut.Out=a+b+ca                                     ALUOut-Out(S536)
	S581= ALUOut.Out26_31=a+b+ca[26:31]                         ALUOut-Out(S536)
	S582= ALUOut.Out30_31=a+b+ca[30:31]                         ALUOut-Out(S536)
	S583= CAReg.Out=Carry(a+b+ca)                               CAReg-Out(S538)
	S584= CAReg.Out26_31=Carry(a+b+ca)[26:31]                   CAReg-Out(S538)
	S585= CAReg.Out30_31=Carry(a+b+ca)[30:31]                   CAReg-Out(S538)
	S586= OVReg.Out=OverFlow(a+b+ca)                            OVReg-Out(S540)
	S587= OVReg.Out26_31=OverFlow(a+b+ca)[26:31]                OVReg-Out(S540)
	S588= OVReg.Out30_31=OverFlow(a+b+ca)[30:31]                OVReg-Out(S540)
	S589= DR1bit.Out=so|OverFlow(a+b+ca)                        DR1bit-Out(S542)
	S590= DR1bit.Out26_31=so|OverFlow(a+b+ca)[26:31]            DR1bit-Out(S542)
	S591= DR1bit.Out30_31=so|OverFlow(a+b+ca)[30:31]            DR1bit-Out(S542)
	S592= DR4bit.Out={Compare0(a+b+ca),so|OverFlow(a+b+ca)}     DR4bit-Out(S544)
	S593= DR4bit.Out26_31={Compare0(a+b+ca),so|OverFlow(a+b+ca)}[26:31]DR4bit-Out(S544)
	S594= DR4bit.Out30_31={Compare0(a+b+ca),so|OverFlow(a+b+ca)}[30:31]DR4bit-Out(S544)
	S595= PIDReg.Out=>IMMU.PID                                  Premise(F284)
	S596= IMMU.PID=pid                                          Path(S549,S595)
	S597= PC.Out=>IMMU.IEA                                      Premise(F285)
	S598= IMMU.IEA=addr+4                                       Path(S554,S597)
	S599= IMMU.Addr={pid,addr+4}                                IMMU-Search(S596,S598)
	S600= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S596,S598)
	S601= IMMU.Addr=>IAddrReg.In                                Premise(F286)
	S602= IAddrReg.In={pid,addr+4}                              Path(S599,S601)
	S603= IMMU.Hit=>IMMUHitReg.In                               Premise(F287)
	S604= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S600,S603)
	S605= PC.Out=>ICache.IEA                                    Premise(F288)
	S606= ICache.IEA=addr+4                                     Path(S554,S605)
	S607= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S606)
	S608= ICache.Out=>ICacheReg.In                              Premise(F289)
	S609= ICache.Hit=>ICacheHitReg.In                           Premise(F290)
	S610= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S607,S609)
	S611= IMMUHitReg.Out=>CU.IMemHit                            Premise(F291)
	S612= CU.IMemHit=IMMUHit(pid,addr)                          Path(S558,S611)
	S613= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F292)
	S614= CU.ICacheHit=ICacheHit(addr)                          Path(S564,S613)
	S615= IAddrReg.Out=>IMem.RAddr                              Premise(F293)
	S616= IMem.RAddr={pid,addr}                                 Path(S555,S615)
	S617= IMem.Out={31,rT,rA,rB,1301}                           IMem-Read(S616,S519)
	S618= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S616,S519)
	S619= IMem.Out=>IRMux.MemData                               Premise(F294)
	S620= IRMux.MemData={31,rT,rA,rB,1301}                      Path(S617,S619)
	S621= ICacheReg.Out=>IRMux.CacheData                        Premise(F295)
	S622= IRMux.CacheData={31,rT,rA,rB,1301}                    Path(S561,S621)
	S623= IRMux.Out={31,rT,rA,rB,1301}                          IRMux-Select(S620,S622)
	S624= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F296)
	S625= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S558,S624)
	S626= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F297)
	S627= IRMux.CacheSel=ICacheHit(addr)                        Path(S564,S626)
	S628= IRMux.Out=>IR.In                                      Premise(F298)
	S629= IR.In={31,rT,rA,rB,1301}                              Path(S623,S628)
	S630= IMem.MEM8WordOut=>ICache.WData                        Premise(F299)
	S631= ICache.WData=IMemGet8Word({pid,addr})                 Path(S618,S630)
	S632= PC.Out=>ICache.IEA                                    Premise(F300)
	S633= IR.Out0_5=>CU.Op                                      Premise(F301)
	S634= CU.Op=31                                              Path(S567,S633)
	S635= IR.Out11_15=>GPRegs.RReg1                             Premise(F302)
	S636= GPRegs.RReg1=rA                                       Path(S569,S635)
	S637= GPRegs.Rdata1=a                                       GPRegs-Read(S636,S524)
	S638= IR.Out16_20=>GPRegs.RReg2                             Premise(F303)
	S639= GPRegs.RReg2=rB                                       Path(S570,S638)
	S640= GPRegs.Rdata2=b                                       GPRegs-Read(S639,S525)
	S641= IR.Out21_31=>CU.IRFunc                                Premise(F304)
	S642= CU.IRFunc=1301                                        Path(S571,S641)
	S643= CU.Func=alu_adde                                      CU(S634,S642)
	S644= GPRegs.Rdata1=>A.In                                   Premise(F305)
	S645= A.In=a                                                Path(S637,S644)
	S646= GPRegs.Rdata2=>B.In                                   Premise(F306)
	S647= B.In=b                                                Path(S640,S646)
	S648= A.Out=>ALU.A                                          Premise(F307)
	S649= ALU.A=a                                               Path(S572,S648)
	S650= B.Out=>ALU.B                                          Premise(F308)
	S651= ALU.B=b                                               Path(S575,S650)
	S652= XER.CAOut=>ALU.CAIn                                   Premise(F309)
	S653= ALU.CAIn=ca                                           Path(S579,S652)
	S654= CU.Func=>ALU.Func                                     Premise(F310)
	S655= ALU.Func=alu_adde                                     Path(S643,S654)
	S656= ALU.Out=a+b+ca                                        ALU(S649,S651,S653)
	S657= ALU.CMP=Compare0(a+b+ca)                              ALU(S649,S651,S653)
	S658= ALU.OV=OverFlow(a+b+ca)                               ALU(S649,S651,S653)
	S659= ALU.CA=Carry(a+b+ca)                                  ALU(S649,S651,S653)
	S660= ALU.Out=>ALUOut.In                                    Premise(F311)
	S661= ALUOut.In=a+b+ca                                      Path(S656,S660)
	S662= ALU.CA=>CAReg.In                                      Premise(F312)
	S663= CAReg.In=Carry(a+b+ca)                                Path(S659,S662)
	S664= ALU.CMP=>DataCmb.A                                    Premise(F313)
	S665= DataCmb.A=Compare0(a+b+ca)                            Path(S657,S664)
	S666= ORGate.Out=>DataCmb.B                                 Premise(F314)
	S667= ALU.OV=>OVReg.In                                      Premise(F315)
	S668= OVReg.In=OverFlow(a+b+ca)                             Path(S658,S667)
	S669= XER.SOOut=>ORGate.A                                   Premise(F316)
	S670= ORGate.A=so                                           Path(S578,S669)
	S671= ALU.OV=>ORGate.B                                      Premise(F317)
	S672= ORGate.B=OverFlow(a+b+ca)                             Path(S658,S671)
	S673= ORGate.Out=so|OverFlow(a+b+ca)                        ORGate(S670,S672)
	S674= DataCmb.B=so|OverFlow(a+b+ca)                         Path(S673,S666)
	S675= DataCmb.Out={Compare0(a+b+ca),so|OverFlow(a+b+ca)}    DataCmb(S665,S674)
	S676= ORGate.Out=>DR1bit.In                                 Premise(F318)
	S677= DR1bit.In=so|OverFlow(a+b+ca)                         Path(S673,S676)
	S678= DataCmb.Out=>DR4bit.In                                Premise(F319)
	S679= DR4bit.In={Compare0(a+b+ca),so|OverFlow(a+b+ca)}      Path(S675,S678)
	S680= IR.Out6_10=>GPRegs.WReg                               Premise(F320)
	S681= GPRegs.WReg=rT                                        Path(S568,S680)
	S682= ALUOut.Out=>GPRegs.WData                              Premise(F321)
	S683= GPRegs.WData=a+b+ca                                   Path(S580,S682)
	S684= DR4bit.Out=>CRRegs.CR0In                              Premise(F322)
	S685= CRRegs.CR0In={Compare0(a+b+ca),so|OverFlow(a+b+ca)}   Path(S592,S684)
	S686= DR1bit.Out=>XER.SOIn                                  Premise(F323)
	S687= XER.SOIn=so|OverFlow(a+b+ca)                          Path(S589,S686)
	S688= CAReg.Out=>XER.CAIn                                   Premise(F324)
	S689= XER.CAIn=Carry(a+b+ca)                                Path(S583,S688)
	S690= OVReg.Out=>XER.OVIn                                   Premise(F325)
	S691= XER.OVIn=OverFlow(a+b+ca)                             Path(S586,S690)
	S692= CtrlPIDReg=0                                          Premise(F326)
	S693= [PIDReg]=pid                                          PIDReg-Hold(S502,S692)
	S694= CtrlIMMU=0                                            Premise(F327)
	S695= CtrlPC=0                                              Premise(F328)
	S696= CtrlPCInc=0                                           Premise(F329)
	S697= PC[CIA]=addr                                          PC-Hold(S506,S696)
	S698= PC[Out]=addr+4                                        PC-Hold(S507,S695,S696)
	S699= CtrlIAddrReg=0                                        Premise(F330)
	S700= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S509,S699)
	S701= CtrlIMMUHitReg=0                                      Premise(F331)
	S702= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S511,S701)
	S703= CtrlICache=0                                          Premise(F332)
	S704= ICache[addr]={31,rT,rA,rB,1301}                       ICache-Hold(S513,S703)
	S705= CtrlICacheReg=0                                       Premise(F333)
	S706= [ICacheReg]={31,rT,rA,rB,1301}                        ICacheReg-Hold(S515,S705)
	S707= CtrlICacheHitReg=0                                    Premise(F334)
	S708= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S517,S707)
	S709= CtrlIMem=0                                            Premise(F335)
	S710= IMem[{pid,addr}]={31,rT,rA,rB,1301}                   IMem-Hold(S519,S709)
	S711= CtrlIRMux=0                                           Premise(F336)
	S712= CtrlIR=0                                              Premise(F337)
	S713= [IR]={31,rT,rA,rB,1301}                               IR-Hold(S522,S712)
	S714= CtrlGPRegs=0                                          Premise(F338)
	S715= GPRegs[rA]=a                                          GPRegs-Hold(S524,S714)
	S716= GPRegs[rB]=b                                          GPRegs-Hold(S525,S714)
	S717= CtrlA=0                                               Premise(F339)
	S718= [A]=a                                                 A-Hold(S527,S717)
	S719= CtrlB=0                                               Premise(F340)
	S720= [B]=b                                                 B-Hold(S529,S719)
	S721= CtrlXERSO=0                                           Premise(F341)
	S722= XER[SO]=so                                            XER-SO-Hold(S531,S721)
	S723= CtrlXEROV=0                                           Premise(F342)
	S724= CtrlXERCA=0                                           Premise(F343)
	S725= XER[CA]=ca                                            XER-CA-Hold(S534,S724)
	S726= CtrlALUOut=0                                          Premise(F344)
	S727= [ALUOut]=a+b+ca                                       ALUOut-Hold(S536,S726)
	S728= CtrlCAReg=0                                           Premise(F345)
	S729= [CAReg]=Carry(a+b+ca)                                 CAReg-Hold(S538,S728)
	S730= CtrlOVReg=0                                           Premise(F346)
	S731= [OVReg]=OverFlow(a+b+ca)                              OVReg-Hold(S540,S730)
	S732= CtrlDR1bit=0                                          Premise(F347)
	S733= [DR1bit]=so|OverFlow(a+b+ca)                          DR1bit-Hold(S542,S732)
	S734= CtrlDR4bit=0                                          Premise(F348)
	S735= [DR4bit]={Compare0(a+b+ca),so|OverFlow(a+b+ca)}       DR4bit-Hold(S544,S734)
	S736= CtrlCRRegs=0                                          Premise(F349)
	S737= CtrlCRRegsCR0=0                                       Premise(F350)
	S738= CtrlCRRegsW4bitRegs=0                                 Premise(F351)
	S739= CtrlCRRegsW1bitRegs=0                                 Premise(F352)

DMMU1	S740= PIDReg.Out=pid                                        PIDReg-Out(S693)
	S741= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S693)
	S742= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S693)
	S743= PC.CIA=addr                                           PC-Out(S697)
	S744= PC.CIA31_28=addr[31:28]                               PC-Out(S697)
	S745= PC.Out=addr+4                                         PC-Out(S698)
	S746= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S700)
	S747= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S700)
	S748= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S700)
	S749= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S702)
	S750= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S702)
	S751= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S702)
	S752= ICacheReg.Out={31,rT,rA,rB,1301}                      ICacheReg-Out(S706)
	S753= ICacheReg.Out26_31={31,rT,rA,rB,1301}[26:31]          ICacheReg-Out(S706)
	S754= ICacheReg.Out30_31={31,rT,rA,rB,1301}[30:31]          ICacheReg-Out(S706)
	S755= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S708)
	S756= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S708)
	S757= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S708)
	S758= IR.Out0_5=31                                          IR-Out(S713)
	S759= IR.Out6_10=rT                                         IR-Out(S713)
	S760= IR.Out11_15=rA                                        IR-Out(S713)
	S761= IR.Out16_20=rB                                        IR-Out(S713)
	S762= IR.Out21_31=1301                                      IR-Out(S713)
	S763= A.Out=a                                               A-Out(S718)
	S764= A.Out26_31=a[26:31]                                   A-Out(S718)
	S765= A.Out30_31=a[30:31]                                   A-Out(S718)
	S766= B.Out=b                                               B-Out(S720)
	S767= B.Out26_31=b[26:31]                                   B-Out(S720)
	S768= B.Out30_31=b[30:31]                                   B-Out(S720)
	S769= XER.SOOut=so                                          XER-SO-Out(S722)
	S770= XER.CAOut=ca                                          XER-CA-Out(S725)
	S771= ALUOut.Out=a+b+ca                                     ALUOut-Out(S727)
	S772= ALUOut.Out26_31=a+b+ca[26:31]                         ALUOut-Out(S727)
	S773= ALUOut.Out30_31=a+b+ca[30:31]                         ALUOut-Out(S727)
	S774= CAReg.Out=Carry(a+b+ca)                               CAReg-Out(S729)
	S775= CAReg.Out26_31=Carry(a+b+ca)[26:31]                   CAReg-Out(S729)
	S776= CAReg.Out30_31=Carry(a+b+ca)[30:31]                   CAReg-Out(S729)
	S777= OVReg.Out=OverFlow(a+b+ca)                            OVReg-Out(S731)
	S778= OVReg.Out26_31=OverFlow(a+b+ca)[26:31]                OVReg-Out(S731)
	S779= OVReg.Out30_31=OverFlow(a+b+ca)[30:31]                OVReg-Out(S731)
	S780= DR1bit.Out=so|OverFlow(a+b+ca)                        DR1bit-Out(S733)
	S781= DR1bit.Out26_31=so|OverFlow(a+b+ca)[26:31]            DR1bit-Out(S733)
	S782= DR1bit.Out30_31=so|OverFlow(a+b+ca)[30:31]            DR1bit-Out(S733)
	S783= DR4bit.Out={Compare0(a+b+ca),so|OverFlow(a+b+ca)}     DR4bit-Out(S735)
	S784= DR4bit.Out26_31={Compare0(a+b+ca),so|OverFlow(a+b+ca)}[26:31]DR4bit-Out(S735)
	S785= DR4bit.Out30_31={Compare0(a+b+ca),so|OverFlow(a+b+ca)}[30:31]DR4bit-Out(S735)
	S786= PIDReg.Out=>IMMU.PID                                  Premise(F353)
	S787= IMMU.PID=pid                                          Path(S740,S786)
	S788= PC.Out=>IMMU.IEA                                      Premise(F354)
	S789= IMMU.IEA=addr+4                                       Path(S745,S788)
	S790= IMMU.Addr={pid,addr+4}                                IMMU-Search(S787,S789)
	S791= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S787,S789)
	S792= IMMU.Addr=>IAddrReg.In                                Premise(F355)
	S793= IAddrReg.In={pid,addr+4}                              Path(S790,S792)
	S794= IMMU.Hit=>IMMUHitReg.In                               Premise(F356)
	S795= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S791,S794)
	S796= PC.Out=>ICache.IEA                                    Premise(F357)
	S797= ICache.IEA=addr+4                                     Path(S745,S796)
	S798= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S797)
	S799= ICache.Out=>ICacheReg.In                              Premise(F358)
	S800= ICache.Hit=>ICacheHitReg.In                           Premise(F359)
	S801= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S798,S800)
	S802= IMMUHitReg.Out=>CU.IMemHit                            Premise(F360)
	S803= CU.IMemHit=IMMUHit(pid,addr)                          Path(S749,S802)
	S804= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F361)
	S805= CU.ICacheHit=ICacheHit(addr)                          Path(S755,S804)
	S806= IAddrReg.Out=>IMem.RAddr                              Premise(F362)
	S807= IMem.RAddr={pid,addr}                                 Path(S746,S806)
	S808= IMem.Out={31,rT,rA,rB,1301}                           IMem-Read(S807,S710)
	S809= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S807,S710)
	S810= IMem.Out=>IRMux.MemData                               Premise(F363)
	S811= IRMux.MemData={31,rT,rA,rB,1301}                      Path(S808,S810)
	S812= ICacheReg.Out=>IRMux.CacheData                        Premise(F364)
	S813= IRMux.CacheData={31,rT,rA,rB,1301}                    Path(S752,S812)
	S814= IRMux.Out={31,rT,rA,rB,1301}                          IRMux-Select(S811,S813)
	S815= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F365)
	S816= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S749,S815)
	S817= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F366)
	S818= IRMux.CacheSel=ICacheHit(addr)                        Path(S755,S817)
	S819= IRMux.Out=>IR.In                                      Premise(F367)
	S820= IR.In={31,rT,rA,rB,1301}                              Path(S814,S819)
	S821= IMem.MEM8WordOut=>ICache.WData                        Premise(F368)
	S822= ICache.WData=IMemGet8Word({pid,addr})                 Path(S809,S821)
	S823= PC.Out=>ICache.IEA                                    Premise(F369)
	S824= IR.Out0_5=>CU.Op                                      Premise(F370)
	S825= CU.Op=31                                              Path(S758,S824)
	S826= IR.Out11_15=>GPRegs.RReg1                             Premise(F371)
	S827= GPRegs.RReg1=rA                                       Path(S760,S826)
	S828= GPRegs.Rdata1=a                                       GPRegs-Read(S827,S715)
	S829= IR.Out16_20=>GPRegs.RReg2                             Premise(F372)
	S830= GPRegs.RReg2=rB                                       Path(S761,S829)
	S831= GPRegs.Rdata2=b                                       GPRegs-Read(S830,S716)
	S832= IR.Out21_31=>CU.IRFunc                                Premise(F373)
	S833= CU.IRFunc=1301                                        Path(S762,S832)
	S834= CU.Func=alu_adde                                      CU(S825,S833)
	S835= GPRegs.Rdata1=>A.In                                   Premise(F374)
	S836= A.In=a                                                Path(S828,S835)
	S837= GPRegs.Rdata2=>B.In                                   Premise(F375)
	S838= B.In=b                                                Path(S831,S837)
	S839= A.Out=>ALU.A                                          Premise(F376)
	S840= ALU.A=a                                               Path(S763,S839)
	S841= B.Out=>ALU.B                                          Premise(F377)
	S842= ALU.B=b                                               Path(S766,S841)
	S843= XER.CAOut=>ALU.CAIn                                   Premise(F378)
	S844= ALU.CAIn=ca                                           Path(S770,S843)
	S845= CU.Func=>ALU.Func                                     Premise(F379)
	S846= ALU.Func=alu_adde                                     Path(S834,S845)
	S847= ALU.Out=a+b+ca                                        ALU(S840,S842,S844)
	S848= ALU.CMP=Compare0(a+b+ca)                              ALU(S840,S842,S844)
	S849= ALU.OV=OverFlow(a+b+ca)                               ALU(S840,S842,S844)
	S850= ALU.CA=Carry(a+b+ca)                                  ALU(S840,S842,S844)
	S851= ALU.Out=>ALUOut.In                                    Premise(F380)
	S852= ALUOut.In=a+b+ca                                      Path(S847,S851)
	S853= ALU.CA=>CAReg.In                                      Premise(F381)
	S854= CAReg.In=Carry(a+b+ca)                                Path(S850,S853)
	S855= ALU.CMP=>DataCmb.A                                    Premise(F382)
	S856= DataCmb.A=Compare0(a+b+ca)                            Path(S848,S855)
	S857= ORGate.Out=>DataCmb.B                                 Premise(F383)
	S858= ALU.OV=>OVReg.In                                      Premise(F384)
	S859= OVReg.In=OverFlow(a+b+ca)                             Path(S849,S858)
	S860= XER.SOOut=>ORGate.A                                   Premise(F385)
	S861= ORGate.A=so                                           Path(S769,S860)
	S862= ALU.OV=>ORGate.B                                      Premise(F386)
	S863= ORGate.B=OverFlow(a+b+ca)                             Path(S849,S862)
	S864= ORGate.Out=so|OverFlow(a+b+ca)                        ORGate(S861,S863)
	S865= DataCmb.B=so|OverFlow(a+b+ca)                         Path(S864,S857)
	S866= DataCmb.Out={Compare0(a+b+ca),so|OverFlow(a+b+ca)}    DataCmb(S856,S865)
	S867= ORGate.Out=>DR1bit.In                                 Premise(F387)
	S868= DR1bit.In=so|OverFlow(a+b+ca)                         Path(S864,S867)
	S869= DataCmb.Out=>DR4bit.In                                Premise(F388)
	S870= DR4bit.In={Compare0(a+b+ca),so|OverFlow(a+b+ca)}      Path(S866,S869)
	S871= IR.Out6_10=>GPRegs.WReg                               Premise(F389)
	S872= GPRegs.WReg=rT                                        Path(S759,S871)
	S873= ALUOut.Out=>GPRegs.WData                              Premise(F390)
	S874= GPRegs.WData=a+b+ca                                   Path(S771,S873)
	S875= DR4bit.Out=>CRRegs.CR0In                              Premise(F391)
	S876= CRRegs.CR0In={Compare0(a+b+ca),so|OverFlow(a+b+ca)}   Path(S783,S875)
	S877= DR1bit.Out=>XER.SOIn                                  Premise(F392)
	S878= XER.SOIn=so|OverFlow(a+b+ca)                          Path(S780,S877)
	S879= CAReg.Out=>XER.CAIn                                   Premise(F393)
	S880= XER.CAIn=Carry(a+b+ca)                                Path(S774,S879)
	S881= OVReg.Out=>XER.OVIn                                   Premise(F394)
	S882= XER.OVIn=OverFlow(a+b+ca)                             Path(S777,S881)
	S883= CtrlPIDReg=0                                          Premise(F395)
	S884= [PIDReg]=pid                                          PIDReg-Hold(S693,S883)
	S885= CtrlIMMU=0                                            Premise(F396)
	S886= CtrlPC=0                                              Premise(F397)
	S887= CtrlPCInc=0                                           Premise(F398)
	S888= PC[CIA]=addr                                          PC-Hold(S697,S887)
	S889= PC[Out]=addr+4                                        PC-Hold(S698,S886,S887)
	S890= CtrlIAddrReg=0                                        Premise(F399)
	S891= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S700,S890)
	S892= CtrlIMMUHitReg=0                                      Premise(F400)
	S893= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S702,S892)
	S894= CtrlICache=0                                          Premise(F401)
	S895= ICache[addr]={31,rT,rA,rB,1301}                       ICache-Hold(S704,S894)
	S896= CtrlICacheReg=0                                       Premise(F402)
	S897= [ICacheReg]={31,rT,rA,rB,1301}                        ICacheReg-Hold(S706,S896)
	S898= CtrlICacheHitReg=0                                    Premise(F403)
	S899= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S708,S898)
	S900= CtrlIMem=0                                            Premise(F404)
	S901= IMem[{pid,addr}]={31,rT,rA,rB,1301}                   IMem-Hold(S710,S900)
	S902= CtrlIRMux=0                                           Premise(F405)
	S903= CtrlIR=0                                              Premise(F406)
	S904= [IR]={31,rT,rA,rB,1301}                               IR-Hold(S713,S903)
	S905= CtrlGPRegs=0                                          Premise(F407)
	S906= GPRegs[rA]=a                                          GPRegs-Hold(S715,S905)
	S907= GPRegs[rB]=b                                          GPRegs-Hold(S716,S905)
	S908= CtrlA=0                                               Premise(F408)
	S909= [A]=a                                                 A-Hold(S718,S908)
	S910= CtrlB=0                                               Premise(F409)
	S911= [B]=b                                                 B-Hold(S720,S910)
	S912= CtrlXERSO=0                                           Premise(F410)
	S913= XER[SO]=so                                            XER-SO-Hold(S722,S912)
	S914= CtrlXEROV=0                                           Premise(F411)
	S915= CtrlXERCA=0                                           Premise(F412)
	S916= XER[CA]=ca                                            XER-CA-Hold(S725,S915)
	S917= CtrlALUOut=0                                          Premise(F413)
	S918= [ALUOut]=a+b+ca                                       ALUOut-Hold(S727,S917)
	S919= CtrlCAReg=0                                           Premise(F414)
	S920= [CAReg]=Carry(a+b+ca)                                 CAReg-Hold(S729,S919)
	S921= CtrlOVReg=0                                           Premise(F415)
	S922= [OVReg]=OverFlow(a+b+ca)                              OVReg-Hold(S731,S921)
	S923= CtrlDR1bit=0                                          Premise(F416)
	S924= [DR1bit]=so|OverFlow(a+b+ca)                          DR1bit-Hold(S733,S923)
	S925= CtrlDR4bit=0                                          Premise(F417)
	S926= [DR4bit]={Compare0(a+b+ca),so|OverFlow(a+b+ca)}       DR4bit-Hold(S735,S925)
	S927= CtrlCRRegs=0                                          Premise(F418)
	S928= CtrlCRRegsCR0=0                                       Premise(F419)
	S929= CtrlCRRegsW4bitRegs=0                                 Premise(F420)
	S930= CtrlCRRegsW1bitRegs=0                                 Premise(F421)

DMMU2	S931= PIDReg.Out=pid                                        PIDReg-Out(S884)
	S932= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S884)
	S933= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S884)
	S934= PC.CIA=addr                                           PC-Out(S888)
	S935= PC.CIA31_28=addr[31:28]                               PC-Out(S888)
	S936= PC.Out=addr+4                                         PC-Out(S889)
	S937= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S891)
	S938= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S891)
	S939= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S891)
	S940= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S893)
	S941= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S893)
	S942= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S893)
	S943= ICacheReg.Out={31,rT,rA,rB,1301}                      ICacheReg-Out(S897)
	S944= ICacheReg.Out26_31={31,rT,rA,rB,1301}[26:31]          ICacheReg-Out(S897)
	S945= ICacheReg.Out30_31={31,rT,rA,rB,1301}[30:31]          ICacheReg-Out(S897)
	S946= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S899)
	S947= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S899)
	S948= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S899)
	S949= IR.Out0_5=31                                          IR-Out(S904)
	S950= IR.Out6_10=rT                                         IR-Out(S904)
	S951= IR.Out11_15=rA                                        IR-Out(S904)
	S952= IR.Out16_20=rB                                        IR-Out(S904)
	S953= IR.Out21_31=1301                                      IR-Out(S904)
	S954= A.Out=a                                               A-Out(S909)
	S955= A.Out26_31=a[26:31]                                   A-Out(S909)
	S956= A.Out30_31=a[30:31]                                   A-Out(S909)
	S957= B.Out=b                                               B-Out(S911)
	S958= B.Out26_31=b[26:31]                                   B-Out(S911)
	S959= B.Out30_31=b[30:31]                                   B-Out(S911)
	S960= XER.SOOut=so                                          XER-SO-Out(S913)
	S961= XER.CAOut=ca                                          XER-CA-Out(S916)
	S962= ALUOut.Out=a+b+ca                                     ALUOut-Out(S918)
	S963= ALUOut.Out26_31=a+b+ca[26:31]                         ALUOut-Out(S918)
	S964= ALUOut.Out30_31=a+b+ca[30:31]                         ALUOut-Out(S918)
	S965= CAReg.Out=Carry(a+b+ca)                               CAReg-Out(S920)
	S966= CAReg.Out26_31=Carry(a+b+ca)[26:31]                   CAReg-Out(S920)
	S967= CAReg.Out30_31=Carry(a+b+ca)[30:31]                   CAReg-Out(S920)
	S968= OVReg.Out=OverFlow(a+b+ca)                            OVReg-Out(S922)
	S969= OVReg.Out26_31=OverFlow(a+b+ca)[26:31]                OVReg-Out(S922)
	S970= OVReg.Out30_31=OverFlow(a+b+ca)[30:31]                OVReg-Out(S922)
	S971= DR1bit.Out=so|OverFlow(a+b+ca)                        DR1bit-Out(S924)
	S972= DR1bit.Out26_31=so|OverFlow(a+b+ca)[26:31]            DR1bit-Out(S924)
	S973= DR1bit.Out30_31=so|OverFlow(a+b+ca)[30:31]            DR1bit-Out(S924)
	S974= DR4bit.Out={Compare0(a+b+ca),so|OverFlow(a+b+ca)}     DR4bit-Out(S926)
	S975= DR4bit.Out26_31={Compare0(a+b+ca),so|OverFlow(a+b+ca)}[26:31]DR4bit-Out(S926)
	S976= DR4bit.Out30_31={Compare0(a+b+ca),so|OverFlow(a+b+ca)}[30:31]DR4bit-Out(S926)
	S977= PIDReg.Out=>IMMU.PID                                  Premise(F422)
	S978= IMMU.PID=pid                                          Path(S931,S977)
	S979= PC.Out=>IMMU.IEA                                      Premise(F423)
	S980= IMMU.IEA=addr+4                                       Path(S936,S979)
	S981= IMMU.Addr={pid,addr+4}                                IMMU-Search(S978,S980)
	S982= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S978,S980)
	S983= IMMU.Addr=>IAddrReg.In                                Premise(F424)
	S984= IAddrReg.In={pid,addr+4}                              Path(S981,S983)
	S985= IMMU.Hit=>IMMUHitReg.In                               Premise(F425)
	S986= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S982,S985)
	S987= PC.Out=>ICache.IEA                                    Premise(F426)
	S988= ICache.IEA=addr+4                                     Path(S936,S987)
	S989= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S988)
	S990= ICache.Out=>ICacheReg.In                              Premise(F427)
	S991= ICache.Hit=>ICacheHitReg.In                           Premise(F428)
	S992= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S989,S991)
	S993= IMMUHitReg.Out=>CU.IMemHit                            Premise(F429)
	S994= CU.IMemHit=IMMUHit(pid,addr)                          Path(S940,S993)
	S995= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F430)
	S996= CU.ICacheHit=ICacheHit(addr)                          Path(S946,S995)
	S997= IAddrReg.Out=>IMem.RAddr                              Premise(F431)
	S998= IMem.RAddr={pid,addr}                                 Path(S937,S997)
	S999= IMem.Out={31,rT,rA,rB,1301}                           IMem-Read(S998,S901)
	S1000= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S998,S901)
	S1001= IMem.Out=>IRMux.MemData                              Premise(F432)
	S1002= IRMux.MemData={31,rT,rA,rB,1301}                     Path(S999,S1001)
	S1003= ICacheReg.Out=>IRMux.CacheData                       Premise(F433)
	S1004= IRMux.CacheData={31,rT,rA,rB,1301}                   Path(S943,S1003)
	S1005= IRMux.Out={31,rT,rA,rB,1301}                         IRMux-Select(S1002,S1004)
	S1006= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F434)
	S1007= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S940,S1006)
	S1008= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F435)
	S1009= IRMux.CacheSel=ICacheHit(addr)                       Path(S946,S1008)
	S1010= IRMux.Out=>IR.In                                     Premise(F436)
	S1011= IR.In={31,rT,rA,rB,1301}                             Path(S1005,S1010)
	S1012= IMem.MEM8WordOut=>ICache.WData                       Premise(F437)
	S1013= ICache.WData=IMemGet8Word({pid,addr})                Path(S1000,S1012)
	S1014= PC.Out=>ICache.IEA                                   Premise(F438)
	S1015= IR.Out0_5=>CU.Op                                     Premise(F439)
	S1016= CU.Op=31                                             Path(S949,S1015)
	S1017= IR.Out11_15=>GPRegs.RReg1                            Premise(F440)
	S1018= GPRegs.RReg1=rA                                      Path(S951,S1017)
	S1019= GPRegs.Rdata1=a                                      GPRegs-Read(S1018,S906)
	S1020= IR.Out16_20=>GPRegs.RReg2                            Premise(F441)
	S1021= GPRegs.RReg2=rB                                      Path(S952,S1020)
	S1022= GPRegs.Rdata2=b                                      GPRegs-Read(S1021,S907)
	S1023= IR.Out21_31=>CU.IRFunc                               Premise(F442)
	S1024= CU.IRFunc=1301                                       Path(S953,S1023)
	S1025= CU.Func=alu_adde                                     CU(S1016,S1024)
	S1026= GPRegs.Rdata1=>A.In                                  Premise(F443)
	S1027= A.In=a                                               Path(S1019,S1026)
	S1028= GPRegs.Rdata2=>B.In                                  Premise(F444)
	S1029= B.In=b                                               Path(S1022,S1028)
	S1030= A.Out=>ALU.A                                         Premise(F445)
	S1031= ALU.A=a                                              Path(S954,S1030)
	S1032= B.Out=>ALU.B                                         Premise(F446)
	S1033= ALU.B=b                                              Path(S957,S1032)
	S1034= XER.CAOut=>ALU.CAIn                                  Premise(F447)
	S1035= ALU.CAIn=ca                                          Path(S961,S1034)
	S1036= CU.Func=>ALU.Func                                    Premise(F448)
	S1037= ALU.Func=alu_adde                                    Path(S1025,S1036)
	S1038= ALU.Out=a+b+ca                                       ALU(S1031,S1033,S1035)
	S1039= ALU.CMP=Compare0(a+b+ca)                             ALU(S1031,S1033,S1035)
	S1040= ALU.OV=OverFlow(a+b+ca)                              ALU(S1031,S1033,S1035)
	S1041= ALU.CA=Carry(a+b+ca)                                 ALU(S1031,S1033,S1035)
	S1042= ALU.Out=>ALUOut.In                                   Premise(F449)
	S1043= ALUOut.In=a+b+ca                                     Path(S1038,S1042)
	S1044= ALU.CA=>CAReg.In                                     Premise(F450)
	S1045= CAReg.In=Carry(a+b+ca)                               Path(S1041,S1044)
	S1046= ALU.CMP=>DataCmb.A                                   Premise(F451)
	S1047= DataCmb.A=Compare0(a+b+ca)                           Path(S1039,S1046)
	S1048= ORGate.Out=>DataCmb.B                                Premise(F452)
	S1049= ALU.OV=>OVReg.In                                     Premise(F453)
	S1050= OVReg.In=OverFlow(a+b+ca)                            Path(S1040,S1049)
	S1051= XER.SOOut=>ORGate.A                                  Premise(F454)
	S1052= ORGate.A=so                                          Path(S960,S1051)
	S1053= ALU.OV=>ORGate.B                                     Premise(F455)
	S1054= ORGate.B=OverFlow(a+b+ca)                            Path(S1040,S1053)
	S1055= ORGate.Out=so|OverFlow(a+b+ca)                       ORGate(S1052,S1054)
	S1056= DataCmb.B=so|OverFlow(a+b+ca)                        Path(S1055,S1048)
	S1057= DataCmb.Out={Compare0(a+b+ca),so|OverFlow(a+b+ca)}   DataCmb(S1047,S1056)
	S1058= ORGate.Out=>DR1bit.In                                Premise(F456)
	S1059= DR1bit.In=so|OverFlow(a+b+ca)                        Path(S1055,S1058)
	S1060= DataCmb.Out=>DR4bit.In                               Premise(F457)
	S1061= DR4bit.In={Compare0(a+b+ca),so|OverFlow(a+b+ca)}     Path(S1057,S1060)
	S1062= IR.Out6_10=>GPRegs.WReg                              Premise(F458)
	S1063= GPRegs.WReg=rT                                       Path(S950,S1062)
	S1064= ALUOut.Out=>GPRegs.WData                             Premise(F459)
	S1065= GPRegs.WData=a+b+ca                                  Path(S962,S1064)
	S1066= DR4bit.Out=>CRRegs.CR0In                             Premise(F460)
	S1067= CRRegs.CR0In={Compare0(a+b+ca),so|OverFlow(a+b+ca)}  Path(S974,S1066)
	S1068= DR1bit.Out=>XER.SOIn                                 Premise(F461)
	S1069= XER.SOIn=so|OverFlow(a+b+ca)                         Path(S971,S1068)
	S1070= CAReg.Out=>XER.CAIn                                  Premise(F462)
	S1071= XER.CAIn=Carry(a+b+ca)                               Path(S965,S1070)
	S1072= OVReg.Out=>XER.OVIn                                  Premise(F463)
	S1073= XER.OVIn=OverFlow(a+b+ca)                            Path(S968,S1072)
	S1074= CtrlPIDReg=0                                         Premise(F464)
	S1075= [PIDReg]=pid                                         PIDReg-Hold(S884,S1074)
	S1076= CtrlIMMU=0                                           Premise(F465)
	S1077= CtrlPC=0                                             Premise(F466)
	S1078= CtrlPCInc=0                                          Premise(F467)
	S1079= PC[CIA]=addr                                         PC-Hold(S888,S1078)
	S1080= PC[Out]=addr+4                                       PC-Hold(S889,S1077,S1078)
	S1081= CtrlIAddrReg=0                                       Premise(F468)
	S1082= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S891,S1081)
	S1083= CtrlIMMUHitReg=0                                     Premise(F469)
	S1084= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S893,S1083)
	S1085= CtrlICache=0                                         Premise(F470)
	S1086= ICache[addr]={31,rT,rA,rB,1301}                      ICache-Hold(S895,S1085)
	S1087= CtrlICacheReg=0                                      Premise(F471)
	S1088= [ICacheReg]={31,rT,rA,rB,1301}                       ICacheReg-Hold(S897,S1087)
	S1089= CtrlICacheHitReg=0                                   Premise(F472)
	S1090= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S899,S1089)
	S1091= CtrlIMem=0                                           Premise(F473)
	S1092= IMem[{pid,addr}]={31,rT,rA,rB,1301}                  IMem-Hold(S901,S1091)
	S1093= CtrlIRMux=0                                          Premise(F474)
	S1094= CtrlIR=0                                             Premise(F475)
	S1095= [IR]={31,rT,rA,rB,1301}                              IR-Hold(S904,S1094)
	S1096= CtrlGPRegs=0                                         Premise(F476)
	S1097= GPRegs[rA]=a                                         GPRegs-Hold(S906,S1096)
	S1098= GPRegs[rB]=b                                         GPRegs-Hold(S907,S1096)
	S1099= CtrlA=0                                              Premise(F477)
	S1100= [A]=a                                                A-Hold(S909,S1099)
	S1101= CtrlB=0                                              Premise(F478)
	S1102= [B]=b                                                B-Hold(S911,S1101)
	S1103= CtrlXERSO=0                                          Premise(F479)
	S1104= XER[SO]=so                                           XER-SO-Hold(S913,S1103)
	S1105= CtrlXEROV=0                                          Premise(F480)
	S1106= CtrlXERCA=0                                          Premise(F481)
	S1107= XER[CA]=ca                                           XER-CA-Hold(S916,S1106)
	S1108= CtrlALUOut=0                                         Premise(F482)
	S1109= [ALUOut]=a+b+ca                                      ALUOut-Hold(S918,S1108)
	S1110= CtrlCAReg=0                                          Premise(F483)
	S1111= [CAReg]=Carry(a+b+ca)                                CAReg-Hold(S920,S1110)
	S1112= CtrlOVReg=0                                          Premise(F484)
	S1113= [OVReg]=OverFlow(a+b+ca)                             OVReg-Hold(S922,S1112)
	S1114= CtrlDR1bit=0                                         Premise(F485)
	S1115= [DR1bit]=so|OverFlow(a+b+ca)                         DR1bit-Hold(S924,S1114)
	S1116= CtrlDR4bit=0                                         Premise(F486)
	S1117= [DR4bit]={Compare0(a+b+ca),so|OverFlow(a+b+ca)}      DR4bit-Hold(S926,S1116)
	S1118= CtrlCRRegs=0                                         Premise(F487)
	S1119= CtrlCRRegsCR0=0                                      Premise(F488)
	S1120= CtrlCRRegsW4bitRegs=0                                Premise(F489)
	S1121= CtrlCRRegsW1bitRegs=0                                Premise(F490)

WB	S1122= PIDReg.Out=pid                                       PIDReg-Out(S1075)
	S1123= PIDReg.Out26_31=pid[26:31]                           PIDReg-Out(S1075)
	S1124= PIDReg.Out30_31=pid[30:31]                           PIDReg-Out(S1075)
	S1125= PC.CIA=addr                                          PC-Out(S1079)
	S1126= PC.CIA31_28=addr[31:28]                              PC-Out(S1079)
	S1127= PC.Out=addr+4                                        PC-Out(S1080)
	S1128= IAddrReg.Out={pid,addr}                              IAddrReg-Out(S1082)
	S1129= IAddrReg.Out26_31={pid,addr}[26:31]                  IAddrReg-Out(S1082)
	S1130= IAddrReg.Out30_31={pid,addr}[30:31]                  IAddrReg-Out(S1082)
	S1131= IMMUHitReg.Out=IMMUHit(pid,addr)                     IMMUHitReg-Out(S1084)
	S1132= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S1084)
	S1133= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S1084)
	S1134= ICacheReg.Out={31,rT,rA,rB,1301}                     ICacheReg-Out(S1088)
	S1135= ICacheReg.Out26_31={31,rT,rA,rB,1301}[26:31]         ICacheReg-Out(S1088)
	S1136= ICacheReg.Out30_31={31,rT,rA,rB,1301}[30:31]         ICacheReg-Out(S1088)
	S1137= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S1090)
	S1138= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S1090)
	S1139= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S1090)
	S1140= IR.Out0_5=31                                         IR-Out(S1095)
	S1141= IR.Out6_10=rT                                        IR-Out(S1095)
	S1142= IR.Out11_15=rA                                       IR-Out(S1095)
	S1143= IR.Out16_20=rB                                       IR-Out(S1095)
	S1144= IR.Out21_31=1301                                     IR-Out(S1095)
	S1145= A.Out=a                                              A-Out(S1100)
	S1146= A.Out26_31=a[26:31]                                  A-Out(S1100)
	S1147= A.Out30_31=a[30:31]                                  A-Out(S1100)
	S1148= B.Out=b                                              B-Out(S1102)
	S1149= B.Out26_31=b[26:31]                                  B-Out(S1102)
	S1150= B.Out30_31=b[30:31]                                  B-Out(S1102)
	S1151= XER.SOOut=so                                         XER-SO-Out(S1104)
	S1152= XER.CAOut=ca                                         XER-CA-Out(S1107)
	S1153= ALUOut.Out=a+b+ca                                    ALUOut-Out(S1109)
	S1154= ALUOut.Out26_31=a+b+ca[26:31]                        ALUOut-Out(S1109)
	S1155= ALUOut.Out30_31=a+b+ca[30:31]                        ALUOut-Out(S1109)
	S1156= CAReg.Out=Carry(a+b+ca)                              CAReg-Out(S1111)
	S1157= CAReg.Out26_31=Carry(a+b+ca)[26:31]                  CAReg-Out(S1111)
	S1158= CAReg.Out30_31=Carry(a+b+ca)[30:31]                  CAReg-Out(S1111)
	S1159= OVReg.Out=OverFlow(a+b+ca)                           OVReg-Out(S1113)
	S1160= OVReg.Out26_31=OverFlow(a+b+ca)[26:31]               OVReg-Out(S1113)
	S1161= OVReg.Out30_31=OverFlow(a+b+ca)[30:31]               OVReg-Out(S1113)
	S1162= DR1bit.Out=so|OverFlow(a+b+ca)                       DR1bit-Out(S1115)
	S1163= DR1bit.Out26_31=so|OverFlow(a+b+ca)[26:31]           DR1bit-Out(S1115)
	S1164= DR1bit.Out30_31=so|OverFlow(a+b+ca)[30:31]           DR1bit-Out(S1115)
	S1165= DR4bit.Out={Compare0(a+b+ca),so|OverFlow(a+b+ca)}    DR4bit-Out(S1117)
	S1166= DR4bit.Out26_31={Compare0(a+b+ca),so|OverFlow(a+b+ca)}[26:31]DR4bit-Out(S1117)
	S1167= DR4bit.Out30_31={Compare0(a+b+ca),so|OverFlow(a+b+ca)}[30:31]DR4bit-Out(S1117)
	S1168= PIDReg.Out=>IMMU.PID                                 Premise(F491)
	S1169= IMMU.PID=pid                                         Path(S1122,S1168)
	S1170= PC.Out=>IMMU.IEA                                     Premise(F492)
	S1171= IMMU.IEA=addr+4                                      Path(S1127,S1170)
	S1172= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1169,S1171)
	S1173= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1169,S1171)
	S1174= IMMU.Addr=>IAddrReg.In                               Premise(F493)
	S1175= IAddrReg.In={pid,addr+4}                             Path(S1172,S1174)
	S1176= IMMU.Hit=>IMMUHitReg.In                              Premise(F494)
	S1177= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1173,S1176)
	S1178= PC.Out=>ICache.IEA                                   Premise(F495)
	S1179= ICache.IEA=addr+4                                    Path(S1127,S1178)
	S1180= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1179)
	S1181= ICache.Out=>ICacheReg.In                             Premise(F496)
	S1182= ICache.Hit=>ICacheHitReg.In                          Premise(F497)
	S1183= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1180,S1182)
	S1184= IMMUHitReg.Out=>CU.IMemHit                           Premise(F498)
	S1185= CU.IMemHit=IMMUHit(pid,addr)                         Path(S1131,S1184)
	S1186= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F499)
	S1187= CU.ICacheHit=ICacheHit(addr)                         Path(S1137,S1186)
	S1188= IAddrReg.Out=>IMem.RAddr                             Premise(F500)
	S1189= IMem.RAddr={pid,addr}                                Path(S1128,S1188)
	S1190= IMem.Out={31,rT,rA,rB,1301}                          IMem-Read(S1189,S1092)
	S1191= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1189,S1092)
	S1192= IMem.Out=>IRMux.MemData                              Premise(F501)
	S1193= IRMux.MemData={31,rT,rA,rB,1301}                     Path(S1190,S1192)
	S1194= ICacheReg.Out=>IRMux.CacheData                       Premise(F502)
	S1195= IRMux.CacheData={31,rT,rA,rB,1301}                   Path(S1134,S1194)
	S1196= IRMux.Out={31,rT,rA,rB,1301}                         IRMux-Select(S1193,S1195)
	S1197= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F503)
	S1198= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S1131,S1197)
	S1199= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F504)
	S1200= IRMux.CacheSel=ICacheHit(addr)                       Path(S1137,S1199)
	S1201= IRMux.Out=>IR.In                                     Premise(F505)
	S1202= IR.In={31,rT,rA,rB,1301}                             Path(S1196,S1201)
	S1203= IMem.MEM8WordOut=>ICache.WData                       Premise(F506)
	S1204= ICache.WData=IMemGet8Word({pid,addr})                Path(S1191,S1203)
	S1205= PC.Out=>ICache.IEA                                   Premise(F507)
	S1206= IR.Out0_5=>CU.Op                                     Premise(F508)
	S1207= CU.Op=31                                             Path(S1140,S1206)
	S1208= IR.Out11_15=>GPRegs.RReg1                            Premise(F509)
	S1209= GPRegs.RReg1=rA                                      Path(S1142,S1208)
	S1210= GPRegs.Rdata1=a                                      GPRegs-Read(S1209,S1097)
	S1211= IR.Out16_20=>GPRegs.RReg2                            Premise(F510)
	S1212= GPRegs.RReg2=rB                                      Path(S1143,S1211)
	S1213= GPRegs.Rdata2=b                                      GPRegs-Read(S1212,S1098)
	S1214= IR.Out21_31=>CU.IRFunc                               Premise(F511)
	S1215= CU.IRFunc=1301                                       Path(S1144,S1214)
	S1216= CU.Func=alu_adde                                     CU(S1207,S1215)
	S1217= GPRegs.Rdata1=>A.In                                  Premise(F512)
	S1218= A.In=a                                               Path(S1210,S1217)
	S1219= GPRegs.Rdata2=>B.In                                  Premise(F513)
	S1220= B.In=b                                               Path(S1213,S1219)
	S1221= A.Out=>ALU.A                                         Premise(F514)
	S1222= ALU.A=a                                              Path(S1145,S1221)
	S1223= B.Out=>ALU.B                                         Premise(F515)
	S1224= ALU.B=b                                              Path(S1148,S1223)
	S1225= XER.CAOut=>ALU.CAIn                                  Premise(F516)
	S1226= ALU.CAIn=ca                                          Path(S1152,S1225)
	S1227= CU.Func=>ALU.Func                                    Premise(F517)
	S1228= ALU.Func=alu_adde                                    Path(S1216,S1227)
	S1229= ALU.Out=a+b+ca                                       ALU(S1222,S1224,S1226)
	S1230= ALU.CMP=Compare0(a+b+ca)                             ALU(S1222,S1224,S1226)
	S1231= ALU.OV=OverFlow(a+b+ca)                              ALU(S1222,S1224,S1226)
	S1232= ALU.CA=Carry(a+b+ca)                                 ALU(S1222,S1224,S1226)
	S1233= ALU.Out=>ALUOut.In                                   Premise(F518)
	S1234= ALUOut.In=a+b+ca                                     Path(S1229,S1233)
	S1235= ALU.CA=>CAReg.In                                     Premise(F519)
	S1236= CAReg.In=Carry(a+b+ca)                               Path(S1232,S1235)
	S1237= ALU.CMP=>DataCmb.A                                   Premise(F520)
	S1238= DataCmb.A=Compare0(a+b+ca)                           Path(S1230,S1237)
	S1239= ORGate.Out=>DataCmb.B                                Premise(F521)
	S1240= ALU.OV=>OVReg.In                                     Premise(F522)
	S1241= OVReg.In=OverFlow(a+b+ca)                            Path(S1231,S1240)
	S1242= XER.SOOut=>ORGate.A                                  Premise(F523)
	S1243= ORGate.A=so                                          Path(S1151,S1242)
	S1244= ALU.OV=>ORGate.B                                     Premise(F524)
	S1245= ORGate.B=OverFlow(a+b+ca)                            Path(S1231,S1244)
	S1246= ORGate.Out=so|OverFlow(a+b+ca)                       ORGate(S1243,S1245)
	S1247= DataCmb.B=so|OverFlow(a+b+ca)                        Path(S1246,S1239)
	S1248= DataCmb.Out={Compare0(a+b+ca),so|OverFlow(a+b+ca)}   DataCmb(S1238,S1247)
	S1249= ORGate.Out=>DR1bit.In                                Premise(F525)
	S1250= DR1bit.In=so|OverFlow(a+b+ca)                        Path(S1246,S1249)
	S1251= DataCmb.Out=>DR4bit.In                               Premise(F526)
	S1252= DR4bit.In={Compare0(a+b+ca),so|OverFlow(a+b+ca)}     Path(S1248,S1251)
	S1253= IR.Out6_10=>GPRegs.WReg                              Premise(F527)
	S1254= GPRegs.WReg=rT                                       Path(S1141,S1253)
	S1255= ALUOut.Out=>GPRegs.WData                             Premise(F528)
	S1256= GPRegs.WData=a+b+ca                                  Path(S1153,S1255)
	S1257= DR4bit.Out=>CRRegs.CR0In                             Premise(F529)
	S1258= CRRegs.CR0In={Compare0(a+b+ca),so|OverFlow(a+b+ca)}  Path(S1165,S1257)
	S1259= DR1bit.Out=>XER.SOIn                                 Premise(F530)
	S1260= XER.SOIn=so|OverFlow(a+b+ca)                         Path(S1162,S1259)
	S1261= CAReg.Out=>XER.CAIn                                  Premise(F531)
	S1262= XER.CAIn=Carry(a+b+ca)                               Path(S1156,S1261)
	S1263= OVReg.Out=>XER.OVIn                                  Premise(F532)
	S1264= XER.OVIn=OverFlow(a+b+ca)                            Path(S1159,S1263)
	S1265= CtrlPIDReg=0                                         Premise(F533)
	S1266= [PIDReg]=pid                                         PIDReg-Hold(S1075,S1265)
	S1267= CtrlIMMU=0                                           Premise(F534)
	S1268= CtrlPC=0                                             Premise(F535)
	S1269= CtrlPCInc=0                                          Premise(F536)
	S1270= PC[CIA]=addr                                         PC-Hold(S1079,S1269)
	S1271= PC[Out]=addr+4                                       PC-Hold(S1080,S1268,S1269)
	S1272= CtrlIAddrReg=0                                       Premise(F537)
	S1273= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1082,S1272)
	S1274= CtrlIMMUHitReg=0                                     Premise(F538)
	S1275= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1084,S1274)
	S1276= CtrlICache=0                                         Premise(F539)
	S1277= ICache[addr]={31,rT,rA,rB,1301}                      ICache-Hold(S1086,S1276)
	S1278= CtrlICacheReg=0                                      Premise(F540)
	S1279= [ICacheReg]={31,rT,rA,rB,1301}                       ICacheReg-Hold(S1088,S1278)
	S1280= CtrlICacheHitReg=0                                   Premise(F541)
	S1281= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1090,S1280)
	S1282= CtrlIMem=0                                           Premise(F542)
	S1283= IMem[{pid,addr}]={31,rT,rA,rB,1301}                  IMem-Hold(S1092,S1282)
	S1284= CtrlIRMux=0                                          Premise(F543)
	S1285= CtrlIR=0                                             Premise(F544)
	S1286= [IR]={31,rT,rA,rB,1301}                              IR-Hold(S1095,S1285)
	S1287= CtrlGPRegs=1                                         Premise(F545)
	S1288= GPRegs[rT]=a+b+ca                                    GPRegs-Write(S1254,S1256,S1287)
	S1289= CtrlA=0                                              Premise(F546)
	S1290= [A]=a                                                A-Hold(S1100,S1289)
	S1291= CtrlB=0                                              Premise(F547)
	S1292= [B]=b                                                B-Hold(S1102,S1291)
	S1293= CtrlXERSO=1                                          Premise(F548)
	S1294= XER[SO]=so|OverFlow(a+b+ca)                          XER-SO-Write(S1260,S1293)
	S1295= CtrlXEROV=1                                          Premise(F549)
	S1296= XER[OV]=OverFlow(a+b+ca)                             XER-OV-Write(S1264,S1295)
	S1297= CtrlXERCA=1                                          Premise(F550)
	S1298= XER[CA]=Carry(a+b+ca)                                XER-CA-Write(S1262,S1297)
	S1299= CtrlALUOut=0                                         Premise(F551)
	S1300= [ALUOut]=a+b+ca                                      ALUOut-Hold(S1109,S1299)
	S1301= CtrlCAReg=0                                          Premise(F552)
	S1302= [CAReg]=Carry(a+b+ca)                                CAReg-Hold(S1111,S1301)
	S1303= CtrlOVReg=0                                          Premise(F553)
	S1304= [OVReg]=OverFlow(a+b+ca)                             OVReg-Hold(S1113,S1303)
	S1305= CtrlDR1bit=0                                         Premise(F554)
	S1306= [DR1bit]=so|OverFlow(a+b+ca)                         DR1bit-Hold(S1115,S1305)
	S1307= CtrlDR4bit=0                                         Premise(F555)
	S1308= [DR4bit]={Compare0(a+b+ca),so|OverFlow(a+b+ca)}      DR4bit-Hold(S1117,S1307)
	S1309= CtrlCRRegs=0                                         Premise(F556)
	S1310= CtrlCRRegsCR0=1                                      Premise(F557)
	S1311= CRRegs[CR0]={Compare0(a+b+ca),so|OverFlow(a+b+ca)}   CRRegs-CR0-Write(S1258,S1310)
	S1312= CtrlCRRegsW4bitRegs=0                                Premise(F558)
	S1313= CtrlCRRegsW1bitRegs=0                                Premise(F559)

POST	S1266= [PIDReg]=pid                                         PIDReg-Hold(S1075,S1265)
	S1270= PC[CIA]=addr                                         PC-Hold(S1079,S1269)
	S1271= PC[Out]=addr+4                                       PC-Hold(S1080,S1268,S1269)
	S1273= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1082,S1272)
	S1275= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1084,S1274)
	S1277= ICache[addr]={31,rT,rA,rB,1301}                      ICache-Hold(S1086,S1276)
	S1279= [ICacheReg]={31,rT,rA,rB,1301}                       ICacheReg-Hold(S1088,S1278)
	S1281= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1090,S1280)
	S1283= IMem[{pid,addr}]={31,rT,rA,rB,1301}                  IMem-Hold(S1092,S1282)
	S1286= [IR]={31,rT,rA,rB,1301}                              IR-Hold(S1095,S1285)
	S1288= GPRegs[rT]=a+b+ca                                    GPRegs-Write(S1254,S1256,S1287)
	S1290= [A]=a                                                A-Hold(S1100,S1289)
	S1292= [B]=b                                                B-Hold(S1102,S1291)
	S1294= XER[SO]=so|OverFlow(a+b+ca)                          XER-SO-Write(S1260,S1293)
	S1296= XER[OV]=OverFlow(a+b+ca)                             XER-OV-Write(S1264,S1295)
	S1298= XER[CA]=Carry(a+b+ca)                                XER-CA-Write(S1262,S1297)
	S1300= [ALUOut]=a+b+ca                                      ALUOut-Hold(S1109,S1299)
	S1302= [CAReg]=Carry(a+b+ca)                                CAReg-Hold(S1111,S1301)
	S1304= [OVReg]=OverFlow(a+b+ca)                             OVReg-Hold(S1113,S1303)
	S1306= [DR1bit]=so|OverFlow(a+b+ca)                         DR1bit-Hold(S1115,S1305)
	S1308= [DR4bit]={Compare0(a+b+ca),so|OverFlow(a+b+ca)}      DR4bit-Hold(S1117,S1307)
	S1311= CRRegs[CR0]={Compare0(a+b+ca),so|OverFlow(a+b+ca)}   CRRegs-CR0-Write(S1258,S1310)

