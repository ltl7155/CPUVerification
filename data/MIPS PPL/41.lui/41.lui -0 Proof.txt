
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={15,0,rT,offset}                       Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= PC.Out=>IMem.RAddr                                      Premise(F3)
	S6= IMem.RAddr=addr                                         Path(S4,S5)
	S7= CP0.ASID=>IMem.ASID                                     Premise(F4)
	S8= IMem.ASID=pid                                           Path(S3,S7)
	S9= IMem.Out={15,0,rT,offset}                               IMem-Read(S8,S6,S2)
	S10= IMem.Out=>IR_ID.In                                     Premise(F6)
	S11= IR_ID.In={15,0,rT,offset}                              Path(S9,S10)
	S12= CtrlPC=0                                               Premise(F33)
	S13= CtrlPCInc=1                                            Premise(F34)
	S14= PC[Out]=addr+4                                         PC-Inc(S1,S12,S13)
	S15= CtrlIR_ID=1                                            Premise(F40)
	S16= [IR_ID]={15,0,rT,offset}                               IR_ID-Write(S11,S15)

ID	S17= IR_ID.Out={15,0,rT,offset}                             IR-Out(S16)
	S18= IR_ID.Out=>IR_EX.In                                    Premise(F55)
	S19= IR_EX.In={15,0,rT,offset}                              Path(S17,S18)
	S20= CtrlPC=0                                               Premise(F79)
	S21= CtrlPCInc=0                                            Premise(F80)
	S22= PC[Out]=addr+4                                         PC-Hold(S14,S20,S21)
	S23= CtrlIR_EX=1                                            Premise(F87)
	S24= [IR_EX]={15,0,rT,offset}                               IR_EX-Write(S19,S23)

EX	S25= IR_EX.Out={15,0,rT,offset}                             IR_EX-Out(S24)
	S26= IR_EX.Out15_0=offset                                   IR_EX-Out(S24)
	S27= IR_EX.Out15_0=>IMMSEXT.In                              Premise(F106)
	S28= IMMSEXT.In=offset                                      Path(S26,S27)
	S29= IMMSEXT.Out={offset,16{0}}                             IMMSEXT(S28)
	S30= IMMSEXT.Out=>ALUOut_MEM.In                             Premise(F107)
	S31= ALUOut_MEM.In={offset,16{0}}                           Path(S29,S30)
	S32= IR_EX.Out=>IR_MEM.In                                   Premise(F110)
	S33= IR_MEM.In={15,0,rT,offset}                             Path(S25,S32)
	S34= CtrlPC=0                                               Premise(F123)
	S35= CtrlPCInc=0                                            Premise(F124)
	S36= PC[Out]=addr+4                                         PC-Hold(S22,S34,S35)
	S37= CtrlALUOut_MEM=1                                       Premise(F132)
	S38= [ALUOut_MEM]={offset,16{0}}                            ALUOut_MEM-Write(S31,S37)
	S39= CtrlIR_MEM=1                                           Premise(F133)
	S40= [IR_MEM]={15,0,rT,offset}                              IR_MEM-Write(S33,S39)

MEM	S41= ALUOut_MEM.Out={offset,16{0}}                          ALUOut_MEM-Out(S38)
	S42= IR_MEM.Out={15,0,rT,offset}                            IR_MEM-Out(S40)
	S43= IR_MEM.Out=>IR_WB.In                                   Premise(F157)
	S44= IR_WB.In={15,0,rT,offset}                              Path(S42,S43)
	S45= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F158)
	S46= ALUOut_WB.In={offset,16{0}}                            Path(S41,S45)
	S47= CtrlPC=0                                               Premise(F167)
	S48= CtrlPCInc=0                                            Premise(F168)
	S49= PC[Out]=addr+4                                         PC-Hold(S36,S47,S48)
	S50= CtrlIR_WB=1                                            Premise(F178)
	S51= [IR_WB]={15,0,rT,offset}                               IR_WB-Write(S44,S50)
	S52= CtrlALUOut_WB=1                                        Premise(F179)
	S53= [ALUOut_WB]={offset,16{0}}                             ALUOut_WB-Write(S46,S52)

WB	S54= IR_WB.Out20_16=rT                                      IR-Out(S51)
	S55= ALUOut_WB.Out={offset,16{0}}                           ALUOut_WB-Out(S53)
	S56= IR_WB.Out20_16=>GPR.WReg                               Premise(F207)
	S57= GPR.WReg=rT                                            Path(S54,S56)
	S58= ALUOut_WB.Out=>GPR.WData                               Premise(F208)
	S59= GPR.WData={offset,16{0}}                               Path(S55,S58)
	S60= CtrlPC=0                                               Premise(F211)
	S61= CtrlPCInc=0                                            Premise(F212)
	S62= PC[Out]=addr+4                                         PC-Hold(S49,S60,S61)
	S63= CtrlGPR=1                                              Premise(F224)
	S64= GPR[rT]={offset,16{0}}                                 GPR-Write(S57,S59,S63)

POST	S62= PC[Out]=addr+4                                         PC-Hold(S49,S60,S61)
	S64= GPR[rT]={offset,16{0}}                                 GPR-Write(S57,S59,S63)

