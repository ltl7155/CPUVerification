
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={35,rS,rT,offset}                      Premise(F2)
	S3= GPR[rS]=base                                            Premise(F3)
	S4= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a          Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= IMMU.Addr=>IAddrReg.In                                  Premise(F84)
	S8= PC.Out=>IMMU.IEA                                        Premise(F90)
	S9= IMMU.IEA=addr                                           Path(S6,S8)
	S10= CP0.ASID=>IMMU.PID                                     Premise(F91)
	S11= IMMU.PID=pid                                           Path(S5,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S11,S9)
	S13= IAddrReg.In={pid,addr}                                 Path(S12,S7)
	S14= CtrlDMem=0                                             Premise(F149)
	S15= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S4,S14)
	S16= CtrlCP0=0                                              Premise(F153)
	S17= CP0[ASID]=pid                                          CP0-Hold(S0,S16)
	S18= CtrlGPR=0                                              Premise(F166)
	S19= GPR[rS]=base                                           GPR-Hold(S3,S18)
	S20= CtrlIAddrReg=1                                         Premise(F167)
	S21= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S20)
	S22= CtrlPC=0                                               Premise(F168)
	S23= CtrlPCInc=0                                            Premise(F169)
	S24= PC[Out]=addr                                           PC-Hold(S1,S22,S23)
	S25= CtrlIMem=0                                             Premise(F170)
	S26= IMem[{pid,addr}]={35,rS,rT,offset}                     IMem-Hold(S2,S25)

IMMU	S27= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S21)
	S28= PC.Out=addr                                            PC-Out(S24)
	S29= PC.Out=>ICache.IEA                                     Premise(F252)
	S30= ICache.IEA=addr                                        Path(S28,S29)
	S31= IMem.MEM8WordOut=>ICache.WData                         Premise(F254)
	S32= IAddrReg.Out=>IMem.RAddr                               Premise(F259)
	S33= IMem.RAddr={pid,addr}                                  Path(S27,S32)
	S34= IMem.Out={35,rS,rT,offset}                             IMem-Read(S33,S26)
	S35= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S33,S26)
	S36= ICache.WData=IMemGet8Word({pid,addr})                  Path(S35,S31)
	S37= IMem.Out=>IRMux.MemData                                Premise(F262)
	S38= IRMux.MemData={35,rS,rT,offset}                        Path(S34,S37)
	S39= IRMux.Out={35,rS,rT,offset}                            IRMux-Select2(S38)
	S40= IRMux.Out=>IR_ID.In                                    Premise(F268)
	S41= IR_ID.In={35,rS,rT,offset}                             Path(S39,S40)
	S42= CtrlICache=1                                           Premise(F309)
	S43= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S30,S36,S42)
	S44= CtrlDMem=0                                             Premise(F316)
	S45= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S15,S44)
	S46= CtrlCP0=0                                              Premise(F320)
	S47= CP0[ASID]=pid                                          CP0-Hold(S17,S46)
	S48= CtrlIR_ID=1                                            Premise(F329)
	S49= [IR_ID]={35,rS,rT,offset}                              IR_ID-Write(S41,S48)
	S50= CtrlGPR=0                                              Premise(F333)
	S51= GPR[rS]=base                                           GPR-Hold(S19,S50)
	S52= CtrlPC=0                                               Premise(F335)
	S53= CtrlPCInc=1                                            Premise(F336)
	S54= PC[Out]=addr+4                                         PC-Inc(S24,S52,S53)

ID	S55= IR_ID.Out={35,rS,rT,offset}                            IR-Out(S49)
	S56= IR_ID.Out25_21=rS                                      IR-Out(S49)
	S57= IR_ID.Out15_0=offset                                   IR-Out(S49)
	S58= FU.OutID1=>A_EX.In                                     Premise(F346)
	S59= IMMEXT.Out=>B_EX.In                                    Premise(F347)
	S60= GPR.Rdata1=>FU.InID1                                   Premise(F410)
	S61= IR_ID.Out25_21=>GPR.RReg1                              Premise(F416)
	S62= GPR.RReg1=rS                                           Path(S56,S61)
	S63= GPR.Rdata1=base                                        GPR-Read(S62,S51)
	S64= FU.InID1=base                                          Path(S63,S60)
	S65= FU.OutID1=FU(base)                                     FU-Forward(S64)
	S66= A_EX.In=FU(base)                                       Path(S65,S58)
	S67= IR_ID.Out15_0=>IMMEXT.In                               Premise(F424)
	S68= IMMEXT.In=offset                                       Path(S57,S67)
	S69= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S68)
	S70= B_EX.In={16{offset[15]},offset}                        Path(S69,S59)
	S71= IR_ID.Out=>IR_EX.In                                    Premise(F434)
	S72= IR_EX.In={35,rS,rT,offset}                             Path(S55,S71)
	S73= CtrlA_EX=1                                             Premise(F466)
	S74= [A_EX]=FU(base)                                        A_EX-Write(S66,S73)
	S75= CtrlB_EX=1                                             Premise(F467)
	S76= [B_EX]={16{offset[15]},offset}                         B_EX-Write(S70,S75)
	S77= CtrlICache=0                                           Premise(F477)
	S78= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S43,S77)
	S79= CtrlDMem=0                                             Premise(F484)
	S80= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S45,S79)
	S81= CtrlCP0=0                                              Premise(F488)
	S82= CP0[ASID]=pid                                          CP0-Hold(S47,S81)
	S83= CtrlIR_EX=1                                            Premise(F496)
	S84= [IR_EX]={35,rS,rT,offset}                              IR_EX-Write(S72,S83)
	S85= CtrlPC=0                                               Premise(F503)
	S86= CtrlPCInc=0                                            Premise(F504)
	S87= PC[Out]=addr+4                                         PC-Hold(S54,S85,S86)

EX	S88= A_EX.Out=FU(base)                                      A_EX-Out(S74)
	S89= B_EX.Out={16{offset[15]},offset}                       B_EX-Out(S76)
	S90= IR_EX.Out={35,rS,rT,offset}                            IR_EX-Out(S84)
	S91= A_EX.Out=>ALU.A                                        Premise(F508)
	S92= ALU.A=FU(base)                                         Path(S88,S91)
	S93= B_EX.Out=>ALU.B                                        Premise(F509)
	S94= ALU.B={16{offset[15]},offset}                          Path(S89,S93)
	S95= ALU.Out=FU(base)+{16{offset[15]},offset}               ALU(S92,S94)
	S96= ALU.Out=>ALUOut_MEM.In                                 Premise(F513)
	S97= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}         Path(S95,S96)
	S98= IR_EX.Out=>IR_MEM.In                                   Premise(F606)
	S99= IR_MEM.In={35,rS,rT,offset}                            Path(S90,S98)
	S100= CtrlALUOut_MEM=1                                      Premise(F636)
	S101= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}         ALUOut_MEM-Write(S97,S100)
	S102= CtrlICache=0                                          Premise(F645)
	S103= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S78,S102)
	S104= CtrlDMem=0                                            Premise(F652)
	S105= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S80,S104)
	S106= CtrlCP0=0                                             Premise(F656)
	S107= CP0[ASID]=pid                                         CP0-Hold(S82,S106)
	S108= CtrlIR_MEM=1                                          Premise(F667)
	S109= [IR_MEM]={35,rS,rT,offset}                            IR_MEM-Write(S99,S108)
	S110= CtrlPC=0                                              Premise(F671)
	S111= CtrlPCInc=0                                           Premise(F672)
	S112= PC[Out]=addr+4                                        PC-Hold(S87,S110,S111)

MEM	S113= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}       ALUOut_MEM-Out(S101)
	S114= CP0.ASID=pid                                          CP0-Read-ASID(S107)
	S115= IR_MEM.Out={35,rS,rT,offset}                          IR_MEM-Out(S109)
	S116= ALUOut_MEM.Out=>ALUOut_DMMU1.In                       Premise(F678)
	S117= ALUOut_DMMU1.In=FU(base)+{16{offset[15]},offset}      Path(S113,S116)
	S118= DMMU.Addr=>DAddrReg_DMMU1.In                          Premise(F717)
	S119= ALUOut_MEM.Out=>DMMU.IEA                              Premise(F723)
	S120= DMMU.IEA=FU(base)+{16{offset[15]},offset}             Path(S113,S119)
	S121= CP0.ASID=>DMMU.PID                                    Premise(F725)
	S122= DMMU.PID=pid                                          Path(S114,S121)
	S123= DMMU.Addr={pid,FU(base)+{16{offset[15]},offset}}      DMMU-Search(S122,S120)
	S124= DAddrReg_DMMU1.In={pid,FU(base)+{16{offset[15]},offset}}Path(S123,S118)
	S125= IR_MEM.Out=>IR_DMMU1.In                               Premise(F767)
	S126= IR_DMMU1.In={35,rS,rT,offset}                         Path(S115,S125)
	S127= CtrlALUOut_DMMU1=1                                    Premise(F804)
	S128= [ALUOut_DMMU1]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU1-Write(S117,S127)
	S129= CtrlICache=0                                          Premise(F812)
	S130= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S103,S129)
	S131= CtrlDAddrReg_DMMU1=1                                  Premise(F815)
	S132= [DAddrReg_DMMU1]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Write(S124,S131)
	S133= CtrlDMem=0                                            Premise(F819)
	S134= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S105,S133)
	S135= CtrlIR_DMMU1=1                                        Premise(F829)
	S136= [IR_DMMU1]={35,rS,rT,offset}                          IR_DMMU1-Write(S126,S135)
	S137= CtrlPC=0                                              Premise(F838)
	S138= CtrlPCInc=0                                           Premise(F839)
	S139= PC[Out]=addr+4                                        PC-Hold(S112,S137,S138)

DMMU1	S140= ALUOut_DMMU1.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU1-Out(S128)
	S141= DAddrReg_DMMU1.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Out(S132)
	S142= IR_DMMU1.Out={35,rS,rT,offset}                        IR_DMMU1-Out(S136)
	S143= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                     Premise(F846)
	S144= ALUOut_DMMU2.In=FU(base)+{16{offset[15]},offset}      Path(S140,S143)
	S145= DAddrReg_DMMU1.Out=>DAddrReg_DMMU2.In                 Premise(F885)
	S146= DAddrReg_DMMU2.In={pid,FU(base)+{16{offset[15]},offset}}Path(S141,S145)
	S147= IR_DMMU1.Out=>IR_DMMU2.In                             Premise(F935)
	S148= IR_DMMU2.In={35,rS,rT,offset}                         Path(S142,S147)
	S149= CtrlALUOut_DMMU2=1                                    Premise(F972)
	S150= [ALUOut_DMMU2]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU2-Write(S144,S149)
	S151= CtrlICache=0                                          Premise(F979)
	S152= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S130,S151)
	S153= CtrlDAddrReg_DMMU2=1                                  Premise(F983)
	S154= [DAddrReg_DMMU2]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Write(S146,S153)
	S155= CtrlDMem=0                                            Premise(F986)
	S156= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S134,S155)
	S157= CtrlIR_DMMU2=1                                        Premise(F997)
	S158= [IR_DMMU2]={35,rS,rT,offset}                          IR_DMMU2-Write(S148,S157)
	S159= CtrlPC=0                                              Premise(F1005)
	S160= CtrlPCInc=0                                           Premise(F1006)
	S161= PC[Out]=addr+4                                        PC-Hold(S139,S159,S160)

DMMU2	S162= ALUOut_DMMU2.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU2-Out(S150)
	S163= DAddrReg_DMMU2.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Out(S154)
	S164= IR_DMMU2.Out={35,rS,rT,offset}                        IR_DMMU2-Out(S158)
	S165= ALUOut_DMMU2.Out=>ALUOut_WB.In                        Premise(F1015)
	S166= ALUOut_WB.In=FU(base)+{16{offset[15]},offset}         Path(S162,S165)
	S167= ALUOut_DMMU2.Out=>DCache.IEA                          Premise(F1053)
	S168= DCache.IEA=FU(base)+{16{offset[15]},offset}           Path(S162,S167)
	S169= DMem.MEM8WordOut=>DCache.WData                        Premise(F1055)
	S170= DAddrReg_DMMU2.Out=>DMem.RAddr                        Premise(F1063)
	S171= DMem.RAddr={pid,FU(base)+{16{offset[15]},offset}}     Path(S163,S170)
	S172= DMem.Out=>DR_WB.In                                    Premise(F1066)
	S173= IR_DMMU2.Out=>IR_WB.In                                Premise(F1108)
	S174= IR_WB.In={35,rS,rT,offset}                            Path(S164,S173)
	S175= CtrlALUOut_WB=1                                       Premise(F1140)
	S176= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}          ALUOut_WB-Write(S166,S175)
	S177= CtrlDCache=1                                          Premise(F1145)
	S178= CtrlICache=0                                          Premise(F1146)
	S179= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S152,S178)
	S180= CtrlDMem=0                                            Premise(F1153)
	S181= CtrlDMem8Word=0                                       Premise(F1154)
	S182= DMem.Out=a                                            DMem-Read(S171,S156,S180,S181)
	S183= DR_WB.In=a                                            Path(S182,S172)
	S184= DMem.MEM8WordOut=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DMem-Read(S171,S156,S180,S181)
	S185= DCache.WData=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})Path(S184,S169)
	S186= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Write8Word(S168,S185,S177)
	S187= CtrlDR_WB=1                                           Premise(F1162)
	S188= [DR_WB]=a                                             DR_WB-Write(S183,S187)
	S189= CtrlIR_WB=1                                           Premise(F1169)
	S190= [IR_WB]={35,rS,rT,offset}                             IR_WB-Write(S174,S189)
	S191= CtrlPC=0                                              Premise(F1172)
	S192= CtrlPCInc=0                                           Premise(F1173)
	S193= PC[Out]=addr+4                                        PC-Hold(S161,S191,S192)

WB	S194= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S176)
	S195= DR_WB.Out=a                                           DR_WB-Out(S188)
	S196= IR_WB.Out20_16=rT                                     IR-Out(S190)
	S197= MemDataSelL.Out=>GPR.WData                            Premise(F1253)
	S198= IR_WB.Out20_16=>GPR.WReg                              Premise(F1254)
	S199= GPR.WReg=rT                                           Path(S196,S198)
	S200= ALUOut_WB.Out1_0=>MemDataSelL.Addr                    Premise(F1276)
	S201= MemDataSelL.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S194,S200)
	S202= DR_WB.Out=>MemDataSelL.In                             Premise(F1278)
	S203= MemDataSelL.In=a                                      Path(S195,S202)
	S204= MemDataSelL.Out=a                                     MemDataSelL(S203,S201)
	S205= GPR.WData=a                                           Path(S204,S197)
	S206= CtrlDCache=0                                          Premise(F1313)
	S207= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S186,S206)
	S208= CtrlICache=0                                          Premise(F1314)
	S209= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S179,S208)
	S210= CtrlGPR=1                                             Premise(F1338)
	S211= GPR[rT]=a                                             GPR-Write(S199,S205,S210)
	S212= CtrlPC=0                                              Premise(F1340)
	S213= CtrlPCInc=0                                           Premise(F1341)
	S214= PC[Out]=addr+4                                        PC-Hold(S193,S212,S213)

POST	S207= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S186,S206)
	S209= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S179,S208)
	S211= GPR[rT]=a                                             GPR-Write(S199,S205,S210)
	S214= PC[Out]=addr+4                                        PC-Hold(S193,S212,S213)

