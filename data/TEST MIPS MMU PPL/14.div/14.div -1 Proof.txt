
------------------------------------- Proof -------------------------------------

PRE	S0= PC[Out]=addr                                            Premise(F1)
	S1= ICache[addr]={0,rS,rT,0,0,26}                           Premise(F3)

IF	S2= PC.Out=addr                                             PC-Out(S0)
	S3= PC.Out=>ICache.IEA                                      Premise(F8)
	S4= ICache.IEA=addr                                         Path(S2,S3)
	S5= ICache.Out={0,rS,rT,0,0,26}                             ICache-Search(S4,S1)
	S6= ICache.Out=>IR_ID.In                                    Premise(F12)
	S7= IR_ID.In={0,rS,rT,0,0,26}                               Path(S5,S6)
	S8= CtrlPC=0                                                Premise(F25)
	S9= CtrlPCInc=1                                             Premise(F26)
	S10= PC[Out]=addr+4                                         PC-Inc(S0,S8,S9)
	S11= CtrlIR_ID=1                                            Premise(F31)
	S12= [IR_ID]={0,rS,rT,0,0,26}                               IR_ID-Write(S7,S11)
	S13= GPR[rS]=a                                              Premise(F48)
	S14= GPR[rT]=b                                              Premise(F49)

ID	S15= IR_ID.Out25_21=rS                                      IR-Out(S12)
	S16= IR_ID.Out20_16=rT                                      IR-Out(S12)
	S17= IR_ID.Out25_21=>GPR.RReg1                              Premise(F82)
	S18= GPR.RReg1=rS                                           Path(S15,S17)
	S19= GPR.Rdata1=a                                           GPR-Read(S18,S13)
	S20= IR_ID.Out20_16=>GPR.RReg2                              Premise(F83)
	S21= GPR.RReg2=rT                                           Path(S16,S20)
	S22= GPR.Rdata2=b                                           GPR-Read(S21,S14)
	S23= GPR.Rdata1=>FU.InID1                                   Premise(F85)
	S24= FU.InID1=a                                             Path(S19,S23)
	S25= FU.OutID1=FU(a)                                        FU-Forward(S24)
	S26= FU.OutID1=>A_EX.In                                     Premise(F87)
	S27= A_EX.In=FU(a)                                          Path(S25,S26)
	S28= GPR.Rdata2=>FU.InID2                                   Premise(F88)
	S29= FU.InID2=b                                             Path(S22,S28)
	S30= FU.OutID2=FU(b)                                        FU-Forward(S29)
	S31= FU.OutID2=>B_EX.In                                     Premise(F90)
	S32= B_EX.In=FU(b)                                          Path(S30,S31)
	S33= CtrlPC=0                                               Premise(F99)
	S34= CtrlPCInc=0                                            Premise(F100)
	S35= PC[Out]=addr+4                                         PC-Hold(S10,S33,S34)
	S36= CtrlA_EX=1                                             Premise(F109)
	S37= [A_EX]=FU(a)                                           A_EX-Write(S27,S36)
	S38= CtrlB_EX=1                                             Premise(F110)
	S39= [B_EX]=FU(b)                                           B_EX-Write(S32,S38)

EX	S40= A_EX.Out=FU(a)                                         A_EX-Out(S37)
	S41= B_EX.Out=FU(b)                                         B_EX-Out(S39)
	S42= A_EX.Out=>MDU.A                                        Premise(F127)
	S43= MDU.A=FU(a)                                            Path(S40,S42)
	S44= B_EX.Out=>MDU.B                                        Premise(F128)
	S45= MDU.B=FU(b)                                            Path(S41,S44)
	S46= MDU.lo=FU(a)÷FU(b)                                     MDU(S43,S45)
	S47= MDU.hi=FU(a)%FU(b)                                     MDU(S43,S45)
	S48= MDU.hi=>Hi.In                                          Premise(F130)
	S49= Hi.In=FU(a)%FU(b)                                      Path(S47,S48)
	S50= MDU.lo=>Lo.In                                          Premise(F131)
	S51= Lo.In=FU(a)÷FU(b)                                      Path(S46,S50)
	S52= CtrlPC=0                                               Premise(F139)
	S53= CtrlPCInc=0                                            Premise(F140)
	S54= PC[Out]=addr+4                                         PC-Hold(S35,S52,S53)
	S55= CtrlHi=1                                               Premise(F152)
	S56= [Hi]=FU(a)%FU(b)                                       Hi-Write(S49,S55)
	S57= CtrlLo=1                                               Premise(F153)
	S58= [Lo]=FU(a)÷FU(b)                                       Lo-Write(S51,S57)

MEM	S59= CtrlPC=0                                               Premise(F181)
	S60= CtrlPCInc=0                                            Premise(F182)
	S61= PC[Out]=addr+4                                         PC-Hold(S54,S59,S60)
	S62= CtrlHi=0                                               Premise(F194)
	S63= [Hi]=FU(a)%FU(b)                                       Hi-Hold(S56,S62)
	S64= CtrlLo=0                                               Premise(F195)
	S65= [Lo]=FU(a)÷FU(b)                                       Lo-Hold(S58,S64)

WB	S66= CtrlPC=0                                               Premise(F286)
	S67= CtrlPCInc=0                                            Premise(F287)
	S68= PC[Out]=addr+4                                         PC-Hold(S61,S66,S67)
	S69= CtrlHi=0                                               Premise(F299)
	S70= [Hi]=FU(a)%FU(b)                                       Hi-Hold(S63,S69)
	S71= CtrlLo=0                                               Premise(F300)
	S72= [Lo]=FU(a)÷FU(b)                                       Lo-Hold(S65,S71)

POST	S68= PC[Out]=addr+4                                         PC-Hold(S61,S66,S67)
	S70= [Hi]=FU(a)%FU(b)                                       Hi-Hold(S63,S69)
	S72= [Lo]=FU(a)÷FU(b)                                       Lo-Hold(S65,S71)

