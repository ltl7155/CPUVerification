
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={28,rS,rT,rD,0,32}                     Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= CP0.ASID=>IMMU.PID                                      Premise(F3)
	S6= IMMU.PID=pid                                            Path(S3,S5)
	S7= PC.Out=>IMMU.IEA                                        Premise(F4)
	S8= IMMU.IEA=addr                                           Path(S4,S7)
	S9= IMMU.Addr={pid,addr}                                    IMMU-Search(S6,S8)
	S10= IMMU.Addr=>IAddrReg.In                                 Premise(F5)
	S11= IAddrReg.In={pid,addr}                                 Path(S9,S10)
	S12= CtrlPC=0                                               Premise(F24)
	S13= CtrlPCInc=0                                            Premise(F25)
	S14= PC[Out]=addr                                           PC-Hold(S1,S12,S13)
	S15= CtrlIAddrReg=1                                         Premise(F26)
	S16= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S11,S15)
	S17= CtrlIMem=0                                             Premise(F31)
	S18= IMem[{pid,addr}]={28,rS,rT,rD,0,32}                    IMem-Hold(S2,S17)
	S19= GPR[rS]=a                                              Premise(F42)

IF(IMMU)	S20= PC.Out=addr                                            PC-Out(S14)
	S21= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S16)
	S22= IAddrReg.Out=>IMem.RAddr                               Premise(F46)
	S23= IMem.RAddr={pid,addr}                                  Path(S21,S22)
	S24= IMem.Out={28,rS,rT,rD,0,32}                            IMem-Read(S23,S18)
	S25= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S23,S18)
	S26= IMem.Out=>IRMux.MemData                                Premise(F47)
	S27= IRMux.MemData={28,rS,rT,rD,0,32}                       Path(S24,S26)
	S28= IRMux.Out={28,rS,rT,rD,0,32}                           IRMux-Select2(S27)
	S29= IRMux.Out=>IR_ID.In                                    Premise(F51)
	S30= IR_ID.In={28,rS,rT,rD,0,32}                            Path(S28,S29)
	S31= IMem.MEM8WordOut=>ICache.WData                         Premise(F52)
	S32= ICache.WData=IMemGet8Word({pid,addr})                  Path(S25,S31)
	S33= PC.Out=>ICache.IEA                                     Premise(F53)
	S34= ICache.IEA=addr                                        Path(S20,S33)
	S35= CtrlPC=0                                               Premise(F61)
	S36= CtrlPCInc=1                                            Premise(F62)
	S37= PC[Out]=addr+4                                         PC-Inc(S14,S35,S36)
	S38= CtrlICache=1                                           Premise(F64)
	S39= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S34,S32,S38)
	S40= CtrlIR_ID=1                                            Premise(F67)
	S41= [IR_ID]={28,rS,rT,rD,0,32}                             IR_ID-Write(S30,S40)
	S42= CtrlGPR=0                                              Premise(F70)
	S43= GPR[rS]=a                                              GPR-Hold(S19,S42)

ID	S44= IR_ID.Out={28,rS,rT,rD,0,32}                           IR-Out(S41)
	S45= IR_ID.Out25_21=rS                                      IR-Out(S41)
	S46= IR_ID.Out25_21=>GPR.RReg1                              Premise(F83)
	S47= GPR.RReg1=rS                                           Path(S45,S46)
	S48= GPR.Rdata1=a                                           GPR-Read(S47,S43)
	S49= GPR.Rdata1=>FU.InID1                                   Premise(F85)
	S50= FU.InID1=a                                             Path(S48,S49)
	S51= FU.OutID1=FU(a)                                        FU-Forward(S50)
	S52= FU.OutID1=>A_EX.In                                     Premise(F87)
	S53= A_EX.In=FU(a)                                          Path(S51,S52)
	S54= IR_ID.Out=>IR_EX.In                                    Premise(F88)
	S55= IR_EX.In={28,rS,rT,rD,0,32}                            Path(S44,S54)
	S56= CtrlPC=0                                               Premise(F97)
	S57= CtrlPCInc=0                                            Premise(F98)
	S58= PC[Out]=addr+4                                         PC-Hold(S37,S56,S57)
	S59= CtrlICache=0                                           Premise(F100)
	S60= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S39,S59)
	S61= CtrlA_EX=1                                             Premise(F107)
	S62= [A_EX]=FU(a)                                           A_EX-Write(S53,S61)
	S63= CtrlIR_EX=1                                            Premise(F108)
	S64= [IR_EX]={28,rS,rT,rD,0,32}                             IR_EX-Write(S55,S63)

EX	S65= A_EX.Out=FU(a)                                         A_EX-Out(S62)
	S66= IR_EX.Out15_11=rD                                      IR_EX-Out(S64)
	S67= A_EX.Out=>CountUnit.In                                 Premise(F120)
	S68= CountUnit.In=FU(a)                                     Path(S65,S67)
	S69= CountUnit.Out=Count0(FU(a))                            CountUnit_Count0(S68)
	S70= CountUnit.Out=>GPR.WData                               Premise(F122)
	S71= GPR.WData=Count0(FU(a))                                Path(S69,S70)
	S72= IR_EX.Out15_11=>GPR.WReg                               Premise(F125)
	S73= GPR.WReg=rD                                            Path(S66,S72)
	S74= CtrlPC=0                                               Premise(F132)
	S75= CtrlPCInc=0                                            Premise(F133)
	S76= PC[Out]=addr+4                                         PC-Hold(S58,S74,S75)
	S77= CtrlICache=0                                           Premise(F135)
	S78= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S60,S77)
	S79= CtrlGPR=1                                              Premise(F141)
	S80= GPR[rD]=Count0(FU(a))                                  GPR-Write(S73,S71,S79)

MEM	S81= CtrlPC=0                                               Premise(F168)
	S82= CtrlPCInc=0                                            Premise(F169)
	S83= PC[Out]=addr+4                                         PC-Hold(S76,S81,S82)
	S84= CtrlICache=0                                           Premise(F171)
	S85= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S78,S84)
	S86= CtrlGPR=0                                              Premise(F177)
	S87= GPR[rD]=Count0(FU(a))                                  GPR-Hold(S80,S86)

WB	S88= CtrlPC=0                                               Premise(F258)
	S89= CtrlPCInc=0                                            Premise(F259)
	S90= PC[Out]=addr+4                                         PC-Hold(S83,S88,S89)
	S91= CtrlICache=0                                           Premise(F261)
	S92= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S85,S91)
	S93= CtrlGPR=0                                              Premise(F267)
	S94= GPR[rD]=Count0(FU(a))                                  GPR-Hold(S87,S93)

POST	S90= PC[Out]=addr+4                                         PC-Hold(S83,S88,S89)
	S92= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S85,S91)
	S94= GPR[rD]=Count0(FU(a))                                  GPR-Hold(S87,S93)

