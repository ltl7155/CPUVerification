
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,0,1489}                      Premise(F2)
	S3= ICache[addr]={31,rT,rA,0,1489}                          Premise(F3)
	S4= GPRegs[rA]=a                                            Premise(F4)
	S5= XER[CA]=ca                                              Premise(F5)
	S6= XER[SO]=so                                              Premise(F6)

IF	S7= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S8= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S9= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S10= PC.Out=addr                                            PC-Out(S1)
	S11= XER.CAOut=ca                                           XER-CA-Out(S5)
	S12= XER.SOOut=so                                           XER-SO-Out(S6)
	S13= PIDReg.Out=>IMMU.PID                                   Premise(F7)
	S14= IMMU.PID=pid                                           Path(S7,S13)
	S15= PC.Out=>IMMU.IEA                                       Premise(F8)
	S16= IMMU.IEA=addr                                          Path(S10,S15)
	S17= IMMU.Addr={pid,addr}                                   IMMU-Search(S14,S16)
	S18= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S14,S16)
	S19= IMMU.Addr=>IAddrReg.In                                 Premise(F9)
	S20= IAddrReg.In={pid,addr}                                 Path(S17,S19)
	S21= IMMU.Hit=>IMMUHitReg.In                                Premise(F10)
	S22= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S18,S21)
	S23= PC.Out=>ICache.IEA                                     Premise(F11)
	S24= ICache.IEA=addr                                        Path(S10,S23)
	S25= ICache.Hit=ICacheHit(addr)                             ICache-Search(S24)
	S26= ICache.Out={31,rT,rA,0,1489}                           ICache-Search(S24,S3)
	S27= ICache.Out=>ICacheReg.In                               Premise(F12)
	S28= ICacheReg.In={31,rT,rA,0,1489}                         Path(S26,S27)
	S29= ICache.Hit=>ICacheHitReg.In                            Premise(F13)
	S30= ICacheHitReg.In=ICacheHit(addr)                        Path(S25,S29)
	S31= IMMUHitReg.Out=>CU.IMemHit                             Premise(F14)
	S32= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F15)
	S33= IAddrReg.Out=>IMem.RAddr                               Premise(F16)
	S34= IMem.Out=>IRMux.MemData                                Premise(F17)
	S35= ICacheReg.Out=>IRMux.CacheData                         Premise(F18)
	S36= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F19)
	S37= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F20)
	S38= IRMux.Out=>IR.In                                       Premise(F21)
	S39= IMem.MEM8WordOut=>ICache.WData                         Premise(F22)
	S40= PC.Out=>ICache.IEA                                     Premise(F23)
	S41= IR.Out0_5=>CU.Op                                       Premise(F24)
	S42= IR.Out11_15=>GPRegs.RReg1                              Premise(F25)
	S43= IR.Out21_31=>CU.IRFunc                                 Premise(F26)
	S44= GPRegs.Rdata1=>A.In                                    Premise(F27)
	S45= A.Out=>ALU.A                                           Premise(F28)
	S46= B.Out=>ALU.B                                           Premise(F29)
	S47= XER.CAOut=>ALU.CAIn                                    Premise(F30)
	S48= ALU.CAIn=ca                                            Path(S11,S47)
	S49= CU.Func=>ALU.Func                                      Premise(F31)
	S50= ALU.Out=>ALUOut.In                                     Premise(F32)
	S51= ALU.CA=>CAReg.In                                       Premise(F33)
	S52= ALU.CMP=>DataCmb.A                                     Premise(F34)
	S53= ORGate.Out=>DataCmb.B                                  Premise(F35)
	S54= ALU.OV=>OVReg.In                                       Premise(F36)
	S55= XER.SOOut=>ORGate.A                                    Premise(F37)
	S56= ORGate.A=so                                            Path(S12,S55)
	S57= ALU.OV=>ORGate.B                                       Premise(F38)
	S58= ORGate.Out=>DR1bit.In                                  Premise(F39)
	S59= DataCmb.Out=>DR4bit.In                                 Premise(F40)
	S60= IR.Out6_10=>GPRegs.WReg                                Premise(F41)
	S61= ALUOut.Out=>GPRegs.WData                               Premise(F42)
	S62= DR4bit.Out=>CRRegs.CR0In                               Premise(F43)
	S63= DR1bit.Out=>XER.SOIn                                   Premise(F44)
	S64= CAReg.Out=>XER.CAIn                                    Premise(F45)
	S65= OVReg.Out=>XER.OVIn                                    Premise(F46)
	S66= CtrlPIDReg=0                                           Premise(F47)
	S67= [PIDReg]=pid                                           PIDReg-Hold(S0,S66)
	S68= CtrlIMMU=0                                             Premise(F48)
	S69= CtrlPC=0                                               Premise(F49)
	S70= CtrlPCInc=0                                            Premise(F50)
	S71= PC[Out]=addr                                           PC-Hold(S1,S69,S70)
	S72= CtrlIAddrReg=1                                         Premise(F51)
	S73= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S20,S72)
	S74= CtrlIMMUHitReg=1                                       Premise(F52)
	S75= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S22,S74)
	S76= CtrlICache=0                                           Premise(F53)
	S77= ICache[addr]={31,rT,rA,0,1489}                         ICache-Hold(S3,S76)
	S78= CtrlICacheReg=1                                        Premise(F54)
	S79= [ICacheReg]={31,rT,rA,0,1489}                          ICacheReg-Write(S28,S78)
	S80= CtrlICacheHitReg=1                                     Premise(F55)
	S81= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S30,S80)
	S82= CtrlIMem=0                                             Premise(F56)
	S83= IMem[{pid,addr}]={31,rT,rA,0,1489}                     IMem-Hold(S2,S82)
	S84= CtrlIRMux=0                                            Premise(F57)
	S85= CtrlIR=0                                               Premise(F58)
	S86= CtrlGPRegs=0                                           Premise(F59)
	S87= GPRegs[rA]=a                                           GPRegs-Hold(S4,S86)
	S88= CtrlA=0                                                Premise(F60)
	S89= CtrlB=0                                                Premise(F61)
	S90= CtrlXERSO=0                                            Premise(F62)
	S91= XER[SO]=so                                             XER-SO-Hold(S6,S90)
	S92= CtrlXEROV=0                                            Premise(F63)
	S93= CtrlXERCA=0                                            Premise(F64)
	S94= XER[CA]=ca                                             XER-CA-Hold(S5,S93)
	S95= CtrlALUOut=0                                           Premise(F65)
	S96= CtrlCAReg=0                                            Premise(F66)
	S97= CtrlOVReg=0                                            Premise(F67)
	S98= CtrlDR1bit=0                                           Premise(F68)
	S99= CtrlDR4bit=0                                           Premise(F69)
	S100= CtrlCRRegs=0                                          Premise(F70)
	S101= CtrlCRRegsCR0=0                                       Premise(F71)
	S102= CtrlCRRegsW4bitRegs=0                                 Premise(F72)
	S103= CtrlCRRegsW1bitRegs=0                                 Premise(F73)

IMMU	S104= PIDReg.Out=pid                                        PIDReg-Out(S67)
	S105= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S67)
	S106= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S67)
	S107= PC.Out=addr                                           PC-Out(S71)
	S108= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S73)
	S109= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S73)
	S110= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S73)
	S111= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S75)
	S112= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S75)
	S113= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S75)
	S114= ICacheReg.Out={31,rT,rA,0,1489}                       ICacheReg-Out(S79)
	S115= ICacheReg.Out26_31={31,rT,rA,0,1489}[26:31]           ICacheReg-Out(S79)
	S116= ICacheReg.Out30_31={31,rT,rA,0,1489}[30:31]           ICacheReg-Out(S79)
	S117= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S81)
	S118= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S81)
	S119= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S81)
	S120= XER.SOOut=so                                          XER-SO-Out(S91)
	S121= XER.CAOut=ca                                          XER-CA-Out(S94)
	S122= PIDReg.Out=>IMMU.PID                                  Premise(F74)
	S123= IMMU.PID=pid                                          Path(S104,S122)
	S124= PC.Out=>IMMU.IEA                                      Premise(F75)
	S125= IMMU.IEA=addr                                         Path(S107,S124)
	S126= IMMU.Addr={pid,addr}                                  IMMU-Search(S123,S125)
	S127= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S123,S125)
	S128= IMMU.Addr=>IAddrReg.In                                Premise(F76)
	S129= IAddrReg.In={pid,addr}                                Path(S126,S128)
	S130= IMMU.Hit=>IMMUHitReg.In                               Premise(F77)
	S131= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S127,S130)
	S132= PC.Out=>ICache.IEA                                    Premise(F78)
	S133= ICache.IEA=addr                                       Path(S107,S132)
	S134= ICache.Hit=ICacheHit(addr)                            ICache-Search(S133)
	S135= ICache.Out={31,rT,rA,0,1489}                          ICache-Search(S133,S77)
	S136= ICache.Out=>ICacheReg.In                              Premise(F79)
	S137= ICacheReg.In={31,rT,rA,0,1489}                        Path(S135,S136)
	S138= ICache.Hit=>ICacheHitReg.In                           Premise(F80)
	S139= ICacheHitReg.In=ICacheHit(addr)                       Path(S134,S138)
	S140= IMMUHitReg.Out=>CU.IMemHit                            Premise(F81)
	S141= CU.IMemHit=IMMUHit(pid,addr)                          Path(S111,S140)
	S142= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F82)
	S143= CU.ICacheHit=ICacheHit(addr)                          Path(S117,S142)
	S144= IAddrReg.Out=>IMem.RAddr                              Premise(F83)
	S145= IMem.RAddr={pid,addr}                                 Path(S108,S144)
	S146= IMem.Out={31,rT,rA,0,1489}                            IMem-Read(S145,S83)
	S147= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S145,S83)
	S148= IMem.Out=>IRMux.MemData                               Premise(F84)
	S149= IRMux.MemData={31,rT,rA,0,1489}                       Path(S146,S148)
	S150= ICacheReg.Out=>IRMux.CacheData                        Premise(F85)
	S151= IRMux.CacheData={31,rT,rA,0,1489}                     Path(S114,S150)
	S152= IRMux.Out={31,rT,rA,0,1489}                           IRMux-Select(S149,S151)
	S153= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F86)
	S154= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S111,S153)
	S155= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F87)
	S156= IRMux.CacheSel=ICacheHit(addr)                        Path(S117,S155)
	S157= IRMux.Out=>IR.In                                      Premise(F88)
	S158= IR.In={31,rT,rA,0,1489}                               Path(S152,S157)
	S159= IMem.MEM8WordOut=>ICache.WData                        Premise(F89)
	S160= ICache.WData=IMemGet8Word({pid,addr})                 Path(S147,S159)
	S161= PC.Out=>ICache.IEA                                    Premise(F90)
	S162= IR.Out0_5=>CU.Op                                      Premise(F91)
	S163= IR.Out11_15=>GPRegs.RReg1                             Premise(F92)
	S164= IR.Out21_31=>CU.IRFunc                                Premise(F93)
	S165= GPRegs.Rdata1=>A.In                                   Premise(F94)
	S166= A.Out=>ALU.A                                          Premise(F95)
	S167= B.Out=>ALU.B                                          Premise(F96)
	S168= XER.CAOut=>ALU.CAIn                                   Premise(F97)
	S169= ALU.CAIn=ca                                           Path(S121,S168)
	S170= CU.Func=>ALU.Func                                     Premise(F98)
	S171= ALU.Out=>ALUOut.In                                    Premise(F99)
	S172= ALU.CA=>CAReg.In                                      Premise(F100)
	S173= ALU.CMP=>DataCmb.A                                    Premise(F101)
	S174= ORGate.Out=>DataCmb.B                                 Premise(F102)
	S175= ALU.OV=>OVReg.In                                      Premise(F103)
	S176= XER.SOOut=>ORGate.A                                   Premise(F104)
	S177= ORGate.A=so                                           Path(S120,S176)
	S178= ALU.OV=>ORGate.B                                      Premise(F105)
	S179= ORGate.Out=>DR1bit.In                                 Premise(F106)
	S180= DataCmb.Out=>DR4bit.In                                Premise(F107)
	S181= IR.Out6_10=>GPRegs.WReg                               Premise(F108)
	S182= ALUOut.Out=>GPRegs.WData                              Premise(F109)
	S183= DR4bit.Out=>CRRegs.CR0In                              Premise(F110)
	S184= DR1bit.Out=>XER.SOIn                                  Premise(F111)
	S185= CAReg.Out=>XER.CAIn                                   Premise(F112)
	S186= OVReg.Out=>XER.OVIn                                   Premise(F113)
	S187= CtrlPIDReg=0                                          Premise(F114)
	S188= [PIDReg]=pid                                          PIDReg-Hold(S67,S187)
	S189= CtrlIMMU=0                                            Premise(F115)
	S190= CtrlPC=0                                              Premise(F116)
	S191= CtrlPCInc=1                                           Premise(F117)
	S192= PC[Out]=addr+4                                        PC-Inc(S71,S190,S191)
	S193= PC[CIA]=addr                                          PC-Inc(S71,S190,S191)
	S194= CtrlIAddrReg=0                                        Premise(F118)
	S195= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S73,S194)
	S196= CtrlIMMUHitReg=0                                      Premise(F119)
	S197= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S75,S196)
	S198= CtrlICache=0                                          Premise(F120)
	S199= ICache[addr]={31,rT,rA,0,1489}                        ICache-Hold(S77,S198)
	S200= CtrlICacheReg=0                                       Premise(F121)
	S201= [ICacheReg]={31,rT,rA,0,1489}                         ICacheReg-Hold(S79,S200)
	S202= CtrlICacheHitReg=0                                    Premise(F122)
	S203= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S81,S202)
	S204= CtrlIMem=0                                            Premise(F123)
	S205= IMem[{pid,addr}]={31,rT,rA,0,1489}                    IMem-Hold(S83,S204)
	S206= CtrlIRMux=0                                           Premise(F124)
	S207= CtrlIR=1                                              Premise(F125)
	S208= [IR]={31,rT,rA,0,1489}                                IR-Write(S158,S207)
	S209= CtrlGPRegs=0                                          Premise(F126)
	S210= GPRegs[rA]=a                                          GPRegs-Hold(S87,S209)
	S211= CtrlA=0                                               Premise(F127)
	S212= CtrlB=0                                               Premise(F128)
	S213= CtrlXERSO=0                                           Premise(F129)
	S214= XER[SO]=so                                            XER-SO-Hold(S91,S213)
	S215= CtrlXEROV=0                                           Premise(F130)
	S216= CtrlXERCA=0                                           Premise(F131)
	S217= XER[CA]=ca                                            XER-CA-Hold(S94,S216)
	S218= CtrlALUOut=0                                          Premise(F132)
	S219= CtrlCAReg=0                                           Premise(F133)
	S220= CtrlOVReg=0                                           Premise(F134)
	S221= CtrlDR1bit=0                                          Premise(F135)
	S222= CtrlDR4bit=0                                          Premise(F136)
	S223= CtrlCRRegs=0                                          Premise(F137)
	S224= CtrlCRRegsCR0=0                                       Premise(F138)
	S225= CtrlCRRegsW4bitRegs=0                                 Premise(F139)
	S226= CtrlCRRegsW1bitRegs=0                                 Premise(F140)

ID	S227= PIDReg.Out=pid                                        PIDReg-Out(S188)
	S228= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S188)
	S229= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S188)
	S230= PC.Out=addr+4                                         PC-Out(S192)
	S231= PC.CIA=addr                                           PC-Out(S193)
	S232= PC.CIA31_28=addr[31:28]                               PC-Out(S193)
	S233= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S195)
	S234= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S195)
	S235= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S195)
	S236= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S197)
	S237= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S197)
	S238= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S197)
	S239= ICacheReg.Out={31,rT,rA,0,1489}                       ICacheReg-Out(S201)
	S240= ICacheReg.Out26_31={31,rT,rA,0,1489}[26:31]           ICacheReg-Out(S201)
	S241= ICacheReg.Out30_31={31,rT,rA,0,1489}[30:31]           ICacheReg-Out(S201)
	S242= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S203)
	S243= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S203)
	S244= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S203)
	S245= IR.Out0_5=31                                          IR-Out(S208)
	S246= IR.Out6_10=rT                                         IR-Out(S208)
	S247= IR.Out11_15=rA                                        IR-Out(S208)
	S248= IR.Out16_20=0                                         IR-Out(S208)
	S249= IR.Out21_31=1489                                      IR-Out(S208)
	S250= XER.SOOut=so                                          XER-SO-Out(S214)
	S251= XER.CAOut=ca                                          XER-CA-Out(S217)
	S252= PIDReg.Out=>IMMU.PID                                  Premise(F141)
	S253= IMMU.PID=pid                                          Path(S227,S252)
	S254= PC.Out=>IMMU.IEA                                      Premise(F142)
	S255= IMMU.IEA=addr+4                                       Path(S230,S254)
	S256= IMMU.Addr={pid,addr+4}                                IMMU-Search(S253,S255)
	S257= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S253,S255)
	S258= IMMU.Addr=>IAddrReg.In                                Premise(F143)
	S259= IAddrReg.In={pid,addr+4}                              Path(S256,S258)
	S260= IMMU.Hit=>IMMUHitReg.In                               Premise(F144)
	S261= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S257,S260)
	S262= PC.Out=>ICache.IEA                                    Premise(F145)
	S263= ICache.IEA=addr+4                                     Path(S230,S262)
	S264= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S263)
	S265= ICache.Out=>ICacheReg.In                              Premise(F146)
	S266= ICache.Hit=>ICacheHitReg.In                           Premise(F147)
	S267= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S264,S266)
	S268= IMMUHitReg.Out=>CU.IMemHit                            Premise(F148)
	S269= CU.IMemHit=IMMUHit(pid,addr)                          Path(S236,S268)
	S270= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F149)
	S271= CU.ICacheHit=ICacheHit(addr)                          Path(S242,S270)
	S272= IAddrReg.Out=>IMem.RAddr                              Premise(F150)
	S273= IMem.RAddr={pid,addr}                                 Path(S233,S272)
	S274= IMem.Out={31,rT,rA,0,1489}                            IMem-Read(S273,S205)
	S275= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S273,S205)
	S276= IMem.Out=>IRMux.MemData                               Premise(F151)
	S277= IRMux.MemData={31,rT,rA,0,1489}                       Path(S274,S276)
	S278= ICacheReg.Out=>IRMux.CacheData                        Premise(F152)
	S279= IRMux.CacheData={31,rT,rA,0,1489}                     Path(S239,S278)
	S280= IRMux.Out={31,rT,rA,0,1489}                           IRMux-Select(S277,S279)
	S281= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F153)
	S282= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S236,S281)
	S283= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F154)
	S284= IRMux.CacheSel=ICacheHit(addr)                        Path(S242,S283)
	S285= IRMux.Out=>IR.In                                      Premise(F155)
	S286= IR.In={31,rT,rA,0,1489}                               Path(S280,S285)
	S287= IMem.MEM8WordOut=>ICache.WData                        Premise(F156)
	S288= ICache.WData=IMemGet8Word({pid,addr})                 Path(S275,S287)
	S289= PC.Out=>ICache.IEA                                    Premise(F157)
	S290= IR.Out0_5=>CU.Op                                      Premise(F158)
	S291= CU.Op=31                                              Path(S245,S290)
	S292= IR.Out11_15=>GPRegs.RReg1                             Premise(F159)
	S293= GPRegs.RReg1=rA                                       Path(S247,S292)
	S294= GPRegs.Rdata1=a                                       GPRegs-Read(S293,S210)
	S295= IR.Out21_31=>CU.IRFunc                                Premise(F160)
	S296= CU.IRFunc=1489                                        Path(S249,S295)
	S297= CU.Func=alu_subfe                                     CU(S291,S296)
	S298= GPRegs.Rdata1=>A.In                                   Premise(F161)
	S299= A.In=a                                                Path(S294,S298)
	S300= B.In=32'hFFFFFFFF                                     Premise(F162)
	S301= A.Out=>ALU.A                                          Premise(F163)
	S302= B.Out=>ALU.B                                          Premise(F164)
	S303= XER.CAOut=>ALU.CAIn                                   Premise(F165)
	S304= ALU.CAIn=ca                                           Path(S251,S303)
	S305= CU.Func=>ALU.Func                                     Premise(F166)
	S306= ALU.Func=alu_subfe                                    Path(S297,S305)
	S307= ALU.Out=>ALUOut.In                                    Premise(F167)
	S308= ALU.CA=>CAReg.In                                      Premise(F168)
	S309= ALU.CMP=>DataCmb.A                                    Premise(F169)
	S310= ORGate.Out=>DataCmb.B                                 Premise(F170)
	S311= ALU.OV=>OVReg.In                                      Premise(F171)
	S312= XER.SOOut=>ORGate.A                                   Premise(F172)
	S313= ORGate.A=so                                           Path(S250,S312)
	S314= ALU.OV=>ORGate.B                                      Premise(F173)
	S315= ORGate.Out=>DR1bit.In                                 Premise(F174)
	S316= DataCmb.Out=>DR4bit.In                                Premise(F175)
	S317= IR.Out6_10=>GPRegs.WReg                               Premise(F176)
	S318= GPRegs.WReg=rT                                        Path(S246,S317)
	S319= ALUOut.Out=>GPRegs.WData                              Premise(F177)
	S320= DR4bit.Out=>CRRegs.CR0In                              Premise(F178)
	S321= DR1bit.Out=>XER.SOIn                                  Premise(F179)
	S322= CAReg.Out=>XER.CAIn                                   Premise(F180)
	S323= OVReg.Out=>XER.OVIn                                   Premise(F181)
	S324= CtrlPIDReg=0                                          Premise(F182)
	S325= [PIDReg]=pid                                          PIDReg-Hold(S188,S324)
	S326= CtrlIMMU=0                                            Premise(F183)
	S327= CtrlPC=0                                              Premise(F184)
	S328= CtrlPCInc=0                                           Premise(F185)
	S329= PC[CIA]=addr                                          PC-Hold(S193,S328)
	S330= PC[Out]=addr+4                                        PC-Hold(S192,S327,S328)
	S331= CtrlIAddrReg=0                                        Premise(F186)
	S332= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S195,S331)
	S333= CtrlIMMUHitReg=0                                      Premise(F187)
	S334= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S197,S333)
	S335= CtrlICache=0                                          Premise(F188)
	S336= ICache[addr]={31,rT,rA,0,1489}                        ICache-Hold(S199,S335)
	S337= CtrlICacheReg=0                                       Premise(F189)
	S338= [ICacheReg]={31,rT,rA,0,1489}                         ICacheReg-Hold(S201,S337)
	S339= CtrlICacheHitReg=0                                    Premise(F190)
	S340= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S203,S339)
	S341= CtrlIMem=0                                            Premise(F191)
	S342= IMem[{pid,addr}]={31,rT,rA,0,1489}                    IMem-Hold(S205,S341)
	S343= CtrlIRMux=0                                           Premise(F192)
	S344= CtrlIR=0                                              Premise(F193)
	S345= [IR]={31,rT,rA,0,1489}                                IR-Hold(S208,S344)
	S346= CtrlGPRegs=0                                          Premise(F194)
	S347= GPRegs[rA]=a                                          GPRegs-Hold(S210,S346)
	S348= CtrlA=1                                               Premise(F195)
	S349= [A]=a                                                 A-Write(S299,S348)
	S350= CtrlB=1                                               Premise(F196)
	S351= [B]=32'hFFFFFFFF                                      B-Write(S300,S350)
	S352= CtrlXERSO=0                                           Premise(F197)
	S353= XER[SO]=so                                            XER-SO-Hold(S214,S352)
	S354= CtrlXEROV=0                                           Premise(F198)
	S355= CtrlXERCA=0                                           Premise(F199)
	S356= XER[CA]=ca                                            XER-CA-Hold(S217,S355)
	S357= CtrlALUOut=0                                          Premise(F200)
	S358= CtrlCAReg=0                                           Premise(F201)
	S359= CtrlOVReg=0                                           Premise(F202)
	S360= CtrlDR1bit=0                                          Premise(F203)
	S361= CtrlDR4bit=0                                          Premise(F204)
	S362= CtrlCRRegs=0                                          Premise(F205)
	S363= CtrlCRRegsCR0=0                                       Premise(F206)
	S364= CtrlCRRegsW4bitRegs=0                                 Premise(F207)
	S365= CtrlCRRegsW1bitRegs=0                                 Premise(F208)

EX	S366= PIDReg.Out=pid                                        PIDReg-Out(S325)
	S367= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S325)
	S368= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S325)
	S369= PC.CIA=addr                                           PC-Out(S329)
	S370= PC.CIA31_28=addr[31:28]                               PC-Out(S329)
	S371= PC.Out=addr+4                                         PC-Out(S330)
	S372= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S332)
	S373= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S332)
	S374= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S332)
	S375= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S334)
	S376= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S334)
	S377= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S334)
	S378= ICacheReg.Out={31,rT,rA,0,1489}                       ICacheReg-Out(S338)
	S379= ICacheReg.Out26_31={31,rT,rA,0,1489}[26:31]           ICacheReg-Out(S338)
	S380= ICacheReg.Out30_31={31,rT,rA,0,1489}[30:31]           ICacheReg-Out(S338)
	S381= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S340)
	S382= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S340)
	S383= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S340)
	S384= IR.Out0_5=31                                          IR-Out(S345)
	S385= IR.Out6_10=rT                                         IR-Out(S345)
	S386= IR.Out11_15=rA                                        IR-Out(S345)
	S387= IR.Out16_20=0                                         IR-Out(S345)
	S388= IR.Out21_31=1489                                      IR-Out(S345)
	S389= A.Out=a                                               A-Out(S349)
	S390= A.Out26_31=a[26:31]                                   A-Out(S349)
	S391= A.Out30_31=a[30:31]                                   A-Out(S349)
	S392= B.Out=32'hFFFFFFFF                                    B-Out(S351)
	S393= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S351)
	S394= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S351)
	S395= XER.SOOut=so                                          XER-SO-Out(S353)
	S396= XER.CAOut=ca                                          XER-CA-Out(S356)
	S397= PIDReg.Out=>IMMU.PID                                  Premise(F209)
	S398= IMMU.PID=pid                                          Path(S366,S397)
	S399= PC.Out=>IMMU.IEA                                      Premise(F210)
	S400= IMMU.IEA=addr+4                                       Path(S371,S399)
	S401= IMMU.Addr={pid,addr+4}                                IMMU-Search(S398,S400)
	S402= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S398,S400)
	S403= IMMU.Addr=>IAddrReg.In                                Premise(F211)
	S404= IAddrReg.In={pid,addr+4}                              Path(S401,S403)
	S405= IMMU.Hit=>IMMUHitReg.In                               Premise(F212)
	S406= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S402,S405)
	S407= PC.Out=>ICache.IEA                                    Premise(F213)
	S408= ICache.IEA=addr+4                                     Path(S371,S407)
	S409= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S408)
	S410= ICache.Out=>ICacheReg.In                              Premise(F214)
	S411= ICache.Hit=>ICacheHitReg.In                           Premise(F215)
	S412= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S409,S411)
	S413= IMMUHitReg.Out=>CU.IMemHit                            Premise(F216)
	S414= CU.IMemHit=IMMUHit(pid,addr)                          Path(S375,S413)
	S415= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F217)
	S416= CU.ICacheHit=ICacheHit(addr)                          Path(S381,S415)
	S417= IAddrReg.Out=>IMem.RAddr                              Premise(F218)
	S418= IMem.RAddr={pid,addr}                                 Path(S372,S417)
	S419= IMem.Out={31,rT,rA,0,1489}                            IMem-Read(S418,S342)
	S420= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S418,S342)
	S421= IMem.Out=>IRMux.MemData                               Premise(F219)
	S422= IRMux.MemData={31,rT,rA,0,1489}                       Path(S419,S421)
	S423= ICacheReg.Out=>IRMux.CacheData                        Premise(F220)
	S424= IRMux.CacheData={31,rT,rA,0,1489}                     Path(S378,S423)
	S425= IRMux.Out={31,rT,rA,0,1489}                           IRMux-Select(S422,S424)
	S426= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F221)
	S427= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S375,S426)
	S428= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F222)
	S429= IRMux.CacheSel=ICacheHit(addr)                        Path(S381,S428)
	S430= IRMux.Out=>IR.In                                      Premise(F223)
	S431= IR.In={31,rT,rA,0,1489}                               Path(S425,S430)
	S432= IMem.MEM8WordOut=>ICache.WData                        Premise(F224)
	S433= ICache.WData=IMemGet8Word({pid,addr})                 Path(S420,S432)
	S434= PC.Out=>ICache.IEA                                    Premise(F225)
	S435= IR.Out0_5=>CU.Op                                      Premise(F226)
	S436= CU.Op=31                                              Path(S384,S435)
	S437= IR.Out11_15=>GPRegs.RReg1                             Premise(F227)
	S438= GPRegs.RReg1=rA                                       Path(S386,S437)
	S439= GPRegs.Rdata1=a                                       GPRegs-Read(S438,S347)
	S440= IR.Out21_31=>CU.IRFunc                                Premise(F228)
	S441= CU.IRFunc=1489                                        Path(S388,S440)
	S442= CU.Func=alu_subfe                                     CU(S436,S441)
	S443= GPRegs.Rdata1=>A.In                                   Premise(F229)
	S444= A.In=a                                                Path(S439,S443)
	S445= A.Out=>ALU.A                                          Premise(F230)
	S446= ALU.A=a                                               Path(S389,S445)
	S447= B.Out=>ALU.B                                          Premise(F231)
	S448= ALU.B=32'hFFFFFFFF                                    Path(S392,S447)
	S449= XER.CAOut=>ALU.CAIn                                   Premise(F232)
	S450= ALU.CAIn=ca                                           Path(S396,S449)
	S451= CU.Func=>ALU.Func                                     Premise(F233)
	S452= ALU.Func=alu_subfe                                    Path(S442,S451)
	S453= ALU.Out=32'hFFFFFFFF-a+ca                             ALU(S446,S448,S450)
	S454= ALU.CMP=Compare0(32'hFFFFFFFF-a+ca)                   ALU(S446,S448,S450)
	S455= ALU.OV=OverFlow(32'hFFFFFFFF-a+ca)                    ALU(S446,S448,S450)
	S456= ALU.CA=Carry(32'hFFFFFFFF-a+ca)                       ALU(S446,S448,S450)
	S457= ALU.Out=>ALUOut.In                                    Premise(F234)
	S458= ALUOut.In=32'hFFFFFFFF-a+ca                           Path(S453,S457)
	S459= ALU.CA=>CAReg.In                                      Premise(F235)
	S460= CAReg.In=Carry(32'hFFFFFFFF-a+ca)                     Path(S456,S459)
	S461= ALU.CMP=>DataCmb.A                                    Premise(F236)
	S462= DataCmb.A=Compare0(32'hFFFFFFFF-a+ca)                 Path(S454,S461)
	S463= ORGate.Out=>DataCmb.B                                 Premise(F237)
	S464= ALU.OV=>OVReg.In                                      Premise(F238)
	S465= OVReg.In=OverFlow(32'hFFFFFFFF-a+ca)                  Path(S455,S464)
	S466= XER.SOOut=>ORGate.A                                   Premise(F239)
	S467= ORGate.A=so                                           Path(S395,S466)
	S468= ALU.OV=>ORGate.B                                      Premise(F240)
	S469= ORGate.B=OverFlow(32'hFFFFFFFF-a+ca)                  Path(S455,S468)
	S470= ORGate.Out=so|OverFlow(32'hFFFFFFFF-a+ca)             ORGate(S467,S469)
	S471= DataCmb.B=so|OverFlow(32'hFFFFFFFF-a+ca)              Path(S470,S463)
	S472= DataCmb.Out={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DataCmb(S462,S471)
	S473= ORGate.Out=>DR1bit.In                                 Premise(F241)
	S474= DR1bit.In=so|OverFlow(32'hFFFFFFFF-a+ca)              Path(S470,S473)
	S475= DataCmb.Out=>DR4bit.In                                Premise(F242)
	S476= DR4bit.In={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}Path(S472,S475)
	S477= IR.Out6_10=>GPRegs.WReg                               Premise(F243)
	S478= GPRegs.WReg=rT                                        Path(S385,S477)
	S479= ALUOut.Out=>GPRegs.WData                              Premise(F244)
	S480= DR4bit.Out=>CRRegs.CR0In                              Premise(F245)
	S481= DR1bit.Out=>XER.SOIn                                  Premise(F246)
	S482= CAReg.Out=>XER.CAIn                                   Premise(F247)
	S483= OVReg.Out=>XER.OVIn                                   Premise(F248)
	S484= CtrlPIDReg=0                                          Premise(F249)
	S485= [PIDReg]=pid                                          PIDReg-Hold(S325,S484)
	S486= CtrlIMMU=0                                            Premise(F250)
	S487= CtrlPC=0                                              Premise(F251)
	S488= CtrlPCInc=0                                           Premise(F252)
	S489= PC[CIA]=addr                                          PC-Hold(S329,S488)
	S490= PC[Out]=addr+4                                        PC-Hold(S330,S487,S488)
	S491= CtrlIAddrReg=0                                        Premise(F253)
	S492= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S332,S491)
	S493= CtrlIMMUHitReg=0                                      Premise(F254)
	S494= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S334,S493)
	S495= CtrlICache=0                                          Premise(F255)
	S496= ICache[addr]={31,rT,rA,0,1489}                        ICache-Hold(S336,S495)
	S497= CtrlICacheReg=0                                       Premise(F256)
	S498= [ICacheReg]={31,rT,rA,0,1489}                         ICacheReg-Hold(S338,S497)
	S499= CtrlICacheHitReg=0                                    Premise(F257)
	S500= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S340,S499)
	S501= CtrlIMem=0                                            Premise(F258)
	S502= IMem[{pid,addr}]={31,rT,rA,0,1489}                    IMem-Hold(S342,S501)
	S503= CtrlIRMux=0                                           Premise(F259)
	S504= CtrlIR=0                                              Premise(F260)
	S505= [IR]={31,rT,rA,0,1489}                                IR-Hold(S345,S504)
	S506= CtrlGPRegs=0                                          Premise(F261)
	S507= GPRegs[rA]=a                                          GPRegs-Hold(S347,S506)
	S508= CtrlA=0                                               Premise(F262)
	S509= [A]=a                                                 A-Hold(S349,S508)
	S510= CtrlB=0                                               Premise(F263)
	S511= [B]=32'hFFFFFFFF                                      B-Hold(S351,S510)
	S512= CtrlXERSO=0                                           Premise(F264)
	S513= XER[SO]=so                                            XER-SO-Hold(S353,S512)
	S514= CtrlXEROV=0                                           Premise(F265)
	S515= CtrlXERCA=0                                           Premise(F266)
	S516= XER[CA]=ca                                            XER-CA-Hold(S356,S515)
	S517= CtrlALUOut=1                                          Premise(F267)
	S518= [ALUOut]=32'hFFFFFFFF-a+ca                            ALUOut-Write(S458,S517)
	S519= CtrlCAReg=1                                           Premise(F268)
	S520= [CAReg]=Carry(32'hFFFFFFFF-a+ca)                      CAReg-Write(S460,S519)
	S521= CtrlOVReg=1                                           Premise(F269)
	S522= [OVReg]=OverFlow(32'hFFFFFFFF-a+ca)                   OVReg-Write(S465,S521)
	S523= CtrlDR1bit=1                                          Premise(F270)
	S524= [DR1bit]=so|OverFlow(32'hFFFFFFFF-a+ca)               DR1bit-Write(S474,S523)
	S525= CtrlDR4bit=1                                          Premise(F271)
	S526= [DR4bit]={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DR4bit-Write(S476,S525)
	S527= CtrlCRRegs=0                                          Premise(F272)
	S528= CtrlCRRegsCR0=0                                       Premise(F273)
	S529= CtrlCRRegsW4bitRegs=0                                 Premise(F274)
	S530= CtrlCRRegsW1bitRegs=0                                 Premise(F275)

MEM	S531= PIDReg.Out=pid                                        PIDReg-Out(S485)
	S532= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S485)
	S533= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S485)
	S534= PC.CIA=addr                                           PC-Out(S489)
	S535= PC.CIA31_28=addr[31:28]                               PC-Out(S489)
	S536= PC.Out=addr+4                                         PC-Out(S490)
	S537= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S492)
	S538= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S492)
	S539= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S492)
	S540= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S494)
	S541= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S494)
	S542= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S494)
	S543= ICacheReg.Out={31,rT,rA,0,1489}                       ICacheReg-Out(S498)
	S544= ICacheReg.Out26_31={31,rT,rA,0,1489}[26:31]           ICacheReg-Out(S498)
	S545= ICacheReg.Out30_31={31,rT,rA,0,1489}[30:31]           ICacheReg-Out(S498)
	S546= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S500)
	S547= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S500)
	S548= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S500)
	S549= IR.Out0_5=31                                          IR-Out(S505)
	S550= IR.Out6_10=rT                                         IR-Out(S505)
	S551= IR.Out11_15=rA                                        IR-Out(S505)
	S552= IR.Out16_20=0                                         IR-Out(S505)
	S553= IR.Out21_31=1489                                      IR-Out(S505)
	S554= A.Out=a                                               A-Out(S509)
	S555= A.Out26_31=a[26:31]                                   A-Out(S509)
	S556= A.Out30_31=a[30:31]                                   A-Out(S509)
	S557= B.Out=32'hFFFFFFFF                                    B-Out(S511)
	S558= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S511)
	S559= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S511)
	S560= XER.SOOut=so                                          XER-SO-Out(S513)
	S561= XER.CAOut=ca                                          XER-CA-Out(S516)
	S562= ALUOut.Out=32'hFFFFFFFF-a+ca                          ALUOut-Out(S518)
	S563= ALUOut.Out26_31=32'hFFFFFFFF-a+ca[26:31]              ALUOut-Out(S518)
	S564= ALUOut.Out30_31=32'hFFFFFFFF-a+ca[30:31]              ALUOut-Out(S518)
	S565= CAReg.Out=Carry(32'hFFFFFFFF-a+ca)                    CAReg-Out(S520)
	S566= CAReg.Out26_31=Carry(32'hFFFFFFFF-a+ca)[26:31]        CAReg-Out(S520)
	S567= CAReg.Out30_31=Carry(32'hFFFFFFFF-a+ca)[30:31]        CAReg-Out(S520)
	S568= OVReg.Out=OverFlow(32'hFFFFFFFF-a+ca)                 OVReg-Out(S522)
	S569= OVReg.Out26_31=OverFlow(32'hFFFFFFFF-a+ca)[26:31]     OVReg-Out(S522)
	S570= OVReg.Out30_31=OverFlow(32'hFFFFFFFF-a+ca)[30:31]     OVReg-Out(S522)
	S571= DR1bit.Out=so|OverFlow(32'hFFFFFFFF-a+ca)             DR1bit-Out(S524)
	S572= DR1bit.Out26_31=so|OverFlow(32'hFFFFFFFF-a+ca)[26:31] DR1bit-Out(S524)
	S573= DR1bit.Out30_31=so|OverFlow(32'hFFFFFFFF-a+ca)[30:31] DR1bit-Out(S524)
	S574= DR4bit.Out={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DR4bit-Out(S526)
	S575= DR4bit.Out26_31={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}[26:31]DR4bit-Out(S526)
	S576= DR4bit.Out30_31={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}[30:31]DR4bit-Out(S526)
	S577= PIDReg.Out=>IMMU.PID                                  Premise(F276)
	S578= IMMU.PID=pid                                          Path(S531,S577)
	S579= PC.Out=>IMMU.IEA                                      Premise(F277)
	S580= IMMU.IEA=addr+4                                       Path(S536,S579)
	S581= IMMU.Addr={pid,addr+4}                                IMMU-Search(S578,S580)
	S582= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S578,S580)
	S583= IMMU.Addr=>IAddrReg.In                                Premise(F278)
	S584= IAddrReg.In={pid,addr+4}                              Path(S581,S583)
	S585= IMMU.Hit=>IMMUHitReg.In                               Premise(F279)
	S586= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S582,S585)
	S587= PC.Out=>ICache.IEA                                    Premise(F280)
	S588= ICache.IEA=addr+4                                     Path(S536,S587)
	S589= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S588)
	S590= ICache.Out=>ICacheReg.In                              Premise(F281)
	S591= ICache.Hit=>ICacheHitReg.In                           Premise(F282)
	S592= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S589,S591)
	S593= IMMUHitReg.Out=>CU.IMemHit                            Premise(F283)
	S594= CU.IMemHit=IMMUHit(pid,addr)                          Path(S540,S593)
	S595= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F284)
	S596= CU.ICacheHit=ICacheHit(addr)                          Path(S546,S595)
	S597= IAddrReg.Out=>IMem.RAddr                              Premise(F285)
	S598= IMem.RAddr={pid,addr}                                 Path(S537,S597)
	S599= IMem.Out={31,rT,rA,0,1489}                            IMem-Read(S598,S502)
	S600= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S598,S502)
	S601= IMem.Out=>IRMux.MemData                               Premise(F286)
	S602= IRMux.MemData={31,rT,rA,0,1489}                       Path(S599,S601)
	S603= ICacheReg.Out=>IRMux.CacheData                        Premise(F287)
	S604= IRMux.CacheData={31,rT,rA,0,1489}                     Path(S543,S603)
	S605= IRMux.Out={31,rT,rA,0,1489}                           IRMux-Select(S602,S604)
	S606= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F288)
	S607= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S540,S606)
	S608= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F289)
	S609= IRMux.CacheSel=ICacheHit(addr)                        Path(S546,S608)
	S610= IRMux.Out=>IR.In                                      Premise(F290)
	S611= IR.In={31,rT,rA,0,1489}                               Path(S605,S610)
	S612= IMem.MEM8WordOut=>ICache.WData                        Premise(F291)
	S613= ICache.WData=IMemGet8Word({pid,addr})                 Path(S600,S612)
	S614= PC.Out=>ICache.IEA                                    Premise(F292)
	S615= IR.Out0_5=>CU.Op                                      Premise(F293)
	S616= CU.Op=31                                              Path(S549,S615)
	S617= IR.Out11_15=>GPRegs.RReg1                             Premise(F294)
	S618= GPRegs.RReg1=rA                                       Path(S551,S617)
	S619= GPRegs.Rdata1=a                                       GPRegs-Read(S618,S507)
	S620= IR.Out21_31=>CU.IRFunc                                Premise(F295)
	S621= CU.IRFunc=1489                                        Path(S553,S620)
	S622= CU.Func=alu_subfe                                     CU(S616,S621)
	S623= GPRegs.Rdata1=>A.In                                   Premise(F296)
	S624= A.In=a                                                Path(S619,S623)
	S625= A.Out=>ALU.A                                          Premise(F297)
	S626= ALU.A=a                                               Path(S554,S625)
	S627= B.Out=>ALU.B                                          Premise(F298)
	S628= ALU.B=32'hFFFFFFFF                                    Path(S557,S627)
	S629= XER.CAOut=>ALU.CAIn                                   Premise(F299)
	S630= ALU.CAIn=ca                                           Path(S561,S629)
	S631= CU.Func=>ALU.Func                                     Premise(F300)
	S632= ALU.Func=alu_subfe                                    Path(S622,S631)
	S633= ALU.Out=32'hFFFFFFFF-a+ca                             ALU(S626,S628,S630)
	S634= ALU.CMP=Compare0(32'hFFFFFFFF-a+ca)                   ALU(S626,S628,S630)
	S635= ALU.OV=OverFlow(32'hFFFFFFFF-a+ca)                    ALU(S626,S628,S630)
	S636= ALU.CA=Carry(32'hFFFFFFFF-a+ca)                       ALU(S626,S628,S630)
	S637= ALU.Out=>ALUOut.In                                    Premise(F301)
	S638= ALUOut.In=32'hFFFFFFFF-a+ca                           Path(S633,S637)
	S639= ALU.CA=>CAReg.In                                      Premise(F302)
	S640= CAReg.In=Carry(32'hFFFFFFFF-a+ca)                     Path(S636,S639)
	S641= ALU.CMP=>DataCmb.A                                    Premise(F303)
	S642= DataCmb.A=Compare0(32'hFFFFFFFF-a+ca)                 Path(S634,S641)
	S643= ORGate.Out=>DataCmb.B                                 Premise(F304)
	S644= ALU.OV=>OVReg.In                                      Premise(F305)
	S645= OVReg.In=OverFlow(32'hFFFFFFFF-a+ca)                  Path(S635,S644)
	S646= XER.SOOut=>ORGate.A                                   Premise(F306)
	S647= ORGate.A=so                                           Path(S560,S646)
	S648= ALU.OV=>ORGate.B                                      Premise(F307)
	S649= ORGate.B=OverFlow(32'hFFFFFFFF-a+ca)                  Path(S635,S648)
	S650= ORGate.Out=so|OverFlow(32'hFFFFFFFF-a+ca)             ORGate(S647,S649)
	S651= DataCmb.B=so|OverFlow(32'hFFFFFFFF-a+ca)              Path(S650,S643)
	S652= DataCmb.Out={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DataCmb(S642,S651)
	S653= ORGate.Out=>DR1bit.In                                 Premise(F308)
	S654= DR1bit.In=so|OverFlow(32'hFFFFFFFF-a+ca)              Path(S650,S653)
	S655= DataCmb.Out=>DR4bit.In                                Premise(F309)
	S656= DR4bit.In={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}Path(S652,S655)
	S657= IR.Out6_10=>GPRegs.WReg                               Premise(F310)
	S658= GPRegs.WReg=rT                                        Path(S550,S657)
	S659= ALUOut.Out=>GPRegs.WData                              Premise(F311)
	S660= GPRegs.WData=32'hFFFFFFFF-a+ca                        Path(S562,S659)
	S661= DR4bit.Out=>CRRegs.CR0In                              Premise(F312)
	S662= CRRegs.CR0In={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}Path(S574,S661)
	S663= DR1bit.Out=>XER.SOIn                                  Premise(F313)
	S664= XER.SOIn=so|OverFlow(32'hFFFFFFFF-a+ca)               Path(S571,S663)
	S665= CAReg.Out=>XER.CAIn                                   Premise(F314)
	S666= XER.CAIn=Carry(32'hFFFFFFFF-a+ca)                     Path(S565,S665)
	S667= OVReg.Out=>XER.OVIn                                   Premise(F315)
	S668= XER.OVIn=OverFlow(32'hFFFFFFFF-a+ca)                  Path(S568,S667)
	S669= CtrlPIDReg=0                                          Premise(F316)
	S670= [PIDReg]=pid                                          PIDReg-Hold(S485,S669)
	S671= CtrlIMMU=0                                            Premise(F317)
	S672= CtrlPC=0                                              Premise(F318)
	S673= CtrlPCInc=0                                           Premise(F319)
	S674= PC[CIA]=addr                                          PC-Hold(S489,S673)
	S675= PC[Out]=addr+4                                        PC-Hold(S490,S672,S673)
	S676= CtrlIAddrReg=0                                        Premise(F320)
	S677= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S492,S676)
	S678= CtrlIMMUHitReg=0                                      Premise(F321)
	S679= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S494,S678)
	S680= CtrlICache=0                                          Premise(F322)
	S681= ICache[addr]={31,rT,rA,0,1489}                        ICache-Hold(S496,S680)
	S682= CtrlICacheReg=0                                       Premise(F323)
	S683= [ICacheReg]={31,rT,rA,0,1489}                         ICacheReg-Hold(S498,S682)
	S684= CtrlICacheHitReg=0                                    Premise(F324)
	S685= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S500,S684)
	S686= CtrlIMem=0                                            Premise(F325)
	S687= IMem[{pid,addr}]={31,rT,rA,0,1489}                    IMem-Hold(S502,S686)
	S688= CtrlIRMux=0                                           Premise(F326)
	S689= CtrlIR=0                                              Premise(F327)
	S690= [IR]={31,rT,rA,0,1489}                                IR-Hold(S505,S689)
	S691= CtrlGPRegs=0                                          Premise(F328)
	S692= GPRegs[rA]=a                                          GPRegs-Hold(S507,S691)
	S693= CtrlA=0                                               Premise(F329)
	S694= [A]=a                                                 A-Hold(S509,S693)
	S695= CtrlB=0                                               Premise(F330)
	S696= [B]=32'hFFFFFFFF                                      B-Hold(S511,S695)
	S697= CtrlXERSO=0                                           Premise(F331)
	S698= XER[SO]=so                                            XER-SO-Hold(S513,S697)
	S699= CtrlXEROV=0                                           Premise(F332)
	S700= CtrlXERCA=0                                           Premise(F333)
	S701= XER[CA]=ca                                            XER-CA-Hold(S516,S700)
	S702= CtrlALUOut=0                                          Premise(F334)
	S703= [ALUOut]=32'hFFFFFFFF-a+ca                            ALUOut-Hold(S518,S702)
	S704= CtrlCAReg=0                                           Premise(F335)
	S705= [CAReg]=Carry(32'hFFFFFFFF-a+ca)                      CAReg-Hold(S520,S704)
	S706= CtrlOVReg=0                                           Premise(F336)
	S707= [OVReg]=OverFlow(32'hFFFFFFFF-a+ca)                   OVReg-Hold(S522,S706)
	S708= CtrlDR1bit=0                                          Premise(F337)
	S709= [DR1bit]=so|OverFlow(32'hFFFFFFFF-a+ca)               DR1bit-Hold(S524,S708)
	S710= CtrlDR4bit=0                                          Premise(F338)
	S711= [DR4bit]={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DR4bit-Hold(S526,S710)
	S712= CtrlCRRegs=0                                          Premise(F339)
	S713= CtrlCRRegsCR0=0                                       Premise(F340)
	S714= CtrlCRRegsW4bitRegs=0                                 Premise(F341)
	S715= CtrlCRRegsW1bitRegs=0                                 Premise(F342)

DMMU1	S716= PIDReg.Out=pid                                        PIDReg-Out(S670)
	S717= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S670)
	S718= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S670)
	S719= PC.CIA=addr                                           PC-Out(S674)
	S720= PC.CIA31_28=addr[31:28]                               PC-Out(S674)
	S721= PC.Out=addr+4                                         PC-Out(S675)
	S722= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S677)
	S723= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S677)
	S724= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S677)
	S725= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S679)
	S726= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S679)
	S727= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S679)
	S728= ICacheReg.Out={31,rT,rA,0,1489}                       ICacheReg-Out(S683)
	S729= ICacheReg.Out26_31={31,rT,rA,0,1489}[26:31]           ICacheReg-Out(S683)
	S730= ICacheReg.Out30_31={31,rT,rA,0,1489}[30:31]           ICacheReg-Out(S683)
	S731= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S685)
	S732= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S685)
	S733= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S685)
	S734= IR.Out0_5=31                                          IR-Out(S690)
	S735= IR.Out6_10=rT                                         IR-Out(S690)
	S736= IR.Out11_15=rA                                        IR-Out(S690)
	S737= IR.Out16_20=0                                         IR-Out(S690)
	S738= IR.Out21_31=1489                                      IR-Out(S690)
	S739= A.Out=a                                               A-Out(S694)
	S740= A.Out26_31=a[26:31]                                   A-Out(S694)
	S741= A.Out30_31=a[30:31]                                   A-Out(S694)
	S742= B.Out=32'hFFFFFFFF                                    B-Out(S696)
	S743= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S696)
	S744= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S696)
	S745= XER.SOOut=so                                          XER-SO-Out(S698)
	S746= XER.CAOut=ca                                          XER-CA-Out(S701)
	S747= ALUOut.Out=32'hFFFFFFFF-a+ca                          ALUOut-Out(S703)
	S748= ALUOut.Out26_31=32'hFFFFFFFF-a+ca[26:31]              ALUOut-Out(S703)
	S749= ALUOut.Out30_31=32'hFFFFFFFF-a+ca[30:31]              ALUOut-Out(S703)
	S750= CAReg.Out=Carry(32'hFFFFFFFF-a+ca)                    CAReg-Out(S705)
	S751= CAReg.Out26_31=Carry(32'hFFFFFFFF-a+ca)[26:31]        CAReg-Out(S705)
	S752= CAReg.Out30_31=Carry(32'hFFFFFFFF-a+ca)[30:31]        CAReg-Out(S705)
	S753= OVReg.Out=OverFlow(32'hFFFFFFFF-a+ca)                 OVReg-Out(S707)
	S754= OVReg.Out26_31=OverFlow(32'hFFFFFFFF-a+ca)[26:31]     OVReg-Out(S707)
	S755= OVReg.Out30_31=OverFlow(32'hFFFFFFFF-a+ca)[30:31]     OVReg-Out(S707)
	S756= DR1bit.Out=so|OverFlow(32'hFFFFFFFF-a+ca)             DR1bit-Out(S709)
	S757= DR1bit.Out26_31=so|OverFlow(32'hFFFFFFFF-a+ca)[26:31] DR1bit-Out(S709)
	S758= DR1bit.Out30_31=so|OverFlow(32'hFFFFFFFF-a+ca)[30:31] DR1bit-Out(S709)
	S759= DR4bit.Out={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DR4bit-Out(S711)
	S760= DR4bit.Out26_31={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}[26:31]DR4bit-Out(S711)
	S761= DR4bit.Out30_31={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}[30:31]DR4bit-Out(S711)
	S762= PIDReg.Out=>IMMU.PID                                  Premise(F343)
	S763= IMMU.PID=pid                                          Path(S716,S762)
	S764= PC.Out=>IMMU.IEA                                      Premise(F344)
	S765= IMMU.IEA=addr+4                                       Path(S721,S764)
	S766= IMMU.Addr={pid,addr+4}                                IMMU-Search(S763,S765)
	S767= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S763,S765)
	S768= IMMU.Addr=>IAddrReg.In                                Premise(F345)
	S769= IAddrReg.In={pid,addr+4}                              Path(S766,S768)
	S770= IMMU.Hit=>IMMUHitReg.In                               Premise(F346)
	S771= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S767,S770)
	S772= PC.Out=>ICache.IEA                                    Premise(F347)
	S773= ICache.IEA=addr+4                                     Path(S721,S772)
	S774= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S773)
	S775= ICache.Out=>ICacheReg.In                              Premise(F348)
	S776= ICache.Hit=>ICacheHitReg.In                           Premise(F349)
	S777= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S774,S776)
	S778= IMMUHitReg.Out=>CU.IMemHit                            Premise(F350)
	S779= CU.IMemHit=IMMUHit(pid,addr)                          Path(S725,S778)
	S780= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F351)
	S781= CU.ICacheHit=ICacheHit(addr)                          Path(S731,S780)
	S782= IAddrReg.Out=>IMem.RAddr                              Premise(F352)
	S783= IMem.RAddr={pid,addr}                                 Path(S722,S782)
	S784= IMem.Out={31,rT,rA,0,1489}                            IMem-Read(S783,S687)
	S785= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S783,S687)
	S786= IMem.Out=>IRMux.MemData                               Premise(F353)
	S787= IRMux.MemData={31,rT,rA,0,1489}                       Path(S784,S786)
	S788= ICacheReg.Out=>IRMux.CacheData                        Premise(F354)
	S789= IRMux.CacheData={31,rT,rA,0,1489}                     Path(S728,S788)
	S790= IRMux.Out={31,rT,rA,0,1489}                           IRMux-Select(S787,S789)
	S791= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F355)
	S792= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S725,S791)
	S793= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F356)
	S794= IRMux.CacheSel=ICacheHit(addr)                        Path(S731,S793)
	S795= IRMux.Out=>IR.In                                      Premise(F357)
	S796= IR.In={31,rT,rA,0,1489}                               Path(S790,S795)
	S797= IMem.MEM8WordOut=>ICache.WData                        Premise(F358)
	S798= ICache.WData=IMemGet8Word({pid,addr})                 Path(S785,S797)
	S799= PC.Out=>ICache.IEA                                    Premise(F359)
	S800= IR.Out0_5=>CU.Op                                      Premise(F360)
	S801= CU.Op=31                                              Path(S734,S800)
	S802= IR.Out11_15=>GPRegs.RReg1                             Premise(F361)
	S803= GPRegs.RReg1=rA                                       Path(S736,S802)
	S804= GPRegs.Rdata1=a                                       GPRegs-Read(S803,S692)
	S805= IR.Out21_31=>CU.IRFunc                                Premise(F362)
	S806= CU.IRFunc=1489                                        Path(S738,S805)
	S807= CU.Func=alu_subfe                                     CU(S801,S806)
	S808= GPRegs.Rdata1=>A.In                                   Premise(F363)
	S809= A.In=a                                                Path(S804,S808)
	S810= A.Out=>ALU.A                                          Premise(F364)
	S811= ALU.A=a                                               Path(S739,S810)
	S812= B.Out=>ALU.B                                          Premise(F365)
	S813= ALU.B=32'hFFFFFFFF                                    Path(S742,S812)
	S814= XER.CAOut=>ALU.CAIn                                   Premise(F366)
	S815= ALU.CAIn=ca                                           Path(S746,S814)
	S816= CU.Func=>ALU.Func                                     Premise(F367)
	S817= ALU.Func=alu_subfe                                    Path(S807,S816)
	S818= ALU.Out=32'hFFFFFFFF-a+ca                             ALU(S811,S813,S815)
	S819= ALU.CMP=Compare0(32'hFFFFFFFF-a+ca)                   ALU(S811,S813,S815)
	S820= ALU.OV=OverFlow(32'hFFFFFFFF-a+ca)                    ALU(S811,S813,S815)
	S821= ALU.CA=Carry(32'hFFFFFFFF-a+ca)                       ALU(S811,S813,S815)
	S822= ALU.Out=>ALUOut.In                                    Premise(F368)
	S823= ALUOut.In=32'hFFFFFFFF-a+ca                           Path(S818,S822)
	S824= ALU.CA=>CAReg.In                                      Premise(F369)
	S825= CAReg.In=Carry(32'hFFFFFFFF-a+ca)                     Path(S821,S824)
	S826= ALU.CMP=>DataCmb.A                                    Premise(F370)
	S827= DataCmb.A=Compare0(32'hFFFFFFFF-a+ca)                 Path(S819,S826)
	S828= ORGate.Out=>DataCmb.B                                 Premise(F371)
	S829= ALU.OV=>OVReg.In                                      Premise(F372)
	S830= OVReg.In=OverFlow(32'hFFFFFFFF-a+ca)                  Path(S820,S829)
	S831= XER.SOOut=>ORGate.A                                   Premise(F373)
	S832= ORGate.A=so                                           Path(S745,S831)
	S833= ALU.OV=>ORGate.B                                      Premise(F374)
	S834= ORGate.B=OverFlow(32'hFFFFFFFF-a+ca)                  Path(S820,S833)
	S835= ORGate.Out=so|OverFlow(32'hFFFFFFFF-a+ca)             ORGate(S832,S834)
	S836= DataCmb.B=so|OverFlow(32'hFFFFFFFF-a+ca)              Path(S835,S828)
	S837= DataCmb.Out={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DataCmb(S827,S836)
	S838= ORGate.Out=>DR1bit.In                                 Premise(F375)
	S839= DR1bit.In=so|OverFlow(32'hFFFFFFFF-a+ca)              Path(S835,S838)
	S840= DataCmb.Out=>DR4bit.In                                Premise(F376)
	S841= DR4bit.In={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}Path(S837,S840)
	S842= IR.Out6_10=>GPRegs.WReg                               Premise(F377)
	S843= GPRegs.WReg=rT                                        Path(S735,S842)
	S844= ALUOut.Out=>GPRegs.WData                              Premise(F378)
	S845= GPRegs.WData=32'hFFFFFFFF-a+ca                        Path(S747,S844)
	S846= DR4bit.Out=>CRRegs.CR0In                              Premise(F379)
	S847= CRRegs.CR0In={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}Path(S759,S846)
	S848= DR1bit.Out=>XER.SOIn                                  Premise(F380)
	S849= XER.SOIn=so|OverFlow(32'hFFFFFFFF-a+ca)               Path(S756,S848)
	S850= CAReg.Out=>XER.CAIn                                   Premise(F381)
	S851= XER.CAIn=Carry(32'hFFFFFFFF-a+ca)                     Path(S750,S850)
	S852= OVReg.Out=>XER.OVIn                                   Premise(F382)
	S853= XER.OVIn=OverFlow(32'hFFFFFFFF-a+ca)                  Path(S753,S852)
	S854= CtrlPIDReg=0                                          Premise(F383)
	S855= [PIDReg]=pid                                          PIDReg-Hold(S670,S854)
	S856= CtrlIMMU=0                                            Premise(F384)
	S857= CtrlPC=0                                              Premise(F385)
	S858= CtrlPCInc=0                                           Premise(F386)
	S859= PC[CIA]=addr                                          PC-Hold(S674,S858)
	S860= PC[Out]=addr+4                                        PC-Hold(S675,S857,S858)
	S861= CtrlIAddrReg=0                                        Premise(F387)
	S862= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S677,S861)
	S863= CtrlIMMUHitReg=0                                      Premise(F388)
	S864= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S679,S863)
	S865= CtrlICache=0                                          Premise(F389)
	S866= ICache[addr]={31,rT,rA,0,1489}                        ICache-Hold(S681,S865)
	S867= CtrlICacheReg=0                                       Premise(F390)
	S868= [ICacheReg]={31,rT,rA,0,1489}                         ICacheReg-Hold(S683,S867)
	S869= CtrlICacheHitReg=0                                    Premise(F391)
	S870= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S685,S869)
	S871= CtrlIMem=0                                            Premise(F392)
	S872= IMem[{pid,addr}]={31,rT,rA,0,1489}                    IMem-Hold(S687,S871)
	S873= CtrlIRMux=0                                           Premise(F393)
	S874= CtrlIR=0                                              Premise(F394)
	S875= [IR]={31,rT,rA,0,1489}                                IR-Hold(S690,S874)
	S876= CtrlGPRegs=0                                          Premise(F395)
	S877= GPRegs[rA]=a                                          GPRegs-Hold(S692,S876)
	S878= CtrlA=0                                               Premise(F396)
	S879= [A]=a                                                 A-Hold(S694,S878)
	S880= CtrlB=0                                               Premise(F397)
	S881= [B]=32'hFFFFFFFF                                      B-Hold(S696,S880)
	S882= CtrlXERSO=0                                           Premise(F398)
	S883= XER[SO]=so                                            XER-SO-Hold(S698,S882)
	S884= CtrlXEROV=0                                           Premise(F399)
	S885= CtrlXERCA=0                                           Premise(F400)
	S886= XER[CA]=ca                                            XER-CA-Hold(S701,S885)
	S887= CtrlALUOut=0                                          Premise(F401)
	S888= [ALUOut]=32'hFFFFFFFF-a+ca                            ALUOut-Hold(S703,S887)
	S889= CtrlCAReg=0                                           Premise(F402)
	S890= [CAReg]=Carry(32'hFFFFFFFF-a+ca)                      CAReg-Hold(S705,S889)
	S891= CtrlOVReg=0                                           Premise(F403)
	S892= [OVReg]=OverFlow(32'hFFFFFFFF-a+ca)                   OVReg-Hold(S707,S891)
	S893= CtrlDR1bit=0                                          Premise(F404)
	S894= [DR1bit]=so|OverFlow(32'hFFFFFFFF-a+ca)               DR1bit-Hold(S709,S893)
	S895= CtrlDR4bit=0                                          Premise(F405)
	S896= [DR4bit]={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DR4bit-Hold(S711,S895)
	S897= CtrlCRRegs=0                                          Premise(F406)
	S898= CtrlCRRegsCR0=0                                       Premise(F407)
	S899= CtrlCRRegsW4bitRegs=0                                 Premise(F408)
	S900= CtrlCRRegsW1bitRegs=0                                 Premise(F409)

DMMU2	S901= PIDReg.Out=pid                                        PIDReg-Out(S855)
	S902= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S855)
	S903= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S855)
	S904= PC.CIA=addr                                           PC-Out(S859)
	S905= PC.CIA31_28=addr[31:28]                               PC-Out(S859)
	S906= PC.Out=addr+4                                         PC-Out(S860)
	S907= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S862)
	S908= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S862)
	S909= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S862)
	S910= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S864)
	S911= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S864)
	S912= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S864)
	S913= ICacheReg.Out={31,rT,rA,0,1489}                       ICacheReg-Out(S868)
	S914= ICacheReg.Out26_31={31,rT,rA,0,1489}[26:31]           ICacheReg-Out(S868)
	S915= ICacheReg.Out30_31={31,rT,rA,0,1489}[30:31]           ICacheReg-Out(S868)
	S916= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S870)
	S917= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S870)
	S918= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S870)
	S919= IR.Out0_5=31                                          IR-Out(S875)
	S920= IR.Out6_10=rT                                         IR-Out(S875)
	S921= IR.Out11_15=rA                                        IR-Out(S875)
	S922= IR.Out16_20=0                                         IR-Out(S875)
	S923= IR.Out21_31=1489                                      IR-Out(S875)
	S924= A.Out=a                                               A-Out(S879)
	S925= A.Out26_31=a[26:31]                                   A-Out(S879)
	S926= A.Out30_31=a[30:31]                                   A-Out(S879)
	S927= B.Out=32'hFFFFFFFF                                    B-Out(S881)
	S928= B.Out26_31=32'hFFFFFFFF[26:31]                        B-Out(S881)
	S929= B.Out30_31=32'hFFFFFFFF[30:31]                        B-Out(S881)
	S930= XER.SOOut=so                                          XER-SO-Out(S883)
	S931= XER.CAOut=ca                                          XER-CA-Out(S886)
	S932= ALUOut.Out=32'hFFFFFFFF-a+ca                          ALUOut-Out(S888)
	S933= ALUOut.Out26_31=32'hFFFFFFFF-a+ca[26:31]              ALUOut-Out(S888)
	S934= ALUOut.Out30_31=32'hFFFFFFFF-a+ca[30:31]              ALUOut-Out(S888)
	S935= CAReg.Out=Carry(32'hFFFFFFFF-a+ca)                    CAReg-Out(S890)
	S936= CAReg.Out26_31=Carry(32'hFFFFFFFF-a+ca)[26:31]        CAReg-Out(S890)
	S937= CAReg.Out30_31=Carry(32'hFFFFFFFF-a+ca)[30:31]        CAReg-Out(S890)
	S938= OVReg.Out=OverFlow(32'hFFFFFFFF-a+ca)                 OVReg-Out(S892)
	S939= OVReg.Out26_31=OverFlow(32'hFFFFFFFF-a+ca)[26:31]     OVReg-Out(S892)
	S940= OVReg.Out30_31=OverFlow(32'hFFFFFFFF-a+ca)[30:31]     OVReg-Out(S892)
	S941= DR1bit.Out=so|OverFlow(32'hFFFFFFFF-a+ca)             DR1bit-Out(S894)
	S942= DR1bit.Out26_31=so|OverFlow(32'hFFFFFFFF-a+ca)[26:31] DR1bit-Out(S894)
	S943= DR1bit.Out30_31=so|OverFlow(32'hFFFFFFFF-a+ca)[30:31] DR1bit-Out(S894)
	S944= DR4bit.Out={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DR4bit-Out(S896)
	S945= DR4bit.Out26_31={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}[26:31]DR4bit-Out(S896)
	S946= DR4bit.Out30_31={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}[30:31]DR4bit-Out(S896)
	S947= PIDReg.Out=>IMMU.PID                                  Premise(F410)
	S948= IMMU.PID=pid                                          Path(S901,S947)
	S949= PC.Out=>IMMU.IEA                                      Premise(F411)
	S950= IMMU.IEA=addr+4                                       Path(S906,S949)
	S951= IMMU.Addr={pid,addr+4}                                IMMU-Search(S948,S950)
	S952= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S948,S950)
	S953= IMMU.Addr=>IAddrReg.In                                Premise(F412)
	S954= IAddrReg.In={pid,addr+4}                              Path(S951,S953)
	S955= IMMU.Hit=>IMMUHitReg.In                               Premise(F413)
	S956= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S952,S955)
	S957= PC.Out=>ICache.IEA                                    Premise(F414)
	S958= ICache.IEA=addr+4                                     Path(S906,S957)
	S959= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S958)
	S960= ICache.Out=>ICacheReg.In                              Premise(F415)
	S961= ICache.Hit=>ICacheHitReg.In                           Premise(F416)
	S962= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S959,S961)
	S963= IMMUHitReg.Out=>CU.IMemHit                            Premise(F417)
	S964= CU.IMemHit=IMMUHit(pid,addr)                          Path(S910,S963)
	S965= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F418)
	S966= CU.ICacheHit=ICacheHit(addr)                          Path(S916,S965)
	S967= IAddrReg.Out=>IMem.RAddr                              Premise(F419)
	S968= IMem.RAddr={pid,addr}                                 Path(S907,S967)
	S969= IMem.Out={31,rT,rA,0,1489}                            IMem-Read(S968,S872)
	S970= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S968,S872)
	S971= IMem.Out=>IRMux.MemData                               Premise(F420)
	S972= IRMux.MemData={31,rT,rA,0,1489}                       Path(S969,S971)
	S973= ICacheReg.Out=>IRMux.CacheData                        Premise(F421)
	S974= IRMux.CacheData={31,rT,rA,0,1489}                     Path(S913,S973)
	S975= IRMux.Out={31,rT,rA,0,1489}                           IRMux-Select(S972,S974)
	S976= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F422)
	S977= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S910,S976)
	S978= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F423)
	S979= IRMux.CacheSel=ICacheHit(addr)                        Path(S916,S978)
	S980= IRMux.Out=>IR.In                                      Premise(F424)
	S981= IR.In={31,rT,rA,0,1489}                               Path(S975,S980)
	S982= IMem.MEM8WordOut=>ICache.WData                        Premise(F425)
	S983= ICache.WData=IMemGet8Word({pid,addr})                 Path(S970,S982)
	S984= PC.Out=>ICache.IEA                                    Premise(F426)
	S985= IR.Out0_5=>CU.Op                                      Premise(F427)
	S986= CU.Op=31                                              Path(S919,S985)
	S987= IR.Out11_15=>GPRegs.RReg1                             Premise(F428)
	S988= GPRegs.RReg1=rA                                       Path(S921,S987)
	S989= GPRegs.Rdata1=a                                       GPRegs-Read(S988,S877)
	S990= IR.Out21_31=>CU.IRFunc                                Premise(F429)
	S991= CU.IRFunc=1489                                        Path(S923,S990)
	S992= CU.Func=alu_subfe                                     CU(S986,S991)
	S993= GPRegs.Rdata1=>A.In                                   Premise(F430)
	S994= A.In=a                                                Path(S989,S993)
	S995= A.Out=>ALU.A                                          Premise(F431)
	S996= ALU.A=a                                               Path(S924,S995)
	S997= B.Out=>ALU.B                                          Premise(F432)
	S998= ALU.B=32'hFFFFFFFF                                    Path(S927,S997)
	S999= XER.CAOut=>ALU.CAIn                                   Premise(F433)
	S1000= ALU.CAIn=ca                                          Path(S931,S999)
	S1001= CU.Func=>ALU.Func                                    Premise(F434)
	S1002= ALU.Func=alu_subfe                                   Path(S992,S1001)
	S1003= ALU.Out=32'hFFFFFFFF-a+ca                            ALU(S996,S998,S1000)
	S1004= ALU.CMP=Compare0(32'hFFFFFFFF-a+ca)                  ALU(S996,S998,S1000)
	S1005= ALU.OV=OverFlow(32'hFFFFFFFF-a+ca)                   ALU(S996,S998,S1000)
	S1006= ALU.CA=Carry(32'hFFFFFFFF-a+ca)                      ALU(S996,S998,S1000)
	S1007= ALU.Out=>ALUOut.In                                   Premise(F435)
	S1008= ALUOut.In=32'hFFFFFFFF-a+ca                          Path(S1003,S1007)
	S1009= ALU.CA=>CAReg.In                                     Premise(F436)
	S1010= CAReg.In=Carry(32'hFFFFFFFF-a+ca)                    Path(S1006,S1009)
	S1011= ALU.CMP=>DataCmb.A                                   Premise(F437)
	S1012= DataCmb.A=Compare0(32'hFFFFFFFF-a+ca)                Path(S1004,S1011)
	S1013= ORGate.Out=>DataCmb.B                                Premise(F438)
	S1014= ALU.OV=>OVReg.In                                     Premise(F439)
	S1015= OVReg.In=OverFlow(32'hFFFFFFFF-a+ca)                 Path(S1005,S1014)
	S1016= XER.SOOut=>ORGate.A                                  Premise(F440)
	S1017= ORGate.A=so                                          Path(S930,S1016)
	S1018= ALU.OV=>ORGate.B                                     Premise(F441)
	S1019= ORGate.B=OverFlow(32'hFFFFFFFF-a+ca)                 Path(S1005,S1018)
	S1020= ORGate.Out=so|OverFlow(32'hFFFFFFFF-a+ca)            ORGate(S1017,S1019)
	S1021= DataCmb.B=so|OverFlow(32'hFFFFFFFF-a+ca)             Path(S1020,S1013)
	S1022= DataCmb.Out={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DataCmb(S1012,S1021)
	S1023= ORGate.Out=>DR1bit.In                                Premise(F442)
	S1024= DR1bit.In=so|OverFlow(32'hFFFFFFFF-a+ca)             Path(S1020,S1023)
	S1025= DataCmb.Out=>DR4bit.In                               Premise(F443)
	S1026= DR4bit.In={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}Path(S1022,S1025)
	S1027= IR.Out6_10=>GPRegs.WReg                              Premise(F444)
	S1028= GPRegs.WReg=rT                                       Path(S920,S1027)
	S1029= ALUOut.Out=>GPRegs.WData                             Premise(F445)
	S1030= GPRegs.WData=32'hFFFFFFFF-a+ca                       Path(S932,S1029)
	S1031= DR4bit.Out=>CRRegs.CR0In                             Premise(F446)
	S1032= CRRegs.CR0In={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}Path(S944,S1031)
	S1033= DR1bit.Out=>XER.SOIn                                 Premise(F447)
	S1034= XER.SOIn=so|OverFlow(32'hFFFFFFFF-a+ca)              Path(S941,S1033)
	S1035= CAReg.Out=>XER.CAIn                                  Premise(F448)
	S1036= XER.CAIn=Carry(32'hFFFFFFFF-a+ca)                    Path(S935,S1035)
	S1037= OVReg.Out=>XER.OVIn                                  Premise(F449)
	S1038= XER.OVIn=OverFlow(32'hFFFFFFFF-a+ca)                 Path(S938,S1037)
	S1039= CtrlPIDReg=0                                         Premise(F450)
	S1040= [PIDReg]=pid                                         PIDReg-Hold(S855,S1039)
	S1041= CtrlIMMU=0                                           Premise(F451)
	S1042= CtrlPC=0                                             Premise(F452)
	S1043= CtrlPCInc=0                                          Premise(F453)
	S1044= PC[CIA]=addr                                         PC-Hold(S859,S1043)
	S1045= PC[Out]=addr+4                                       PC-Hold(S860,S1042,S1043)
	S1046= CtrlIAddrReg=0                                       Premise(F454)
	S1047= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S862,S1046)
	S1048= CtrlIMMUHitReg=0                                     Premise(F455)
	S1049= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S864,S1048)
	S1050= CtrlICache=0                                         Premise(F456)
	S1051= ICache[addr]={31,rT,rA,0,1489}                       ICache-Hold(S866,S1050)
	S1052= CtrlICacheReg=0                                      Premise(F457)
	S1053= [ICacheReg]={31,rT,rA,0,1489}                        ICacheReg-Hold(S868,S1052)
	S1054= CtrlICacheHitReg=0                                   Premise(F458)
	S1055= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S870,S1054)
	S1056= CtrlIMem=0                                           Premise(F459)
	S1057= IMem[{pid,addr}]={31,rT,rA,0,1489}                   IMem-Hold(S872,S1056)
	S1058= CtrlIRMux=0                                          Premise(F460)
	S1059= CtrlIR=0                                             Premise(F461)
	S1060= [IR]={31,rT,rA,0,1489}                               IR-Hold(S875,S1059)
	S1061= CtrlGPRegs=0                                         Premise(F462)
	S1062= GPRegs[rA]=a                                         GPRegs-Hold(S877,S1061)
	S1063= CtrlA=0                                              Premise(F463)
	S1064= [A]=a                                                A-Hold(S879,S1063)
	S1065= CtrlB=0                                              Premise(F464)
	S1066= [B]=32'hFFFFFFFF                                     B-Hold(S881,S1065)
	S1067= CtrlXERSO=0                                          Premise(F465)
	S1068= XER[SO]=so                                           XER-SO-Hold(S883,S1067)
	S1069= CtrlXEROV=0                                          Premise(F466)
	S1070= CtrlXERCA=0                                          Premise(F467)
	S1071= XER[CA]=ca                                           XER-CA-Hold(S886,S1070)
	S1072= CtrlALUOut=0                                         Premise(F468)
	S1073= [ALUOut]=32'hFFFFFFFF-a+ca                           ALUOut-Hold(S888,S1072)
	S1074= CtrlCAReg=0                                          Premise(F469)
	S1075= [CAReg]=Carry(32'hFFFFFFFF-a+ca)                     CAReg-Hold(S890,S1074)
	S1076= CtrlOVReg=0                                          Premise(F470)
	S1077= [OVReg]=OverFlow(32'hFFFFFFFF-a+ca)                  OVReg-Hold(S892,S1076)
	S1078= CtrlDR1bit=0                                         Premise(F471)
	S1079= [DR1bit]=so|OverFlow(32'hFFFFFFFF-a+ca)              DR1bit-Hold(S894,S1078)
	S1080= CtrlDR4bit=0                                         Premise(F472)
	S1081= [DR4bit]={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DR4bit-Hold(S896,S1080)
	S1082= CtrlCRRegs=0                                         Premise(F473)
	S1083= CtrlCRRegsCR0=0                                      Premise(F474)
	S1084= CtrlCRRegsW4bitRegs=0                                Premise(F475)
	S1085= CtrlCRRegsW1bitRegs=0                                Premise(F476)

WB	S1086= PIDReg.Out=pid                                       PIDReg-Out(S1040)
	S1087= PIDReg.Out26_31=pid[26:31]                           PIDReg-Out(S1040)
	S1088= PIDReg.Out30_31=pid[30:31]                           PIDReg-Out(S1040)
	S1089= PC.CIA=addr                                          PC-Out(S1044)
	S1090= PC.CIA31_28=addr[31:28]                              PC-Out(S1044)
	S1091= PC.Out=addr+4                                        PC-Out(S1045)
	S1092= IAddrReg.Out={pid,addr}                              IAddrReg-Out(S1047)
	S1093= IAddrReg.Out26_31={pid,addr}[26:31]                  IAddrReg-Out(S1047)
	S1094= IAddrReg.Out30_31={pid,addr}[30:31]                  IAddrReg-Out(S1047)
	S1095= IMMUHitReg.Out=IMMUHit(pid,addr)                     IMMUHitReg-Out(S1049)
	S1096= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S1049)
	S1097= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S1049)
	S1098= ICacheReg.Out={31,rT,rA,0,1489}                      ICacheReg-Out(S1053)
	S1099= ICacheReg.Out26_31={31,rT,rA,0,1489}[26:31]          ICacheReg-Out(S1053)
	S1100= ICacheReg.Out30_31={31,rT,rA,0,1489}[30:31]          ICacheReg-Out(S1053)
	S1101= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S1055)
	S1102= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S1055)
	S1103= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S1055)
	S1104= IR.Out0_5=31                                         IR-Out(S1060)
	S1105= IR.Out6_10=rT                                        IR-Out(S1060)
	S1106= IR.Out11_15=rA                                       IR-Out(S1060)
	S1107= IR.Out16_20=0                                        IR-Out(S1060)
	S1108= IR.Out21_31=1489                                     IR-Out(S1060)
	S1109= A.Out=a                                              A-Out(S1064)
	S1110= A.Out26_31=a[26:31]                                  A-Out(S1064)
	S1111= A.Out30_31=a[30:31]                                  A-Out(S1064)
	S1112= B.Out=32'hFFFFFFFF                                   B-Out(S1066)
	S1113= B.Out26_31=32'hFFFFFFFF[26:31]                       B-Out(S1066)
	S1114= B.Out30_31=32'hFFFFFFFF[30:31]                       B-Out(S1066)
	S1115= XER.SOOut=so                                         XER-SO-Out(S1068)
	S1116= XER.CAOut=ca                                         XER-CA-Out(S1071)
	S1117= ALUOut.Out=32'hFFFFFFFF-a+ca                         ALUOut-Out(S1073)
	S1118= ALUOut.Out26_31=32'hFFFFFFFF-a+ca[26:31]             ALUOut-Out(S1073)
	S1119= ALUOut.Out30_31=32'hFFFFFFFF-a+ca[30:31]             ALUOut-Out(S1073)
	S1120= CAReg.Out=Carry(32'hFFFFFFFF-a+ca)                   CAReg-Out(S1075)
	S1121= CAReg.Out26_31=Carry(32'hFFFFFFFF-a+ca)[26:31]       CAReg-Out(S1075)
	S1122= CAReg.Out30_31=Carry(32'hFFFFFFFF-a+ca)[30:31]       CAReg-Out(S1075)
	S1123= OVReg.Out=OverFlow(32'hFFFFFFFF-a+ca)                OVReg-Out(S1077)
	S1124= OVReg.Out26_31=OverFlow(32'hFFFFFFFF-a+ca)[26:31]    OVReg-Out(S1077)
	S1125= OVReg.Out30_31=OverFlow(32'hFFFFFFFF-a+ca)[30:31]    OVReg-Out(S1077)
	S1126= DR1bit.Out=so|OverFlow(32'hFFFFFFFF-a+ca)            DR1bit-Out(S1079)
	S1127= DR1bit.Out26_31=so|OverFlow(32'hFFFFFFFF-a+ca)[26:31]DR1bit-Out(S1079)
	S1128= DR1bit.Out30_31=so|OverFlow(32'hFFFFFFFF-a+ca)[30:31]DR1bit-Out(S1079)
	S1129= DR4bit.Out={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DR4bit-Out(S1081)
	S1130= DR4bit.Out26_31={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}[26:31]DR4bit-Out(S1081)
	S1131= DR4bit.Out30_31={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}[30:31]DR4bit-Out(S1081)
	S1132= PIDReg.Out=>IMMU.PID                                 Premise(F477)
	S1133= IMMU.PID=pid                                         Path(S1086,S1132)
	S1134= PC.Out=>IMMU.IEA                                     Premise(F478)
	S1135= IMMU.IEA=addr+4                                      Path(S1091,S1134)
	S1136= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1133,S1135)
	S1137= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1133,S1135)
	S1138= IMMU.Addr=>IAddrReg.In                               Premise(F479)
	S1139= IAddrReg.In={pid,addr+4}                             Path(S1136,S1138)
	S1140= IMMU.Hit=>IMMUHitReg.In                              Premise(F480)
	S1141= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1137,S1140)
	S1142= PC.Out=>ICache.IEA                                   Premise(F481)
	S1143= ICache.IEA=addr+4                                    Path(S1091,S1142)
	S1144= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1143)
	S1145= ICache.Out=>ICacheReg.In                             Premise(F482)
	S1146= ICache.Hit=>ICacheHitReg.In                          Premise(F483)
	S1147= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1144,S1146)
	S1148= IMMUHitReg.Out=>CU.IMemHit                           Premise(F484)
	S1149= CU.IMemHit=IMMUHit(pid,addr)                         Path(S1095,S1148)
	S1150= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F485)
	S1151= CU.ICacheHit=ICacheHit(addr)                         Path(S1101,S1150)
	S1152= IAddrReg.Out=>IMem.RAddr                             Premise(F486)
	S1153= IMem.RAddr={pid,addr}                                Path(S1092,S1152)
	S1154= IMem.Out={31,rT,rA,0,1489}                           IMem-Read(S1153,S1057)
	S1155= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1153,S1057)
	S1156= IMem.Out=>IRMux.MemData                              Premise(F487)
	S1157= IRMux.MemData={31,rT,rA,0,1489}                      Path(S1154,S1156)
	S1158= ICacheReg.Out=>IRMux.CacheData                       Premise(F488)
	S1159= IRMux.CacheData={31,rT,rA,0,1489}                    Path(S1098,S1158)
	S1160= IRMux.Out={31,rT,rA,0,1489}                          IRMux-Select(S1157,S1159)
	S1161= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F489)
	S1162= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S1095,S1161)
	S1163= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F490)
	S1164= IRMux.CacheSel=ICacheHit(addr)                       Path(S1101,S1163)
	S1165= IRMux.Out=>IR.In                                     Premise(F491)
	S1166= IR.In={31,rT,rA,0,1489}                              Path(S1160,S1165)
	S1167= IMem.MEM8WordOut=>ICache.WData                       Premise(F492)
	S1168= ICache.WData=IMemGet8Word({pid,addr})                Path(S1155,S1167)
	S1169= PC.Out=>ICache.IEA                                   Premise(F493)
	S1170= IR.Out0_5=>CU.Op                                     Premise(F494)
	S1171= CU.Op=31                                             Path(S1104,S1170)
	S1172= IR.Out11_15=>GPRegs.RReg1                            Premise(F495)
	S1173= GPRegs.RReg1=rA                                      Path(S1106,S1172)
	S1174= GPRegs.Rdata1=a                                      GPRegs-Read(S1173,S1062)
	S1175= IR.Out21_31=>CU.IRFunc                               Premise(F496)
	S1176= CU.IRFunc=1489                                       Path(S1108,S1175)
	S1177= CU.Func=alu_subfe                                    CU(S1171,S1176)
	S1178= GPRegs.Rdata1=>A.In                                  Premise(F497)
	S1179= A.In=a                                               Path(S1174,S1178)
	S1180= A.Out=>ALU.A                                         Premise(F498)
	S1181= ALU.A=a                                              Path(S1109,S1180)
	S1182= B.Out=>ALU.B                                         Premise(F499)
	S1183= ALU.B=32'hFFFFFFFF                                   Path(S1112,S1182)
	S1184= XER.CAOut=>ALU.CAIn                                  Premise(F500)
	S1185= ALU.CAIn=ca                                          Path(S1116,S1184)
	S1186= CU.Func=>ALU.Func                                    Premise(F501)
	S1187= ALU.Func=alu_subfe                                   Path(S1177,S1186)
	S1188= ALU.Out=32'hFFFFFFFF-a+ca                            ALU(S1181,S1183,S1185)
	S1189= ALU.CMP=Compare0(32'hFFFFFFFF-a+ca)                  ALU(S1181,S1183,S1185)
	S1190= ALU.OV=OverFlow(32'hFFFFFFFF-a+ca)                   ALU(S1181,S1183,S1185)
	S1191= ALU.CA=Carry(32'hFFFFFFFF-a+ca)                      ALU(S1181,S1183,S1185)
	S1192= ALU.Out=>ALUOut.In                                   Premise(F502)
	S1193= ALUOut.In=32'hFFFFFFFF-a+ca                          Path(S1188,S1192)
	S1194= ALU.CA=>CAReg.In                                     Premise(F503)
	S1195= CAReg.In=Carry(32'hFFFFFFFF-a+ca)                    Path(S1191,S1194)
	S1196= ALU.CMP=>DataCmb.A                                   Premise(F504)
	S1197= DataCmb.A=Compare0(32'hFFFFFFFF-a+ca)                Path(S1189,S1196)
	S1198= ORGate.Out=>DataCmb.B                                Premise(F505)
	S1199= ALU.OV=>OVReg.In                                     Premise(F506)
	S1200= OVReg.In=OverFlow(32'hFFFFFFFF-a+ca)                 Path(S1190,S1199)
	S1201= XER.SOOut=>ORGate.A                                  Premise(F507)
	S1202= ORGate.A=so                                          Path(S1115,S1201)
	S1203= ALU.OV=>ORGate.B                                     Premise(F508)
	S1204= ORGate.B=OverFlow(32'hFFFFFFFF-a+ca)                 Path(S1190,S1203)
	S1205= ORGate.Out=so|OverFlow(32'hFFFFFFFF-a+ca)            ORGate(S1202,S1204)
	S1206= DataCmb.B=so|OverFlow(32'hFFFFFFFF-a+ca)             Path(S1205,S1198)
	S1207= DataCmb.Out={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DataCmb(S1197,S1206)
	S1208= ORGate.Out=>DR1bit.In                                Premise(F509)
	S1209= DR1bit.In=so|OverFlow(32'hFFFFFFFF-a+ca)             Path(S1205,S1208)
	S1210= DataCmb.Out=>DR4bit.In                               Premise(F510)
	S1211= DR4bit.In={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}Path(S1207,S1210)
	S1212= IR.Out6_10=>GPRegs.WReg                              Premise(F511)
	S1213= GPRegs.WReg=rT                                       Path(S1105,S1212)
	S1214= ALUOut.Out=>GPRegs.WData                             Premise(F512)
	S1215= GPRegs.WData=32'hFFFFFFFF-a+ca                       Path(S1117,S1214)
	S1216= DR4bit.Out=>CRRegs.CR0In                             Premise(F513)
	S1217= CRRegs.CR0In={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}Path(S1129,S1216)
	S1218= DR1bit.Out=>XER.SOIn                                 Premise(F514)
	S1219= XER.SOIn=so|OverFlow(32'hFFFFFFFF-a+ca)              Path(S1126,S1218)
	S1220= CAReg.Out=>XER.CAIn                                  Premise(F515)
	S1221= XER.CAIn=Carry(32'hFFFFFFFF-a+ca)                    Path(S1120,S1220)
	S1222= OVReg.Out=>XER.OVIn                                  Premise(F516)
	S1223= XER.OVIn=OverFlow(32'hFFFFFFFF-a+ca)                 Path(S1123,S1222)
	S1224= CtrlPIDReg=0                                         Premise(F517)
	S1225= [PIDReg]=pid                                         PIDReg-Hold(S1040,S1224)
	S1226= CtrlIMMU=0                                           Premise(F518)
	S1227= CtrlPC=0                                             Premise(F519)
	S1228= CtrlPCInc=0                                          Premise(F520)
	S1229= PC[CIA]=addr                                         PC-Hold(S1044,S1228)
	S1230= PC[Out]=addr+4                                       PC-Hold(S1045,S1227,S1228)
	S1231= CtrlIAddrReg=0                                       Premise(F521)
	S1232= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1047,S1231)
	S1233= CtrlIMMUHitReg=0                                     Premise(F522)
	S1234= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1049,S1233)
	S1235= CtrlICache=0                                         Premise(F523)
	S1236= ICache[addr]={31,rT,rA,0,1489}                       ICache-Hold(S1051,S1235)
	S1237= CtrlICacheReg=0                                      Premise(F524)
	S1238= [ICacheReg]={31,rT,rA,0,1489}                        ICacheReg-Hold(S1053,S1237)
	S1239= CtrlICacheHitReg=0                                   Premise(F525)
	S1240= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1055,S1239)
	S1241= CtrlIMem=0                                           Premise(F526)
	S1242= IMem[{pid,addr}]={31,rT,rA,0,1489}                   IMem-Hold(S1057,S1241)
	S1243= CtrlIRMux=0                                          Premise(F527)
	S1244= CtrlIR=0                                             Premise(F528)
	S1245= [IR]={31,rT,rA,0,1489}                               IR-Hold(S1060,S1244)
	S1246= CtrlGPRegs=1                                         Premise(F529)
	S1247= GPRegs[rT]=32'hFFFFFFFF-a+ca                         GPRegs-Write(S1213,S1215,S1246)
	S1248= CtrlA=0                                              Premise(F530)
	S1249= [A]=a                                                A-Hold(S1064,S1248)
	S1250= CtrlB=0                                              Premise(F531)
	S1251= [B]=32'hFFFFFFFF                                     B-Hold(S1066,S1250)
	S1252= CtrlXERSO=1                                          Premise(F532)
	S1253= XER[SO]=so|OverFlow(32'hFFFFFFFF-a+ca)               XER-SO-Write(S1219,S1252)
	S1254= CtrlXEROV=1                                          Premise(F533)
	S1255= XER[OV]=OverFlow(32'hFFFFFFFF-a+ca)                  XER-OV-Write(S1223,S1254)
	S1256= CtrlXERCA=1                                          Premise(F534)
	S1257= XER[CA]=Carry(32'hFFFFFFFF-a+ca)                     XER-CA-Write(S1221,S1256)
	S1258= CtrlALUOut=0                                         Premise(F535)
	S1259= [ALUOut]=32'hFFFFFFFF-a+ca                           ALUOut-Hold(S1073,S1258)
	S1260= CtrlCAReg=0                                          Premise(F536)
	S1261= [CAReg]=Carry(32'hFFFFFFFF-a+ca)                     CAReg-Hold(S1075,S1260)
	S1262= CtrlOVReg=0                                          Premise(F537)
	S1263= [OVReg]=OverFlow(32'hFFFFFFFF-a+ca)                  OVReg-Hold(S1077,S1262)
	S1264= CtrlDR1bit=0                                         Premise(F538)
	S1265= [DR1bit]=so|OverFlow(32'hFFFFFFFF-a+ca)              DR1bit-Hold(S1079,S1264)
	S1266= CtrlDR4bit=0                                         Premise(F539)
	S1267= [DR4bit]={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DR4bit-Hold(S1081,S1266)
	S1268= CtrlCRRegs=0                                         Premise(F540)
	S1269= CtrlCRRegsCR0=1                                      Premise(F541)
	S1270= CRRegs[CR0]={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}CRRegs-CR0-Write(S1217,S1269)
	S1271= CtrlCRRegsW4bitRegs=0                                Premise(F542)
	S1272= CtrlCRRegsW1bitRegs=0                                Premise(F543)

POST	S1225= [PIDReg]=pid                                         PIDReg-Hold(S1040,S1224)
	S1229= PC[CIA]=addr                                         PC-Hold(S1044,S1228)
	S1230= PC[Out]=addr+4                                       PC-Hold(S1045,S1227,S1228)
	S1232= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S1047,S1231)
	S1234= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S1049,S1233)
	S1236= ICache[addr]={31,rT,rA,0,1489}                       ICache-Hold(S1051,S1235)
	S1238= [ICacheReg]={31,rT,rA,0,1489}                        ICacheReg-Hold(S1053,S1237)
	S1240= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S1055,S1239)
	S1242= IMem[{pid,addr}]={31,rT,rA,0,1489}                   IMem-Hold(S1057,S1241)
	S1245= [IR]={31,rT,rA,0,1489}                               IR-Hold(S1060,S1244)
	S1247= GPRegs[rT]=32'hFFFFFFFF-a+ca                         GPRegs-Write(S1213,S1215,S1246)
	S1249= [A]=a                                                A-Hold(S1064,S1248)
	S1251= [B]=32'hFFFFFFFF                                     B-Hold(S1066,S1250)
	S1253= XER[SO]=so|OverFlow(32'hFFFFFFFF-a+ca)               XER-SO-Write(S1219,S1252)
	S1255= XER[OV]=OverFlow(32'hFFFFFFFF-a+ca)                  XER-OV-Write(S1223,S1254)
	S1257= XER[CA]=Carry(32'hFFFFFFFF-a+ca)                     XER-CA-Write(S1221,S1256)
	S1259= [ALUOut]=32'hFFFFFFFF-a+ca                           ALUOut-Hold(S1073,S1258)
	S1261= [CAReg]=Carry(32'hFFFFFFFF-a+ca)                     CAReg-Hold(S1075,S1260)
	S1263= [OVReg]=OverFlow(32'hFFFFFFFF-a+ca)                  OVReg-Hold(S1077,S1262)
	S1265= [DR1bit]=so|OverFlow(32'hFFFFFFFF-a+ca)              DR1bit-Hold(S1079,S1264)
	S1267= [DR4bit]={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}DR4bit-Hold(S1081,S1266)
	S1270= CRRegs[CR0]={Compare0(32'hFFFFFFFF-a+ca),so|OverFlow(32'hFFFFFFFF-a+ca)}CRRegs-CR0-Write(S1217,S1269)

