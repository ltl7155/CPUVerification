
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={40,rS,rT,offset}                      Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= IMMU.Addr=>IAddrReg.In                                  Premise(F72)
	S6= PC.Out=>IMMU.IEA                                        Premise(F78)
	S7= IMMU.IEA=addr                                           Path(S4,S6)
	S8= CP0.ASID=>IMMU.PID                                      Premise(F79)
	S9= IMMU.PID=pid                                            Path(S3,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S9,S7)
	S11= IAddrReg.In={pid,addr}                                 Path(S10,S5)
	S12= CtrlIAddrReg=1                                         Premise(F155)
	S13= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S11,S12)
	S14= CtrlPC=0                                               Premise(F156)
	S15= CtrlPCInc=0                                            Premise(F157)
	S16= PC[Out]=addr                                           PC-Hold(S1,S14,S15)
	S17= CtrlIMem=0                                             Premise(F158)
	S18= IMem[{pid,addr}]={40,rS,rT,offset}                     IMem-Hold(S2,S17)

IMMU	S19= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S13)
	S20= PC.Out=addr                                            PC-Out(S16)
	S21= PC.Out=>ICache.IEA                                     Premise(F229)
	S22= ICache.IEA=addr                                        Path(S20,S21)
	S23= IMem.MEM8WordOut=>ICache.WData                         Premise(F231)
	S24= IAddrReg.Out=>IMem.RAddr                               Premise(F236)
	S25= IMem.RAddr={pid,addr}                                  Path(S19,S24)
	S26= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S25,S18)
	S27= ICache.WData=IMemGet8Word({pid,addr})                  Path(S26,S23)
	S28= CtrlICache=1                                           Premise(F285)
	S29= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S22,S27,S28)
	S30= CtrlPC=0                                               Premise(F312)
	S31= CtrlPCInc=1                                            Premise(F313)
	S32= PC[Out]=addr+4                                         PC-Inc(S16,S30,S31)

ID	S33= CtrlICache=0                                           Premise(F442)
	S34= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S29,S33)
	S35= CtrlPC=0                                               Premise(F469)
	S36= CtrlPCInc=0                                            Premise(F470)
	S37= PC[Out]=addr+4                                         PC-Hold(S32,S35,S36)

EX	S38= CtrlICache=0                                           Premise(F601)
	S39= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S34,S38)
	S40= CtrlPC=0                                               Premise(F628)
	S41= CtrlPCInc=0                                            Premise(F629)
	S42= PC[Out]=addr+4                                         PC-Hold(S37,S40,S41)

MEM	S43= CtrlICache=0                                           Premise(F758)
	S44= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S39,S43)
	S45= CtrlPC=0                                               Premise(F785)
	S46= CtrlPCInc=0                                            Premise(F786)
	S47= PC[Out]=addr+4                                         PC-Hold(S42,S45,S46)

DMMU1	S48= CtrlICache=0                                           Premise(F915)
	S49= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S44,S48)
	S50= CtrlPC=0                                               Premise(F942)
	S51= CtrlPCInc=0                                            Premise(F943)
	S52= PC[Out]=addr+4                                         PC-Hold(S47,S50,S51)

DMMU2	S53= CtrlICache=0                                           Premise(F1072)
	S54= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S49,S53)
	S55= CtrlPC=0                                               Premise(F1099)
	S56= CtrlPCInc=0                                            Premise(F1100)
	S57= PC[Out]=addr+4                                         PC-Hold(S52,S55,S56)

WB	S58= CtrlICache=0                                           Premise(F1229)
	S59= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S54,S58)
	S60= CtrlPC=0                                               Premise(F1256)
	S61= CtrlPCInc=0                                            Premise(F1257)
	S62= PC[Out]=addr+4                                         PC-Hold(S57,S60,S61)

POST	S59= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S54,S58)
	S62= PC[Out]=addr+4                                         PC-Hold(S57,S60,S61)

