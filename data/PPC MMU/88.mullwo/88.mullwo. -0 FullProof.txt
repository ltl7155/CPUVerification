
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,1495}                     Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S8= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S9= PC.Out=addr                                             PC-Out(S1)
	S10= XER.SOOut=so                                           XER-SO-Out(S5)
	S11= PIDReg.Out=>IMMU.PID                                   Premise(F6)
	S12= IMMU.PID=pid                                           Path(S6,S11)
	S13= PC.Out=>IMMU.IEA                                       Premise(F7)
	S14= IMMU.IEA=addr                                          Path(S9,S13)
	S15= IMMU.Addr={pid,addr}                                   IMMU-Search(S12,S14)
	S16= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S12,S14)
	S17= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S18= IAddrReg.In={pid,addr}                                 Path(S15,S17)
	S19= IMMU.Hit=>IMMUHitReg.In                                Premise(F9)
	S20= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S16,S19)
	S21= PC.Out=>ICache.IEA                                     Premise(F10)
	S22= ICache.IEA=addr                                        Path(S9,S21)
	S23= ICache.Hit=ICacheHit(addr)                             ICache-Search(S22)
	S24= ICache.Out=>ICacheReg.In                               Premise(F11)
	S25= ICache.Hit=>ICacheHitReg.In                            Premise(F12)
	S26= ICacheHitReg.In=ICacheHit(addr)                        Path(S23,S25)
	S27= IMMUHitReg.Out=>CU.IMemHit                             Premise(F13)
	S28= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F14)
	S29= IAddrReg.Out=>IMem.RAddr                               Premise(F15)
	S30= IMem.Out=>IRMux.MemData                                Premise(F16)
	S31= ICacheReg.Out=>IRMux.CacheData                         Premise(F17)
	S32= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F18)
	S33= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F19)
	S34= IRMux.Out=>IR.In                                       Premise(F20)
	S35= IMem.MEM8WordOut=>ICache.WData                         Premise(F21)
	S36= PC.Out=>ICache.IEA                                     Premise(F22)
	S37= IR.Out0_5=>CU.Op                                       Premise(F23)
	S38= IR.Out11_15=>GPRegs.RReg1                              Premise(F24)
	S39= IR.Out16_20=>GPRegs.RReg2                              Premise(F25)
	S40= IR.Out21_31=>CU.IRFunc                                 Premise(F26)
	S41= GPRegs.Rdata1=>A.In                                    Premise(F27)
	S42= GPRegs.Rdata2=>B.In                                    Premise(F28)
	S43= A.Out=>MDU.A                                           Premise(F29)
	S44= B.Out=>MDU.B                                           Premise(F30)
	S45= CU.Func=>MDU.Func                                      Premise(F31)
	S46= MDU.Out32_63=>MDUOut.In                                Premise(F32)
	S47= XER.SOOut=>ORGate.A                                    Premise(F33)
	S48= ORGate.A=so                                            Path(S10,S47)
	S49= MDU.OV=>ORGate.B                                       Premise(F34)
	S50= MDU.OV=>OVReg.In                                       Premise(F35)
	S51= ORGate.Out=>DR1bit.In                                  Premise(F36)
	S52= MDU.CMP=>DataCmb.A                                     Premise(F37)
	S53= XER.SOOut=>DataCmb.B                                   Premise(F38)
	S54= DataCmb.B=so                                           Path(S10,S53)
	S55= DataCmb.Out=>DR4bit.In                                 Premise(F39)
	S56= IR.Out6_10=>GPRegs.WReg                                Premise(F40)
	S57= MDUOut.Out=>GPRegs.WData                               Premise(F41)
	S58= DR4bit.Out=>CRRegs.CR0In                               Premise(F42)
	S59= DR1bit.Out=>XER.SOIn                                   Premise(F43)
	S60= OVReg.Out=>XER.OVIn                                    Premise(F44)
	S61= CtrlPIDReg=0                                           Premise(F45)
	S62= [PIDReg]=pid                                           PIDReg-Hold(S0,S61)
	S63= CtrlIMMU=0                                             Premise(F46)
	S64= CtrlPC=0                                               Premise(F47)
	S65= CtrlPCInc=0                                            Premise(F48)
	S66= PC[Out]=addr                                           PC-Hold(S1,S64,S65)
	S67= CtrlIAddrReg=1                                         Premise(F49)
	S68= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S18,S67)
	S69= CtrlIMMUHitReg=1                                       Premise(F50)
	S70= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S20,S69)
	S71= CtrlICache=0                                           Premise(F51)
	S72= CtrlICacheReg=1                                        Premise(F52)
	S73= CtrlICacheHitReg=1                                     Premise(F53)
	S74= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S26,S73)
	S75= CtrlIMem=0                                             Premise(F54)
	S76= IMem[{pid,addr}]={31,rT,rA,rB,1495}                    IMem-Hold(S2,S75)
	S77= CtrlIRMux=0                                            Premise(F55)
	S78= CtrlIR=0                                               Premise(F56)
	S79= CtrlGPRegs=0                                           Premise(F57)
	S80= GPRegs[rA]=a                                           GPRegs-Hold(S3,S79)
	S81= GPRegs[rB]=b                                           GPRegs-Hold(S4,S79)
	S82= CtrlA=0                                                Premise(F58)
	S83= CtrlB=0                                                Premise(F59)
	S84= CtrlMDUOut=0                                           Premise(F60)
	S85= CtrlXERSO=0                                            Premise(F61)
	S86= XER[SO]=so                                             XER-SO-Hold(S5,S85)
	S87= CtrlXEROV=0                                            Premise(F62)
	S88= CtrlXERCA=0                                            Premise(F63)
	S89= CtrlOVReg=0                                            Premise(F64)
	S90= CtrlDR1bit=0                                           Premise(F65)
	S91= CtrlDR4bit=0                                           Premise(F66)
	S92= CtrlCRRegs=0                                           Premise(F67)
	S93= CtrlCRRegsCR0=0                                        Premise(F68)
	S94= CtrlCRRegsW4bitRegs=0                                  Premise(F69)
	S95= CtrlCRRegsW1bitRegs=0                                  Premise(F70)

IMMU	S96= PIDReg.Out=pid                                         PIDReg-Out(S62)
	S97= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S62)
	S98= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S62)
	S99= PC.Out=addr                                            PC-Out(S66)
	S100= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S68)
	S101= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S68)
	S102= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S68)
	S103= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S70)
	S104= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S70)
	S105= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S70)
	S106= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S74)
	S107= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S74)
	S108= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S74)
	S109= XER.SOOut=so                                          XER-SO-Out(S86)
	S110= PIDReg.Out=>IMMU.PID                                  Premise(F71)
	S111= IMMU.PID=pid                                          Path(S96,S110)
	S112= PC.Out=>IMMU.IEA                                      Premise(F72)
	S113= IMMU.IEA=addr                                         Path(S99,S112)
	S114= IMMU.Addr={pid,addr}                                  IMMU-Search(S111,S113)
	S115= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S111,S113)
	S116= IMMU.Addr=>IAddrReg.In                                Premise(F73)
	S117= IAddrReg.In={pid,addr}                                Path(S114,S116)
	S118= IMMU.Hit=>IMMUHitReg.In                               Premise(F74)
	S119= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S115,S118)
	S120= PC.Out=>ICache.IEA                                    Premise(F75)
	S121= ICache.IEA=addr                                       Path(S99,S120)
	S122= ICache.Hit=ICacheHit(addr)                            ICache-Search(S121)
	S123= ICache.Out=>ICacheReg.In                              Premise(F76)
	S124= ICache.Hit=>ICacheHitReg.In                           Premise(F77)
	S125= ICacheHitReg.In=ICacheHit(addr)                       Path(S122,S124)
	S126= IMMUHitReg.Out=>CU.IMemHit                            Premise(F78)
	S127= CU.IMemHit=IMMUHit(pid,addr)                          Path(S103,S126)
	S128= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F79)
	S129= CU.ICacheHit=ICacheHit(addr)                          Path(S106,S128)
	S130= IAddrReg.Out=>IMem.RAddr                              Premise(F80)
	S131= IMem.RAddr={pid,addr}                                 Path(S100,S130)
	S132= IMem.Out={31,rT,rA,rB,1495}                           IMem-Read(S131,S76)
	S133= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S131,S76)
	S134= IMem.Out=>IRMux.MemData                               Premise(F81)
	S135= IRMux.MemData={31,rT,rA,rB,1495}                      Path(S132,S134)
	S136= IRMux.Out={31,rT,rA,rB,1495}                          IRMux-Select(S135)
	S137= ICacheReg.Out=>IRMux.CacheData                        Premise(F82)
	S138= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F83)
	S139= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S103,S138)
	S140= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F84)
	S141= IRMux.CacheSel=ICacheHit(addr)                        Path(S106,S140)
	S142= IRMux.Out=>IR.In                                      Premise(F85)
	S143= IR.In={31,rT,rA,rB,1495}                              Path(S136,S142)
	S144= IMem.MEM8WordOut=>ICache.WData                        Premise(F86)
	S145= ICache.WData=IMemGet8Word({pid,addr})                 Path(S133,S144)
	S146= PC.Out=>ICache.IEA                                    Premise(F87)
	S147= IR.Out0_5=>CU.Op                                      Premise(F88)
	S148= IR.Out11_15=>GPRegs.RReg1                             Premise(F89)
	S149= IR.Out16_20=>GPRegs.RReg2                             Premise(F90)
	S150= IR.Out21_31=>CU.IRFunc                                Premise(F91)
	S151= GPRegs.Rdata1=>A.In                                   Premise(F92)
	S152= GPRegs.Rdata2=>B.In                                   Premise(F93)
	S153= A.Out=>MDU.A                                          Premise(F94)
	S154= B.Out=>MDU.B                                          Premise(F95)
	S155= CU.Func=>MDU.Func                                     Premise(F96)
	S156= MDU.Out32_63=>MDUOut.In                               Premise(F97)
	S157= XER.SOOut=>ORGate.A                                   Premise(F98)
	S158= ORGate.A=so                                           Path(S109,S157)
	S159= MDU.OV=>ORGate.B                                      Premise(F99)
	S160= MDU.OV=>OVReg.In                                      Premise(F100)
	S161= ORGate.Out=>DR1bit.In                                 Premise(F101)
	S162= MDU.CMP=>DataCmb.A                                    Premise(F102)
	S163= XER.SOOut=>DataCmb.B                                  Premise(F103)
	S164= DataCmb.B=so                                          Path(S109,S163)
	S165= DataCmb.Out=>DR4bit.In                                Premise(F104)
	S166= IR.Out6_10=>GPRegs.WReg                               Premise(F105)
	S167= MDUOut.Out=>GPRegs.WData                              Premise(F106)
	S168= DR4bit.Out=>CRRegs.CR0In                              Premise(F107)
	S169= DR1bit.Out=>XER.SOIn                                  Premise(F108)
	S170= OVReg.Out=>XER.OVIn                                   Premise(F109)
	S171= CtrlPIDReg=0                                          Premise(F110)
	S172= [PIDReg]=pid                                          PIDReg-Hold(S62,S171)
	S173= CtrlIMMU=0                                            Premise(F111)
	S174= CtrlPC=0                                              Premise(F112)
	S175= CtrlPCInc=1                                           Premise(F113)
	S176= PC[Out]=addr+4                                        PC-Inc(S66,S174,S175)
	S177= PC[CIA]=addr                                          PC-Inc(S66,S174,S175)
	S178= CtrlIAddrReg=0                                        Premise(F114)
	S179= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S68,S178)
	S180= CtrlIMMUHitReg=0                                      Premise(F115)
	S181= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S70,S180)
	S182= CtrlICache=1                                          Premise(F116)
	S183= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S121,S145,S182)
	S184= CtrlICacheReg=0                                       Premise(F117)
	S185= CtrlICacheHitReg=0                                    Premise(F118)
	S186= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S74,S185)
	S187= CtrlIMem=0                                            Premise(F119)
	S188= IMem[{pid,addr}]={31,rT,rA,rB,1495}                   IMem-Hold(S76,S187)
	S189= CtrlIRMux=0                                           Premise(F120)
	S190= CtrlIR=1                                              Premise(F121)
	S191= [IR]={31,rT,rA,rB,1495}                               IR-Write(S143,S190)
	S192= CtrlGPRegs=0                                          Premise(F122)
	S193= GPRegs[rA]=a                                          GPRegs-Hold(S80,S192)
	S194= GPRegs[rB]=b                                          GPRegs-Hold(S81,S192)
	S195= CtrlA=0                                               Premise(F123)
	S196= CtrlB=0                                               Premise(F124)
	S197= CtrlMDUOut=0                                          Premise(F125)
	S198= CtrlXERSO=0                                           Premise(F126)
	S199= XER[SO]=so                                            XER-SO-Hold(S86,S198)
	S200= CtrlXEROV=0                                           Premise(F127)
	S201= CtrlXERCA=0                                           Premise(F128)
	S202= CtrlOVReg=0                                           Premise(F129)
	S203= CtrlDR1bit=0                                          Premise(F130)
	S204= CtrlDR4bit=0                                          Premise(F131)
	S205= CtrlCRRegs=0                                          Premise(F132)
	S206= CtrlCRRegsCR0=0                                       Premise(F133)
	S207= CtrlCRRegsW4bitRegs=0                                 Premise(F134)
	S208= CtrlCRRegsW1bitRegs=0                                 Premise(F135)

ID	S209= PIDReg.Out=pid                                        PIDReg-Out(S172)
	S210= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S172)
	S211= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S172)
	S212= PC.Out=addr+4                                         PC-Out(S176)
	S213= PC.CIA=addr                                           PC-Out(S177)
	S214= PC.CIA31_28=addr[31:28]                               PC-Out(S177)
	S215= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S179)
	S216= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S179)
	S217= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S179)
	S218= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S181)
	S219= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S181)
	S220= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S181)
	S221= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S186)
	S222= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S186)
	S223= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S186)
	S224= IR.Out0_5=31                                          IR-Out(S191)
	S225= IR.Out6_10=rT                                         IR-Out(S191)
	S226= IR.Out11_15=rA                                        IR-Out(S191)
	S227= IR.Out16_20=rB                                        IR-Out(S191)
	S228= IR.Out21_31=1495                                      IR-Out(S191)
	S229= XER.SOOut=so                                          XER-SO-Out(S199)
	S230= PIDReg.Out=>IMMU.PID                                  Premise(F136)
	S231= IMMU.PID=pid                                          Path(S209,S230)
	S232= PC.Out=>IMMU.IEA                                      Premise(F137)
	S233= IMMU.IEA=addr+4                                       Path(S212,S232)
	S234= IMMU.Addr={pid,addr+4}                                IMMU-Search(S231,S233)
	S235= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S231,S233)
	S236= IMMU.Addr=>IAddrReg.In                                Premise(F138)
	S237= IAddrReg.In={pid,addr+4}                              Path(S234,S236)
	S238= IMMU.Hit=>IMMUHitReg.In                               Premise(F139)
	S239= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S235,S238)
	S240= PC.Out=>ICache.IEA                                    Premise(F140)
	S241= ICache.IEA=addr+4                                     Path(S212,S240)
	S242= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S241)
	S243= ICache.Out=>ICacheReg.In                              Premise(F141)
	S244= ICache.Hit=>ICacheHitReg.In                           Premise(F142)
	S245= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S242,S244)
	S246= IMMUHitReg.Out=>CU.IMemHit                            Premise(F143)
	S247= CU.IMemHit=IMMUHit(pid,addr)                          Path(S218,S246)
	S248= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F144)
	S249= CU.ICacheHit=ICacheHit(addr)                          Path(S221,S248)
	S250= IAddrReg.Out=>IMem.RAddr                              Premise(F145)
	S251= IMem.RAddr={pid,addr}                                 Path(S215,S250)
	S252= IMem.Out={31,rT,rA,rB,1495}                           IMem-Read(S251,S188)
	S253= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S251,S188)
	S254= IMem.Out=>IRMux.MemData                               Premise(F146)
	S255= IRMux.MemData={31,rT,rA,rB,1495}                      Path(S252,S254)
	S256= IRMux.Out={31,rT,rA,rB,1495}                          IRMux-Select(S255)
	S257= ICacheReg.Out=>IRMux.CacheData                        Premise(F147)
	S258= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F148)
	S259= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S218,S258)
	S260= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F149)
	S261= IRMux.CacheSel=ICacheHit(addr)                        Path(S221,S260)
	S262= IRMux.Out=>IR.In                                      Premise(F150)
	S263= IR.In={31,rT,rA,rB,1495}                              Path(S256,S262)
	S264= IMem.MEM8WordOut=>ICache.WData                        Premise(F151)
	S265= ICache.WData=IMemGet8Word({pid,addr})                 Path(S253,S264)
	S266= PC.Out=>ICache.IEA                                    Premise(F152)
	S267= IR.Out0_5=>CU.Op                                      Premise(F153)
	S268= CU.Op=31                                              Path(S224,S267)
	S269= IR.Out11_15=>GPRegs.RReg1                             Premise(F154)
	S270= GPRegs.RReg1=rA                                       Path(S226,S269)
	S271= GPRegs.Rdata1=a                                       GPRegs-Read(S270,S193)
	S272= IR.Out16_20=>GPRegs.RReg2                             Premise(F155)
	S273= GPRegs.RReg2=rB                                       Path(S227,S272)
	S274= GPRegs.Rdata2=b                                       GPRegs-Read(S273,S194)
	S275= IR.Out21_31=>CU.IRFunc                                Premise(F156)
	S276= CU.IRFunc=1495                                        Path(S228,S275)
	S277= CU.Func=mdu_mul                                       CU(S268,S276)
	S278= GPRegs.Rdata1=>A.In                                   Premise(F157)
	S279= A.In=a                                                Path(S271,S278)
	S280= GPRegs.Rdata2=>B.In                                   Premise(F158)
	S281= B.In=b                                                Path(S274,S280)
	S282= A.Out=>MDU.A                                          Premise(F159)
	S283= B.Out=>MDU.B                                          Premise(F160)
	S284= CU.Func=>MDU.Func                                     Premise(F161)
	S285= MDU.Func=mdu_mul                                      Path(S277,S284)
	S286= MDU.Out32_63=>MDUOut.In                               Premise(F162)
	S287= XER.SOOut=>ORGate.A                                   Premise(F163)
	S288= ORGate.A=so                                           Path(S229,S287)
	S289= MDU.OV=>ORGate.B                                      Premise(F164)
	S290= MDU.OV=>OVReg.In                                      Premise(F165)
	S291= ORGate.Out=>DR1bit.In                                 Premise(F166)
	S292= MDU.CMP=>DataCmb.A                                    Premise(F167)
	S293= XER.SOOut=>DataCmb.B                                  Premise(F168)
	S294= DataCmb.B=so                                          Path(S229,S293)
	S295= DataCmb.Out=>DR4bit.In                                Premise(F169)
	S296= IR.Out6_10=>GPRegs.WReg                               Premise(F170)
	S297= GPRegs.WReg=rT                                        Path(S225,S296)
	S298= MDUOut.Out=>GPRegs.WData                              Premise(F171)
	S299= DR4bit.Out=>CRRegs.CR0In                              Premise(F172)
	S300= DR1bit.Out=>XER.SOIn                                  Premise(F173)
	S301= OVReg.Out=>XER.OVIn                                   Premise(F174)
	S302= CtrlPIDReg=0                                          Premise(F175)
	S303= [PIDReg]=pid                                          PIDReg-Hold(S172,S302)
	S304= CtrlIMMU=0                                            Premise(F176)
	S305= CtrlPC=0                                              Premise(F177)
	S306= CtrlPCInc=0                                           Premise(F178)
	S307= PC[CIA]=addr                                          PC-Hold(S177,S306)
	S308= PC[Out]=addr+4                                        PC-Hold(S176,S305,S306)
	S309= CtrlIAddrReg=0                                        Premise(F179)
	S310= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S179,S309)
	S311= CtrlIMMUHitReg=0                                      Premise(F180)
	S312= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S181,S311)
	S313= CtrlICache=0                                          Premise(F181)
	S314= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S183,S313)
	S315= CtrlICacheReg=0                                       Premise(F182)
	S316= CtrlICacheHitReg=0                                    Premise(F183)
	S317= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S186,S316)
	S318= CtrlIMem=0                                            Premise(F184)
	S319= IMem[{pid,addr}]={31,rT,rA,rB,1495}                   IMem-Hold(S188,S318)
	S320= CtrlIRMux=0                                           Premise(F185)
	S321= CtrlIR=0                                              Premise(F186)
	S322= [IR]={31,rT,rA,rB,1495}                               IR-Hold(S191,S321)
	S323= CtrlGPRegs=0                                          Premise(F187)
	S324= GPRegs[rA]=a                                          GPRegs-Hold(S193,S323)
	S325= GPRegs[rB]=b                                          GPRegs-Hold(S194,S323)
	S326= CtrlA=1                                               Premise(F188)
	S327= [A]=a                                                 A-Write(S279,S326)
	S328= CtrlB=1                                               Premise(F189)
	S329= [B]=b                                                 B-Write(S281,S328)
	S330= CtrlMDUOut=0                                          Premise(F190)
	S331= CtrlXERSO=0                                           Premise(F191)
	S332= XER[SO]=so                                            XER-SO-Hold(S199,S331)
	S333= CtrlXEROV=0                                           Premise(F192)
	S334= CtrlXERCA=0                                           Premise(F193)
	S335= CtrlOVReg=0                                           Premise(F194)
	S336= CtrlDR1bit=0                                          Premise(F195)
	S337= CtrlDR4bit=0                                          Premise(F196)
	S338= CtrlCRRegs=0                                          Premise(F197)
	S339= CtrlCRRegsCR0=0                                       Premise(F198)
	S340= CtrlCRRegsW4bitRegs=0                                 Premise(F199)
	S341= CtrlCRRegsW1bitRegs=0                                 Premise(F200)

EX	S342= PIDReg.Out=pid                                        PIDReg-Out(S303)
	S343= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S303)
	S344= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S303)
	S345= PC.CIA=addr                                           PC-Out(S307)
	S346= PC.CIA31_28=addr[31:28]                               PC-Out(S307)
	S347= PC.Out=addr+4                                         PC-Out(S308)
	S348= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S310)
	S349= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S310)
	S350= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S310)
	S351= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S312)
	S352= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S312)
	S353= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S312)
	S354= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S317)
	S355= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S317)
	S356= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S317)
	S357= IR.Out0_5=31                                          IR-Out(S322)
	S358= IR.Out6_10=rT                                         IR-Out(S322)
	S359= IR.Out11_15=rA                                        IR-Out(S322)
	S360= IR.Out16_20=rB                                        IR-Out(S322)
	S361= IR.Out21_31=1495                                      IR-Out(S322)
	S362= A.Out=a                                               A-Out(S327)
	S363= A.Out26_31=a[26:31]                                   A-Out(S327)
	S364= A.Out30_31=a[30:31]                                   A-Out(S327)
	S365= B.Out=b                                               B-Out(S329)
	S366= B.Out26_31=b[26:31]                                   B-Out(S329)
	S367= B.Out30_31=b[30:31]                                   B-Out(S329)
	S368= XER.SOOut=so                                          XER-SO-Out(S332)
	S369= PIDReg.Out=>IMMU.PID                                  Premise(F201)
	S370= IMMU.PID=pid                                          Path(S342,S369)
	S371= PC.Out=>IMMU.IEA                                      Premise(F202)
	S372= IMMU.IEA=addr+4                                       Path(S347,S371)
	S373= IMMU.Addr={pid,addr+4}                                IMMU-Search(S370,S372)
	S374= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S370,S372)
	S375= IMMU.Addr=>IAddrReg.In                                Premise(F203)
	S376= IAddrReg.In={pid,addr+4}                              Path(S373,S375)
	S377= IMMU.Hit=>IMMUHitReg.In                               Premise(F204)
	S378= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S374,S377)
	S379= PC.Out=>ICache.IEA                                    Premise(F205)
	S380= ICache.IEA=addr+4                                     Path(S347,S379)
	S381= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S380)
	S382= ICache.Out=>ICacheReg.In                              Premise(F206)
	S383= ICache.Hit=>ICacheHitReg.In                           Premise(F207)
	S384= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S381,S383)
	S385= IMMUHitReg.Out=>CU.IMemHit                            Premise(F208)
	S386= CU.IMemHit=IMMUHit(pid,addr)                          Path(S351,S385)
	S387= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F209)
	S388= CU.ICacheHit=ICacheHit(addr)                          Path(S354,S387)
	S389= IAddrReg.Out=>IMem.RAddr                              Premise(F210)
	S390= IMem.RAddr={pid,addr}                                 Path(S348,S389)
	S391= IMem.Out={31,rT,rA,rB,1495}                           IMem-Read(S390,S319)
	S392= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S390,S319)
	S393= IMem.Out=>IRMux.MemData                               Premise(F211)
	S394= IRMux.MemData={31,rT,rA,rB,1495}                      Path(S391,S393)
	S395= IRMux.Out={31,rT,rA,rB,1495}                          IRMux-Select(S394)
	S396= ICacheReg.Out=>IRMux.CacheData                        Premise(F212)
	S397= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F213)
	S398= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S351,S397)
	S399= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F214)
	S400= IRMux.CacheSel=ICacheHit(addr)                        Path(S354,S399)
	S401= IRMux.Out=>IR.In                                      Premise(F215)
	S402= IR.In={31,rT,rA,rB,1495}                              Path(S395,S401)
	S403= IMem.MEM8WordOut=>ICache.WData                        Premise(F216)
	S404= ICache.WData=IMemGet8Word({pid,addr})                 Path(S392,S403)
	S405= PC.Out=>ICache.IEA                                    Premise(F217)
	S406= IR.Out0_5=>CU.Op                                      Premise(F218)
	S407= CU.Op=31                                              Path(S357,S406)
	S408= IR.Out11_15=>GPRegs.RReg1                             Premise(F219)
	S409= GPRegs.RReg1=rA                                       Path(S359,S408)
	S410= GPRegs.Rdata1=a                                       GPRegs-Read(S409,S324)
	S411= IR.Out16_20=>GPRegs.RReg2                             Premise(F220)
	S412= GPRegs.RReg2=rB                                       Path(S360,S411)
	S413= GPRegs.Rdata2=b                                       GPRegs-Read(S412,S325)
	S414= IR.Out21_31=>CU.IRFunc                                Premise(F221)
	S415= CU.IRFunc=1495                                        Path(S361,S414)
	S416= CU.Func=mdu_mul                                       CU(S407,S415)
	S417= GPRegs.Rdata1=>A.In                                   Premise(F222)
	S418= A.In=a                                                Path(S410,S417)
	S419= GPRegs.Rdata2=>B.In                                   Premise(F223)
	S420= B.In=b                                                Path(S413,S419)
	S421= A.Out=>MDU.A                                          Premise(F224)
	S422= MDU.A=a                                               Path(S362,S421)
	S423= B.Out=>MDU.B                                          Premise(F225)
	S424= MDU.B=b                                               Path(S365,S423)
	S425= CU.Func=>MDU.Func                                     Premise(F226)
	S426= MDU.Func=mdu_mul                                      Path(S416,S425)
	S427= MDU.Out0_31=(a×b)[0:31]                               MDU(S422,S424)
	S428= MDU.Out32_63=(a×b)[32:63]                             MDU(S422,S424)
	S429= MDU.Out16_47=(a×b)[16:47]                             MDU(S422,S424)
	S430= MDU.CMP=Compare0(a×b)                                 MDU(S422,S424)
	S431= MDU.OV=OverFlow(a×b)                                  MDU(S422,S424)
	S432= MDU.Out32_63=>MDUOut.In                               Premise(F227)
	S433= MDUOut.In=(a×b)[32:63]                                Path(S428,S432)
	S434= XER.SOOut=>ORGate.A                                   Premise(F228)
	S435= ORGate.A=so                                           Path(S368,S434)
	S436= MDU.OV=>ORGate.B                                      Premise(F229)
	S437= ORGate.B=OverFlow(a×b)                                Path(S431,S436)
	S438= ORGate.Out=so|OverFlow(a×b)                           ORGate(S435,S437)
	S439= MDU.OV=>OVReg.In                                      Premise(F230)
	S440= OVReg.In=OverFlow(a×b)                                Path(S431,S439)
	S441= ORGate.Out=>DR1bit.In                                 Premise(F231)
	S442= DR1bit.In=so|OverFlow(a×b)                            Path(S438,S441)
	S443= MDU.CMP=>DataCmb.A                                    Premise(F232)
	S444= DataCmb.A=Compare0(a×b)                               Path(S430,S443)
	S445= XER.SOOut=>DataCmb.B                                  Premise(F233)
	S446= DataCmb.B=so                                          Path(S368,S445)
	S447= DataCmb.Out={Compare0(a×b),so}                        DataCmb(S444,S446)
	S448= DataCmb.Out=>DR4bit.In                                Premise(F234)
	S449= DR4bit.In={Compare0(a×b),so}                          Path(S447,S448)
	S450= IR.Out6_10=>GPRegs.WReg                               Premise(F235)
	S451= GPRegs.WReg=rT                                        Path(S358,S450)
	S452= MDUOut.Out=>GPRegs.WData                              Premise(F236)
	S453= DR4bit.Out=>CRRegs.CR0In                              Premise(F237)
	S454= DR1bit.Out=>XER.SOIn                                  Premise(F238)
	S455= OVReg.Out=>XER.OVIn                                   Premise(F239)
	S456= CtrlPIDReg=0                                          Premise(F240)
	S457= [PIDReg]=pid                                          PIDReg-Hold(S303,S456)
	S458= CtrlIMMU=0                                            Premise(F241)
	S459= CtrlPC=0                                              Premise(F242)
	S460= CtrlPCInc=0                                           Premise(F243)
	S461= PC[CIA]=addr                                          PC-Hold(S307,S460)
	S462= PC[Out]=addr+4                                        PC-Hold(S308,S459,S460)
	S463= CtrlIAddrReg=0                                        Premise(F244)
	S464= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S310,S463)
	S465= CtrlIMMUHitReg=0                                      Premise(F245)
	S466= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S312,S465)
	S467= CtrlICache=0                                          Premise(F246)
	S468= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S314,S467)
	S469= CtrlICacheReg=0                                       Premise(F247)
	S470= CtrlICacheHitReg=0                                    Premise(F248)
	S471= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S317,S470)
	S472= CtrlIMem=0                                            Premise(F249)
	S473= IMem[{pid,addr}]={31,rT,rA,rB,1495}                   IMem-Hold(S319,S472)
	S474= CtrlIRMux=0                                           Premise(F250)
	S475= CtrlIR=0                                              Premise(F251)
	S476= [IR]={31,rT,rA,rB,1495}                               IR-Hold(S322,S475)
	S477= CtrlGPRegs=0                                          Premise(F252)
	S478= GPRegs[rA]=a                                          GPRegs-Hold(S324,S477)
	S479= GPRegs[rB]=b                                          GPRegs-Hold(S325,S477)
	S480= CtrlA=0                                               Premise(F253)
	S481= [A]=a                                                 A-Hold(S327,S480)
	S482= CtrlB=0                                               Premise(F254)
	S483= [B]=b                                                 B-Hold(S329,S482)
	S484= CtrlMDUOut=1                                          Premise(F255)
	S485= [MDUOut]=(a×b)[32:63]                                 MDUOut-Write(S433,S484)
	S486= CtrlXERSO=0                                           Premise(F256)
	S487= XER[SO]=so                                            XER-SO-Hold(S332,S486)
	S488= CtrlXEROV=0                                           Premise(F257)
	S489= CtrlXERCA=0                                           Premise(F258)
	S490= CtrlOVReg=1                                           Premise(F259)
	S491= [OVReg]=OverFlow(a×b)                                 OVReg-Write(S440,S490)
	S492= CtrlDR1bit=1                                          Premise(F260)
	S493= [DR1bit]=so|OverFlow(a×b)                             DR1bit-Write(S442,S492)
	S494= CtrlDR4bit=1                                          Premise(F261)
	S495= [DR4bit]={Compare0(a×b),so}                           DR4bit-Write(S449,S494)
	S496= CtrlCRRegs=0                                          Premise(F262)
	S497= CtrlCRRegsCR0=0                                       Premise(F263)
	S498= CtrlCRRegsW4bitRegs=0                                 Premise(F264)
	S499= CtrlCRRegsW1bitRegs=0                                 Premise(F265)

MEM	S500= PIDReg.Out=pid                                        PIDReg-Out(S457)
	S501= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S457)
	S502= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S457)
	S503= PC.CIA=addr                                           PC-Out(S461)
	S504= PC.CIA31_28=addr[31:28]                               PC-Out(S461)
	S505= PC.Out=addr+4                                         PC-Out(S462)
	S506= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S464)
	S507= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S464)
	S508= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S464)
	S509= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S466)
	S510= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S466)
	S511= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S466)
	S512= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S471)
	S513= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S471)
	S514= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S471)
	S515= IR.Out0_5=31                                          IR-Out(S476)
	S516= IR.Out6_10=rT                                         IR-Out(S476)
	S517= IR.Out11_15=rA                                        IR-Out(S476)
	S518= IR.Out16_20=rB                                        IR-Out(S476)
	S519= IR.Out21_31=1495                                      IR-Out(S476)
	S520= A.Out=a                                               A-Out(S481)
	S521= A.Out26_31=a[26:31]                                   A-Out(S481)
	S522= A.Out30_31=a[30:31]                                   A-Out(S481)
	S523= B.Out=b                                               B-Out(S483)
	S524= B.Out26_31=b[26:31]                                   B-Out(S483)
	S525= B.Out30_31=b[30:31]                                   B-Out(S483)
	S526= MDUOut.Out=(a×b)[32:63]                               MDUOut-Out(S485)
	S527= MDUOut.Out26_31=(a×b)[32:63][26:31]                   MDUOut-Out(S485)
	S528= MDUOut.Out30_31=(a×b)[32:63][30:31]                   MDUOut-Out(S485)
	S529= XER.SOOut=so                                          XER-SO-Out(S487)
	S530= OVReg.Out=OverFlow(a×b)                               OVReg-Out(S491)
	S531= OVReg.Out26_31=OverFlow(a×b)[26:31]                   OVReg-Out(S491)
	S532= OVReg.Out30_31=OverFlow(a×b)[30:31]                   OVReg-Out(S491)
	S533= DR1bit.Out=so|OverFlow(a×b)                           DR1bit-Out(S493)
	S534= DR1bit.Out26_31=so|OverFlow(a×b)[26:31]               DR1bit-Out(S493)
	S535= DR1bit.Out30_31=so|OverFlow(a×b)[30:31]               DR1bit-Out(S493)
	S536= DR4bit.Out={Compare0(a×b),so}                         DR4bit-Out(S495)
	S537= DR4bit.Out26_31={Compare0(a×b),so}[26:31]             DR4bit-Out(S495)
	S538= DR4bit.Out30_31={Compare0(a×b),so}[30:31]             DR4bit-Out(S495)
	S539= PIDReg.Out=>IMMU.PID                                  Premise(F266)
	S540= IMMU.PID=pid                                          Path(S500,S539)
	S541= PC.Out=>IMMU.IEA                                      Premise(F267)
	S542= IMMU.IEA=addr+4                                       Path(S505,S541)
	S543= IMMU.Addr={pid,addr+4}                                IMMU-Search(S540,S542)
	S544= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S540,S542)
	S545= IMMU.Addr=>IAddrReg.In                                Premise(F268)
	S546= IAddrReg.In={pid,addr+4}                              Path(S543,S545)
	S547= IMMU.Hit=>IMMUHitReg.In                               Premise(F269)
	S548= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S544,S547)
	S549= PC.Out=>ICache.IEA                                    Premise(F270)
	S550= ICache.IEA=addr+4                                     Path(S505,S549)
	S551= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S550)
	S552= ICache.Out=>ICacheReg.In                              Premise(F271)
	S553= ICache.Hit=>ICacheHitReg.In                           Premise(F272)
	S554= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S551,S553)
	S555= IMMUHitReg.Out=>CU.IMemHit                            Premise(F273)
	S556= CU.IMemHit=IMMUHit(pid,addr)                          Path(S509,S555)
	S557= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F274)
	S558= CU.ICacheHit=ICacheHit(addr)                          Path(S512,S557)
	S559= IAddrReg.Out=>IMem.RAddr                              Premise(F275)
	S560= IMem.RAddr={pid,addr}                                 Path(S506,S559)
	S561= IMem.Out={31,rT,rA,rB,1495}                           IMem-Read(S560,S473)
	S562= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S560,S473)
	S563= IMem.Out=>IRMux.MemData                               Premise(F276)
	S564= IRMux.MemData={31,rT,rA,rB,1495}                      Path(S561,S563)
	S565= IRMux.Out={31,rT,rA,rB,1495}                          IRMux-Select(S564)
	S566= ICacheReg.Out=>IRMux.CacheData                        Premise(F277)
	S567= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F278)
	S568= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S509,S567)
	S569= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F279)
	S570= IRMux.CacheSel=ICacheHit(addr)                        Path(S512,S569)
	S571= IRMux.Out=>IR.In                                      Premise(F280)
	S572= IR.In={31,rT,rA,rB,1495}                              Path(S565,S571)
	S573= IMem.MEM8WordOut=>ICache.WData                        Premise(F281)
	S574= ICache.WData=IMemGet8Word({pid,addr})                 Path(S562,S573)
	S575= PC.Out=>ICache.IEA                                    Premise(F282)
	S576= IR.Out0_5=>CU.Op                                      Premise(F283)
	S577= CU.Op=31                                              Path(S515,S576)
	S578= IR.Out11_15=>GPRegs.RReg1                             Premise(F284)
	S579= GPRegs.RReg1=rA                                       Path(S517,S578)
	S580= GPRegs.Rdata1=a                                       GPRegs-Read(S579,S478)
	S581= IR.Out16_20=>GPRegs.RReg2                             Premise(F285)
	S582= GPRegs.RReg2=rB                                       Path(S518,S581)
	S583= GPRegs.Rdata2=b                                       GPRegs-Read(S582,S479)
	S584= IR.Out21_31=>CU.IRFunc                                Premise(F286)
	S585= CU.IRFunc=1495                                        Path(S519,S584)
	S586= CU.Func=mdu_mul                                       CU(S577,S585)
	S587= GPRegs.Rdata1=>A.In                                   Premise(F287)
	S588= A.In=a                                                Path(S580,S587)
	S589= GPRegs.Rdata2=>B.In                                   Premise(F288)
	S590= B.In=b                                                Path(S583,S589)
	S591= A.Out=>MDU.A                                          Premise(F289)
	S592= MDU.A=a                                               Path(S520,S591)
	S593= B.Out=>MDU.B                                          Premise(F290)
	S594= MDU.B=b                                               Path(S523,S593)
	S595= CU.Func=>MDU.Func                                     Premise(F291)
	S596= MDU.Func=mdu_mul                                      Path(S586,S595)
	S597= MDU.Out0_31=(a×b)[0:31]                               MDU(S592,S594)
	S598= MDU.Out32_63=(a×b)[32:63]                             MDU(S592,S594)
	S599= MDU.Out16_47=(a×b)[16:47]                             MDU(S592,S594)
	S600= MDU.CMP=Compare0(a×b)                                 MDU(S592,S594)
	S601= MDU.OV=OverFlow(a×b)                                  MDU(S592,S594)
	S602= MDU.Out32_63=>MDUOut.In                               Premise(F292)
	S603= MDUOut.In=(a×b)[32:63]                                Path(S598,S602)
	S604= XER.SOOut=>ORGate.A                                   Premise(F293)
	S605= ORGate.A=so                                           Path(S529,S604)
	S606= MDU.OV=>ORGate.B                                      Premise(F294)
	S607= ORGate.B=OverFlow(a×b)                                Path(S601,S606)
	S608= ORGate.Out=so|OverFlow(a×b)                           ORGate(S605,S607)
	S609= MDU.OV=>OVReg.In                                      Premise(F295)
	S610= OVReg.In=OverFlow(a×b)                                Path(S601,S609)
	S611= ORGate.Out=>DR1bit.In                                 Premise(F296)
	S612= DR1bit.In=so|OverFlow(a×b)                            Path(S608,S611)
	S613= MDU.CMP=>DataCmb.A                                    Premise(F297)
	S614= DataCmb.A=Compare0(a×b)                               Path(S600,S613)
	S615= XER.SOOut=>DataCmb.B                                  Premise(F298)
	S616= DataCmb.B=so                                          Path(S529,S615)
	S617= DataCmb.Out={Compare0(a×b),so}                        DataCmb(S614,S616)
	S618= DataCmb.Out=>DR4bit.In                                Premise(F299)
	S619= DR4bit.In={Compare0(a×b),so}                          Path(S617,S618)
	S620= IR.Out6_10=>GPRegs.WReg                               Premise(F300)
	S621= GPRegs.WReg=rT                                        Path(S516,S620)
	S622= MDUOut.Out=>GPRegs.WData                              Premise(F301)
	S623= GPRegs.WData=(a×b)[32:63]                             Path(S526,S622)
	S624= DR4bit.Out=>CRRegs.CR0In                              Premise(F302)
	S625= CRRegs.CR0In={Compare0(a×b),so}                       Path(S536,S624)
	S626= DR1bit.Out=>XER.SOIn                                  Premise(F303)
	S627= XER.SOIn=so|OverFlow(a×b)                             Path(S533,S626)
	S628= OVReg.Out=>XER.OVIn                                   Premise(F304)
	S629= XER.OVIn=OverFlow(a×b)                                Path(S530,S628)
	S630= CtrlPIDReg=0                                          Premise(F305)
	S631= [PIDReg]=pid                                          PIDReg-Hold(S457,S630)
	S632= CtrlIMMU=0                                            Premise(F306)
	S633= CtrlPC=0                                              Premise(F307)
	S634= CtrlPCInc=0                                           Premise(F308)
	S635= PC[CIA]=addr                                          PC-Hold(S461,S634)
	S636= PC[Out]=addr+4                                        PC-Hold(S462,S633,S634)
	S637= CtrlIAddrReg=0                                        Premise(F309)
	S638= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S464,S637)
	S639= CtrlIMMUHitReg=0                                      Premise(F310)
	S640= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S466,S639)
	S641= CtrlICache=0                                          Premise(F311)
	S642= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S468,S641)
	S643= CtrlICacheReg=0                                       Premise(F312)
	S644= CtrlICacheHitReg=0                                    Premise(F313)
	S645= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S471,S644)
	S646= CtrlIMem=0                                            Premise(F314)
	S647= IMem[{pid,addr}]={31,rT,rA,rB,1495}                   IMem-Hold(S473,S646)
	S648= CtrlIRMux=0                                           Premise(F315)
	S649= CtrlIR=0                                              Premise(F316)
	S650= [IR]={31,rT,rA,rB,1495}                               IR-Hold(S476,S649)
	S651= CtrlGPRegs=0                                          Premise(F317)
	S652= GPRegs[rA]=a                                          GPRegs-Hold(S478,S651)
	S653= GPRegs[rB]=b                                          GPRegs-Hold(S479,S651)
	S654= CtrlA=0                                               Premise(F318)
	S655= [A]=a                                                 A-Hold(S481,S654)
	S656= CtrlB=0                                               Premise(F319)
	S657= [B]=b                                                 B-Hold(S483,S656)
	S658= CtrlMDUOut=0                                          Premise(F320)
	S659= [MDUOut]=(a×b)[32:63]                                 MDUOut-Hold(S485,S658)
	S660= CtrlXERSO=0                                           Premise(F321)
	S661= XER[SO]=so                                            XER-SO-Hold(S487,S660)
	S662= CtrlXEROV=0                                           Premise(F322)
	S663= CtrlXERCA=0                                           Premise(F323)
	S664= CtrlOVReg=0                                           Premise(F324)
	S665= [OVReg]=OverFlow(a×b)                                 OVReg-Hold(S491,S664)
	S666= CtrlDR1bit=0                                          Premise(F325)
	S667= [DR1bit]=so|OverFlow(a×b)                             DR1bit-Hold(S493,S666)
	S668= CtrlDR4bit=0                                          Premise(F326)
	S669= [DR4bit]={Compare0(a×b),so}                           DR4bit-Hold(S495,S668)
	S670= CtrlCRRegs=0                                          Premise(F327)
	S671= CtrlCRRegsCR0=0                                       Premise(F328)
	S672= CtrlCRRegsW4bitRegs=0                                 Premise(F329)
	S673= CtrlCRRegsW1bitRegs=0                                 Premise(F330)

DMMU1	S674= PIDReg.Out=pid                                        PIDReg-Out(S631)
	S675= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S631)
	S676= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S631)
	S677= PC.CIA=addr                                           PC-Out(S635)
	S678= PC.CIA31_28=addr[31:28]                               PC-Out(S635)
	S679= PC.Out=addr+4                                         PC-Out(S636)
	S680= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S638)
	S681= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S638)
	S682= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S638)
	S683= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S640)
	S684= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S640)
	S685= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S640)
	S686= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S645)
	S687= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S645)
	S688= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S645)
	S689= IR.Out0_5=31                                          IR-Out(S650)
	S690= IR.Out6_10=rT                                         IR-Out(S650)
	S691= IR.Out11_15=rA                                        IR-Out(S650)
	S692= IR.Out16_20=rB                                        IR-Out(S650)
	S693= IR.Out21_31=1495                                      IR-Out(S650)
	S694= A.Out=a                                               A-Out(S655)
	S695= A.Out26_31=a[26:31]                                   A-Out(S655)
	S696= A.Out30_31=a[30:31]                                   A-Out(S655)
	S697= B.Out=b                                               B-Out(S657)
	S698= B.Out26_31=b[26:31]                                   B-Out(S657)
	S699= B.Out30_31=b[30:31]                                   B-Out(S657)
	S700= MDUOut.Out=(a×b)[32:63]                               MDUOut-Out(S659)
	S701= MDUOut.Out26_31=(a×b)[32:63][26:31]                   MDUOut-Out(S659)
	S702= MDUOut.Out30_31=(a×b)[32:63][30:31]                   MDUOut-Out(S659)
	S703= XER.SOOut=so                                          XER-SO-Out(S661)
	S704= OVReg.Out=OverFlow(a×b)                               OVReg-Out(S665)
	S705= OVReg.Out26_31=OverFlow(a×b)[26:31]                   OVReg-Out(S665)
	S706= OVReg.Out30_31=OverFlow(a×b)[30:31]                   OVReg-Out(S665)
	S707= DR1bit.Out=so|OverFlow(a×b)                           DR1bit-Out(S667)
	S708= DR1bit.Out26_31=so|OverFlow(a×b)[26:31]               DR1bit-Out(S667)
	S709= DR1bit.Out30_31=so|OverFlow(a×b)[30:31]               DR1bit-Out(S667)
	S710= DR4bit.Out={Compare0(a×b),so}                         DR4bit-Out(S669)
	S711= DR4bit.Out26_31={Compare0(a×b),so}[26:31]             DR4bit-Out(S669)
	S712= DR4bit.Out30_31={Compare0(a×b),so}[30:31]             DR4bit-Out(S669)
	S713= PIDReg.Out=>IMMU.PID                                  Premise(F331)
	S714= IMMU.PID=pid                                          Path(S674,S713)
	S715= PC.Out=>IMMU.IEA                                      Premise(F332)
	S716= IMMU.IEA=addr+4                                       Path(S679,S715)
	S717= IMMU.Addr={pid,addr+4}                                IMMU-Search(S714,S716)
	S718= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S714,S716)
	S719= IMMU.Addr=>IAddrReg.In                                Premise(F333)
	S720= IAddrReg.In={pid,addr+4}                              Path(S717,S719)
	S721= IMMU.Hit=>IMMUHitReg.In                               Premise(F334)
	S722= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S718,S721)
	S723= PC.Out=>ICache.IEA                                    Premise(F335)
	S724= ICache.IEA=addr+4                                     Path(S679,S723)
	S725= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S724)
	S726= ICache.Out=>ICacheReg.In                              Premise(F336)
	S727= ICache.Hit=>ICacheHitReg.In                           Premise(F337)
	S728= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S725,S727)
	S729= IMMUHitReg.Out=>CU.IMemHit                            Premise(F338)
	S730= CU.IMemHit=IMMUHit(pid,addr)                          Path(S683,S729)
	S731= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F339)
	S732= CU.ICacheHit=ICacheHit(addr)                          Path(S686,S731)
	S733= IAddrReg.Out=>IMem.RAddr                              Premise(F340)
	S734= IMem.RAddr={pid,addr}                                 Path(S680,S733)
	S735= IMem.Out={31,rT,rA,rB,1495}                           IMem-Read(S734,S647)
	S736= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S734,S647)
	S737= IMem.Out=>IRMux.MemData                               Premise(F341)
	S738= IRMux.MemData={31,rT,rA,rB,1495}                      Path(S735,S737)
	S739= IRMux.Out={31,rT,rA,rB,1495}                          IRMux-Select(S738)
	S740= ICacheReg.Out=>IRMux.CacheData                        Premise(F342)
	S741= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F343)
	S742= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S683,S741)
	S743= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F344)
	S744= IRMux.CacheSel=ICacheHit(addr)                        Path(S686,S743)
	S745= IRMux.Out=>IR.In                                      Premise(F345)
	S746= IR.In={31,rT,rA,rB,1495}                              Path(S739,S745)
	S747= IMem.MEM8WordOut=>ICache.WData                        Premise(F346)
	S748= ICache.WData=IMemGet8Word({pid,addr})                 Path(S736,S747)
	S749= PC.Out=>ICache.IEA                                    Premise(F347)
	S750= IR.Out0_5=>CU.Op                                      Premise(F348)
	S751= CU.Op=31                                              Path(S689,S750)
	S752= IR.Out11_15=>GPRegs.RReg1                             Premise(F349)
	S753= GPRegs.RReg1=rA                                       Path(S691,S752)
	S754= GPRegs.Rdata1=a                                       GPRegs-Read(S753,S652)
	S755= IR.Out16_20=>GPRegs.RReg2                             Premise(F350)
	S756= GPRegs.RReg2=rB                                       Path(S692,S755)
	S757= GPRegs.Rdata2=b                                       GPRegs-Read(S756,S653)
	S758= IR.Out21_31=>CU.IRFunc                                Premise(F351)
	S759= CU.IRFunc=1495                                        Path(S693,S758)
	S760= CU.Func=mdu_mul                                       CU(S751,S759)
	S761= GPRegs.Rdata1=>A.In                                   Premise(F352)
	S762= A.In=a                                                Path(S754,S761)
	S763= GPRegs.Rdata2=>B.In                                   Premise(F353)
	S764= B.In=b                                                Path(S757,S763)
	S765= A.Out=>MDU.A                                          Premise(F354)
	S766= MDU.A=a                                               Path(S694,S765)
	S767= B.Out=>MDU.B                                          Premise(F355)
	S768= MDU.B=b                                               Path(S697,S767)
	S769= CU.Func=>MDU.Func                                     Premise(F356)
	S770= MDU.Func=mdu_mul                                      Path(S760,S769)
	S771= MDU.Out0_31=(a×b)[0:31]                               MDU(S766,S768)
	S772= MDU.Out32_63=(a×b)[32:63]                             MDU(S766,S768)
	S773= MDU.Out16_47=(a×b)[16:47]                             MDU(S766,S768)
	S774= MDU.CMP=Compare0(a×b)                                 MDU(S766,S768)
	S775= MDU.OV=OverFlow(a×b)                                  MDU(S766,S768)
	S776= MDU.Out32_63=>MDUOut.In                               Premise(F357)
	S777= MDUOut.In=(a×b)[32:63]                                Path(S772,S776)
	S778= XER.SOOut=>ORGate.A                                   Premise(F358)
	S779= ORGate.A=so                                           Path(S703,S778)
	S780= MDU.OV=>ORGate.B                                      Premise(F359)
	S781= ORGate.B=OverFlow(a×b)                                Path(S775,S780)
	S782= ORGate.Out=so|OverFlow(a×b)                           ORGate(S779,S781)
	S783= MDU.OV=>OVReg.In                                      Premise(F360)
	S784= OVReg.In=OverFlow(a×b)                                Path(S775,S783)
	S785= ORGate.Out=>DR1bit.In                                 Premise(F361)
	S786= DR1bit.In=so|OverFlow(a×b)                            Path(S782,S785)
	S787= MDU.CMP=>DataCmb.A                                    Premise(F362)
	S788= DataCmb.A=Compare0(a×b)                               Path(S774,S787)
	S789= XER.SOOut=>DataCmb.B                                  Premise(F363)
	S790= DataCmb.B=so                                          Path(S703,S789)
	S791= DataCmb.Out={Compare0(a×b),so}                        DataCmb(S788,S790)
	S792= DataCmb.Out=>DR4bit.In                                Premise(F364)
	S793= DR4bit.In={Compare0(a×b),so}                          Path(S791,S792)
	S794= IR.Out6_10=>GPRegs.WReg                               Premise(F365)
	S795= GPRegs.WReg=rT                                        Path(S690,S794)
	S796= MDUOut.Out=>GPRegs.WData                              Premise(F366)
	S797= GPRegs.WData=(a×b)[32:63]                             Path(S700,S796)
	S798= DR4bit.Out=>CRRegs.CR0In                              Premise(F367)
	S799= CRRegs.CR0In={Compare0(a×b),so}                       Path(S710,S798)
	S800= DR1bit.Out=>XER.SOIn                                  Premise(F368)
	S801= XER.SOIn=so|OverFlow(a×b)                             Path(S707,S800)
	S802= OVReg.Out=>XER.OVIn                                   Premise(F369)
	S803= XER.OVIn=OverFlow(a×b)                                Path(S704,S802)
	S804= CtrlPIDReg=0                                          Premise(F370)
	S805= [PIDReg]=pid                                          PIDReg-Hold(S631,S804)
	S806= CtrlIMMU=0                                            Premise(F371)
	S807= CtrlPC=0                                              Premise(F372)
	S808= CtrlPCInc=0                                           Premise(F373)
	S809= PC[CIA]=addr                                          PC-Hold(S635,S808)
	S810= PC[Out]=addr+4                                        PC-Hold(S636,S807,S808)
	S811= CtrlIAddrReg=0                                        Premise(F374)
	S812= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S638,S811)
	S813= CtrlIMMUHitReg=0                                      Premise(F375)
	S814= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S640,S813)
	S815= CtrlICache=0                                          Premise(F376)
	S816= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S642,S815)
	S817= CtrlICacheReg=0                                       Premise(F377)
	S818= CtrlICacheHitReg=0                                    Premise(F378)
	S819= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S645,S818)
	S820= CtrlIMem=0                                            Premise(F379)
	S821= IMem[{pid,addr}]={31,rT,rA,rB,1495}                   IMem-Hold(S647,S820)
	S822= CtrlIRMux=0                                           Premise(F380)
	S823= CtrlIR=0                                              Premise(F381)
	S824= [IR]={31,rT,rA,rB,1495}                               IR-Hold(S650,S823)
	S825= CtrlGPRegs=0                                          Premise(F382)
	S826= GPRegs[rA]=a                                          GPRegs-Hold(S652,S825)
	S827= GPRegs[rB]=b                                          GPRegs-Hold(S653,S825)
	S828= CtrlA=0                                               Premise(F383)
	S829= [A]=a                                                 A-Hold(S655,S828)
	S830= CtrlB=0                                               Premise(F384)
	S831= [B]=b                                                 B-Hold(S657,S830)
	S832= CtrlMDUOut=0                                          Premise(F385)
	S833= [MDUOut]=(a×b)[32:63]                                 MDUOut-Hold(S659,S832)
	S834= CtrlXERSO=0                                           Premise(F386)
	S835= XER[SO]=so                                            XER-SO-Hold(S661,S834)
	S836= CtrlXEROV=0                                           Premise(F387)
	S837= CtrlXERCA=0                                           Premise(F388)
	S838= CtrlOVReg=0                                           Premise(F389)
	S839= [OVReg]=OverFlow(a×b)                                 OVReg-Hold(S665,S838)
	S840= CtrlDR1bit=0                                          Premise(F390)
	S841= [DR1bit]=so|OverFlow(a×b)                             DR1bit-Hold(S667,S840)
	S842= CtrlDR4bit=0                                          Premise(F391)
	S843= [DR4bit]={Compare0(a×b),so}                           DR4bit-Hold(S669,S842)
	S844= CtrlCRRegs=0                                          Premise(F392)
	S845= CtrlCRRegsCR0=0                                       Premise(F393)
	S846= CtrlCRRegsW4bitRegs=0                                 Premise(F394)
	S847= CtrlCRRegsW1bitRegs=0                                 Premise(F395)

DMMU2	S848= PIDReg.Out=pid                                        PIDReg-Out(S805)
	S849= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S805)
	S850= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S805)
	S851= PC.CIA=addr                                           PC-Out(S809)
	S852= PC.CIA31_28=addr[31:28]                               PC-Out(S809)
	S853= PC.Out=addr+4                                         PC-Out(S810)
	S854= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S812)
	S855= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S812)
	S856= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S812)
	S857= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S814)
	S858= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S814)
	S859= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S814)
	S860= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S819)
	S861= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S819)
	S862= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S819)
	S863= IR.Out0_5=31                                          IR-Out(S824)
	S864= IR.Out6_10=rT                                         IR-Out(S824)
	S865= IR.Out11_15=rA                                        IR-Out(S824)
	S866= IR.Out16_20=rB                                        IR-Out(S824)
	S867= IR.Out21_31=1495                                      IR-Out(S824)
	S868= A.Out=a                                               A-Out(S829)
	S869= A.Out26_31=a[26:31]                                   A-Out(S829)
	S870= A.Out30_31=a[30:31]                                   A-Out(S829)
	S871= B.Out=b                                               B-Out(S831)
	S872= B.Out26_31=b[26:31]                                   B-Out(S831)
	S873= B.Out30_31=b[30:31]                                   B-Out(S831)
	S874= MDUOut.Out=(a×b)[32:63]                               MDUOut-Out(S833)
	S875= MDUOut.Out26_31=(a×b)[32:63][26:31]                   MDUOut-Out(S833)
	S876= MDUOut.Out30_31=(a×b)[32:63][30:31]                   MDUOut-Out(S833)
	S877= XER.SOOut=so                                          XER-SO-Out(S835)
	S878= OVReg.Out=OverFlow(a×b)                               OVReg-Out(S839)
	S879= OVReg.Out26_31=OverFlow(a×b)[26:31]                   OVReg-Out(S839)
	S880= OVReg.Out30_31=OverFlow(a×b)[30:31]                   OVReg-Out(S839)
	S881= DR1bit.Out=so|OverFlow(a×b)                           DR1bit-Out(S841)
	S882= DR1bit.Out26_31=so|OverFlow(a×b)[26:31]               DR1bit-Out(S841)
	S883= DR1bit.Out30_31=so|OverFlow(a×b)[30:31]               DR1bit-Out(S841)
	S884= DR4bit.Out={Compare0(a×b),so}                         DR4bit-Out(S843)
	S885= DR4bit.Out26_31={Compare0(a×b),so}[26:31]             DR4bit-Out(S843)
	S886= DR4bit.Out30_31={Compare0(a×b),so}[30:31]             DR4bit-Out(S843)
	S887= PIDReg.Out=>IMMU.PID                                  Premise(F396)
	S888= IMMU.PID=pid                                          Path(S848,S887)
	S889= PC.Out=>IMMU.IEA                                      Premise(F397)
	S890= IMMU.IEA=addr+4                                       Path(S853,S889)
	S891= IMMU.Addr={pid,addr+4}                                IMMU-Search(S888,S890)
	S892= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S888,S890)
	S893= IMMU.Addr=>IAddrReg.In                                Premise(F398)
	S894= IAddrReg.In={pid,addr+4}                              Path(S891,S893)
	S895= IMMU.Hit=>IMMUHitReg.In                               Premise(F399)
	S896= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S892,S895)
	S897= PC.Out=>ICache.IEA                                    Premise(F400)
	S898= ICache.IEA=addr+4                                     Path(S853,S897)
	S899= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S898)
	S900= ICache.Out=>ICacheReg.In                              Premise(F401)
	S901= ICache.Hit=>ICacheHitReg.In                           Premise(F402)
	S902= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S899,S901)
	S903= IMMUHitReg.Out=>CU.IMemHit                            Premise(F403)
	S904= CU.IMemHit=IMMUHit(pid,addr)                          Path(S857,S903)
	S905= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F404)
	S906= CU.ICacheHit=ICacheHit(addr)                          Path(S860,S905)
	S907= IAddrReg.Out=>IMem.RAddr                              Premise(F405)
	S908= IMem.RAddr={pid,addr}                                 Path(S854,S907)
	S909= IMem.Out={31,rT,rA,rB,1495}                           IMem-Read(S908,S821)
	S910= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S908,S821)
	S911= IMem.Out=>IRMux.MemData                               Premise(F406)
	S912= IRMux.MemData={31,rT,rA,rB,1495}                      Path(S909,S911)
	S913= IRMux.Out={31,rT,rA,rB,1495}                          IRMux-Select(S912)
	S914= ICacheReg.Out=>IRMux.CacheData                        Premise(F407)
	S915= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F408)
	S916= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S857,S915)
	S917= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F409)
	S918= IRMux.CacheSel=ICacheHit(addr)                        Path(S860,S917)
	S919= IRMux.Out=>IR.In                                      Premise(F410)
	S920= IR.In={31,rT,rA,rB,1495}                              Path(S913,S919)
	S921= IMem.MEM8WordOut=>ICache.WData                        Premise(F411)
	S922= ICache.WData=IMemGet8Word({pid,addr})                 Path(S910,S921)
	S923= PC.Out=>ICache.IEA                                    Premise(F412)
	S924= IR.Out0_5=>CU.Op                                      Premise(F413)
	S925= CU.Op=31                                              Path(S863,S924)
	S926= IR.Out11_15=>GPRegs.RReg1                             Premise(F414)
	S927= GPRegs.RReg1=rA                                       Path(S865,S926)
	S928= GPRegs.Rdata1=a                                       GPRegs-Read(S927,S826)
	S929= IR.Out16_20=>GPRegs.RReg2                             Premise(F415)
	S930= GPRegs.RReg2=rB                                       Path(S866,S929)
	S931= GPRegs.Rdata2=b                                       GPRegs-Read(S930,S827)
	S932= IR.Out21_31=>CU.IRFunc                                Premise(F416)
	S933= CU.IRFunc=1495                                        Path(S867,S932)
	S934= CU.Func=mdu_mul                                       CU(S925,S933)
	S935= GPRegs.Rdata1=>A.In                                   Premise(F417)
	S936= A.In=a                                                Path(S928,S935)
	S937= GPRegs.Rdata2=>B.In                                   Premise(F418)
	S938= B.In=b                                                Path(S931,S937)
	S939= A.Out=>MDU.A                                          Premise(F419)
	S940= MDU.A=a                                               Path(S868,S939)
	S941= B.Out=>MDU.B                                          Premise(F420)
	S942= MDU.B=b                                               Path(S871,S941)
	S943= CU.Func=>MDU.Func                                     Premise(F421)
	S944= MDU.Func=mdu_mul                                      Path(S934,S943)
	S945= MDU.Out0_31=(a×b)[0:31]                               MDU(S940,S942)
	S946= MDU.Out32_63=(a×b)[32:63]                             MDU(S940,S942)
	S947= MDU.Out16_47=(a×b)[16:47]                             MDU(S940,S942)
	S948= MDU.CMP=Compare0(a×b)                                 MDU(S940,S942)
	S949= MDU.OV=OverFlow(a×b)                                  MDU(S940,S942)
	S950= MDU.Out32_63=>MDUOut.In                               Premise(F422)
	S951= MDUOut.In=(a×b)[32:63]                                Path(S946,S950)
	S952= XER.SOOut=>ORGate.A                                   Premise(F423)
	S953= ORGate.A=so                                           Path(S877,S952)
	S954= MDU.OV=>ORGate.B                                      Premise(F424)
	S955= ORGate.B=OverFlow(a×b)                                Path(S949,S954)
	S956= ORGate.Out=so|OverFlow(a×b)                           ORGate(S953,S955)
	S957= MDU.OV=>OVReg.In                                      Premise(F425)
	S958= OVReg.In=OverFlow(a×b)                                Path(S949,S957)
	S959= ORGate.Out=>DR1bit.In                                 Premise(F426)
	S960= DR1bit.In=so|OverFlow(a×b)                            Path(S956,S959)
	S961= MDU.CMP=>DataCmb.A                                    Premise(F427)
	S962= DataCmb.A=Compare0(a×b)                               Path(S948,S961)
	S963= XER.SOOut=>DataCmb.B                                  Premise(F428)
	S964= DataCmb.B=so                                          Path(S877,S963)
	S965= DataCmb.Out={Compare0(a×b),so}                        DataCmb(S962,S964)
	S966= DataCmb.Out=>DR4bit.In                                Premise(F429)
	S967= DR4bit.In={Compare0(a×b),so}                          Path(S965,S966)
	S968= IR.Out6_10=>GPRegs.WReg                               Premise(F430)
	S969= GPRegs.WReg=rT                                        Path(S864,S968)
	S970= MDUOut.Out=>GPRegs.WData                              Premise(F431)
	S971= GPRegs.WData=(a×b)[32:63]                             Path(S874,S970)
	S972= DR4bit.Out=>CRRegs.CR0In                              Premise(F432)
	S973= CRRegs.CR0In={Compare0(a×b),so}                       Path(S884,S972)
	S974= DR1bit.Out=>XER.SOIn                                  Premise(F433)
	S975= XER.SOIn=so|OverFlow(a×b)                             Path(S881,S974)
	S976= OVReg.Out=>XER.OVIn                                   Premise(F434)
	S977= XER.OVIn=OverFlow(a×b)                                Path(S878,S976)
	S978= CtrlPIDReg=0                                          Premise(F435)
	S979= [PIDReg]=pid                                          PIDReg-Hold(S805,S978)
	S980= CtrlIMMU=0                                            Premise(F436)
	S981= CtrlPC=0                                              Premise(F437)
	S982= CtrlPCInc=0                                           Premise(F438)
	S983= PC[CIA]=addr                                          PC-Hold(S809,S982)
	S984= PC[Out]=addr+4                                        PC-Hold(S810,S981,S982)
	S985= CtrlIAddrReg=0                                        Premise(F439)
	S986= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S812,S985)
	S987= CtrlIMMUHitReg=0                                      Premise(F440)
	S988= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S814,S987)
	S989= CtrlICache=0                                          Premise(F441)
	S990= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S816,S989)
	S991= CtrlICacheReg=0                                       Premise(F442)
	S992= CtrlICacheHitReg=0                                    Premise(F443)
	S993= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S819,S992)
	S994= CtrlIMem=0                                            Premise(F444)
	S995= IMem[{pid,addr}]={31,rT,rA,rB,1495}                   IMem-Hold(S821,S994)
	S996= CtrlIRMux=0                                           Premise(F445)
	S997= CtrlIR=0                                              Premise(F446)
	S998= [IR]={31,rT,rA,rB,1495}                               IR-Hold(S824,S997)
	S999= CtrlGPRegs=0                                          Premise(F447)
	S1000= GPRegs[rA]=a                                         GPRegs-Hold(S826,S999)
	S1001= GPRegs[rB]=b                                         GPRegs-Hold(S827,S999)
	S1002= CtrlA=0                                              Premise(F448)
	S1003= [A]=a                                                A-Hold(S829,S1002)
	S1004= CtrlB=0                                              Premise(F449)
	S1005= [B]=b                                                B-Hold(S831,S1004)
	S1006= CtrlMDUOut=0                                         Premise(F450)
	S1007= [MDUOut]=(a×b)[32:63]                                MDUOut-Hold(S833,S1006)
	S1008= CtrlXERSO=0                                          Premise(F451)
	S1009= XER[SO]=so                                           XER-SO-Hold(S835,S1008)
	S1010= CtrlXEROV=0                                          Premise(F452)
	S1011= CtrlXERCA=0                                          Premise(F453)
	S1012= CtrlOVReg=0                                          Premise(F454)
	S1013= [OVReg]=OverFlow(a×b)                                OVReg-Hold(S839,S1012)
	S1014= CtrlDR1bit=0                                         Premise(F455)
	S1015= [DR1bit]=so|OverFlow(a×b)                            DR1bit-Hold(S841,S1014)
	S1016= CtrlDR4bit=0                                         Premise(F456)
	S1017= [DR4bit]={Compare0(a×b),so}                          DR4bit-Hold(S843,S1016)
	S1018= CtrlCRRegs=0                                         Premise(F457)
	S1019= CtrlCRRegsCR0=0                                      Premise(F458)
	S1020= CtrlCRRegsW4bitRegs=0                                Premise(F459)
	S1021= CtrlCRRegsW1bitRegs=0                                Premise(F460)

WB	S1022= PIDReg.Out=pid                                       PIDReg-Out(S979)
	S1023= PIDReg.Out26_31=pid[26:31]                           PIDReg-Out(S979)
	S1024= PIDReg.Out30_31=pid[30:31]                           PIDReg-Out(S979)
	S1025= PC.CIA=addr                                          PC-Out(S983)
	S1026= PC.CIA31_28=addr[31:28]                              PC-Out(S983)
	S1027= PC.Out=addr+4                                        PC-Out(S984)
	S1028= IAddrReg.Out={pid,addr}                              IAddrReg-Out(S986)
	S1029= IAddrReg.Out26_31={pid,addr}[26:31]                  IAddrReg-Out(S986)
	S1030= IAddrReg.Out30_31={pid,addr}[30:31]                  IAddrReg-Out(S986)
	S1031= IMMUHitReg.Out=IMMUHit(pid,addr)                     IMMUHitReg-Out(S988)
	S1032= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]         IMMUHitReg-Out(S988)
	S1033= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]         IMMUHitReg-Out(S988)
	S1034= ICacheHitReg.Out=ICacheHit(addr)                     ICacheHitReg-Out(S993)
	S1035= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]         ICacheHitReg-Out(S993)
	S1036= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]         ICacheHitReg-Out(S993)
	S1037= IR.Out0_5=31                                         IR-Out(S998)
	S1038= IR.Out6_10=rT                                        IR-Out(S998)
	S1039= IR.Out11_15=rA                                       IR-Out(S998)
	S1040= IR.Out16_20=rB                                       IR-Out(S998)
	S1041= IR.Out21_31=1495                                     IR-Out(S998)
	S1042= A.Out=a                                              A-Out(S1003)
	S1043= A.Out26_31=a[26:31]                                  A-Out(S1003)
	S1044= A.Out30_31=a[30:31]                                  A-Out(S1003)
	S1045= B.Out=b                                              B-Out(S1005)
	S1046= B.Out26_31=b[26:31]                                  B-Out(S1005)
	S1047= B.Out30_31=b[30:31]                                  B-Out(S1005)
	S1048= MDUOut.Out=(a×b)[32:63]                              MDUOut-Out(S1007)
	S1049= MDUOut.Out26_31=(a×b)[32:63][26:31]                  MDUOut-Out(S1007)
	S1050= MDUOut.Out30_31=(a×b)[32:63][30:31]                  MDUOut-Out(S1007)
	S1051= XER.SOOut=so                                         XER-SO-Out(S1009)
	S1052= OVReg.Out=OverFlow(a×b)                              OVReg-Out(S1013)
	S1053= OVReg.Out26_31=OverFlow(a×b)[26:31]                  OVReg-Out(S1013)
	S1054= OVReg.Out30_31=OverFlow(a×b)[30:31]                  OVReg-Out(S1013)
	S1055= DR1bit.Out=so|OverFlow(a×b)                          DR1bit-Out(S1015)
	S1056= DR1bit.Out26_31=so|OverFlow(a×b)[26:31]              DR1bit-Out(S1015)
	S1057= DR1bit.Out30_31=so|OverFlow(a×b)[30:31]              DR1bit-Out(S1015)
	S1058= DR4bit.Out={Compare0(a×b),so}                        DR4bit-Out(S1017)
	S1059= DR4bit.Out26_31={Compare0(a×b),so}[26:31]            DR4bit-Out(S1017)
	S1060= DR4bit.Out30_31={Compare0(a×b),so}[30:31]            DR4bit-Out(S1017)
	S1061= PIDReg.Out=>IMMU.PID                                 Premise(F461)
	S1062= IMMU.PID=pid                                         Path(S1022,S1061)
	S1063= PC.Out=>IMMU.IEA                                     Premise(F462)
	S1064= IMMU.IEA=addr+4                                      Path(S1027,S1063)
	S1065= IMMU.Addr={pid,addr+4}                               IMMU-Search(S1062,S1064)
	S1066= IMMU.Hit=IMMUHit(pid,addr+4)                         IMMU-Search(S1062,S1064)
	S1067= IMMU.Addr=>IAddrReg.In                               Premise(F463)
	S1068= IAddrReg.In={pid,addr+4}                             Path(S1065,S1067)
	S1069= IMMU.Hit=>IMMUHitReg.In                              Premise(F464)
	S1070= IMMUHitReg.In=IMMUHit(pid,addr+4)                    Path(S1066,S1069)
	S1071= PC.Out=>ICache.IEA                                   Premise(F465)
	S1072= ICache.IEA=addr+4                                    Path(S1027,S1071)
	S1073= ICache.Hit=ICacheHit(addr+4)                         ICache-Search(S1072)
	S1074= ICache.Out=>ICacheReg.In                             Premise(F466)
	S1075= ICache.Hit=>ICacheHitReg.In                          Premise(F467)
	S1076= ICacheHitReg.In=ICacheHit(addr+4)                    Path(S1073,S1075)
	S1077= IMMUHitReg.Out=>CU.IMemHit                           Premise(F468)
	S1078= CU.IMemHit=IMMUHit(pid,addr)                         Path(S1031,S1077)
	S1079= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F469)
	S1080= CU.ICacheHit=ICacheHit(addr)                         Path(S1034,S1079)
	S1081= IAddrReg.Out=>IMem.RAddr                             Premise(F470)
	S1082= IMem.RAddr={pid,addr}                                Path(S1028,S1081)
	S1083= IMem.Out={31,rT,rA,rB,1495}                          IMem-Read(S1082,S995)
	S1084= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1082,S995)
	S1085= IMem.Out=>IRMux.MemData                              Premise(F471)
	S1086= IRMux.MemData={31,rT,rA,rB,1495}                     Path(S1083,S1085)
	S1087= IRMux.Out={31,rT,rA,rB,1495}                         IRMux-Select(S1086)
	S1088= ICacheReg.Out=>IRMux.CacheData                       Premise(F472)
	S1089= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F473)
	S1090= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S1031,S1089)
	S1091= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F474)
	S1092= IRMux.CacheSel=ICacheHit(addr)                       Path(S1034,S1091)
	S1093= IRMux.Out=>IR.In                                     Premise(F475)
	S1094= IR.In={31,rT,rA,rB,1495}                             Path(S1087,S1093)
	S1095= IMem.MEM8WordOut=>ICache.WData                       Premise(F476)
	S1096= ICache.WData=IMemGet8Word({pid,addr})                Path(S1084,S1095)
	S1097= PC.Out=>ICache.IEA                                   Premise(F477)
	S1098= IR.Out0_5=>CU.Op                                     Premise(F478)
	S1099= CU.Op=31                                             Path(S1037,S1098)
	S1100= IR.Out11_15=>GPRegs.RReg1                            Premise(F479)
	S1101= GPRegs.RReg1=rA                                      Path(S1039,S1100)
	S1102= GPRegs.Rdata1=a                                      GPRegs-Read(S1101,S1000)
	S1103= IR.Out16_20=>GPRegs.RReg2                            Premise(F480)
	S1104= GPRegs.RReg2=rB                                      Path(S1040,S1103)
	S1105= GPRegs.Rdata2=b                                      GPRegs-Read(S1104,S1001)
	S1106= IR.Out21_31=>CU.IRFunc                               Premise(F481)
	S1107= CU.IRFunc=1495                                       Path(S1041,S1106)
	S1108= CU.Func=mdu_mul                                      CU(S1099,S1107)
	S1109= GPRegs.Rdata1=>A.In                                  Premise(F482)
	S1110= A.In=a                                               Path(S1102,S1109)
	S1111= GPRegs.Rdata2=>B.In                                  Premise(F483)
	S1112= B.In=b                                               Path(S1105,S1111)
	S1113= A.Out=>MDU.A                                         Premise(F484)
	S1114= MDU.A=a                                              Path(S1042,S1113)
	S1115= B.Out=>MDU.B                                         Premise(F485)
	S1116= MDU.B=b                                              Path(S1045,S1115)
	S1117= CU.Func=>MDU.Func                                    Premise(F486)
	S1118= MDU.Func=mdu_mul                                     Path(S1108,S1117)
	S1119= MDU.Out0_31=(a×b)[0:31]                              MDU(S1114,S1116)
	S1120= MDU.Out32_63=(a×b)[32:63]                            MDU(S1114,S1116)
	S1121= MDU.Out16_47=(a×b)[16:47]                            MDU(S1114,S1116)
	S1122= MDU.CMP=Compare0(a×b)                                MDU(S1114,S1116)
	S1123= MDU.OV=OverFlow(a×b)                                 MDU(S1114,S1116)
	S1124= MDU.Out32_63=>MDUOut.In                              Premise(F487)
	S1125= MDUOut.In=(a×b)[32:63]                               Path(S1120,S1124)
	S1126= XER.SOOut=>ORGate.A                                  Premise(F488)
	S1127= ORGate.A=so                                          Path(S1051,S1126)
	S1128= MDU.OV=>ORGate.B                                     Premise(F489)
	S1129= ORGate.B=OverFlow(a×b)                               Path(S1123,S1128)
	S1130= ORGate.Out=so|OverFlow(a×b)                          ORGate(S1127,S1129)
	S1131= MDU.OV=>OVReg.In                                     Premise(F490)
	S1132= OVReg.In=OverFlow(a×b)                               Path(S1123,S1131)
	S1133= ORGate.Out=>DR1bit.In                                Premise(F491)
	S1134= DR1bit.In=so|OverFlow(a×b)                           Path(S1130,S1133)
	S1135= MDU.CMP=>DataCmb.A                                   Premise(F492)
	S1136= DataCmb.A=Compare0(a×b)                              Path(S1122,S1135)
	S1137= XER.SOOut=>DataCmb.B                                 Premise(F493)
	S1138= DataCmb.B=so                                         Path(S1051,S1137)
	S1139= DataCmb.Out={Compare0(a×b),so}                       DataCmb(S1136,S1138)
	S1140= DataCmb.Out=>DR4bit.In                               Premise(F494)
	S1141= DR4bit.In={Compare0(a×b),so}                         Path(S1139,S1140)
	S1142= IR.Out6_10=>GPRegs.WReg                              Premise(F495)
	S1143= GPRegs.WReg=rT                                       Path(S1038,S1142)
	S1144= MDUOut.Out=>GPRegs.WData                             Premise(F496)
	S1145= GPRegs.WData=(a×b)[32:63]                            Path(S1048,S1144)
	S1146= DR4bit.Out=>CRRegs.CR0In                             Premise(F497)
	S1147= CRRegs.CR0In={Compare0(a×b),so}                      Path(S1058,S1146)
	S1148= DR1bit.Out=>XER.SOIn                                 Premise(F498)
	S1149= XER.SOIn=so|OverFlow(a×b)                            Path(S1055,S1148)
	S1150= OVReg.Out=>XER.OVIn                                  Premise(F499)
	S1151= XER.OVIn=OverFlow(a×b)                               Path(S1052,S1150)
	S1152= CtrlPIDReg=0                                         Premise(F500)
	S1153= [PIDReg]=pid                                         PIDReg-Hold(S979,S1152)
	S1154= CtrlIMMU=0                                           Premise(F501)
	S1155= CtrlPC=0                                             Premise(F502)
	S1156= CtrlPCInc=0                                          Premise(F503)
	S1157= PC[CIA]=addr                                         PC-Hold(S983,S1156)
	S1158= PC[Out]=addr+4                                       PC-Hold(S984,S1155,S1156)
	S1159= CtrlIAddrReg=0                                       Premise(F504)
	S1160= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S986,S1159)
	S1161= CtrlIMMUHitReg=0                                     Premise(F505)
	S1162= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S988,S1161)
	S1163= CtrlICache=0                                         Premise(F506)
	S1164= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S990,S1163)
	S1165= CtrlICacheReg=0                                      Premise(F507)
	S1166= CtrlICacheHitReg=0                                   Premise(F508)
	S1167= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S993,S1166)
	S1168= CtrlIMem=0                                           Premise(F509)
	S1169= IMem[{pid,addr}]={31,rT,rA,rB,1495}                  IMem-Hold(S995,S1168)
	S1170= CtrlIRMux=0                                          Premise(F510)
	S1171= CtrlIR=0                                             Premise(F511)
	S1172= [IR]={31,rT,rA,rB,1495}                              IR-Hold(S998,S1171)
	S1173= CtrlGPRegs=1                                         Premise(F512)
	S1174= GPRegs[rT]=(a×b)[32:63]                              GPRegs-Write(S1143,S1145,S1173)
	S1175= CtrlA=0                                              Premise(F513)
	S1176= [A]=a                                                A-Hold(S1003,S1175)
	S1177= CtrlB=0                                              Premise(F514)
	S1178= [B]=b                                                B-Hold(S1005,S1177)
	S1179= CtrlMDUOut=0                                         Premise(F515)
	S1180= [MDUOut]=(a×b)[32:63]                                MDUOut-Hold(S1007,S1179)
	S1181= CtrlXERSO=1                                          Premise(F516)
	S1182= XER[SO]=so|OverFlow(a×b)                             XER-SO-Write(S1149,S1181)
	S1183= CtrlXEROV=1                                          Premise(F517)
	S1184= XER[OV]=OverFlow(a×b)                                XER-OV-Write(S1151,S1183)
	S1185= CtrlXERCA=0                                          Premise(F518)
	S1186= CtrlOVReg=0                                          Premise(F519)
	S1187= [OVReg]=OverFlow(a×b)                                OVReg-Hold(S1013,S1186)
	S1188= CtrlDR1bit=0                                         Premise(F520)
	S1189= [DR1bit]=so|OverFlow(a×b)                            DR1bit-Hold(S1015,S1188)
	S1190= CtrlDR4bit=0                                         Premise(F521)
	S1191= [DR4bit]={Compare0(a×b),so}                          DR4bit-Hold(S1017,S1190)
	S1192= CtrlCRRegs=0                                         Premise(F522)
	S1193= CtrlCRRegsCR0=1                                      Premise(F523)
	S1194= CRRegs[CR0]={Compare0(a×b),so}                       CRRegs-CR0-Write(S1147,S1193)
	S1195= CtrlCRRegsW4bitRegs=0                                Premise(F524)
	S1196= CtrlCRRegsW1bitRegs=0                                Premise(F525)

POST	S1153= [PIDReg]=pid                                         PIDReg-Hold(S979,S1152)
	S1157= PC[CIA]=addr                                         PC-Hold(S983,S1156)
	S1158= PC[Out]=addr+4                                       PC-Hold(S984,S1155,S1156)
	S1160= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S986,S1159)
	S1162= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S988,S1161)
	S1164= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S990,S1163)
	S1167= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S993,S1166)
	S1169= IMem[{pid,addr}]={31,rT,rA,rB,1495}                  IMem-Hold(S995,S1168)
	S1172= [IR]={31,rT,rA,rB,1495}                              IR-Hold(S998,S1171)
	S1174= GPRegs[rT]=(a×b)[32:63]                              GPRegs-Write(S1143,S1145,S1173)
	S1176= [A]=a                                                A-Hold(S1003,S1175)
	S1178= [B]=b                                                B-Hold(S1005,S1177)
	S1180= [MDUOut]=(a×b)[32:63]                                MDUOut-Hold(S1007,S1179)
	S1182= XER[SO]=so|OverFlow(a×b)                             XER-SO-Write(S1149,S1181)
	S1184= XER[OV]=OverFlow(a×b)                                XER-OV-Write(S1151,S1183)
	S1187= [OVReg]=OverFlow(a×b)                                OVReg-Hold(S1013,S1186)
	S1189= [DR1bit]=so|OverFlow(a×b)                            DR1bit-Hold(S1015,S1188)
	S1191= [DR4bit]={Compare0(a×b),so}                          DR4bit-Hold(S1017,S1190)
	S1194= CRRegs[CR0]={Compare0(a×b),so}                       CRRegs-CR0-Write(S1147,S1193)

