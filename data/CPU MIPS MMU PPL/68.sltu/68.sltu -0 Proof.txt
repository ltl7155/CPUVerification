
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,rT,rD,0,43}                      Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)
	S4= GPR[rT]=b                                               Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= IMMU.Addr=>IAddrReg.In                                  Premise(F73)
	S8= PC.Out=>IMMU.IEA                                        Premise(F78)
	S9= IMMU.IEA=addr                                           Path(S6,S8)
	S10= CP0.ASID=>IMMU.PID                                     Premise(F79)
	S11= IMMU.PID=pid                                           Path(S5,S10)
	S12= IMMU.Addr={pid,addr}                                   IMMU-Search(S11,S9)
	S13= IAddrReg.In={pid,addr}                                 Path(S12,S7)
	S14= CtrlGPR=0                                              Premise(F137)
	S15= GPR[rS]=a                                              GPR-Hold(S3,S14)
	S16= GPR[rT]=b                                              GPR-Hold(S4,S14)
	S17= CtrlIAddrReg=1                                         Premise(F138)
	S18= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S17)
	S19= CtrlPC=0                                               Premise(F139)
	S20= CtrlPCInc=0                                            Premise(F140)
	S21= PC[Out]=addr                                           PC-Hold(S1,S19,S20)
	S22= CtrlIMem=0                                             Premise(F141)
	S23= IMem[{pid,addr}]={0,rS,rT,rD,0,43}                     IMem-Hold(S2,S22)

IMMU	S24= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S18)
	S25= PC.Out=addr                                            PC-Out(S21)
	S26= PC.Out=>ICache.IEA                                     Premise(F217)
	S27= ICache.IEA=addr                                        Path(S25,S26)
	S28= IMem.MEM8WordOut=>ICache.WData                         Premise(F219)
	S29= IAddrReg.Out=>IMem.RAddr                               Premise(F223)
	S30= IMem.RAddr={pid,addr}                                  Path(S24,S29)
	S31= IMem.Out={0,rS,rT,rD,0,43}                             IMem-Read(S30,S23)
	S32= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S30,S23)
	S33= ICache.WData=IMemGet8Word({pid,addr})                  Path(S32,S28)
	S34= IMem.Out=>IRMux.MemData                                Premise(F226)
	S35= IRMux.MemData={0,rS,rT,rD,0,43}                        Path(S31,S34)
	S36= IRMux.Out={0,rS,rT,rD,0,43}                            IRMux-Select2(S35)
	S37= IRMux.Out=>IR_ID.In                                    Premise(F232)
	S38= IR_ID.In={0,rS,rT,rD,0,43}                             Path(S36,S37)
	S39= CtrlICache=1                                           Premise(F271)
	S40= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S27,S33,S39)
	S41= CtrlIR_ID=1                                            Premise(F276)
	S42= [IR_ID]={0,rS,rT,rD,0,43}                              IR_ID-Write(S38,S41)
	S43= CtrlGPR=0                                              Premise(F280)
	S44= GPR[rS]=a                                              GPR-Hold(S15,S43)
	S45= GPR[rT]=b                                              GPR-Hold(S16,S43)
	S46= CtrlPC=0                                               Premise(F282)
	S47= CtrlPCInc=1                                            Premise(F283)
	S48= PC[Out]=addr+4                                         PC-Inc(S21,S46,S47)

ID	S49= IR_ID.Out={0,rS,rT,rD,0,43}                            IR-Out(S42)
	S50= IR_ID.Out25_21=rS                                      IR-Out(S42)
	S51= IR_ID.Out20_16=rT                                      IR-Out(S42)
	S52= FU.OutID1=>A_EX.In                                     Premise(F298)
	S53= FU.OutID2=>B_EX.In                                     Premise(F300)
	S54= GPR.Rdata1=>FU.InID1                                   Premise(F347)
	S55= GPR.Rdata2=>FU.InID2                                   Premise(F349)
	S56= IR_ID.Out25_21=>GPR.RReg1                              Premise(F355)
	S57= GPR.RReg1=rS                                           Path(S50,S56)
	S58= GPR.Rdata1=a                                           GPR-Read(S57,S44)
	S59= FU.InID1=a                                             Path(S58,S54)
	S60= FU.OutID1=FU(a)                                        FU-Forward(S59)
	S61= A_EX.In=FU(a)                                          Path(S60,S52)
	S62= IR_ID.Out20_16=>GPR.RReg2                              Premise(F356)
	S63= GPR.RReg2=rT                                           Path(S51,S62)
	S64= GPR.Rdata2=b                                           GPR-Read(S63,S45)
	S65= FU.InID2=b                                             Path(S64,S55)
	S66= FU.OutID2=FU(b)                                        FU-Forward(S65)
	S67= B_EX.In=FU(b)                                          Path(S66,S53)
	S68= IR_ID.Out=>IR_EX.In                                    Premise(F373)
	S69= IR_EX.In={0,rS,rT,rD,0,43}                             Path(S49,S68)
	S70= CtrlA_EX=1                                             Premise(F404)
	S71= [A_EX]=FU(a)                                           A_EX-Write(S61,S70)
	S72= CtrlB_EX=1                                             Premise(F405)
	S73= [B_EX]=FU(b)                                           B_EX-Write(S67,S72)
	S74= CtrlICache=0                                           Premise(F414)
	S75= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S40,S74)
	S76= CtrlIR_EX=1                                            Premise(F418)
	S77= [IR_EX]={0,rS,rT,rD,0,43}                              IR_EX-Write(S69,S76)
	S78= CtrlPC=0                                               Premise(F425)
	S79= CtrlPCInc=0                                            Premise(F426)
	S80= PC[Out]=addr+4                                         PC-Hold(S48,S78,S79)

EX	S81= A_EX.Out=FU(a)                                         A_EX-Out(S71)
	S82= B_EX.Out=FU(b)                                         B_EX-Out(S73)
	S83= IR_EX.Out={0,rS,rT,rD,0,43}                            IR_EX-Out(S77)
	S84= A_EX.Out=>ALU.A                                        Premise(F434)
	S85= ALU.A=FU(a)                                            Path(S81,S84)
	S86= B_EX.Out=>ALU.B                                        Premise(F435)
	S87= ALU.B=FU(b)                                            Path(S82,S86)
	S88= ALU.Out={31{0},(FU(a)<uFU(b))}                         ALU(S85,S87)
	S89= ALU.Out=>ALUOut_MEM.In                                 Premise(F439)
	S90= ALUOut_MEM.In={31{0},(FU(a)<uFU(b))}                   Path(S88,S89)
	S91= IR_EX.Out=>IR_MEM.In                                   Premise(F521)
	S92= IR_MEM.In={0,rS,rT,rD,0,43}                            Path(S83,S91)
	S93= CtrlALUOut_MEM=1                                       Premise(F550)
	S94= [ALUOut_MEM]={31{0},(FU(a)<uFU(b))}                    ALUOut_MEM-Write(S90,S93)
	S95= CtrlICache=0                                           Premise(F558)
	S96= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S75,S95)
	S97= CtrlIR_MEM=1                                           Premise(F565)
	S98= [IR_MEM]={0,rS,rT,rD,0,43}                             IR_MEM-Write(S92,S97)
	S99= CtrlPC=0                                               Premise(F569)
	S100= CtrlPCInc=0                                           Premise(F570)
	S101= PC[Out]=addr+4                                        PC-Hold(S80,S99,S100)

MEM	S102= ALUOut_MEM.Out={31{0},(FU(a)<uFU(b))}                 ALUOut_MEM-Out(S94)
	S103= IR_MEM.Out={0,rS,rT,rD,0,43}                          IR_MEM-Out(S98)
	S104= ALUOut_MEM.Out=>ALUOut_DMMU1.In                       Premise(F580)
	S105= ALUOut_DMMU1.In={31{0},(FU(a)<uFU(b))}                Path(S102,S104)
	S106= IR_MEM.Out=>IR_DMMU1.In                               Premise(F658)
	S107= IR_DMMU1.In={0,rS,rT,rD,0,43}                         Path(S103,S106)
	S108= CtrlALUOut_DMMU1=1                                    Premise(F694)
	S109= [ALUOut_DMMU1]={31{0},(FU(a)<uFU(b))}                 ALUOut_DMMU1-Write(S105,S108)
	S110= CtrlICache=0                                          Premise(F701)
	S111= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S96,S110)
	S112= CtrlIR_DMMU1=1                                        Premise(F703)
	S113= [IR_DMMU1]={0,rS,rT,rD,0,43}                          IR_DMMU1-Write(S107,S112)
	S114= CtrlPC=0                                              Premise(F712)
	S115= CtrlPCInc=0                                           Premise(F713)
	S116= PC[Out]=addr+4                                        PC-Hold(S101,S114,S115)

DMMU1	S117= ALUOut_DMMU1.Out={31{0},(FU(a)<uFU(b))}               ALUOut_DMMU1-Out(S109)
	S118= IR_DMMU1.Out={0,rS,rT,rD,0,43}                        IR_DMMU1-Out(S113)
	S119= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                     Premise(F724)
	S120= ALUOut_DMMU2.In={31{0},(FU(a)<uFU(b))}                Path(S117,S119)
	S121= IR_DMMU1.Out=>IR_DMMU2.In                             Premise(F802)
	S122= IR_DMMU2.In={0,rS,rT,rD,0,43}                         Path(S118,S121)
	S123= CtrlALUOut_DMMU2=1                                    Premise(F838)
	S124= [ALUOut_DMMU2]={31{0},(FU(a)<uFU(b))}                 ALUOut_DMMU2-Write(S120,S123)
	S125= CtrlICache=0                                          Premise(F844)
	S126= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S111,S125)
	S127= CtrlIR_DMMU2=1                                        Premise(F847)
	S128= [IR_DMMU2]={0,rS,rT,rD,0,43}                          IR_DMMU2-Write(S122,S127)
	S129= CtrlPC=0                                              Premise(F855)
	S130= CtrlPCInc=0                                           Premise(F856)
	S131= PC[Out]=addr+4                                        PC-Hold(S116,S129,S130)

DMMU2	S132= ALUOut_DMMU2.Out={31{0},(FU(a)<uFU(b))}               ALUOut_DMMU2-Out(S124)
	S133= IR_DMMU2.Out={0,rS,rT,rD,0,43}                        IR_DMMU2-Out(S128)
	S134= ALUOut_DMMU2.Out=>ALUOut_WB.In                        Premise(F869)
	S135= ALUOut_WB.In={31{0},(FU(a)<uFU(b))}                   Path(S132,S134)
	S136= IR_DMMU2.Out=>IR_WB.In                                Premise(F951)
	S137= IR_WB.In={0,rS,rT,rD,0,43}                            Path(S133,S136)
	S138= CtrlALUOut_WB=1                                       Premise(F982)
	S139= [ALUOut_WB]={31{0},(FU(a)<uFU(b))}                    ALUOut_WB-Write(S135,S138)
	S140= CtrlICache=0                                          Premise(F987)
	S141= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S126,S140)
	S142= CtrlIR_WB=1                                           Premise(F995)
	S143= [IR_WB]={0,rS,rT,rD,0,43}                             IR_WB-Write(S137,S142)
	S144= CtrlPC=0                                              Premise(F998)
	S145= CtrlPCInc=0                                           Premise(F999)
	S146= PC[Out]=addr+4                                        PC-Hold(S131,S144,S145)

WB	S147= ALUOut_WB.Out={31{0},(FU(a)<uFU(b))}                  ALUOut_WB-Out(S139)
	S148= IR_WB.Out15_11=rD                                     IR-Out(S143)
	S149= ALUOut_WB.Out=>GPR.WData                              Premise(F1073)
	S150= GPR.WData={31{0},(FU(a)<uFU(b))}                      Path(S147,S149)
	S151= IR_WB.Out15_11=>GPR.WReg                              Premise(F1074)
	S152= GPR.WReg=rD                                           Path(S148,S151)
	S153= CtrlICache=0                                          Premise(F1130)
	S154= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S141,S153)
	S155= CtrlGPR=1                                             Premise(F1139)
	S156= GPR[rD]={31{0},(FU(a)<uFU(b))}                        GPR-Write(S152,S150,S155)
	S157= CtrlPC=0                                              Premise(F1141)
	S158= CtrlPCInc=0                                           Premise(F1142)
	S159= PC[Out]=addr+4                                        PC-Hold(S146,S157,S158)

POST	S154= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S141,S153)
	S156= GPR[rD]={31{0},(FU(a)<uFU(b))}                        GPR-Write(S152,S150,S155)
	S159= PC[Out]=addr+4                                        PC-Hold(S146,S157,S158)

