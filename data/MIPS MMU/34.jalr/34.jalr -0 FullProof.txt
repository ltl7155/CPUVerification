
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                     Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= CP0.ASID=>IMMU.PID                                      Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S7,S9)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S13= IAddrReg.In={pid,addr}                                 Path(S10,S12)
	S14= IMMU.Hit=>CU.IMMUHit                                   Premise(F7)
	S15= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S11,S14)
	S16= PC.Out=>ICache.IEA                                     Premise(F8)
	S17= ICache.IEA=addr                                        Path(S5,S16)
	S18= ICache.Hit=ICacheHit(addr)                             ICache-Search(S17)
	S19= ICache.Out=>IR.In                                      Premise(F9)
	S20= ICache.Out=>ICacheReg.In                               Premise(F10)
	S21= ICache.Hit=>CU.ICacheHit                               Premise(F11)
	S22= CU.ICacheHit=ICacheHit(addr)                           Path(S18,S21)
	S23= CtrlASIDIn=0                                           Premise(F12)
	S24= CtrlCP0=0                                              Premise(F13)
	S25= CP0[ASID]=pid                                          CP0-Hold(S0,S24)
	S26= CtrlEPCIn=0                                            Premise(F14)
	S27= CtrlExCodeIn=0                                         Premise(F15)
	S28= CtrlIMMU=0                                             Premise(F16)
	S29= CtrlPC=0                                               Premise(F17)
	S30= CtrlPCInc=0                                            Premise(F18)
	S31= PC[Out]=addr                                           PC-Hold(S1,S29,S30)
	S32= CtrlIAddrReg=1                                         Premise(F19)
	S33= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S32)
	S34= CtrlICache=0                                           Premise(F20)
	S35= CtrlIR=0                                               Premise(F21)
	S36= CtrlICacheReg=1                                        Premise(F22)
	S37= CtrlIMem=0                                             Premise(F23)
	S38= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                    IMem-Hold(S2,S37)
	S39= CtrlIRMux=0                                            Premise(F24)
	S40= CtrlGPR=0                                              Premise(F25)
	S41= GPR[rS]=a                                              GPR-Hold(S3,S40)

IF(IMMU)	S42= CP0.ASID=pid                                           CP0-Read-ASID(S25)
	S43= PC.Out=addr                                            PC-Out(S31)
	S44= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S33)
	S45= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S33)
	S46= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S33)
	S47= CU.IMMUHit=>CU.IMMUHit                                 Premise(F26)
	S48= CU.ICacheHit=>CU.ICacheHit                             Premise(F27)
	S49= IAddrReg.Out=>IMem.RAddr                               Premise(F28)
	S50= IMem.RAddr={pid,addr}                                  Path(S44,S49)
	S51= IMem.Out={0,rS,0,rD,hint,9}                            IMem-Read(S50,S38)
	S52= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S50,S38)
	S53= IMem.Out=>IRMux.MemData                                Premise(F29)
	S54= IRMux.MemData={0,rS,0,rD,hint,9}                       Path(S51,S53)
	S55= IRMux.Out={0,rS,0,rD,hint,9}                           IRMux-Select2(S54)
	S56= ICacheReg.Out=>IRMux.CacheData                         Premise(F30)
	S57= CU.IMMUHit=>IRMux.MemSel                               Premise(F31)
	S58= CU.ICacheHit=>IRMux.CacheSel                           Premise(F32)
	S59= IRMux.Out=>IR.In                                       Premise(F33)
	S60= IR.In={0,rS,0,rD,hint,9}                               Path(S55,S59)
	S61= IMem.MEM8WordOut=>ICache.WData                         Premise(F34)
	S62= ICache.WData=IMemGet8Word({pid,addr})                  Path(S52,S61)
	S63= PC.Out=>ICache.IEA                                     Premise(F35)
	S64= ICache.IEA=addr                                        Path(S43,S63)
	S65= ICache.Hit=ICacheHit(addr)                             ICache-Search(S64)
	S66= CtrlASIDIn=0                                           Premise(F36)
	S67= CtrlCP0=0                                              Premise(F37)
	S68= CP0[ASID]=pid                                          CP0-Hold(S25,S67)
	S69= CtrlEPCIn=0                                            Premise(F38)
	S70= CtrlExCodeIn=0                                         Premise(F39)
	S71= CtrlIMMU=0                                             Premise(F40)
	S72= CtrlPC=0                                               Premise(F41)
	S73= CtrlPCInc=1                                            Premise(F42)
	S74= PC[Out]=addr+4                                         PC-Inc(S31,S72,S73)
	S75= PC[CIA]=addr                                           PC-Inc(S31,S72,S73)
	S76= CtrlIAddrReg=0                                         Premise(F43)
	S77= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S33,S76)
	S78= CtrlICache=1                                           Premise(F44)
	S79= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S64,S62,S78)
	S80= CtrlIR=1                                               Premise(F45)
	S81= [IR]={0,rS,0,rD,hint,9}                                IR-Write(S60,S80)
	S82= CtrlICacheReg=0                                        Premise(F46)
	S83= CtrlIMem=0                                             Premise(F47)
	S84= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                    IMem-Hold(S38,S83)
	S85= CtrlIRMux=0                                            Premise(F48)
	S86= CtrlGPR=0                                              Premise(F49)
	S87= GPR[rS]=a                                              GPR-Hold(S41,S86)

ID	S88= CP0.ASID=pid                                           CP0-Read-ASID(S68)
	S89= PC.Out=addr+4                                          PC-Out(S74)
	S90= PC.CIA=addr                                            PC-Out(S75)
	S91= PC.CIA31_28=addr[31:28]                                PC-Out(S75)
	S92= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S77)
	S93= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S77)
	S94= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S77)
	S95= IR.Out={0,rS,0,rD,hint,9}                              IR-Out(S81)
	S96= IR.Out31_26=0                                          IR-Out(S81)
	S97= IR.Out25_21=rS                                         IR-Out(S81)
	S98= IR.Out20_16=0                                          IR-Out(S81)
	S99= IR.Out15_11=rD                                         IR-Out(S81)
	S100= IR.Out10_6=hint                                       IR-Out(S81)
	S101= IR.Out5_0=9                                           IR-Out(S81)
	S102= IR.Out31_26=>CU.Op                                    Premise(F50)
	S103= CU.Op=0                                               Path(S96,S102)
	S104= IR.Out5_0=>CU.IRFunc                                  Premise(F51)
	S105= CU.IRFunc=9                                           Path(S101,S104)
	S106= IR.Out15_11=>GPR.WReg                                 Premise(F52)
	S107= GPR.WReg=rD                                           Path(S99,S106)
	S108= PC.Out=>GPR.WData                                     Premise(F53)
	S109= GPR.WData=addr+4                                      Path(S89,S108)
	S110= IR.Out25_21=>GPR.RReg1                                Premise(F54)
	S111= GPR.RReg1=rS                                          Path(S97,S110)
	S112= GPR.Rdata1=a                                          GPR-Read(S111,S87)
	S113= GPR.Rdata1=>PC.In                                     Premise(F55)
	S114= PC.In=a                                               Path(S112,S113)
	S115= CtrlASIDIn=0                                          Premise(F56)
	S116= CtrlCP0=0                                             Premise(F57)
	S117= CP0[ASID]=pid                                         CP0-Hold(S68,S116)
	S118= CtrlEPCIn=0                                           Premise(F58)
	S119= CtrlExCodeIn=0                                        Premise(F59)
	S120= CtrlIMMU=0                                            Premise(F60)
	S121= CtrlPC=1                                              Premise(F61)
	S122= CtrlPCInc=0                                           Premise(F62)
	S123= PC[CIA]=addr                                          PC-Hold(S75,S122)
	S124= PC[Out]=a                                             PC-Write(S114,S121,S122)
	S125= CtrlIAddrReg=0                                        Premise(F63)
	S126= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S77,S125)
	S127= CtrlICache=0                                          Premise(F64)
	S128= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S79,S127)
	S129= CtrlIR=0                                              Premise(F65)
	S130= [IR]={0,rS,0,rD,hint,9}                               IR-Hold(S81,S129)
	S131= CtrlICacheReg=0                                       Premise(F66)
	S132= CtrlIMem=0                                            Premise(F67)
	S133= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                   IMem-Hold(S84,S132)
	S134= CtrlIRMux=0                                           Premise(F68)
	S135= CtrlGPR=1                                             Premise(F69)
	S136= GPR[rD]=addr+4                                        GPR-Write(S107,S109,S135)

EX	S137= CP0.ASID=pid                                          CP0-Read-ASID(S117)
	S138= PC.CIA=addr                                           PC-Out(S123)
	S139= PC.CIA31_28=addr[31:28]                               PC-Out(S123)
	S140= PC.Out=a                                              PC-Out(S124)
	S141= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S126)
	S142= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S126)
	S143= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S126)
	S144= IR.Out={0,rS,0,rD,hint,9}                             IR-Out(S130)
	S145= IR.Out31_26=0                                         IR-Out(S130)
	S146= IR.Out25_21=rS                                        IR-Out(S130)
	S147= IR.Out20_16=0                                         IR-Out(S130)
	S148= IR.Out15_11=rD                                        IR-Out(S130)
	S149= IR.Out10_6=hint                                       IR-Out(S130)
	S150= IR.Out5_0=9                                           IR-Out(S130)
	S151= CtrlASIDIn=0                                          Premise(F70)
	S152= CtrlCP0=0                                             Premise(F71)
	S153= CP0[ASID]=pid                                         CP0-Hold(S117,S152)
	S154= CtrlEPCIn=0                                           Premise(F72)
	S155= CtrlExCodeIn=0                                        Premise(F73)
	S156= CtrlIMMU=0                                            Premise(F74)
	S157= CtrlPC=0                                              Premise(F75)
	S158= CtrlPCInc=0                                           Premise(F76)
	S159= PC[CIA]=addr                                          PC-Hold(S123,S158)
	S160= PC[Out]=a                                             PC-Hold(S124,S157,S158)
	S161= CtrlIAddrReg=0                                        Premise(F77)
	S162= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S126,S161)
	S163= CtrlICache=0                                          Premise(F78)
	S164= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S128,S163)
	S165= CtrlIR=0                                              Premise(F79)
	S166= [IR]={0,rS,0,rD,hint,9}                               IR-Hold(S130,S165)
	S167= CtrlICacheReg=0                                       Premise(F80)
	S168= CtrlIMem=0                                            Premise(F81)
	S169= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                   IMem-Hold(S133,S168)
	S170= CtrlIRMux=0                                           Premise(F82)
	S171= CtrlGPR=0                                             Premise(F83)
	S172= GPR[rD]=addr+4                                        GPR-Hold(S136,S171)

MEM	S173= CP0.ASID=pid                                          CP0-Read-ASID(S153)
	S174= PC.CIA=addr                                           PC-Out(S159)
	S175= PC.CIA31_28=addr[31:28]                               PC-Out(S159)
	S176= PC.Out=a                                              PC-Out(S160)
	S177= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S162)
	S178= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S162)
	S179= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S162)
	S180= IR.Out={0,rS,0,rD,hint,9}                             IR-Out(S166)
	S181= IR.Out31_26=0                                         IR-Out(S166)
	S182= IR.Out25_21=rS                                        IR-Out(S166)
	S183= IR.Out20_16=0                                         IR-Out(S166)
	S184= IR.Out15_11=rD                                        IR-Out(S166)
	S185= IR.Out10_6=hint                                       IR-Out(S166)
	S186= IR.Out5_0=9                                           IR-Out(S166)
	S187= CtrlASIDIn=0                                          Premise(F84)
	S188= CtrlCP0=0                                             Premise(F85)
	S189= CP0[ASID]=pid                                         CP0-Hold(S153,S188)
	S190= CtrlEPCIn=0                                           Premise(F86)
	S191= CtrlExCodeIn=0                                        Premise(F87)
	S192= CtrlIMMU=0                                            Premise(F88)
	S193= CtrlPC=0                                              Premise(F89)
	S194= CtrlPCInc=0                                           Premise(F90)
	S195= PC[CIA]=addr                                          PC-Hold(S159,S194)
	S196= PC[Out]=a                                             PC-Hold(S160,S193,S194)
	S197= CtrlIAddrReg=0                                        Premise(F91)
	S198= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S162,S197)
	S199= CtrlICache=0                                          Premise(F92)
	S200= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S164,S199)
	S201= CtrlIR=0                                              Premise(F93)
	S202= [IR]={0,rS,0,rD,hint,9}                               IR-Hold(S166,S201)
	S203= CtrlICacheReg=0                                       Premise(F94)
	S204= CtrlIMem=0                                            Premise(F95)
	S205= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                   IMem-Hold(S169,S204)
	S206= CtrlIRMux=0                                           Premise(F96)
	S207= CtrlGPR=0                                             Premise(F97)
	S208= GPR[rD]=addr+4                                        GPR-Hold(S172,S207)

WB	S209= CP0.ASID=pid                                          CP0-Read-ASID(S189)
	S210= PC.CIA=addr                                           PC-Out(S195)
	S211= PC.CIA31_28=addr[31:28]                               PC-Out(S195)
	S212= PC.Out=a                                              PC-Out(S196)
	S213= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S198)
	S214= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S198)
	S215= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S198)
	S216= IR.Out={0,rS,0,rD,hint,9}                             IR-Out(S202)
	S217= IR.Out31_26=0                                         IR-Out(S202)
	S218= IR.Out25_21=rS                                        IR-Out(S202)
	S219= IR.Out20_16=0                                         IR-Out(S202)
	S220= IR.Out15_11=rD                                        IR-Out(S202)
	S221= IR.Out10_6=hint                                       IR-Out(S202)
	S222= IR.Out5_0=9                                           IR-Out(S202)
	S223= CtrlASIDIn=0                                          Premise(F126)
	S224= CtrlCP0=0                                             Premise(F127)
	S225= CP0[ASID]=pid                                         CP0-Hold(S189,S224)
	S226= CtrlEPCIn=0                                           Premise(F128)
	S227= CtrlExCodeIn=0                                        Premise(F129)
	S228= CtrlIMMU=0                                            Premise(F130)
	S229= CtrlPC=0                                              Premise(F131)
	S230= CtrlPCInc=0                                           Premise(F132)
	S231= PC[CIA]=addr                                          PC-Hold(S195,S230)
	S232= PC[Out]=a                                             PC-Hold(S196,S229,S230)
	S233= CtrlIAddrReg=0                                        Premise(F133)
	S234= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S198,S233)
	S235= CtrlICache=0                                          Premise(F134)
	S236= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S200,S235)
	S237= CtrlIR=0                                              Premise(F135)
	S238= [IR]={0,rS,0,rD,hint,9}                               IR-Hold(S202,S237)
	S239= CtrlICacheReg=0                                       Premise(F136)
	S240= CtrlIMem=0                                            Premise(F137)
	S241= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                   IMem-Hold(S205,S240)
	S242= CtrlIRMux=0                                           Premise(F138)
	S243= CtrlGPR=0                                             Premise(F139)
	S244= GPR[rD]=addr+4                                        GPR-Hold(S208,S243)

POST	S225= CP0[ASID]=pid                                         CP0-Hold(S189,S224)
	S231= PC[CIA]=addr                                          PC-Hold(S195,S230)
	S232= PC[Out]=a                                             PC-Hold(S196,S229,S230)
	S234= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S198,S233)
	S236= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S200,S235)
	S238= [IR]={0,rS,0,rD,hint,9}                               IR-Hold(S202,S237)
	S241= IMem[{pid,addr}]={0,rS,0,rD,hint,9}                   IMem-Hold(S205,S240)
	S244= GPR[rD]=addr+4                                        GPR-Hold(S208,S243)

