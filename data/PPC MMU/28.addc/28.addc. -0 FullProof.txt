
----------------------------------- FullProof -----------------------------------

PRE	S0= [PIDReg]=pid                                            Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={31,rT,rA,rB,21}                       Premise(F2)
	S3= GPRegs[rA]=a                                            Premise(F3)
	S4= GPRegs[rB]=b                                            Premise(F4)
	S5= XER[SO]=so                                              Premise(F5)

IF	S6= PIDReg.Out=pid                                          PIDReg-Out(S0)
	S7= PIDReg.Out26_31=pid[26:31]                              PIDReg-Out(S0)
	S8= PIDReg.Out30_31=pid[30:31]                              PIDReg-Out(S0)
	S9= PC.Out=addr                                             PC-Out(S1)
	S10= XER.SOOut=so                                           XER-SO-Out(S5)
	S11= PIDReg.Out=>IMMU.PID                                   Premise(F6)
	S12= IMMU.PID=pid                                           Path(S6,S11)
	S13= PC.Out=>IMMU.IEA                                       Premise(F7)
	S14= IMMU.IEA=addr                                          Path(S9,S13)
	S15= IMMU.Addr={pid,addr}                                   IMMU-Search(S12,S14)
	S16= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S12,S14)
	S17= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S18= IAddrReg.In={pid,addr}                                 Path(S15,S17)
	S19= IMMU.Hit=>IMMUHitReg.In                                Premise(F9)
	S20= IMMUHitReg.In=IMMUHit(pid,addr)                        Path(S16,S19)
	S21= PC.Out=>ICache.IEA                                     Premise(F10)
	S22= ICache.IEA=addr                                        Path(S9,S21)
	S23= ICache.Hit=ICacheHit(addr)                             ICache-Search(S22)
	S24= ICache.Out=>ICacheReg.In                               Premise(F11)
	S25= ICache.Hit=>ICacheHitReg.In                            Premise(F12)
	S26= ICacheHitReg.In=ICacheHit(addr)                        Path(S23,S25)
	S27= IMMUHitReg.Out=>CU.IMemHit                             Premise(F13)
	S28= ICacheHitReg.Out=>CU.ICacheHit                         Premise(F14)
	S29= IAddrReg.Out=>IMem.RAddr                               Premise(F15)
	S30= IMem.Out=>IRMux.MemData                                Premise(F16)
	S31= ICacheReg.Out=>IRMux.CacheData                         Premise(F17)
	S32= IMMUHitReg.Out=>IRMux.MemSel                           Premise(F18)
	S33= ICacheHitReg.Out=>IRMux.CacheSel                       Premise(F19)
	S34= IRMux.Out=>IR.In                                       Premise(F20)
	S35= IMem.MEM8WordOut=>ICache.WData                         Premise(F21)
	S36= PC.Out=>ICache.IEA                                     Premise(F22)
	S37= IR.Out0_5=>CU.Op                                       Premise(F23)
	S38= IR.Out11_15=>GPRegs.RReg1                              Premise(F24)
	S39= IR.Out16_20=>GPRegs.RReg2                              Premise(F25)
	S40= IR.Out21_31=>CU.IRFunc                                 Premise(F26)
	S41= GPRegs.Rdata1=>A.In                                    Premise(F27)
	S42= GPRegs.Rdata2=>B.In                                    Premise(F28)
	S43= A.Out=>ALU.A                                           Premise(F29)
	S44= B.Out=>ALU.B                                           Premise(F30)
	S45= CU.Func=>ALU.Func                                      Premise(F31)
	S46= ALU.Out=>ALUOut.In                                     Premise(F32)
	S47= ALU.CA=>CAReg.In                                       Premise(F33)
	S48= ALU.CMP=>DataCmb.A                                     Premise(F34)
	S49= XER.SOOut=>DataCmb.B                                   Premise(F35)
	S50= DataCmb.B=so                                           Path(S10,S49)
	S51= DataCmb.Out=>DR4bit.In                                 Premise(F36)
	S52= IR.Out6_10=>GPRegs.WReg                                Premise(F37)
	S53= ALUOut.Out=>GPRegs.WData                               Premise(F38)
	S54= DR4bit.Out=>CRRegs.CR0In                               Premise(F39)
	S55= CAReg.Out=>XER.CAIn                                    Premise(F40)
	S56= CtrlPIDReg=0                                           Premise(F41)
	S57= [PIDReg]=pid                                           PIDReg-Hold(S0,S56)
	S58= CtrlIMMU=0                                             Premise(F42)
	S59= CtrlPC=0                                               Premise(F43)
	S60= CtrlPCInc=0                                            Premise(F44)
	S61= PC[Out]=addr                                           PC-Hold(S1,S59,S60)
	S62= CtrlIAddrReg=1                                         Premise(F45)
	S63= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S18,S62)
	S64= CtrlIMMUHitReg=1                                       Premise(F46)
	S65= [IMMUHitReg]=IMMUHit(pid,addr)                         IMMUHitReg-Write(S20,S64)
	S66= CtrlICache=0                                           Premise(F47)
	S67= CtrlICacheReg=1                                        Premise(F48)
	S68= CtrlICacheHitReg=1                                     Premise(F49)
	S69= [ICacheHitReg]=ICacheHit(addr)                         ICacheHitReg-Write(S26,S68)
	S70= CtrlIMem=0                                             Premise(F50)
	S71= IMem[{pid,addr}]={31,rT,rA,rB,21}                      IMem-Hold(S2,S70)
	S72= CtrlIRMux=0                                            Premise(F51)
	S73= CtrlIR=0                                               Premise(F52)
	S74= CtrlGPRegs=0                                           Premise(F53)
	S75= GPRegs[rA]=a                                           GPRegs-Hold(S3,S74)
	S76= GPRegs[rB]=b                                           GPRegs-Hold(S4,S74)
	S77= CtrlA=0                                                Premise(F54)
	S78= CtrlB=0                                                Premise(F55)
	S79= CtrlALUOut=0                                           Premise(F56)
	S80= CtrlCAReg=0                                            Premise(F57)
	S81= CtrlXERSO=0                                            Premise(F58)
	S82= XER[SO]=so                                             XER-SO-Hold(S5,S81)
	S83= CtrlXEROV=0                                            Premise(F59)
	S84= CtrlXERCA=0                                            Premise(F60)
	S85= CtrlDR4bit=0                                           Premise(F61)
	S86= CtrlCRRegs=0                                           Premise(F62)
	S87= CtrlCRRegsCR0=0                                        Premise(F63)
	S88= CtrlCRRegsW4bitRegs=0                                  Premise(F64)
	S89= CtrlCRRegsW1bitRegs=0                                  Premise(F65)

IMMU	S90= PIDReg.Out=pid                                         PIDReg-Out(S57)
	S91= PIDReg.Out26_31=pid[26:31]                             PIDReg-Out(S57)
	S92= PIDReg.Out30_31=pid[30:31]                             PIDReg-Out(S57)
	S93= PC.Out=addr                                            PC-Out(S61)
	S94= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S63)
	S95= IAddrReg.Out26_31={pid,addr}[26:31]                    IAddrReg-Out(S63)
	S96= IAddrReg.Out30_31={pid,addr}[30:31]                    IAddrReg-Out(S63)
	S97= IMMUHitReg.Out=IMMUHit(pid,addr)                       IMMUHitReg-Out(S65)
	S98= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]           IMMUHitReg-Out(S65)
	S99= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]           IMMUHitReg-Out(S65)
	S100= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S69)
	S101= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S69)
	S102= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S69)
	S103= XER.SOOut=so                                          XER-SO-Out(S82)
	S104= PIDReg.Out=>IMMU.PID                                  Premise(F66)
	S105= IMMU.PID=pid                                          Path(S90,S104)
	S106= PC.Out=>IMMU.IEA                                      Premise(F67)
	S107= IMMU.IEA=addr                                         Path(S93,S106)
	S108= IMMU.Addr={pid,addr}                                  IMMU-Search(S105,S107)
	S109= IMMU.Hit=IMMUHit(pid,addr)                            IMMU-Search(S105,S107)
	S110= IMMU.Addr=>IAddrReg.In                                Premise(F68)
	S111= IAddrReg.In={pid,addr}                                Path(S108,S110)
	S112= IMMU.Hit=>IMMUHitReg.In                               Premise(F69)
	S113= IMMUHitReg.In=IMMUHit(pid,addr)                       Path(S109,S112)
	S114= PC.Out=>ICache.IEA                                    Premise(F70)
	S115= ICache.IEA=addr                                       Path(S93,S114)
	S116= ICache.Hit=ICacheHit(addr)                            ICache-Search(S115)
	S117= ICache.Out=>ICacheReg.In                              Premise(F71)
	S118= ICache.Hit=>ICacheHitReg.In                           Premise(F72)
	S119= ICacheHitReg.In=ICacheHit(addr)                       Path(S116,S118)
	S120= IMMUHitReg.Out=>CU.IMemHit                            Premise(F73)
	S121= CU.IMemHit=IMMUHit(pid,addr)                          Path(S97,S120)
	S122= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F74)
	S123= CU.ICacheHit=ICacheHit(addr)                          Path(S100,S122)
	S124= IAddrReg.Out=>IMem.RAddr                              Premise(F75)
	S125= IMem.RAddr={pid,addr}                                 Path(S94,S124)
	S126= IMem.Out={31,rT,rA,rB,21}                             IMem-Read(S125,S71)
	S127= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S125,S71)
	S128= IMem.Out=>IRMux.MemData                               Premise(F76)
	S129= IRMux.MemData={31,rT,rA,rB,21}                        Path(S126,S128)
	S130= IRMux.Out={31,rT,rA,rB,21}                            IRMux-Select(S129)
	S131= ICacheReg.Out=>IRMux.CacheData                        Premise(F77)
	S132= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F78)
	S133= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S97,S132)
	S134= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F79)
	S135= IRMux.CacheSel=ICacheHit(addr)                        Path(S100,S134)
	S136= IRMux.Out=>IR.In                                      Premise(F80)
	S137= IR.In={31,rT,rA,rB,21}                                Path(S130,S136)
	S138= IMem.MEM8WordOut=>ICache.WData                        Premise(F81)
	S139= ICache.WData=IMemGet8Word({pid,addr})                 Path(S127,S138)
	S140= PC.Out=>ICache.IEA                                    Premise(F82)
	S141= IR.Out0_5=>CU.Op                                      Premise(F83)
	S142= IR.Out11_15=>GPRegs.RReg1                             Premise(F84)
	S143= IR.Out16_20=>GPRegs.RReg2                             Premise(F85)
	S144= IR.Out21_31=>CU.IRFunc                                Premise(F86)
	S145= GPRegs.Rdata1=>A.In                                   Premise(F87)
	S146= GPRegs.Rdata2=>B.In                                   Premise(F88)
	S147= A.Out=>ALU.A                                          Premise(F89)
	S148= B.Out=>ALU.B                                          Premise(F90)
	S149= CU.Func=>ALU.Func                                     Premise(F91)
	S150= ALU.Out=>ALUOut.In                                    Premise(F92)
	S151= ALU.CA=>CAReg.In                                      Premise(F93)
	S152= ALU.CMP=>DataCmb.A                                    Premise(F94)
	S153= XER.SOOut=>DataCmb.B                                  Premise(F95)
	S154= DataCmb.B=so                                          Path(S103,S153)
	S155= DataCmb.Out=>DR4bit.In                                Premise(F96)
	S156= IR.Out6_10=>GPRegs.WReg                               Premise(F97)
	S157= ALUOut.Out=>GPRegs.WData                              Premise(F98)
	S158= DR4bit.Out=>CRRegs.CR0In                              Premise(F99)
	S159= CAReg.Out=>XER.CAIn                                   Premise(F100)
	S160= CtrlPIDReg=0                                          Premise(F101)
	S161= [PIDReg]=pid                                          PIDReg-Hold(S57,S160)
	S162= CtrlIMMU=0                                            Premise(F102)
	S163= CtrlPC=0                                              Premise(F103)
	S164= CtrlPCInc=1                                           Premise(F104)
	S165= PC[Out]=addr+4                                        PC-Inc(S61,S163,S164)
	S166= PC[CIA]=addr                                          PC-Inc(S61,S163,S164)
	S167= CtrlIAddrReg=0                                        Premise(F105)
	S168= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S63,S167)
	S169= CtrlIMMUHitReg=0                                      Premise(F106)
	S170= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S65,S169)
	S171= CtrlICache=1                                          Premise(F107)
	S172= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Write(S115,S139,S171)
	S173= CtrlICacheReg=0                                       Premise(F108)
	S174= CtrlICacheHitReg=0                                    Premise(F109)
	S175= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S69,S174)
	S176= CtrlIMem=0                                            Premise(F110)
	S177= IMem[{pid,addr}]={31,rT,rA,rB,21}                     IMem-Hold(S71,S176)
	S178= CtrlIRMux=0                                           Premise(F111)
	S179= CtrlIR=1                                              Premise(F112)
	S180= [IR]={31,rT,rA,rB,21}                                 IR-Write(S137,S179)
	S181= CtrlGPRegs=0                                          Premise(F113)
	S182= GPRegs[rA]=a                                          GPRegs-Hold(S75,S181)
	S183= GPRegs[rB]=b                                          GPRegs-Hold(S76,S181)
	S184= CtrlA=0                                               Premise(F114)
	S185= CtrlB=0                                               Premise(F115)
	S186= CtrlALUOut=0                                          Premise(F116)
	S187= CtrlCAReg=0                                           Premise(F117)
	S188= CtrlXERSO=0                                           Premise(F118)
	S189= XER[SO]=so                                            XER-SO-Hold(S82,S188)
	S190= CtrlXEROV=0                                           Premise(F119)
	S191= CtrlXERCA=0                                           Premise(F120)
	S192= CtrlDR4bit=0                                          Premise(F121)
	S193= CtrlCRRegs=0                                          Premise(F122)
	S194= CtrlCRRegsCR0=0                                       Premise(F123)
	S195= CtrlCRRegsW4bitRegs=0                                 Premise(F124)
	S196= CtrlCRRegsW1bitRegs=0                                 Premise(F125)

ID	S197= PIDReg.Out=pid                                        PIDReg-Out(S161)
	S198= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S161)
	S199= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S161)
	S200= PC.Out=addr+4                                         PC-Out(S165)
	S201= PC.CIA=addr                                           PC-Out(S166)
	S202= PC.CIA31_28=addr[31:28]                               PC-Out(S166)
	S203= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S168)
	S204= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S168)
	S205= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S168)
	S206= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S170)
	S207= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S170)
	S208= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S170)
	S209= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S175)
	S210= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S175)
	S211= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S175)
	S212= IR.Out0_5=31                                          IR-Out(S180)
	S213= IR.Out6_10=rT                                         IR-Out(S180)
	S214= IR.Out11_15=rA                                        IR-Out(S180)
	S215= IR.Out16_20=rB                                        IR-Out(S180)
	S216= IR.Out21_31=21                                        IR-Out(S180)
	S217= XER.SOOut=so                                          XER-SO-Out(S189)
	S218= PIDReg.Out=>IMMU.PID                                  Premise(F126)
	S219= IMMU.PID=pid                                          Path(S197,S218)
	S220= PC.Out=>IMMU.IEA                                      Premise(F127)
	S221= IMMU.IEA=addr+4                                       Path(S200,S220)
	S222= IMMU.Addr={pid,addr+4}                                IMMU-Search(S219,S221)
	S223= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S219,S221)
	S224= IMMU.Addr=>IAddrReg.In                                Premise(F128)
	S225= IAddrReg.In={pid,addr+4}                              Path(S222,S224)
	S226= IMMU.Hit=>IMMUHitReg.In                               Premise(F129)
	S227= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S223,S226)
	S228= PC.Out=>ICache.IEA                                    Premise(F130)
	S229= ICache.IEA=addr+4                                     Path(S200,S228)
	S230= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S229)
	S231= ICache.Out=>ICacheReg.In                              Premise(F131)
	S232= ICache.Hit=>ICacheHitReg.In                           Premise(F132)
	S233= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S230,S232)
	S234= IMMUHitReg.Out=>CU.IMemHit                            Premise(F133)
	S235= CU.IMemHit=IMMUHit(pid,addr)                          Path(S206,S234)
	S236= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F134)
	S237= CU.ICacheHit=ICacheHit(addr)                          Path(S209,S236)
	S238= IAddrReg.Out=>IMem.RAddr                              Premise(F135)
	S239= IMem.RAddr={pid,addr}                                 Path(S203,S238)
	S240= IMem.Out={31,rT,rA,rB,21}                             IMem-Read(S239,S177)
	S241= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S239,S177)
	S242= IMem.Out=>IRMux.MemData                               Premise(F136)
	S243= IRMux.MemData={31,rT,rA,rB,21}                        Path(S240,S242)
	S244= IRMux.Out={31,rT,rA,rB,21}                            IRMux-Select(S243)
	S245= ICacheReg.Out=>IRMux.CacheData                        Premise(F137)
	S246= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F138)
	S247= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S206,S246)
	S248= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F139)
	S249= IRMux.CacheSel=ICacheHit(addr)                        Path(S209,S248)
	S250= IRMux.Out=>IR.In                                      Premise(F140)
	S251= IR.In={31,rT,rA,rB,21}                                Path(S244,S250)
	S252= IMem.MEM8WordOut=>ICache.WData                        Premise(F141)
	S253= ICache.WData=IMemGet8Word({pid,addr})                 Path(S241,S252)
	S254= PC.Out=>ICache.IEA                                    Premise(F142)
	S255= IR.Out0_5=>CU.Op                                      Premise(F143)
	S256= CU.Op=31                                              Path(S212,S255)
	S257= IR.Out11_15=>GPRegs.RReg1                             Premise(F144)
	S258= GPRegs.RReg1=rA                                       Path(S214,S257)
	S259= GPRegs.Rdata1=a                                       GPRegs-Read(S258,S182)
	S260= IR.Out16_20=>GPRegs.RReg2                             Premise(F145)
	S261= GPRegs.RReg2=rB                                       Path(S215,S260)
	S262= GPRegs.Rdata2=b                                       GPRegs-Read(S261,S183)
	S263= IR.Out21_31=>CU.IRFunc                                Premise(F146)
	S264= CU.IRFunc=21                                          Path(S216,S263)
	S265= CU.Func=alu_add                                       CU(S256,S264)
	S266= GPRegs.Rdata1=>A.In                                   Premise(F147)
	S267= A.In=a                                                Path(S259,S266)
	S268= GPRegs.Rdata2=>B.In                                   Premise(F148)
	S269= B.In=b                                                Path(S262,S268)
	S270= A.Out=>ALU.A                                          Premise(F149)
	S271= B.Out=>ALU.B                                          Premise(F150)
	S272= CU.Func=>ALU.Func                                     Premise(F151)
	S273= ALU.Func=alu_add                                      Path(S265,S272)
	S274= ALU.Out=>ALUOut.In                                    Premise(F152)
	S275= ALU.CA=>CAReg.In                                      Premise(F153)
	S276= ALU.CMP=>DataCmb.A                                    Premise(F154)
	S277= XER.SOOut=>DataCmb.B                                  Premise(F155)
	S278= DataCmb.B=so                                          Path(S217,S277)
	S279= DataCmb.Out=>DR4bit.In                                Premise(F156)
	S280= IR.Out6_10=>GPRegs.WReg                               Premise(F157)
	S281= GPRegs.WReg=rT                                        Path(S213,S280)
	S282= ALUOut.Out=>GPRegs.WData                              Premise(F158)
	S283= DR4bit.Out=>CRRegs.CR0In                              Premise(F159)
	S284= CAReg.Out=>XER.CAIn                                   Premise(F160)
	S285= CtrlPIDReg=0                                          Premise(F161)
	S286= [PIDReg]=pid                                          PIDReg-Hold(S161,S285)
	S287= CtrlIMMU=0                                            Premise(F162)
	S288= CtrlPC=0                                              Premise(F163)
	S289= CtrlPCInc=0                                           Premise(F164)
	S290= PC[CIA]=addr                                          PC-Hold(S166,S289)
	S291= PC[Out]=addr+4                                        PC-Hold(S165,S288,S289)
	S292= CtrlIAddrReg=0                                        Premise(F165)
	S293= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S168,S292)
	S294= CtrlIMMUHitReg=0                                      Premise(F166)
	S295= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S170,S294)
	S296= CtrlICache=0                                          Premise(F167)
	S297= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S172,S296)
	S298= CtrlICacheReg=0                                       Premise(F168)
	S299= CtrlICacheHitReg=0                                    Premise(F169)
	S300= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S175,S299)
	S301= CtrlIMem=0                                            Premise(F170)
	S302= IMem[{pid,addr}]={31,rT,rA,rB,21}                     IMem-Hold(S177,S301)
	S303= CtrlIRMux=0                                           Premise(F171)
	S304= CtrlIR=0                                              Premise(F172)
	S305= [IR]={31,rT,rA,rB,21}                                 IR-Hold(S180,S304)
	S306= CtrlGPRegs=0                                          Premise(F173)
	S307= GPRegs[rA]=a                                          GPRegs-Hold(S182,S306)
	S308= GPRegs[rB]=b                                          GPRegs-Hold(S183,S306)
	S309= CtrlA=1                                               Premise(F174)
	S310= [A]=a                                                 A-Write(S267,S309)
	S311= CtrlB=1                                               Premise(F175)
	S312= [B]=b                                                 B-Write(S269,S311)
	S313= CtrlALUOut=0                                          Premise(F176)
	S314= CtrlCAReg=0                                           Premise(F177)
	S315= CtrlXERSO=0                                           Premise(F178)
	S316= XER[SO]=so                                            XER-SO-Hold(S189,S315)
	S317= CtrlXEROV=0                                           Premise(F179)
	S318= CtrlXERCA=0                                           Premise(F180)
	S319= CtrlDR4bit=0                                          Premise(F181)
	S320= CtrlCRRegs=0                                          Premise(F182)
	S321= CtrlCRRegsCR0=0                                       Premise(F183)
	S322= CtrlCRRegsW4bitRegs=0                                 Premise(F184)
	S323= CtrlCRRegsW1bitRegs=0                                 Premise(F185)

EX	S324= PIDReg.Out=pid                                        PIDReg-Out(S286)
	S325= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S286)
	S326= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S286)
	S327= PC.CIA=addr                                           PC-Out(S290)
	S328= PC.CIA31_28=addr[31:28]                               PC-Out(S290)
	S329= PC.Out=addr+4                                         PC-Out(S291)
	S330= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S293)
	S331= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S293)
	S332= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S293)
	S333= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S295)
	S334= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S295)
	S335= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S295)
	S336= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S300)
	S337= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S300)
	S338= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S300)
	S339= IR.Out0_5=31                                          IR-Out(S305)
	S340= IR.Out6_10=rT                                         IR-Out(S305)
	S341= IR.Out11_15=rA                                        IR-Out(S305)
	S342= IR.Out16_20=rB                                        IR-Out(S305)
	S343= IR.Out21_31=21                                        IR-Out(S305)
	S344= A.Out=a                                               A-Out(S310)
	S345= A.Out26_31=a[26:31]                                   A-Out(S310)
	S346= A.Out30_31=a[30:31]                                   A-Out(S310)
	S347= B.Out=b                                               B-Out(S312)
	S348= B.Out26_31=b[26:31]                                   B-Out(S312)
	S349= B.Out30_31=b[30:31]                                   B-Out(S312)
	S350= XER.SOOut=so                                          XER-SO-Out(S316)
	S351= PIDReg.Out=>IMMU.PID                                  Premise(F186)
	S352= IMMU.PID=pid                                          Path(S324,S351)
	S353= PC.Out=>IMMU.IEA                                      Premise(F187)
	S354= IMMU.IEA=addr+4                                       Path(S329,S353)
	S355= IMMU.Addr={pid,addr+4}                                IMMU-Search(S352,S354)
	S356= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S352,S354)
	S357= IMMU.Addr=>IAddrReg.In                                Premise(F188)
	S358= IAddrReg.In={pid,addr+4}                              Path(S355,S357)
	S359= IMMU.Hit=>IMMUHitReg.In                               Premise(F189)
	S360= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S356,S359)
	S361= PC.Out=>ICache.IEA                                    Premise(F190)
	S362= ICache.IEA=addr+4                                     Path(S329,S361)
	S363= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S362)
	S364= ICache.Out=>ICacheReg.In                              Premise(F191)
	S365= ICache.Hit=>ICacheHitReg.In                           Premise(F192)
	S366= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S363,S365)
	S367= IMMUHitReg.Out=>CU.IMemHit                            Premise(F193)
	S368= CU.IMemHit=IMMUHit(pid,addr)                          Path(S333,S367)
	S369= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F194)
	S370= CU.ICacheHit=ICacheHit(addr)                          Path(S336,S369)
	S371= IAddrReg.Out=>IMem.RAddr                              Premise(F195)
	S372= IMem.RAddr={pid,addr}                                 Path(S330,S371)
	S373= IMem.Out={31,rT,rA,rB,21}                             IMem-Read(S372,S302)
	S374= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S372,S302)
	S375= IMem.Out=>IRMux.MemData                               Premise(F196)
	S376= IRMux.MemData={31,rT,rA,rB,21}                        Path(S373,S375)
	S377= IRMux.Out={31,rT,rA,rB,21}                            IRMux-Select(S376)
	S378= ICacheReg.Out=>IRMux.CacheData                        Premise(F197)
	S379= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F198)
	S380= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S333,S379)
	S381= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F199)
	S382= IRMux.CacheSel=ICacheHit(addr)                        Path(S336,S381)
	S383= IRMux.Out=>IR.In                                      Premise(F200)
	S384= IR.In={31,rT,rA,rB,21}                                Path(S377,S383)
	S385= IMem.MEM8WordOut=>ICache.WData                        Premise(F201)
	S386= ICache.WData=IMemGet8Word({pid,addr})                 Path(S374,S385)
	S387= PC.Out=>ICache.IEA                                    Premise(F202)
	S388= IR.Out0_5=>CU.Op                                      Premise(F203)
	S389= CU.Op=31                                              Path(S339,S388)
	S390= IR.Out11_15=>GPRegs.RReg1                             Premise(F204)
	S391= GPRegs.RReg1=rA                                       Path(S341,S390)
	S392= GPRegs.Rdata1=a                                       GPRegs-Read(S391,S307)
	S393= IR.Out16_20=>GPRegs.RReg2                             Premise(F205)
	S394= GPRegs.RReg2=rB                                       Path(S342,S393)
	S395= GPRegs.Rdata2=b                                       GPRegs-Read(S394,S308)
	S396= IR.Out21_31=>CU.IRFunc                                Premise(F206)
	S397= CU.IRFunc=21                                          Path(S343,S396)
	S398= CU.Func=alu_add                                       CU(S389,S397)
	S399= GPRegs.Rdata1=>A.In                                   Premise(F207)
	S400= A.In=a                                                Path(S392,S399)
	S401= GPRegs.Rdata2=>B.In                                   Premise(F208)
	S402= B.In=b                                                Path(S395,S401)
	S403= A.Out=>ALU.A                                          Premise(F209)
	S404= ALU.A=a                                               Path(S344,S403)
	S405= B.Out=>ALU.B                                          Premise(F210)
	S406= ALU.B=b                                               Path(S347,S405)
	S407= CU.Func=>ALU.Func                                     Premise(F211)
	S408= ALU.Func=alu_add                                      Path(S398,S407)
	S409= ALU.Out=a+b                                           ALU(S404,S406)
	S410= ALU.CMP=Compare0(a+b)                                 ALU(S404,S406)
	S411= ALU.OV=OverFlow(a+b)                                  ALU(S404,S406)
	S412= ALU.CA=Carry(a+b)                                     ALU(S404,S406)
	S413= ALU.Out=>ALUOut.In                                    Premise(F212)
	S414= ALUOut.In=a+b                                         Path(S409,S413)
	S415= ALU.CA=>CAReg.In                                      Premise(F213)
	S416= CAReg.In=Carry(a+b)                                   Path(S412,S415)
	S417= ALU.CMP=>DataCmb.A                                    Premise(F214)
	S418= DataCmb.A=Compare0(a+b)                               Path(S410,S417)
	S419= XER.SOOut=>DataCmb.B                                  Premise(F215)
	S420= DataCmb.B=so                                          Path(S350,S419)
	S421= DataCmb.Out={Compare0(a+b),so}                        DataCmb(S418,S420)
	S422= DataCmb.Out=>DR4bit.In                                Premise(F216)
	S423= DR4bit.In={Compare0(a+b),so}                          Path(S421,S422)
	S424= IR.Out6_10=>GPRegs.WReg                               Premise(F217)
	S425= GPRegs.WReg=rT                                        Path(S340,S424)
	S426= ALUOut.Out=>GPRegs.WData                              Premise(F218)
	S427= DR4bit.Out=>CRRegs.CR0In                              Premise(F219)
	S428= CAReg.Out=>XER.CAIn                                   Premise(F220)
	S429= CtrlPIDReg=0                                          Premise(F221)
	S430= [PIDReg]=pid                                          PIDReg-Hold(S286,S429)
	S431= CtrlIMMU=0                                            Premise(F222)
	S432= CtrlPC=0                                              Premise(F223)
	S433= CtrlPCInc=0                                           Premise(F224)
	S434= PC[CIA]=addr                                          PC-Hold(S290,S433)
	S435= PC[Out]=addr+4                                        PC-Hold(S291,S432,S433)
	S436= CtrlIAddrReg=0                                        Premise(F225)
	S437= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S293,S436)
	S438= CtrlIMMUHitReg=0                                      Premise(F226)
	S439= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S295,S438)
	S440= CtrlICache=0                                          Premise(F227)
	S441= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S297,S440)
	S442= CtrlICacheReg=0                                       Premise(F228)
	S443= CtrlICacheHitReg=0                                    Premise(F229)
	S444= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S300,S443)
	S445= CtrlIMem=0                                            Premise(F230)
	S446= IMem[{pid,addr}]={31,rT,rA,rB,21}                     IMem-Hold(S302,S445)
	S447= CtrlIRMux=0                                           Premise(F231)
	S448= CtrlIR=0                                              Premise(F232)
	S449= [IR]={31,rT,rA,rB,21}                                 IR-Hold(S305,S448)
	S450= CtrlGPRegs=0                                          Premise(F233)
	S451= GPRegs[rA]=a                                          GPRegs-Hold(S307,S450)
	S452= GPRegs[rB]=b                                          GPRegs-Hold(S308,S450)
	S453= CtrlA=0                                               Premise(F234)
	S454= [A]=a                                                 A-Hold(S310,S453)
	S455= CtrlB=0                                               Premise(F235)
	S456= [B]=b                                                 B-Hold(S312,S455)
	S457= CtrlALUOut=1                                          Premise(F236)
	S458= [ALUOut]=a+b                                          ALUOut-Write(S414,S457)
	S459= CtrlCAReg=1                                           Premise(F237)
	S460= [CAReg]=Carry(a+b)                                    CAReg-Write(S416,S459)
	S461= CtrlXERSO=0                                           Premise(F238)
	S462= XER[SO]=so                                            XER-SO-Hold(S316,S461)
	S463= CtrlXEROV=0                                           Premise(F239)
	S464= CtrlXERCA=0                                           Premise(F240)
	S465= CtrlDR4bit=1                                          Premise(F241)
	S466= [DR4bit]={Compare0(a+b),so}                           DR4bit-Write(S423,S465)
	S467= CtrlCRRegs=0                                          Premise(F242)
	S468= CtrlCRRegsCR0=0                                       Premise(F243)
	S469= CtrlCRRegsW4bitRegs=0                                 Premise(F244)
	S470= CtrlCRRegsW1bitRegs=0                                 Premise(F245)

MEM	S471= PIDReg.Out=pid                                        PIDReg-Out(S430)
	S472= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S430)
	S473= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S430)
	S474= PC.CIA=addr                                           PC-Out(S434)
	S475= PC.CIA31_28=addr[31:28]                               PC-Out(S434)
	S476= PC.Out=addr+4                                         PC-Out(S435)
	S477= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S437)
	S478= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S437)
	S479= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S437)
	S480= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S439)
	S481= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S439)
	S482= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S439)
	S483= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S444)
	S484= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S444)
	S485= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S444)
	S486= IR.Out0_5=31                                          IR-Out(S449)
	S487= IR.Out6_10=rT                                         IR-Out(S449)
	S488= IR.Out11_15=rA                                        IR-Out(S449)
	S489= IR.Out16_20=rB                                        IR-Out(S449)
	S490= IR.Out21_31=21                                        IR-Out(S449)
	S491= A.Out=a                                               A-Out(S454)
	S492= A.Out26_31=a[26:31]                                   A-Out(S454)
	S493= A.Out30_31=a[30:31]                                   A-Out(S454)
	S494= B.Out=b                                               B-Out(S456)
	S495= B.Out26_31=b[26:31]                                   B-Out(S456)
	S496= B.Out30_31=b[30:31]                                   B-Out(S456)
	S497= ALUOut.Out=a+b                                        ALUOut-Out(S458)
	S498= ALUOut.Out26_31=a+b[26:31]                            ALUOut-Out(S458)
	S499= ALUOut.Out30_31=a+b[30:31]                            ALUOut-Out(S458)
	S500= CAReg.Out=Carry(a+b)                                  CAReg-Out(S460)
	S501= CAReg.Out26_31=Carry(a+b)[26:31]                      CAReg-Out(S460)
	S502= CAReg.Out30_31=Carry(a+b)[30:31]                      CAReg-Out(S460)
	S503= XER.SOOut=so                                          XER-SO-Out(S462)
	S504= DR4bit.Out={Compare0(a+b),so}                         DR4bit-Out(S466)
	S505= DR4bit.Out26_31={Compare0(a+b),so}[26:31]             DR4bit-Out(S466)
	S506= DR4bit.Out30_31={Compare0(a+b),so}[30:31]             DR4bit-Out(S466)
	S507= PIDReg.Out=>IMMU.PID                                  Premise(F246)
	S508= IMMU.PID=pid                                          Path(S471,S507)
	S509= PC.Out=>IMMU.IEA                                      Premise(F247)
	S510= IMMU.IEA=addr+4                                       Path(S476,S509)
	S511= IMMU.Addr={pid,addr+4}                                IMMU-Search(S508,S510)
	S512= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S508,S510)
	S513= IMMU.Addr=>IAddrReg.In                                Premise(F248)
	S514= IAddrReg.In={pid,addr+4}                              Path(S511,S513)
	S515= IMMU.Hit=>IMMUHitReg.In                               Premise(F249)
	S516= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S512,S515)
	S517= PC.Out=>ICache.IEA                                    Premise(F250)
	S518= ICache.IEA=addr+4                                     Path(S476,S517)
	S519= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S518)
	S520= ICache.Out=>ICacheReg.In                              Premise(F251)
	S521= ICache.Hit=>ICacheHitReg.In                           Premise(F252)
	S522= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S519,S521)
	S523= IMMUHitReg.Out=>CU.IMemHit                            Premise(F253)
	S524= CU.IMemHit=IMMUHit(pid,addr)                          Path(S480,S523)
	S525= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F254)
	S526= CU.ICacheHit=ICacheHit(addr)                          Path(S483,S525)
	S527= IAddrReg.Out=>IMem.RAddr                              Premise(F255)
	S528= IMem.RAddr={pid,addr}                                 Path(S477,S527)
	S529= IMem.Out={31,rT,rA,rB,21}                             IMem-Read(S528,S446)
	S530= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S528,S446)
	S531= IMem.Out=>IRMux.MemData                               Premise(F256)
	S532= IRMux.MemData={31,rT,rA,rB,21}                        Path(S529,S531)
	S533= IRMux.Out={31,rT,rA,rB,21}                            IRMux-Select(S532)
	S534= ICacheReg.Out=>IRMux.CacheData                        Premise(F257)
	S535= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F258)
	S536= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S480,S535)
	S537= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F259)
	S538= IRMux.CacheSel=ICacheHit(addr)                        Path(S483,S537)
	S539= IRMux.Out=>IR.In                                      Premise(F260)
	S540= IR.In={31,rT,rA,rB,21}                                Path(S533,S539)
	S541= IMem.MEM8WordOut=>ICache.WData                        Premise(F261)
	S542= ICache.WData=IMemGet8Word({pid,addr})                 Path(S530,S541)
	S543= PC.Out=>ICache.IEA                                    Premise(F262)
	S544= IR.Out0_5=>CU.Op                                      Premise(F263)
	S545= CU.Op=31                                              Path(S486,S544)
	S546= IR.Out11_15=>GPRegs.RReg1                             Premise(F264)
	S547= GPRegs.RReg1=rA                                       Path(S488,S546)
	S548= GPRegs.Rdata1=a                                       GPRegs-Read(S547,S451)
	S549= IR.Out16_20=>GPRegs.RReg2                             Premise(F265)
	S550= GPRegs.RReg2=rB                                       Path(S489,S549)
	S551= GPRegs.Rdata2=b                                       GPRegs-Read(S550,S452)
	S552= IR.Out21_31=>CU.IRFunc                                Premise(F266)
	S553= CU.IRFunc=21                                          Path(S490,S552)
	S554= CU.Func=alu_add                                       CU(S545,S553)
	S555= GPRegs.Rdata1=>A.In                                   Premise(F267)
	S556= A.In=a                                                Path(S548,S555)
	S557= GPRegs.Rdata2=>B.In                                   Premise(F268)
	S558= B.In=b                                                Path(S551,S557)
	S559= A.Out=>ALU.A                                          Premise(F269)
	S560= ALU.A=a                                               Path(S491,S559)
	S561= B.Out=>ALU.B                                          Premise(F270)
	S562= ALU.B=b                                               Path(S494,S561)
	S563= CU.Func=>ALU.Func                                     Premise(F271)
	S564= ALU.Func=alu_add                                      Path(S554,S563)
	S565= ALU.Out=a+b                                           ALU(S560,S562)
	S566= ALU.CMP=Compare0(a+b)                                 ALU(S560,S562)
	S567= ALU.OV=OverFlow(a+b)                                  ALU(S560,S562)
	S568= ALU.CA=Carry(a+b)                                     ALU(S560,S562)
	S569= ALU.Out=>ALUOut.In                                    Premise(F272)
	S570= ALUOut.In=a+b                                         Path(S565,S569)
	S571= ALU.CA=>CAReg.In                                      Premise(F273)
	S572= CAReg.In=Carry(a+b)                                   Path(S568,S571)
	S573= ALU.CMP=>DataCmb.A                                    Premise(F274)
	S574= DataCmb.A=Compare0(a+b)                               Path(S566,S573)
	S575= XER.SOOut=>DataCmb.B                                  Premise(F275)
	S576= DataCmb.B=so                                          Path(S503,S575)
	S577= DataCmb.Out={Compare0(a+b),so}                        DataCmb(S574,S576)
	S578= DataCmb.Out=>DR4bit.In                                Premise(F276)
	S579= DR4bit.In={Compare0(a+b),so}                          Path(S577,S578)
	S580= IR.Out6_10=>GPRegs.WReg                               Premise(F277)
	S581= GPRegs.WReg=rT                                        Path(S487,S580)
	S582= ALUOut.Out=>GPRegs.WData                              Premise(F278)
	S583= GPRegs.WData=a+b                                      Path(S497,S582)
	S584= DR4bit.Out=>CRRegs.CR0In                              Premise(F279)
	S585= CRRegs.CR0In={Compare0(a+b),so}                       Path(S504,S584)
	S586= CAReg.Out=>XER.CAIn                                   Premise(F280)
	S587= XER.CAIn=Carry(a+b)                                   Path(S500,S586)
	S588= CtrlPIDReg=0                                          Premise(F281)
	S589= [PIDReg]=pid                                          PIDReg-Hold(S430,S588)
	S590= CtrlIMMU=0                                            Premise(F282)
	S591= CtrlPC=0                                              Premise(F283)
	S592= CtrlPCInc=0                                           Premise(F284)
	S593= PC[CIA]=addr                                          PC-Hold(S434,S592)
	S594= PC[Out]=addr+4                                        PC-Hold(S435,S591,S592)
	S595= CtrlIAddrReg=0                                        Premise(F285)
	S596= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S437,S595)
	S597= CtrlIMMUHitReg=0                                      Premise(F286)
	S598= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S439,S597)
	S599= CtrlICache=0                                          Premise(F287)
	S600= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S441,S599)
	S601= CtrlICacheReg=0                                       Premise(F288)
	S602= CtrlICacheHitReg=0                                    Premise(F289)
	S603= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S444,S602)
	S604= CtrlIMem=0                                            Premise(F290)
	S605= IMem[{pid,addr}]={31,rT,rA,rB,21}                     IMem-Hold(S446,S604)
	S606= CtrlIRMux=0                                           Premise(F291)
	S607= CtrlIR=0                                              Premise(F292)
	S608= [IR]={31,rT,rA,rB,21}                                 IR-Hold(S449,S607)
	S609= CtrlGPRegs=0                                          Premise(F293)
	S610= GPRegs[rA]=a                                          GPRegs-Hold(S451,S609)
	S611= GPRegs[rB]=b                                          GPRegs-Hold(S452,S609)
	S612= CtrlA=0                                               Premise(F294)
	S613= [A]=a                                                 A-Hold(S454,S612)
	S614= CtrlB=0                                               Premise(F295)
	S615= [B]=b                                                 B-Hold(S456,S614)
	S616= CtrlALUOut=0                                          Premise(F296)
	S617= [ALUOut]=a+b                                          ALUOut-Hold(S458,S616)
	S618= CtrlCAReg=0                                           Premise(F297)
	S619= [CAReg]=Carry(a+b)                                    CAReg-Hold(S460,S618)
	S620= CtrlXERSO=0                                           Premise(F298)
	S621= XER[SO]=so                                            XER-SO-Hold(S462,S620)
	S622= CtrlXEROV=0                                           Premise(F299)
	S623= CtrlXERCA=0                                           Premise(F300)
	S624= CtrlDR4bit=0                                          Premise(F301)
	S625= [DR4bit]={Compare0(a+b),so}                           DR4bit-Hold(S466,S624)
	S626= CtrlCRRegs=0                                          Premise(F302)
	S627= CtrlCRRegsCR0=0                                       Premise(F303)
	S628= CtrlCRRegsW4bitRegs=0                                 Premise(F304)
	S629= CtrlCRRegsW1bitRegs=0                                 Premise(F305)

DMMU1	S630= PIDReg.Out=pid                                        PIDReg-Out(S589)
	S631= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S589)
	S632= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S589)
	S633= PC.CIA=addr                                           PC-Out(S593)
	S634= PC.CIA31_28=addr[31:28]                               PC-Out(S593)
	S635= PC.Out=addr+4                                         PC-Out(S594)
	S636= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S596)
	S637= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S596)
	S638= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S596)
	S639= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S598)
	S640= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S598)
	S641= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S598)
	S642= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S603)
	S643= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S603)
	S644= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S603)
	S645= IR.Out0_5=31                                          IR-Out(S608)
	S646= IR.Out6_10=rT                                         IR-Out(S608)
	S647= IR.Out11_15=rA                                        IR-Out(S608)
	S648= IR.Out16_20=rB                                        IR-Out(S608)
	S649= IR.Out21_31=21                                        IR-Out(S608)
	S650= A.Out=a                                               A-Out(S613)
	S651= A.Out26_31=a[26:31]                                   A-Out(S613)
	S652= A.Out30_31=a[30:31]                                   A-Out(S613)
	S653= B.Out=b                                               B-Out(S615)
	S654= B.Out26_31=b[26:31]                                   B-Out(S615)
	S655= B.Out30_31=b[30:31]                                   B-Out(S615)
	S656= ALUOut.Out=a+b                                        ALUOut-Out(S617)
	S657= ALUOut.Out26_31=a+b[26:31]                            ALUOut-Out(S617)
	S658= ALUOut.Out30_31=a+b[30:31]                            ALUOut-Out(S617)
	S659= CAReg.Out=Carry(a+b)                                  CAReg-Out(S619)
	S660= CAReg.Out26_31=Carry(a+b)[26:31]                      CAReg-Out(S619)
	S661= CAReg.Out30_31=Carry(a+b)[30:31]                      CAReg-Out(S619)
	S662= XER.SOOut=so                                          XER-SO-Out(S621)
	S663= DR4bit.Out={Compare0(a+b),so}                         DR4bit-Out(S625)
	S664= DR4bit.Out26_31={Compare0(a+b),so}[26:31]             DR4bit-Out(S625)
	S665= DR4bit.Out30_31={Compare0(a+b),so}[30:31]             DR4bit-Out(S625)
	S666= PIDReg.Out=>IMMU.PID                                  Premise(F306)
	S667= IMMU.PID=pid                                          Path(S630,S666)
	S668= PC.Out=>IMMU.IEA                                      Premise(F307)
	S669= IMMU.IEA=addr+4                                       Path(S635,S668)
	S670= IMMU.Addr={pid,addr+4}                                IMMU-Search(S667,S669)
	S671= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S667,S669)
	S672= IMMU.Addr=>IAddrReg.In                                Premise(F308)
	S673= IAddrReg.In={pid,addr+4}                              Path(S670,S672)
	S674= IMMU.Hit=>IMMUHitReg.In                               Premise(F309)
	S675= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S671,S674)
	S676= PC.Out=>ICache.IEA                                    Premise(F310)
	S677= ICache.IEA=addr+4                                     Path(S635,S676)
	S678= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S677)
	S679= ICache.Out=>ICacheReg.In                              Premise(F311)
	S680= ICache.Hit=>ICacheHitReg.In                           Premise(F312)
	S681= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S678,S680)
	S682= IMMUHitReg.Out=>CU.IMemHit                            Premise(F313)
	S683= CU.IMemHit=IMMUHit(pid,addr)                          Path(S639,S682)
	S684= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F314)
	S685= CU.ICacheHit=ICacheHit(addr)                          Path(S642,S684)
	S686= IAddrReg.Out=>IMem.RAddr                              Premise(F315)
	S687= IMem.RAddr={pid,addr}                                 Path(S636,S686)
	S688= IMem.Out={31,rT,rA,rB,21}                             IMem-Read(S687,S605)
	S689= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S687,S605)
	S690= IMem.Out=>IRMux.MemData                               Premise(F316)
	S691= IRMux.MemData={31,rT,rA,rB,21}                        Path(S688,S690)
	S692= IRMux.Out={31,rT,rA,rB,21}                            IRMux-Select(S691)
	S693= ICacheReg.Out=>IRMux.CacheData                        Premise(F317)
	S694= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F318)
	S695= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S639,S694)
	S696= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F319)
	S697= IRMux.CacheSel=ICacheHit(addr)                        Path(S642,S696)
	S698= IRMux.Out=>IR.In                                      Premise(F320)
	S699= IR.In={31,rT,rA,rB,21}                                Path(S692,S698)
	S700= IMem.MEM8WordOut=>ICache.WData                        Premise(F321)
	S701= ICache.WData=IMemGet8Word({pid,addr})                 Path(S689,S700)
	S702= PC.Out=>ICache.IEA                                    Premise(F322)
	S703= IR.Out0_5=>CU.Op                                      Premise(F323)
	S704= CU.Op=31                                              Path(S645,S703)
	S705= IR.Out11_15=>GPRegs.RReg1                             Premise(F324)
	S706= GPRegs.RReg1=rA                                       Path(S647,S705)
	S707= GPRegs.Rdata1=a                                       GPRegs-Read(S706,S610)
	S708= IR.Out16_20=>GPRegs.RReg2                             Premise(F325)
	S709= GPRegs.RReg2=rB                                       Path(S648,S708)
	S710= GPRegs.Rdata2=b                                       GPRegs-Read(S709,S611)
	S711= IR.Out21_31=>CU.IRFunc                                Premise(F326)
	S712= CU.IRFunc=21                                          Path(S649,S711)
	S713= CU.Func=alu_add                                       CU(S704,S712)
	S714= GPRegs.Rdata1=>A.In                                   Premise(F327)
	S715= A.In=a                                                Path(S707,S714)
	S716= GPRegs.Rdata2=>B.In                                   Premise(F328)
	S717= B.In=b                                                Path(S710,S716)
	S718= A.Out=>ALU.A                                          Premise(F329)
	S719= ALU.A=a                                               Path(S650,S718)
	S720= B.Out=>ALU.B                                          Premise(F330)
	S721= ALU.B=b                                               Path(S653,S720)
	S722= CU.Func=>ALU.Func                                     Premise(F331)
	S723= ALU.Func=alu_add                                      Path(S713,S722)
	S724= ALU.Out=a+b                                           ALU(S719,S721)
	S725= ALU.CMP=Compare0(a+b)                                 ALU(S719,S721)
	S726= ALU.OV=OverFlow(a+b)                                  ALU(S719,S721)
	S727= ALU.CA=Carry(a+b)                                     ALU(S719,S721)
	S728= ALU.Out=>ALUOut.In                                    Premise(F332)
	S729= ALUOut.In=a+b                                         Path(S724,S728)
	S730= ALU.CA=>CAReg.In                                      Premise(F333)
	S731= CAReg.In=Carry(a+b)                                   Path(S727,S730)
	S732= ALU.CMP=>DataCmb.A                                    Premise(F334)
	S733= DataCmb.A=Compare0(a+b)                               Path(S725,S732)
	S734= XER.SOOut=>DataCmb.B                                  Premise(F335)
	S735= DataCmb.B=so                                          Path(S662,S734)
	S736= DataCmb.Out={Compare0(a+b),so}                        DataCmb(S733,S735)
	S737= DataCmb.Out=>DR4bit.In                                Premise(F336)
	S738= DR4bit.In={Compare0(a+b),so}                          Path(S736,S737)
	S739= IR.Out6_10=>GPRegs.WReg                               Premise(F337)
	S740= GPRegs.WReg=rT                                        Path(S646,S739)
	S741= ALUOut.Out=>GPRegs.WData                              Premise(F338)
	S742= GPRegs.WData=a+b                                      Path(S656,S741)
	S743= DR4bit.Out=>CRRegs.CR0In                              Premise(F339)
	S744= CRRegs.CR0In={Compare0(a+b),so}                       Path(S663,S743)
	S745= CAReg.Out=>XER.CAIn                                   Premise(F340)
	S746= XER.CAIn=Carry(a+b)                                   Path(S659,S745)
	S747= CtrlPIDReg=0                                          Premise(F341)
	S748= [PIDReg]=pid                                          PIDReg-Hold(S589,S747)
	S749= CtrlIMMU=0                                            Premise(F342)
	S750= CtrlPC=0                                              Premise(F343)
	S751= CtrlPCInc=0                                           Premise(F344)
	S752= PC[CIA]=addr                                          PC-Hold(S593,S751)
	S753= PC[Out]=addr+4                                        PC-Hold(S594,S750,S751)
	S754= CtrlIAddrReg=0                                        Premise(F345)
	S755= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S596,S754)
	S756= CtrlIMMUHitReg=0                                      Premise(F346)
	S757= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S598,S756)
	S758= CtrlICache=0                                          Premise(F347)
	S759= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S600,S758)
	S760= CtrlICacheReg=0                                       Premise(F348)
	S761= CtrlICacheHitReg=0                                    Premise(F349)
	S762= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S603,S761)
	S763= CtrlIMem=0                                            Premise(F350)
	S764= IMem[{pid,addr}]={31,rT,rA,rB,21}                     IMem-Hold(S605,S763)
	S765= CtrlIRMux=0                                           Premise(F351)
	S766= CtrlIR=0                                              Premise(F352)
	S767= [IR]={31,rT,rA,rB,21}                                 IR-Hold(S608,S766)
	S768= CtrlGPRegs=0                                          Premise(F353)
	S769= GPRegs[rA]=a                                          GPRegs-Hold(S610,S768)
	S770= GPRegs[rB]=b                                          GPRegs-Hold(S611,S768)
	S771= CtrlA=0                                               Premise(F354)
	S772= [A]=a                                                 A-Hold(S613,S771)
	S773= CtrlB=0                                               Premise(F355)
	S774= [B]=b                                                 B-Hold(S615,S773)
	S775= CtrlALUOut=0                                          Premise(F356)
	S776= [ALUOut]=a+b                                          ALUOut-Hold(S617,S775)
	S777= CtrlCAReg=0                                           Premise(F357)
	S778= [CAReg]=Carry(a+b)                                    CAReg-Hold(S619,S777)
	S779= CtrlXERSO=0                                           Premise(F358)
	S780= XER[SO]=so                                            XER-SO-Hold(S621,S779)
	S781= CtrlXEROV=0                                           Premise(F359)
	S782= CtrlXERCA=0                                           Premise(F360)
	S783= CtrlDR4bit=0                                          Premise(F361)
	S784= [DR4bit]={Compare0(a+b),so}                           DR4bit-Hold(S625,S783)
	S785= CtrlCRRegs=0                                          Premise(F362)
	S786= CtrlCRRegsCR0=0                                       Premise(F363)
	S787= CtrlCRRegsW4bitRegs=0                                 Premise(F364)
	S788= CtrlCRRegsW1bitRegs=0                                 Premise(F365)

DMMU2	S789= PIDReg.Out=pid                                        PIDReg-Out(S748)
	S790= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S748)
	S791= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S748)
	S792= PC.CIA=addr                                           PC-Out(S752)
	S793= PC.CIA31_28=addr[31:28]                               PC-Out(S752)
	S794= PC.Out=addr+4                                         PC-Out(S753)
	S795= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S755)
	S796= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S755)
	S797= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S755)
	S798= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S757)
	S799= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S757)
	S800= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S757)
	S801= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S762)
	S802= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S762)
	S803= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S762)
	S804= IR.Out0_5=31                                          IR-Out(S767)
	S805= IR.Out6_10=rT                                         IR-Out(S767)
	S806= IR.Out11_15=rA                                        IR-Out(S767)
	S807= IR.Out16_20=rB                                        IR-Out(S767)
	S808= IR.Out21_31=21                                        IR-Out(S767)
	S809= A.Out=a                                               A-Out(S772)
	S810= A.Out26_31=a[26:31]                                   A-Out(S772)
	S811= A.Out30_31=a[30:31]                                   A-Out(S772)
	S812= B.Out=b                                               B-Out(S774)
	S813= B.Out26_31=b[26:31]                                   B-Out(S774)
	S814= B.Out30_31=b[30:31]                                   B-Out(S774)
	S815= ALUOut.Out=a+b                                        ALUOut-Out(S776)
	S816= ALUOut.Out26_31=a+b[26:31]                            ALUOut-Out(S776)
	S817= ALUOut.Out30_31=a+b[30:31]                            ALUOut-Out(S776)
	S818= CAReg.Out=Carry(a+b)                                  CAReg-Out(S778)
	S819= CAReg.Out26_31=Carry(a+b)[26:31]                      CAReg-Out(S778)
	S820= CAReg.Out30_31=Carry(a+b)[30:31]                      CAReg-Out(S778)
	S821= XER.SOOut=so                                          XER-SO-Out(S780)
	S822= DR4bit.Out={Compare0(a+b),so}                         DR4bit-Out(S784)
	S823= DR4bit.Out26_31={Compare0(a+b),so}[26:31]             DR4bit-Out(S784)
	S824= DR4bit.Out30_31={Compare0(a+b),so}[30:31]             DR4bit-Out(S784)
	S825= PIDReg.Out=>IMMU.PID                                  Premise(F366)
	S826= IMMU.PID=pid                                          Path(S789,S825)
	S827= PC.Out=>IMMU.IEA                                      Premise(F367)
	S828= IMMU.IEA=addr+4                                       Path(S794,S827)
	S829= IMMU.Addr={pid,addr+4}                                IMMU-Search(S826,S828)
	S830= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S826,S828)
	S831= IMMU.Addr=>IAddrReg.In                                Premise(F368)
	S832= IAddrReg.In={pid,addr+4}                              Path(S829,S831)
	S833= IMMU.Hit=>IMMUHitReg.In                               Premise(F369)
	S834= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S830,S833)
	S835= PC.Out=>ICache.IEA                                    Premise(F370)
	S836= ICache.IEA=addr+4                                     Path(S794,S835)
	S837= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S836)
	S838= ICache.Out=>ICacheReg.In                              Premise(F371)
	S839= ICache.Hit=>ICacheHitReg.In                           Premise(F372)
	S840= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S837,S839)
	S841= IMMUHitReg.Out=>CU.IMemHit                            Premise(F373)
	S842= CU.IMemHit=IMMUHit(pid,addr)                          Path(S798,S841)
	S843= ICacheHitReg.Out=>CU.ICacheHit                        Premise(F374)
	S844= CU.ICacheHit=ICacheHit(addr)                          Path(S801,S843)
	S845= IAddrReg.Out=>IMem.RAddr                              Premise(F375)
	S846= IMem.RAddr={pid,addr}                                 Path(S795,S845)
	S847= IMem.Out={31,rT,rA,rB,21}                             IMem-Read(S846,S764)
	S848= IMem.MEM8WordOut=IMemGet8Word({pid,addr})             IMem-Read(S846,S764)
	S849= IMem.Out=>IRMux.MemData                               Premise(F376)
	S850= IRMux.MemData={31,rT,rA,rB,21}                        Path(S847,S849)
	S851= IRMux.Out={31,rT,rA,rB,21}                            IRMux-Select(S850)
	S852= ICacheReg.Out=>IRMux.CacheData                        Premise(F377)
	S853= IMMUHitReg.Out=>IRMux.MemSel                          Premise(F378)
	S854= IRMux.MemSel=IMMUHit(pid,addr)                        Path(S798,S853)
	S855= ICacheHitReg.Out=>IRMux.CacheSel                      Premise(F379)
	S856= IRMux.CacheSel=ICacheHit(addr)                        Path(S801,S855)
	S857= IRMux.Out=>IR.In                                      Premise(F380)
	S858= IR.In={31,rT,rA,rB,21}                                Path(S851,S857)
	S859= IMem.MEM8WordOut=>ICache.WData                        Premise(F381)
	S860= ICache.WData=IMemGet8Word({pid,addr})                 Path(S848,S859)
	S861= PC.Out=>ICache.IEA                                    Premise(F382)
	S862= IR.Out0_5=>CU.Op                                      Premise(F383)
	S863= CU.Op=31                                              Path(S804,S862)
	S864= IR.Out11_15=>GPRegs.RReg1                             Premise(F384)
	S865= GPRegs.RReg1=rA                                       Path(S806,S864)
	S866= GPRegs.Rdata1=a                                       GPRegs-Read(S865,S769)
	S867= IR.Out16_20=>GPRegs.RReg2                             Premise(F385)
	S868= GPRegs.RReg2=rB                                       Path(S807,S867)
	S869= GPRegs.Rdata2=b                                       GPRegs-Read(S868,S770)
	S870= IR.Out21_31=>CU.IRFunc                                Premise(F386)
	S871= CU.IRFunc=21                                          Path(S808,S870)
	S872= CU.Func=alu_add                                       CU(S863,S871)
	S873= GPRegs.Rdata1=>A.In                                   Premise(F387)
	S874= A.In=a                                                Path(S866,S873)
	S875= GPRegs.Rdata2=>B.In                                   Premise(F388)
	S876= B.In=b                                                Path(S869,S875)
	S877= A.Out=>ALU.A                                          Premise(F389)
	S878= ALU.A=a                                               Path(S809,S877)
	S879= B.Out=>ALU.B                                          Premise(F390)
	S880= ALU.B=b                                               Path(S812,S879)
	S881= CU.Func=>ALU.Func                                     Premise(F391)
	S882= ALU.Func=alu_add                                      Path(S872,S881)
	S883= ALU.Out=a+b                                           ALU(S878,S880)
	S884= ALU.CMP=Compare0(a+b)                                 ALU(S878,S880)
	S885= ALU.OV=OverFlow(a+b)                                  ALU(S878,S880)
	S886= ALU.CA=Carry(a+b)                                     ALU(S878,S880)
	S887= ALU.Out=>ALUOut.In                                    Premise(F392)
	S888= ALUOut.In=a+b                                         Path(S883,S887)
	S889= ALU.CA=>CAReg.In                                      Premise(F393)
	S890= CAReg.In=Carry(a+b)                                   Path(S886,S889)
	S891= ALU.CMP=>DataCmb.A                                    Premise(F394)
	S892= DataCmb.A=Compare0(a+b)                               Path(S884,S891)
	S893= XER.SOOut=>DataCmb.B                                  Premise(F395)
	S894= DataCmb.B=so                                          Path(S821,S893)
	S895= DataCmb.Out={Compare0(a+b),so}                        DataCmb(S892,S894)
	S896= DataCmb.Out=>DR4bit.In                                Premise(F396)
	S897= DR4bit.In={Compare0(a+b),so}                          Path(S895,S896)
	S898= IR.Out6_10=>GPRegs.WReg                               Premise(F397)
	S899= GPRegs.WReg=rT                                        Path(S805,S898)
	S900= ALUOut.Out=>GPRegs.WData                              Premise(F398)
	S901= GPRegs.WData=a+b                                      Path(S815,S900)
	S902= DR4bit.Out=>CRRegs.CR0In                              Premise(F399)
	S903= CRRegs.CR0In={Compare0(a+b),so}                       Path(S822,S902)
	S904= CAReg.Out=>XER.CAIn                                   Premise(F400)
	S905= XER.CAIn=Carry(a+b)                                   Path(S818,S904)
	S906= CtrlPIDReg=0                                          Premise(F401)
	S907= [PIDReg]=pid                                          PIDReg-Hold(S748,S906)
	S908= CtrlIMMU=0                                            Premise(F402)
	S909= CtrlPC=0                                              Premise(F403)
	S910= CtrlPCInc=0                                           Premise(F404)
	S911= PC[CIA]=addr                                          PC-Hold(S752,S910)
	S912= PC[Out]=addr+4                                        PC-Hold(S753,S909,S910)
	S913= CtrlIAddrReg=0                                        Premise(F405)
	S914= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S755,S913)
	S915= CtrlIMMUHitReg=0                                      Premise(F406)
	S916= [IMMUHitReg]=IMMUHit(pid,addr)                        IMMUHitReg-Hold(S757,S915)
	S917= CtrlICache=0                                          Premise(F407)
	S918= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S759,S917)
	S919= CtrlICacheReg=0                                       Premise(F408)
	S920= CtrlICacheHitReg=0                                    Premise(F409)
	S921= [ICacheHitReg]=ICacheHit(addr)                        ICacheHitReg-Hold(S762,S920)
	S922= CtrlIMem=0                                            Premise(F410)
	S923= IMem[{pid,addr}]={31,rT,rA,rB,21}                     IMem-Hold(S764,S922)
	S924= CtrlIRMux=0                                           Premise(F411)
	S925= CtrlIR=0                                              Premise(F412)
	S926= [IR]={31,rT,rA,rB,21}                                 IR-Hold(S767,S925)
	S927= CtrlGPRegs=0                                          Premise(F413)
	S928= GPRegs[rA]=a                                          GPRegs-Hold(S769,S927)
	S929= GPRegs[rB]=b                                          GPRegs-Hold(S770,S927)
	S930= CtrlA=0                                               Premise(F414)
	S931= [A]=a                                                 A-Hold(S772,S930)
	S932= CtrlB=0                                               Premise(F415)
	S933= [B]=b                                                 B-Hold(S774,S932)
	S934= CtrlALUOut=0                                          Premise(F416)
	S935= [ALUOut]=a+b                                          ALUOut-Hold(S776,S934)
	S936= CtrlCAReg=0                                           Premise(F417)
	S937= [CAReg]=Carry(a+b)                                    CAReg-Hold(S778,S936)
	S938= CtrlXERSO=0                                           Premise(F418)
	S939= XER[SO]=so                                            XER-SO-Hold(S780,S938)
	S940= CtrlXEROV=0                                           Premise(F419)
	S941= CtrlXERCA=0                                           Premise(F420)
	S942= CtrlDR4bit=0                                          Premise(F421)
	S943= [DR4bit]={Compare0(a+b),so}                           DR4bit-Hold(S784,S942)
	S944= CtrlCRRegs=0                                          Premise(F422)
	S945= CtrlCRRegsCR0=0                                       Premise(F423)
	S946= CtrlCRRegsW4bitRegs=0                                 Premise(F424)
	S947= CtrlCRRegsW1bitRegs=0                                 Premise(F425)

WB	S948= PIDReg.Out=pid                                        PIDReg-Out(S907)
	S949= PIDReg.Out26_31=pid[26:31]                            PIDReg-Out(S907)
	S950= PIDReg.Out30_31=pid[30:31]                            PIDReg-Out(S907)
	S951= PC.CIA=addr                                           PC-Out(S911)
	S952= PC.CIA31_28=addr[31:28]                               PC-Out(S911)
	S953= PC.Out=addr+4                                         PC-Out(S912)
	S954= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S914)
	S955= IAddrReg.Out26_31={pid,addr}[26:31]                   IAddrReg-Out(S914)
	S956= IAddrReg.Out30_31={pid,addr}[30:31]                   IAddrReg-Out(S914)
	S957= IMMUHitReg.Out=IMMUHit(pid,addr)                      IMMUHitReg-Out(S916)
	S958= IMMUHitReg.Out26_31=IMMUHit(pid,addr)[26:31]          IMMUHitReg-Out(S916)
	S959= IMMUHitReg.Out30_31=IMMUHit(pid,addr)[30:31]          IMMUHitReg-Out(S916)
	S960= ICacheHitReg.Out=ICacheHit(addr)                      ICacheHitReg-Out(S921)
	S961= ICacheHitReg.Out26_31=ICacheHit(addr)[26:31]          ICacheHitReg-Out(S921)
	S962= ICacheHitReg.Out30_31=ICacheHit(addr)[30:31]          ICacheHitReg-Out(S921)
	S963= IR.Out0_5=31                                          IR-Out(S926)
	S964= IR.Out6_10=rT                                         IR-Out(S926)
	S965= IR.Out11_15=rA                                        IR-Out(S926)
	S966= IR.Out16_20=rB                                        IR-Out(S926)
	S967= IR.Out21_31=21                                        IR-Out(S926)
	S968= A.Out=a                                               A-Out(S931)
	S969= A.Out26_31=a[26:31]                                   A-Out(S931)
	S970= A.Out30_31=a[30:31]                                   A-Out(S931)
	S971= B.Out=b                                               B-Out(S933)
	S972= B.Out26_31=b[26:31]                                   B-Out(S933)
	S973= B.Out30_31=b[30:31]                                   B-Out(S933)
	S974= ALUOut.Out=a+b                                        ALUOut-Out(S935)
	S975= ALUOut.Out26_31=a+b[26:31]                            ALUOut-Out(S935)
	S976= ALUOut.Out30_31=a+b[30:31]                            ALUOut-Out(S935)
	S977= CAReg.Out=Carry(a+b)                                  CAReg-Out(S937)
	S978= CAReg.Out26_31=Carry(a+b)[26:31]                      CAReg-Out(S937)
	S979= CAReg.Out30_31=Carry(a+b)[30:31]                      CAReg-Out(S937)
	S980= XER.SOOut=so                                          XER-SO-Out(S939)
	S981= DR4bit.Out={Compare0(a+b),so}                         DR4bit-Out(S943)
	S982= DR4bit.Out26_31={Compare0(a+b),so}[26:31]             DR4bit-Out(S943)
	S983= DR4bit.Out30_31={Compare0(a+b),so}[30:31]             DR4bit-Out(S943)
	S984= PIDReg.Out=>IMMU.PID                                  Premise(F426)
	S985= IMMU.PID=pid                                          Path(S948,S984)
	S986= PC.Out=>IMMU.IEA                                      Premise(F427)
	S987= IMMU.IEA=addr+4                                       Path(S953,S986)
	S988= IMMU.Addr={pid,addr+4}                                IMMU-Search(S985,S987)
	S989= IMMU.Hit=IMMUHit(pid,addr+4)                          IMMU-Search(S985,S987)
	S990= IMMU.Addr=>IAddrReg.In                                Premise(F428)
	S991= IAddrReg.In={pid,addr+4}                              Path(S988,S990)
	S992= IMMU.Hit=>IMMUHitReg.In                               Premise(F429)
	S993= IMMUHitReg.In=IMMUHit(pid,addr+4)                     Path(S989,S992)
	S994= PC.Out=>ICache.IEA                                    Premise(F430)
	S995= ICache.IEA=addr+4                                     Path(S953,S994)
	S996= ICache.Hit=ICacheHit(addr+4)                          ICache-Search(S995)
	S997= ICache.Out=>ICacheReg.In                              Premise(F431)
	S998= ICache.Hit=>ICacheHitReg.In                           Premise(F432)
	S999= ICacheHitReg.In=ICacheHit(addr+4)                     Path(S996,S998)
	S1000= IMMUHitReg.Out=>CU.IMemHit                           Premise(F433)
	S1001= CU.IMemHit=IMMUHit(pid,addr)                         Path(S957,S1000)
	S1002= ICacheHitReg.Out=>CU.ICacheHit                       Premise(F434)
	S1003= CU.ICacheHit=ICacheHit(addr)                         Path(S960,S1002)
	S1004= IAddrReg.Out=>IMem.RAddr                             Premise(F435)
	S1005= IMem.RAddr={pid,addr}                                Path(S954,S1004)
	S1006= IMem.Out={31,rT,rA,rB,21}                            IMem-Read(S1005,S923)
	S1007= IMem.MEM8WordOut=IMemGet8Word({pid,addr})            IMem-Read(S1005,S923)
	S1008= IMem.Out=>IRMux.MemData                              Premise(F436)
	S1009= IRMux.MemData={31,rT,rA,rB,21}                       Path(S1006,S1008)
	S1010= IRMux.Out={31,rT,rA,rB,21}                           IRMux-Select(S1009)
	S1011= ICacheReg.Out=>IRMux.CacheData                       Premise(F437)
	S1012= IMMUHitReg.Out=>IRMux.MemSel                         Premise(F438)
	S1013= IRMux.MemSel=IMMUHit(pid,addr)                       Path(S957,S1012)
	S1014= ICacheHitReg.Out=>IRMux.CacheSel                     Premise(F439)
	S1015= IRMux.CacheSel=ICacheHit(addr)                       Path(S960,S1014)
	S1016= IRMux.Out=>IR.In                                     Premise(F440)
	S1017= IR.In={31,rT,rA,rB,21}                               Path(S1010,S1016)
	S1018= IMem.MEM8WordOut=>ICache.WData                       Premise(F441)
	S1019= ICache.WData=IMemGet8Word({pid,addr})                Path(S1007,S1018)
	S1020= PC.Out=>ICache.IEA                                   Premise(F442)
	S1021= IR.Out0_5=>CU.Op                                     Premise(F443)
	S1022= CU.Op=31                                             Path(S963,S1021)
	S1023= IR.Out11_15=>GPRegs.RReg1                            Premise(F444)
	S1024= GPRegs.RReg1=rA                                      Path(S965,S1023)
	S1025= GPRegs.Rdata1=a                                      GPRegs-Read(S1024,S928)
	S1026= IR.Out16_20=>GPRegs.RReg2                            Premise(F445)
	S1027= GPRegs.RReg2=rB                                      Path(S966,S1026)
	S1028= GPRegs.Rdata2=b                                      GPRegs-Read(S1027,S929)
	S1029= IR.Out21_31=>CU.IRFunc                               Premise(F446)
	S1030= CU.IRFunc=21                                         Path(S967,S1029)
	S1031= CU.Func=alu_add                                      CU(S1022,S1030)
	S1032= GPRegs.Rdata1=>A.In                                  Premise(F447)
	S1033= A.In=a                                               Path(S1025,S1032)
	S1034= GPRegs.Rdata2=>B.In                                  Premise(F448)
	S1035= B.In=b                                               Path(S1028,S1034)
	S1036= A.Out=>ALU.A                                         Premise(F449)
	S1037= ALU.A=a                                              Path(S968,S1036)
	S1038= B.Out=>ALU.B                                         Premise(F450)
	S1039= ALU.B=b                                              Path(S971,S1038)
	S1040= CU.Func=>ALU.Func                                    Premise(F451)
	S1041= ALU.Func=alu_add                                     Path(S1031,S1040)
	S1042= ALU.Out=a+b                                          ALU(S1037,S1039)
	S1043= ALU.CMP=Compare0(a+b)                                ALU(S1037,S1039)
	S1044= ALU.OV=OverFlow(a+b)                                 ALU(S1037,S1039)
	S1045= ALU.CA=Carry(a+b)                                    ALU(S1037,S1039)
	S1046= ALU.Out=>ALUOut.In                                   Premise(F452)
	S1047= ALUOut.In=a+b                                        Path(S1042,S1046)
	S1048= ALU.CA=>CAReg.In                                     Premise(F453)
	S1049= CAReg.In=Carry(a+b)                                  Path(S1045,S1048)
	S1050= ALU.CMP=>DataCmb.A                                   Premise(F454)
	S1051= DataCmb.A=Compare0(a+b)                              Path(S1043,S1050)
	S1052= XER.SOOut=>DataCmb.B                                 Premise(F455)
	S1053= DataCmb.B=so                                         Path(S980,S1052)
	S1054= DataCmb.Out={Compare0(a+b),so}                       DataCmb(S1051,S1053)
	S1055= DataCmb.Out=>DR4bit.In                               Premise(F456)
	S1056= DR4bit.In={Compare0(a+b),so}                         Path(S1054,S1055)
	S1057= IR.Out6_10=>GPRegs.WReg                              Premise(F457)
	S1058= GPRegs.WReg=rT                                       Path(S964,S1057)
	S1059= ALUOut.Out=>GPRegs.WData                             Premise(F458)
	S1060= GPRegs.WData=a+b                                     Path(S974,S1059)
	S1061= DR4bit.Out=>CRRegs.CR0In                             Premise(F459)
	S1062= CRRegs.CR0In={Compare0(a+b),so}                      Path(S981,S1061)
	S1063= CAReg.Out=>XER.CAIn                                  Premise(F460)
	S1064= XER.CAIn=Carry(a+b)                                  Path(S977,S1063)
	S1065= CtrlPIDReg=0                                         Premise(F461)
	S1066= [PIDReg]=pid                                         PIDReg-Hold(S907,S1065)
	S1067= CtrlIMMU=0                                           Premise(F462)
	S1068= CtrlPC=0                                             Premise(F463)
	S1069= CtrlPCInc=0                                          Premise(F464)
	S1070= PC[CIA]=addr                                         PC-Hold(S911,S1069)
	S1071= PC[Out]=addr+4                                       PC-Hold(S912,S1068,S1069)
	S1072= CtrlIAddrReg=0                                       Premise(F465)
	S1073= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S914,S1072)
	S1074= CtrlIMMUHitReg=0                                     Premise(F466)
	S1075= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S916,S1074)
	S1076= CtrlICache=0                                         Premise(F467)
	S1077= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S918,S1076)
	S1078= CtrlICacheReg=0                                      Premise(F468)
	S1079= CtrlICacheHitReg=0                                   Premise(F469)
	S1080= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S921,S1079)
	S1081= CtrlIMem=0                                           Premise(F470)
	S1082= IMem[{pid,addr}]={31,rT,rA,rB,21}                    IMem-Hold(S923,S1081)
	S1083= CtrlIRMux=0                                          Premise(F471)
	S1084= CtrlIR=0                                             Premise(F472)
	S1085= [IR]={31,rT,rA,rB,21}                                IR-Hold(S926,S1084)
	S1086= CtrlGPRegs=1                                         Premise(F473)
	S1087= GPRegs[rT]=a+b                                       GPRegs-Write(S1058,S1060,S1086)
	S1088= CtrlA=0                                              Premise(F474)
	S1089= [A]=a                                                A-Hold(S931,S1088)
	S1090= CtrlB=0                                              Premise(F475)
	S1091= [B]=b                                                B-Hold(S933,S1090)
	S1092= CtrlALUOut=0                                         Premise(F476)
	S1093= [ALUOut]=a+b                                         ALUOut-Hold(S935,S1092)
	S1094= CtrlCAReg=0                                          Premise(F477)
	S1095= [CAReg]=Carry(a+b)                                   CAReg-Hold(S937,S1094)
	S1096= CtrlXERSO=0                                          Premise(F478)
	S1097= XER[SO]=so                                           XER-SO-Hold(S939,S1096)
	S1098= CtrlXEROV=0                                          Premise(F479)
	S1099= CtrlXERCA=1                                          Premise(F480)
	S1100= XER[CA]=Carry(a+b)                                   XER-CA-Write(S1064,S1099)
	S1101= CtrlDR4bit=0                                         Premise(F481)
	S1102= [DR4bit]={Compare0(a+b),so}                          DR4bit-Hold(S943,S1101)
	S1103= CtrlCRRegs=0                                         Premise(F482)
	S1104= CtrlCRRegsCR0=1                                      Premise(F483)
	S1105= CRRegs[CR0]={Compare0(a+b),so}                       CRRegs-CR0-Write(S1062,S1104)
	S1106= CtrlCRRegsW4bitRegs=0                                Premise(F484)
	S1107= CtrlCRRegsW1bitRegs=0                                Premise(F485)

POST	S1066= [PIDReg]=pid                                         PIDReg-Hold(S907,S1065)
	S1070= PC[CIA]=addr                                         PC-Hold(S911,S1069)
	S1071= PC[Out]=addr+4                                       PC-Hold(S912,S1068,S1069)
	S1073= [IAddrReg]={pid,addr}                                IAddrReg-Hold(S914,S1072)
	S1075= [IMMUHitReg]=IMMUHit(pid,addr)                       IMMUHitReg-Hold(S916,S1074)
	S1077= ICache[line_addr]=IMemGet8Word({pid,addr})           ICache-Hold(S918,S1076)
	S1080= [ICacheHitReg]=ICacheHit(addr)                       ICacheHitReg-Hold(S921,S1079)
	S1082= IMem[{pid,addr}]={31,rT,rA,rB,21}                    IMem-Hold(S923,S1081)
	S1085= [IR]={31,rT,rA,rB,21}                                IR-Hold(S926,S1084)
	S1087= GPRegs[rT]=a+b                                       GPRegs-Write(S1058,S1060,S1086)
	S1089= [A]=a                                                A-Hold(S931,S1088)
	S1091= [B]=b                                                B-Hold(S933,S1090)
	S1093= [ALUOut]=a+b                                         ALUOut-Hold(S935,S1092)
	S1095= [CAReg]=Carry(a+b)                                   CAReg-Hold(S937,S1094)
	S1097= XER[SO]=so                                           XER-SO-Hold(S939,S1096)
	S1100= XER[CA]=Carry(a+b)                                   XER-CA-Write(S1064,S1099)
	S1102= [DR4bit]={Compare0(a+b),so}                          DR4bit-Hold(S943,S1101)
	S1105= CRRegs[CR0]={Compare0(a+b),so}                       CRRegs-CR0-Write(S1062,S1104)

