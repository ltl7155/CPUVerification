
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={35,rS,rT,offset}                      Premise(F2)
	S3= GPR[rS]=base                                            Premise(F3)
	S4= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a          Premise(F4)

IF	S5= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S6= PC.Out=addr                                             PC-Out(S1)
	S7= CP0.ASID=>IMMU.PID                                      Premise(F6)
	S8= IMMU.PID=pid                                            Path(S5,S7)
	S9= PC.Out=>IMMU.IEA                                        Premise(F7)
	S10= IMMU.IEA=addr                                          Path(S6,S9)
	S11= IMMU.Addr={pid,addr}                                   IMMU-Search(S8,S10)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F8)
	S13= IAddrReg.In={pid,addr}                                 Path(S11,S12)
	S14= CtrlCP0=0                                              Premise(F23)
	S15= CP0[ASID]=pid                                          CP0-Hold(S0,S14)
	S16= CtrlPC=0                                               Premise(F27)
	S17= CtrlPCInc=0                                            Premise(F28)
	S18= PC[Out]=addr                                           PC-Hold(S1,S16,S17)
	S19= CtrlIAddrReg=1                                         Premise(F29)
	S20= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S19)
	S21= CtrlIMem=0                                             Premise(F34)
	S22= IMem[{pid,addr}]={35,rS,rT,offset}                     IMem-Hold(S2,S21)
	S23= CtrlGPR=0                                              Premise(F36)
	S24= GPR[rS]=base                                           GPR-Hold(S3,S23)
	S25= CtrlDMem=0                                             Premise(F59)
	S26= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S4,S25)

IF(IMMU)	S27= PC.Out=addr                                            PC-Out(S18)
	S28= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S20)
	S29= IAddrReg.Out=>IMem.RAddr                               Premise(F67)
	S30= IMem.RAddr={pid,addr}                                  Path(S28,S29)
	S31= IMem.Out={35,rS,rT,offset}                             IMem-Read(S30,S22)
	S32= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S30,S22)
	S33= IMem.Out=>IRMux.MemData                                Premise(F68)
	S34= IRMux.MemData={35,rS,rT,offset}                        Path(S31,S33)
	S35= IRMux.Out={35,rS,rT,offset}                            IRMux-Select2(S34)
	S36= IRMux.Out=>IR_ID.In                                    Premise(F72)
	S37= IR_ID.In={35,rS,rT,offset}                             Path(S35,S36)
	S38= IMem.MEM8WordOut=>ICache.WData                         Premise(F73)
	S39= ICache.WData=IMemGet8Word({pid,addr})                  Path(S32,S38)
	S40= PC.Out=>ICache.IEA                                     Premise(F74)
	S41= ICache.IEA=addr                                        Path(S27,S40)
	S42= CtrlCP0=0                                              Premise(F78)
	S43= CP0[ASID]=pid                                          CP0-Hold(S15,S42)
	S44= CtrlPC=0                                               Premise(F82)
	S45= CtrlPCInc=1                                            Premise(F83)
	S46= PC[Out]=addr+4                                         PC-Inc(S18,S44,S45)
	S47= CtrlICache=1                                           Premise(F85)
	S48= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S41,S39,S47)
	S49= CtrlIR_ID=1                                            Premise(F88)
	S50= [IR_ID]={35,rS,rT,offset}                              IR_ID-Write(S37,S49)
	S51= CtrlGPR=0                                              Premise(F91)
	S52= GPR[rS]=base                                           GPR-Hold(S24,S51)
	S53= CtrlDMem=0                                             Premise(F114)
	S54= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S26,S53)

ID	S55= IR_ID.Out={35,rS,rT,offset}                            IR-Out(S50)
	S56= IR_ID.Out25_21=rS                                      IR-Out(S50)
	S57= IR_ID.Out15_0=offset                                   IR-Out(S50)
	S58= IR_ID.Out25_21=>GPR.RReg1                              Premise(F123)
	S59= GPR.RReg1=rS                                           Path(S56,S58)
	S60= GPR.Rdata1=base                                        GPR-Read(S59,S52)
	S61= IR_ID.Out15_0=>IMMEXT.In                               Premise(F124)
	S62= IMMEXT.In=offset                                       Path(S57,S61)
	S63= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S62)
	S64= GPR.Rdata1=>FU.InID1                                   Premise(F125)
	S65= FU.InID1=base                                          Path(S60,S64)
	S66= FU.OutID1=FU(base)                                     FU-Forward(S65)
	S67= FU.OutID1=>A_EX.In                                     Premise(F127)
	S68= A_EX.In=FU(base)                                       Path(S66,S67)
	S69= IMMEXT.Out=>B_EX.In                                    Premise(F128)
	S70= B_EX.In={16{offset[15]},offset}                        Path(S63,S69)
	S71= IR_ID.Out=>IR_EX.In                                    Premise(F129)
	S72= IR_EX.In={35,rS,rT,offset}                             Path(S55,S71)
	S73= CtrlCP0=0                                              Premise(F134)
	S74= CP0[ASID]=pid                                          CP0-Hold(S43,S73)
	S75= CtrlPC=0                                               Premise(F138)
	S76= CtrlPCInc=0                                            Premise(F139)
	S77= PC[Out]=addr+4                                         PC-Hold(S46,S75,S76)
	S78= CtrlICache=0                                           Premise(F141)
	S79= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Hold(S48,S78)
	S80= CtrlA_EX=1                                             Premise(F148)
	S81= [A_EX]=FU(base)                                        A_EX-Write(S68,S80)
	S82= CtrlB_EX=1                                             Premise(F149)
	S83= [B_EX]={16{offset[15]},offset}                         B_EX-Write(S70,S82)
	S84= CtrlIR_EX=1                                            Premise(F150)
	S85= [IR_EX]={35,rS,rT,offset}                              IR_EX-Write(S72,S84)
	S86= CtrlDMem=0                                             Premise(F170)
	S87= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S54,S86)

EX	S88= A_EX.Out=FU(base)                                      A_EX-Out(S81)
	S89= B_EX.Out={16{offset[15]},offset}                       B_EX-Out(S83)
	S90= IR_EX.Out={35,rS,rT,offset}                            IR_EX-Out(S85)
	S91= A_EX.Out=>ALU.A                                        Premise(F179)
	S92= ALU.A=FU(base)                                         Path(S88,S91)
	S93= B_EX.Out=>ALU.B                                        Premise(F180)
	S94= ALU.B={16{offset[15]},offset}                          Path(S89,S93)
	S95= ALU.Out=FU(base)+{16{offset[15]},offset}               ALU(S92,S94)
	S96= ALU.Out=>ALUOut_MEM.In                                 Premise(F182)
	S97= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}         Path(S95,S96)
	S98= IR_EX.Out=>IR_MEM.In                                   Premise(F183)
	S99= IR_MEM.In={35,rS,rT,offset}                            Path(S90,S98)
	S100= CtrlCP0=0                                             Premise(F186)
	S101= CP0[ASID]=pid                                         CP0-Hold(S74,S100)
	S102= CtrlPC=0                                              Premise(F190)
	S103= CtrlPCInc=0                                           Premise(F191)
	S104= PC[Out]=addr+4                                        PC-Hold(S77,S102,S103)
	S105= CtrlICache=0                                          Premise(F193)
	S106= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S79,S105)
	S107= CtrlALUOut_MEM=1                                      Premise(F203)
	S108= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}         ALUOut_MEM-Write(S97,S107)
	S109= CtrlIR_MEM=1                                          Premise(F204)
	S110= [IR_MEM]={35,rS,rT,offset}                            IR_MEM-Write(S99,S109)
	S111= CtrlDMem=0                                            Premise(F222)
	S112= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S87,S111)

MEM	S113= CP0.ASID=pid                                          CP0-Read-ASID(S101)
	S114= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}       ALUOut_MEM-Out(S108)
	S115= IR_MEM.Out={35,rS,rT,offset}                          IR_MEM-Out(S110)
	S116= CP0.ASID=>DMMU.PID                                    Premise(F233)
	S117= DMMU.PID=pid                                          Path(S113,S116)
	S118= ALUOut_MEM.Out=>DMMU.IEA                              Premise(F234)
	S119= DMMU.IEA=FU(base)+{16{offset[15]},offset}             Path(S114,S118)
	S120= DMMU.Addr={pid,FU(base)+{16{offset[15]},offset}}      DMMU-Search(S117,S119)
	S121= DMMU.Addr=>DAddrReg_DMMU1.In                          Premise(F235)
	S122= DAddrReg_DMMU1.In={pid,FU(base)+{16{offset[15]},offset}}Path(S120,S121)
	S123= IR_MEM.Out=>IR_DMMU1.In                               Premise(F241)
	S124= IR_DMMU1.In={35,rS,rT,offset}                         Path(S115,S123)
	S125= ALUOut_MEM.Out=>ALUOut_DMMU1.In                       Premise(F242)
	S126= ALUOut_DMMU1.In=FU(base)+{16{offset[15]},offset}      Path(S114,S125)
	S127= CtrlPC=0                                              Premise(F253)
	S128= CtrlPCInc=0                                           Premise(F254)
	S129= PC[Out]=addr+4                                        PC-Hold(S104,S127,S128)
	S130= CtrlICache=0                                          Premise(F256)
	S131= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S106,S130)
	S132= CtrlDAddrReg_DMMU1=1                                  Premise(F269)
	S133= [DAddrReg_DMMU1]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Write(S122,S132)
	S134= CtrlIR_DMMU1=1                                        Premise(F273)
	S135= [IR_DMMU1]={35,rS,rT,offset}                          IR_DMMU1-Write(S124,S134)
	S136= CtrlALUOut_DMMU1=1                                    Premise(F279)
	S137= [ALUOut_DMMU1]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU1-Write(S126,S136)
	S138= CtrlDMem=0                                            Premise(F285)
	S139= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S112,S138)

MEM(DMMU1)	S140= DAddrReg_DMMU1.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Out(S133)
	S141= IR_DMMU1.Out={35,rS,rT,offset}                        IR_DMMU1-Out(S135)
	S142= ALUOut_DMMU1.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU1-Out(S137)
	S143= IR_DMMU1.Out=>IR_DMMU2.In                             Premise(F303)
	S144= IR_DMMU2.In={35,rS,rT,offset}                         Path(S141,S143)
	S145= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                     Premise(F304)
	S146= ALUOut_DMMU2.In=FU(base)+{16{offset[15]},offset}      Path(S142,S145)
	S147= DAddrReg_DMMU1.Out=>DAddrReg_DMMU2.In                 Premise(F305)
	S148= DAddrReg_DMMU2.In={pid,FU(base)+{16{offset[15]},offset}}Path(S140,S147)
	S149= CtrlPC=0                                              Premise(F312)
	S150= CtrlPCInc=0                                           Premise(F313)
	S151= PC[Out]=addr+4                                        PC-Hold(S129,S149,S150)
	S152= CtrlICache=0                                          Premise(F315)
	S153= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S131,S152)
	S154= CtrlDMem=0                                            Premise(F344)
	S155= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S139,S154)
	S156= CtrlIR_DMMU2=1                                        Premise(F346)
	S157= [IR_DMMU2]={35,rS,rT,offset}                          IR_DMMU2-Write(S144,S156)
	S158= CtrlALUOut_DMMU2=1                                    Premise(F347)
	S159= [ALUOut_DMMU2]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU2-Write(S146,S158)
	S160= CtrlDAddrReg_DMMU2=1                                  Premise(F348)
	S161= [DAddrReg_DMMU2]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Write(S148,S160)

MEM(DMMU2)	S162= IR_DMMU2.Out={35,rS,rT,offset}                        IR_DMMU2-Out(S157)
	S163= ALUOut_DMMU2.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU2-Out(S159)
	S164= DAddrReg_DMMU2.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Out(S161)
	S165= ALUOut_DMMU2.Out=>DCache.IEA                          Premise(F353)
	S166= DCache.IEA=FU(base)+{16{offset[15]},offset}           Path(S163,S165)
	S167= DAddrReg_DMMU2.Out=>DMem.RAddr                        Premise(F354)
	S168= DMem.RAddr={pid,FU(base)+{16{offset[15]},offset}}     Path(S164,S167)
	S169= DMem.MEM8WordOut=>DCache.WData                        Premise(F355)
	S170= DMem.Out=>DR_WB.In                                    Premise(F356)
	S171= IR_DMMU2.Out=>IR_WB.In                                Premise(F357)
	S172= IR_WB.In={35,rS,rT,offset}                            Path(S162,S171)
	S173= ALUOut_DMMU2.Out=>ALUOut_WB.In                        Premise(F358)
	S174= ALUOut_WB.In=FU(base)+{16{offset[15]},offset}         Path(S163,S173)
	S175= CtrlPC=0                                              Premise(F365)
	S176= CtrlPCInc=0                                           Premise(F366)
	S177= PC[Out]=addr+4                                        PC-Hold(S151,S175,S176)
	S178= CtrlICache=0                                          Premise(F368)
	S179= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S153,S178)
	S180= CtrlDCache=1                                          Premise(F382)
	S181= CtrlIR_WB=1                                           Premise(F386)
	S182= [IR_WB]={35,rS,rT,offset}                             IR_WB-Write(S172,S181)
	S183= CtrlALUOut_WB=1                                       Premise(F392)
	S184= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}          ALUOut_WB-Write(S174,S183)
	S185= CtrlDR_WB=1                                           Premise(F393)
	S186= CtrlDMem=0                                            Premise(F397)
	S187= CtrlDMem8Word=0                                       Premise(F398)
	S188= DMem.Out=a                                            DMem-Read(S168,S155,S186,S187)
	S189= DR_WB.In=a                                            Path(S188,S170)
	S190= [DR_WB]=a                                             DR_WB-Write(S189,S185)
	S191= DMem.MEM8WordOut=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DMem-Read(S168,S155,S186,S187)
	S192= DCache.WData=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})Path(S191,S169)
	S193= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Write8Word(S166,S192,S180)

WB	S194= IR_WB.Out20_16=rT                                     IR-Out(S182)
	S195= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S184)
	S196= DR_WB.Out=a                                           DR_WB-Out(S190)
	S197= IR_WB.Out20_16=>GPR.WReg                              Premise(F404)
	S198= GPR.WReg=rT                                           Path(S194,S197)
	S199= DR_WB.Out=>MemDataSelL.In                             Premise(F405)
	S200= MemDataSelL.In=a                                      Path(S196,S199)
	S201= ALUOut_WB.Out1_0=>MemDataSelL.Addr                    Premise(F406)
	S202= MemDataSelL.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S195,S201)
	S203= MemDataSelL.Out=a                                     MemDataSelL(S200,S202)
	S204= MemDataSelL.Out=>GPR.WData                            Premise(F408)
	S205= GPR.WData=a                                           Path(S203,S204)
	S206= CtrlPC=0                                              Premise(F416)
	S207= CtrlPCInc=0                                           Premise(F417)
	S208= PC[Out]=addr+4                                        PC-Hold(S177,S206,S207)
	S209= CtrlICache=0                                          Premise(F419)
	S210= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S179,S209)
	S211= CtrlGPR=1                                             Premise(F425)
	S212= GPR[rT]=a                                             GPR-Write(S198,S205,S211)
	S213= CtrlDCache=0                                          Premise(F433)
	S214= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S193,S213)

POST	S208= PC[Out]=addr+4                                        PC-Hold(S177,S206,S207)
	S210= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S179,S209)
	S212= GPR[rT]=a                                             GPR-Write(S198,S205,S211)
	S214= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S193,S213)

