
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= ICache[addr]={35,rS,rT,offset}                          Premise(F3)
	S3= GPR[rS]=base                                            Premise(F4)
	S4= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a          Premise(F5)

IF	S5= PC.Out=addr                                             PC-Out(S1)
	S6= PC.Out=>ICache.IEA                                      Premise(F11)
	S7= ICache.IEA=addr                                         Path(S5,S6)
	S8= ICache.Out={35,rS,rT,offset}                            ICache-Search(S7,S2)
	S9= ICache.Out=>IR_ID.In                                    Premise(F15)
	S10= IR_ID.In={35,rS,rT,offset}                             Path(S8,S9)
	S11= CtrlCP0=0                                              Premise(F24)
	S12= CP0[ASID]=pid                                          CP0-Hold(S0,S11)
	S13= CtrlPC=0                                               Premise(F28)
	S14= CtrlPCInc=1                                            Premise(F29)
	S15= PC[Out]=addr+4                                         PC-Inc(S1,S13,S14)
	S16= CtrlIR_ID=1                                            Premise(F34)
	S17= [IR_ID]={35,rS,rT,offset}                              IR_ID-Write(S10,S16)
	S18= CtrlGPR=0                                              Premise(F37)
	S19= GPR[rS]=base                                           GPR-Hold(S3,S18)
	S20= CtrlDMem=0                                             Premise(F60)
	S21= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S4,S20)

ID	S22= IR_ID.Out={35,rS,rT,offset}                            IR-Out(S17)
	S23= IR_ID.Out25_21=rS                                      IR-Out(S17)
	S24= IR_ID.Out15_0=offset                                   IR-Out(S17)
	S25= IR_ID.Out25_21=>GPR.RReg1                              Premise(F111)
	S26= GPR.RReg1=rS                                           Path(S23,S25)
	S27= GPR.Rdata1=base                                        GPR-Read(S26,S19)
	S28= IR_ID.Out15_0=>IMMEXT.In                               Premise(F112)
	S29= IMMEXT.In=offset                                       Path(S24,S28)
	S30= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S29)
	S31= GPR.Rdata1=>FU.InID1                                   Premise(F113)
	S32= FU.InID1=base                                          Path(S27,S31)
	S33= FU.OutID1=FU(base)                                     FU-Forward(S32)
	S34= FU.OutID1=>A_EX.In                                     Premise(F115)
	S35= A_EX.In=FU(base)                                       Path(S33,S34)
	S36= IMMEXT.Out=>B_EX.In                                    Premise(F116)
	S37= B_EX.In={16{offset[15]},offset}                        Path(S30,S36)
	S38= IR_ID.Out=>IR_EX.In                                    Premise(F117)
	S39= IR_EX.In={35,rS,rT,offset}                             Path(S22,S38)
	S40= CtrlCP0=0                                              Premise(F122)
	S41= CP0[ASID]=pid                                          CP0-Hold(S12,S40)
	S42= CtrlPC=0                                               Premise(F126)
	S43= CtrlPCInc=0                                            Premise(F127)
	S44= PC[Out]=addr+4                                         PC-Hold(S15,S42,S43)
	S45= CtrlA_EX=1                                             Premise(F136)
	S46= [A_EX]=FU(base)                                        A_EX-Write(S35,S45)
	S47= CtrlB_EX=1                                             Premise(F137)
	S48= [B_EX]={16{offset[15]},offset}                         B_EX-Write(S37,S47)
	S49= CtrlIR_EX=1                                            Premise(F138)
	S50= [IR_EX]={35,rS,rT,offset}                              IR_EX-Write(S39,S49)
	S51= CtrlDMem=0                                             Premise(F158)
	S52= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S21,S51)

EX	S53= A_EX.Out=FU(base)                                      A_EX-Out(S46)
	S54= B_EX.Out={16{offset[15]},offset}                       B_EX-Out(S48)
	S55= IR_EX.Out={35,rS,rT,offset}                            IR_EX-Out(S50)
	S56= A_EX.Out=>ALU.A                                        Premise(F167)
	S57= ALU.A=FU(base)                                         Path(S53,S56)
	S58= B_EX.Out=>ALU.B                                        Premise(F168)
	S59= ALU.B={16{offset[15]},offset}                          Path(S54,S58)
	S60= ALU.Out=FU(base)+{16{offset[15]},offset}               ALU(S57,S59)
	S61= ALU.Out=>ALUOut_MEM.In                                 Premise(F170)
	S62= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}         Path(S60,S61)
	S63= IR_EX.Out=>IR_MEM.In                                   Premise(F171)
	S64= IR_MEM.In={35,rS,rT,offset}                            Path(S55,S63)
	S65= CtrlCP0=0                                              Premise(F174)
	S66= CP0[ASID]=pid                                          CP0-Hold(S41,S65)
	S67= CtrlPC=0                                               Premise(F178)
	S68= CtrlPCInc=0                                            Premise(F179)
	S69= PC[Out]=addr+4                                         PC-Hold(S44,S67,S68)
	S70= CtrlALUOut_MEM=1                                       Premise(F191)
	S71= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}          ALUOut_MEM-Write(S62,S70)
	S72= CtrlIR_MEM=1                                           Premise(F192)
	S73= [IR_MEM]={35,rS,rT,offset}                             IR_MEM-Write(S64,S72)
	S74= CtrlDMem=0                                             Premise(F210)
	S75= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         DMem-Hold(S52,S74)

MEM	S76= CP0.ASID=pid                                           CP0-Read-ASID(S66)
	S77= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}        ALUOut_MEM-Out(S71)
	S78= IR_MEM.Out={35,rS,rT,offset}                           IR_MEM-Out(S73)
	S79= CP0.ASID=>DMMU.PID                                     Premise(F221)
	S80= DMMU.PID=pid                                           Path(S76,S79)
	S81= ALUOut_MEM.Out=>DMMU.IEA                               Premise(F222)
	S82= DMMU.IEA=FU(base)+{16{offset[15]},offset}              Path(S77,S81)
	S83= DMMU.Addr={pid,FU(base)+{16{offset[15]},offset}}       DMMU-Search(S80,S82)
	S84= DMMU.Addr=>DAddrReg_DMMU1.In                           Premise(F223)
	S85= DAddrReg_DMMU1.In={pid,FU(base)+{16{offset[15]},offset}}Path(S83,S84)
	S86= IR_MEM.Out=>IR_DMMU1.In                                Premise(F229)
	S87= IR_DMMU1.In={35,rS,rT,offset}                          Path(S78,S86)
	S88= ALUOut_MEM.Out=>ALUOut_DMMU1.In                        Premise(F230)
	S89= ALUOut_DMMU1.In=FU(base)+{16{offset[15]},offset}       Path(S77,S88)
	S90= CtrlPC=0                                               Premise(F241)
	S91= CtrlPCInc=0                                            Premise(F242)
	S92= PC[Out]=addr+4                                         PC-Hold(S69,S90,S91)
	S93= CtrlDAddrReg_DMMU1=1                                   Premise(F257)
	S94= [DAddrReg_DMMU1]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Write(S85,S93)
	S95= CtrlIR_DMMU1=1                                         Premise(F261)
	S96= [IR_DMMU1]={35,rS,rT,offset}                           IR_DMMU1-Write(S87,S95)
	S97= CtrlALUOut_DMMU1=1                                     Premise(F267)
	S98= [ALUOut_DMMU1]=FU(base)+{16{offset[15]},offset}        ALUOut_DMMU1-Write(S89,S97)
	S99= CtrlDMem=0                                             Premise(F273)
	S100= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S75,S99)

MEM(DMMU1)	S101= DAddrReg_DMMU1.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU1-Out(S94)
	S102= IR_DMMU1.Out={35,rS,rT,offset}                        IR_DMMU1-Out(S96)
	S103= ALUOut_DMMU1.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU1-Out(S98)
	S104= IR_DMMU1.Out=>IR_DMMU2.In                             Premise(F291)
	S105= IR_DMMU2.In={35,rS,rT,offset}                         Path(S102,S104)
	S106= ALUOut_DMMU1.Out=>ALUOut_DMMU2.In                     Premise(F292)
	S107= ALUOut_DMMU2.In=FU(base)+{16{offset[15]},offset}      Path(S103,S106)
	S108= DAddrReg_DMMU1.Out=>DAddrReg_DMMU2.In                 Premise(F293)
	S109= DAddrReg_DMMU2.In={pid,FU(base)+{16{offset[15]},offset}}Path(S101,S108)
	S110= CtrlPC=0                                              Premise(F300)
	S111= CtrlPCInc=0                                           Premise(F301)
	S112= PC[Out]=addr+4                                        PC-Hold(S92,S110,S111)
	S113= CtrlDMem=0                                            Premise(F332)
	S114= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a        DMem-Hold(S100,S113)
	S115= CtrlIR_DMMU2=1                                        Premise(F334)
	S116= [IR_DMMU2]={35,rS,rT,offset}                          IR_DMMU2-Write(S105,S115)
	S117= CtrlALUOut_DMMU2=1                                    Premise(F335)
	S118= [ALUOut_DMMU2]=FU(base)+{16{offset[15]},offset}       ALUOut_DMMU2-Write(S107,S117)
	S119= CtrlDAddrReg_DMMU2=1                                  Premise(F336)
	S120= [DAddrReg_DMMU2]={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Write(S109,S119)

MEM(DMMU2)	S121= IR_DMMU2.Out={35,rS,rT,offset}                        IR_DMMU2-Out(S116)
	S122= ALUOut_DMMU2.Out=FU(base)+{16{offset[15]},offset}     ALUOut_DMMU2-Out(S118)
	S123= DAddrReg_DMMU2.Out={pid,FU(base)+{16{offset[15]},offset}}DAddrReg_DMMU2-Out(S120)
	S124= ALUOut_DMMU2.Out=>DCache.IEA                          Premise(F341)
	S125= DCache.IEA=FU(base)+{16{offset[15]},offset}           Path(S122,S124)
	S126= DAddrReg_DMMU2.Out=>DMem.RAddr                        Premise(F342)
	S127= DMem.RAddr={pid,FU(base)+{16{offset[15]},offset}}     Path(S123,S126)
	S128= DMem.MEM8WordOut=>DCache.WData                        Premise(F343)
	S129= DMem.Out=>DR_WB.In                                    Premise(F344)
	S130= IR_DMMU2.Out=>IR_WB.In                                Premise(F345)
	S131= IR_WB.In={35,rS,rT,offset}                            Path(S121,S130)
	S132= ALUOut_DMMU2.Out=>ALUOut_WB.In                        Premise(F346)
	S133= ALUOut_WB.In=FU(base)+{16{offset[15]},offset}         Path(S122,S132)
	S134= CtrlPC=0                                              Premise(F353)
	S135= CtrlPCInc=0                                           Premise(F354)
	S136= PC[Out]=addr+4                                        PC-Hold(S112,S134,S135)
	S137= CtrlDCache=1                                          Premise(F370)
	S138= CtrlIR_WB=1                                           Premise(F374)
	S139= [IR_WB]={35,rS,rT,offset}                             IR_WB-Write(S131,S138)
	S140= CtrlALUOut_WB=1                                       Premise(F380)
	S141= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}          ALUOut_WB-Write(S133,S140)
	S142= CtrlDR_WB=1                                           Premise(F381)
	S143= CtrlDMem=0                                            Premise(F385)
	S144= CtrlDMem8Word=0                                       Premise(F386)
	S145= DMem.Out=a                                            DMem-Read(S127,S114,S143,S144)
	S146= DR_WB.In=a                                            Path(S145,S129)
	S147= [DR_WB]=a                                             DR_WB-Write(S146,S142)
	S148= DMem.MEM8WordOut=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DMem-Read(S127,S114,S143,S144)
	S149= DCache.WData=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})Path(S148,S128)
	S150= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Write8Word(S125,S149,S137)

WB	S151= IR_WB.Out20_16=rT                                     IR-Out(S139)
	S152= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S141)
	S153= DR_WB.Out=a                                           DR_WB-Out(S147)
	S154= IR_WB.Out20_16=>GPR.WReg                              Premise(F392)
	S155= GPR.WReg=rT                                           Path(S151,S154)
	S156= DR_WB.Out=>MemDataSelL.In                             Premise(F393)
	S157= MemDataSelL.In=a                                      Path(S153,S156)
	S158= ALUOut_WB.Out1_0=>MemDataSelL.Addr                    Premise(F394)
	S159= MemDataSelL.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S152,S158)
	S160= MemDataSelL.Out=a                                     MemDataSelL(S157,S159)
	S161= MemDataSelL.Out=>GPR.WData                            Premise(F396)
	S162= GPR.WData=a                                           Path(S160,S161)
	S163= CtrlPC=0                                              Premise(F404)
	S164= CtrlPCInc=0                                           Premise(F405)
	S165= PC[Out]=addr+4                                        PC-Hold(S136,S163,S164)
	S166= CtrlGPR=1                                             Premise(F413)
	S167= GPR[rT]=a                                             GPR-Write(S155,S162,S166)
	S168= CtrlDCache=0                                          Premise(F421)
	S169= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S150,S168)

POST	S165= PC[Out]=addr+4                                        PC-Hold(S136,S163,S164)
	S167= GPR[rT]=a                                             GPR-Write(S155,S162,S166)
	S169= DCache[line_FU(base)+{16{offset[15]},offset}]=DMemGet8Word({pid,FU(base)+{16{offset[15]},offset}})DCache-Hold(S150,S168)

