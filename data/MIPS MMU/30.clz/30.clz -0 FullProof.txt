
----------------------------------- FullProof -----------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={28,rS,rT,rD,0,32}                     Premise(F2)
	S3= GPR[rS]=a                                               Premise(F3)

IF	S4= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S5= PC.Out=addr                                             PC-Out(S1)
	S6= CP0.ASID=>IMMU.PID                                      Premise(F4)
	S7= IMMU.PID=pid                                            Path(S4,S6)
	S8= PC.Out=>IMMU.IEA                                        Premise(F5)
	S9= IMMU.IEA=addr                                           Path(S5,S8)
	S10= IMMU.Addr={pid,addr}                                   IMMU-Search(S7,S9)
	S11= IMMU.Hit=IMMUHit(pid,addr)                             IMMU-Search(S7,S9)
	S12= IMMU.Addr=>IAddrReg.In                                 Premise(F6)
	S13= IAddrReg.In={pid,addr}                                 Path(S10,S12)
	S14= IMMU.Hit=>CU.IMMUHit                                   Premise(F7)
	S15= CU.IMMUHit=IMMUHit(pid,addr)                           Path(S11,S14)
	S16= PC.Out=>ICache.IEA                                     Premise(F8)
	S17= ICache.IEA=addr                                        Path(S5,S16)
	S18= ICache.Hit=ICacheHit(addr)                             ICache-Search(S17)
	S19= ICache.Out=>IR.In                                      Premise(F9)
	S20= ICache.Out=>ICacheReg.In                               Premise(F10)
	S21= ICache.Hit=>CU.ICacheHit                               Premise(F11)
	S22= CU.ICacheHit=ICacheHit(addr)                           Path(S18,S21)
	S23= CtrlASIDIn=0                                           Premise(F12)
	S24= CtrlCP0=0                                              Premise(F13)
	S25= CP0[ASID]=pid                                          CP0-Hold(S0,S24)
	S26= CtrlEPCIn=0                                            Premise(F14)
	S27= CtrlExCodeIn=0                                         Premise(F15)
	S28= CtrlIMMU=0                                             Premise(F16)
	S29= CtrlPC=0                                               Premise(F17)
	S30= CtrlPCInc=0                                            Premise(F18)
	S31= PC[Out]=addr                                           PC-Hold(S1,S29,S30)
	S32= CtrlIAddrReg=1                                         Premise(F19)
	S33= [IAddrReg]={pid,addr}                                  IAddrReg-Write(S13,S32)
	S34= CtrlICache=0                                           Premise(F20)
	S35= CtrlIR=0                                               Premise(F21)
	S36= CtrlICacheReg=1                                        Premise(F22)
	S37= CtrlIMem=0                                             Premise(F23)
	S38= IMem[{pid,addr}]={28,rS,rT,rD,0,32}                    IMem-Hold(S2,S37)
	S39= CtrlIRMux=0                                            Premise(F24)
	S40= CtrlGPR=0                                              Premise(F25)
	S41= GPR[rS]=a                                              GPR-Hold(S3,S40)
	S42= CtrlA=0                                                Premise(F26)

IF(IMMU)	S43= CP0.ASID=pid                                           CP0-Read-ASID(S25)
	S44= PC.Out=addr                                            PC-Out(S31)
	S45= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S33)
	S46= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S33)
	S47= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S33)
	S48= CU.IMMUHit=>CU.IMMUHit                                 Premise(F27)
	S49= CU.ICacheHit=>CU.ICacheHit                             Premise(F28)
	S50= IAddrReg.Out=>IMem.RAddr                               Premise(F29)
	S51= IMem.RAddr={pid,addr}                                  Path(S45,S50)
	S52= IMem.Out={28,rS,rT,rD,0,32}                            IMem-Read(S51,S38)
	S53= IMem.MEM8WordOut=IMemGet8Word({pid,addr})              IMem-Read(S51,S38)
	S54= IMem.Out=>IRMux.MemData                                Premise(F30)
	S55= IRMux.MemData={28,rS,rT,rD,0,32}                       Path(S52,S54)
	S56= IRMux.Out={28,rS,rT,rD,0,32}                           IRMux-Select2(S55)
	S57= ICacheReg.Out=>IRMux.CacheData                         Premise(F31)
	S58= CU.IMMUHit=>IRMux.MemSel                               Premise(F32)
	S59= CU.ICacheHit=>IRMux.CacheSel                           Premise(F33)
	S60= IRMux.Out=>IR.In                                       Premise(F34)
	S61= IR.In={28,rS,rT,rD,0,32}                               Path(S56,S60)
	S62= IMem.MEM8WordOut=>ICache.WData                         Premise(F35)
	S63= ICache.WData=IMemGet8Word({pid,addr})                  Path(S53,S62)
	S64= PC.Out=>ICache.IEA                                     Premise(F36)
	S65= ICache.IEA=addr                                        Path(S44,S64)
	S66= ICache.Hit=ICacheHit(addr)                             ICache-Search(S65)
	S67= CtrlASIDIn=0                                           Premise(F37)
	S68= CtrlCP0=0                                              Premise(F38)
	S69= CP0[ASID]=pid                                          CP0-Hold(S25,S68)
	S70= CtrlEPCIn=0                                            Premise(F39)
	S71= CtrlExCodeIn=0                                         Premise(F40)
	S72= CtrlIMMU=0                                             Premise(F41)
	S73= CtrlPC=0                                               Premise(F42)
	S74= CtrlPCInc=1                                            Premise(F43)
	S75= PC[Out]=addr+4                                         PC-Inc(S31,S73,S74)
	S76= PC[CIA]=addr                                           PC-Inc(S31,S73,S74)
	S77= CtrlIAddrReg=0                                         Premise(F44)
	S78= [IAddrReg]={pid,addr}                                  IAddrReg-Hold(S33,S77)
	S79= CtrlICache=1                                           Premise(F45)
	S80= ICache[line_addr]=IMemGet8Word({pid,addr})             ICache-Write(S65,S63,S79)
	S81= CtrlIR=1                                               Premise(F46)
	S82= [IR]={28,rS,rT,rD,0,32}                                IR-Write(S61,S81)
	S83= CtrlICacheReg=0                                        Premise(F47)
	S84= CtrlIMem=0                                             Premise(F48)
	S85= IMem[{pid,addr}]={28,rS,rT,rD,0,32}                    IMem-Hold(S38,S84)
	S86= CtrlIRMux=0                                            Premise(F49)
	S87= CtrlGPR=0                                              Premise(F50)
	S88= GPR[rS]=a                                              GPR-Hold(S41,S87)
	S89= CtrlA=0                                                Premise(F51)

ID	S90= CP0.ASID=pid                                           CP0-Read-ASID(S69)
	S91= PC.Out=addr+4                                          PC-Out(S75)
	S92= PC.CIA=addr                                            PC-Out(S76)
	S93= PC.CIA31_28=addr[31:28]                                PC-Out(S76)
	S94= IAddrReg.Out={pid,addr}                                IAddrReg-Out(S78)
	S95= IAddrReg.Out1_0={{pid,addr}}[1:0]                      IAddrReg-Out(S78)
	S96= IAddrReg.Out4_0={{pid,addr}}[4:0]                      IAddrReg-Out(S78)
	S97= IR.Out={28,rS,rT,rD,0,32}                              IR-Out(S82)
	S98= IR.Out31_26=28                                         IR-Out(S82)
	S99= IR.Out25_21=rS                                         IR-Out(S82)
	S100= IR.Out20_16=rT                                        IR-Out(S82)
	S101= IR.Out15_11=rD                                        IR-Out(S82)
	S102= IR.Out10_6=0                                          IR-Out(S82)
	S103= IR.Out5_0=32                                          IR-Out(S82)
	S104= IR.Out31_26=>CU.Op                                    Premise(F52)
	S105= CU.Op=28                                              Path(S98,S104)
	S106= CU.Func=alu_and                                       CU(S105)
	S107= IR.Out25_21=>GPR.RReg1                                Premise(F53)
	S108= GPR.RReg1=rS                                          Path(S99,S107)
	S109= GPR.Rdata1=a                                          GPR-Read(S108,S88)
	S110= IR.Out5_0=>CU.IRFunc                                  Premise(F54)
	S111= CU.IRFunc=32                                          Path(S103,S110)
	S112= GPR.Rdata1=>A.In                                      Premise(F55)
	S113= A.In=a                                                Path(S109,S112)
	S114= CtrlASIDIn=0                                          Premise(F56)
	S115= CtrlCP0=0                                             Premise(F57)
	S116= CP0[ASID]=pid                                         CP0-Hold(S69,S115)
	S117= CtrlEPCIn=0                                           Premise(F58)
	S118= CtrlExCodeIn=0                                        Premise(F59)
	S119= CtrlIMMU=0                                            Premise(F60)
	S120= CtrlPC=0                                              Premise(F61)
	S121= CtrlPCInc=0                                           Premise(F62)
	S122= PC[CIA]=addr                                          PC-Hold(S76,S121)
	S123= PC[Out]=addr+4                                        PC-Hold(S75,S120,S121)
	S124= CtrlIAddrReg=0                                        Premise(F63)
	S125= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S78,S124)
	S126= CtrlICache=0                                          Premise(F64)
	S127= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S80,S126)
	S128= CtrlIR=0                                              Premise(F65)
	S129= [IR]={28,rS,rT,rD,0,32}                               IR-Hold(S82,S128)
	S130= CtrlICacheReg=0                                       Premise(F66)
	S131= CtrlIMem=0                                            Premise(F67)
	S132= IMem[{pid,addr}]={28,rS,rT,rD,0,32}                   IMem-Hold(S85,S131)
	S133= CtrlIRMux=0                                           Premise(F68)
	S134= CtrlGPR=0                                             Premise(F69)
	S135= GPR[rS]=a                                             GPR-Hold(S88,S134)
	S136= CtrlA=1                                               Premise(F70)
	S137= [A]=a                                                 A-Write(S113,S136)

EX	S138= CP0.ASID=pid                                          CP0-Read-ASID(S116)
	S139= PC.CIA=addr                                           PC-Out(S122)
	S140= PC.CIA31_28=addr[31:28]                               PC-Out(S122)
	S141= PC.Out=addr+4                                         PC-Out(S123)
	S142= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S125)
	S143= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S125)
	S144= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S125)
	S145= IR.Out={28,rS,rT,rD,0,32}                             IR-Out(S129)
	S146= IR.Out31_26=28                                        IR-Out(S129)
	S147= IR.Out25_21=rS                                        IR-Out(S129)
	S148= IR.Out20_16=rT                                        IR-Out(S129)
	S149= IR.Out15_11=rD                                        IR-Out(S129)
	S150= IR.Out10_6=0                                          IR-Out(S129)
	S151= IR.Out5_0=32                                          IR-Out(S129)
	S152= A.Out=a                                               A-Out(S137)
	S153= A.Out1_0={a}[1:0]                                     A-Out(S137)
	S154= A.Out4_0={a}[4:0]                                     A-Out(S137)
	S155= A.Out=>CountUnit.In                                   Premise(F71)
	S156= CountUnit.In=a                                        Path(S152,S155)
	S157= CountUnit.Func=6'b000000                              Premise(F72)
	S158= CountUnit.Out=Count0(a)                               CountUnit_Count0(S156)
	S159= CountUnit.Out=>GPR.WData                              Premise(F73)
	S160= GPR.WData=Count0(a)                                   Path(S158,S159)
	S161= IR.Out15_11=>GPR.WReg                                 Premise(F74)
	S162= GPR.WReg=rD                                           Path(S149,S161)
	S163= CtrlASIDIn=0                                          Premise(F75)
	S164= CtrlCP0=0                                             Premise(F76)
	S165= CP0[ASID]=pid                                         CP0-Hold(S116,S164)
	S166= CtrlEPCIn=0                                           Premise(F77)
	S167= CtrlExCodeIn=0                                        Premise(F78)
	S168= CtrlIMMU=0                                            Premise(F79)
	S169= CtrlPC=0                                              Premise(F80)
	S170= CtrlPCInc=0                                           Premise(F81)
	S171= PC[CIA]=addr                                          PC-Hold(S122,S170)
	S172= PC[Out]=addr+4                                        PC-Hold(S123,S169,S170)
	S173= CtrlIAddrReg=0                                        Premise(F82)
	S174= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S125,S173)
	S175= CtrlICache=0                                          Premise(F83)
	S176= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S127,S175)
	S177= CtrlIR=0                                              Premise(F84)
	S178= [IR]={28,rS,rT,rD,0,32}                               IR-Hold(S129,S177)
	S179= CtrlICacheReg=0                                       Premise(F85)
	S180= CtrlIMem=0                                            Premise(F86)
	S181= IMem[{pid,addr}]={28,rS,rT,rD,0,32}                   IMem-Hold(S132,S180)
	S182= CtrlIRMux=0                                           Premise(F87)
	S183= CtrlGPR=1                                             Premise(F88)
	S184= GPR[rD]=Count0(a)                                     GPR-Write(S162,S160,S183)
	S185= CtrlA=0                                               Premise(F89)
	S186= [A]=a                                                 A-Hold(S137,S185)

MEM	S187= CP0.ASID=pid                                          CP0-Read-ASID(S165)
	S188= PC.CIA=addr                                           PC-Out(S171)
	S189= PC.CIA31_28=addr[31:28]                               PC-Out(S171)
	S190= PC.Out=addr+4                                         PC-Out(S172)
	S191= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S174)
	S192= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S174)
	S193= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S174)
	S194= IR.Out={28,rS,rT,rD,0,32}                             IR-Out(S178)
	S195= IR.Out31_26=28                                        IR-Out(S178)
	S196= IR.Out25_21=rS                                        IR-Out(S178)
	S197= IR.Out20_16=rT                                        IR-Out(S178)
	S198= IR.Out15_11=rD                                        IR-Out(S178)
	S199= IR.Out10_6=0                                          IR-Out(S178)
	S200= IR.Out5_0=32                                          IR-Out(S178)
	S201= A.Out=a                                               A-Out(S186)
	S202= A.Out1_0={a}[1:0]                                     A-Out(S186)
	S203= A.Out4_0={a}[4:0]                                     A-Out(S186)
	S204= CtrlASIDIn=0                                          Premise(F90)
	S205= CtrlCP0=0                                             Premise(F91)
	S206= CP0[ASID]=pid                                         CP0-Hold(S165,S205)
	S207= CtrlEPCIn=0                                           Premise(F92)
	S208= CtrlExCodeIn=0                                        Premise(F93)
	S209= CtrlIMMU=0                                            Premise(F94)
	S210= CtrlPC=0                                              Premise(F95)
	S211= CtrlPCInc=0                                           Premise(F96)
	S212= PC[CIA]=addr                                          PC-Hold(S171,S211)
	S213= PC[Out]=addr+4                                        PC-Hold(S172,S210,S211)
	S214= CtrlIAddrReg=0                                        Premise(F97)
	S215= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S174,S214)
	S216= CtrlICache=0                                          Premise(F98)
	S217= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S176,S216)
	S218= CtrlIR=0                                              Premise(F99)
	S219= [IR]={28,rS,rT,rD,0,32}                               IR-Hold(S178,S218)
	S220= CtrlICacheReg=0                                       Premise(F100)
	S221= CtrlIMem=0                                            Premise(F101)
	S222= IMem[{pid,addr}]={28,rS,rT,rD,0,32}                   IMem-Hold(S181,S221)
	S223= CtrlIRMux=0                                           Premise(F102)
	S224= CtrlGPR=0                                             Premise(F103)
	S225= GPR[rD]=Count0(a)                                     GPR-Hold(S184,S224)
	S226= CtrlA=0                                               Premise(F104)
	S227= [A]=a                                                 A-Hold(S186,S226)

WB	S228= CP0.ASID=pid                                          CP0-Read-ASID(S206)
	S229= PC.CIA=addr                                           PC-Out(S212)
	S230= PC.CIA31_28=addr[31:28]                               PC-Out(S212)
	S231= PC.Out=addr+4                                         PC-Out(S213)
	S232= IAddrReg.Out={pid,addr}                               IAddrReg-Out(S215)
	S233= IAddrReg.Out1_0={{pid,addr}}[1:0]                     IAddrReg-Out(S215)
	S234= IAddrReg.Out4_0={{pid,addr}}[4:0]                     IAddrReg-Out(S215)
	S235= IR.Out={28,rS,rT,rD,0,32}                             IR-Out(S219)
	S236= IR.Out31_26=28                                        IR-Out(S219)
	S237= IR.Out25_21=rS                                        IR-Out(S219)
	S238= IR.Out20_16=rT                                        IR-Out(S219)
	S239= IR.Out15_11=rD                                        IR-Out(S219)
	S240= IR.Out10_6=0                                          IR-Out(S219)
	S241= IR.Out5_0=32                                          IR-Out(S219)
	S242= A.Out=a                                               A-Out(S227)
	S243= A.Out1_0={a}[1:0]                                     A-Out(S227)
	S244= A.Out4_0={a}[4:0]                                     A-Out(S227)
	S245= CtrlASIDIn=0                                          Premise(F135)
	S246= CtrlCP0=0                                             Premise(F136)
	S247= CP0[ASID]=pid                                         CP0-Hold(S206,S246)
	S248= CtrlEPCIn=0                                           Premise(F137)
	S249= CtrlExCodeIn=0                                        Premise(F138)
	S250= CtrlIMMU=0                                            Premise(F139)
	S251= CtrlPC=0                                              Premise(F140)
	S252= CtrlPCInc=0                                           Premise(F141)
	S253= PC[CIA]=addr                                          PC-Hold(S212,S252)
	S254= PC[Out]=addr+4                                        PC-Hold(S213,S251,S252)
	S255= CtrlIAddrReg=0                                        Premise(F142)
	S256= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S215,S255)
	S257= CtrlICache=0                                          Premise(F143)
	S258= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S217,S257)
	S259= CtrlIR=0                                              Premise(F144)
	S260= [IR]={28,rS,rT,rD,0,32}                               IR-Hold(S219,S259)
	S261= CtrlICacheReg=0                                       Premise(F145)
	S262= CtrlIMem=0                                            Premise(F146)
	S263= IMem[{pid,addr}]={28,rS,rT,rD,0,32}                   IMem-Hold(S222,S262)
	S264= CtrlIRMux=0                                           Premise(F147)
	S265= CtrlGPR=0                                             Premise(F148)
	S266= GPR[rD]=Count0(a)                                     GPR-Hold(S225,S265)
	S267= CtrlA=0                                               Premise(F149)
	S268= [A]=a                                                 A-Hold(S227,S267)

POST	S247= CP0[ASID]=pid                                         CP0-Hold(S206,S246)
	S253= PC[CIA]=addr                                          PC-Hold(S212,S252)
	S254= PC[Out]=addr+4                                        PC-Hold(S213,S251,S252)
	S256= [IAddrReg]={pid,addr}                                 IAddrReg-Hold(S215,S255)
	S258= ICache[line_addr]=IMemGet8Word({pid,addr})            ICache-Hold(S217,S257)
	S260= [IR]={28,rS,rT,rD,0,32}                               IR-Hold(S219,S259)
	S263= IMem[{pid,addr}]={28,rS,rT,rD,0,32}                   IMem-Hold(S222,S262)
	S266= GPR[rD]=Count0(a)                                     GPR-Hold(S225,S265)
	S268= [A]=a                                                 A-Hold(S227,S267)

