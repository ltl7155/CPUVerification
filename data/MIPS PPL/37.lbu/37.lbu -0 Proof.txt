
------------------------------------- Proof -------------------------------------

PRE	S0= CP0[ASID]=pid                                           Premise(F0)
	S1= PC[Out]=addr                                            Premise(F1)
	S2= IMem[{pid,addr}]={36,rS,rT,offset}                      Premise(F2)

IF	S3= CP0.ASID=pid                                            CP0-Read-ASID(S0)
	S4= PC.Out=addr                                             PC-Out(S1)
	S5= PC.Out=>IMem.RAddr                                      Premise(F3)
	S6= IMem.RAddr=addr                                         Path(S4,S5)
	S7= CP0.ASID=>IMem.ASID                                     Premise(F4)
	S8= IMem.ASID=pid                                           Path(S3,S7)
	S9= IMem.Out={36,rS,rT,offset}                              IMem-Read(S8,S6,S2)
	S10= IMem.Out=>IR_ID.In                                     Premise(F6)
	S11= IR_ID.In={36,rS,rT,offset}                             Path(S9,S10)
	S12= CtrlPC=0                                               Premise(F42)
	S13= CtrlPCInc=1                                            Premise(F43)
	S14= PC[Out]=addr+4                                         PC-Inc(S1,S12,S13)
	S15= CtrlCP0=0                                              Premise(F46)
	S16= CP0[ASID]=pid                                          CP0-Hold(S0,S15)
	S17= CtrlIR_ID=1                                            Premise(F49)
	S18= [IR_ID]={36,rS,rT,offset}                              IR_ID-Write(S11,S17)
	S19= GPR[rS]=base                                           Premise(F60)

ID	S20= IR_ID.Out={36,rS,rT,offset}                            IR-Out(S18)
	S21= IR_ID.Out25_21=rS                                      IR-Out(S18)
	S22= IR_ID.Out25_21=>GPR.RReg1                              Premise(F69)
	S23= GPR.RReg1=rS                                           Path(S21,S22)
	S24= GPR.Rdata1=base                                        GPR-Read(S23,S19)
	S25= GPR.Rdata1=>FU.InID1                                   Premise(F70)
	S26= FU.InID1=base                                          Path(S24,S25)
	S27= FU.OutID1=FU(base)                                     FU-Forward(S26)
	S28= FU.OutID1=>A_EX.In                                     Premise(F72)
	S29= A_EX.In=FU(base)                                       Path(S27,S28)
	S30= IR_ID.Out=>IR_EX.In                                    Premise(F73)
	S31= IR_EX.In={36,rS,rT,offset}                             Path(S20,S30)
	S32= CtrlPC=0                                               Premise(F101)
	S33= CtrlPCInc=0                                            Premise(F102)
	S34= PC[Out]=addr+4                                         PC-Hold(S14,S32,S33)
	S35= CtrlCP0=0                                              Premise(F105)
	S36= CP0[ASID]=pid                                          CP0-Hold(S16,S35)
	S37= CtrlA_EX=1                                             Premise(F110)
	S38= [A_EX]=FU(base)                                        A_EX-Write(S29,S37)
	S39= CtrlIR_EX=1                                            Premise(F111)
	S40= [IR_EX]={36,rS,rT,offset}                              IR_EX-Write(S31,S39)

EX	S41= A_EX.Out=FU(base)                                      A_EX-Out(S38)
	S42= IR_EX.Out={36,rS,rT,offset}                            IR_EX-Out(S40)
	S43= IR_EX.Out15_0=offset                                   IR_EX-Out(S40)
	S44= A_EX.Out=>ALU.A                                        Premise(F136)
	S45= ALU.A=FU(base)                                         Path(S41,S44)
	S46= IR_EX.Out15_0=>IMMEXT.In                               Premise(F137)
	S47= IMMEXT.In=offset                                       Path(S43,S46)
	S48= IMMEXT.Out={16{offset[15]},offset}                     IMMEXT(S47)
	S49= IMMEXT.Out=>ALU.B                                      Premise(F138)
	S50= ALU.B={16{offset[15]},offset}                          Path(S48,S49)
	S51= ALU.Out=FU(base)+{16{offset[15]},offset}               ALU(S45,S50)
	S52= ALU.Out=>ALUOut_MEM.In                                 Premise(F140)
	S53= ALUOut_MEM.In=FU(base)+{16{offset[15]},offset}         Path(S51,S52)
	S54= IR_EX.Out=>IR_MEM.In                                   Premise(F141)
	S55= IR_MEM.In={36,rS,rT,offset}                            Path(S42,S54)
	S56= CtrlPC=0                                               Premise(F159)
	S57= CtrlPCInc=0                                            Premise(F160)
	S58= PC[Out]=addr+4                                         PC-Hold(S34,S56,S57)
	S59= CtrlCP0=0                                              Premise(F163)
	S60= CP0[ASID]=pid                                          CP0-Hold(S36,S59)
	S61= CtrlALUOut_MEM=1                                       Premise(F170)
	S62= [ALUOut_MEM]=FU(base)+{16{offset[15]},offset}          ALUOut_MEM-Write(S53,S61)
	S63= CtrlIR_MEM=1                                           Premise(F171)
	S64= [IR_MEM]={36,rS,rT,offset}                             IR_MEM-Write(S55,S63)
	S65= DMem[{pid,FU(base)+{16{offset[15]},offset}}]=a         Premise(F177)

MEM	S66= CP0.ASID=pid                                           CP0-Read-ASID(S60)
	S67= ALUOut_MEM.Out=FU(base)+{16{offset[15]},offset}        ALUOut_MEM-Out(S62)
	S68= IR_MEM.Out={36,rS,rT,offset}                           IR_MEM-Out(S64)
	S69= ALUOut_MEM.Out=>DMem.RAddr                             Premise(F203)
	S70= DMem.RAddr=FU(base)+{16{offset[15]},offset}            Path(S67,S69)
	S71= CP0.ASID=>DMem.ASID                                    Premise(F204)
	S72= DMem.ASID=pid                                          Path(S66,S71)
	S73= DMem.Out=>DR_WB.In                                     Premise(F205)
	S74= IR_MEM.Out=>IR_WB.In                                   Premise(F206)
	S75= IR_WB.In={36,rS,rT,offset}                             Path(S68,S74)
	S76= ALUOut_MEM.Out=>ALUOut_WB.In                           Premise(F207)
	S77= ALUOut_WB.In=FU(base)+{16{offset[15]},offset}          Path(S67,S76)
	S78= CtrlPC=0                                               Premise(F217)
	S79= CtrlPCInc=0                                            Premise(F218)
	S80= PC[Out]=addr+4                                         PC-Hold(S58,S78,S79)
	S81= CtrlDMem=0                                             Premise(F230)
	S82= DMem.Out=a                                             DMem-Read(S72,S70,S65,S81)
	S83= DR_WB.In=a                                             Path(S82,S73)
	S84= CtrlDR_WB=1                                            Premise(F232)
	S85= [DR_WB]=a                                              DR_WB-Write(S83,S84)
	S86= CtrlIR_WB=1                                            Premise(F233)
	S87= [IR_WB]={36,rS,rT,offset}                              IR_WB-Write(S75,S86)
	S88= CtrlALUOut_WB=1                                        Premise(F234)
	S89= [ALUOut_WB]=FU(base)+{16{offset[15]},offset}           ALUOut_WB-Write(S77,S88)

WB	S90= DR_WB.Out=a                                            DR_WB-Out(S85)
	S91= IR_WB.Out20_16=rT                                      IR-Out(S87)
	S92= ALUOut_WB.Out1_0={FU(base)+{16{offset[15]},offset}}[1:0]ALUOut_WB-Out(S89)
	S93= IR_WB.Out20_16=>GPR.WReg                               Premise(F268)
	S94= GPR.WReg=rT                                            Path(S91,S93)
	S95= DR_WB.Out=>MemDataSelL.In                              Premise(F269)
	S96= MemDataSelL.In=a                                       Path(S90,S95)
	S97= ALUOut_WB.Out1_0=>MemDataSelL.Addr                     Premise(F270)
	S98= MemDataSelL.Addr={FU(base)+{16{offset[15]},offset}}[1:0]Path(S92,S97)
	S99= MemDataSelL.Out={24{0},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}MemDataSelL(S96,S98)
	S100= MemDataSelL.Out=>GPR.WData                            Premise(F272)
	S101= GPR.WData={24{0},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}Path(S99,S100)
	S102= CtrlPC=0                                              Premise(F275)
	S103= CtrlPCInc=0                                           Premise(F276)
	S104= PC[Out]=addr+4                                        PC-Hold(S80,S102,S103)
	S105= CtrlGPR=1                                             Premise(F283)
	S106= GPR[rT]={24{0},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S94,S101,S105)

POST	S104= PC[Out]=addr+4                                        PC-Hold(S80,S102,S103)
	S106= GPR[rT]={24{0},a[{FU(base)+{16{offset[15]},offset}}[1:0]*8+7,{FU(base)+{16{offset[15]},offset}}[1:0]*8]}GPR-Write(S94,S101,S105)

